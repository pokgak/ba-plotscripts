<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:36:08.192" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.790" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:08.798" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:09.989" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:08.788" endtime="20201110 08:36:09.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:09.993" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:09.991" endtime="20201110 08:36:09.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.787" endtime="20201110 08:36:09.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:09.998" endtime="20201110 08:36:10.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:09.996" endtime="20201110 08:36:10.214"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.227" endtime="20201110 08:36:10.239"></status>
</kw>
<msg timestamp="20201110 08:36:10.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.225" endtime="20201110 08:36:10.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.241" endtime="20201110 08:36:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.245" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:10.243" endtime="20201110 08:36:10.246"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:10.223" endtime="20201110 08:36:10.247"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:10.220" endtime="20201110 08:36:10.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.219" endtime="20201110 08:36:10.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:10.254" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:10.253" endtime="20201110 08:36:10.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.249" endtime="20201110 08:36:10.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.218" endtime="20201110 08:36:10.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.218" endtime="20201110 08:36:10.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.255" endtime="20201110 08:36:10.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.216" endtime="20201110 08:36:10.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.259" endtime="20201110 08:36:10.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.214" endtime="20201110 08:36:10.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.785" endtime="20201110 08:36:10.262"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:10.268" endtime="20201110 08:36:10.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.266" endtime="20201110 08:36:10.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.301" endtime="20201110 08:36:10.313"></status>
</kw>
<msg timestamp="20201110 08:36:10.314" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.300" endtime="20201110 08:36:10.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.315" endtime="20201110 08:36:10.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.319" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:10.317" endtime="20201110 08:36:10.320"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:10.297" endtime="20201110 08:36:10.320"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:10.294" endtime="20201110 08:36:10.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.293" endtime="20201110 08:36:10.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:10.325" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:10.324" endtime="20201110 08:36:10.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.322" endtime="20201110 08:36:10.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.292" endtime="20201110 08:36:10.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.291" endtime="20201110 08:36:10.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.327" endtime="20201110 08:36:10.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.290" endtime="20201110 08:36:10.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.288" endtime="20201110 08:36:10.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.265" endtime="20201110 08:36:10.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.337" endtime="20201110 08:36:10.345"></status>
</kw>
<msg timestamp="20201110 08:36:10.346" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.335" endtime="20201110 08:36:10.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.348" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:10.347" endtime="20201110 08:36:10.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.349" endtime="20201110 08:36:10.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.332" endtime="20201110 08:36:10.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.330" endtime="20201110 08:36:10.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.356" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:36:10.355" endtime="20201110 08:36:10.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.358" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:36:10.357" endtime="20201110 08:36:10.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.352" endtime="20201110 08:36:10.358"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:10.262" endtime="20201110 08:36:10.359" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:08.333" endtime="20201110 08:36:10.361"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.412" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:10.420" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:11.598" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:10.411" endtime="20201110 08:36:11.599"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.604" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:11.601" endtime="20201110 08:36:11.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.409" endtime="20201110 08:36:11.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.610" endtime="20201110 08:36:11.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.607" endtime="20201110 08:36:11.834"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.846" endtime="20201110 08:36:11.859"></status>
</kw>
<msg timestamp="20201110 08:36:11.859" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.845" endtime="20201110 08:36:11.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.860" endtime="20201110 08:36:11.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.865" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:11.863" endtime="20201110 08:36:11.865"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:11.842" endtime="20201110 08:36:11.866"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:11.840" endtime="20201110 08:36:11.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.839" endtime="20201110 08:36:11.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:11.870" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:11.870" endtime="20201110 08:36:11.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.868" endtime="20201110 08:36:11.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.838" endtime="20201110 08:36:11.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.838" endtime="20201110 08:36:11.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.872" endtime="20201110 08:36:11.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.836" endtime="20201110 08:36:11.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.875" endtime="20201110 08:36:11.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.835" endtime="20201110 08:36:11.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.408" endtime="20201110 08:36:11.877"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.883" endtime="20201110 08:36:11.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.881" endtime="20201110 08:36:11.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.916" endtime="20201110 08:36:11.928"></status>
</kw>
<msg timestamp="20201110 08:36:11.929" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.914" endtime="20201110 08:36:11.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.932" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.930" endtime="20201110 08:36:11.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.935" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:11.933" endtime="20201110 08:36:11.935"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:11.912" endtime="20201110 08:36:11.936"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:11.910" endtime="20201110 08:36:11.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.909" endtime="20201110 08:36:11.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:11.940" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:11.939" endtime="20201110 08:36:11.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.937" endtime="20201110 08:36:11.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.908" endtime="20201110 08:36:11.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.907" endtime="20201110 08:36:11.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.942" endtime="20201110 08:36:11.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.906" endtime="20201110 08:36:11.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.904" endtime="20201110 08:36:11.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.880" endtime="20201110 08:36:11.944"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:11.946" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.954" endtime="20201110 08:36:11.964"></status>
</kw>
<msg timestamp="20201110 08:36:11.964" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.952" endtime="20201110 08:36:11.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:11.965" endtime="20201110 08:36:11.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.968" endtime="20201110 08:36:11.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.950" endtime="20201110 08:36:11.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.948" endtime="20201110 08:36:11.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.979" endtime="20201110 08:36:12.270"></status>
</kw>
<msg timestamp="20201110 08:36:12.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061301903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061303028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.977" endtime="20201110 08:36:12.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061301903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061303028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.274" endtime="20201110 08:36:12.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.283" endtime="20201110 08:36:12.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.973" endtime="20201110 08:36:12.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.971" endtime="20201110 08:36:12.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.290" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:12.289" endtime="20201110 08:36:12.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.295" level="INFO">VALUE: [{'time': 0.061301903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061303028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.061329431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6402999999994292e-05, 'source_diff': 2.6402999999994292e-05}, {'time': 0.061330556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.061349792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9235999999998865e-05, 'source_diff': 1.9235999999998865e-05}, {'time': 0.061350917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.0613705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.958300000000357e-05, 'source_diff': 1.958300000000357e-05}, {'time': 0.061371583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.061388722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.713899999999935e-05, 'source_diff': 1.713899999999935e-05}, {'time': 0.061389764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.061404958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194000000003094e-05, 'source_diff': 1.5194000000003094e-05}, {'time': 0.061406097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.061435278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.918100000000312e-05, 'source_diff': 2.918100000000312e-05}, {'time': 0.061436403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.061461889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5485999999998177e-05, 'source_diff': 2.5485999999998177e-05}, {'time': 0.061463, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.061474458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000005852e-05, 'source_diff': 1.1458000000005852e-05}, {'time': 0.061475583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.061506014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0430999999997432e-05, 'source_diff': 3.0430999999997432e-05}, {'time': 0.061507153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.061530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2999999999995246e-05, 'source_diff': 2.2999999999995246e-05}, {'time': 0.061531236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000058848e-06, 'source_diff': 1.0830000000058848e-06}, {'time': 0.061555778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4541999999995456e-05, 'source_diff': 2.4541999999995456e-05}, {'time': 0.061556903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.061585792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8888999999997222e-05, 'source_diff': 2.8888999999997222e-05}, {'time': 0.061586972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1799999999964617e-06, 'source_diff': 1.1799999999964617e-06}, {'time': 0.061602111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139000000004288e-05, 'source_diff': 1.5139000000004288e-05}, {'time': 0.061603222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.061621847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.061622972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.061652486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9514000000001317e-05, 'source_diff': 2.9514000000001317e-05}, {'time': 0.061653611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.061681278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.766700000000205e-05, 'source_diff': 2.766700000000205e-05}, {'time': 0.061682361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.061694764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.061695875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.061711722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584699999999939e-05, 'source_diff': 1.584699999999939e-05}, {'time': 0.061712819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000054547e-06, 'source_diff': 1.0970000000054547e-06}, {'time': 0.061742069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9249999999994558e-05, 'source_diff': 2.9249999999994558e-05}, {'time': 0.061743153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0840000000053585e-06, 'source_diff': 1.0840000000053585e-06}, {'time': 0.061763333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0179999999994647e-05, 'source_diff': 2.0179999999994647e-05}, {'time': 0.061764431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0980000000049284e-06, 'source_diff': 1.0980000000049284e-06}, {'time': 0.061787736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.330500000000124e-05, 'source_diff': 2.330500000000124e-05}, {'time': 0.061788847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.061800319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.061801417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.061825972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.455500000000249e-05, 'source_diff': 2.455500000000249e-05}, {'time': 0.061827111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.061850069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2958000000003476e-05, 'source_diff': 2.2958000000003476e-05}, {'time': 0.061851181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.061864528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000003828e-05, 'source_diff': 1.3347000000003828e-05}, {'time': 0.061865625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.061877083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.061878194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.06189775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9556000000003904e-05, 'source_diff': 1.9556000000003904e-05}, {'time': 0.061898875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.061919361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.0619205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.06195125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.074999999999606e-05, 'source_diff': 3.074999999999606e-05}, {'time': 0.061952417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.061977833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5416000000000327e-05, 'source_diff': 2.5416000000000327e-05}, {'time': 0.061979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999955052e-06, 'source_diff': 1.1949999999955052e-06}, {'time': 0.061992597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3569000000004938e-05, 'source_diff': 1.3569000000004938e-05}, {'time': 0.061993708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.062022306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8597999999997736e-05, 'source_diff': 2.8597999999997736e-05}, {'time': 0.062023417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.062035181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000004382e-05, 'source_diff': 1.1764000000004382e-05}, {'time': 0.062036319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.062064889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8569999999998597e-05, 'source_diff': 2.8569999999998597e-05}, {'time': 0.062066, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000050246e-06, 'source_diff': 1.1110000000050246e-06}, {'time': 0.062092083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6082999999996193e-05, 'source_diff': 2.6082999999996193e-05}, {'time': 0.062093222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.062122764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9541999999993518e-05, 'source_diff': 2.9541999999993518e-05}, {'time': 0.062123861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000054547e-06, 'source_diff': 1.0970000000054547e-06}, {'time': 0.062140917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7055999999994464e-05, 'source_diff': 1.7055999999994464e-05}, {'time': 0.062142028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000050246e-06, 'source_diff': 1.1110000000050246e-06}, {'time': 0.062170361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8332999999998443e-05, 'source_diff': 2.8332999999998443e-05}, {'time': 0.062171417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062185986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.062187111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.062213208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6096999999995762e-05, 'source_diff': 2.6096999999995762e-05}, {'time': 0.062214347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.06223325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.890299999999373e-05, 'source_diff': 1.890299999999373e-05}, {'time': 0.062234375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.062251153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6777999999995075e-05, 'source_diff': 1.6777999999995075e-05}, {'time': 0.06225225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000054547e-06, 'source_diff': 1.0970000000054547e-06}, {'time': 0.062276167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.39169999999983e-05, 'source_diff': 2.39169999999983e-05}, {'time': 0.062277347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1799999999964617e-06, 'source_diff': 1.1799999999964617e-06}, {'time': 0.062307097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9750000000001997e-05, 'source_diff': 2.9750000000001997e-05}, {'time': 0.062308236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.062336181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7944999999994502e-05, 'source_diff': 2.7944999999994502e-05}, {'time': 0.062337306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.062360278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2971999999996107e-05, 'source_diff': 2.2971999999996107e-05}, {'time': 0.062361417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1390000000041645e-06, 'source_diff': 1.1390000000041645e-06}, {'time': 0.062380028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.861099999999477e-05, 'source_diff': 1.861099999999477e-05}, {'time': 0.062381139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000050246e-06, 'source_diff': 1.1110000000050246e-06}, {'time': 0.062400722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.958299999999663e-05, 'source_diff': 1.958299999999663e-05}, {'time': 0.062401806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.062422611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.080500000000568e-05, 'source_diff': 2.080500000000568e-05}, {'time': 0.062423792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999959353e-06, 'source_diff': 1.1809999999959353e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:12.291" endtime="20201110 08:36:12.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.286" endtime="20201110 08:36:12.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:12.322" level="INFO">${debug-compressed} = {'source_diff': [0, 1.1250000000045945e-06, 2.6402999999994292e-05, 1.1250000000045945e-06, 1.9235999999998865e-05, 1.1249999999976557e-06, 1.958300000000357e-05, 1.082999999998946e-06, 1.713899999999...</msg>
<status status="PASS" starttime="20201110 08:36:12.298" endtime="20201110 08:36:12.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.327" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:12.326" endtime="20201110 08:36:12.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.332" level="INFO">VALUE: {'source_diff': [0, 1.1250000000045945e-06, 2.6402999999994292e-05, 1.1250000000045945e-06, 1.9235999999998865e-05, 1.1249999999976557e-06, 1.958300000000357e-05, 1.082999999998946e-06, 1.713899999999935e-05, 1.0419999999997098e-06, 1.5194000000003094e-05, 1.1389999999972256e-06, 2.918100000000312e-05, 1.1249999999976557e-06, 2.5485999999998177e-05, 1.1109999999980857e-06, 1.1458000000005852e-05, 1.1249999999976557e-06, 3.0430999999997432e-05, 1.1390000000041645e-06, 2.2999999999995246e-05, 1.0830000000058848e-06, 2.4541999999995456e-05, 1.1250000000045945e-06, 2.8888999999997222e-05, 1.1799999999964617e-06, 1.5139000000004288e-05, 1.1109999999980857e-06, 1.862500000000128e-05, 1.1249999999976557e-06, 2.9514000000001317e-05, 1.1249999999976557e-06, 2.766700000000205e-05, 1.082999999998946e-06, 1.2403000000001108e-05, 1.1109999999980857e-06, 1.584699999999939e-05, 1.0970000000054547e-06, 2.9249999999994558e-05, 1.0840000000053585e-06, 2.0179999999994647e-05, 1.0980000000049284e-06, 2.330500000000124e-05, 1.1109999999980857e-06, 1.1471999999998483e-05, 1.0979999999979895e-06, 2.455500000000249e-05, 1.1389999999972256e-06, 2.2958000000003476e-05, 1.1119999999975594e-06, 1.3347000000003828e-05, 1.0969999999985158e-06, 1.1457999999998913e-05, 1.1109999999980857e-06, 1.9556000000003904e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.1390000000041645e-06, 3.074999999999606e-05, 1.1670000000033043e-06, 2.5416000000000327e-05, 1.1949999999955052e-06, 1.3569000000004938e-05, 1.1109999999980857e-06, 2.8597999999997736e-05, 1.1109999999980857e-06, 1.1764000000004382e-05, 1.137999999997752e-06, 2.8569999999998597e-05, 1.1110000000050246e-06, 2.6082999999996193e-05, 1.1390000000041645e-06, 2.9541999999993518e-05, 1.0970000000054547e-06, 1.7055999999994464e-05, 1.1110000000050246e-06, 2.8332999999998443e-05, 1.0559999999992797e-06, 1.4568999999999e-05, 1.1250000000045945e-06, 2.6096999999995762e-05, 1.1390000000041645e-06, 1.890299999999373e-05, 1.1250000000045945e-06, 1.6777999999995075e-05, 1.0970000000054547e-06, 2.39169999999983e-05, 1.1799999999964617e-06, 2.9750000000001997e-05, 1.1390000000041645e-06, 2.7944999999994502e-05, 1.1250000000045945e-06, 2.2971999999996107e-05, 1.1390000000041645e-06, 1.861099999999477e-05, 1.1110000000050246e-06, 1.958299999999663e-05, 1.0839999999984196e-06, 2.080500000000568e-05, 1.1809999999959353e-06], 'eventdiff': [0, 1.1250000000045945e-06, 2.6402999999994292e-05, 1.1250000000045945e-06, 1.9235999999998865e-05, 1.1249999999976557e-06, 1.958300000000357e-05, 1.082999999998946e-06, 1.713899999999935e-05, 1.0419999999997098e-06, 1.5194000000003094e-05, 1.1389999999972256e-06, 2.918100000000312e-05, 1.1249999999976557e-06, 2.5485999999998177e-05, 1.1109999999980857e-06, 1.1458000000005852e-05, 1.1249999999976557e-06, 3.0430999999997432e-05, 1.1390000000041645e-06, 2.2999999999995246e-05, 1.0830000000058848e-06, 2.4541999999995456e-05, 1.1250000000045945e-06, 2.8888999999997222e-05, 1.1799999999964617e-06, 1.5139000000004288e-05, 1.1109999999980857e-06, 1.862500000000128e-05, 1.1249999999976557e-06, 2.9514000000001317e-05, 1.1249999999976557e-06, 2.766700000000205e-05, 1.082999999998946e-06, 1.2403000000001108e-05, 1.1109999999980857e-06, 1.584699999999939e-05, 1.0970000000054547e-06, 2.9249999999994558e-05, 1.0840000000053585e-06, 2.0179999999994647e-05, 1.0980000000049284e-06, 2.330500000000124e-05, 1.1109999999980857e-06, 1.1471999999998483e-05, 1.0979999999979895e-06, 2.455500000000249e-05, 1.1389999999972256e-06, 2.2958000000003476e-05, 1.1119999999975594e-06, 1.3347000000003828e-05, 1.0969999999985158e-06, 1.1457999999998913e-05, 1.1109999999980857e-06, 1.9556000000003904e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.1390000000041645e-06, 3.074999999999606e-05, 1.1670000000033043e-06, 2.5416000000000327e-05, 1.1949999999955052e-06, 1.3569000000004938e-05, 1.1109999999980857e-06, 2.8597999999997736e-05, 1.1109999999980857e-06, 1.1764000000004382e-05, 1.137999999997752e-06, 2.8569999999998597e-05, 1.1110000000050246e-06, 2.6082999999996193e-05, 1.1390000000041645e-06, 2.9541999999993518e-05, 1.0970000000054547e-06, 1.7055999999994464e-05, 1.1110000000050246e-06, 2.8332999999998443e-05, 1.0559999999992797e-06, 1.4568999999999e-05, 1.1250000000045945e-06, 2.6096999999995762e-05, 1.1390000000041645e-06, 1.890299999999373e-05, 1.1250000000045945e-06, 1.6777999999995075e-05, 1.0970000000054547e-06, 2.39169999999983e-05, 1.1799999999964617e-06, 2.9750000000001997e-05, 1.1390000000041645e-06, 2.7944999999994502e-05, 1.1250000000045945e-06, 2.2971999999996107e-05, 1.1390000000041645e-06, 1.861099999999477e-05, 1.1110000000050246e-06, 1.958299999999663e-05, 1.0839999999984196e-06, 2.080500000000568e-05, 1.1809999999959353e-06], 'time': [0.061301903, 0.061303028, 0.061329431, 0.061330556, 0.061349792, 0.061350917, 0.0613705, 0.061371583, 0.061388722, 0.061389764, 0.061404958, 0.061406097, 0.061435278, 0.061436403, 0.061461889, 0.061463, 0.061474458, 0.061475583, 0.061506014, 0.061507153, 0.061530153, 0.061531236, 0.061555778, 0.061556903, 0.061585792, 0.061586972, 0.061602111, 0.061603222, 0.061621847, 0.061622972, 0.061652486, 0.061653611, 0.061681278, 0.061682361, 0.061694764, 0.061695875, 0.061711722, 0.061712819, 0.061742069, 0.061743153, 0.061763333, 0.061764431, 0.061787736, 0.061788847, 0.061800319, 0.061801417, 0.061825972, 0.061827111, 0.061850069, 0.061851181, 0.061864528, 0.061865625, 0.061877083, 0.061878194, 0.06189775, 0.061898875, 0.061919361, 0.0619205, 0.06195125, 0.061952417, 0.061977833, 0.061979028, 0.061992597, 0.061993708, 0.062022306, 0.062023417, 0.062035181, 0.062036319, 0.062064889, 0.062066, 0.062092083, 0.062093222, 0.062122764, 0.062123861, 0.062140917, 0.062142028, 0.062170361, 0.062171417, 0.062185986, 0.062187111, 0.062213208, 0.062214347, 0.06223325, 0.062234375, 0.062251153, 0.06225225, 0.062276167, 0.062277347, 0.062307097, 0.062308236, 0.062336181, 0.062337306, 0.062360278, 0.062361417, 0.062380028, 0.062381139, 0.062400722, 0.062401806, 0.062422611, 0.062423792], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:12.329" endtime="20201110 08:36:12.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.323" endtime="20201110 08:36:12.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.337" level="INFO">${RESULT} = [{'time': 0.061303028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1250000000045945e-06, 'source_diff': 1.1250000000045945e-06}, {'time': 0.061330556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:12.334" endtime="20201110 08:36:12.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:12.352" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.11099999999808...</msg>
<status status="PASS" starttime="20201110 08:36:12.338" endtime="20201110 08:36:12.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.357" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:12.356" endtime="20201110 08:36:12.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.359" level="INFO">VALUE: [1.1250000000045945e-06, 1.1250000000045945e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1390000000041645e-06, 1.0830000000058848e-06, 1.1250000000045945e-06, 1.1799999999964617e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.0970000000054547e-06, 1.0840000000053585e-06, 1.0980000000049284e-06, 1.1109999999980857e-06, 1.0979999999979895e-06, 1.1389999999972256e-06, 1.1119999999975594e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1390000000041645e-06, 1.1670000000033043e-06, 1.1949999999955052e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.137999999997752e-06, 1.1110000000050246e-06, 1.1390000000041645e-06, 1.0970000000054547e-06, 1.1110000000050246e-06, 1.0559999999992797e-06, 1.1250000000045945e-06, 1.1390000000041645e-06, 1.1250000000045945e-06, 1.0970000000054547e-06, 1.1799999999964617e-06, 1.1390000000041645e-06, 1.1250000000045945e-06, 1.1390000000041645e-06, 1.1110000000050246e-06, 1.0839999999984196e-06, 1.1809999999959353e-06]</msg>
<status status="PASS" starttime="20201110 08:36:12.358" endtime="20201110 08:36:12.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.353" endtime="20201110 08:36:12.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.362" endtime="20201110 08:36:12.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.366" endtime="20201110 08:36:12.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.364" endtime="20201110 08:36:12.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.361" endtime="20201110 08:36:12.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.947" endtime="20201110 08:36:12.387"></status>
</kw>
<msg timestamp="20201110 08:36:12.387" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.394" endtime="20201110 08:36:12.403"></status>
</kw>
<msg timestamp="20201110 08:36:12.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.393" endtime="20201110 08:36:12.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.405" endtime="20201110 08:36:12.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.407" endtime="20201110 08:36:12.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.390" endtime="20201110 08:36:12.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.389" endtime="20201110 08:36:12.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.416" endtime="20201110 08:36:12.702"></status>
</kw>
<msg timestamp="20201110 08:36:12.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.415" endtime="20201110 08:36:12.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.706" endtime="20201110 08:36:12.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.715" endtime="20201110 08:36:12.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.412" endtime="20201110 08:36:12.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.410" endtime="20201110 08:36:12.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.721" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:12.720" endtime="20201110 08:36:12.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.726" level="INFO">VALUE: [{'time': 0.018467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018468833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018494222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.538900000000066e-05, 'source_diff': 2.538900000000066e-05}, {'time': 0.018495347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018523611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.01852475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018536514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.018537625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018564333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6708000000000287e-05, 'source_diff': 2.6708000000000287e-05}, {'time': 0.018565458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018580653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194999999999098e-05, 'source_diff': 1.5194999999999098e-05}, {'time': 0.018581792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018593236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.018594375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018613903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9528000000001294e-05, 'source_diff': 1.9528000000001294e-05}, {'time': 0.018615028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018627792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2764000000001913e-05, 'source_diff': 1.2764000000001913e-05}, {'time': 0.018628847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018646542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.769499999999813e-05, 'source_diff': 1.769499999999813e-05}, {'time': 0.018647653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018677792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.018678917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018693486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.018694667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.018716958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2290999999997202e-05, 'source_diff': 2.2290999999997202e-05}, {'time': 0.018718083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018743875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5792000000000176e-05, 'source_diff': 2.5792000000000176e-05}, {'time': 0.018744986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018773556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8569999999998597e-05, 'source_diff': 2.8569999999998597e-05}, {'time': 0.018774694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018801389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.669500000000019e-05, 'source_diff': 2.669500000000019e-05}, {'time': 0.018802542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1529999999967955e-06, 'source_diff': 1.1529999999967955e-06}, {'time': 0.018817389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4847000000001859e-05, 'source_diff': 1.4847000000001859e-05}, {'time': 0.018818528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018844028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5499999999997747e-05, 'source_diff': 2.5499999999997747e-05}, {'time': 0.018845111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018863097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7985999999997615e-05, 'source_diff': 1.7985999999997615e-05}, {'time': 0.018864222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018879736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5514000000001194e-05, 'source_diff': 1.5514000000001194e-05}, {'time': 0.018880917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018903208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.229100000000067e-05, 'source_diff': 2.229100000000067e-05}, {'time': 0.018904319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018930722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.640300000000123e-05, 'source_diff': 2.640300000000123e-05}, {'time': 0.018931847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018944556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.018945681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018973639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7958000000001537e-05, 'source_diff': 2.7958000000001537e-05}, {'time': 0.018974764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018986528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1763999999997443e-05, 'source_diff': 1.1763999999997443e-05}, {'time': 0.018987667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019018403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.019019528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019045319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5791000000000702e-05, 'source_diff': 2.5791000000000702e-05}, {'time': 0.019046431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019058222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1791000000000579e-05, 'source_diff': 1.1791000000000579e-05}, {'time': 0.019059319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019072333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.019073472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019103917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.019105056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019117417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2361000000002398e-05, 'source_diff': 1.2361000000002398e-05}, {'time': 0.019118556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019135611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.705500000000193e-05, 'source_diff': 1.705500000000193e-05}, {'time': 0.019136722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019164375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.765300000000248e-05, 'source_diff': 2.765300000000248e-05}, {'time': 0.0191655, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019187542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.019188681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019199819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1138000000000814e-05, 'source_diff': 1.1138000000000814e-05}, {'time': 0.019200931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019227639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6708000000000287e-05, 'source_diff': 2.6708000000000287e-05}, {'time': 0.019228778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019242417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3639000000002788e-05, 'source_diff': 1.3639000000002788e-05}, {'time': 0.019243528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019268375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.019269486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019299944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0458000000000568e-05, 'source_diff': 3.0458000000000568e-05}, {'time': 0.019301056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019330569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9512999999998374e-05, 'source_diff': 2.9512999999998374e-05}, {'time': 0.019331694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019355625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.393100000000134e-05, 'source_diff': 2.393100000000134e-05}, {'time': 0.019356792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019375653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.886099999999849e-05, 'source_diff': 1.886099999999849e-05}, {'time': 0.019376778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019389486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019390611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019415139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4528000000002825e-05, 'source_diff': 2.4528000000002825e-05}, {'time': 0.019416264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019439875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.019441028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019466819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5791000000000702e-05, 'source_diff': 2.5791000000000702e-05}, {'time': 0.019467903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019480903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.019482042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019511542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9499999999998278e-05, 'source_diff': 2.9499999999998278e-05}, {'time': 0.019512667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019525986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.019527111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019556333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9221999999998888e-05, 'source_diff': 2.9221999999998888e-05}, {'time': 0.019557444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:12.722" endtime="20201110 08:36:12.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.718" endtime="20201110 08:36:12.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:12.753" level="INFO">${debug-compressed} = {'source_diff': [0, 1.179999999999931e-06, 2.538900000000066e-05, 1.1249999999976557e-06, 2.8264000000000067e-05, 1.139000000000695e-06, 1.1764000000000913e-05, 1.1109999999980857e-06, 2.6708000000000...</msg>
<status status="PASS" starttime="20201110 08:36:12.729" endtime="20201110 08:36:12.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.757" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:12.756" endtime="20201110 08:36:12.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.761" level="INFO">VALUE: {'source_diff': [0, 1.179999999999931e-06, 2.538900000000066e-05, 1.1249999999976557e-06, 2.8264000000000067e-05, 1.139000000000695e-06, 1.1764000000000913e-05, 1.1109999999980857e-06, 2.6708000000000287e-05, 1.125000000001125e-06, 1.5194999999999098e-05, 1.139000000000695e-06, 1.1443999999999344e-05, 1.139000000000695e-06, 1.9528000000001294e-05, 1.1249999999976557e-06, 1.2764000000001913e-05, 1.054999999999806e-06, 1.769499999999813e-05, 1.1110000000015552e-06, 3.0138999999998473e-05, 1.125000000001125e-06, 1.4568999999999e-05, 1.1810000000028742e-06, 2.2290999999997202e-05, 1.125000000001125e-06, 2.5792000000000176e-05, 1.1110000000015552e-06, 2.8569999999998597e-05, 1.1380000000012214e-06, 2.669500000000019e-05, 1.1529999999967955e-06, 1.4847000000001859e-05, 1.139000000000695e-06, 2.5499999999997747e-05, 1.0830000000024154e-06, 1.7985999999997615e-05, 1.125000000001125e-06, 1.5514000000001194e-05, 1.1809999999994047e-06, 2.229100000000067e-05, 1.1109999999980857e-06, 2.640300000000123e-05, 1.125000000001125e-06, 1.2708999999999637e-05, 1.1249999999976557e-06, 2.7958000000001537e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 3.073599999999996e-05, 1.125000000001125e-06, 2.5791000000000702e-05, 1.1119999999975594e-06, 1.1791000000000579e-05, 1.0970000000019853e-06, 1.3013999999998693e-05, 1.139000000000695e-06, 3.044500000000047e-05, 1.1389999999972256e-06, 1.2361000000002398e-05, 1.1389999999972256e-06, 1.705500000000193e-05, 1.1109999999980857e-06, 2.765300000000248e-05, 1.1249999999976557e-06, 2.2041999999999895e-05, 1.139000000000695e-06, 1.1138000000000814e-05, 1.1120000000010288e-06, 2.6708000000000287e-05, 1.1389999999972256e-06, 1.3639000000002788e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.1109999999980857e-06, 3.0458000000000568e-05, 1.1120000000010288e-06, 2.9512999999998374e-05, 1.125000000001125e-06, 2.393100000000134e-05, 1.1669999999998348e-06, 1.886099999999849e-05, 1.125000000001125e-06, 1.2708000000000164e-05, 1.1249999999976557e-06, 2.4528000000002825e-05, 1.1249999999976557e-06, 2.361099999999977e-05, 1.153000000000265e-06, 2.5791000000000702e-05, 1.084000000001889e-06, 1.2999999999999123e-05, 1.139000000000695e-06, 2.9499999999998278e-05, 1.125000000001125e-06, 1.331899999999775e-05, 1.125000000001125e-06, 2.9221999999998888e-05, 1.1110000000015552e-06], 'eventdiff': [0, 1.179999999999931e-06, 2.538900000000066e-05, 1.1249999999976557e-06, 2.8264000000000067e-05, 1.139000000000695e-06, 1.1764000000000913e-05, 1.1109999999980857e-06, 2.6708000000000287e-05, 1.125000000001125e-06, 1.5194999999999098e-05, 1.139000000000695e-06, 1.1443999999999344e-05, 1.139000000000695e-06, 1.9528000000001294e-05, 1.1249999999976557e-06, 1.2764000000001913e-05, 1.054999999999806e-06, 1.769499999999813e-05, 1.1110000000015552e-06, 3.0138999999998473e-05, 1.125000000001125e-06, 1.4568999999999e-05, 1.1810000000028742e-06, 2.2290999999997202e-05, 1.125000000001125e-06, 2.5792000000000176e-05, 1.1110000000015552e-06, 2.8569999999998597e-05, 1.1380000000012214e-06, 2.669500000000019e-05, 1.1529999999967955e-06, 1.4847000000001859e-05, 1.139000000000695e-06, 2.5499999999997747e-05, 1.0830000000024154e-06, 1.7985999999997615e-05, 1.125000000001125e-06, 1.5514000000001194e-05, 1.1809999999994047e-06, 2.229100000000067e-05, 1.1109999999980857e-06, 2.640300000000123e-05, 1.125000000001125e-06, 1.2708999999999637e-05, 1.1249999999976557e-06, 2.7958000000001537e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 3.073599999999996e-05, 1.125000000001125e-06, 2.5791000000000702e-05, 1.1119999999975594e-06, 1.1791000000000579e-05, 1.0970000000019853e-06, 1.3013999999998693e-05, 1.139000000000695e-06, 3.044500000000047e-05, 1.1389999999972256e-06, 1.2361000000002398e-05, 1.1389999999972256e-06, 1.705500000000193e-05, 1.1109999999980857e-06, 2.765300000000248e-05, 1.1249999999976557e-06, 2.2041999999999895e-05, 1.139000000000695e-06, 1.1138000000000814e-05, 1.1120000000010288e-06, 2.6708000000000287e-05, 1.1389999999972256e-06, 1.3639000000002788e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.1109999999980857e-06, 3.0458000000000568e-05, 1.1120000000010288e-06, 2.9512999999998374e-05, 1.125000000001125e-06, 2.393100000000134e-05, 1.1669999999998348e-06, 1.886099999999849e-05, 1.125000000001125e-06, 1.2708000000000164e-05, 1.1249999999976557e-06, 2.4528000000002825e-05, 1.1249999999976557e-06, 2.361099999999977e-05, 1.153000000000265e-06, 2.5791000000000702e-05, 1.084000000001889e-06, 1.2999999999999123e-05, 1.139000000000695e-06, 2.9499999999998278e-05, 1.125000000001125e-06, 1.331899999999775e-05, 1.125000000001125e-06, 2.9221999999998888e-05, 1.1110000000015552e-06], 'time': [0.018467653, 0.018468833, 0.018494222, 0.018495347, 0.018523611, 0.01852475, 0.018536514, 0.018537625, 0.018564333, 0.018565458, 0.018580653, 0.018581792, 0.018593236, 0.018594375, 0.018613903, 0.018615028, 0.018627792, 0.018628847, 0.018646542, 0.018647653, 0.018677792, 0.018678917, 0.018693486, 0.018694667, 0.018716958, 0.018718083, 0.018743875, 0.018744986, 0.018773556, 0.018774694, 0.018801389, 0.018802542, 0.018817389, 0.018818528, 0.018844028, 0.018845111, 0.018863097, 0.018864222, 0.018879736, 0.018880917, 0.018903208, 0.018904319, 0.018930722, 0.018931847, 0.018944556, 0.018945681, 0.018973639, 0.018974764, 0.018986528, 0.018987667, 0.019018403, 0.019019528, 0.019045319, 0.019046431, 0.019058222, 0.019059319, 0.019072333, 0.019073472, 0.019103917, 0.019105056, 0.019117417, 0.019118556, 0.019135611, 0.019136722, 0.019164375, 0.0191655, 0.019187542, 0.019188681, 0.019199819, 0.019200931, 0.019227639, 0.019228778, 0.019242417, 0.019243528, 0.019268375, 0.019269486, 0.019299944, 0.019301056, 0.019330569, 0.019331694, 0.019355625, 0.019356792, 0.019375653, 0.019376778, 0.019389486, 0.019390611, 0.019415139, 0.019416264, 0.019439875, 0.019441028, 0.019466819, 0.019467903, 0.019480903, 0.019482042, 0.019511542, 0.019512667, 0.019525986, 0.019527111, 0.019556333, 0.019557444], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:12.758" endtime="20201110 08:36:12.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.754" endtime="20201110 08:36:12.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:12.766" level="INFO">${RESULT} = [{'time': 0.018468833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018495347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:12.763" endtime="20201110 08:36:12.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:12.779" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.179999999999931e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-...</msg>
<status status="PASS" starttime="20201110 08:36:12.767" endtime="20201110 08:36:12.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.784" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:12.783" endtime="20201110 08:36:12.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.786" level="INFO">VALUE: [1.179999999999931e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.054999999999806e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1810000000028742e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1380000000012214e-06, 1.1529999999967955e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1119999999975594e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.084000000001889e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1110000000015552e-06]</msg>
<status status="PASS" starttime="20201110 08:36:12.785" endtime="20201110 08:36:12.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.780" endtime="20201110 08:36:12.787"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.789" endtime="20201110 08:36:12.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:12.793" endtime="20201110 08:36:12.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.791" endtime="20201110 08:36:12.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.788" endtime="20201110 08:36:12.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.387" endtime="20201110 08:36:12.813"></status>
</kw>
<msg timestamp="20201110 08:36:12.813" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.821" endtime="20201110 08:36:12.830"></status>
</kw>
<msg timestamp="20201110 08:36:12.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.820" endtime="20201110 08:36:12.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:12.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:12.832" endtime="20201110 08:36:12.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.834" endtime="20201110 08:36:12.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.817" endtime="20201110 08:36:12.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.815" endtime="20201110 08:36:12.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:12.844" endtime="20201110 08:36:13.131"></status>
</kw>
<msg timestamp="20201110 08:36:13.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:12.842" endtime="20201110 08:36:13.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.135" endtime="20201110 08:36:13.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.144" endtime="20201110 08:36:13.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.840" endtime="20201110 08:36:13.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.838" endtime="20201110 08:36:13.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.150" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:13.149" endtime="20201110 08:36:13.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.155" level="INFO">VALUE: [{'time': 0.018498042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018499194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.018523764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4570000000001535e-05, 'source_diff': 2.4570000000001535e-05}, {'time': 0.018524889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018544444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.955500000000096e-05, 'source_diff': 1.955500000000096e-05}, {'time': 0.018545583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018566375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0791999999998645e-05, 'source_diff': 2.0791999999998645e-05}, {'time': 0.018567528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018590458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2930000000000866e-05, 'source_diff': 2.2930000000000866e-05}, {'time': 0.018591597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018618306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.670899999999976e-05, 'source_diff': 2.670899999999976e-05}, {'time': 0.018619458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1519999999973218e-06, 'source_diff': 1.1519999999973218e-06}, {'time': 0.018636181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6723000000003208e-05, 'source_diff': 1.6723000000003208e-05}, {'time': 0.018637292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018663694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6402000000001757e-05, 'source_diff': 2.6402000000001757e-05}, {'time': 0.018664833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018675972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018677125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018707542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0417000000001332e-05, 'source_diff': 3.0417000000001332e-05}, {'time': 0.018708653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018723542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4889000000000568e-05, 'source_diff': 1.4889000000000568e-05}, {'time': 0.018724667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018744208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.954099999999792e-05, 'source_diff': 1.954099999999792e-05}, {'time': 0.018745333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018773611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.01877475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018794903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.015300000000192e-05, 'source_diff': 2.015300000000192e-05}, {'time': 0.018796028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018811542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5514000000001194e-05, 'source_diff': 1.5514000000001194e-05}, {'time': 0.018812653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018839069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6416000000001327e-05, 'source_diff': 2.6416000000001327e-05}, {'time': 0.018840181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018855389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5207999999999194e-05, 'source_diff': 1.5207999999999194e-05}, {'time': 0.0188565, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018881042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4541999999998926e-05, 'source_diff': 2.4541999999998926e-05}, {'time': 0.018882153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.0188955, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.018896611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018921458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4846999999997982e-05, 'source_diff': 2.4846999999997982e-05}, {'time': 0.018922583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018948042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.545899999999851e-05, 'source_diff': 2.545899999999851e-05}, {'time': 0.018949181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018973083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3902000000002727e-05, 'source_diff': 2.3902000000002727e-05}, {'time': 0.018974222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018995333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.111100000000074e-05, 'source_diff': 2.111100000000074e-05}, {'time': 0.018996444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019021917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.547299999999808e-05, 'source_diff': 2.547299999999808e-05}, {'time': 0.019023056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019050681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.019051806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019081319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9512999999998374e-05, 'source_diff': 2.9512999999998374e-05}, {'time': 0.019082444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019104167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.17229999999978e-05, 'source_diff': 2.17229999999978e-05}, {'time': 0.019105292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019134528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9236000000001927e-05, 'source_diff': 2.9236000000001927e-05}, {'time': 0.019135625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019153931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8305999999999184e-05, 'source_diff': 1.8305999999999184e-05}, {'time': 0.019155056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019178069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3012999999998812e-05, 'source_diff': 2.3012999999998812e-05}, {'time': 0.019179153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019197139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7985999999997615e-05, 'source_diff': 1.7985999999997615e-05}, {'time': 0.019198278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019227153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8875000000001122e-05, 'source_diff': 2.8875000000001122e-05}, {'time': 0.019228292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019250639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.234699999999895e-05, 'source_diff': 2.234699999999895e-05}, {'time': 0.019251778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019263861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.019264958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019276417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1459000000001857e-05, 'source_diff': 1.1459000000001857e-05}, {'time': 0.019277542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019294319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.677699999999907e-05, 'source_diff': 1.677699999999907e-05}, {'time': 0.019295417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.019318083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2666000000001046e-05, 'source_diff': 2.2666000000001046e-05}, {'time': 0.019319236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019349653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0417000000001332e-05, 'source_diff': 3.0417000000001332e-05}, {'time': 0.019350778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019376875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6096999999999232e-05, 'source_diff': 2.6096999999999232e-05}, {'time': 0.019378, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019397889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.98890000000021e-05, 'source_diff': 1.98890000000021e-05}, {'time': 0.019398986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019421653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.019422792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019446083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3290999999998202e-05, 'source_diff': 2.3290999999998202e-05}, {'time': 0.019447222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019467375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.015299999999845e-05, 'source_diff': 2.015299999999845e-05}, {'time': 0.019468486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019497111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8625000000000872e-05, 'source_diff': 2.8625000000000872e-05}, {'time': 0.019498181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019519028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.084700000000092e-05, 'source_diff': 2.084700000000092e-05}, {'time': 0.019520111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019535319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5207999999999194e-05, 'source_diff': 1.5207999999999194e-05}, {'time': 0.019536417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.01955325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.683300000000082e-05, 'source_diff': 1.683300000000082e-05}, {'time': 0.019554292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019566986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019568111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.01959825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139000000001942e-05, 'source_diff': 3.0139000000001942e-05}, {'time': 0.019599375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019618931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9556000000000434e-05, 'source_diff': 1.9556000000000434e-05}, {'time': 0.019620056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:13.151" endtime="20201110 08:36:13.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.147" endtime="20201110 08:36:13.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:13.181" level="INFO">${debug-compressed} = {'source_diff': [0, 1.1520000000007913e-06, 2.4570000000001535e-05, 1.1249999999976557e-06, 1.955500000000096e-05, 1.139000000000695e-06, 2.0791999999998645e-05, 1.153000000000265e-06, 2.2930000000000...</msg>
<status status="PASS" starttime="20201110 08:36:13.158" endtime="20201110 08:36:13.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.185" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:13.184" endtime="20201110 08:36:13.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.189" level="INFO">VALUE: {'source_diff': [0, 1.1520000000007913e-06, 2.4570000000001535e-05, 1.1249999999976557e-06, 1.955500000000096e-05, 1.139000000000695e-06, 2.0791999999998645e-05, 1.153000000000265e-06, 2.2930000000000866e-05, 1.139000000000695e-06, 2.670899999999976e-05, 1.1519999999973218e-06, 1.6723000000003208e-05, 1.1109999999980857e-06, 2.6402000000001757e-05, 1.1389999999972256e-06, 1.1139000000000288e-05, 1.153000000000265e-06, 3.0417000000001332e-05, 1.1109999999980857e-06, 1.4889000000000568e-05, 1.125000000001125e-06, 1.954099999999792e-05, 1.125000000001125e-06, 2.8277999999999637e-05, 1.139000000000695e-06, 2.015300000000192e-05, 1.1249999999976557e-06, 1.5514000000001194e-05, 1.1109999999980857e-06, 2.6416000000001327e-05, 1.1120000000010288e-06, 1.5207999999999194e-05, 1.1110000000015552e-06, 2.4541999999998926e-05, 1.1109999999980857e-06, 1.3347000000000359e-05, 1.1110000000015552e-06, 2.4846999999997982e-05, 1.125000000001125e-06, 2.545899999999851e-05, 1.139000000000695e-06, 2.3902000000002727e-05, 1.1389999999972256e-06, 2.111100000000074e-05, 1.1110000000015552e-06, 2.547299999999808e-05, 1.139000000000695e-06, 2.7624999999999872e-05, 1.125000000001125e-06, 2.9512999999998374e-05, 1.125000000001125e-06, 2.17229999999978e-05, 1.125000000001125e-06, 2.9236000000001927e-05, 1.0969999999985158e-06, 1.8305999999999184e-05, 1.125000000001125e-06, 2.3012999999998812e-05, 1.084000000001889e-06, 1.7985999999997615e-05, 1.139000000000695e-06, 2.8875000000001122e-05, 1.139000000000695e-06, 2.234699999999895e-05, 1.139000000000695e-06, 1.2082999999999539e-05, 1.0969999999985158e-06, 1.1459000000001857e-05, 1.125000000001125e-06, 1.677699999999907e-05, 1.0979999999979895e-06, 2.2666000000001046e-05, 1.153000000000265e-06, 3.0417000000001332e-05, 1.1249999999976557e-06, 2.6096999999999232e-05, 1.125000000001125e-06, 1.98890000000021e-05, 1.0969999999985158e-06, 2.266700000000052e-05, 1.139000000000695e-06, 2.3290999999998202e-05, 1.139000000000695e-06, 2.015299999999845e-05, 1.1110000000015552e-06, 2.8625000000000872e-05, 1.0699999999988496e-06, 2.084700000000092e-05, 1.082999999998946e-06, 1.5207999999999194e-05, 1.098000000001459e-06, 1.683300000000082e-05, 1.0419999999997098e-06, 1.2694000000000594e-05, 1.1249999999976557e-06, 3.0139000000001942e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.125000000001125e-06], 'eventdiff': [0, 1.1520000000007913e-06, 2.4570000000001535e-05, 1.1249999999976557e-06, 1.955500000000096e-05, 1.139000000000695e-06, 2.0791999999998645e-05, 1.153000000000265e-06, 2.2930000000000866e-05, 1.139000000000695e-06, 2.670899999999976e-05, 1.1519999999973218e-06, 1.6723000000003208e-05, 1.1109999999980857e-06, 2.6402000000001757e-05, 1.1389999999972256e-06, 1.1139000000000288e-05, 1.153000000000265e-06, 3.0417000000001332e-05, 1.1109999999980857e-06, 1.4889000000000568e-05, 1.125000000001125e-06, 1.954099999999792e-05, 1.125000000001125e-06, 2.8277999999999637e-05, 1.139000000000695e-06, 2.015300000000192e-05, 1.1249999999976557e-06, 1.5514000000001194e-05, 1.1109999999980857e-06, 2.6416000000001327e-05, 1.1120000000010288e-06, 1.5207999999999194e-05, 1.1110000000015552e-06, 2.4541999999998926e-05, 1.1109999999980857e-06, 1.3347000000000359e-05, 1.1110000000015552e-06, 2.4846999999997982e-05, 1.125000000001125e-06, 2.545899999999851e-05, 1.139000000000695e-06, 2.3902000000002727e-05, 1.1389999999972256e-06, 2.111100000000074e-05, 1.1110000000015552e-06, 2.547299999999808e-05, 1.139000000000695e-06, 2.7624999999999872e-05, 1.125000000001125e-06, 2.9512999999998374e-05, 1.125000000001125e-06, 2.17229999999978e-05, 1.125000000001125e-06, 2.9236000000001927e-05, 1.0969999999985158e-06, 1.8305999999999184e-05, 1.125000000001125e-06, 2.3012999999998812e-05, 1.084000000001889e-06, 1.7985999999997615e-05, 1.139000000000695e-06, 2.8875000000001122e-05, 1.139000000000695e-06, 2.234699999999895e-05, 1.139000000000695e-06, 1.2082999999999539e-05, 1.0969999999985158e-06, 1.1459000000001857e-05, 1.125000000001125e-06, 1.677699999999907e-05, 1.0979999999979895e-06, 2.2666000000001046e-05, 1.153000000000265e-06, 3.0417000000001332e-05, 1.1249999999976557e-06, 2.6096999999999232e-05, 1.125000000001125e-06, 1.98890000000021e-05, 1.0969999999985158e-06, 2.266700000000052e-05, 1.139000000000695e-06, 2.3290999999998202e-05, 1.139000000000695e-06, 2.015299999999845e-05, 1.1110000000015552e-06, 2.8625000000000872e-05, 1.0699999999988496e-06, 2.084700000000092e-05, 1.082999999998946e-06, 1.5207999999999194e-05, 1.098000000001459e-06, 1.683300000000082e-05, 1.0419999999997098e-06, 1.2694000000000594e-05, 1.1249999999976557e-06, 3.0139000000001942e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.125000000001125e-06], 'time': [0.018498042, 0.018499194, 0.018523764, 0.018524889, 0.018544444, 0.018545583, 0.018566375, 0.018567528, 0.018590458, 0.018591597, 0.018618306, 0.018619458, 0.018636181, 0.018637292, 0.018663694, 0.018664833, 0.018675972, 0.018677125, 0.018707542, 0.018708653, 0.018723542, 0.018724667, 0.018744208, 0.018745333, 0.018773611, 0.01877475, 0.018794903, 0.018796028, 0.018811542, 0.018812653, 0.018839069, 0.018840181, 0.018855389, 0.0188565, 0.018881042, 0.018882153, 0.0188955, 0.018896611, 0.018921458, 0.018922583, 0.018948042, 0.018949181, 0.018973083, 0.018974222, 0.018995333, 0.018996444, 0.019021917, 0.019023056, 0.019050681, 0.019051806, 0.019081319, 0.019082444, 0.019104167, 0.019105292, 0.019134528, 0.019135625, 0.019153931, 0.019155056, 0.019178069, 0.019179153, 0.019197139, 0.019198278, 0.019227153, 0.019228292, 0.019250639, 0.019251778, 0.019263861, 0.019264958, 0.019276417, 0.019277542, 0.019294319, 0.019295417, 0.019318083, 0.019319236, 0.019349653, 0.019350778, 0.019376875, 0.019378, 0.019397889, 0.019398986, 0.019421653, 0.019422792, 0.019446083, 0.019447222, 0.019467375, 0.019468486, 0.019497111, 0.019498181, 0.019519028, 0.019520111, 0.019535319, 0.019536417, 0.01955325, 0.019554292, 0.019566986, 0.019568111, 0.01959825, 0.019599375, 0.019618931, 0.019620056], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:13.186" endtime="20201110 08:36:13.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.182" endtime="20201110 08:36:13.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.195" level="INFO">${RESULT} = [{'time': 0.018499194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.018524889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:13.191" endtime="20201110 08:36:13.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:13.208" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.1520000000007913e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.1109999999980857e-06, 1.1389999999972256...</msg>
<status status="PASS" starttime="20201110 08:36:13.196" endtime="20201110 08:36:13.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.212" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:13.211" endtime="20201110 08:36:13.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.215" level="INFO">VALUE: [1.1520000000007913e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1519999999973218e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.153000000000265e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1120000000010288e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.084000000001889e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.0979999999979895e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0419999999997098e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:36:13.214" endtime="20201110 08:36:13.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.209" endtime="20201110 08:36:13.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.218" endtime="20201110 08:36:13.219"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.221" endtime="20201110 08:36:13.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.220" endtime="20201110 08:36:13.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.216" endtime="20201110 08:36:13.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:12.814" endtime="20201110 08:36:13.242"></status>
</kw>
<msg timestamp="20201110 08:36:13.242" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.250" endtime="20201110 08:36:13.259"></status>
</kw>
<msg timestamp="20201110 08:36:13.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.248" endtime="20201110 08:36:13.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.262" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.261" endtime="20201110 08:36:13.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.263" endtime="20201110 08:36:13.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.246" endtime="20201110 08:36:13.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.244" endtime="20201110 08:36:13.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.272" endtime="20201110 08:36:13.558"></status>
</kw>
<msg timestamp="20201110 08:36:13.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.270" endtime="20201110 08:36:13.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.562" endtime="20201110 08:36:13.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.573" endtime="20201110 08:36:13.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.268" endtime="20201110 08:36:13.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.266" endtime="20201110 08:36:13.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.583" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:13.582" endtime="20201110 08:36:13.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.588" level="INFO">VALUE: [{'time': 0.018558722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018580958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.111100000000074e-05, 'source_diff': 2.111100000000074e-05}, {'time': 0.018582083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018597597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5514000000001194e-05, 'source_diff': 1.5514000000001194e-05}, {'time': 0.018598708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018628861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0153000000001512e-05, 'source_diff': 3.0153000000001512e-05}, {'time': 0.018629972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018646722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6749999999999404e-05, 'source_diff': 1.6749999999999404e-05}, {'time': 0.018647847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018674889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7042000000001426e-05, 'source_diff': 2.7042000000001426e-05}, {'time': 0.018676056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018705208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9152000000001038e-05, 'source_diff': 2.9152000000001038e-05}, {'time': 0.018706389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018727125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0736000000000365e-05, 'source_diff': 2.0736000000000365e-05}, {'time': 0.01872825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018758708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0458000000000568e-05, 'source_diff': 3.0458000000000568e-05}, {'time': 0.018759833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018775333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5500000000001624e-05, 'source_diff': 1.5500000000001624e-05}, {'time': 0.018776458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018797875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.018799, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018812319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319000000001219e-05, 'source_diff': 1.3319000000001219e-05}, {'time': 0.018813444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018844264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.082000000000085e-05, 'source_diff': 3.082000000000085e-05}, {'time': 0.018845319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018868306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.298700000000209e-05, 'source_diff': 2.298700000000209e-05}, {'time': 0.018869431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018883069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3637999999999845e-05, 'source_diff': 1.3637999999999845e-05}, {'time': 0.018884194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018908736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4541999999998926e-05, 'source_diff': 2.4541999999998926e-05}, {'time': 0.018909861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018923792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3930999999998278e-05, 'source_diff': 1.3930999999998278e-05}, {'time': 0.018924931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018951014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6082999999999662e-05, 'source_diff': 2.6082999999999662e-05}, {'time': 0.018952139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018982583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0444000000000998e-05, 'source_diff': 3.0444000000000998e-05}, {'time': 0.018983736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019007306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3570000000000535e-05, 'source_diff': 2.3570000000000535e-05}, {'time': 0.019008431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019023014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4583000000002039e-05, 'source_diff': 1.4583000000002039e-05}, {'time': 0.019024125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019053389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9264000000001067e-05, 'source_diff': 2.9264000000001067e-05}, {'time': 0.019054444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019078708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4263999999999536e-05, 'source_diff': 2.4263999999999536e-05}, {'time': 0.019079792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019108681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8888999999997222e-05, 'source_diff': 2.8888999999997222e-05}, {'time': 0.019109806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019135903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6096999999999232e-05, 'source_diff': 2.6096999999999232e-05}, {'time': 0.019137014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019157194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0179999999998116e-05, 'source_diff': 2.0179999999998116e-05}, {'time': 0.019158333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019171333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.019172458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019184222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019185361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019204583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9221999999999295e-05, 'source_diff': 1.9221999999999295e-05}, {'time': 0.019205722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019223389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.766699999999899e-05, 'source_diff': 1.766699999999899e-05}, {'time': 0.019224514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019241583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.706899999999803e-05, 'source_diff': 1.706899999999803e-05}, {'time': 0.019242708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019272528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9819999999999847e-05, 'source_diff': 2.9819999999999847e-05}, {'time': 0.019273639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019297556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.391700000000177e-05, 'source_diff': 2.391700000000177e-05}, {'time': 0.019298736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019310139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.019311278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019325819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.454099999999986e-05, 'source_diff': 1.454099999999986e-05}, {'time': 0.019326958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019341847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4888999999997099e-05, 'source_diff': 1.4888999999997099e-05}, {'time': 0.019342972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019370597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.019371778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019400625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8847000000001982e-05, 'source_diff': 2.8847000000001982e-05}, {'time': 0.019401792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019422542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.019423667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019437306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3639000000002788e-05, 'source_diff': 1.3639000000002788e-05}, {'time': 0.019438417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019463264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.019464403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019487069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2665999999997577e-05, 'source_diff': 2.2665999999997577e-05}, {'time': 0.019488181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019515208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7026999999998913e-05, 'source_diff': 2.7026999999998913e-05}, {'time': 0.019516347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019530597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.019531708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019551583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987500000000253e-05, 'source_diff': 1.987500000000253e-05}, {'time': 0.019552736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019580042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7305999999997776e-05, 'source_diff': 2.7305999999997776e-05}, {'time': 0.019581153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019595111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3957999999997944e-05, 'source_diff': 1.3957999999997944e-05}, {'time': 0.019596222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019622972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6749999999998997e-05, 'source_diff': 2.6749999999998997e-05}, {'time': 0.019624083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019646417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2333999999998855e-05, 'source_diff': 2.2333999999998855e-05}, {'time': 0.019647542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019659625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.019660764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:13.584" endtime="20201110 08:36:13.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.579" endtime="20201110 08:36:13.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:13.615" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 2.111100000000074e-05, 1.1249999999976557e-06, 1.5514000000001194e-05, 1.1109999999980857e-06, 3.0153000000001512e-05, 1.1110000000015552e-06, 1.674999999999...</msg>
<status status="PASS" starttime="20201110 08:36:13.591" endtime="20201110 08:36:13.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.619" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:13.618" endtime="20201110 08:36:13.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.623" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 2.111100000000074e-05, 1.1249999999976557e-06, 1.5514000000001194e-05, 1.1109999999980857e-06, 3.0153000000001512e-05, 1.1110000000015552e-06, 1.6749999999999404e-05, 1.1249999999976557e-06, 2.7042000000001426e-05, 1.1669999999998348e-06, 2.9152000000001038e-05, 1.1809999999994047e-06, 2.0736000000000365e-05, 1.1249999999976557e-06, 3.0458000000000568e-05, 1.125000000001125e-06, 1.5500000000001624e-05, 1.1249999999976557e-06, 2.141699999999927e-05, 1.125000000001125e-06, 1.3319000000001219e-05, 1.1249999999976557e-06, 3.082000000000085e-05, 1.054999999999806e-06, 2.298700000000209e-05, 1.1249999999976557e-06, 1.3637999999999845e-05, 1.125000000001125e-06, 2.4541999999998926e-05, 1.125000000001125e-06, 1.3930999999998278e-05, 1.139000000000695e-06, 2.6082999999999662e-05, 1.125000000001125e-06, 3.0444000000000998e-05, 1.153000000000265e-06, 2.3570000000000535e-05, 1.1249999999976557e-06, 1.4583000000002039e-05, 1.1109999999980857e-06, 2.9264000000001067e-05, 1.054999999999806e-06, 2.4263999999999536e-05, 1.084000000001889e-06, 2.8888999999997222e-05, 1.125000000001125e-06, 2.6096999999999232e-05, 1.1110000000015552e-06, 2.0179999999998116e-05, 1.139000000000695e-06, 1.2999999999999123e-05, 1.125000000001125e-06, 1.1764000000000913e-05, 1.139000000000695e-06, 1.9221999999999295e-05, 1.139000000000695e-06, 1.766699999999899e-05, 1.125000000001125e-06, 1.706899999999803e-05, 1.125000000001125e-06, 2.9819999999999847e-05, 1.1109999999980857e-06, 2.391700000000177e-05, 1.179999999999931e-06, 1.1403000000000107e-05, 1.139000000000695e-06, 1.454099999999986e-05, 1.139000000000695e-06, 1.4888999999997099e-05, 1.125000000001125e-06, 2.7624999999999872e-05, 1.1809999999994047e-06, 2.8847000000001982e-05, 1.1669999999998348e-06, 2.0749999999999935e-05, 1.1249999999976557e-06, 1.3639000000002788e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.139000000000695e-06, 2.2665999999997577e-05, 1.1120000000010288e-06, 2.7026999999998913e-05, 1.139000000000695e-06, 1.4250000000000373e-05, 1.1109999999980857e-06, 1.987500000000253e-05, 1.153000000000265e-06, 2.7305999999997776e-05, 1.1110000000015552e-06, 1.3957999999997944e-05, 1.1110000000015552e-06, 2.6749999999998997e-05, 1.1110000000015552e-06, 2.2333999999998855e-05, 1.125000000001125e-06, 1.2082999999999539e-05, 1.139000000000695e-06], 'eventdiff': [0, 1.125000000001125e-06, 2.111100000000074e-05, 1.1249999999976557e-06, 1.5514000000001194e-05, 1.1109999999980857e-06, 3.0153000000001512e-05, 1.1110000000015552e-06, 1.6749999999999404e-05, 1.1249999999976557e-06, 2.7042000000001426e-05, 1.1669999999998348e-06, 2.9152000000001038e-05, 1.1809999999994047e-06, 2.0736000000000365e-05, 1.1249999999976557e-06, 3.0458000000000568e-05, 1.125000000001125e-06, 1.5500000000001624e-05, 1.1249999999976557e-06, 2.141699999999927e-05, 1.125000000001125e-06, 1.3319000000001219e-05, 1.1249999999976557e-06, 3.082000000000085e-05, 1.054999999999806e-06, 2.298700000000209e-05, 1.1249999999976557e-06, 1.3637999999999845e-05, 1.125000000001125e-06, 2.4541999999998926e-05, 1.125000000001125e-06, 1.3930999999998278e-05, 1.139000000000695e-06, 2.6082999999999662e-05, 1.125000000001125e-06, 3.0444000000000998e-05, 1.153000000000265e-06, 2.3570000000000535e-05, 1.1249999999976557e-06, 1.4583000000002039e-05, 1.1109999999980857e-06, 2.9264000000001067e-05, 1.054999999999806e-06, 2.4263999999999536e-05, 1.084000000001889e-06, 2.8888999999997222e-05, 1.125000000001125e-06, 2.6096999999999232e-05, 1.1110000000015552e-06, 2.0179999999998116e-05, 1.139000000000695e-06, 1.2999999999999123e-05, 1.125000000001125e-06, 1.1764000000000913e-05, 1.139000000000695e-06, 1.9221999999999295e-05, 1.139000000000695e-06, 1.766699999999899e-05, 1.125000000001125e-06, 1.706899999999803e-05, 1.125000000001125e-06, 2.9819999999999847e-05, 1.1109999999980857e-06, 2.391700000000177e-05, 1.179999999999931e-06, 1.1403000000000107e-05, 1.139000000000695e-06, 1.454099999999986e-05, 1.139000000000695e-06, 1.4888999999997099e-05, 1.125000000001125e-06, 2.7624999999999872e-05, 1.1809999999994047e-06, 2.8847000000001982e-05, 1.1669999999998348e-06, 2.0749999999999935e-05, 1.1249999999976557e-06, 1.3639000000002788e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.139000000000695e-06, 2.2665999999997577e-05, 1.1120000000010288e-06, 2.7026999999998913e-05, 1.139000000000695e-06, 1.4250000000000373e-05, 1.1109999999980857e-06, 1.987500000000253e-05, 1.153000000000265e-06, 2.7305999999997776e-05, 1.1110000000015552e-06, 1.3957999999997944e-05, 1.1110000000015552e-06, 2.6749999999998997e-05, 1.1110000000015552e-06, 2.2333999999998855e-05, 1.125000000001125e-06, 1.2082999999999539e-05, 1.139000000000695e-06], 'time': [0.018558722, 0.018559847, 0.018580958, 0.018582083, 0.018597597, 0.018598708, 0.018628861, 0.018629972, 0.018646722, 0.018647847, 0.018674889, 0.018676056, 0.018705208, 0.018706389, 0.018727125, 0.01872825, 0.018758708, 0.018759833, 0.018775333, 0.018776458, 0.018797875, 0.018799, 0.018812319, 0.018813444, 0.018844264, 0.018845319, 0.018868306, 0.018869431, 0.018883069, 0.018884194, 0.018908736, 0.018909861, 0.018923792, 0.018924931, 0.018951014, 0.018952139, 0.018982583, 0.018983736, 0.019007306, 0.019008431, 0.019023014, 0.019024125, 0.019053389, 0.019054444, 0.019078708, 0.019079792, 0.019108681, 0.019109806, 0.019135903, 0.019137014, 0.019157194, 0.019158333, 0.019171333, 0.019172458, 0.019184222, 0.019185361, 0.019204583, 0.019205722, 0.019223389, 0.019224514, 0.019241583, 0.019242708, 0.019272528, 0.019273639, 0.019297556, 0.019298736, 0.019310139, 0.019311278, 0.019325819, 0.019326958, 0.019341847, 0.019342972, 0.019370597, 0.019371778, 0.019400625, 0.019401792, 0.019422542, 0.019423667, 0.019437306, 0.019438417, 0.019463264, 0.019464403, 0.019487069, 0.019488181, 0.019515208, 0.019516347, 0.019530597, 0.019531708, 0.019551583, 0.019552736, 0.019580042, 0.019581153, 0.019595111, 0.019596222, 0.019622972, 0.019624083, 0.019646417, 0.019647542, 0.019659625, 0.019660764], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:13.620" endtime="20201110 08:36:13.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.616" endtime="20201110 08:36:13.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:13.629" level="INFO">${RESULT} = [{'time': 0.018559847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018582083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:13.626" endtime="20201110 08:36:13.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:13.642" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.12499999999765...</msg>
<status status="PASS" starttime="20201110 08:36:13.630" endtime="20201110 08:36:13.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:13.645" endtime="20201110 08:36:13.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.649" level="INFO">VALUE: [1.125000000001125e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:36:13.647" endtime="20201110 08:36:13.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.643" endtime="20201110 08:36:13.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.652" endtime="20201110 08:36:13.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:13.655" endtime="20201110 08:36:13.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.654" endtime="20201110 08:36:13.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.650" endtime="20201110 08:36:13.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.243" endtime="20201110 08:36:13.676"></status>
</kw>
<msg timestamp="20201110 08:36:13.676" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.684" endtime="20201110 08:36:13.693"></status>
</kw>
<msg timestamp="20201110 08:36:13.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.682" endtime="20201110 08:36:13.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:13.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:13.694" endtime="20201110 08:36:13.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.697" endtime="20201110 08:36:13.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.680" endtime="20201110 08:36:13.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.678" endtime="20201110 08:36:13.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:13.707" endtime="20201110 08:36:13.994"></status>
</kw>
<msg timestamp="20201110 08:36:13.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018524486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018525611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.705" endtime="20201110 08:36:13.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018524486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018525611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:13.998" endtime="20201110 08:36:14.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.007" endtime="20201110 08:36:14.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.703" endtime="20201110 08:36:14.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.700" endtime="20201110 08:36:14.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.013" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:14.012" endtime="20201110 08:36:14.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.018" level="INFO">VALUE: [{'time': 0.018524486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018525611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018541736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.018542875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018562403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9528000000001294e-05, 'source_diff': 1.9528000000001294e-05}, {'time': 0.018563528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018587764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4236000000000396e-05, 'source_diff': 2.4236000000000396e-05}, {'time': 0.018588931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.980500000000121e-05, 'source_diff': 1.980500000000121e-05}, {'time': 0.018609861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9236000000001927e-05, 'source_diff': 2.9236000000001927e-05}, {'time': 0.018640181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018663847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3666000000002047e-05, 'source_diff': 2.3666000000002047e-05}, {'time': 0.018664917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018679486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.018680611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018692056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.018693194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018719917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.672299999999933e-05, 'source_diff': 2.672299999999933e-05}, {'time': 0.018721028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018734042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018735153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018761569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6415999999997858e-05, 'source_diff': 2.6415999999997858e-05}, {'time': 0.018762681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018787222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4540999999999452e-05, 'source_diff': 2.4540999999999452e-05}, {'time': 0.018788347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018814472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6124999999998372e-05, 'source_diff': 2.6124999999998372e-05}, {'time': 0.018815569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018833875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8305999999999184e-05, 'source_diff': 1.8305999999999184e-05}, {'time': 0.018834986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018853042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8055999999998934e-05, 'source_diff': 1.8055999999998934e-05}, {'time': 0.018854111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018871167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7056000000001403e-05, 'source_diff': 1.7056000000001403e-05}, {'time': 0.018872306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018895264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.018896403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018918125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.01891925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018946903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.765300000000248e-05, 'source_diff': 2.765300000000248e-05}, {'time': 0.018948056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018962583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.452700000000029e-05, 'source_diff': 1.452700000000029e-05}, {'time': 0.018963708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018988556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4848000000000925e-05, 'source_diff': 2.4848000000000925e-05}, {'time': 0.018989694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019005181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5486999999998058e-05, 'source_diff': 1.5486999999998058e-05}, {'time': 0.019006361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019024319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7958000000001945e-05, 'source_diff': 1.7958000000001945e-05}, {'time': 0.019025431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019041889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6458000000000444e-05, 'source_diff': 1.6458000000000444e-05}, {'time': 0.019042986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019055694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019056806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019083528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6721999999999857e-05, 'source_diff': 2.6721999999999857e-05}, {'time': 0.019084653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019105444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.079099999999917e-05, 'source_diff': 2.079099999999917e-05}, {'time': 0.019106597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.01912675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.015300000000192e-05, 'source_diff': 2.015300000000192e-05}, {'time': 0.019127875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019154597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6721999999999857e-05, 'source_diff': 2.6721999999999857e-05}, {'time': 0.019155708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019171208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5499999999998154e-05, 'source_diff': 1.5499999999998154e-05}, {'time': 0.019172333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019200306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.797300000000058e-05, 'source_diff': 2.797300000000058e-05}, {'time': 0.019201444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019222847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.14029999999997e-05, 'source_diff': 2.14029999999997e-05}, {'time': 0.019223986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019240111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612500000000225e-05, 'source_diff': 1.612500000000225e-05}, {'time': 0.01924125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019264514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3263999999998536e-05, 'source_diff': 2.3263999999998536e-05}, {'time': 0.019265625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019293611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7985999999997208e-05, 'source_diff': 2.7985999999997208e-05}, {'time': 0.019294722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019325167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.019326292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019343361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.70690000000015e-05, 'source_diff': 1.70690000000015e-05}, {'time': 0.019344514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019367764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3249999999998966e-05, 'source_diff': 2.3249999999998966e-05}, {'time': 0.019368903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019381597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.019382722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019396972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4249999999996904e-05, 'source_diff': 1.4249999999996904e-05}, {'time': 0.019398111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019412986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4875000000000999e-05, 'source_diff': 1.4875000000000999e-05}, {'time': 0.019414097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019433653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9555999999996965e-05, 'source_diff': 1.9555999999996965e-05}, {'time': 0.019434847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1940000000029705e-06, 'source_diff': 1.1940000000029705e-06}, {'time': 0.019462736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7888999999999692e-05, 'source_diff': 2.7888999999999692e-05}, {'time': 0.019463875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019481556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.768100000000203e-05, 'source_diff': 1.768100000000203e-05}, {'time': 0.019482708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.019510944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8235999999997458e-05, 'source_diff': 2.8235999999997458e-05}, {'time': 0.019512083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019535972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.388899999999916e-05, 'source_diff': 2.388899999999916e-05}, {'time': 0.019537111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019549792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2681000000000497e-05, 'source_diff': 1.2681000000000497e-05}, {'time': 0.019550917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019572333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1415999999999796e-05, 'source_diff': 2.1415999999999796e-05}, {'time': 0.019573458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019596125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.266700000000052e-05, 'source_diff': 2.266700000000052e-05}, {'time': 0.019597292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:14.014" endtime="20201110 08:36:14.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.010" endtime="20201110 08:36:14.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:14.044" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.612499999999878e-05, 1.139000000000695e-06, 1.9528000000001294e-05, 1.1249999999976557e-06, 2.4236000000000396e-05, 1.1669999999998348e-06, 1.9805000000001...</msg>
<status status="PASS" starttime="20201110 08:36:14.021" endtime="20201110 08:36:14.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.048" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:14.047" endtime="20201110 08:36:14.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.052" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.612499999999878e-05, 1.139000000000695e-06, 1.9528000000001294e-05, 1.1249999999976557e-06, 2.4236000000000396e-05, 1.1669999999998348e-06, 1.980500000000121e-05, 1.1249999999976557e-06, 2.9236000000001927e-05, 1.0839999999984196e-06, 2.3666000000002047e-05, 1.0699999999988496e-06, 1.4568999999999e-05, 1.125000000001125e-06, 1.1444999999998817e-05, 1.1380000000012214e-06, 2.672299999999933e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.1110000000015552e-06, 2.6415999999997858e-05, 1.1120000000010288e-06, 2.4540999999999452e-05, 1.125000000001125e-06, 2.6124999999998372e-05, 1.0970000000019853e-06, 1.8305999999999184e-05, 1.1110000000015552e-06, 1.8055999999998934e-05, 1.068999999999376e-06, 1.7056000000001403e-05, 1.1389999999972256e-06, 2.2958000000000006e-05, 1.139000000000695e-06, 2.1722000000001795e-05, 1.1249999999976557e-06, 2.765300000000248e-05, 1.153000000000265e-06, 1.452700000000029e-05, 1.1249999999976557e-06, 2.4848000000000925e-05, 1.1380000000012214e-06, 1.5486999999998058e-05, 1.179999999999931e-06, 1.7958000000001945e-05, 1.1119999999975594e-06, 1.6458000000000444e-05, 1.0970000000019853e-06, 1.2708000000000164e-05, 1.1119999999975594e-06, 2.6721999999999857e-05, 1.125000000001125e-06, 2.079099999999917e-05, 1.153000000000265e-06, 2.015300000000192e-05, 1.1249999999976557e-06, 2.6721999999999857e-05, 1.1110000000015552e-06, 1.5499999999998154e-05, 1.125000000001125e-06, 2.797300000000058e-05, 1.1380000000012214e-06, 2.14029999999997e-05, 1.1389999999972256e-06, 1.612500000000225e-05, 1.139000000000695e-06, 2.3263999999998536e-05, 1.1110000000015552e-06, 2.7985999999997208e-05, 1.1110000000015552e-06, 3.044500000000047e-05, 1.1249999999976557e-06, 1.70690000000015e-05, 1.153000000000265e-06, 2.3249999999998966e-05, 1.139000000000695e-06, 1.2694000000000594e-05, 1.125000000001125e-06, 1.4249999999996904e-05, 1.139000000000695e-06, 1.4875000000000999e-05, 1.1110000000015552e-06, 1.9555999999996965e-05, 1.1940000000029705e-06, 2.7888999999999692e-05, 1.1389999999972256e-06, 1.768100000000203e-05, 1.1520000000007913e-06, 2.8235999999997458e-05, 1.139000000000695e-06, 2.388899999999916e-05, 1.139000000000695e-06, 1.2681000000000497e-05, 1.125000000001125e-06, 2.1415999999999796e-05, 1.1249999999976557e-06, 2.266700000000052e-05, 1.1669999999998348e-06], 'eventdiff': [0, 1.125000000001125e-06, 1.612499999999878e-05, 1.139000000000695e-06, 1.9528000000001294e-05, 1.1249999999976557e-06, 2.4236000000000396e-05, 1.1669999999998348e-06, 1.980500000000121e-05, 1.1249999999976557e-06, 2.9236000000001927e-05, 1.0839999999984196e-06, 2.3666000000002047e-05, 1.0699999999988496e-06, 1.4568999999999e-05, 1.125000000001125e-06, 1.1444999999998817e-05, 1.1380000000012214e-06, 2.672299999999933e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.1110000000015552e-06, 2.6415999999997858e-05, 1.1120000000010288e-06, 2.4540999999999452e-05, 1.125000000001125e-06, 2.6124999999998372e-05, 1.0970000000019853e-06, 1.8305999999999184e-05, 1.1110000000015552e-06, 1.8055999999998934e-05, 1.068999999999376e-06, 1.7056000000001403e-05, 1.1389999999972256e-06, 2.2958000000000006e-05, 1.139000000000695e-06, 2.1722000000001795e-05, 1.1249999999976557e-06, 2.765300000000248e-05, 1.153000000000265e-06, 1.452700000000029e-05, 1.1249999999976557e-06, 2.4848000000000925e-05, 1.1380000000012214e-06, 1.5486999999998058e-05, 1.179999999999931e-06, 1.7958000000001945e-05, 1.1119999999975594e-06, 1.6458000000000444e-05, 1.0970000000019853e-06, 1.2708000000000164e-05, 1.1119999999975594e-06, 2.6721999999999857e-05, 1.125000000001125e-06, 2.079099999999917e-05, 1.153000000000265e-06, 2.015300000000192e-05, 1.1249999999976557e-06, 2.6721999999999857e-05, 1.1110000000015552e-06, 1.5499999999998154e-05, 1.125000000001125e-06, 2.797300000000058e-05, 1.1380000000012214e-06, 2.14029999999997e-05, 1.1389999999972256e-06, 1.612500000000225e-05, 1.139000000000695e-06, 2.3263999999998536e-05, 1.1110000000015552e-06, 2.7985999999997208e-05, 1.1110000000015552e-06, 3.044500000000047e-05, 1.1249999999976557e-06, 1.70690000000015e-05, 1.153000000000265e-06, 2.3249999999998966e-05, 1.139000000000695e-06, 1.2694000000000594e-05, 1.125000000001125e-06, 1.4249999999996904e-05, 1.139000000000695e-06, 1.4875000000000999e-05, 1.1110000000015552e-06, 1.9555999999996965e-05, 1.1940000000029705e-06, 2.7888999999999692e-05, 1.1389999999972256e-06, 1.768100000000203e-05, 1.1520000000007913e-06, 2.8235999999997458e-05, 1.139000000000695e-06, 2.388899999999916e-05, 1.139000000000695e-06, 1.2681000000000497e-05, 1.125000000001125e-06, 2.1415999999999796e-05, 1.1249999999976557e-06, 2.266700000000052e-05, 1.1669999999998348e-06], 'time': [0.018524486, 0.018525611, 0.018541736, 0.018542875, 0.018562403, 0.018563528, 0.018587764, 0.018588931, 0.018608736, 0.018609861, 0.018639097, 0.018640181, 0.018663847, 0.018664917, 0.018679486, 0.018680611, 0.018692056, 0.018693194, 0.018719917, 0.018721028, 0.018734042, 0.018735153, 0.018761569, 0.018762681, 0.018787222, 0.018788347, 0.018814472, 0.018815569, 0.018833875, 0.018834986, 0.018853042, 0.018854111, 0.018871167, 0.018872306, 0.018895264, 0.018896403, 0.018918125, 0.01891925, 0.018946903, 0.018948056, 0.018962583, 0.018963708, 0.018988556, 0.018989694, 0.019005181, 0.019006361, 0.019024319, 0.019025431, 0.019041889, 0.019042986, 0.019055694, 0.019056806, 0.019083528, 0.019084653, 0.019105444, 0.019106597, 0.01912675, 0.019127875, 0.019154597, 0.019155708, 0.019171208, 0.019172333, 0.019200306, 0.019201444, 0.019222847, 0.019223986, 0.019240111, 0.01924125, 0.019264514, 0.019265625, 0.019293611, 0.019294722, 0.019325167, 0.019326292, 0.019343361, 0.019344514, 0.019367764, 0.019368903, 0.019381597, 0.019382722, 0.019396972, 0.019398111, 0.019412986, 0.019414097, 0.019433653, 0.019434847, 0.019462736, 0.019463875, 0.019481556, 0.019482708, 0.019510944, 0.019512083, 0.019535972, 0.019537111, 0.019549792, 0.019550917, 0.019572333, 0.019573458, 0.019596125, 0.019597292], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:14.049" endtime="20201110 08:36:14.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.045" endtime="20201110 08:36:14.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.058" level="INFO">${RESULT} = [{'time': 0.018525611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018542875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:14.054" endtime="20201110 08:36:14.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:14.071" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.125000000001125...</msg>
<status status="PASS" starttime="20201110 08:36:14.059" endtime="20201110 08:36:14.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.076" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:14.074" endtime="20201110 08:36:14.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.078" level="INFO">VALUE: [1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1669999999998348e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.179999999999931e-06, 1.1119999999975594e-06, 1.0970000000019853e-06, 1.1119999999975594e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1940000000029705e-06, 1.1389999999972256e-06, 1.1520000000007913e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:36:14.077" endtime="20201110 08:36:14.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.072" endtime="20201110 08:36:14.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.081" endtime="20201110 08:36:14.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.085" endtime="20201110 08:36:14.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.083" endtime="20201110 08:36:14.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.080" endtime="20201110 08:36:14.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:13.677" endtime="20201110 08:36:14.106"></status>
</kw>
<msg timestamp="20201110 08:36:14.106" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.116" endtime="20201110 08:36:14.125"></status>
</kw>
<msg timestamp="20201110 08:36:14.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.114" endtime="20201110 08:36:14.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.127" endtime="20201110 08:36:14.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.129" endtime="20201110 08:36:14.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.111" endtime="20201110 08:36:14.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.108" endtime="20201110 08:36:14.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.138" endtime="20201110 08:36:14.423"></status>
</kw>
<msg timestamp="20201110 08:36:14.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.137" endtime="20201110 08:36:14.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021720944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.427" endtime="20201110 08:36:14.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.436" endtime="20201110 08:36:14.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.134" endtime="20201110 08:36:14.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.132" endtime="20201110 08:36:14.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.442" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:14.441" endtime="20201110 08:36:14.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.447" level="INFO">VALUE: [{'time': 0.021720944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021722056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.021735722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3665999999998985e-05, 'source_diff': 1.3665999999998985e-05}, {'time': 0.021736819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.021753569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6749999999999404e-05, 'source_diff': 1.6749999999999404e-05}, {'time': 0.021754694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.021777361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.266699999999705e-05, 'source_diff': 2.266699999999705e-05}, {'time': 0.021778486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.021791806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3320000000000692e-05, 'source_diff': 1.3320000000000692e-05}, {'time': 0.021792944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.021816236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3291999999997676e-05, 'source_diff': 2.3291999999997676e-05}, {'time': 0.021817347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.021831611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.021832792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.021844806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.021845931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.021859875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.021861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.021881819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.081900000000178e-05, 'source_diff': 2.081900000000178e-05}, {'time': 0.021882931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.021906847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3915999999998827e-05, 'source_diff': 2.3915999999998827e-05}, {'time': 0.021908, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.021920347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.021921528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.021941653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.012499999999931e-05, 'source_diff': 2.012499999999931e-05}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.021967611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.021968736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.021993597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.486100000000102e-05, 'source_diff': 2.486100000000102e-05}, {'time': 0.021994708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.022017389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.268099999999662e-05, 'source_diff': 2.268099999999662e-05}, {'time': 0.022018556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.022037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9179999999997116e-05, 'source_diff': 1.9179999999997116e-05}, {'time': 0.022038861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.022065278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.022066403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022094986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8583000000002162e-05, 'source_diff': 2.8583000000002162e-05}, {'time': 0.022096097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.022112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6820000000000723e-05, 'source_diff': 1.6820000000000723e-05}, {'time': 0.022113972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.022130722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6749999999999404e-05, 'source_diff': 1.6749999999999404e-05}, {'time': 0.022131847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.022159806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.795900000000101e-05, 'source_diff': 2.795900000000101e-05}, {'time': 0.022160944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.022190139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.919500000000269e-05, 'source_diff': 2.919500000000269e-05}, {'time': 0.022191264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022220514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.022221583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.022252042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.045900000000004e-05, 'source_diff': 3.045900000000004e-05}, {'time': 0.022253153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.022272778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.962499999999881e-05, 'source_diff': 1.962499999999881e-05}, {'time': 0.022273833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.022287486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.022288597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.022309097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0499999999999685e-05, 'source_diff': 2.0499999999999685e-05}, {'time': 0.022310222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.022336306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6083999999999136e-05, 'source_diff': 2.6083999999999136e-05}, {'time': 0.022337417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.022349194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1777000000001009e-05, 'source_diff': 1.1777000000001009e-05}, {'time': 0.022350306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.022376097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5791000000000702e-05, 'source_diff': 2.5791000000000702e-05}, {'time': 0.022377222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022397083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986100000000296e-05, 'source_diff': 1.986100000000296e-05}, {'time': 0.022398208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022424, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5792000000000176e-05, 'source_diff': 2.5792000000000176e-05}, {'time': 0.022425111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.022454944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.022456056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.022472194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6138000000002345e-05, 'source_diff': 1.6138000000002345e-05}, {'time': 0.022473319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022488903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5584000000002513e-05, 'source_diff': 1.5584000000002513e-05}, {'time': 0.022489944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.022508875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.022509986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.022539208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9222000000002357e-05, 'source_diff': 2.9222000000002357e-05}, {'time': 0.022540333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022562361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2028000000000325e-05, 'source_diff': 2.2028000000000325e-05}, {'time': 0.0225635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.022580236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6735999999999834e-05, 'source_diff': 1.6735999999999834e-05}, {'time': 0.022581389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.022609944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8554999999999553e-05, 'source_diff': 2.8554999999999553e-05}, {'time': 0.022611069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.022622833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1763999999997443e-05, 'source_diff': 1.1763999999997443e-05}, {'time': 0.022623972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.022641333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.736100000000046e-05, 'source_diff': 1.736100000000046e-05}, {'time': 0.022642458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.02266325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0791999999998645e-05, 'source_diff': 2.0791999999998645e-05}, {'time': 0.022664389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.022676458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2068999999999969e-05, 'source_diff': 1.2068999999999969e-05}, {'time': 0.022677583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.022690903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319999999997223e-05, 'source_diff': 1.3319999999997223e-05}, {'time': 0.022692042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.022713778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1736000000001365e-05, 'source_diff': 2.1736000000001365e-05}, {'time': 0.022714875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.022737861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2986000000002615e-05, 'source_diff': 2.2986000000002615e-05}, {'time': 0.022739042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.022752, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2958000000000414e-05, 'source_diff': 1.2958000000000414e-05}, {'time': 0.022753125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.022768931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5806000000000153e-05, 'source_diff': 1.5806000000000153e-05}, {'time': 0.022770069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:14.443" endtime="20201110 08:36:14.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.439" endtime="20201110 08:36:14.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:14.474" level="INFO">${debug-compressed} = {'source_diff': [0, 1.1120000000010288e-06, 1.3665999999998985e-05, 1.0970000000019853e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.266699999999705e-05, 1.125000000001125e-06, 1.3320000000000...</msg>
<status status="PASS" starttime="20201110 08:36:14.450" endtime="20201110 08:36:14.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.477" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:14.476" endtime="20201110 08:36:14.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.481" level="INFO">VALUE: {'source_diff': [0, 1.1120000000010288e-06, 1.3665999999998985e-05, 1.0970000000019853e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.266699999999705e-05, 1.125000000001125e-06, 1.3320000000000692e-05, 1.1380000000012214e-06, 2.3291999999997676e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.1809999999994047e-06, 1.2014000000001163e-05, 1.1249999999976557e-06, 1.3944000000001844e-05, 1.1249999999976557e-06, 2.081900000000178e-05, 1.1120000000010288e-06, 2.3915999999998827e-05, 1.153000000000265e-06, 1.2346999999999358e-05, 1.1809999999994047e-06, 2.012499999999931e-05, 1.1110000000015552e-06, 2.484700000000145e-05, 1.1249999999976557e-06, 2.486100000000102e-05, 1.1110000000015552e-06, 2.268099999999662e-05, 1.1670000000033043e-06, 1.9179999999997116e-05, 1.125000000001125e-06, 2.64170000000008e-05, 1.1249999999976557e-06, 2.8583000000002162e-05, 1.1109999999980857e-06, 1.6820000000000723e-05, 1.054999999999806e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.795900000000101e-05, 1.137999999997752e-06, 2.919500000000269e-05, 1.1249999999976557e-06, 2.9250000000001497e-05, 1.068999999999376e-06, 3.045900000000004e-05, 1.1110000000015552e-06, 1.962499999999881e-05, 1.054999999999806e-06, 1.3652999999998888e-05, 1.1110000000015552e-06, 2.0499999999999685e-05, 1.125000000001125e-06, 2.6083999999999136e-05, 1.1109999999980857e-06, 1.1777000000001009e-05, 1.1120000000010288e-06, 2.5791000000000702e-05, 1.1249999999976557e-06, 1.986100000000296e-05, 1.1249999999976557e-06, 2.5792000000000176e-05, 1.1110000000015552e-06, 2.9832999999999943e-05, 1.1119999999975594e-06, 1.6138000000002345e-05, 1.1249999999976557e-06, 1.5584000000002513e-05, 1.0410000000002362e-06, 1.893099999999981e-05, 1.1109999999980857e-06, 2.9222000000002357e-05, 1.1249999999976557e-06, 2.2028000000000325e-05, 1.139000000000695e-06, 1.6735999999999834e-05, 1.153000000000265e-06, 2.8554999999999553e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 1.736100000000046e-05, 1.125000000001125e-06, 2.0791999999998645e-05, 1.139000000000695e-06, 1.2068999999999969e-05, 1.125000000001125e-06, 1.3319999999997223e-05, 1.139000000000695e-06, 2.1736000000001365e-05, 1.0969999999985158e-06, 2.2986000000002615e-05, 1.1809999999994047e-06, 1.2958000000000414e-05, 1.1249999999976557e-06, 1.5806000000000153e-05, 1.1380000000012214e-06], 'eventdiff': [0, 1.1120000000010288e-06, 1.3665999999998985e-05, 1.0970000000019853e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.266699999999705e-05, 1.125000000001125e-06, 1.3320000000000692e-05, 1.1380000000012214e-06, 2.3291999999997676e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.1809999999994047e-06, 1.2014000000001163e-05, 1.1249999999976557e-06, 1.3944000000001844e-05, 1.1249999999976557e-06, 2.081900000000178e-05, 1.1120000000010288e-06, 2.3915999999998827e-05, 1.153000000000265e-06, 1.2346999999999358e-05, 1.1809999999994047e-06, 2.012499999999931e-05, 1.1110000000015552e-06, 2.484700000000145e-05, 1.1249999999976557e-06, 2.486100000000102e-05, 1.1110000000015552e-06, 2.268099999999662e-05, 1.1670000000033043e-06, 1.9179999999997116e-05, 1.125000000001125e-06, 2.64170000000008e-05, 1.1249999999976557e-06, 2.8583000000002162e-05, 1.1109999999980857e-06, 1.6820000000000723e-05, 1.054999999999806e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.795900000000101e-05, 1.137999999997752e-06, 2.919500000000269e-05, 1.1249999999976557e-06, 2.9250000000001497e-05, 1.068999999999376e-06, 3.045900000000004e-05, 1.1110000000015552e-06, 1.962499999999881e-05, 1.054999999999806e-06, 1.3652999999998888e-05, 1.1110000000015552e-06, 2.0499999999999685e-05, 1.125000000001125e-06, 2.6083999999999136e-05, 1.1109999999980857e-06, 1.1777000000001009e-05, 1.1120000000010288e-06, 2.5791000000000702e-05, 1.1249999999976557e-06, 1.986100000000296e-05, 1.1249999999976557e-06, 2.5792000000000176e-05, 1.1110000000015552e-06, 2.9832999999999943e-05, 1.1119999999975594e-06, 1.6138000000002345e-05, 1.1249999999976557e-06, 1.5584000000002513e-05, 1.0410000000002362e-06, 1.893099999999981e-05, 1.1109999999980857e-06, 2.9222000000002357e-05, 1.1249999999976557e-06, 2.2028000000000325e-05, 1.139000000000695e-06, 1.6735999999999834e-05, 1.153000000000265e-06, 2.8554999999999553e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 1.736100000000046e-05, 1.125000000001125e-06, 2.0791999999998645e-05, 1.139000000000695e-06, 1.2068999999999969e-05, 1.125000000001125e-06, 1.3319999999997223e-05, 1.139000000000695e-06, 2.1736000000001365e-05, 1.0969999999985158e-06, 2.2986000000002615e-05, 1.1809999999994047e-06, 1.2958000000000414e-05, 1.1249999999976557e-06, 1.5806000000000153e-05, 1.1380000000012214e-06], 'time': [0.021720944, 0.021722056, 0.021735722, 0.021736819, 0.021753569, 0.021754694, 0.021777361, 0.021778486, 0.021791806, 0.021792944, 0.021816236, 0.021817347, 0.021831611, 0.021832792, 0.021844806, 0.021845931, 0.021859875, 0.021861, 0.021881819, 0.021882931, 0.021906847, 0.021908, 0.021920347, 0.021921528, 0.021941653, 0.021942764, 0.021967611, 0.021968736, 0.021993597, 0.021994708, 0.022017389, 0.022018556, 0.022037736, 0.022038861, 0.022065278, 0.022066403, 0.022094986, 0.022096097, 0.022112917, 0.022113972, 0.022130722, 0.022131847, 0.022159806, 0.022160944, 0.022190139, 0.022191264, 0.022220514, 0.022221583, 0.022252042, 0.022253153, 0.022272778, 0.022273833, 0.022287486, 0.022288597, 0.022309097, 0.022310222, 0.022336306, 0.022337417, 0.022349194, 0.022350306, 0.022376097, 0.022377222, 0.022397083, 0.022398208, 0.022424, 0.022425111, 0.022454944, 0.022456056, 0.022472194, 0.022473319, 0.022488903, 0.022489944, 0.022508875, 0.022509986, 0.022539208, 0.022540333, 0.022562361, 0.0225635, 0.022580236, 0.022581389, 0.022609944, 0.022611069, 0.022622833, 0.022623972, 0.022641333, 0.022642458, 0.02266325, 0.022664389, 0.022676458, 0.022677583, 0.022690903, 0.022692042, 0.022713778, 0.022714875, 0.022737861, 0.022739042, 0.022752, 0.022753125, 0.022768931, 0.022770069], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:14.478" endtime="20201110 08:36:14.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.474" endtime="20201110 08:36:14.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.487" level="INFO">${RESULT} = [{'time': 0.021722056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.021736819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:14.484" endtime="20201110 08:36:14.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:14.501" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.1120000000010288e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.1809999999994047e-06, 1.124999999997655...</msg>
<status status="PASS" starttime="20201110 08:36:14.488" endtime="20201110 08:36:14.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.505" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:14.504" endtime="20201110 08:36:14.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.507" level="INFO">VALUE: [1.1120000000010288e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1120000000010288e-06, 1.153000000000265e-06, 1.1809999999994047e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1670000000033043e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1249999999976557e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1119999999975594e-06, 1.1249999999976557e-06, 1.0410000000002362e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.1380000000012214e-06]</msg>
<status status="PASS" starttime="20201110 08:36:14.506" endtime="20201110 08:36:14.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.502" endtime="20201110 08:36:14.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.511" endtime="20201110 08:36:14.512"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.514" endtime="20201110 08:36:14.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.512" endtime="20201110 08:36:14.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.509" endtime="20201110 08:36:14.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.107" endtime="20201110 08:36:14.535"></status>
</kw>
<msg timestamp="20201110 08:36:14.535" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.542" endtime="20201110 08:36:14.552"></status>
</kw>
<msg timestamp="20201110 08:36:14.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.541" endtime="20201110 08:36:14.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.553" endtime="20201110 08:36:14.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.555" endtime="20201110 08:36:14.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.538" endtime="20201110 08:36:14.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.537" endtime="20201110 08:36:14.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.565" endtime="20201110 08:36:14.851"></status>
</kw>
<msg timestamp="20201110 08:36:14.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.564" endtime="20201110 08:36:14.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018455944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.855" endtime="20201110 08:36:14.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.864" endtime="20201110 08:36:14.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.560" endtime="20201110 08:36:14.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.559" endtime="20201110 08:36:14.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.870" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:14.869" endtime="20201110 08:36:14.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.875" level="INFO">VALUE: [{'time': 0.018455944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018487806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.018488917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.0185085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.95830000000001e-05, 'source_diff': 1.95830000000001e-05}, {'time': 0.018509681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018526653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6972000000000514e-05, 'source_diff': 1.6972000000000514e-05}, {'time': 0.018527792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018552958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5166000000000077e-05, 'source_diff': 2.5166000000000077e-05}, {'time': 0.018554069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018565819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1750000000001343e-05, 'source_diff': 1.1750000000001343e-05}, {'time': 0.018566958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5485999999998177e-05, 'source_diff': 2.5485999999998177e-05}, {'time': 0.018593542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.018616708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018641556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4848000000000925e-05, 'source_diff': 2.4848000000000925e-05}, {'time': 0.018642681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018665042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.018666139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018683208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.706899999999803e-05, 'source_diff': 1.706899999999803e-05}, {'time': 0.018684333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018696097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1763999999997443e-05, 'source_diff': 1.1763999999997443e-05}, {'time': 0.018697222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5250000000001374e-05, 'source_diff': 1.5250000000001374e-05}, {'time': 0.018713528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018731833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.830499999999971e-05, 'source_diff': 1.830499999999971e-05}, {'time': 0.018732958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018753764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0805999999998215e-05, 'source_diff': 2.0805999999998215e-05}, {'time': 0.018754875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.01877725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.237499999999809e-05, 'source_diff': 2.237499999999809e-05}, {'time': 0.018778361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018791375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018792514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018818278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5764000000001036e-05, 'source_diff': 2.5764000000001036e-05}, {'time': 0.018819458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018845514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6055999999999996e-05, 'source_diff': 2.6055999999999996e-05}, {'time': 0.018846611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018862444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.583299999999982e-05, 'source_diff': 1.583299999999982e-05}, {'time': 0.018863625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018894, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0375000000002622e-05, 'source_diff': 3.0375000000002622e-05}, {'time': 0.018895139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018924028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889000000000692e-05, 'source_diff': 2.8889000000000692e-05}, {'time': 0.018925167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018948125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.018949236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018976889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7652999999999012e-05, 'source_diff': 2.7652999999999012e-05}, {'time': 0.018978014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019000375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.019001486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019025403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.39169999999983e-05, 'source_diff': 2.39169999999983e-05}, {'time': 0.019026514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019055722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9207999999999318e-05, 'source_diff': 2.9207999999999318e-05}, {'time': 0.019056847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019077333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.019078458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.0191005, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.019101611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019115611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.019116708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019137181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.047300000000002e-05, 'source_diff': 2.047300000000002e-05}, {'time': 0.019138292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019159708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1415999999999796e-05, 'source_diff': 2.1415999999999796e-05}, {'time': 0.019160847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019186931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6083999999999136e-05, 'source_diff': 2.6083999999999136e-05}, {'time': 0.019188111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019199833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1721999999998733e-05, 'source_diff': 1.1721999999998733e-05}, {'time': 0.019201014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019212111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1097000000001578e-05, 'source_diff': 1.1097000000001578e-05}, {'time': 0.019213222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019235306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2084000000002074e-05, 'source_diff': 2.2084000000002074e-05}, {'time': 0.019236389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019254736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.834700000000189e-05, 'source_diff': 1.834700000000189e-05}, {'time': 0.019255806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019274736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8930000000000335e-05, 'source_diff': 1.8930000000000335e-05}, {'time': 0.019275861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019295111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9250000000001904e-05, 'source_diff': 1.9250000000001904e-05}, {'time': 0.019296222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019321389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.516700000000302e-05, 'source_diff': 2.516700000000302e-05}, {'time': 0.0193225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019343306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0806000000001684e-05, 'source_diff': 2.0806000000001684e-05}, {'time': 0.019344431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019369292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.486100000000102e-05, 'source_diff': 2.486100000000102e-05}, {'time': 0.019370389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019391194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.080500000000221e-05, 'source_diff': 2.080500000000221e-05}, {'time': 0.019392333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019413444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.111099999999727e-05, 'source_diff': 2.111099999999727e-05}, {'time': 0.019414542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.019436903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.019438042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019449806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019450944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019472042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1097999999997175e-05, 'source_diff': 2.1097999999997175e-05}, {'time': 0.019473194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.019503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9806000000000277e-05, 'source_diff': 2.9806000000000277e-05}, {'time': 0.019504153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019525833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1679999999999616e-05, 'source_diff': 2.1679999999999616e-05}, {'time': 0.019526972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019553375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.640300000000123e-05, 'source_diff': 2.640300000000123e-05}, {'time': 0.019554486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:14.871" endtime="20201110 08:36:14.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.867" endtime="20201110 08:36:14.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:14.901" level="INFO">${debug-compressed} = {'source_diff': [0, 1.098000000001459e-06, 3.07639999999991e-05, 1.1110000000015552e-06, 1.95830000000001e-05, 1.1809999999994047e-06, 1.6972000000000514e-05, 1.139000000000695e-06, 2.5166000000000077...</msg>
<status status="PASS" starttime="20201110 08:36:14.878" endtime="20201110 08:36:14.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.905" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:14.904" endtime="20201110 08:36:14.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.909" level="INFO">VALUE: {'source_diff': [0, 1.098000000001459e-06, 3.07639999999991e-05, 1.1110000000015552e-06, 1.95830000000001e-05, 1.1809999999994047e-06, 1.6972000000000514e-05, 1.139000000000695e-06, 2.5166000000000077e-05, 1.1109999999980857e-06, 1.1750000000001343e-05, 1.139000000000695e-06, 2.5485999999998177e-05, 1.098000000001459e-06, 2.204100000000042e-05, 1.1249999999976557e-06, 2.4848000000000925e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.0970000000019853e-06, 1.706899999999803e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.125000000001125e-06, 1.5250000000001374e-05, 1.0559999999992797e-06, 1.830499999999971e-05, 1.125000000001125e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 2.237499999999809e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.139000000000695e-06, 2.5764000000001036e-05, 1.179999999999931e-06, 2.6055999999999996e-05, 1.0969999999985158e-06, 1.583299999999982e-05, 1.1809999999994047e-06, 3.0375000000002622e-05, 1.1389999999972256e-06, 2.8889000000000692e-05, 1.139000000000695e-06, 2.2958000000000006e-05, 1.1110000000015552e-06, 2.7652999999999012e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.1110000000015552e-06, 2.39169999999983e-05, 1.1110000000015552e-06, 2.9207999999999318e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.125000000001125e-06, 2.2041999999999895e-05, 1.1110000000015552e-06, 1.4000000000000123e-05, 1.0969999999985158e-06, 2.047300000000002e-05, 1.1110000000015552e-06, 2.1415999999999796e-05, 1.139000000000695e-06, 2.6083999999999136e-05, 1.179999999999931e-06, 1.1721999999998733e-05, 1.1809999999994047e-06, 1.1097000000001578e-05, 1.1109999999980857e-06, 2.2084000000002074e-05, 1.082999999998946e-06, 1.834700000000189e-05, 1.0699999999988496e-06, 1.8930000000000335e-05, 1.1249999999976557e-06, 1.9250000000001904e-05, 1.1109999999980857e-06, 2.516700000000302e-05, 1.1109999999980857e-06, 2.0806000000001684e-05, 1.1249999999976557e-06, 2.486100000000102e-05, 1.0969999999985158e-06, 2.080500000000221e-05, 1.139000000000695e-06, 2.111099999999727e-05, 1.098000000001459e-06, 2.236099999999852e-05, 1.139000000000695e-06, 1.1764000000000913e-05, 1.1380000000012214e-06, 2.1097999999997175e-05, 1.1520000000007913e-06, 2.9806000000000277e-05, 1.153000000000265e-06, 2.1679999999999616e-05, 1.139000000000695e-06, 2.640300000000123e-05, 1.1109999999980857e-06], 'eventdiff': [0, 1.098000000001459e-06, 3.07639999999991e-05, 1.1110000000015552e-06, 1.95830000000001e-05, 1.1809999999994047e-06, 1.6972000000000514e-05, 1.139000000000695e-06, 2.5166000000000077e-05, 1.1109999999980857e-06, 1.1750000000001343e-05, 1.139000000000695e-06, 2.5485999999998177e-05, 1.098000000001459e-06, 2.204100000000042e-05, 1.1249999999976557e-06, 2.4848000000000925e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.0970000000019853e-06, 1.706899999999803e-05, 1.125000000001125e-06, 1.1763999999997443e-05, 1.125000000001125e-06, 1.5250000000001374e-05, 1.0559999999992797e-06, 1.830499999999971e-05, 1.125000000001125e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 2.237499999999809e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.139000000000695e-06, 2.5764000000001036e-05, 1.179999999999931e-06, 2.6055999999999996e-05, 1.0969999999985158e-06, 1.583299999999982e-05, 1.1809999999994047e-06, 3.0375000000002622e-05, 1.1389999999972256e-06, 2.8889000000000692e-05, 1.139000000000695e-06, 2.2958000000000006e-05, 1.1110000000015552e-06, 2.7652999999999012e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.1110000000015552e-06, 2.39169999999983e-05, 1.1110000000015552e-06, 2.9207999999999318e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.125000000001125e-06, 2.2041999999999895e-05, 1.1110000000015552e-06, 1.4000000000000123e-05, 1.0969999999985158e-06, 2.047300000000002e-05, 1.1110000000015552e-06, 2.1415999999999796e-05, 1.139000000000695e-06, 2.6083999999999136e-05, 1.179999999999931e-06, 1.1721999999998733e-05, 1.1809999999994047e-06, 1.1097000000001578e-05, 1.1109999999980857e-06, 2.2084000000002074e-05, 1.082999999998946e-06, 1.834700000000189e-05, 1.0699999999988496e-06, 1.8930000000000335e-05, 1.1249999999976557e-06, 1.9250000000001904e-05, 1.1109999999980857e-06, 2.516700000000302e-05, 1.1109999999980857e-06, 2.0806000000001684e-05, 1.1249999999976557e-06, 2.486100000000102e-05, 1.0969999999985158e-06, 2.080500000000221e-05, 1.139000000000695e-06, 2.111099999999727e-05, 1.098000000001459e-06, 2.236099999999852e-05, 1.139000000000695e-06, 1.1764000000000913e-05, 1.1380000000012214e-06, 2.1097999999997175e-05, 1.1520000000007913e-06, 2.9806000000000277e-05, 1.153000000000265e-06, 2.1679999999999616e-05, 1.139000000000695e-06, 2.640300000000123e-05, 1.1109999999980857e-06], 'time': [0.018455944, 0.018457042, 0.018487806, 0.018488917, 0.0185085, 0.018509681, 0.018526653, 0.018527792, 0.018552958, 0.018554069, 0.018565819, 0.018566958, 0.018592444, 0.018593542, 0.018615583, 0.018616708, 0.018641556, 0.018642681, 0.018665042, 0.018666139, 0.018683208, 0.018684333, 0.018696097, 0.018697222, 0.018712472, 0.018713528, 0.018731833, 0.018732958, 0.018753764, 0.018754875, 0.01877725, 0.018778361, 0.018791375, 0.018792514, 0.018818278, 0.018819458, 0.018845514, 0.018846611, 0.018862444, 0.018863625, 0.018894, 0.018895139, 0.018924028, 0.018925167, 0.018948125, 0.018949236, 0.018976889, 0.018978014, 0.019000375, 0.019001486, 0.019025403, 0.019026514, 0.019055722, 0.019056847, 0.019077333, 0.019078458, 0.0191005, 0.019101611, 0.019115611, 0.019116708, 0.019137181, 0.019138292, 0.019159708, 0.019160847, 0.019186931, 0.019188111, 0.019199833, 0.019201014, 0.019212111, 0.019213222, 0.019235306, 0.019236389, 0.019254736, 0.019255806, 0.019274736, 0.019275861, 0.019295111, 0.019296222, 0.019321389, 0.0193225, 0.019343306, 0.019344431, 0.019369292, 0.019370389, 0.019391194, 0.019392333, 0.019413444, 0.019414542, 0.019436903, 0.019438042, 0.019449806, 0.019450944, 0.019472042, 0.019473194, 0.019503, 0.019504153, 0.019525833, 0.019526972, 0.019553375, 0.019554486], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:14.906" endtime="20201110 08:36:14.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.902" endtime="20201110 08:36:14.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:14.914" level="INFO">${RESULT} = [{'time': 0.018457042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018488917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:14.911" endtime="20201110 08:36:14.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:14.928" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.098000000001459e-06, 1.1110000000015552e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.098000000001459e-06, 1.1249999999976557e...</msg>
<status status="PASS" starttime="20201110 08:36:14.915" endtime="20201110 08:36:14.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.932" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:14.931" endtime="20201110 08:36:14.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.934" level="INFO">VALUE: [1.098000000001459e-06, 1.1110000000015552e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.098000000001459e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.0969999999985158e-06, 1.1809999999994047e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.179999999999931e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.098000000001459e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.1520000000007913e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201110 08:36:14.933" endtime="20201110 08:36:14.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.929" endtime="20201110 08:36:14.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.938" endtime="20201110 08:36:14.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:14.941" endtime="20201110 08:36:14.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.939" endtime="20201110 08:36:14.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.936" endtime="20201110 08:36:14.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.535" endtime="20201110 08:36:14.962"></status>
</kw>
<msg timestamp="20201110 08:36:14.962" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.970" endtime="20201110 08:36:14.979"></status>
</kw>
<msg timestamp="20201110 08:36:14.980" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.968" endtime="20201110 08:36:14.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:14.982" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:14.981" endtime="20201110 08:36:14.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.983" endtime="20201110 08:36:14.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.966" endtime="20201110 08:36:14.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.964" endtime="20201110 08:36:14.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:14.992" endtime="20201110 08:36:15.278"></status>
</kw>
<msg timestamp="20201110 08:36:15.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:14.990" endtime="20201110 08:36:15.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.282" endtime="20201110 08:36:15.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.297" endtime="20201110 08:36:15.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.988" endtime="20201110 08:36:15.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.986" endtime="20201110 08:36:15.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.304" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:15.303" endtime="20201110 08:36:15.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.309" level="INFO">VALUE: [{'time': 0.018480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018500375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.859699999999867e-05, 'source_diff': 1.859699999999867e-05}, {'time': 0.018501486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018522, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0513999999999255e-05, 'source_diff': 2.0513999999999255e-05}, {'time': 0.018523111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018553861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0750000000003e-05, 'source_diff': 3.0750000000003e-05}, {'time': 0.018554986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018573292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8306000000002653e-05, 'source_diff': 1.8306000000002653e-05}, {'time': 0.018574417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018593042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.018594153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018606236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.018607347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3292000000001145e-05, 'source_diff': 2.3292000000001145e-05}, {'time': 0.018631764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018661889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0125000000002372e-05, 'source_diff': 3.0125000000002372e-05}, {'time': 0.018663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018687861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4832999999998412e-05, 'source_diff': 2.4832999999998412e-05}, {'time': 0.018688986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018709472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.018710583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018736056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.547300000000155e-05, 'source_diff': 2.547300000000155e-05}, {'time': 0.018737194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.018754583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.73889999999996e-05, 'source_diff': 1.73889999999996e-05}, {'time': 0.018755667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018786125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0458000000000568e-05, 'source_diff': 3.0458000000000568e-05}, {'time': 0.01878725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018802139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4889000000000568e-05, 'source_diff': 1.4889000000000568e-05}, {'time': 0.018803264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018816264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.018817389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018831056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3666999999998458e-05, 'source_diff': 1.3666999999998458e-05}, {'time': 0.018832139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018846708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.018847889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018863653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5764000000001444e-05, 'source_diff': 1.5764000000001444e-05}, {'time': 0.018864764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018881861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709700000000064e-05, 'source_diff': 1.709700000000064e-05}, {'time': 0.018882958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.0189025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9542000000000864e-05, 'source_diff': 1.9542000000000864e-05}, {'time': 0.018903625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018932903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9278000000000637e-05, 'source_diff': 2.9278000000000637e-05}, {'time': 0.018933958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018946028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2069999999999442e-05, 'source_diff': 1.2069999999999442e-05}, {'time': 0.018947167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018966403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9235999999998865e-05, 'source_diff': 1.9235999999998865e-05}, {'time': 0.018967514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018996111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8596999999998263e-05, 'source_diff': 2.8596999999998263e-05}, {'time': 0.018997222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019022083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860999999997552e-05, 'source_diff': 2.4860999999997552e-05}, {'time': 0.019023264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.019049319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6054999999997053e-05, 'source_diff': 2.6054999999997053e-05}, {'time': 0.019050403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019067764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.736100000000046e-05, 'source_diff': 1.736100000000046e-05}, {'time': 0.019068889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019080972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.019082097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019111917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9819999999999847e-05, 'source_diff': 2.9819999999999847e-05}, {'time': 0.019113042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.01914225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9207999999999318e-05, 'source_diff': 2.9207999999999318e-05}, {'time': 0.019143375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019166028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.265300000000095e-05, 'source_diff': 2.265300000000095e-05}, {'time': 0.019167153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6444000000000875e-05, 'source_diff': 1.6444000000000875e-05}, {'time': 0.019184708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019198972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.019200097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019214056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3959000000000887e-05, 'source_diff': 1.3959000000000887e-05}, {'time': 0.019215167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019237833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2666000000001046e-05, 'source_diff': 2.2666000000001046e-05}, {'time': 0.019238944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019267542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8597999999997736e-05, 'source_diff': 2.8597999999997736e-05}, {'time': 0.019268667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019282292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.019283417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019309819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6401999999998288e-05, 'source_diff': 2.6401999999998288e-05}, {'time': 0.019310972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019340125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9153000000000512e-05, 'source_diff': 2.9153000000000512e-05}, {'time': 0.019341264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019368583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7319000000001342e-05, 'source_diff': 2.7319000000001342e-05}, {'time': 0.019369708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019392431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.272300000000227e-05, 'source_diff': 2.272300000000227e-05}, {'time': 0.019393514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019418681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.516699999999955e-05, 'source_diff': 2.516699999999955e-05}, {'time': 0.019419778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019435278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5500000000001624e-05, 'source_diff': 1.5500000000001624e-05}, {'time': 0.019436417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019457528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.111100000000074e-05, 'source_diff': 2.111100000000074e-05}, {'time': 0.019458639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019488472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.019489583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.0195085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.891700000000024e-05, 'source_diff': 1.891700000000024e-05}, {'time': 0.019509625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019533542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.391700000000177e-05, 'source_diff': 2.391700000000177e-05}, {'time': 0.019534653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019547056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.019548167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019577694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9526999999997944e-05, 'source_diff': 2.9526999999997944e-05}, {'time': 0.019578833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:15.305" endtime="20201110 08:36:15.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.301" endtime="20201110 08:36:15.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:15.336" level="INFO">${debug-compressed} = {'source_diff': [0, 1.153000000000265e-06, 1.859699999999867e-05, 1.1110000000015552e-06, 2.0513999999999255e-05, 1.1109999999980857e-06, 3.0750000000003e-05, 1.1249999999976557e-06, 1.830600000000265...</msg>
<status status="PASS" starttime="20201110 08:36:15.312" endtime="20201110 08:36:15.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.339" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:15.338" endtime="20201110 08:36:15.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.343" level="INFO">VALUE: {'source_diff': [0, 1.153000000000265e-06, 1.859699999999867e-05, 1.1110000000015552e-06, 2.0513999999999255e-05, 1.1109999999980857e-06, 3.0750000000003e-05, 1.1249999999976557e-06, 1.8306000000002653e-05, 1.1249999999976557e-06, 1.862500000000128e-05, 1.1109999999980857e-06, 1.2083000000003008e-05, 1.1109999999980857e-06, 2.3292000000001145e-05, 1.1249999999976557e-06, 3.0125000000002372e-05, 1.139000000000695e-06, 2.4832999999998412e-05, 1.125000000001125e-06, 2.0486000000000115e-05, 1.1109999999980857e-06, 2.547300000000155e-05, 1.137999999997752e-06, 1.73889999999996e-05, 1.084000000001889e-06, 3.0458000000000568e-05, 1.1249999999976557e-06, 1.4889000000000568e-05, 1.125000000001125e-06, 1.2999999999999123e-05, 1.125000000001125e-06, 1.3666999999998458e-05, 1.0830000000024154e-06, 1.4568999999999e-05, 1.1809999999994047e-06, 1.5764000000001444e-05, 1.1109999999980857e-06, 1.709700000000064e-05, 1.0969999999985158e-06, 1.9542000000000864e-05, 1.125000000001125e-06, 2.9278000000000637e-05, 1.054999999999806e-06, 1.2069999999999442e-05, 1.139000000000695e-06, 1.9235999999998865e-05, 1.1110000000015552e-06, 2.8596999999998263e-05, 1.1110000000015552e-06, 2.4860999999997552e-05, 1.1810000000028742e-06, 2.6054999999997053e-05, 1.084000000001889e-06, 1.736100000000046e-05, 1.1249999999976557e-06, 1.2083000000003008e-05, 1.1249999999976557e-06, 2.9819999999999847e-05, 1.125000000001125e-06, 2.9207999999999318e-05, 1.125000000001125e-06, 2.265300000000095e-05, 1.1249999999976557e-06, 1.6444000000000875e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.1249999999976557e-06, 1.3959000000000887e-05, 1.1109999999980857e-06, 2.2666000000001046e-05, 1.1110000000015552e-06, 2.8597999999997736e-05, 1.125000000001125e-06, 1.3624999999999748e-05, 1.125000000001125e-06, 2.6401999999998288e-05, 1.153000000000265e-06, 2.9153000000000512e-05, 1.139000000000695e-06, 2.7319000000001342e-05, 1.1249999999976557e-06, 2.272300000000227e-05, 1.082999999998946e-06, 2.516699999999955e-05, 1.0969999999985158e-06, 1.5500000000001624e-05, 1.139000000000695e-06, 2.111100000000074e-05, 1.1109999999980857e-06, 2.9832999999999943e-05, 1.1110000000015552e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 2.391700000000177e-05, 1.1109999999980857e-06, 1.2403000000001108e-05, 1.1110000000015552e-06, 2.9526999999997944e-05, 1.139000000000695e-06], 'eventdiff': [0, 1.153000000000265e-06, 1.859699999999867e-05, 1.1110000000015552e-06, 2.0513999999999255e-05, 1.1109999999980857e-06, 3.0750000000003e-05, 1.1249999999976557e-06, 1.8306000000002653e-05, 1.1249999999976557e-06, 1.862500000000128e-05, 1.1109999999980857e-06, 1.2083000000003008e-05, 1.1109999999980857e-06, 2.3292000000001145e-05, 1.1249999999976557e-06, 3.0125000000002372e-05, 1.139000000000695e-06, 2.4832999999998412e-05, 1.125000000001125e-06, 2.0486000000000115e-05, 1.1109999999980857e-06, 2.547300000000155e-05, 1.137999999997752e-06, 1.73889999999996e-05, 1.084000000001889e-06, 3.0458000000000568e-05, 1.1249999999976557e-06, 1.4889000000000568e-05, 1.125000000001125e-06, 1.2999999999999123e-05, 1.125000000001125e-06, 1.3666999999998458e-05, 1.0830000000024154e-06, 1.4568999999999e-05, 1.1809999999994047e-06, 1.5764000000001444e-05, 1.1109999999980857e-06, 1.709700000000064e-05, 1.0969999999985158e-06, 1.9542000000000864e-05, 1.125000000001125e-06, 2.9278000000000637e-05, 1.054999999999806e-06, 1.2069999999999442e-05, 1.139000000000695e-06, 1.9235999999998865e-05, 1.1110000000015552e-06, 2.8596999999998263e-05, 1.1110000000015552e-06, 2.4860999999997552e-05, 1.1810000000028742e-06, 2.6054999999997053e-05, 1.084000000001889e-06, 1.736100000000046e-05, 1.1249999999976557e-06, 1.2083000000003008e-05, 1.1249999999976557e-06, 2.9819999999999847e-05, 1.125000000001125e-06, 2.9207999999999318e-05, 1.125000000001125e-06, 2.265300000000095e-05, 1.1249999999976557e-06, 1.6444000000000875e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.1249999999976557e-06, 1.3959000000000887e-05, 1.1109999999980857e-06, 2.2666000000001046e-05, 1.1110000000015552e-06, 2.8597999999997736e-05, 1.125000000001125e-06, 1.3624999999999748e-05, 1.125000000001125e-06, 2.6401999999998288e-05, 1.153000000000265e-06, 2.9153000000000512e-05, 1.139000000000695e-06, 2.7319000000001342e-05, 1.1249999999976557e-06, 2.272300000000227e-05, 1.082999999998946e-06, 2.516699999999955e-05, 1.0969999999985158e-06, 1.5500000000001624e-05, 1.139000000000695e-06, 2.111100000000074e-05, 1.1109999999980857e-06, 2.9832999999999943e-05, 1.1110000000015552e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 2.391700000000177e-05, 1.1109999999980857e-06, 1.2403000000001108e-05, 1.1110000000015552e-06, 2.9526999999997944e-05, 1.139000000000695e-06], 'time': [0.018480625, 0.018481778, 0.018500375, 0.018501486, 0.018522, 0.018523111, 0.018553861, 0.018554986, 0.018573292, 0.018574417, 0.018593042, 0.018594153, 0.018606236, 0.018607347, 0.018630639, 0.018631764, 0.018661889, 0.018663028, 0.018687861, 0.018688986, 0.018709472, 0.018710583, 0.018736056, 0.018737194, 0.018754583, 0.018755667, 0.018786125, 0.01878725, 0.018802139, 0.018803264, 0.018816264, 0.018817389, 0.018831056, 0.018832139, 0.018846708, 0.018847889, 0.018863653, 0.018864764, 0.018881861, 0.018882958, 0.0189025, 0.018903625, 0.018932903, 0.018933958, 0.018946028, 0.018947167, 0.018966403, 0.018967514, 0.018996111, 0.018997222, 0.019022083, 0.019023264, 0.019049319, 0.019050403, 0.019067764, 0.019068889, 0.019080972, 0.019082097, 0.019111917, 0.019113042, 0.01914225, 0.019143375, 0.019166028, 0.019167153, 0.019183597, 0.019184708, 0.019198972, 0.019200097, 0.019214056, 0.019215167, 0.019237833, 0.019238944, 0.019267542, 0.019268667, 0.019282292, 0.019283417, 0.019309819, 0.019310972, 0.019340125, 0.019341264, 0.019368583, 0.019369708, 0.019392431, 0.019393514, 0.019418681, 0.019419778, 0.019435278, 0.019436417, 0.019457528, 0.019458639, 0.019488472, 0.019489583, 0.0195085, 0.019509625, 0.019533542, 0.019534653, 0.019547056, 0.019548167, 0.019577694, 0.019578833], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:15.340" endtime="20201110 08:36:15.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.337" endtime="20201110 08:36:15.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.349" level="INFO">${RESULT} = [{'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018501486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:15.346" endtime="20201110 08:36:15.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:15.362" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.153000000000265e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.12499999999765...</msg>
<status status="PASS" starttime="20201110 08:36:15.350" endtime="20201110 08:36:15.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.367" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:15.366" endtime="20201110 08:36:15.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.369" level="INFO">VALUE: [1.153000000000265e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.137999999997752e-06, 1.084000000001889e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0830000000024154e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1810000000028742e-06, 1.084000000001889e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:36:15.368" endtime="20201110 08:36:15.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.363" endtime="20201110 08:36:15.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.372" endtime="20201110 08:36:15.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:15.376" endtime="20201110 08:36:15.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.374" endtime="20201110 08:36:15.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.371" endtime="20201110 08:36:15.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:14.963" endtime="20201110 08:36:15.396"></status>
</kw>
<msg timestamp="20201110 08:36:15.397" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.404" endtime="20201110 08:36:15.413"></status>
</kw>
<msg timestamp="20201110 08:36:15.414" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.403" endtime="20201110 08:36:15.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.415" endtime="20201110 08:36:15.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.417" endtime="20201110 08:36:15.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.400" endtime="20201110 08:36:15.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.398" endtime="20201110 08:36:15.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.426" endtime="20201110 08:36:15.713"></status>
</kw>
<msg timestamp="20201110 08:36:15.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.424" endtime="20201110 08:36:15.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.717" endtime="20201110 08:36:15.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.726" endtime="20201110 08:36:15.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.422" endtime="20201110 08:36:15.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.420" endtime="20201110 08:36:15.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.732" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:15.731" endtime="20201110 08:36:15.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.738" level="INFO">VALUE: [{'time': 0.018493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.0185055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1222000000001703e-05, 'source_diff': 1.1222000000001703e-05}, {'time': 0.018506542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018537306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.018538431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018554556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.018555694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018581153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.545899999999851e-05, 'source_diff': 2.545899999999851e-05}, {'time': 0.018582333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018604319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1986000000001615e-05, 'source_diff': 2.1986000000001615e-05}, {'time': 0.018605444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9556000000000434e-05, 'source_diff': 1.9556000000000434e-05}, {'time': 0.018626139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018654083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7943999999998498e-05, 'source_diff': 2.7943999999998498e-05}, {'time': 0.018655222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018684722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9500000000001747e-05, 'source_diff': 2.9500000000001747e-05}, {'time': 0.018685847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018713806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.795900000000101e-05, 'source_diff': 2.795900000000101e-05}, {'time': 0.018714944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018728597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.018729681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018744625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4943999999999374e-05, 'source_diff': 1.4943999999999374e-05}, {'time': 0.018745694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018766861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.116699999999902e-05, 'source_diff': 2.116699999999902e-05}, {'time': 0.018767944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018782236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4291999999999083e-05, 'source_diff': 1.4291999999999083e-05}, {'time': 0.018783306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018809097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5791000000000702e-05, 'source_diff': 2.5791000000000702e-05}, {'time': 0.018810222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018827292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7069999999997504e-05, 'source_diff': 1.7069999999997504e-05}, {'time': 0.018828389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.0188545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6110999999998802e-05, 'source_diff': 2.6110999999998802e-05}, {'time': 0.018855611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6082999999999662e-05, 'source_diff': 2.6082999999999662e-05}, {'time': 0.018882833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018894278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.018895431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018919347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3915999999998827e-05, 'source_diff': 2.3915999999998827e-05}, {'time': 0.018920431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018945292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4860999999997552e-05, 'source_diff': 2.4860999999997552e-05}, {'time': 0.018946417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018960361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3943999999998374e-05, 'source_diff': 1.3943999999998374e-05}, {'time': 0.018961514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018975167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.018976236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018990194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3957999999997944e-05, 'source_diff': 1.3957999999997944e-05}, {'time': 0.018991306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019009611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.830499999999971e-05, 'source_diff': 1.830499999999971e-05}, {'time': 0.019010736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019029667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.019030792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019046917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612499999999878e-05, 'source_diff': 1.612499999999878e-05}, {'time': 0.019048042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019059181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.019060306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019087333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7027000000002382e-05, 'source_diff': 2.7027000000002382e-05}, {'time': 0.019088458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019101472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.019102611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019131806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.919500000000269e-05, 'source_diff': 2.919500000000269e-05}, {'time': 0.019132931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019160264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7333000000000912e-05, 'source_diff': 2.7333000000000912e-05}, {'time': 0.019161403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019192153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.074999999999953e-05, 'source_diff': 3.074999999999953e-05}, {'time': 0.019193292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019220944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7651999999999538e-05, 'source_diff': 2.7651999999999538e-05}, {'time': 0.019222056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019251889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.019253014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019266639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.019267778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019280778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.019281917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019304611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2694000000000186e-05, 'source_diff': 2.2694000000000186e-05}, {'time': 0.019305694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019318736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3041999999997833e-05, 'source_diff': 1.3041999999997833e-05}, {'time': 0.019319833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019332542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708999999999637e-05, 'source_diff': 1.2708999999999637e-05}, {'time': 0.019333667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019348931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5264000000000943e-05, 'source_diff': 1.5264000000000943e-05}, {'time': 0.01935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019370778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0778000000002544e-05, 'source_diff': 2.0778000000002544e-05}, {'time': 0.019371903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019400181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.019401361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019419917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8555999999999434e-05, 'source_diff': 1.8555999999999434e-05}, {'time': 0.019421042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019434681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019435861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019456292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.043100000000131e-05, 'source_diff': 2.043100000000131e-05}, {'time': 0.019457417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019474486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.706899999999803e-05, 'source_diff': 1.706899999999803e-05}, {'time': 0.019475639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019499514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.387499999999959e-05, 'source_diff': 2.387499999999959e-05}, {'time': 0.019500639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019522056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.019523194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019540264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7070000000000973e-05, 'source_diff': 1.7070000000000973e-05}, {'time': 0.019541375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:15.734" endtime="20201110 08:36:15.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.729" endtime="20201110 08:36:15.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:15.763" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.1222000000001703e-05, 1.0419999999997098e-06, 3.07639999999991e-05, 1.125000000001125e-06, 1.612499999999878e-05, 1.1380000000012214e-06, 2.545899999999851...</msg>
<status status="PASS" starttime="20201110 08:36:15.740" endtime="20201110 08:36:15.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.767" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:15.766" endtime="20201110 08:36:15.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.771" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.1222000000001703e-05, 1.0419999999997098e-06, 3.07639999999991e-05, 1.125000000001125e-06, 1.612499999999878e-05, 1.1380000000012214e-06, 2.545899999999851e-05, 1.179999999999931e-06, 2.1986000000001615e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.139000000000695e-06, 2.7943999999998498e-05, 1.139000000000695e-06, 2.9500000000001747e-05, 1.1249999999976557e-06, 2.795900000000101e-05, 1.1380000000012214e-06, 1.3652999999998888e-05, 1.084000000001889e-06, 1.4943999999999374e-05, 1.068999999999376e-06, 2.116699999999902e-05, 1.0830000000024154e-06, 1.4291999999999083e-05, 1.0699999999988496e-06, 2.5791000000000702e-05, 1.125000000001125e-06, 1.7069999999997504e-05, 1.0970000000019853e-06, 2.6110999999998802e-05, 1.1110000000015552e-06, 2.6082999999999662e-05, 1.139000000000695e-06, 1.1444999999998817e-05, 1.153000000000265e-06, 2.3915999999998827e-05, 1.084000000001889e-06, 2.4860999999997552e-05, 1.125000000001125e-06, 1.3943999999998374e-05, 1.153000000000265e-06, 1.3653000000002358e-05, 1.068999999999376e-06, 1.3957999999997944e-05, 1.1120000000010288e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.893099999999981e-05, 1.125000000001125e-06, 1.612499999999878e-05, 1.125000000001125e-06, 1.1139000000000288e-05, 1.1249999999976557e-06, 2.7027000000002382e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.1389999999972256e-06, 2.919500000000269e-05, 1.1249999999976557e-06, 2.7333000000000912e-05, 1.139000000000695e-06, 3.074999999999953e-05, 1.139000000000695e-06, 2.7651999999999538e-05, 1.1120000000010288e-06, 2.9832999999999943e-05, 1.1249999999976557e-06, 1.3624999999999748e-05, 1.139000000000695e-06, 1.2999999999999123e-05, 1.139000000000695e-06, 2.2694000000000186e-05, 1.0830000000024154e-06, 1.3041999999997833e-05, 1.0970000000019853e-06, 1.2708999999999637e-05, 1.1249999999976557e-06, 1.5264000000000943e-05, 1.068999999999376e-06, 2.0778000000002544e-05, 1.1249999999976557e-06, 2.8277999999999637e-05, 1.179999999999931e-06, 1.8555999999999434e-05, 1.125000000001125e-06, 1.3638999999999318e-05, 1.179999999999931e-06, 2.043100000000131e-05, 1.125000000001125e-06, 1.706899999999803e-05, 1.153000000000265e-06, 2.387499999999959e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.1380000000012214e-06, 1.7070000000000973e-05, 1.1109999999980857e-06], 'eventdiff': [0, 1.125000000001125e-06, 1.1222000000001703e-05, 1.0419999999997098e-06, 3.07639999999991e-05, 1.125000000001125e-06, 1.612499999999878e-05, 1.1380000000012214e-06, 2.545899999999851e-05, 1.179999999999931e-06, 2.1986000000001615e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.139000000000695e-06, 2.7943999999998498e-05, 1.139000000000695e-06, 2.9500000000001747e-05, 1.1249999999976557e-06, 2.795900000000101e-05, 1.1380000000012214e-06, 1.3652999999998888e-05, 1.084000000001889e-06, 1.4943999999999374e-05, 1.068999999999376e-06, 2.116699999999902e-05, 1.0830000000024154e-06, 1.4291999999999083e-05, 1.0699999999988496e-06, 2.5791000000000702e-05, 1.125000000001125e-06, 1.7069999999997504e-05, 1.0970000000019853e-06, 2.6110999999998802e-05, 1.1110000000015552e-06, 2.6082999999999662e-05, 1.139000000000695e-06, 1.1444999999998817e-05, 1.153000000000265e-06, 2.3915999999998827e-05, 1.084000000001889e-06, 2.4860999999997552e-05, 1.125000000001125e-06, 1.3943999999998374e-05, 1.153000000000265e-06, 1.3653000000002358e-05, 1.068999999999376e-06, 1.3957999999997944e-05, 1.1120000000010288e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.893099999999981e-05, 1.125000000001125e-06, 1.612499999999878e-05, 1.125000000001125e-06, 1.1139000000000288e-05, 1.1249999999976557e-06, 2.7027000000002382e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.1389999999972256e-06, 2.919500000000269e-05, 1.1249999999976557e-06, 2.7333000000000912e-05, 1.139000000000695e-06, 3.074999999999953e-05, 1.139000000000695e-06, 2.7651999999999538e-05, 1.1120000000010288e-06, 2.9832999999999943e-05, 1.1249999999976557e-06, 1.3624999999999748e-05, 1.139000000000695e-06, 1.2999999999999123e-05, 1.139000000000695e-06, 2.2694000000000186e-05, 1.0830000000024154e-06, 1.3041999999997833e-05, 1.0970000000019853e-06, 1.2708999999999637e-05, 1.1249999999976557e-06, 1.5264000000000943e-05, 1.068999999999376e-06, 2.0778000000002544e-05, 1.1249999999976557e-06, 2.8277999999999637e-05, 1.179999999999931e-06, 1.8555999999999434e-05, 1.125000000001125e-06, 1.3638999999999318e-05, 1.179999999999931e-06, 2.043100000000131e-05, 1.125000000001125e-06, 1.706899999999803e-05, 1.153000000000265e-06, 2.387499999999959e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.1380000000012214e-06, 1.7070000000000973e-05, 1.1109999999980857e-06], 'time': [0.018493153, 0.018494278, 0.0185055, 0.018506542, 0.018537306, 0.018538431, 0.018554556, 0.018555694, 0.018581153, 0.018582333, 0.018604319, 0.018605444, 0.018625, 0.018626139, 0.018654083, 0.018655222, 0.018684722, 0.018685847, 0.018713806, 0.018714944, 0.018728597, 0.018729681, 0.018744625, 0.018745694, 0.018766861, 0.018767944, 0.018782236, 0.018783306, 0.018809097, 0.018810222, 0.018827292, 0.018828389, 0.0188545, 0.018855611, 0.018881694, 0.018882833, 0.018894278, 0.018895431, 0.018919347, 0.018920431, 0.018945292, 0.018946417, 0.018960361, 0.018961514, 0.018975167, 0.018976236, 0.018990194, 0.018991306, 0.019009611, 0.019010736, 0.019029667, 0.019030792, 0.019046917, 0.019048042, 0.019059181, 0.019060306, 0.019087333, 0.019088458, 0.019101472, 0.019102611, 0.019131806, 0.019132931, 0.019160264, 0.019161403, 0.019192153, 0.019193292, 0.019220944, 0.019222056, 0.019251889, 0.019253014, 0.019266639, 0.019267778, 0.019280778, 0.019281917, 0.019304611, 0.019305694, 0.019318736, 0.019319833, 0.019332542, 0.019333667, 0.019348931, 0.01935, 0.019370778, 0.019371903, 0.019400181, 0.019401361, 0.019419917, 0.019421042, 0.019434681, 0.019435861, 0.019456292, 0.019457417, 0.019474486, 0.019475639, 0.019499514, 0.019500639, 0.019522056, 0.019523194, 0.019540264, 0.019541375], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:36:15.768" endtime="20201110 08:36:15.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.764" endtime="20201110 08:36:15.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:15.777" level="INFO">${RESULT} = [{'time': 0.018494278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018506542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:15.773" endtime="20201110 08:36:15.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:15.790" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-...</msg>
<status status="PASS" starttime="20201110 08:36:15.778" endtime="20201110 08:36:15.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.795" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:15.794" endtime="20201110 08:36:15.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.797" level="INFO">VALUE: [1.125000000001125e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.084000000001889e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.068999999999376e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.1249999999976557e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1109999999980857e-06]</msg>
<status status="PASS" starttime="20201110 08:36:15.796" endtime="20201110 08:36:15.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.791" endtime="20201110 08:36:15.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.800" endtime="20201110 08:36:15.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:15.804" endtime="20201110 08:36:15.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.802" endtime="20201110 08:36:15.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.799" endtime="20201110 08:36:15.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.397" endtime="20201110 08:36:15.826"></status>
</kw>
<msg timestamp="20201110 08:36:15.826" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.833" endtime="20201110 08:36:15.842"></status>
</kw>
<msg timestamp="20201110 08:36:15.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.832" endtime="20201110 08:36:15.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:15.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:15.844" endtime="20201110 08:36:15.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.846" endtime="20201110 08:36:15.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.829" endtime="20201110 08:36:15.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.828" endtime="20201110 08:36:15.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:15.855" endtime="20201110 08:36:16.142"></status>
</kw>
<msg timestamp="20201110 08:36:16.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:15.854" endtime="20201110 08:36:16.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.146" endtime="20201110 08:36:16.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.155" endtime="20201110 08:36:16.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.851" endtime="20201110 08:36:16.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.850" endtime="20201110 08:36:16.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.161" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:16.160" endtime="20201110 08:36:16.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.166" level="INFO">VALUE: [{'time': 0.018510069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018525208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4013999999999693e-05, 'source_diff': 1.4013999999999693e-05}, {'time': 0.018526264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018545514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9249999999998435e-05, 'source_diff': 1.9249999999998435e-05}, {'time': 0.018546653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018564625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7972000000001515e-05, 'source_diff': 1.7972000000001515e-05}, {'time': 0.01856575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018585639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.98890000000021e-05, 'source_diff': 1.98890000000021e-05}, {'time': 0.018586792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018600083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.329099999999861e-05, 'source_diff': 1.329099999999861e-05}, {'time': 0.018601194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018626042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4847999999997455e-05, 'source_diff': 2.4847999999997455e-05}, {'time': 0.018627153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018644222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.706899999999803e-05, 'source_diff': 1.706899999999803e-05}, {'time': 0.018645347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018666764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.018667903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018689944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.018691056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018721819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0762999999999624e-05, 'source_diff': 3.0762999999999624e-05}, {'time': 0.018722944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018735958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.018737083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018759444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.236099999999852e-05, 'source_diff': 2.236099999999852e-05}, {'time': 0.018760556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018773875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.018775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018796458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1457999999998506e-05, 'source_diff': 2.1457999999998506e-05}, {'time': 0.018797542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018808708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1165999999999954e-05, 'source_diff': 1.1165999999999954e-05}, {'time': 0.018809819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018826875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7056000000001403e-05, 'source_diff': 1.7056000000001403e-05}, {'time': 0.018828, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018843514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5513999999997724e-05, 'source_diff': 1.5513999999997724e-05}, {'time': 0.018844639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018863569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8930000000000335e-05, 'source_diff': 1.8930000000000335e-05}, {'time': 0.018864681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018885472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.079099999999917e-05, 'source_diff': 2.079099999999917e-05}, {'time': 0.018886597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018912389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5792000000000176e-05, 'source_diff': 2.5792000000000176e-05}, {'time': 0.0189135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018942083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8582999999998693e-05, 'source_diff': 2.8582999999998693e-05}, {'time': 0.018943222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018955597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2375000000001968e-05, 'source_diff': 1.2375000000001968e-05}, {'time': 0.018956722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018984056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7334000000000386e-05, 'source_diff': 2.7334000000000386e-05}, {'time': 0.018985181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019008472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3290999999998202e-05, 'source_diff': 2.3290999999998202e-05}, {'time': 0.019009597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019036306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.670899999999976e-05, 'source_diff': 2.670899999999976e-05}, {'time': 0.019037444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019051389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944999999997848e-05, 'source_diff': 1.3944999999997848e-05}, {'time': 0.0190525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019068375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.587499999999853e-05, 'source_diff': 1.587499999999853e-05}, {'time': 0.019069444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4888999999997099e-05, 'source_diff': 1.4888999999997099e-05}, {'time': 0.019085458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019097528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2069999999999442e-05, 'source_diff': 1.2069999999999442e-05}, {'time': 0.019098681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019117889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9207999999999725e-05, 'source_diff': 1.9207999999999725e-05}, {'time': 0.019119028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019148528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9500000000001747e-05, 'source_diff': 2.9500000000001747e-05}, {'time': 0.019149653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019166153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6499999999999154e-05, 'source_diff': 1.6499999999999154e-05}, {'time': 0.019167222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019182417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194999999999098e-05, 'source_diff': 1.5194999999999098e-05}, {'time': 0.019183542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019208389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4846999999997982e-05, 'source_diff': 2.4846999999997982e-05}, {'time': 0.0192095, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019235917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.64170000000008e-05, 'source_diff': 2.64170000000008e-05}, {'time': 0.019237028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019253792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6763999999998974e-05, 'source_diff': 1.6763999999998974e-05}, {'time': 0.019254903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019272889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7986000000001084e-05, 'source_diff': 1.7986000000001084e-05}, {'time': 0.019274014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019291125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.711100000000021e-05, 'source_diff': 1.711100000000021e-05}, {'time': 0.019292208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019322347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.019323458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019350806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347999999999956e-05, 'source_diff': 2.7347999999999956e-05}, {'time': 0.019351958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1519999999973218e-06, 'source_diff': 1.1519999999973218e-06}, {'time': 0.019376167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.420900000000073e-05, 'source_diff': 2.420900000000073e-05}, {'time': 0.019377264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019388417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.019389542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019400681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.019401819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019426361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4541999999998926e-05, 'source_diff': 2.4541999999998926e-05}, {'time': 0.019427472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019455736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.019456861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019484514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.765300000000248e-05, 'source_diff': 2.765300000000248e-05}, {'time': 0.019485694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019509236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3541999999997926e-05, 'source_diff': 2.3541999999997926e-05}, {'time': 0.019510361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019525556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5194999999999098e-05, 'source_diff': 1.5194999999999098e-05}, {'time': 0.019526681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019548722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.019549875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:16.162" endtime="20201110 08:36:16.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.158" endtime="20201110 08:36:16.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:16.192" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.4013999999999693e-05, 1.0559999999992797e-06, 1.9249999999998435e-05, 1.139000000000695e-06, 1.7972000000001515e-05, 1.1249999999976557e-06, 1.988900000000...</msg>
<status status="PASS" starttime="20201110 08:36:16.169" endtime="20201110 08:36:16.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.196" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:16.195" endtime="20201110 08:36:16.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.200" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.4013999999999693e-05, 1.0559999999992797e-06, 1.9249999999998435e-05, 1.139000000000695e-06, 1.7972000000001515e-05, 1.1249999999976557e-06, 1.98890000000021e-05, 1.153000000000265e-06, 1.329099999999861e-05, 1.1110000000015552e-06, 2.4847999999997455e-05, 1.1110000000015552e-06, 1.706899999999803e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.139000000000695e-06, 2.204100000000042e-05, 1.1120000000010288e-06, 3.0762999999999624e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.1120000000010288e-06, 1.331899999999775e-05, 1.125000000001125e-06, 2.1457999999998506e-05, 1.084000000001889e-06, 1.1165999999999954e-05, 1.1109999999980857e-06, 1.7056000000001403e-05, 1.125000000001125e-06, 1.5513999999997724e-05, 1.125000000001125e-06, 1.8930000000000335e-05, 1.1120000000010288e-06, 2.079099999999917e-05, 1.125000000001125e-06, 2.5792000000000176e-05, 1.1109999999980857e-06, 2.8582999999998693e-05, 1.139000000000695e-06, 1.2375000000001968e-05, 1.1249999999976557e-06, 2.7334000000000386e-05, 1.125000000001125e-06, 2.3290999999998202e-05, 1.125000000001125e-06, 2.670899999999976e-05, 1.1380000000012214e-06, 1.3944999999997848e-05, 1.1110000000015552e-06, 1.587499999999853e-05, 1.0690000000028455e-06, 1.4888999999997099e-05, 1.125000000001125e-06, 1.2069999999999442e-05, 1.153000000000265e-06, 1.9207999999999725e-05, 1.139000000000695e-06, 2.9500000000001747e-05, 1.1249999999976557e-06, 1.6499999999999154e-05, 1.0690000000028455e-06, 1.5194999999999098e-05, 1.125000000001125e-06, 2.4846999999997982e-05, 1.1110000000015552e-06, 2.64170000000008e-05, 1.1109999999980857e-06, 1.6763999999998974e-05, 1.1110000000015552e-06, 1.7986000000001084e-05, 1.1249999999976557e-06, 1.711100000000021e-05, 1.0830000000024154e-06, 3.0138999999998473e-05, 1.1110000000015552e-06, 2.7347999999999956e-05, 1.1519999999973218e-06, 2.420900000000073e-05, 1.0970000000019853e-06, 1.1152999999999857e-05, 1.1249999999976557e-06, 1.1139000000000288e-05, 1.1380000000012214e-06, 2.4541999999998926e-05, 1.1110000000015552e-06, 2.8264000000000067e-05, 1.1249999999976557e-06, 2.765300000000248e-05, 1.179999999999931e-06, 2.3541999999997926e-05, 1.125000000001125e-06, 1.5194999999999098e-05, 1.125000000001125e-06, 2.204100000000042e-05, 1.153000000000265e-06], 'eventdiff': [0, 1.125000000001125e-06, 1.4013999999999693e-05, 1.0559999999992797e-06, 1.9249999999998435e-05, 1.139000000000695e-06, 1.7972000000001515e-05, 1.1249999999976557e-06, 1.98890000000021e-05, 1.153000000000265e-06, 1.329099999999861e-05, 1.1110000000015552e-06, 2.4847999999997455e-05, 1.1110000000015552e-06, 1.706899999999803e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.139000000000695e-06, 2.204100000000042e-05, 1.1120000000010288e-06, 3.0762999999999624e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.125000000001125e-06, 2.236099999999852e-05, 1.1120000000010288e-06, 1.331899999999775e-05, 1.125000000001125e-06, 2.1457999999998506e-05, 1.084000000001889e-06, 1.1165999999999954e-05, 1.1109999999980857e-06, 1.7056000000001403e-05, 1.125000000001125e-06, 1.5513999999997724e-05, 1.125000000001125e-06, 1.8930000000000335e-05, 1.1120000000010288e-06, 2.079099999999917e-05, 1.125000000001125e-06, 2.5792000000000176e-05, 1.1109999999980857e-06, 2.8582999999998693e-05, 1.139000000000695e-06, 1.2375000000001968e-05, 1.1249999999976557e-06, 2.7334000000000386e-05, 1.125000000001125e-06, 2.3290999999998202e-05, 1.125000000001125e-06, 2.670899999999976e-05, 1.1380000000012214e-06, 1.3944999999997848e-05, 1.1110000000015552e-06, 1.587499999999853e-05, 1.0690000000028455e-06, 1.4888999999997099e-05, 1.125000000001125e-06, 1.2069999999999442e-05, 1.153000000000265e-06, 1.9207999999999725e-05, 1.139000000000695e-06, 2.9500000000001747e-05, 1.1249999999976557e-06, 1.6499999999999154e-05, 1.0690000000028455e-06, 1.5194999999999098e-05, 1.125000000001125e-06, 2.4846999999997982e-05, 1.1110000000015552e-06, 2.64170000000008e-05, 1.1109999999980857e-06, 1.6763999999998974e-05, 1.1110000000015552e-06, 1.7986000000001084e-05, 1.1249999999976557e-06, 1.711100000000021e-05, 1.0830000000024154e-06, 3.0138999999998473e-05, 1.1110000000015552e-06, 2.7347999999999956e-05, 1.1519999999973218e-06, 2.420900000000073e-05, 1.0970000000019853e-06, 1.1152999999999857e-05, 1.1249999999976557e-06, 1.1139000000000288e-05, 1.1380000000012214e-06, 2.4541999999998926e-05, 1.1110000000015552e-06, 2.8264000000000067e-05, 1.1249999999976557e-06, 2.765300000000248e-05, 1.179999999999931e-06, 2.3541999999997926e-05, 1.125000000001125e-06, 1.5194999999999098e-05, 1.125000000001125e-06, 2.204100000000042e-05, 1.153000000000265e-06], 'time': [0.018510069, 0.018511194, 0.018525208, 0.018526264, 0.018545514, 0.018546653, 0.018564625, 0.01856575, 0.018585639, 0.018586792, 0.018600083, 0.018601194, 0.018626042, 0.018627153, 0.018644222, 0.018645347, 0.018666764, 0.018667903, 0.018689944, 0.018691056, 0.018721819, 0.018722944, 0.018735958, 0.018737083, 0.018759444, 0.018760556, 0.018773875, 0.018775, 0.018796458, 0.018797542, 0.018808708, 0.018809819, 0.018826875, 0.018828, 0.018843514, 0.018844639, 0.018863569, 0.018864681, 0.018885472, 0.018886597, 0.018912389, 0.0189135, 0.018942083, 0.018943222, 0.018955597, 0.018956722, 0.018984056, 0.018985181, 0.019008472, 0.019009597, 0.019036306, 0.019037444, 0.019051389, 0.0190525, 0.019068375, 0.019069444, 0.019084333, 0.019085458, 0.019097528, 0.019098681, 0.019117889, 0.019119028, 0.019148528, 0.019149653, 0.019166153, 0.019167222, 0.019182417, 0.019183542, 0.019208389, 0.0192095, 0.019235917, 0.019237028, 0.019253792, 0.019254903, 0.019272889, 0.019274014, 0.019291125, 0.019292208, 0.019322347, 0.019323458, 0.019350806, 0.019351958, 0.019376167, 0.019377264, 0.019388417, 0.019389542, 0.019400681, 0.019401819, 0.019426361, 0.019427472, 0.019455736, 0.019456861, 0.019484514, 0.019485694, 0.019509236, 0.019510361, 0.019525556, 0.019526681, 0.019548722, 0.019549875], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:16.197" endtime="20201110 08:36:16.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.193" endtime="20201110 08:36:16.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.206" level="INFO">${RESULT} = [{'time': 0.018511194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018526264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:16.203" endtime="20201110 08:36:16.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:16.219" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.0559999999992797e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.125000000001125e...</msg>
<status status="PASS" starttime="20201110 08:36:16.207" endtime="20201110 08:36:16.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.224" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:16.223" endtime="20201110 08:36:16.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.226" level="INFO">VALUE: [1.125000000001125e-06, 1.0559999999992797e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.084000000001889e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.0690000000028455e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.0690000000028455e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.1519999999973218e-06, 1.0970000000019853e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.153000000000265e-06]</msg>
<status status="PASS" starttime="20201110 08:36:16.225" endtime="20201110 08:36:16.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.220" endtime="20201110 08:36:16.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.229" endtime="20201110 08:36:16.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.232" endtime="20201110 08:36:16.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.231" endtime="20201110 08:36:16.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.228" endtime="20201110 08:36:16.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:15.826" endtime="20201110 08:36:16.253"></status>
</kw>
<msg timestamp="20201110 08:36:16.253" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.261" endtime="20201110 08:36:16.270"></status>
</kw>
<msg timestamp="20201110 08:36:16.271" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.259" endtime="20201110 08:36:16.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.272" endtime="20201110 08:36:16.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.274" endtime="20201110 08:36:16.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.257" endtime="20201110 08:36:16.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.255" endtime="20201110 08:36:16.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.283" endtime="20201110 08:36:16.569"></status>
</kw>
<msg timestamp="20201110 08:36:16.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.281" endtime="20201110 08:36:16.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018466569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.573" endtime="20201110 08:36:16.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.582" endtime="20201110 08:36:16.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.279" endtime="20201110 08:36:16.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.277" endtime="20201110 08:36:16.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.588" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:16.587" endtime="20201110 08:36:16.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.593" level="INFO">VALUE: [{'time': 0.018466569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018495681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8000000000000247e-05, 'source_diff': 2.8000000000000247e-05}, {'time': 0.018496764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018520375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.018521486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018536361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4875000000000999e-05, 'source_diff': 1.4875000000000999e-05}, {'time': 0.018537486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018551764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4277999999999513e-05, 'source_diff': 1.4277999999999513e-05}, {'time': 0.018552931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.018571181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8249999999997435e-05, 'source_diff': 1.8249999999997435e-05}, {'time': 0.018572306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018589986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7679999999999085e-05, 'source_diff': 1.7679999999999085e-05}, {'time': 0.018591111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018619375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8264000000000067e-05, 'source_diff': 2.8264000000000067e-05}, {'time': 0.018620514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018649097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8582999999998693e-05, 'source_diff': 2.8582999999998693e-05}, {'time': 0.018650208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018663917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3708999999997168e-05, 'source_diff': 1.3708999999997168e-05}, {'time': 0.018664972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018682403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.743100000000178e-05, 'source_diff': 1.743100000000178e-05}, {'time': 0.018683472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018705514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.018706653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.0187265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.984699999999992e-05, 'source_diff': 1.984699999999992e-05}, {'time': 0.018727625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.018746111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018758194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.018759319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018772958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.018774097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018791153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7056000000001403e-05, 'source_diff': 1.7056000000001403e-05}, {'time': 0.018792264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5805000000000272e-05, 'source_diff': 2.5805000000000272e-05}, {'time': 0.018819236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018846208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6972000000000107e-05, 'source_diff': 2.6972000000000107e-05}, {'time': 0.018847319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018874347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7027999999998387e-05, 'source_diff': 2.7027999999998387e-05}, {'time': 0.018875486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018890375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4889000000000568e-05, 'source_diff': 1.4889000000000568e-05}, {'time': 0.018891486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018908542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7056000000001403e-05, 'source_diff': 1.7056000000001403e-05}, {'time': 0.018909667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.018925375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018942764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.73889999999996e-05, 'source_diff': 1.73889999999996e-05}, {'time': 0.018943861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018967139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3278000000001575e-05, 'source_diff': 2.3278000000001575e-05}, {'time': 0.018968264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.863900000000085e-05, 'source_diff': 1.863900000000085e-05}, {'time': 0.018988083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019016292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.820900000000126e-05, 'source_diff': 2.820900000000126e-05}, {'time': 0.019017403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.01903075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3347000000000359e-05, 'source_diff': 1.3347000000000359e-05}, {'time': 0.019031847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019062611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.01906375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019092, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8250000000000497e-05, 'source_diff': 2.8250000000000497e-05}, {'time': 0.019093139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019111458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.831900000000275e-05, 'source_diff': 1.831900000000275e-05}, {'time': 0.019112639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019131167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8528000000000294e-05, 'source_diff': 1.8528000000000294e-05}, {'time': 0.019132292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019159, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6708000000000287e-05, 'source_diff': 2.6708000000000287e-05}, {'time': 0.019160125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019171597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019172722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019190083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.736100000000046e-05, 'source_diff': 1.736100000000046e-05}, {'time': 0.019191208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019209819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.861099999999824e-05, 'source_diff': 1.861099999999824e-05}, {'time': 0.019211, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019222083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1083000000002008e-05, 'source_diff': 1.1083000000002008e-05}, {'time': 0.019223222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019249931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.670899999999976e-05, 'source_diff': 2.670899999999976e-05}, {'time': 0.019251056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019275889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.483300000000188e-05, 'source_diff': 2.483300000000188e-05}, {'time': 0.019277014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019290653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3639000000002788e-05, 'source_diff': 1.3639000000002788e-05}, {'time': 0.019291778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019317875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.60970000000027e-05, 'source_diff': 2.60970000000027e-05}, {'time': 0.019318986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019346319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7333000000000912e-05, 'source_diff': 2.7333000000000912e-05}, {'time': 0.019347444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019371056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3612000000002714e-05, 'source_diff': 2.3612000000002714e-05}, {'time': 0.019372167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019384236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2068999999999969e-05, 'source_diff': 1.2068999999999969e-05}, {'time': 0.019385417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019408958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.354100000000192e-05, 'source_diff': 2.354100000000192e-05}, {'time': 0.019410083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019434306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.422299999999683e-05, 'source_diff': 2.422299999999683e-05}, {'time': 0.019435444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019465264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9819999999999847e-05, 'source_diff': 2.9819999999999847e-05}, {'time': 0.019466389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.01948625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.019487403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019505681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8278000000000044e-05, 'source_diff': 1.8278000000000044e-05}, {'time': 0.019506806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019526972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0165999999998546e-05, 'source_diff': 2.0165999999998546e-05}, {'time': 0.019528111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:16.589" endtime="20201110 08:36:16.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.585" endtime="20201110 08:36:16.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:16.619" level="INFO">${debug-compressed} = {'source_diff': [0, 1.1120000000010288e-06, 2.8000000000000247e-05, 1.082999999998946e-06, 2.361099999999977e-05, 1.1110000000015552e-06, 1.4875000000000999e-05, 1.1249999999976557e-06, 1.427799999999...</msg>
<status status="PASS" starttime="20201110 08:36:16.596" endtime="20201110 08:36:16.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.623" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:16.622" endtime="20201110 08:36:16.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.627" level="INFO">VALUE: {'source_diff': [0, 1.1120000000010288e-06, 2.8000000000000247e-05, 1.082999999998946e-06, 2.361099999999977e-05, 1.1110000000015552e-06, 1.4875000000000999e-05, 1.1249999999976557e-06, 1.4277999999999513e-05, 1.1670000000033043e-06, 1.8249999999997435e-05, 1.125000000001125e-06, 1.7679999999999085e-05, 1.125000000001125e-06, 2.8264000000000067e-05, 1.139000000000695e-06, 2.8582999999998693e-05, 1.1110000000015552e-06, 1.3708999999997168e-05, 1.054999999999806e-06, 1.743100000000178e-05, 1.068999999999376e-06, 2.2041999999999895e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.125000000001125e-06, 1.737500000000003e-05, 1.1109999999980857e-06, 1.2082999999999539e-05, 1.125000000001125e-06, 1.3638999999999318e-05, 1.139000000000695e-06, 1.7056000000001403e-05, 1.1109999999980857e-06, 2.5805000000000272e-05, 1.1669999999998348e-06, 2.6972000000000107e-05, 1.1110000000015552e-06, 2.7027999999998387e-05, 1.139000000000695e-06, 1.4889000000000568e-05, 1.1109999999980857e-06, 1.7056000000001403e-05, 1.125000000001125e-06, 1.459699999999814e-05, 1.1110000000015552e-06, 1.73889999999996e-05, 1.0969999999985158e-06, 2.3278000000001575e-05, 1.1249999999976557e-06, 1.863900000000085e-05, 1.179999999999931e-06, 2.820900000000126e-05, 1.1109999999980857e-06, 1.3347000000000359e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.139000000000695e-06, 2.8250000000000497e-05, 1.1389999999972256e-06, 1.831900000000275e-05, 1.1809999999994047e-06, 1.8528000000000294e-05, 1.1249999999976557e-06, 2.6708000000000287e-05, 1.125000000001125e-06, 1.1471999999998483e-05, 1.125000000001125e-06, 1.736100000000046e-05, 1.125000000001125e-06, 1.861099999999824e-05, 1.1809999999994047e-06, 1.1083000000002008e-05, 1.139000000000695e-06, 2.670899999999976e-05, 1.1249999999976557e-06, 2.483300000000188e-05, 1.1249999999976557e-06, 1.3639000000002788e-05, 1.1249999999976557e-06, 2.60970000000027e-05, 1.1109999999980857e-06, 2.7333000000000912e-05, 1.1249999999976557e-06, 2.3612000000002714e-05, 1.1109999999980857e-06, 1.2068999999999969e-05, 1.1809999999994047e-06, 2.354100000000192e-05, 1.125000000001125e-06, 2.422299999999683e-05, 1.1380000000012214e-06, 2.9819999999999847e-05, 1.125000000001125e-06, 1.986099999999949e-05, 1.153000000000265e-06, 1.8278000000000044e-05, 1.125000000001125e-06, 2.0165999999998546e-05, 1.139000000000695e-06], 'eventdiff': [0, 1.1120000000010288e-06, 2.8000000000000247e-05, 1.082999999998946e-06, 2.361099999999977e-05, 1.1110000000015552e-06, 1.4875000000000999e-05, 1.1249999999976557e-06, 1.4277999999999513e-05, 1.1670000000033043e-06, 1.8249999999997435e-05, 1.125000000001125e-06, 1.7679999999999085e-05, 1.125000000001125e-06, 2.8264000000000067e-05, 1.139000000000695e-06, 2.8582999999998693e-05, 1.1110000000015552e-06, 1.3708999999997168e-05, 1.054999999999806e-06, 1.743100000000178e-05, 1.068999999999376e-06, 2.2041999999999895e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.125000000001125e-06, 1.737500000000003e-05, 1.1109999999980857e-06, 1.2082999999999539e-05, 1.125000000001125e-06, 1.3638999999999318e-05, 1.139000000000695e-06, 1.7056000000001403e-05, 1.1109999999980857e-06, 2.5805000000000272e-05, 1.1669999999998348e-06, 2.6972000000000107e-05, 1.1110000000015552e-06, 2.7027999999998387e-05, 1.139000000000695e-06, 1.4889000000000568e-05, 1.1109999999980857e-06, 1.7056000000001403e-05, 1.125000000001125e-06, 1.459699999999814e-05, 1.1110000000015552e-06, 1.73889999999996e-05, 1.0969999999985158e-06, 2.3278000000001575e-05, 1.1249999999976557e-06, 1.863900000000085e-05, 1.179999999999931e-06, 2.820900000000126e-05, 1.1109999999980857e-06, 1.3347000000000359e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.139000000000695e-06, 2.8250000000000497e-05, 1.1389999999972256e-06, 1.831900000000275e-05, 1.1809999999994047e-06, 1.8528000000000294e-05, 1.1249999999976557e-06, 2.6708000000000287e-05, 1.125000000001125e-06, 1.1471999999998483e-05, 1.125000000001125e-06, 1.736100000000046e-05, 1.125000000001125e-06, 1.861099999999824e-05, 1.1809999999994047e-06, 1.1083000000002008e-05, 1.139000000000695e-06, 2.670899999999976e-05, 1.1249999999976557e-06, 2.483300000000188e-05, 1.1249999999976557e-06, 1.3639000000002788e-05, 1.1249999999976557e-06, 2.60970000000027e-05, 1.1109999999980857e-06, 2.7333000000000912e-05, 1.1249999999976557e-06, 2.3612000000002714e-05, 1.1109999999980857e-06, 1.2068999999999969e-05, 1.1809999999994047e-06, 2.354100000000192e-05, 1.125000000001125e-06, 2.422299999999683e-05, 1.1380000000012214e-06, 2.9819999999999847e-05, 1.125000000001125e-06, 1.986099999999949e-05, 1.153000000000265e-06, 1.8278000000000044e-05, 1.125000000001125e-06, 2.0165999999998546e-05, 1.139000000000695e-06], 'time': [0.018466569, 0.018467681, 0.018495681, 0.018496764, 0.018520375, 0.018521486, 0.018536361, 0.018537486, 0.018551764, 0.018552931, 0.018571181, 0.018572306, 0.018589986, 0.018591111, 0.018619375, 0.018620514, 0.018649097, 0.018650208, 0.018663917, 0.018664972, 0.018682403, 0.018683472, 0.018705514, 0.018706653, 0.0187265, 0.018727625, 0.018745, 0.018746111, 0.018758194, 0.018759319, 0.018772958, 0.018774097, 0.018791153, 0.018792264, 0.018818069, 0.018819236, 0.018846208, 0.018847319, 0.018874347, 0.018875486, 0.018890375, 0.018891486, 0.018908542, 0.018909667, 0.018924264, 0.018925375, 0.018942764, 0.018943861, 0.018967139, 0.018968264, 0.018986903, 0.018988083, 0.019016292, 0.019017403, 0.01903075, 0.019031847, 0.019062611, 0.01906375, 0.019092, 0.019093139, 0.019111458, 0.019112639, 0.019131167, 0.019132292, 0.019159, 0.019160125, 0.019171597, 0.019172722, 0.019190083, 0.019191208, 0.019209819, 0.019211, 0.019222083, 0.019223222, 0.019249931, 0.019251056, 0.019275889, 0.019277014, 0.019290653, 0.019291778, 0.019317875, 0.019318986, 0.019346319, 0.019347444, 0.019371056, 0.019372167, 0.019384236, 0.019385417, 0.019408958, 0.019410083, 0.019434306, 0.019435444, 0.019465264, 0.019466389, 0.01948625, 0.019487403, 0.019505681, 0.019506806, 0.019526972, 0.019528111], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:16.624" endtime="20201110 08:36:16.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.620" endtime="20201110 08:36:16.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:16.633" level="INFO">${RESULT} = [{'time': 0.018467681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018496764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:16.630" endtime="20201110 08:36:16.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:16.646" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.1120000000010288e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1670000000033043e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e...</msg>
<status status="PASS" starttime="20201110 08:36:16.634" endtime="20201110 08:36:16.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.651" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:16.650" endtime="20201110 08:36:16.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.653" level="INFO">VALUE: [1.1120000000010288e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1670000000033043e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.179999999999931e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1809999999994047e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.139000000000695e-06]</msg>
<status status="PASS" starttime="20201110 08:36:16.652" endtime="20201110 08:36:16.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.647" endtime="20201110 08:36:16.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.657" endtime="20201110 08:36:16.658"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:16.661" endtime="20201110 08:36:16.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.659" endtime="20201110 08:36:16.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.655" endtime="20201110 08:36:16.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.254" endtime="20201110 08:36:16.682"></status>
</kw>
<msg timestamp="20201110 08:36:16.682" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.690" endtime="20201110 08:36:16.699"></status>
</kw>
<msg timestamp="20201110 08:36:16.700" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.689" endtime="20201110 08:36:16.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:16.702" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:16.701" endtime="20201110 08:36:16.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.703" endtime="20201110 08:36:16.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.685" endtime="20201110 08:36:16.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.684" endtime="20201110 08:36:16.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:16.712" endtime="20201110 08:36:16.998"></status>
</kw>
<msg timestamp="20201110 08:36:17.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:16.711" endtime="20201110 08:36:17.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.002" endtime="20201110 08:36:17.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.011" endtime="20201110 08:36:17.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.708" endtime="20201110 08:36:17.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.707" endtime="20201110 08:36:17.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.017" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:17.016" endtime="20201110 08:36:17.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.022" level="INFO">VALUE: [{'time': 0.019391986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019393111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019417333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4221999999997357e-05, 'source_diff': 2.4221999999997357e-05}, {'time': 0.019418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019442986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4527999999999356e-05, 'source_diff': 2.4527999999999356e-05}, {'time': 0.019444125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019469889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5764000000001036e-05, 'source_diff': 2.5764000000001036e-05}, {'time': 0.019471014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019496236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5222000000001826e-05, 'source_diff': 2.5222000000001826e-05}, {'time': 0.019497292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019514347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.705500000000193e-05, 'source_diff': 1.705500000000193e-05}, {'time': 0.019515486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.01954625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.076400000000257e-05, 'source_diff': 3.076400000000257e-05}, {'time': 0.019547375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019567847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0472000000000545e-05, 'source_diff': 2.0472000000000545e-05}, {'time': 0.019568958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019585708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6749999999999404e-05, 'source_diff': 1.6749999999999404e-05}, {'time': 0.019586833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019613, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.616699999999708e-05, 'source_diff': 2.616699999999708e-05}, {'time': 0.019614042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019634847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.080499999999874e-05, 'source_diff': 2.080499999999874e-05}, {'time': 0.019635958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019658014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2056000000002934e-05, 'source_diff': 2.2056000000002934e-05}, {'time': 0.019659139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019675569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6430000000001305e-05, 'source_diff': 1.6430000000001305e-05}, {'time': 0.019676694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019706833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.019707944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019737472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9527999999997417e-05, 'source_diff': 2.9527999999997417e-05}, {'time': 0.019738583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019765931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347999999999956e-05, 'source_diff': 2.7347999999999956e-05}, {'time': 0.019767042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019784097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.705500000000193e-05, 'source_diff': 1.705500000000193e-05}, {'time': 0.019785236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019805083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.984699999999992e-05, 'source_diff': 1.984699999999992e-05}, {'time': 0.019806208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019819222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3014000000002163e-05, 'source_diff': 1.3014000000002163e-05}, {'time': 0.019820361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019833694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.019834875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019853778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.890300000000067e-05, 'source_diff': 1.890300000000067e-05}, {'time': 0.019854847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019884375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9528000000000887e-05, 'source_diff': 2.9528000000000887e-05}, {'time': 0.019885486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.01989975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.019900889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019924778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.388899999999916e-05, 'source_diff': 2.388899999999916e-05}, {'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019942972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.705499999999846e-05, 'source_diff': 1.705499999999846e-05}, {'time': 0.019944097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019960528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.643100000000078e-05, 'source_diff': 1.643100000000078e-05}, {'time': 0.019961667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019984347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2680000000000616e-05, 'source_diff': 2.2680000000000616e-05}, {'time': 0.019985458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020009361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.390299999999873e-05, 'source_diff': 2.390299999999873e-05}, {'time': 0.020010472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020025986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5513999999997724e-05, 'source_diff': 1.5513999999997724e-05}, {'time': 0.020027111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020047292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.018100000000106e-05, 'source_diff': 2.018100000000106e-05}, {'time': 0.020048403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020068958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.055500000000196e-05, 'source_diff': 2.055500000000196e-05}, {'time': 0.020070014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020088639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862499999999781e-05, 'source_diff': 1.862499999999781e-05}, {'time': 0.020089764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020106194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6430000000001305e-05, 'source_diff': 1.6430000000001305e-05}, {'time': 0.020107319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.020121, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3681000000001498e-05, 'source_diff': 1.3681000000001498e-05}, {'time': 0.020122083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020138833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6749999999999404e-05, 'source_diff': 1.6749999999999404e-05}, {'time': 0.020139972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.020164806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4834000000001355e-05, 'source_diff': 2.4834000000001355e-05}, {'time': 0.020165972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.020190458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4486000000000646e-05, 'source_diff': 2.4486000000000646e-05}, {'time': 0.020191583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.020213306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.172300000000127e-05, 'source_diff': 2.172300000000127e-05}, {'time': 0.020214444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.020232431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.798699999999709e-05, 'source_diff': 1.798699999999709e-05}, {'time': 0.020233569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.020262444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8875000000001122e-05, 'source_diff': 2.8875000000001122e-05}, {'time': 0.020263583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.020284111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0527999999998825e-05, 'source_diff': 2.0527999999998825e-05}, {'time': 0.020285181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020303806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.020304931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.02032575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.081900000000178e-05, 'source_diff': 2.081900000000178e-05}, {'time': 0.020326847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.020343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.643100000000078e-05, 'source_diff': 1.643100000000078e-05}, {'time': 0.020344403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020374875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0472000000000138e-05, 'source_diff': 3.0472000000000138e-05}, {'time': 0.020375972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.020406153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0181000000000652e-05, 'source_diff': 3.0181000000000652e-05}, {'time': 0.020407222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7777999999999544e-05, 'source_diff': 1.7777999999999544e-05}, {'time': 0.020426042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.020450583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.454100000000292e-05, 'source_diff': 2.454100000000292e-05}, {'time': 0.020451694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020463139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1445000000002287e-05, 'source_diff': 1.1445000000002287e-05}, {'time': 0.020464264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.020478222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.020479347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:17.018" endtime="20201110 08:36:17.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.014" endtime="20201110 08:36:17.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:17.048" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 2.4221999999997357e-05, 1.125000000001125e-06, 2.4527999999999356e-05, 1.139000000000695e-06, 2.5764000000001036e-05, 1.1249999999976557e-06, 2.5222000000001...</msg>
<status status="PASS" starttime="20201110 08:36:17.025" endtime="20201110 08:36:17.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.052" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:17.051" endtime="20201110 08:36:17.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.056" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 2.4221999999997357e-05, 1.125000000001125e-06, 2.4527999999999356e-05, 1.139000000000695e-06, 2.5764000000001036e-05, 1.1249999999976557e-06, 2.5222000000001826e-05, 1.0559999999992797e-06, 1.705500000000193e-05, 1.1389999999972256e-06, 3.076400000000257e-05, 1.1249999999976557e-06, 2.0472000000000545e-05, 1.1110000000015552e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.616699999999708e-05, 1.0420000000031793e-06, 2.080499999999874e-05, 1.1109999999980857e-06, 2.2056000000002934e-05, 1.1249999999976557e-06, 1.6430000000001305e-05, 1.125000000001125e-06, 3.0138999999998473e-05, 1.1110000000015552e-06, 2.9527999999997417e-05, 1.1110000000015552e-06, 2.7347999999999956e-05, 1.1109999999980857e-06, 1.705500000000193e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.139000000000695e-06, 1.333299999999732e-05, 1.1809999999994047e-06, 1.890300000000067e-05, 1.068999999999376e-06, 2.9528000000000887e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.139000000000695e-06, 2.388899999999916e-05, 1.139000000000695e-06, 1.705499999999846e-05, 1.125000000001125e-06, 1.643100000000078e-05, 1.1389999999972256e-06, 2.2680000000000616e-05, 1.1110000000015552e-06, 2.390299999999873e-05, 1.1110000000015552e-06, 1.5513999999997724e-05, 1.125000000001125e-06, 2.018100000000106e-05, 1.1109999999980857e-06, 2.055500000000196e-05, 1.0559999999992797e-06, 1.862499999999781e-05, 1.125000000001125e-06, 1.6430000000001305e-05, 1.1249999999976557e-06, 1.3681000000001498e-05, 1.082999999998946e-06, 1.6749999999999404e-05, 1.139000000000695e-06, 2.4834000000001355e-05, 1.1660000000003612e-06, 2.4486000000000646e-05, 1.1249999999976557e-06, 2.172300000000127e-05, 1.1380000000012214e-06, 1.798699999999709e-05, 1.1380000000012214e-06, 2.8875000000001122e-05, 1.139000000000695e-06, 2.0527999999998825e-05, 1.0699999999988496e-06, 1.862500000000128e-05, 1.1249999999976557e-06, 2.081900000000178e-05, 1.0969999999985158e-06, 1.643100000000078e-05, 1.125000000001125e-06, 3.0472000000000138e-05, 1.0969999999985158e-06, 3.0181000000000652e-05, 1.068999999999376e-06, 1.7777999999999544e-05, 1.0419999999997098e-06, 2.454100000000292e-05, 1.1109999999980857e-06, 1.1445000000002287e-05, 1.1249999999976557e-06, 1.3958000000001414e-05, 1.1249999999976557e-06], 'eventdiff': [0, 1.125000000001125e-06, 2.4221999999997357e-05, 1.125000000001125e-06, 2.4527999999999356e-05, 1.139000000000695e-06, 2.5764000000001036e-05, 1.1249999999976557e-06, 2.5222000000001826e-05, 1.0559999999992797e-06, 1.705500000000193e-05, 1.1389999999972256e-06, 3.076400000000257e-05, 1.1249999999976557e-06, 2.0472000000000545e-05, 1.1110000000015552e-06, 1.6749999999999404e-05, 1.125000000001125e-06, 2.616699999999708e-05, 1.0420000000031793e-06, 2.080499999999874e-05, 1.1109999999980857e-06, 2.2056000000002934e-05, 1.1249999999976557e-06, 1.6430000000001305e-05, 1.125000000001125e-06, 3.0138999999998473e-05, 1.1110000000015552e-06, 2.9527999999997417e-05, 1.1110000000015552e-06, 2.7347999999999956e-05, 1.1109999999980857e-06, 1.705500000000193e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.1249999999976557e-06, 1.3014000000002163e-05, 1.139000000000695e-06, 1.333299999999732e-05, 1.1809999999994047e-06, 1.890300000000067e-05, 1.068999999999376e-06, 2.9528000000000887e-05, 1.1110000000015552e-06, 1.4263999999999943e-05, 1.139000000000695e-06, 2.388899999999916e-05, 1.139000000000695e-06, 1.705499999999846e-05, 1.125000000001125e-06, 1.643100000000078e-05, 1.1389999999972256e-06, 2.2680000000000616e-05, 1.1110000000015552e-06, 2.390299999999873e-05, 1.1110000000015552e-06, 1.5513999999997724e-05, 1.125000000001125e-06, 2.018100000000106e-05, 1.1109999999980857e-06, 2.055500000000196e-05, 1.0559999999992797e-06, 1.862499999999781e-05, 1.125000000001125e-06, 1.6430000000001305e-05, 1.1249999999976557e-06, 1.3681000000001498e-05, 1.082999999998946e-06, 1.6749999999999404e-05, 1.139000000000695e-06, 2.4834000000001355e-05, 1.1660000000003612e-06, 2.4486000000000646e-05, 1.1249999999976557e-06, 2.172300000000127e-05, 1.1380000000012214e-06, 1.798699999999709e-05, 1.1380000000012214e-06, 2.8875000000001122e-05, 1.139000000000695e-06, 2.0527999999998825e-05, 1.0699999999988496e-06, 1.862500000000128e-05, 1.1249999999976557e-06, 2.081900000000178e-05, 1.0969999999985158e-06, 1.643100000000078e-05, 1.125000000001125e-06, 3.0472000000000138e-05, 1.0969999999985158e-06, 3.0181000000000652e-05, 1.068999999999376e-06, 1.7777999999999544e-05, 1.0419999999997098e-06, 2.454100000000292e-05, 1.1109999999980857e-06, 1.1445000000002287e-05, 1.1249999999976557e-06, 1.3958000000001414e-05, 1.1249999999976557e-06], 'time': [0.019391986, 0.019393111, 0.019417333, 0.019418458, 0.019442986, 0.019444125, 0.019469889, 0.019471014, 0.019496236, 0.019497292, 0.019514347, 0.019515486, 0.01954625, 0.019547375, 0.019567847, 0.019568958, 0.019585708, 0.019586833, 0.019613, 0.019614042, 0.019634847, 0.019635958, 0.019658014, 0.019659139, 0.019675569, 0.019676694, 0.019706833, 0.019707944, 0.019737472, 0.019738583, 0.019765931, 0.019767042, 0.019784097, 0.019785236, 0.019805083, 0.019806208, 0.019819222, 0.019820361, 0.019833694, 0.019834875, 0.019853778, 0.019854847, 0.019884375, 0.019885486, 0.01989975, 0.019900889, 0.019924778, 0.019925917, 0.019942972, 0.019944097, 0.019960528, 0.019961667, 0.019984347, 0.019985458, 0.020009361, 0.020010472, 0.020025986, 0.020027111, 0.020047292, 0.020048403, 0.020068958, 0.020070014, 0.020088639, 0.020089764, 0.020106194, 0.020107319, 0.020121, 0.020122083, 0.020138833, 0.020139972, 0.020164806, 0.020165972, 0.020190458, 0.020191583, 0.020213306, 0.020214444, 0.020232431, 0.020233569, 0.020262444, 0.020263583, 0.020284111, 0.020285181, 0.020303806, 0.020304931, 0.02032575, 0.020326847, 0.020343278, 0.020344403, 0.020374875, 0.020375972, 0.020406153, 0.020407222, 0.020425, 0.020426042, 0.020450583, 0.020451694, 0.020463139, 0.020464264, 0.020478222, 0.020479347], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:36:17.053" endtime="20201110 08:36:17.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.049" endtime="20201110 08:36:17.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.061" level="INFO">${RESULT} = [{'time': 0.019393111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019418458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:17.058" endtime="20201110 08:36:17.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:17.075" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.0559999999992797e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1110000000015552...</msg>
<status status="PASS" starttime="20201110 08:36:17.062" endtime="20201110 08:36:17.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.079" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:17.078" endtime="20201110 08:36:17.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.082" level="INFO">VALUE: [1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.0559999999992797e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0420000000031793e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1809999999994047e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.1660000000003612e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.1380000000012214e-06, 1.139000000000695e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1249999999976557e-06]</msg>
<status status="PASS" starttime="20201110 08:36:17.080" endtime="20201110 08:36:17.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.076" endtime="20201110 08:36:17.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.085" endtime="20201110 08:36:17.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.088" endtime="20201110 08:36:17.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.087" endtime="20201110 08:36:17.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.083" endtime="20201110 08:36:17.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:16.682" endtime="20201110 08:36:17.109"></status>
</kw>
<msg timestamp="20201110 08:36:17.109" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.117" endtime="20201110 08:36:17.126"></status>
</kw>
<msg timestamp="20201110 08:36:17.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.115" endtime="20201110 08:36:17.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.129" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.127" endtime="20201110 08:36:17.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.130" endtime="20201110 08:36:17.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.113" endtime="20201110 08:36:17.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.111" endtime="20201110 08:36:17.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.139" endtime="20201110 08:36:17.424"></status>
</kw>
<msg timestamp="20201110 08:36:17.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.137" endtime="20201110 08:36:17.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.428" endtime="20201110 08:36:17.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.437" endtime="20201110 08:36:17.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.135" endtime="20201110 08:36:17.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.133" endtime="20201110 08:36:17.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.443" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:17.442" endtime="20201110 08:36:17.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.449" level="INFO">VALUE: [{'time': 0.018506431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018520889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.333299999999732e-05, 'source_diff': 1.333299999999732e-05}, {'time': 0.018522056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.0185435, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1444000000002406e-05, 'source_diff': 2.1444000000002406e-05}, {'time': 0.018544542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.0185585, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3957999999997944e-05, 'source_diff': 1.3957999999997944e-05}, {'time': 0.018559625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018581042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.018582167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018611681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9514000000001317e-05, 'source_diff': 2.9514000000001317e-05}, {'time': 0.018612819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.018630806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7987000000000558e-05, 'source_diff': 1.7987000000000558e-05}, {'time': 0.018631958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.018645014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3056000000000872e-05, 'source_diff': 1.3056000000000872e-05}, {'time': 0.018646069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018660014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944999999997848e-05, 'source_diff': 1.3944999999997848e-05}, {'time': 0.018661139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018680083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.018681222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018703556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2333999999998855e-05, 'source_diff': 2.2333999999998855e-05}, {'time': 0.018704694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018735153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.045900000000004e-05, 'source_diff': 3.045900000000004e-05}, {'time': 0.018736264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018757986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1722000000001795e-05, 'source_diff': 2.1722000000001795e-05}, {'time': 0.018759111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018772153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3042000000001303e-05, 'source_diff': 1.3042000000001303e-05}, {'time': 0.018773264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.0187975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4236000000000396e-05, 'source_diff': 2.4236000000000396e-05}, {'time': 0.018798611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018824722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6110999999998802e-05, 'source_diff': 2.6110999999998802e-05}, {'time': 0.018825819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018846319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0499999999999685e-05, 'source_diff': 2.0499999999999685e-05}, {'time': 0.018847444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018876653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.920899999999879e-05, 'source_diff': 2.920899999999879e-05}, {'time': 0.018877778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018902625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4846999999997982e-05, 'source_diff': 2.4846999999997982e-05}, {'time': 0.01890375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018926764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3013999999998286e-05, 'source_diff': 2.3013999999998286e-05}, {'time': 0.018927847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018944611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6763999999998974e-05, 'source_diff': 1.6763999999998974e-05}, {'time': 0.018945736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018966542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0805999999998215e-05, 'source_diff': 2.0805999999998215e-05}, {'time': 0.018967653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018985347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7693999999998655e-05, 'source_diff': 1.7693999999998655e-05}, {'time': 0.018986472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019008875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.24030000000007e-05, 'source_diff': 2.24030000000007e-05}, {'time': 0.019009972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019030139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.016700000000149e-05, 'source_diff': 2.016700000000149e-05}, {'time': 0.019031264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019043028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019044167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019066542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.237499999999809e-05, 'source_diff': 2.237499999999809e-05}, {'time': 0.019067639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019081889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.019083028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019097583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4555000000002899e-05, 'source_diff': 1.4555000000002899e-05}, {'time': 0.019098722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019118597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987500000000253e-05, 'source_diff': 1.987500000000253e-05}, {'time': 0.019119708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019134278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4570000000001943e-05, 'source_diff': 1.4570000000001943e-05}, {'time': 0.019135403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019159, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.019160139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019179986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.984699999999992e-05, 'source_diff': 1.984699999999992e-05}, {'time': 0.019181111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.01919725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613899999999835e-05, 'source_diff': 1.613899999999835e-05}, {'time': 0.019198361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019227889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9528000000000887e-05, 'source_diff': 2.9528000000000887e-05}, {'time': 0.019229, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019255764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6764000000002036e-05, 'source_diff': 2.6764000000002036e-05}, {'time': 0.019256847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019277028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.018100000000106e-05, 'source_diff': 2.018100000000106e-05}, {'time': 0.019278153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019307042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889000000000692e-05, 'source_diff': 2.8889000000000692e-05}, {'time': 0.019308194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.019330208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2014000000000755e-05, 'source_diff': 2.2014000000000755e-05}, {'time': 0.019331333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019357125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5792000000000176e-05, 'source_diff': 2.5792000000000176e-05}, {'time': 0.019358264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019387458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9193999999999748e-05, 'source_diff': 2.9193999999999748e-05}, {'time': 0.019388569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019406889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8319999999998754e-05, 'source_diff': 1.8319999999998754e-05}, {'time': 0.019408014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019436917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8903000000000262e-05, 'source_diff': 2.8903000000000262e-05}, {'time': 0.019438069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1519999999973218e-06, 'source_diff': 1.1519999999973218e-06}, {'time': 0.019452, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3931000000001748e-05, 'source_diff': 1.3931000000001748e-05}, {'time': 0.019453111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019477958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.019479083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.643100000000037e-05, 'source_diff': 2.643100000000037e-05}, {'time': 0.019506625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019520264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019521389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019546542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.019547681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019576569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.888799999999775e-05, 'source_diff': 2.888799999999775e-05}, {'time': 0.019577694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019596319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.019597444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:17.445" endtime="20201110 08:36:17.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.440" endtime="20201110 08:36:17.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:17.475" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.333299999999732e-05, 1.1669999999998348e-06, 2.1444000000002406e-05, 1.0419999999997098e-06, 1.3957999999997944e-05, 1.125000000001125e-06, 2.1416999999999...</msg>
<status status="PASS" starttime="20201110 08:36:17.452" endtime="20201110 08:36:17.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:17.478" endtime="20201110 08:36:17.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.483" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.333299999999732e-05, 1.1669999999998348e-06, 2.1444000000002406e-05, 1.0419999999997098e-06, 1.3957999999997944e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.125000000001125e-06, 2.9514000000001317e-05, 1.137999999997752e-06, 1.7987000000000558e-05, 1.1520000000007913e-06, 1.3056000000000872e-05, 1.054999999999806e-06, 1.3944999999997848e-05, 1.125000000001125e-06, 1.8943999999999905e-05, 1.139000000000695e-06, 2.2333999999998855e-05, 1.1380000000012214e-06, 3.045900000000004e-05, 1.1109999999980857e-06, 2.1722000000001795e-05, 1.1249999999976557e-06, 1.3042000000001303e-05, 1.1110000000015552e-06, 2.4236000000000396e-05, 1.1109999999980857e-06, 2.6110999999998802e-05, 1.0970000000019853e-06, 2.0499999999999685e-05, 1.125000000001125e-06, 2.920899999999879e-05, 1.125000000001125e-06, 2.4846999999997982e-05, 1.125000000001125e-06, 2.3013999999998286e-05, 1.0830000000024154e-06, 1.6763999999998974e-05, 1.125000000001125e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 1.7693999999998655e-05, 1.125000000001125e-06, 2.24030000000007e-05, 1.0969999999985158e-06, 2.016700000000149e-05, 1.1249999999976557e-06, 1.1764000000000913e-05, 1.139000000000695e-06, 2.237499999999809e-05, 1.0970000000019853e-06, 1.4250000000000373e-05, 1.1389999999972256e-06, 1.4555000000002899e-05, 1.1389999999972256e-06, 1.987500000000253e-05, 1.1109999999980857e-06, 1.4570000000001943e-05, 1.1249999999976557e-06, 2.35970000000002e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.125000000001125e-06, 1.613899999999835e-05, 1.1110000000015552e-06, 2.9528000000000887e-05, 1.1109999999980857e-06, 2.6764000000002036e-05, 1.082999999998946e-06, 2.018100000000106e-05, 1.1249999999976557e-06, 2.8889000000000692e-05, 1.1520000000007913e-06, 2.2014000000000755e-05, 1.1249999999976557e-06, 2.5792000000000176e-05, 1.139000000000695e-06, 2.9193999999999748e-05, 1.1110000000015552e-06, 1.8319999999998754e-05, 1.125000000001125e-06, 2.8903000000000262e-05, 1.1519999999973218e-06, 1.3931000000001748e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.125000000001125e-06, 2.643100000000037e-05, 1.1109999999980857e-06, 1.3638999999999318e-05, 1.125000000001125e-06, 2.515299999999998e-05, 1.139000000000695e-06, 2.888799999999775e-05, 1.125000000001125e-06, 1.862500000000128e-05, 1.1249999999976557e-06], 'eventdiff': [0, 1.125000000001125e-06, 1.333299999999732e-05, 1.1669999999998348e-06, 2.1444000000002406e-05, 1.0419999999997098e-06, 1.3957999999997944e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.125000000001125e-06, 2.9514000000001317e-05, 1.137999999997752e-06, 1.7987000000000558e-05, 1.1520000000007913e-06, 1.3056000000000872e-05, 1.054999999999806e-06, 1.3944999999997848e-05, 1.125000000001125e-06, 1.8943999999999905e-05, 1.139000000000695e-06, 2.2333999999998855e-05, 1.1380000000012214e-06, 3.045900000000004e-05, 1.1109999999980857e-06, 2.1722000000001795e-05, 1.1249999999976557e-06, 1.3042000000001303e-05, 1.1110000000015552e-06, 2.4236000000000396e-05, 1.1109999999980857e-06, 2.6110999999998802e-05, 1.0970000000019853e-06, 2.0499999999999685e-05, 1.125000000001125e-06, 2.920899999999879e-05, 1.125000000001125e-06, 2.4846999999997982e-05, 1.125000000001125e-06, 2.3013999999998286e-05, 1.0830000000024154e-06, 1.6763999999998974e-05, 1.125000000001125e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 1.7693999999998655e-05, 1.125000000001125e-06, 2.24030000000007e-05, 1.0969999999985158e-06, 2.016700000000149e-05, 1.1249999999976557e-06, 1.1764000000000913e-05, 1.139000000000695e-06, 2.237499999999809e-05, 1.0970000000019853e-06, 1.4250000000000373e-05, 1.1389999999972256e-06, 1.4555000000002899e-05, 1.1389999999972256e-06, 1.987500000000253e-05, 1.1109999999980857e-06, 1.4570000000001943e-05, 1.1249999999976557e-06, 2.35970000000002e-05, 1.139000000000695e-06, 1.984699999999992e-05, 1.125000000001125e-06, 1.613899999999835e-05, 1.1110000000015552e-06, 2.9528000000000887e-05, 1.1109999999980857e-06, 2.6764000000002036e-05, 1.082999999998946e-06, 2.018100000000106e-05, 1.1249999999976557e-06, 2.8889000000000692e-05, 1.1520000000007913e-06, 2.2014000000000755e-05, 1.1249999999976557e-06, 2.5792000000000176e-05, 1.139000000000695e-06, 2.9193999999999748e-05, 1.1110000000015552e-06, 1.8319999999998754e-05, 1.125000000001125e-06, 2.8903000000000262e-05, 1.1519999999973218e-06, 1.3931000000001748e-05, 1.1109999999980857e-06, 2.484700000000145e-05, 1.125000000001125e-06, 2.643100000000037e-05, 1.1109999999980857e-06, 1.3638999999999318e-05, 1.125000000001125e-06, 2.515299999999998e-05, 1.139000000000695e-06, 2.888799999999775e-05, 1.125000000001125e-06, 1.862500000000128e-05, 1.1249999999976557e-06], 'time': [0.018506431, 0.018507556, 0.018520889, 0.018522056, 0.0185435, 0.018544542, 0.0185585, 0.018559625, 0.018581042, 0.018582167, 0.018611681, 0.018612819, 0.018630806, 0.018631958, 0.018645014, 0.018646069, 0.018660014, 0.018661139, 0.018680083, 0.018681222, 0.018703556, 0.018704694, 0.018735153, 0.018736264, 0.018757986, 0.018759111, 0.018772153, 0.018773264, 0.0187975, 0.018798611, 0.018824722, 0.018825819, 0.018846319, 0.018847444, 0.018876653, 0.018877778, 0.018902625, 0.01890375, 0.018926764, 0.018927847, 0.018944611, 0.018945736, 0.018966542, 0.018967653, 0.018985347, 0.018986472, 0.019008875, 0.019009972, 0.019030139, 0.019031264, 0.019043028, 0.019044167, 0.019066542, 0.019067639, 0.019081889, 0.019083028, 0.019097583, 0.019098722, 0.019118597, 0.019119708, 0.019134278, 0.019135403, 0.019159, 0.019160139, 0.019179986, 0.019181111, 0.01919725, 0.019198361, 0.019227889, 0.019229, 0.019255764, 0.019256847, 0.019277028, 0.019278153, 0.019307042, 0.019308194, 0.019330208, 0.019331333, 0.019357125, 0.019358264, 0.019387458, 0.019388569, 0.019406889, 0.019408014, 0.019436917, 0.019438069, 0.019452, 0.019453111, 0.019477958, 0.019479083, 0.019505514, 0.019506625, 0.019520264, 0.019521389, 0.019546542, 0.019547681, 0.019576569, 0.019577694, 0.019596319, 0.019597444], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:17.480" endtime="20201110 08:36:17.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.476" endtime="20201110 08:36:17.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.489" level="INFO">${RESULT} = [{'time': 0.018507556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018522056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:17.485" endtime="20201110 08:36:17.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:17.502" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.1669999999998348e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1520000000007913e-06, 1.054999999999806e-...</msg>
<status status="PASS" starttime="20201110 08:36:17.490" endtime="20201110 08:36:17.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.506" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:17.505" endtime="20201110 08:36:17.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.509" level="INFO">VALUE: [1.125000000001125e-06, 1.1669999999998348e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.137999999997752e-06, 1.1520000000007913e-06, 1.054999999999806e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.0830000000024154e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.0970000000019853e-06, 1.1389999999972256e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.1249999999976557e-06, 1.1520000000007913e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1519999999973218e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06]</msg>
<status status="PASS" starttime="20201110 08:36:17.507" endtime="20201110 08:36:17.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.503" endtime="20201110 08:36:17.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.512" endtime="20201110 08:36:17.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.515" endtime="20201110 08:36:17.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.514" endtime="20201110 08:36:17.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.510" endtime="20201110 08:36:17.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.110" endtime="20201110 08:36:17.536"></status>
</kw>
<msg timestamp="20201110 08:36:17.536" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.544" endtime="20201110 08:36:17.554"></status>
</kw>
<msg timestamp="20201110 08:36:17.554" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.542" endtime="20201110 08:36:17.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.557" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.555" endtime="20201110 08:36:17.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.558" endtime="20201110 08:36:17.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.540" endtime="20201110 08:36:17.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.538" endtime="20201110 08:36:17.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.567" endtime="20201110 08:36:17.852"></status>
</kw>
<msg timestamp="20201110 08:36:17.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019278708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019279764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.565" endtime="20201110 08:36:17.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019278708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019279764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.857" endtime="20201110 08:36:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.865" endtime="20201110 08:36:17.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.563" endtime="20201110 08:36:17.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.561" endtime="20201110 08:36:17.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.872" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:17.871" endtime="20201110 08:36:17.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.877" level="INFO">VALUE: [{'time': 0.019278708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019279764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019305847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6082999999999662e-05, 'source_diff': 2.6082999999999662e-05}, {'time': 0.019306972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019325903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.019327042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019349694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2652000000001477e-05, 'source_diff': 2.2652000000001477e-05}, {'time': 0.019350819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019366944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612500000000225e-05, 'source_diff': 1.612500000000225e-05}, {'time': 0.019368069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019398208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0138999999998473e-05, 'source_diff': 3.0138999999998473e-05}, {'time': 0.019399347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019423556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.420900000000073e-05, 'source_diff': 2.420900000000073e-05}, {'time': 0.019424681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019450153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5472000000002076e-05, 'source_diff': 2.5472000000002076e-05}, {'time': 0.019451278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.019466653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019483083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6430000000001305e-05, 'source_diff': 1.6430000000001305e-05}, {'time': 0.019484208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019510611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.640300000000123e-05, 'source_diff': 2.640300000000123e-05}, {'time': 0.019511736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019528181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.019529292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019541069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1777000000001009e-05, 'source_diff': 1.1777000000001009e-05}, {'time': 0.019542236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019571694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9457999999999568e-05, 'source_diff': 2.9457999999999568e-05}, {'time': 0.019572819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019588347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5527999999997294e-05, 'source_diff': 1.5527999999997294e-05}, {'time': 0.019589444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019620208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.019621347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019652125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.077799999999867e-05, 'source_diff': 3.077799999999867e-05}, {'time': 0.019653222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019678069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4846999999997982e-05, 'source_diff': 2.4846999999997982e-05}, {'time': 0.019679208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019699056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9847999999999394e-05, 'source_diff': 1.9847999999999394e-05}, {'time': 0.019700181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019730625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0444000000000998e-05, 'source_diff': 3.0444000000000998e-05}, {'time': 0.01973175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019760083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8333000000001912e-05, 'source_diff': 2.8333000000001912e-05}, {'time': 0.019761139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019779444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.830499999999971e-05, 'source_diff': 1.830499999999971e-05}, {'time': 0.019780569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019794833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.019795972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019812375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.640300000000164e-05, 'source_diff': 1.640300000000164e-05}, {'time': 0.0198135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019824653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.019825764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019844417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.865300000000042e-05, 'source_diff': 1.865300000000042e-05}, {'time': 0.0198455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019856972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.019858083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019881694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.019882806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019905472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2666000000001046e-05, 'source_diff': 2.2666000000001046e-05}, {'time': 0.019906611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019930875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4263999999999536e-05, 'source_diff': 2.4263999999999536e-05}, {'time': 0.019931944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019960833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889000000000692e-05, 'source_diff': 2.8889000000000692e-05}, {'time': 0.019961958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019983056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1098000000000644e-05, 'source_diff': 2.1098000000000644e-05}, {'time': 0.019984181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020001264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.708300000000107e-05, 'source_diff': 1.708300000000107e-05}, {'time': 0.020002361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.020025347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2985999999999146e-05, 'source_diff': 2.2985999999999146e-05}, {'time': 0.020026486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.020055056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8570000000002066e-05, 'source_diff': 2.8570000000002066e-05}, {'time': 0.020056181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.020074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.020075292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020100778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5485999999998177e-05, 'source_diff': 2.5485999999998177e-05}, {'time': 0.020101889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2971999999999576e-05, 'source_diff': 2.2971999999999576e-05}, {'time': 0.020126, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.020152708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6707999999996818e-05, 'source_diff': 2.6707999999996818e-05}, {'time': 0.020153833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020173125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9292000000000614e-05, 'source_diff': 1.9292000000000614e-05}, {'time': 0.020174208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.020197806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3597999999999675e-05, 'source_diff': 2.3597999999999675e-05}, {'time': 0.020198944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.020226319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7374999999999622e-05, 'source_diff': 2.7374999999999622e-05}, {'time': 0.020227375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020257833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0458000000000568e-05, 'source_diff': 3.0458000000000568e-05}, {'time': 0.020258958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020277875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.891700000000024e-05, 'source_diff': 1.891700000000024e-05}, {'time': 0.020279, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.020297625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.02029875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020329194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044399999999753e-05, 'source_diff': 3.044399999999753e-05}, {'time': 0.020330319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020357403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7084000000000136e-05, 'source_diff': 2.7084000000000136e-05}, {'time': 0.020358472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020374611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613900000000182e-05, 'source_diff': 1.613900000000182e-05}, {'time': 0.020375722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020395917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.019500000000063e-05, 'source_diff': 2.019500000000063e-05}, {'time': 0.020397042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.020425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8250000000000497e-05, 'source_diff': 2.8250000000000497e-05}, {'time': 0.020426431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:17.873" endtime="20201110 08:36:17.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.868" endtime="20201110 08:36:17.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:17.903" level="INFO">${debug-compressed} = {'source_diff': [0, 1.0560000000027492e-06, 2.6082999999999662e-05, 1.1249999999976557e-06, 1.893099999999981e-05, 1.139000000000695e-06, 2.2652000000001477e-05, 1.1249999999976557e-06, 1.612500000000...</msg>
<status status="PASS" starttime="20201110 08:36:17.879" endtime="20201110 08:36:17.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.907" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:17.906" endtime="20201110 08:36:17.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.911" level="INFO">VALUE: {'source_diff': [0, 1.0560000000027492e-06, 2.6082999999999662e-05, 1.1249999999976557e-06, 1.893099999999981e-05, 1.139000000000695e-06, 2.2652000000001477e-05, 1.1249999999976557e-06, 1.612500000000225e-05, 1.125000000001125e-06, 3.0138999999998473e-05, 1.139000000000695e-06, 2.420900000000073e-05, 1.1249999999976557e-06, 2.5472000000002076e-05, 1.1249999999976557e-06, 1.4263999999999943e-05, 1.1110000000015552e-06, 1.6430000000001305e-05, 1.1249999999976557e-06, 2.640300000000123e-05, 1.1249999999976557e-06, 1.6445000000000348e-05, 1.1110000000015552e-06, 1.1777000000001009e-05, 1.1669999999998348e-06, 2.9457999999999568e-05, 1.125000000001125e-06, 1.5527999999997294e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.139000000000695e-06, 3.077799999999867e-05, 1.0970000000019853e-06, 2.4846999999997982e-05, 1.139000000000695e-06, 1.9847999999999394e-05, 1.125000000001125e-06, 3.0444000000000998e-05, 1.1249999999976557e-06, 2.8333000000001912e-05, 1.0559999999992797e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.4263999999999943e-05, 1.1389999999972256e-06, 1.640300000000164e-05, 1.125000000001125e-06, 1.1152999999999857e-05, 1.1109999999980857e-06, 1.865300000000042e-05, 1.082999999998946e-06, 1.1472000000001953e-05, 1.1109999999980857e-06, 2.361099999999977e-05, 1.1120000000010288e-06, 2.2666000000001046e-05, 1.139000000000695e-06, 2.4263999999999536e-05, 1.068999999999376e-06, 2.8889000000000692e-05, 1.1249999999976557e-06, 2.1098000000000644e-05, 1.125000000001125e-06, 1.708300000000107e-05, 1.0969999999985158e-06, 2.2985999999999146e-05, 1.139000000000695e-06, 2.8570000000002066e-05, 1.1249999999976557e-06, 1.8000000000000654e-05, 1.1110000000015552e-06, 2.5485999999998177e-05, 1.1110000000015552e-06, 2.2971999999999576e-05, 1.139000000000695e-06, 2.6707999999996818e-05, 1.125000000001125e-06, 1.9292000000000614e-05, 1.082999999998946e-06, 2.3597999999999675e-05, 1.1380000000012214e-06, 2.7374999999999622e-05, 1.0559999999992797e-06, 3.0458000000000568e-05, 1.125000000001125e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 1.862500000000128e-05, 1.125000000001125e-06, 3.044399999999753e-05, 1.125000000001125e-06, 2.7084000000000136e-05, 1.068999999999376e-06, 1.613900000000182e-05, 1.1109999999980857e-06, 2.019500000000063e-05, 1.125000000001125e-06, 2.8250000000000497e-05, 1.1389999999972256e-06], 'eventdiff': [0, 1.0560000000027492e-06, 2.6082999999999662e-05, 1.1249999999976557e-06, 1.893099999999981e-05, 1.139000000000695e-06, 2.2652000000001477e-05, 1.1249999999976557e-06, 1.612500000000225e-05, 1.125000000001125e-06, 3.0138999999998473e-05, 1.139000000000695e-06, 2.420900000000073e-05, 1.1249999999976557e-06, 2.5472000000002076e-05, 1.1249999999976557e-06, 1.4263999999999943e-05, 1.1110000000015552e-06, 1.6430000000001305e-05, 1.1249999999976557e-06, 2.640300000000123e-05, 1.1249999999976557e-06, 1.6445000000000348e-05, 1.1110000000015552e-06, 1.1777000000001009e-05, 1.1669999999998348e-06, 2.9457999999999568e-05, 1.125000000001125e-06, 1.5527999999997294e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.139000000000695e-06, 3.077799999999867e-05, 1.0970000000019853e-06, 2.4846999999997982e-05, 1.139000000000695e-06, 1.9847999999999394e-05, 1.125000000001125e-06, 3.0444000000000998e-05, 1.1249999999976557e-06, 2.8333000000001912e-05, 1.0559999999992797e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.4263999999999943e-05, 1.1389999999972256e-06, 1.640300000000164e-05, 1.125000000001125e-06, 1.1152999999999857e-05, 1.1109999999980857e-06, 1.865300000000042e-05, 1.082999999998946e-06, 1.1472000000001953e-05, 1.1109999999980857e-06, 2.361099999999977e-05, 1.1120000000010288e-06, 2.2666000000001046e-05, 1.139000000000695e-06, 2.4263999999999536e-05, 1.068999999999376e-06, 2.8889000000000692e-05, 1.1249999999976557e-06, 2.1098000000000644e-05, 1.125000000001125e-06, 1.708300000000107e-05, 1.0969999999985158e-06, 2.2985999999999146e-05, 1.139000000000695e-06, 2.8570000000002066e-05, 1.1249999999976557e-06, 1.8000000000000654e-05, 1.1110000000015552e-06, 2.5485999999998177e-05, 1.1110000000015552e-06, 2.2971999999999576e-05, 1.139000000000695e-06, 2.6707999999996818e-05, 1.125000000001125e-06, 1.9292000000000614e-05, 1.082999999998946e-06, 2.3597999999999675e-05, 1.1380000000012214e-06, 2.7374999999999622e-05, 1.0559999999992797e-06, 3.0458000000000568e-05, 1.125000000001125e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 1.862500000000128e-05, 1.125000000001125e-06, 3.044399999999753e-05, 1.125000000001125e-06, 2.7084000000000136e-05, 1.068999999999376e-06, 1.613900000000182e-05, 1.1109999999980857e-06, 2.019500000000063e-05, 1.125000000001125e-06, 2.8250000000000497e-05, 1.1389999999972256e-06], 'time': [0.019278708, 0.019279764, 0.019305847, 0.019306972, 0.019325903, 0.019327042, 0.019349694, 0.019350819, 0.019366944, 0.019368069, 0.019398208, 0.019399347, 0.019423556, 0.019424681, 0.019450153, 0.019451278, 0.019465542, 0.019466653, 0.019483083, 0.019484208, 0.019510611, 0.019511736, 0.019528181, 0.019529292, 0.019541069, 0.019542236, 0.019571694, 0.019572819, 0.019588347, 0.019589444, 0.019620208, 0.019621347, 0.019652125, 0.019653222, 0.019678069, 0.019679208, 0.019699056, 0.019700181, 0.019730625, 0.01973175, 0.019760083, 0.019761139, 0.019779444, 0.019780569, 0.019794833, 0.019795972, 0.019812375, 0.0198135, 0.019824653, 0.019825764, 0.019844417, 0.0198455, 0.019856972, 0.019858083, 0.019881694, 0.019882806, 0.019905472, 0.019906611, 0.019930875, 0.019931944, 0.019960833, 0.019961958, 0.019983056, 0.019984181, 0.020001264, 0.020002361, 0.020025347, 0.020026486, 0.020055056, 0.020056181, 0.020074181, 0.020075292, 0.020100778, 0.020101889, 0.020124861, 0.020126, 0.020152708, 0.020153833, 0.020173125, 0.020174208, 0.020197806, 0.020198944, 0.020226319, 0.020227375, 0.020257833, 0.020258958, 0.020277875, 0.020279, 0.020297625, 0.02029875, 0.020329194, 0.020330319, 0.020357403, 0.020358472, 0.020374611, 0.020375722, 0.020395917, 0.020397042, 0.020425292, 0.020426431], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:17.908" endtime="20201110 08:36:17.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.904" endtime="20201110 08:36:17.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:17.916" level="INFO">${RESULT} = [{'time': 0.019279764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019306972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:17.913" endtime="20201110 08:36:17.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:17.930" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.0560000000027492e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557...</msg>
<status status="PASS" starttime="20201110 08:36:17.917" endtime="20201110 08:36:17.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.934" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:17.933" endtime="20201110 08:36:17.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.937" level="INFO">VALUE: [1.0560000000027492e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.1120000000010288e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.1380000000012214e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1389999999972256e-06]</msg>
<status status="PASS" starttime="20201110 08:36:17.936" endtime="20201110 08:36:17.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.931" endtime="20201110 08:36:17.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.940" endtime="20201110 08:36:17.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:17.943" endtime="20201110 08:36:17.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.942" endtime="20201110 08:36:17.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.938" endtime="20201110 08:36:17.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.537" endtime="20201110 08:36:17.964"></status>
</kw>
<msg timestamp="20201110 08:36:17.964" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.972" endtime="20201110 08:36:17.981"></status>
</kw>
<msg timestamp="20201110 08:36:17.982" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.970" endtime="20201110 08:36:17.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:17.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:17.983" endtime="20201110 08:36:17.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.985" endtime="20201110 08:36:17.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.968" endtime="20201110 08:36:17.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.966" endtime="20201110 08:36:17.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:17.994" endtime="20201110 08:36:18.280"></status>
</kw>
<msg timestamp="20201110 08:36:18.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:17.992" endtime="20201110 08:36:18.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:18.284" endtime="20201110 08:36:18.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.293" endtime="20201110 08:36:18.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.990" endtime="20201110 08:36:18.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.988" endtime="20201110 08:36:18.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.299" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:18.298" endtime="20201110 08:36:18.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.304" level="INFO">VALUE: [{'time': 0.018550458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018551542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6444000000000875e-05, 'source_diff': 1.6444000000000875e-05}, {'time': 0.018569097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018592389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3292000000001145e-05, 'source_diff': 2.3292000000001145e-05}, {'time': 0.018593514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018612458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.018613569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018626903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3334000000000262e-05, 'source_diff': 1.3334000000000262e-05}, {'time': 0.018628028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018642278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4250000000000373e-05, 'source_diff': 1.4250000000000373e-05}, {'time': 0.018643403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018661417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8014000000000224e-05, 'source_diff': 1.8014000000000224e-05}, {'time': 0.018662528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018683986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1457999999998506e-05, 'source_diff': 2.1457999999998506e-05}, {'time': 0.018685069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018715556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.048700000000265e-05, 'source_diff': 3.048700000000265e-05}, {'time': 0.018716653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018731556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4903000000000138e-05, 'source_diff': 1.4903000000000138e-05}, {'time': 0.018732708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1520000000007913e-06, 'source_diff': 1.1520000000007913e-06}, {'time': 0.018762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0166999999997612e-05, 'source_diff': 3.0166999999997612e-05}, {'time': 0.018763958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018786931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.297299999999905e-05, 'source_diff': 2.297299999999905e-05}, {'time': 0.018788056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018810708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2651999999998007e-05, 'source_diff': 2.2651999999998007e-05}, {'time': 0.018811833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018833611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.018834694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018857667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.297300000000252e-05, 'source_diff': 2.297300000000252e-05}, {'time': 0.018858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018878389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.95830000000001e-05, 'source_diff': 1.95830000000001e-05}, {'time': 0.018879472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018900931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.145899999999798e-05, 'source_diff': 2.145899999999798e-05}, {'time': 0.018902028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018930306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.018931444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.018956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.513900000000041e-05, 'source_diff': 2.513900000000041e-05}, {'time': 0.018957708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018980708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2999999999998716e-05, 'source_diff': 2.2999999999998716e-05}, {'time': 0.018981819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019011097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9278000000000637e-05, 'source_diff': 2.9278000000000637e-05}, {'time': 0.019012153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019031417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9263999999998005e-05, 'source_diff': 1.9263999999998005e-05}, {'time': 0.019032514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019045542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3027999999998263e-05, 'source_diff': 1.3027999999998263e-05}, {'time': 0.019046653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019077417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.019078542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019091569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.302699999999879e-05, 'source_diff': 1.302699999999879e-05}, {'time': 0.019092681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019120944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8263000000000593e-05, 'source_diff': 2.8263000000000593e-05}, {'time': 0.019122083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019142889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0805999999998215e-05, 'source_diff': 2.0805999999998215e-05}, {'time': 0.019144, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019157014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.019158139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019171542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3402999999998638e-05, 'source_diff': 1.3402999999998638e-05}, {'time': 0.019172583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019199931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347999999999956e-05, 'source_diff': 2.7347999999999956e-05}, {'time': 0.019201042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019218736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7693999999998655e-05, 'source_diff': 1.7693999999998655e-05}, {'time': 0.019219861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019244389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4527999999999356e-05, 'source_diff': 2.4527999999999356e-05}, {'time': 0.019245528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019274097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8568999999999123e-05, 'source_diff': 2.8568999999999123e-05}, {'time': 0.019275236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019305069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.019306181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019334764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8583000000002162e-05, 'source_diff': 2.8583000000002162e-05}, {'time': 0.019335875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019347333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000002383e-05, 'source_diff': 1.1458000000002383e-05}, {'time': 0.019348458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019366153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76950000000016e-05, 'source_diff': 1.76950000000016e-05}, {'time': 0.019367264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019390611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.334699999999995e-05, 'source_diff': 2.334699999999995e-05}, {'time': 0.019391681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019410014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.833299999999885e-05, 'source_diff': 1.833299999999885e-05}, {'time': 0.019411111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019433486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.237499999999809e-05, 'source_diff': 2.237499999999809e-05}, {'time': 0.019434653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019461625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6972000000000107e-05, 'source_diff': 2.6972000000000107e-05}, {'time': 0.019462764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019491667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8903000000000262e-05, 'source_diff': 2.8903000000000262e-05}, {'time': 0.019492764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019522597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.01952375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5806000000000153e-05, 'source_diff': 1.5806000000000153e-05}, {'time': 0.019540667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019556194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.552699999999782e-05, 'source_diff': 1.552699999999782e-05}, {'time': 0.019557292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.019580278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2985999999999146e-05, 'source_diff': 2.2985999999999146e-05}, {'time': 0.019581417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019605, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.358300000000063e-05, 'source_diff': 2.358300000000063e-05}, {'time': 0.019606125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019617917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1792000000000052e-05, 'source_diff': 1.1792000000000052e-05}, {'time': 0.019619028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019640125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.109700000000117e-05, 'source_diff': 2.109700000000117e-05}, {'time': 0.019641264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019667347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.608300000000313e-05, 'source_diff': 2.608300000000313e-05}, {'time': 0.019668472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:18.300" endtime="20201110 08:36:18.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.296" endtime="20201110 08:36:18.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:18.331" level="INFO">${debug-compressed} = {'source_diff': [0, 1.084000000001889e-06, 1.6444000000000875e-05, 1.1109999999980857e-06, 2.3292000000001145e-05, 1.1249999999976557e-06, 1.8943999999999905e-05, 1.1110000000015552e-06, 1.33340000000...</msg>
<status status="PASS" starttime="20201110 08:36:18.307" endtime="20201110 08:36:18.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.334" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:18.333" endtime="20201110 08:36:18.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.339" level="INFO">VALUE: {'source_diff': [0, 1.084000000001889e-06, 1.6444000000000875e-05, 1.1109999999980857e-06, 2.3292000000001145e-05, 1.1249999999976557e-06, 1.8943999999999905e-05, 1.1110000000015552e-06, 1.3334000000000262e-05, 1.125000000001125e-06, 1.4250000000000373e-05, 1.1249999999976557e-06, 1.8014000000000224e-05, 1.1110000000015552e-06, 2.1457999999998506e-05, 1.082999999998946e-06, 3.048700000000265e-05, 1.0969999999985158e-06, 1.4903000000000138e-05, 1.1520000000007913e-06, 3.0166999999997612e-05, 1.0830000000024154e-06, 2.297299999999905e-05, 1.125000000001125e-06, 2.2651999999998007e-05, 1.125000000001125e-06, 2.1778000000000075e-05, 1.082999999998946e-06, 2.297300000000252e-05, 1.1389999999972256e-06, 1.95830000000001e-05, 1.0830000000024154e-06, 2.145899999999798e-05, 1.0970000000019853e-06, 2.8277999999999637e-05, 1.137999999997752e-06, 2.513900000000041e-05, 1.125000000001125e-06, 2.2999999999998716e-05, 1.1110000000015552e-06, 2.9278000000000637e-05, 1.0559999999992797e-06, 1.9263999999998005e-05, 1.0970000000019853e-06, 1.3027999999998263e-05, 1.1110000000015552e-06, 3.07639999999991e-05, 1.125000000001125e-06, 1.302699999999879e-05, 1.1120000000010288e-06, 2.8263000000000593e-05, 1.139000000000695e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.125000000001125e-06, 1.3402999999998638e-05, 1.0410000000002362e-06, 2.7347999999999956e-05, 1.1110000000015552e-06, 1.7693999999998655e-05, 1.125000000001125e-06, 2.4527999999999356e-05, 1.139000000000695e-06, 2.8568999999999123e-05, 1.139000000000695e-06, 2.9832999999999943e-05, 1.1119999999975594e-06, 2.8583000000002162e-05, 1.1109999999980857e-06, 1.1458000000002383e-05, 1.1249999999976557e-06, 1.76950000000016e-05, 1.1109999999980857e-06, 2.334699999999995e-05, 1.070000000002319e-06, 1.833299999999885e-05, 1.0970000000019853e-06, 2.237499999999809e-05, 1.1669999999998348e-06, 2.6972000000000107e-05, 1.139000000000695e-06, 2.8903000000000262e-05, 1.0969999999985158e-06, 2.9832999999999943e-05, 1.153000000000265e-06, 1.5806000000000153e-05, 1.1110000000015552e-06, 1.552699999999782e-05, 1.098000000001459e-06, 2.2985999999999146e-05, 1.139000000000695e-06, 2.358300000000063e-05, 1.1249999999976557e-06, 1.1792000000000052e-05, 1.1110000000015552e-06, 2.109700000000117e-05, 1.1389999999972256e-06, 2.608300000000313e-05, 1.1249999999976557e-06], 'eventdiff': [0, 1.084000000001889e-06, 1.6444000000000875e-05, 1.1109999999980857e-06, 2.3292000000001145e-05, 1.1249999999976557e-06, 1.8943999999999905e-05, 1.1110000000015552e-06, 1.3334000000000262e-05, 1.125000000001125e-06, 1.4250000000000373e-05, 1.1249999999976557e-06, 1.8014000000000224e-05, 1.1110000000015552e-06, 2.1457999999998506e-05, 1.082999999998946e-06, 3.048700000000265e-05, 1.0969999999985158e-06, 1.4903000000000138e-05, 1.1520000000007913e-06, 3.0166999999997612e-05, 1.0830000000024154e-06, 2.297299999999905e-05, 1.125000000001125e-06, 2.2651999999998007e-05, 1.125000000001125e-06, 2.1778000000000075e-05, 1.082999999998946e-06, 2.297300000000252e-05, 1.1389999999972256e-06, 1.95830000000001e-05, 1.0830000000024154e-06, 2.145899999999798e-05, 1.0970000000019853e-06, 2.8277999999999637e-05, 1.137999999997752e-06, 2.513900000000041e-05, 1.125000000001125e-06, 2.2999999999998716e-05, 1.1110000000015552e-06, 2.9278000000000637e-05, 1.0559999999992797e-06, 1.9263999999998005e-05, 1.0970000000019853e-06, 1.3027999999998263e-05, 1.1110000000015552e-06, 3.07639999999991e-05, 1.125000000001125e-06, 1.302699999999879e-05, 1.1120000000010288e-06, 2.8263000000000593e-05, 1.139000000000695e-06, 2.0805999999998215e-05, 1.1110000000015552e-06, 1.3013999999998693e-05, 1.125000000001125e-06, 1.3402999999998638e-05, 1.0410000000002362e-06, 2.7347999999999956e-05, 1.1110000000015552e-06, 1.7693999999998655e-05, 1.125000000001125e-06, 2.4527999999999356e-05, 1.139000000000695e-06, 2.8568999999999123e-05, 1.139000000000695e-06, 2.9832999999999943e-05, 1.1119999999975594e-06, 2.8583000000002162e-05, 1.1109999999980857e-06, 1.1458000000002383e-05, 1.1249999999976557e-06, 1.76950000000016e-05, 1.1109999999980857e-06, 2.334699999999995e-05, 1.070000000002319e-06, 1.833299999999885e-05, 1.0970000000019853e-06, 2.237499999999809e-05, 1.1669999999998348e-06, 2.6972000000000107e-05, 1.139000000000695e-06, 2.8903000000000262e-05, 1.0969999999985158e-06, 2.9832999999999943e-05, 1.153000000000265e-06, 1.5806000000000153e-05, 1.1110000000015552e-06, 1.552699999999782e-05, 1.098000000001459e-06, 2.2985999999999146e-05, 1.139000000000695e-06, 2.358300000000063e-05, 1.1249999999976557e-06, 1.1792000000000052e-05, 1.1110000000015552e-06, 2.109700000000117e-05, 1.1389999999972256e-06, 2.608300000000313e-05, 1.1249999999976557e-06], 'time': [0.018550458, 0.018551542, 0.018567986, 0.018569097, 0.018592389, 0.018593514, 0.018612458, 0.018613569, 0.018626903, 0.018628028, 0.018642278, 0.018643403, 0.018661417, 0.018662528, 0.018683986, 0.018685069, 0.018715556, 0.018716653, 0.018731556, 0.018732708, 0.018762875, 0.018763958, 0.018786931, 0.018788056, 0.018810708, 0.018811833, 0.018833611, 0.018834694, 0.018857667, 0.018858806, 0.018878389, 0.018879472, 0.018900931, 0.018902028, 0.018930306, 0.018931444, 0.018956583, 0.018957708, 0.018980708, 0.018981819, 0.019011097, 0.019012153, 0.019031417, 0.019032514, 0.019045542, 0.019046653, 0.019077417, 0.019078542, 0.019091569, 0.019092681, 0.019120944, 0.019122083, 0.019142889, 0.019144, 0.019157014, 0.019158139, 0.019171542, 0.019172583, 0.019199931, 0.019201042, 0.019218736, 0.019219861, 0.019244389, 0.019245528, 0.019274097, 0.019275236, 0.019305069, 0.019306181, 0.019334764, 0.019335875, 0.019347333, 0.019348458, 0.019366153, 0.019367264, 0.019390611, 0.019391681, 0.019410014, 0.019411111, 0.019433486, 0.019434653, 0.019461625, 0.019462764, 0.019491667, 0.019492764, 0.019522597, 0.01952375, 0.019539556, 0.019540667, 0.019556194, 0.019557292, 0.019580278, 0.019581417, 0.019605, 0.019606125, 0.019617917, 0.019619028, 0.019640125, 0.019641264, 0.019667347, 0.019668472], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:18.335" endtime="20201110 08:36:18.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.332" endtime="20201110 08:36:18.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.344" level="INFO">${RESULT} = [{'time': 0.018551542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018569097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:18.341" endtime="20201110 08:36:18.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:18.357" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.084000000001889e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.082999999998946...</msg>
<status status="PASS" starttime="20201110 08:36:18.345" endtime="20201110 08:36:18.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.361" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:18.360" endtime="20201110 08:36:18.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.364" level="INFO">VALUE: [1.084000000001889e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.1520000000007913e-06, 1.0830000000024154e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.1389999999972256e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1120000000010288e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1119999999975594e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.070000000002319e-06, 1.0970000000019853e-06, 1.1669999999998348e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.1389999999972256e-06, 1.1249999999976557e-06]</msg>
<status status="PASS" starttime="20201110 08:36:18.363" endtime="20201110 08:36:18.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.358" endtime="20201110 08:36:18.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.367" endtime="20201110 08:36:18.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.370" endtime="20201110 08:36:18.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.369" endtime="20201110 08:36:18.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.365" endtime="20201110 08:36:18.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:17.965" endtime="20201110 08:36:18.391"></status>
</kw>
<msg timestamp="20201110 08:36:18.391" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.399" endtime="20201110 08:36:18.408"></status>
</kw>
<msg timestamp="20201110 08:36:18.409" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.397" endtime="20201110 08:36:18.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.411" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.410" endtime="20201110 08:36:18.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.412" endtime="20201110 08:36:18.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.395" endtime="20201110 08:36:18.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.393" endtime="20201110 08:36:18.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.422" endtime="20201110 08:36:18.708"></status>
</kw>
<msg timestamp="20201110 08:36:18.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01854225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:18.420" endtime="20201110 08:36:18.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018541125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01854225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:18.712" endtime="20201110 08:36:18.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.721" endtime="20201110 08:36:18.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.418" endtime="20201110 08:36:18.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.416" endtime="20201110 08:36:18.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.727" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:18.726" endtime="20201110 08:36:18.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.732" level="INFO">VALUE: [{'time': 0.018541125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01854225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018554639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2389000000001538e-05, 'source_diff': 1.2389000000001538e-05}, {'time': 0.018555764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018577264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1500000000000685e-05, 'source_diff': 2.1500000000000685e-05}, {'time': 0.018578306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018605639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7333000000000912e-05, 'source_diff': 2.7333000000000912e-05}, {'time': 0.018606764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018633181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.641699999999733e-05, 'source_diff': 2.641699999999733e-05}, {'time': 0.018634306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018653861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.955500000000096e-05, 'source_diff': 1.955500000000096e-05}, {'time': 0.018654972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018679208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4236000000000396e-05, 'source_diff': 2.4236000000000396e-05}, {'time': 0.018680319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.01870175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.143099999999884e-05, 'source_diff': 2.143099999999884e-05}, {'time': 0.018702875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018726472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.35970000000002e-05, 'source_diff': 2.35970000000002e-05}, {'time': 0.018727597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018757431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9834000000002886e-05, 'source_diff': 2.9834000000002886e-05}, {'time': 0.018758597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1659999999968917e-06, 'source_diff': 1.1659999999968917e-06}, {'time': 0.018774681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6084000000003013e-05, 'source_diff': 1.6084000000003013e-05}, {'time': 0.018775792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018797528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1736000000001365e-05, 'source_diff': 2.1736000000001365e-05}, {'time': 0.018798667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018812292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.018813431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018829556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612500000000225e-05, 'source_diff': 1.612500000000225e-05}, {'time': 0.018830667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018851153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.018852333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018866222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3888999999999568e-05, 'source_diff': 1.3888999999999568e-05}, {'time': 0.018867347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018878819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.018879931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.018896056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.612500000000225e-05, 'source_diff': 1.612500000000225e-05}, {'time': 0.018897181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018914556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.018915681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018933681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.018934792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018953417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.018954542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018974403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.018975542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018992028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6485999999999584e-05, 'source_diff': 1.6485999999999584e-05}, {'time': 0.018993097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019023542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.019024722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019035833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1110999999997678e-05, 'source_diff': 1.1110999999997678e-05}, {'time': 0.019037, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019058986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1986000000001615e-05, 'source_diff': 2.1986000000001615e-05}, {'time': 0.019060181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.019089319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9138000000001468e-05, 'source_diff': 2.9138000000001468e-05}, {'time': 0.019090431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019114042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.019115167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019141569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6402000000001757e-05, 'source_diff': 2.6402000000001757e-05}, {'time': 0.019142694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.01916225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9556000000000434e-05, 'source_diff': 1.9556000000000434e-05}, {'time': 0.019163375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019180444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.70690000000015e-05, 'source_diff': 1.70690000000015e-05}, {'time': 0.019181556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019194569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013000000002689e-05, 'source_diff': 1.3013000000002689e-05}, {'time': 0.019195694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019224903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.920900000000226e-05, 'source_diff': 2.920900000000226e-05}, {'time': 0.019226042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019242792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6750000000002874e-05, 'source_diff': 1.6750000000002874e-05}, {'time': 0.019243903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019267514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.019268694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019290681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.198700000000109e-05, 'source_diff': 2.198700000000109e-05}, {'time': 0.019291806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019312625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.081899999999831e-05, 'source_diff': 2.081899999999831e-05}, {'time': 0.019313722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019332972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9250000000001904e-05, 'source_diff': 1.9250000000001904e-05}, {'time': 0.019334083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019359292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.520900000000173e-05, 'source_diff': 2.520900000000173e-05}, {'time': 0.019360375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019384944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.456900000000206e-05, 'source_diff': 2.456900000000206e-05}, {'time': 0.019386042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.019404347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.830499999999971e-05, 'source_diff': 1.830499999999971e-05}, {'time': 0.019405472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019423486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8014000000000224e-05, 'source_diff': 1.8014000000000224e-05}, {'time': 0.019424597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019444167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9570000000000004e-05, 'source_diff': 1.9570000000000004e-05}, {'time': 0.019445264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019460167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4903000000000138e-05, 'source_diff': 1.4903000000000138e-05}, {'time': 0.019461306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019490847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9540999999997514e-05, 'source_diff': 2.9540999999997514e-05}, {'time': 0.019491917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019516167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4249999999999966e-05, 'source_diff': 2.4249999999999966e-05}, {'time': 0.019517264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8277999999999637e-05, 'source_diff': 2.8277999999999637e-05}, {'time': 0.019546681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019565903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9221999999999295e-05, 'source_diff': 1.9221999999999295e-05}, {'time': 0.019567042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019584736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7693999999998655e-05, 'source_diff': 1.7693999999998655e-05}, {'time': 0.019585917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.019610708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4790999999999702e-05, 'source_diff': 2.4790999999999702e-05}, {'time': 0.019611806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:18.728" endtime="20201110 08:36:18.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.724" endtime="20201110 08:36:18.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:18.758" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.2389000000001538e-05, 1.1249999999976557e-06, 2.1500000000000685e-05, 1.0419999999997098e-06, 2.7333000000000912e-05, 1.125000000001125e-06, 2.641699999999...</msg>
<status status="PASS" starttime="20201110 08:36:18.735" endtime="20201110 08:36:18.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.762" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:18.761" endtime="20201110 08:36:18.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.766" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.2389000000001538e-05, 1.1249999999976557e-06, 2.1500000000000685e-05, 1.0419999999997098e-06, 2.7333000000000912e-05, 1.125000000001125e-06, 2.641699999999733e-05, 1.125000000001125e-06, 1.955500000000096e-05, 1.1109999999980857e-06, 2.4236000000000396e-05, 1.1110000000015552e-06, 2.143099999999884e-05, 1.125000000001125e-06, 2.35970000000002e-05, 1.1249999999976557e-06, 2.9834000000002886e-05, 1.1659999999968917e-06, 1.6084000000003013e-05, 1.1109999999980857e-06, 2.1736000000001365e-05, 1.139000000000695e-06, 1.3624999999999748e-05, 1.1389999999972256e-06, 1.612500000000225e-05, 1.1109999999980857e-06, 2.0486000000000115e-05, 1.179999999999931e-06, 1.3888999999999568e-05, 1.125000000001125e-06, 1.1472000000001953e-05, 1.1119999999975594e-06, 1.612500000000225e-05, 1.1249999999976557e-06, 1.737500000000003e-05, 1.125000000001125e-06, 1.8000000000000654e-05, 1.1109999999980857e-06, 1.862500000000128e-05, 1.125000000001125e-06, 1.986099999999949e-05, 1.139000000000695e-06, 1.6485999999999584e-05, 1.068999999999376e-06, 3.044500000000047e-05, 1.179999999999931e-06, 1.1110999999997678e-05, 1.1669999999998348e-06, 2.1986000000001615e-05, 1.1949999999989747e-06, 2.9138000000001468e-05, 1.1120000000010288e-06, 2.361099999999977e-05, 1.1249999999976557e-06, 2.6402000000001757e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.125000000001125e-06, 1.70690000000015e-05, 1.1119999999975594e-06, 1.3013000000002689e-05, 1.1249999999976557e-06, 2.920900000000226e-05, 1.1389999999972256e-06, 1.6750000000002874e-05, 1.1109999999980857e-06, 2.361099999999977e-05, 1.179999999999931e-06, 2.198700000000109e-05, 1.125000000001125e-06, 2.081899999999831e-05, 1.0969999999985158e-06, 1.9250000000001904e-05, 1.1109999999980857e-06, 2.520900000000173e-05, 1.082999999998946e-06, 2.456900000000206e-05, 1.0979999999979895e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.8014000000000224e-05, 1.1109999999980857e-06, 1.9570000000000004e-05, 1.0970000000019853e-06, 1.4903000000000138e-05, 1.139000000000695e-06, 2.9540999999997514e-05, 1.070000000002319e-06, 2.4249999999999966e-05, 1.0969999999985158e-06, 2.8277999999999637e-05, 1.139000000000695e-06, 1.9221999999999295e-05, 1.139000000000695e-06, 1.7693999999998655e-05, 1.1810000000028742e-06, 2.4790999999999702e-05, 1.0979999999979895e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 1.125000000001125e-06, 1.2389000000001538e-05, 1.1249999999976557e-06, 2.1500000000000685e-05, 1.0419999999997098e-06, 2.7333000000000912e-05, 1.125000000001125e-06, 2.641699999999733e-05, 1.125000000001125e-06, 1.955500000000096e-05, 1.1109999999980857e-06, 2.4236000000000396e-05, 1.1110000000015552e-06, 2.143099999999884e-05, 1.125000000001125e-06, 2.35970000000002e-05, 1.1249999999976557e-06, 2.9834000000002886e-05, 1.1659999999968917e-06, 1.6084000000003013e-05, 1.1109999999980857e-06, 2.1736000000001365e-05, 1.139000000000695e-06, 1.3624999999999748e-05, 1.1389999999972256e-06, 1.612500000000225e-05, 1.1109999999980857e-06, 2.0486000000000115e-05, 1.179999999999931e-06, 1.3888999999999568e-05, 1.125000000001125e-06, 1.1472000000001953e-05, 1.1119999999975594e-06, 1.612500000000225e-05, 1.1249999999976557e-06, 1.737500000000003e-05, 1.125000000001125e-06, 1.8000000000000654e-05, 1.1109999999980857e-06, 1.862500000000128e-05, 1.125000000001125e-06, 1.986099999999949e-05, 1.139000000000695e-06, 1.6485999999999584e-05, 1.068999999999376e-06, 3.044500000000047e-05, 1.179999999999931e-06, 1.1110999999997678e-05, 1.1669999999998348e-06, 2.1986000000001615e-05, 1.1949999999989747e-06, 2.9138000000001468e-05, 1.1120000000010288e-06, 2.361099999999977e-05, 1.1249999999976557e-06, 2.6402000000001757e-05, 1.1249999999976557e-06, 1.9556000000000434e-05, 1.125000000001125e-06, 1.70690000000015e-05, 1.1119999999975594e-06, 1.3013000000002689e-05, 1.1249999999976557e-06, 2.920900000000226e-05, 1.1389999999972256e-06, 1.6750000000002874e-05, 1.1109999999980857e-06, 2.361099999999977e-05, 1.179999999999931e-06, 2.198700000000109e-05, 1.125000000001125e-06, 2.081899999999831e-05, 1.0969999999985158e-06, 1.9250000000001904e-05, 1.1109999999980857e-06, 2.520900000000173e-05, 1.082999999998946e-06, 2.456900000000206e-05, 1.0979999999979895e-06, 1.830499999999971e-05, 1.125000000001125e-06, 1.8014000000000224e-05, 1.1109999999980857e-06, 1.9570000000000004e-05, 1.0970000000019853e-06, 1.4903000000000138e-05, 1.139000000000695e-06, 2.9540999999997514e-05, 1.070000000002319e-06, 2.4249999999999966e-05, 1.0969999999985158e-06, 2.8277999999999637e-05, 1.139000000000695e-06, 1.9221999999999295e-05, 1.139000000000695e-06, 1.7693999999998655e-05, 1.1810000000028742e-06, 2.4790999999999702e-05, 1.0979999999979895e-06], 'time': [0.018541125, 0.01854225, 0.018554639, 0.018555764, 0.018577264, 0.018578306, 0.018605639, 0.018606764, 0.018633181, 0.018634306, 0.018653861, 0.018654972, 0.018679208, 0.018680319, 0.01870175, 0.018702875, 0.018726472, 0.018727597, 0.018757431, 0.018758597, 0.018774681, 0.018775792, 0.018797528, 0.018798667, 0.018812292, 0.018813431, 0.018829556, 0.018830667, 0.018851153, 0.018852333, 0.018866222, 0.018867347, 0.018878819, 0.018879931, 0.018896056, 0.018897181, 0.018914556, 0.018915681, 0.018933681, 0.018934792, 0.018953417, 0.018954542, 0.018974403, 0.018975542, 0.018992028, 0.018993097, 0.019023542, 0.019024722, 0.019035833, 0.019037, 0.019058986, 0.019060181, 0.019089319, 0.019090431, 0.019114042, 0.019115167, 0.019141569, 0.019142694, 0.01916225, 0.019163375, 0.019180444, 0.019181556, 0.019194569, 0.019195694, 0.019224903, 0.019226042, 0.019242792, 0.019243903, 0.019267514, 0.019268694, 0.019290681, 0.019291806, 0.019312625, 0.019313722, 0.019332972, 0.019334083, 0.019359292, 0.019360375, 0.019384944, 0.019386042, 0.019404347, 0.019405472, 0.019423486, 0.019424597, 0.019444167, 0.019445264, 0.019460167, 0.019461306, 0.019490847, 0.019491917, 0.019516167, 0.019517264, 0.019545542, 0.019546681, 0.019565903, 0.019567042, 0.019584736, 0.019585917, 0.019610708, 0.019611806], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:18.763" endtime="20201110 08:36:18.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.759" endtime="20201110 08:36:18.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:18.772" level="INFO">${RESULT} = [{'time': 0.01854225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018555764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:18.769" endtime="20201110 08:36:18.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:18.785" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.1249999999976557e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.125000000001125e...</msg>
<status status="PASS" starttime="20201110 08:36:18.773" endtime="20201110 08:36:18.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.790" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:18.789" endtime="20201110 08:36:18.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.792" level="INFO">VALUE: [1.125000000001125e-06, 1.1249999999976557e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1659999999968917e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.1119999999975594e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.179999999999931e-06, 1.1669999999998348e-06, 1.1949999999989747e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1119999999975594e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1810000000028742e-06, 1.0979999999979895e-06]</msg>
<status status="PASS" starttime="20201110 08:36:18.791" endtime="20201110 08:36:18.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.786" endtime="20201110 08:36:18.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.795" endtime="20201110 08:36:18.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:18.799" endtime="20201110 08:36:18.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.797" endtime="20201110 08:36:18.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.794" endtime="20201110 08:36:18.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.392" endtime="20201110 08:36:18.819"></status>
</kw>
<msg timestamp="20201110 08:36:18.820" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.827" endtime="20201110 08:36:18.836"></status>
</kw>
<msg timestamp="20201110 08:36:18.837" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.826" endtime="20201110 08:36:18.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:18.839" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:18.838" endtime="20201110 08:36:18.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.840" endtime="20201110 08:36:18.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.823" endtime="20201110 08:36:18.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.821" endtime="20201110 08:36:18.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:18.849" endtime="20201110 08:36:19.136"></status>
</kw>
<msg timestamp="20201110 08:36:19.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01858975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018590833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:18.848" endtime="20201110 08:36:19.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01858975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018590833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:19.140" endtime="20201110 08:36:19.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.148" endtime="20201110 08:36:19.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.845" endtime="20201110 08:36:19.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.843" endtime="20201110 08:36:19.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.155" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:19.154" endtime="20201110 08:36:19.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.160" level="INFO">VALUE: [{'time': 0.01858975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018590833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018610708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987499999999906e-05, 'source_diff': 1.987499999999906e-05}, {'time': 0.018611847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018641972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0124999999998903e-05, 'source_diff': 3.0124999999998903e-05}, {'time': 0.018643111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018663931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0820000000001254e-05, 'source_diff': 2.0820000000001254e-05}, {'time': 0.018665028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018685208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0179999999998116e-05, 'source_diff': 2.0179999999998116e-05}, {'time': 0.018686319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018712431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6112000000001745e-05, 'source_diff': 2.6112000000001745e-05}, {'time': 0.018713569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.137999999997752e-06, 'source_diff': 1.137999999997752e-06}, {'time': 0.018728111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4541999999999333e-05, 'source_diff': 1.4541999999999333e-05}, {'time': 0.018729236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018753792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4555999999998496e-05, 'source_diff': 2.4555999999998496e-05}, {'time': 0.018754917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018772903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7986000000001084e-05, 'source_diff': 1.7986000000001084e-05}, {'time': 0.018774028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018787042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3013999999998693e-05, 'source_diff': 1.3013999999998693e-05}, {'time': 0.018788167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018807403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9235999999998865e-05, 'source_diff': 1.9235999999998865e-05}, {'time': 0.018808528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018836181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7652999999999012e-05, 'source_diff': 2.7652999999999012e-05}, {'time': 0.018837319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018860903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3583999999996635e-05, 'source_diff': 2.3583999999996635e-05}, {'time': 0.018862028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018881292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9264000000001474e-05, 'source_diff': 1.9264000000001474e-05}, {'time': 0.018882389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018901, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.861100000000171e-05, 'source_diff': 1.861100000000171e-05}, {'time': 0.018902125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018921056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.893099999999981e-05, 'source_diff': 1.893099999999981e-05}, {'time': 0.018922181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018951431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.018952514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018972375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.018973514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019003639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0124999999998903e-05, 'source_diff': 3.0124999999998903e-05}, {'time': 0.019004764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.205499999999999e-05, 'source_diff': 2.205499999999999e-05}, {'time': 0.019027931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019052167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4235999999996927e-05, 'source_diff': 2.4235999999996927e-05}, {'time': 0.019053292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019081597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8304999999999303e-05, 'source_diff': 2.8304999999999303e-05}, {'time': 0.019082681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019096639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3957999999997944e-05, 'source_diff': 1.3957999999997944e-05}, {'time': 0.01909775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019115486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7736000000000834e-05, 'source_diff': 1.7736000000000834e-05}, {'time': 0.019116556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019145458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8902000000000788e-05, 'source_diff': 2.8902000000000788e-05}, {'time': 0.019146583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019163014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.643100000000078e-05, 'source_diff': 1.643100000000078e-05}, {'time': 0.019164139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019175903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019177028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019200958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3930000000001866e-05, 'source_diff': 2.3930000000001866e-05}, {'time': 0.019202139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019225986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.384700000000045e-05, 'source_diff': 2.384700000000045e-05}, {'time': 0.019227097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019247958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.086100000000049e-05, 'source_diff': 2.086100000000049e-05}, {'time': 0.019249028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019272056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3027999999997856e-05, 'source_diff': 2.3027999999997856e-05}, {'time': 0.019273139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019290514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.019291625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019317125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5500000000001216e-05, 'source_diff': 2.5500000000001216e-05}, {'time': 0.019318222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019335278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7056000000001403e-05, 'source_diff': 1.7056000000001403e-05}, {'time': 0.019336403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019348528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2125000000001718e-05, 'source_diff': 1.2125000000001718e-05}, {'time': 0.019349611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019373833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4222000000000826e-05, 'source_diff': 2.4222000000000826e-05}, {'time': 0.019374958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019400431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.547299999999808e-05, 'source_diff': 2.547299999999808e-05}, {'time': 0.019401556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019425792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4236000000000396e-05, 'source_diff': 2.4236000000000396e-05}, {'time': 0.019426972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019449264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2292000000000145e-05, 'source_diff': 2.2292000000000145e-05}, {'time': 0.019450389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019469333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8943999999999905e-05, 'source_diff': 1.8943999999999905e-05}, {'time': 0.0194705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.019485014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4513999999996724e-05, 'source_diff': 1.4513999999996724e-05}, {'time': 0.019486153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019498236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.019499333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019525736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.640299999999776e-05, 'source_diff': 2.640299999999776e-05}, {'time': 0.019526875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019549611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2736000000002365e-05, 'source_diff': 2.2736000000002365e-05}, {'time': 0.019550653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019566792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613899999999835e-05, 'source_diff': 1.613899999999835e-05}, {'time': 0.019567903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019585278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.019586403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019600361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3958000000001414e-05, 'source_diff': 1.3958000000001414e-05}, {'time': 0.019601486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019631319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9832999999999943e-05, 'source_diff': 2.9832999999999943e-05}, {'time': 0.019632444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019657597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.019658722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019673028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.019674125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:19.156" endtime="20201110 08:36:19.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.151" endtime="20201110 08:36:19.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:19.186" level="INFO">${debug-compressed} = {'source_diff': [0, 1.0830000000024154e-06, 1.987499999999906e-05, 1.139000000000695e-06, 3.0124999999998903e-05, 1.139000000000695e-06, 2.0820000000001254e-05, 1.0969999999985158e-06, 2.0179999999998...</msg>
<status status="PASS" starttime="20201110 08:36:19.162" endtime="20201110 08:36:19.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.190" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:19.189" endtime="20201110 08:36:19.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.194" level="INFO">VALUE: {'source_diff': [0, 1.0830000000024154e-06, 1.987499999999906e-05, 1.139000000000695e-06, 3.0124999999998903e-05, 1.139000000000695e-06, 2.0820000000001254e-05, 1.0969999999985158e-06, 2.0179999999998116e-05, 1.1110000000015552e-06, 2.6112000000001745e-05, 1.137999999997752e-06, 1.4541999999999333e-05, 1.125000000001125e-06, 2.4555999999998496e-05, 1.125000000001125e-06, 1.7986000000001084e-05, 1.125000000001125e-06, 1.3013999999998693e-05, 1.125000000001125e-06, 1.9235999999998865e-05, 1.125000000001125e-06, 2.7652999999999012e-05, 1.1380000000012214e-06, 2.3583999999996635e-05, 1.125000000001125e-06, 1.9264000000001474e-05, 1.0969999999985158e-06, 1.861100000000171e-05, 1.1249999999976557e-06, 1.893099999999981e-05, 1.125000000001125e-06, 2.9250000000001497e-05, 1.082999999998946e-06, 1.986099999999949e-05, 1.139000000000695e-06, 3.0124999999998903e-05, 1.125000000001125e-06, 2.205499999999999e-05, 1.1120000000010288e-06, 2.4235999999996927e-05, 1.125000000001125e-06, 2.8304999999999303e-05, 1.084000000001889e-06, 1.3957999999997944e-05, 1.1110000000015552e-06, 1.7736000000000834e-05, 1.0699999999988496e-06, 2.8902000000000788e-05, 1.1249999999976557e-06, 1.643100000000078e-05, 1.125000000001125e-06, 1.1764000000000913e-05, 1.1249999999976557e-06, 2.3930000000001866e-05, 1.1809999999994047e-06, 2.384700000000045e-05, 1.1109999999980857e-06, 2.086100000000049e-05, 1.070000000002319e-06, 2.3027999999997856e-05, 1.0830000000024154e-06, 1.737500000000003e-05, 1.1109999999980857e-06, 2.5500000000001216e-05, 1.0969999999985158e-06, 1.7056000000001403e-05, 1.1249999999976557e-06, 1.2125000000001718e-05, 1.082999999998946e-06, 2.4222000000000826e-05, 1.125000000001125e-06, 2.547299999999808e-05, 1.125000000001125e-06, 2.4236000000000396e-05, 1.179999999999931e-06, 2.2292000000000145e-05, 1.1249999999976557e-06, 1.8943999999999905e-05, 1.1670000000033043e-06, 1.4513999999996724e-05, 1.139000000000695e-06, 1.2082999999999539e-05, 1.0970000000019853e-06, 2.640299999999776e-05, 1.139000000000695e-06, 2.2736000000002365e-05, 1.0419999999997098e-06, 1.613899999999835e-05, 1.1110000000015552e-06, 1.737500000000003e-05, 1.1249999999976557e-06, 1.3958000000001414e-05, 1.125000000001125e-06, 2.9832999999999943e-05, 1.1249999999976557e-06, 2.515299999999998e-05, 1.125000000001125e-06, 1.4305999999998653e-05, 1.0970000000019853e-06], 'eventdiff': [0, 1.0830000000024154e-06, 1.987499999999906e-05, 1.139000000000695e-06, 3.0124999999998903e-05, 1.139000000000695e-06, 2.0820000000001254e-05, 1.0969999999985158e-06, 2.0179999999998116e-05, 1.1110000000015552e-06, 2.6112000000001745e-05, 1.137999999997752e-06, 1.4541999999999333e-05, 1.125000000001125e-06, 2.4555999999998496e-05, 1.125000000001125e-06, 1.7986000000001084e-05, 1.125000000001125e-06, 1.3013999999998693e-05, 1.125000000001125e-06, 1.9235999999998865e-05, 1.125000000001125e-06, 2.7652999999999012e-05, 1.1380000000012214e-06, 2.3583999999996635e-05, 1.125000000001125e-06, 1.9264000000001474e-05, 1.0969999999985158e-06, 1.861100000000171e-05, 1.1249999999976557e-06, 1.893099999999981e-05, 1.125000000001125e-06, 2.9250000000001497e-05, 1.082999999998946e-06, 1.986099999999949e-05, 1.139000000000695e-06, 3.0124999999998903e-05, 1.125000000001125e-06, 2.205499999999999e-05, 1.1120000000010288e-06, 2.4235999999996927e-05, 1.125000000001125e-06, 2.8304999999999303e-05, 1.084000000001889e-06, 1.3957999999997944e-05, 1.1110000000015552e-06, 1.7736000000000834e-05, 1.0699999999988496e-06, 2.8902000000000788e-05, 1.1249999999976557e-06, 1.643100000000078e-05, 1.125000000001125e-06, 1.1764000000000913e-05, 1.1249999999976557e-06, 2.3930000000001866e-05, 1.1809999999994047e-06, 2.384700000000045e-05, 1.1109999999980857e-06, 2.086100000000049e-05, 1.070000000002319e-06, 2.3027999999997856e-05, 1.0830000000024154e-06, 1.737500000000003e-05, 1.1109999999980857e-06, 2.5500000000001216e-05, 1.0969999999985158e-06, 1.7056000000001403e-05, 1.1249999999976557e-06, 1.2125000000001718e-05, 1.082999999998946e-06, 2.4222000000000826e-05, 1.125000000001125e-06, 2.547299999999808e-05, 1.125000000001125e-06, 2.4236000000000396e-05, 1.179999999999931e-06, 2.2292000000000145e-05, 1.1249999999976557e-06, 1.8943999999999905e-05, 1.1670000000033043e-06, 1.4513999999996724e-05, 1.139000000000695e-06, 1.2082999999999539e-05, 1.0970000000019853e-06, 2.640299999999776e-05, 1.139000000000695e-06, 2.2736000000002365e-05, 1.0419999999997098e-06, 1.613899999999835e-05, 1.1110000000015552e-06, 1.737500000000003e-05, 1.1249999999976557e-06, 1.3958000000001414e-05, 1.125000000001125e-06, 2.9832999999999943e-05, 1.1249999999976557e-06, 2.515299999999998e-05, 1.125000000001125e-06, 1.4305999999998653e-05, 1.0970000000019853e-06], 'time': [0.01858975, 0.018590833, 0.018610708, 0.018611847, 0.018641972, 0.018643111, 0.018663931, 0.018665028, 0.018685208, 0.018686319, 0.018712431, 0.018713569, 0.018728111, 0.018729236, 0.018753792, 0.018754917, 0.018772903, 0.018774028, 0.018787042, 0.018788167, 0.018807403, 0.018808528, 0.018836181, 0.018837319, 0.018860903, 0.018862028, 0.018881292, 0.018882389, 0.018901, 0.018902125, 0.018921056, 0.018922181, 0.018951431, 0.018952514, 0.018972375, 0.018973514, 0.019003639, 0.019004764, 0.019026819, 0.019027931, 0.019052167, 0.019053292, 0.019081597, 0.019082681, 0.019096639, 0.01909775, 0.019115486, 0.019116556, 0.019145458, 0.019146583, 0.019163014, 0.019164139, 0.019175903, 0.019177028, 0.019200958, 0.019202139, 0.019225986, 0.019227097, 0.019247958, 0.019249028, 0.019272056, 0.019273139, 0.019290514, 0.019291625, 0.019317125, 0.019318222, 0.019335278, 0.019336403, 0.019348528, 0.019349611, 0.019373833, 0.019374958, 0.019400431, 0.019401556, 0.019425792, 0.019426972, 0.019449264, 0.019450389, 0.019469333, 0.0194705, 0.019485014, 0.019486153, 0.019498236, 0.019499333, 0.019525736, 0.019526875, 0.019549611, 0.019550653, 0.019566792, 0.019567903, 0.019585278, 0.019586403, 0.019600361, 0.019601486, 0.019631319, 0.019632444, 0.019657597, 0.019658722, 0.019673028, 0.019674125], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:19.191" endtime="20201110 08:36:19.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.187" endtime="20201110 08:36:19.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.200" level="INFO">${RESULT} = [{'time': 0.018590833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018611847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:19.197" endtime="20201110 08:36:19.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:19.213" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.0830000000024154e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.125000000001125e-...</msg>
<status status="PASS" starttime="20201110 08:36:19.201" endtime="20201110 08:36:19.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.217" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:19.216" endtime="20201110 08:36:19.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.220" level="INFO">VALUE: [1.0830000000024154e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.137999999997752e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.084000000001889e-06, 1.1110000000015552e-06, 1.0699999999988496e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.1809999999994047e-06, 1.1109999999980857e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.1109999999980857e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.179999999999931e-06, 1.1249999999976557e-06, 1.1670000000033043e-06, 1.139000000000695e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.0419999999997098e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0970000000019853e-06]</msg>
<status status="PASS" starttime="20201110 08:36:19.219" endtime="20201110 08:36:19.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.214" endtime="20201110 08:36:19.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.223" endtime="20201110 08:36:19.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.226" endtime="20201110 08:36:19.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.225" endtime="20201110 08:36:19.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.221" endtime="20201110 08:36:19.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:18.820" endtime="20201110 08:36:19.247"></status>
</kw>
<msg timestamp="20201110 08:36:19.247" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.255" endtime="20201110 08:36:19.264"></status>
</kw>
<msg timestamp="20201110 08:36:19.265" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.253" endtime="20201110 08:36:19.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.267" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.266" endtime="20201110 08:36:19.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.268" endtime="20201110 08:36:19.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.251" endtime="20201110 08:36:19.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.249" endtime="20201110 08:36:19.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.278" endtime="20201110 08:36:19.564"></status>
</kw>
<msg timestamp="20201110 08:36:19.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01847125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:19.277" endtime="20201110 08:36:19.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01847125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:19.568" endtime="20201110 08:36:19.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.577" endtime="20201110 08:36:19.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.274" endtime="20201110 08:36:19.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.272" endtime="20201110 08:36:19.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.583" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:19.582" endtime="20201110 08:36:19.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.588" level="INFO">VALUE: [{'time': 0.018470125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01847125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018489583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.833299999999885e-05, 'source_diff': 1.833299999999885e-05}, {'time': 0.018490681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.018512417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1736000000001365e-05, 'source_diff': 2.1736000000001365e-05}, {'time': 0.018513528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7665999999999108e-05, 'source_diff': 2.7665999999999108e-05}, {'time': 0.018542306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.986099999999949e-05, 'source_diff': 1.986099999999949e-05}, {'time': 0.018563292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.0185925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9208000000002787e-05, 'source_diff': 2.9208000000002787e-05}, {'time': 0.018593625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018614417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0792000000002114e-05, 'source_diff': 2.0792000000002114e-05}, {'time': 0.018615556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018636653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.109700000000117e-05, 'source_diff': 2.109700000000117e-05}, {'time': 0.018637778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018652361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.458299999999857e-05, 'source_diff': 1.458299999999857e-05}, {'time': 0.018653458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018673333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987499999999906e-05, 'source_diff': 1.987499999999906e-05}, {'time': 0.018674444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018698125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.368100000000109e-05, 'source_diff': 2.368100000000109e-05}, {'time': 0.018699181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018714681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5500000000001624e-05, 'source_diff': 1.5500000000001624e-05}, {'time': 0.018715819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018736625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0805999999998215e-05, 'source_diff': 2.0805999999998215e-05}, {'time': 0.018737722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018759153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.143100000000231e-05, 'source_diff': 2.143100000000231e-05}, {'time': 0.018760319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018776097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5777999999997544e-05, 'source_diff': 1.5777999999997544e-05}, {'time': 0.018777208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018800194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2985999999999146e-05, 'source_diff': 2.2985999999999146e-05}, {'time': 0.018801306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018813708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2401999999998164e-05, 'source_diff': 1.2401999999998164e-05}, {'time': 0.018814833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018835389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0556000000001434e-05, 'source_diff': 2.0556000000001434e-05}, {'time': 0.018836431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018863778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.018864931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018891306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6374999999998622e-05, 'source_diff': 2.6374999999998622e-05}, {'time': 0.018892472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018917264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4791999999999176e-05, 'source_diff': 2.4791999999999176e-05}, {'time': 0.018918389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018939181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0791999999998645e-05, 'source_diff': 2.0791999999998645e-05}, {'time': 0.018940306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018968278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7972000000001107e-05, 'source_diff': 2.7972000000001107e-05}, {'time': 0.018969417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018989972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.055500000000196e-05, 'source_diff': 2.055500000000196e-05}, {'time': 0.018991014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613899999999835e-05, 'source_diff': 1.613899999999835e-05}, {'time': 0.01900825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019026292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8041999999999364e-05, 'source_diff': 1.8041999999999364e-05}, {'time': 0.019027375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5555999999999903e-05, 'source_diff': 1.5555999999999903e-05}, {'time': 0.019044014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019069167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.019070292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019088903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.861100000000171e-05, 'source_diff': 1.861100000000171e-05}, {'time': 0.019090042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019104597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.455499999999943e-05, 'source_diff': 1.455499999999943e-05}, {'time': 0.019105736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019117181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.019118319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.019143778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.545899999999851e-05, 'source_diff': 2.545899999999851e-05}, {'time': 0.019144903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019166014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.111099999999727e-05, 'source_diff': 2.111099999999727e-05}, {'time': 0.019167125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019194472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.019195583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019221069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5486000000001646e-05, 'source_diff': 2.5486000000001646e-05}, {'time': 0.019222236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019243014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0777999999999075e-05, 'source_diff': 2.0777999999999075e-05}, {'time': 0.019244194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019256194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2000000000001593e-05, 'source_diff': 1.2000000000001593e-05}, {'time': 0.019257306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.019276556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9250000000001904e-05, 'source_diff': 1.9250000000001904e-05}, {'time': 0.019277681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019308458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0776999999999194e-05, 'source_diff': 3.0776999999999194e-05}, {'time': 0.019309556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.019325694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6138000000002345e-05, 'source_diff': 1.6138000000002345e-05}, {'time': 0.019326819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019338903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2084000000002482e-05, 'source_diff': 1.2084000000002482e-05}, {'time': 0.019340014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.019352278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019371528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9249999999998435e-05, 'source_diff': 1.9249999999998435e-05}, {'time': 0.019372653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019397806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.019398931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019420972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.204100000000042e-05, 'source_diff': 2.204100000000042e-05}, {'time': 0.019422125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1529999999967955e-06, 'source_diff': 1.1529999999967955e-06}, {'time': 0.019433556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1431000000002717e-05, 'source_diff': 1.1431000000002717e-05}, {'time': 0.019434681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019446764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2082999999999539e-05, 'source_diff': 1.2082999999999539e-05}, {'time': 0.019447875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019475222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7347000000000482e-05, 'source_diff': 2.7347000000000482e-05}, {'time': 0.019476375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019490292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3916999999998708e-05, 'source_diff': 1.3916999999998708e-05}, {'time': 0.019491417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019517806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.638899999999819e-05, 'source_diff': 2.638899999999819e-05}, {'time': 0.019518931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:19.584" endtime="20201110 08:36:19.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.580" endtime="20201110 08:36:19.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:19.614" level="INFO">${debug-compressed} = {'source_diff': [0, 1.125000000001125e-06, 1.833299999999885e-05, 1.0979999999979895e-06, 2.1736000000001365e-05, 1.1110000000015552e-06, 2.7665999999999108e-05, 1.1120000000010288e-06, 1.986099999999...</msg>
<status status="PASS" starttime="20201110 08:36:19.591" endtime="20201110 08:36:19.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.618" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:19.617" endtime="20201110 08:36:19.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.622" level="INFO">VALUE: {'source_diff': [0, 1.125000000001125e-06, 1.833299999999885e-05, 1.0979999999979895e-06, 2.1736000000001365e-05, 1.1110000000015552e-06, 2.7665999999999108e-05, 1.1120000000010288e-06, 1.986099999999949e-05, 1.1249999999976557e-06, 2.9208000000002787e-05, 1.1249999999976557e-06, 2.0792000000002114e-05, 1.1389999999972256e-06, 2.109700000000117e-05, 1.125000000001125e-06, 1.458299999999857e-05, 1.0970000000019853e-06, 1.987499999999906e-05, 1.1109999999980857e-06, 2.368100000000109e-05, 1.0559999999992797e-06, 1.5500000000001624e-05, 1.1380000000012214e-06, 2.0805999999998215e-05, 1.0969999999985158e-06, 2.143100000000231e-05, 1.1660000000003612e-06, 1.5777999999997544e-05, 1.1110000000015552e-06, 2.2985999999999146e-05, 1.1120000000010288e-06, 1.2401999999998164e-05, 1.125000000001125e-06, 2.0556000000001434e-05, 1.0419999999997098e-06, 2.7347000000000482e-05, 1.153000000000265e-06, 2.6374999999998622e-05, 1.1660000000003612e-06, 2.4791999999999176e-05, 1.125000000001125e-06, 2.0791999999998645e-05, 1.125000000001125e-06, 2.7972000000001107e-05, 1.1389999999972256e-06, 2.055500000000196e-05, 1.0419999999997098e-06, 1.613899999999835e-05, 1.0970000000019853e-06, 1.8041999999999364e-05, 1.082999999998946e-06, 1.5555999999999903e-05, 1.0830000000024154e-06, 2.515299999999998e-05, 1.1249999999976557e-06, 1.861100000000171e-05, 1.139000000000695e-06, 1.455499999999943e-05, 1.139000000000695e-06, 1.1444999999998817e-05, 1.1380000000012214e-06, 2.545899999999851e-05, 1.125000000001125e-06, 2.111099999999727e-05, 1.1110000000015552e-06, 2.7347000000000482e-05, 1.1109999999980857e-06, 2.5486000000001646e-05, 1.1669999999998348e-06, 2.0777999999999075e-05, 1.179999999999931e-06, 1.2000000000001593e-05, 1.1119999999975594e-06, 1.9250000000001904e-05, 1.125000000001125e-06, 3.0776999999999194e-05, 1.0979999999979895e-06, 1.6138000000002345e-05, 1.1249999999976557e-06, 1.2084000000002482e-05, 1.1109999999980857e-06, 1.1139000000000288e-05, 1.125000000001125e-06, 1.9249999999998435e-05, 1.125000000001125e-06, 2.515299999999998e-05, 1.125000000001125e-06, 2.204100000000042e-05, 1.1529999999967955e-06, 1.1431000000002717e-05, 1.1249999999976557e-06, 1.2082999999999539e-05, 1.1110000000015552e-06, 2.7347000000000482e-05, 1.153000000000265e-06, 1.3916999999998708e-05, 1.125000000001125e-06, 2.638899999999819e-05, 1.125000000001125e-06], 'eventdiff': [0, 1.125000000001125e-06, 1.833299999999885e-05, 1.0979999999979895e-06, 2.1736000000001365e-05, 1.1110000000015552e-06, 2.7665999999999108e-05, 1.1120000000010288e-06, 1.986099999999949e-05, 1.1249999999976557e-06, 2.9208000000002787e-05, 1.1249999999976557e-06, 2.0792000000002114e-05, 1.1389999999972256e-06, 2.109700000000117e-05, 1.125000000001125e-06, 1.458299999999857e-05, 1.0970000000019853e-06, 1.987499999999906e-05, 1.1109999999980857e-06, 2.368100000000109e-05, 1.0559999999992797e-06, 1.5500000000001624e-05, 1.1380000000012214e-06, 2.0805999999998215e-05, 1.0969999999985158e-06, 2.143100000000231e-05, 1.1660000000003612e-06, 1.5777999999997544e-05, 1.1110000000015552e-06, 2.2985999999999146e-05, 1.1120000000010288e-06, 1.2401999999998164e-05, 1.125000000001125e-06, 2.0556000000001434e-05, 1.0419999999997098e-06, 2.7347000000000482e-05, 1.153000000000265e-06, 2.6374999999998622e-05, 1.1660000000003612e-06, 2.4791999999999176e-05, 1.125000000001125e-06, 2.0791999999998645e-05, 1.125000000001125e-06, 2.7972000000001107e-05, 1.1389999999972256e-06, 2.055500000000196e-05, 1.0419999999997098e-06, 1.613899999999835e-05, 1.0970000000019853e-06, 1.8041999999999364e-05, 1.082999999998946e-06, 1.5555999999999903e-05, 1.0830000000024154e-06, 2.515299999999998e-05, 1.1249999999976557e-06, 1.861100000000171e-05, 1.139000000000695e-06, 1.455499999999943e-05, 1.139000000000695e-06, 1.1444999999998817e-05, 1.1380000000012214e-06, 2.545899999999851e-05, 1.125000000001125e-06, 2.111099999999727e-05, 1.1110000000015552e-06, 2.7347000000000482e-05, 1.1109999999980857e-06, 2.5486000000001646e-05, 1.1669999999998348e-06, 2.0777999999999075e-05, 1.179999999999931e-06, 1.2000000000001593e-05, 1.1119999999975594e-06, 1.9250000000001904e-05, 1.125000000001125e-06, 3.0776999999999194e-05, 1.0979999999979895e-06, 1.6138000000002345e-05, 1.1249999999976557e-06, 1.2084000000002482e-05, 1.1109999999980857e-06, 1.1139000000000288e-05, 1.125000000001125e-06, 1.9249999999998435e-05, 1.125000000001125e-06, 2.515299999999998e-05, 1.125000000001125e-06, 2.204100000000042e-05, 1.1529999999967955e-06, 1.1431000000002717e-05, 1.1249999999976557e-06, 1.2082999999999539e-05, 1.1110000000015552e-06, 2.7347000000000482e-05, 1.153000000000265e-06, 1.3916999999998708e-05, 1.125000000001125e-06, 2.638899999999819e-05, 1.125000000001125e-06], 'time': [0.018470125, 0.01847125, 0.018489583, 0.018490681, 0.018512417, 0.018513528, 0.018541194, 0.018542306, 0.018562167, 0.018563292, 0.0185925, 0.018593625, 0.018614417, 0.018615556, 0.018636653, 0.018637778, 0.018652361, 0.018653458, 0.018673333, 0.018674444, 0.018698125, 0.018699181, 0.018714681, 0.018715819, 0.018736625, 0.018737722, 0.018759153, 0.018760319, 0.018776097, 0.018777208, 0.018800194, 0.018801306, 0.018813708, 0.018814833, 0.018835389, 0.018836431, 0.018863778, 0.018864931, 0.018891306, 0.018892472, 0.018917264, 0.018918389, 0.018939181, 0.018940306, 0.018968278, 0.018969417, 0.018989972, 0.018991014, 0.019007153, 0.01900825, 0.019026292, 0.019027375, 0.019042931, 0.019044014, 0.019069167, 0.019070292, 0.019088903, 0.019090042, 0.019104597, 0.019105736, 0.019117181, 0.019118319, 0.019143778, 0.019144903, 0.019166014, 0.019167125, 0.019194472, 0.019195583, 0.019221069, 0.019222236, 0.019243014, 0.019244194, 0.019256194, 0.019257306, 0.019276556, 0.019277681, 0.019308458, 0.019309556, 0.019325694, 0.019326819, 0.019338903, 0.019340014, 0.019351153, 0.019352278, 0.019371528, 0.019372653, 0.019397806, 0.019398931, 0.019420972, 0.019422125, 0.019433556, 0.019434681, 0.019446764, 0.019447875, 0.019475222, 0.019476375, 0.019490292, 0.019491417, 0.019517806, 0.019518931], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:19.619" endtime="20201110 08:36:19.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.615" endtime="20201110 08:36:19.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:19.628" level="INFO">${RESULT} = [{'time': 0.01847125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018490681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:19.625" endtime="20201110 08:36:19.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:19.642" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.125000000001125e-06, 1.0979999999979895e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.12500000000112...</msg>
<status status="PASS" starttime="20201110 08:36:19.629" endtime="20201110 08:36:19.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.646" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:19.645" endtime="20201110 08:36:19.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.648" level="INFO">VALUE: [1.125000000001125e-06, 1.0979999999979895e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.0970000000019853e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.1380000000012214e-06, 1.0969999999985158e-06, 1.1660000000003612e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.153000000000265e-06, 1.1660000000003612e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1389999999972256e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.139000000000695e-06, 1.1380000000012214e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1669999999998348e-06, 1.179999999999931e-06, 1.1119999999975594e-06, 1.125000000001125e-06, 1.0979999999979895e-06, 1.1249999999976557e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1529999999967955e-06, 1.1249999999976557e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201110 08:36:19.647" endtime="20201110 08:36:19.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.643" endtime="20201110 08:36:19.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.651" endtime="20201110 08:36:19.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:19.655" endtime="20201110 08:36:19.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.653" endtime="20201110 08:36:19.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.650" endtime="20201110 08:36:19.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.248" endtime="20201110 08:36:19.676"></status>
</kw>
<msg timestamp="20201110 08:36:19.676" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.683" endtime="20201110 08:36:19.692"></status>
</kw>
<msg timestamp="20201110 08:36:19.693" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.682" endtime="20201110 08:36:19.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:19.696" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:19.694" endtime="20201110 08:36:19.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.697" endtime="20201110 08:36:19.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.679" endtime="20201110 08:36:19.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.678" endtime="20201110 08:36:19.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:19.707" endtime="20201110 08:36:19.992"></status>
</kw>
<msg timestamp="20201110 08:36:19.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.705" endtime="20201110 08:36:19.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:19.997" endtime="20201110 08:36:20.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.005" endtime="20201110 08:36:20.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.702" endtime="20201110 08:36:20.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.700" endtime="20201110 08:36:20.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.012" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:20.011" endtime="20201110 08:36:20.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.017" level="INFO">VALUE: [{'time': 0.018448722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018449847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018479972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0125000000002372e-05, 'source_diff': 3.0125000000002372e-05}, {'time': 0.018481097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018505972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.487500000000059e-05, 'source_diff': 2.487500000000059e-05}, {'time': 0.018507069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018537833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.018538958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018560694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1735999999997896e-05, 'source_diff': 2.1735999999997896e-05}, {'time': 0.018561847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018582306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.045900000000045e-05, 'source_diff': 2.045900000000045e-05}, {'time': 0.018583431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018613889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0458000000000568e-05, 'source_diff': 3.0458000000000568e-05}, {'time': 0.018615014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018637056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2041999999999895e-05, 'source_diff': 2.2041999999999895e-05}, {'time': 0.018638181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018654014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.583299999999982e-05, 'source_diff': 1.583299999999982e-05}, {'time': 0.018655125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018666889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1763999999997443e-05, 'source_diff': 1.1763999999997443e-05}, {'time': 0.018668028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018688514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.018689625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.01871075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.112500000000031e-05, 'source_diff': 2.112500000000031e-05}, {'time': 0.018711875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018726472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4597000000001609e-05, 'source_diff': 1.4597000000001609e-05}, {'time': 0.018727556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018751458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3901999999999257e-05, 'source_diff': 2.3901999999999257e-05}, {'time': 0.018752597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018779931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7334000000000386e-05, 'source_diff': 2.7334000000000386e-05}, {'time': 0.018781056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018794069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.301299999999922e-05, 'source_diff': 1.301299999999922e-05}, {'time': 0.018795194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018819097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.390299999999873e-05, 'source_diff': 2.390299999999873e-05}, {'time': 0.018820236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018839153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.891700000000024e-05, 'source_diff': 1.891700000000024e-05}, {'time': 0.018840278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018868861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8583000000002162e-05, 'source_diff': 2.8583000000002162e-05}, {'time': 0.018869986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018900431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.018901569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1380000000012214e-06, 'source_diff': 1.1380000000012214e-06}, {'time': 0.018932333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.018933444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018963889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.018965042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.018992431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7388999999999192e-05, 'source_diff': 2.7388999999999192e-05}, {'time': 0.018993486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019013361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987499999999906e-05, 'source_diff': 1.987499999999906e-05}, {'time': 0.019014458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019034347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.988899999999863e-05, 'source_diff': 1.988899999999863e-05}, {'time': 0.019035458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019063417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.795899999999754e-05, 'source_diff': 2.795899999999754e-05}, {'time': 0.019064542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019090958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6416000000001327e-05, 'source_diff': 2.6416000000001327e-05}, {'time': 0.019092069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019116972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.490299999999973e-05, 'source_diff': 2.490299999999973e-05}, {'time': 0.019118028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019145986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7958000000001537e-05, 'source_diff': 2.7958000000001537e-05}, {'time': 0.019147111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019168528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.141699999999927e-05, 'source_diff': 2.141699999999927e-05}, {'time': 0.019169653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019187681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8028000000003264e-05, 'source_diff': 1.8028000000003264e-05}, {'time': 0.019188778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019205847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.70690000000015e-05, 'source_diff': 1.70690000000015e-05}, {'time': 0.019207028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019231486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4457999999998037e-05, 'source_diff': 2.4457999999998037e-05}, {'time': 0.019232653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019253403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.019254528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019275958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1429999999999366e-05, 'source_diff': 2.1429999999999366e-05}, {'time': 0.019277069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019288222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.019289347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019301111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1764000000000913e-05, 'source_diff': 1.1764000000000913e-05}, {'time': 0.019302236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019314639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2403000000001108e-05, 'source_diff': 1.2403000000001108e-05}, {'time': 0.01931575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019330306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4555999999998903e-05, 'source_diff': 1.4555999999998903e-05}, {'time': 0.019331431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9221999999998888e-05, 'source_diff': 2.9221999999998888e-05}, {'time': 0.019361764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019379764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.019380875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019392333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000002383e-05, 'source_diff': 1.1458000000002383e-05}, {'time': 0.019393458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.0194215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8042000000002426e-05, 'source_diff': 2.8042000000002426e-05}, {'time': 0.019422542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019444889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.234699999999895e-05, 'source_diff': 2.234699999999895e-05}, {'time': 0.019446014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019457472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.019458611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019469736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1125000000000718e-05, 'source_diff': 1.1125000000000718e-05}, {'time': 0.019470875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019499764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8889000000000692e-05, 'source_diff': 2.8889000000000692e-05}, {'time': 0.019500903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019528528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7624999999999872e-05, 'source_diff': 2.7624999999999872e-05}, {'time': 0.019529653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019550444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.079099999999917e-05, 'source_diff': 2.079099999999917e-05}, {'time': 0.019551583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019570208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862499999999781e-05, 'source_diff': 1.862499999999781e-05}, {'time': 0.019571375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:20.013" endtime="20201110 08:36:20.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.008" endtime="20201110 08:36:20.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:20.043" level="INFO">${debug-compressed} = {'source_diff': [0, 1.1249999999976557e-06, 3.0125000000002372e-05, 1.1249999999976557e-06, 2.487500000000059e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.125000000001125e-06, 2.17359999999978...</msg>
<status status="PASS" starttime="20201110 08:36:20.019" endtime="20201110 08:36:20.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.047" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:20.046" endtime="20201110 08:36:20.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.051" level="INFO">VALUE: {'source_diff': [0, 1.1249999999976557e-06, 3.0125000000002372e-05, 1.1249999999976557e-06, 2.487500000000059e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.125000000001125e-06, 2.1735999999997896e-05, 1.153000000000265e-06, 2.045900000000045e-05, 1.125000000001125e-06, 3.0458000000000568e-05, 1.1249999999976557e-06, 2.2041999999999895e-05, 1.125000000001125e-06, 1.583299999999982e-05, 1.1110000000015552e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 2.0486000000000115e-05, 1.1110000000015552e-06, 2.112500000000031e-05, 1.1249999999976557e-06, 1.4597000000001609e-05, 1.0839999999984196e-06, 2.3901999999999257e-05, 1.139000000000695e-06, 2.7334000000000386e-05, 1.125000000001125e-06, 1.301299999999922e-05, 1.125000000001125e-06, 2.390299999999873e-05, 1.139000000000695e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 2.8583000000002162e-05, 1.1249999999976557e-06, 3.044500000000047e-05, 1.1380000000012214e-06, 3.07639999999991e-05, 1.1110000000015552e-06, 3.044500000000047e-05, 1.153000000000265e-06, 2.7388999999999192e-05, 1.054999999999806e-06, 1.987499999999906e-05, 1.0970000000019853e-06, 1.988899999999863e-05, 1.1110000000015552e-06, 2.795899999999754e-05, 1.125000000001125e-06, 2.6416000000001327e-05, 1.1109999999980857e-06, 2.490299999999973e-05, 1.0559999999992797e-06, 2.7958000000001537e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.1249999999976557e-06, 1.8028000000003264e-05, 1.0969999999985158e-06, 1.70690000000015e-05, 1.1809999999994047e-06, 2.4457999999998037e-05, 1.1669999999998348e-06, 2.0749999999999935e-05, 1.125000000001125e-06, 2.1429999999999366e-05, 1.1110000000015552e-06, 1.1152999999999857e-05, 1.1249999999976557e-06, 1.1764000000000913e-05, 1.125000000001125e-06, 1.2403000000001108e-05, 1.1109999999980857e-06, 1.4555999999998903e-05, 1.125000000001125e-06, 2.9221999999998888e-05, 1.1110000000015552e-06, 1.8000000000000654e-05, 1.1109999999980857e-06, 1.1458000000002383e-05, 1.1249999999976557e-06, 2.8042000000002426e-05, 1.0419999999997098e-06, 2.234699999999895e-05, 1.125000000001125e-06, 1.1457999999998913e-05, 1.139000000000695e-06, 1.1125000000000718e-05, 1.1389999999972256e-06, 2.8889000000000692e-05, 1.139000000000695e-06, 2.7624999999999872e-05, 1.125000000001125e-06, 2.079099999999917e-05, 1.139000000000695e-06, 1.862499999999781e-05, 1.1669999999998348e-06], 'eventdiff': [0, 1.1249999999976557e-06, 3.0125000000002372e-05, 1.1249999999976557e-06, 2.487500000000059e-05, 1.0970000000019853e-06, 3.07639999999991e-05, 1.125000000001125e-06, 2.1735999999997896e-05, 1.153000000000265e-06, 2.045900000000045e-05, 1.125000000001125e-06, 3.0458000000000568e-05, 1.1249999999976557e-06, 2.2041999999999895e-05, 1.125000000001125e-06, 1.583299999999982e-05, 1.1110000000015552e-06, 1.1763999999997443e-05, 1.139000000000695e-06, 2.0486000000000115e-05, 1.1110000000015552e-06, 2.112500000000031e-05, 1.1249999999976557e-06, 1.4597000000001609e-05, 1.0839999999984196e-06, 2.3901999999999257e-05, 1.139000000000695e-06, 2.7334000000000386e-05, 1.125000000001125e-06, 1.301299999999922e-05, 1.125000000001125e-06, 2.390299999999873e-05, 1.139000000000695e-06, 1.891700000000024e-05, 1.1249999999976557e-06, 2.8583000000002162e-05, 1.1249999999976557e-06, 3.044500000000047e-05, 1.1380000000012214e-06, 3.07639999999991e-05, 1.1110000000015552e-06, 3.044500000000047e-05, 1.153000000000265e-06, 2.7388999999999192e-05, 1.054999999999806e-06, 1.987499999999906e-05, 1.0970000000019853e-06, 1.988899999999863e-05, 1.1110000000015552e-06, 2.795899999999754e-05, 1.125000000001125e-06, 2.6416000000001327e-05, 1.1109999999980857e-06, 2.490299999999973e-05, 1.0559999999992797e-06, 2.7958000000001537e-05, 1.125000000001125e-06, 2.141699999999927e-05, 1.1249999999976557e-06, 1.8028000000003264e-05, 1.0969999999985158e-06, 1.70690000000015e-05, 1.1809999999994047e-06, 2.4457999999998037e-05, 1.1669999999998348e-06, 2.0749999999999935e-05, 1.125000000001125e-06, 2.1429999999999366e-05, 1.1110000000015552e-06, 1.1152999999999857e-05, 1.1249999999976557e-06, 1.1764000000000913e-05, 1.125000000001125e-06, 1.2403000000001108e-05, 1.1109999999980857e-06, 1.4555999999998903e-05, 1.125000000001125e-06, 2.9221999999998888e-05, 1.1110000000015552e-06, 1.8000000000000654e-05, 1.1109999999980857e-06, 1.1458000000002383e-05, 1.1249999999976557e-06, 2.8042000000002426e-05, 1.0419999999997098e-06, 2.234699999999895e-05, 1.125000000001125e-06, 1.1457999999998913e-05, 1.139000000000695e-06, 1.1125000000000718e-05, 1.1389999999972256e-06, 2.8889000000000692e-05, 1.139000000000695e-06, 2.7624999999999872e-05, 1.125000000001125e-06, 2.079099999999917e-05, 1.139000000000695e-06, 1.862499999999781e-05, 1.1669999999998348e-06], 'time': [0.018448722, 0.018449847, 0.018479972, 0.018481097, 0.018505972, 0.018507069, 0.018537833, 0.018538958, 0.018560694, 0.018561847, 0.018582306, 0.018583431, 0.018613889, 0.018615014, 0.018637056, 0.018638181, 0.018654014, 0.018655125, 0.018666889, 0.018668028, 0.018688514, 0.018689625, 0.01871075, 0.018711875, 0.018726472, 0.018727556, 0.018751458, 0.018752597, 0.018779931, 0.018781056, 0.018794069, 0.018795194, 0.018819097, 0.018820236, 0.018839153, 0.018840278, 0.018868861, 0.018869986, 0.018900431, 0.018901569, 0.018932333, 0.018933444, 0.018963889, 0.018965042, 0.018992431, 0.018993486, 0.019013361, 0.019014458, 0.019034347, 0.019035458, 0.019063417, 0.019064542, 0.019090958, 0.019092069, 0.019116972, 0.019118028, 0.019145986, 0.019147111, 0.019168528, 0.019169653, 0.019187681, 0.019188778, 0.019205847, 0.019207028, 0.019231486, 0.019232653, 0.019253403, 0.019254528, 0.019275958, 0.019277069, 0.019288222, 0.019289347, 0.019301111, 0.019302236, 0.019314639, 0.01931575, 0.019330306, 0.019331431, 0.019360653, 0.019361764, 0.019379764, 0.019380875, 0.019392333, 0.019393458, 0.0194215, 0.019422542, 0.019444889, 0.019446014, 0.019457472, 0.019458611, 0.019469736, 0.019470875, 0.019499764, 0.019500903, 0.019528528, 0.019529653, 0.019550444, 0.019551583, 0.019570208, 0.019571375], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:20.048" endtime="20201110 08:36:20.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.044" endtime="20201110 08:36:20.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.057" level="INFO">${RESULT} = [{'time': 0.018449847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018481097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:20.053" endtime="20201110 08:36:20.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:20.070" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.1249999999976557e-06, 1.1249999999976557e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e...</msg>
<status status="PASS" starttime="20201110 08:36:20.058" endtime="20201110 08:36:20.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.074" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:20.073" endtime="20201110 08:36:20.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.077" level="INFO">VALUE: [1.1249999999976557e-06, 1.1249999999976557e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.153000000000265e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.139000000000695e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.1249999999976557e-06, 1.1380000000012214e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.1809999999994047e-06, 1.1669999999998348e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1109999999980857e-06, 1.1249999999976557e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1669999999998348e-06]</msg>
<status status="PASS" starttime="20201110 08:36:20.075" endtime="20201110 08:36:20.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.071" endtime="20201110 08:36:20.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.080" endtime="20201110 08:36:20.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.083" endtime="20201110 08:36:20.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.082" endtime="20201110 08:36:20.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.078" endtime="20201110 08:36:20.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:19.676" endtime="20201110 08:36:20.104"></status>
</kw>
<msg timestamp="20201110 08:36:20.104" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.112" endtime="20201110 08:36:20.121"></status>
</kw>
<msg timestamp="20201110 08:36:20.121" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.110" endtime="20201110 08:36:20.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.124" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.122" endtime="20201110 08:36:20.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.125" endtime="20201110 08:36:20.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.108" endtime="20201110 08:36:20.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.106" endtime="20201110 08:36:20.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.134" endtime="20201110 08:36:20.420"></status>
</kw>
<msg timestamp="20201110 08:36:20.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018488708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.133" endtime="20201110 08:36:20.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018488708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.424" endtime="20201110 08:36:20.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.437" endtime="20201110 08:36:20.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.130" endtime="20201110 08:36:20.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.129" endtime="20201110 08:36:20.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.443" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:20.442" endtime="20201110 08:36:20.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.448" level="INFO">VALUE: [{'time': 0.018487569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018488708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018512306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3597999999999675e-05, 'source_diff': 2.3597999999999675e-05}, {'time': 0.018513431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8568999999999123e-05, 'source_diff': 2.8568999999999123e-05}, {'time': 0.018543139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.484700000000145e-05, 'source_diff': 2.484700000000145e-05}, {'time': 0.018569125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018589903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0778000000002544e-05, 'source_diff': 2.0778000000002544e-05}, {'time': 0.018591028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018607167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613900000000182e-05, 'source_diff': 1.613900000000182e-05}, {'time': 0.018608333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.0186375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9167000000000082e-05, 'source_diff': 2.9167000000000082e-05}, {'time': 0.018638639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.018668764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0125000000002372e-05, 'source_diff': 3.0125000000002372e-05}, {'time': 0.018669903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018685097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5193999999999624e-05, 'source_diff': 1.5193999999999624e-05}, {'time': 0.018686222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018697972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1750000000001343e-05, 'source_diff': 1.1750000000001343e-05}, {'time': 0.018699097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018713694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459699999999814e-05, 'source_diff': 1.459699999999814e-05}, {'time': 0.018714875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018744028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9153000000000512e-05, 'source_diff': 2.9153000000000512e-05}, {'time': 0.018745125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018761889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6763999999998974e-05, 'source_diff': 1.6763999999998974e-05}, {'time': 0.018763, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018790056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7056000000000996e-05, 'source_diff': 2.7056000000000996e-05}, {'time': 0.018791236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018810708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9471999999999545e-05, 'source_diff': 1.9471999999999545e-05}, {'time': 0.018811833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018827639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5806000000000153e-05, 'source_diff': 1.5806000000000153e-05}, {'time': 0.018828764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018843333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4568999999999e-05, 'source_diff': 1.4568999999999e-05}, {'time': 0.018844514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018855917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1403000000000107e-05, 'source_diff': 1.1403000000000107e-05}, {'time': 0.018857042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018875972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8930000000000335e-05, 'source_diff': 1.8930000000000335e-05}, {'time': 0.018877097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018897583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0486000000000115e-05, 'source_diff': 2.0486000000000115e-05}, {'time': 0.018898708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018916083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.737500000000003e-05, 'source_diff': 1.737500000000003e-05}, {'time': 0.018917222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018947667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.044500000000047e-05, 'source_diff': 3.044500000000047e-05}, {'time': 0.018948778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018959931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018961056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018984681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.362499999999934e-05, 'source_diff': 2.362499999999934e-05}, {'time': 0.018985792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.01899725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.018998417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019026958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8540999999999983e-05, 'source_diff': 2.8540999999999983e-05}, {'time': 0.019028056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.019040764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2708000000000164e-05, 'source_diff': 1.2708000000000164e-05}, {'time': 0.019041889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019067375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5486000000001646e-05, 'source_diff': 2.5486000000001646e-05}, {'time': 0.019068514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019084, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5485999999998584e-05, 'source_diff': 1.5485999999998584e-05}, {'time': 0.019085111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019097194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2083000000003008e-05, 'source_diff': 1.2083000000003008e-05}, {'time': 0.019098333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019127583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.019128667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019141361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2694000000000594e-05, 'source_diff': 1.2694000000000594e-05}, {'time': 0.0191425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019162972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0472000000000545e-05, 'source_diff': 2.0472000000000545e-05}, {'time': 0.019164097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019188014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.39169999999983e-05, 'source_diff': 2.39169999999983e-05}, {'time': 0.019189125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019201889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2763999999998443e-05, 'source_diff': 1.2763999999998443e-05}, {'time': 0.019202958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019215681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2722999999999207e-05, 'source_diff': 1.2722999999999207e-05}, {'time': 0.019216792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019244125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7333000000000912e-05, 'source_diff': 2.7333000000000912e-05}, {'time': 0.019245278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019257667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2388999999998068e-05, 'source_diff': 1.2388999999998068e-05}, {'time': 0.019258778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019281778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2999999999998716e-05, 'source_diff': 2.2999999999998716e-05}, {'time': 0.019282861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8903000000000262e-05, 'source_diff': 2.8903000000000262e-05}, {'time': 0.019312917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.153000000000265e-06, 'source_diff': 1.153000000000265e-06}, {'time': 0.019329319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6402000000002165e-05, 'source_diff': 1.6402000000002165e-05}, {'time': 0.019330458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389999999972256e-06, 'source_diff': 1.1389999999972256e-06}, {'time': 0.019352181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.172300000000127e-05, 'source_diff': 2.172300000000127e-05}, {'time': 0.019353306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.0193735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0193999999997686e-05, 'source_diff': 2.0193999999997686e-05}, {'time': 0.019374681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.019392292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.761099999999724e-05, 'source_diff': 1.761099999999724e-05}, {'time': 0.019393417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019411417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.019412542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019432708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0165999999998546e-05, 'source_diff': 2.0165999999998546e-05}, {'time': 0.019433847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019452472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862499999999781e-05, 'source_diff': 1.862499999999781e-05}, {'time': 0.019453639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.019480028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.638900000000166e-05, 'source_diff': 2.638900000000166e-05}, {'time': 0.019481111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019499722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.861100000000171e-05, 'source_diff': 1.861100000000171e-05}, {'time': 0.019500861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019517361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6499999999999154e-05, 'source_diff': 1.6499999999999154e-05}, {'time': 0.019518431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:20.444" endtime="20201110 08:36:20.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.440" endtime="20201110 08:36:20.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:20.474" level="INFO">${debug-compressed} = {'source_diff': [0, 1.139000000000695e-06, 2.3597999999999675e-05, 1.125000000001125e-06, 2.8568999999999123e-05, 1.139000000000695e-06, 2.484700000000145e-05, 1.1389999999972256e-06, 2.07780000000025...</msg>
<status status="PASS" starttime="20201110 08:36:20.451" endtime="20201110 08:36:20.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.480" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:20.478" endtime="20201110 08:36:20.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.485" level="INFO">VALUE: {'source_diff': [0, 1.139000000000695e-06, 2.3597999999999675e-05, 1.125000000001125e-06, 2.8568999999999123e-05, 1.139000000000695e-06, 2.484700000000145e-05, 1.1389999999972256e-06, 2.0778000000002544e-05, 1.1249999999976557e-06, 1.613900000000182e-05, 1.1660000000003612e-06, 2.9167000000000082e-05, 1.1389999999972256e-06, 3.0125000000002372e-05, 1.139000000000695e-06, 1.5193999999999624e-05, 1.1249999999976557e-06, 1.1750000000001343e-05, 1.125000000001125e-06, 1.459699999999814e-05, 1.1809999999994047e-06, 2.9153000000000512e-05, 1.0970000000019853e-06, 1.6763999999998974e-05, 1.1109999999980857e-06, 2.7056000000000996e-05, 1.179999999999931e-06, 1.9471999999999545e-05, 1.125000000001125e-06, 1.5806000000000153e-05, 1.125000000001125e-06, 1.4568999999999e-05, 1.1809999999994047e-06, 1.1403000000000107e-05, 1.125000000001125e-06, 1.8930000000000335e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.125000000001125e-06, 1.737500000000003e-05, 1.139000000000695e-06, 3.044500000000047e-05, 1.1109999999980857e-06, 1.1152999999999857e-05, 1.125000000001125e-06, 2.362499999999934e-05, 1.1110000000015552e-06, 1.1457999999998913e-05, 1.1669999999998348e-06, 2.8540999999999983e-05, 1.098000000001459e-06, 1.2708000000000164e-05, 1.1249999999976557e-06, 2.5486000000001646e-05, 1.139000000000695e-06, 1.5485999999998584e-05, 1.1109999999980857e-06, 1.2083000000003008e-05, 1.1389999999972256e-06, 2.9250000000001497e-05, 1.0839999999984196e-06, 1.2694000000000594e-05, 1.139000000000695e-06, 2.0472000000000545e-05, 1.125000000001125e-06, 2.39169999999983e-05, 1.1110000000015552e-06, 1.2763999999998443e-05, 1.068999999999376e-06, 1.2722999999999207e-05, 1.1110000000015552e-06, 2.7333000000000912e-05, 1.153000000000265e-06, 1.2388999999998068e-05, 1.1110000000015552e-06, 2.2999999999998716e-05, 1.082999999998946e-06, 2.8903000000000262e-05, 1.153000000000265e-06, 1.6402000000002165e-05, 1.1389999999972256e-06, 2.172300000000127e-05, 1.125000000001125e-06, 2.0193999999997686e-05, 1.1810000000028742e-06, 1.761099999999724e-05, 1.125000000001125e-06, 1.8000000000000654e-05, 1.125000000001125e-06, 2.0165999999998546e-05, 1.139000000000695e-06, 1.862499999999781e-05, 1.1669999999998348e-06, 2.638900000000166e-05, 1.082999999998946e-06, 1.861100000000171e-05, 1.139000000000695e-06, 1.6499999999999154e-05, 1.0699999999988496e-06], 'eventdiff': [0, 1.139000000000695e-06, 2.3597999999999675e-05, 1.125000000001125e-06, 2.8568999999999123e-05, 1.139000000000695e-06, 2.484700000000145e-05, 1.1389999999972256e-06, 2.0778000000002544e-05, 1.1249999999976557e-06, 1.613900000000182e-05, 1.1660000000003612e-06, 2.9167000000000082e-05, 1.1389999999972256e-06, 3.0125000000002372e-05, 1.139000000000695e-06, 1.5193999999999624e-05, 1.1249999999976557e-06, 1.1750000000001343e-05, 1.125000000001125e-06, 1.459699999999814e-05, 1.1809999999994047e-06, 2.9153000000000512e-05, 1.0970000000019853e-06, 1.6763999999998974e-05, 1.1109999999980857e-06, 2.7056000000000996e-05, 1.179999999999931e-06, 1.9471999999999545e-05, 1.125000000001125e-06, 1.5806000000000153e-05, 1.125000000001125e-06, 1.4568999999999e-05, 1.1809999999994047e-06, 1.1403000000000107e-05, 1.125000000001125e-06, 1.8930000000000335e-05, 1.1249999999976557e-06, 2.0486000000000115e-05, 1.125000000001125e-06, 1.737500000000003e-05, 1.139000000000695e-06, 3.044500000000047e-05, 1.1109999999980857e-06, 1.1152999999999857e-05, 1.125000000001125e-06, 2.362499999999934e-05, 1.1110000000015552e-06, 1.1457999999998913e-05, 1.1669999999998348e-06, 2.8540999999999983e-05, 1.098000000001459e-06, 1.2708000000000164e-05, 1.1249999999976557e-06, 2.5486000000001646e-05, 1.139000000000695e-06, 1.5485999999998584e-05, 1.1109999999980857e-06, 1.2083000000003008e-05, 1.1389999999972256e-06, 2.9250000000001497e-05, 1.0839999999984196e-06, 1.2694000000000594e-05, 1.139000000000695e-06, 2.0472000000000545e-05, 1.125000000001125e-06, 2.39169999999983e-05, 1.1110000000015552e-06, 1.2763999999998443e-05, 1.068999999999376e-06, 1.2722999999999207e-05, 1.1110000000015552e-06, 2.7333000000000912e-05, 1.153000000000265e-06, 1.2388999999998068e-05, 1.1110000000015552e-06, 2.2999999999998716e-05, 1.082999999998946e-06, 2.8903000000000262e-05, 1.153000000000265e-06, 1.6402000000002165e-05, 1.1389999999972256e-06, 2.172300000000127e-05, 1.125000000001125e-06, 2.0193999999997686e-05, 1.1810000000028742e-06, 1.761099999999724e-05, 1.125000000001125e-06, 1.8000000000000654e-05, 1.125000000001125e-06, 2.0165999999998546e-05, 1.139000000000695e-06, 1.862499999999781e-05, 1.1669999999998348e-06, 2.638900000000166e-05, 1.082999999998946e-06, 1.861100000000171e-05, 1.139000000000695e-06, 1.6499999999999154e-05, 1.0699999999988496e-06], 'time': [0.018487569, 0.018488708, 0.018512306, 0.018513431, 0.018542, 0.018543139, 0.018567986, 0.018569125, 0.018589903, 0.018591028, 0.018607167, 0.018608333, 0.0186375, 0.018638639, 0.018668764, 0.018669903, 0.018685097, 0.018686222, 0.018697972, 0.018699097, 0.018713694, 0.018714875, 0.018744028, 0.018745125, 0.018761889, 0.018763, 0.018790056, 0.018791236, 0.018810708, 0.018811833, 0.018827639, 0.018828764, 0.018843333, 0.018844514, 0.018855917, 0.018857042, 0.018875972, 0.018877097, 0.018897583, 0.018898708, 0.018916083, 0.018917222, 0.018947667, 0.018948778, 0.018959931, 0.018961056, 0.018984681, 0.018985792, 0.01899725, 0.018998417, 0.019026958, 0.019028056, 0.019040764, 0.019041889, 0.019067375, 0.019068514, 0.019084, 0.019085111, 0.019097194, 0.019098333, 0.019127583, 0.019128667, 0.019141361, 0.0191425, 0.019162972, 0.019164097, 0.019188014, 0.019189125, 0.019201889, 0.019202958, 0.019215681, 0.019216792, 0.019244125, 0.019245278, 0.019257667, 0.019258778, 0.019281778, 0.019282861, 0.019311764, 0.019312917, 0.019329319, 0.019330458, 0.019352181, 0.019353306, 0.0193735, 0.019374681, 0.019392292, 0.019393417, 0.019411417, 0.019412542, 0.019432708, 0.019433847, 0.019452472, 0.019453639, 0.019480028, 0.019481111, 0.019499722, 0.019500861, 0.019517361, 0.019518431], 'source}</msg>
<status status="PASS" starttime="20201110 08:36:20.481" endtime="20201110 08:36:20.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.476" endtime="20201110 08:36:20.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.493" level="INFO">${RESULT} = [{'time': 0.018488708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018513431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:20.489" endtime="20201110 08:36:20.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:20.510" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.139000000000695e...</msg>
<status status="PASS" starttime="20201110 08:36:20.495" endtime="20201110 08:36:20.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.514" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:20.513" endtime="20201110 08:36:20.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.517" level="INFO">VALUE: [1.139000000000695e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.0970000000019853e-06, 1.1109999999980857e-06, 1.179999999999931e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.1809999999994047e-06, 1.125000000001125e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.1669999999998348e-06, 1.098000000001459e-06, 1.1249999999976557e-06, 1.139000000000695e-06, 1.1109999999980857e-06, 1.1389999999972256e-06, 1.0839999999984196e-06, 1.139000000000695e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.1110000000015552e-06, 1.153000000000265e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.1389999999972256e-06, 1.125000000001125e-06, 1.1810000000028742e-06, 1.125000000001125e-06, 1.125000000001125e-06, 1.139000000000695e-06, 1.1669999999998348e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201110 08:36:20.515" endtime="20201110 08:36:20.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.511" endtime="20201110 08:36:20.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.520" endtime="20201110 08:36:20.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.523" endtime="20201110 08:36:20.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.522" endtime="20201110 08:36:20.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.518" endtime="20201110 08:36:20.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.105" endtime="20201110 08:36:20.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.945" endtime="20201110 08:36:20.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.548" endtime="20201110 08:36:20.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.547" endtime="20201110 08:36:20.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.545" endtime="20201110 08:36:20.568"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:11.877" endtime="20201110 08:36:20.569" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:20.575" endtime="20201110 08:36:20.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.574" endtime="20201110 08:36:20.595"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.608" endtime="20201110 08:36:20.620"></status>
</kw>
<msg timestamp="20201110 08:36:20.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.607" endtime="20201110 08:36:20.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.623" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.622" endtime="20201110 08:36:20.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.627" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:20.625" endtime="20201110 08:36:20.627"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.604" endtime="20201110 08:36:20.628"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:20.602" endtime="20201110 08:36:20.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.600" endtime="20201110 08:36:20.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:20.633" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:20.633" endtime="20201110 08:36:20.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.630" endtime="20201110 08:36:20.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.600" endtime="20201110 08:36:20.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.599" endtime="20201110 08:36:20.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.635" endtime="20201110 08:36:20.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.598" endtime="20201110 08:36:20.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.596" endtime="20201110 08:36:20.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.572" endtime="20201110 08:36:20.638"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:20.640" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.647" endtime="20201110 08:36:20.658"></status>
</kw>
<msg timestamp="20201110 08:36:20.658" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.645" endtime="20201110 08:36:20.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:20.659" endtime="20201110 08:36:20.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.662" endtime="20201110 08:36:20.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.643" endtime="20201110 08:36:20.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.641" endtime="20201110 08:36:20.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.670" endtime="20201110 08:36:20.955"></status>
</kw>
<msg timestamp="20201110 08:36:20.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062464653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062474306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.669" endtime="20201110 08:36:20.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062464653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062474306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:20.959" endtime="20201110 08:36:20.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.967" endtime="20201110 08:36:20.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.666" endtime="20201110 08:36:20.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.665" endtime="20201110 08:36:20.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:20.974" level="INFO">${RESULT} = [{'time': 0.062474306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.062495556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:20.971" endtime="20201110 08:36:20.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:20.988" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.667000000003866e-06, 8.666000000004392e-06, 8.652999999997357e-06, 8.611000000005586e-06, 8.652999999997357e-06, 8.681000000010375e-06, 8.666999999989988e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:20.975" endtime="20201110 08:36:20.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:20.992" endtime="20201110 08:36:20.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:20.995" level="INFO">VALUE: [9.652999999998357e-06, 8.667000000003866e-06, 8.666000000004392e-06, 8.652999999997357e-06, 8.611000000005586e-06, 8.652999999997357e-06, 8.681000000010375e-06, 8.666999999989988e-06, 8.652999999997357e-06, 8.666000000004392e-06, 8.722000000002672e-06, 8.639000000004726e-06, 8.639000000004726e-06, 8.651999999997884e-06, 8.667000000003866e-06, 8.666999999989988e-06, 8.652999999997357e-06, 8.667000000003866e-06, 8.722000000002672e-06, 8.639000000004726e-06, 8.653000000011235e-06, 8.652999999997357e-06, 8.665999999990515e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.666999999989988e-06, 8.624999999998217e-06, 8.639000000004726e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.694000000003532e-06, 8.666000000004392e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.666000000004392e-06, 8.667000000003866e-06, 8.665999999990515e-06, 8.638999999990848e-06, 8.653000000011235e-06, 8.680999999996497e-06, 8.651999999997884e-06, 8.624999999998217e-06, 8.639000000004726e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.679999999997023e-06, 8.652999999997357e-06, 8.582999999992569e-06, 8.638999999990848e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201110 08:36:20.994" endtime="20201110 08:36:20.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.989" endtime="20201110 08:36:20.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:20.998" endtime="20201110 08:36:21.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.003" endtime="20201110 08:36:21.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.001" endtime="20201110 08:36:21.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.997" endtime="20201110 08:36:21.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.640" endtime="20201110 08:36:21.023"></status>
</kw>
<msg timestamp="20201110 08:36:21.024" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.031" endtime="20201110 08:36:21.042"></status>
</kw>
<msg timestamp="20201110 08:36:21.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.030" endtime="20201110 08:36:21.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.043" endtime="20201110 08:36:21.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.046" endtime="20201110 08:36:21.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.027" endtime="20201110 08:36:21.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.025" endtime="20201110 08:36:21.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.055" endtime="20201110 08:36:21.341"></status>
</kw>
<msg timestamp="20201110 08:36:21.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.053" endtime="20201110 08:36:21.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019385389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.346" endtime="20201110 08:36:21.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.354" endtime="20201110 08:36:21.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.051" endtime="20201110 08:36:21.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.049" endtime="20201110 08:36:21.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.360" level="INFO">${RESULT} = [{'time': 0.019385389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019420292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:21.357" endtime="20201110 08:36:21.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:21.374" level="INFO">${OVERHEAD} = {'source_diff': [9.695000000000537e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.665999999997454e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:21.362" endtime="20201110 08:36:21.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:21.377" endtime="20201110 08:36:21.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.381" level="INFO">VALUE: [9.695000000000537e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.665999999997454e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.638000000001783e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.652000000001353e-06, 8.611999999998121e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.694000000000063e-06, 8.652999999997357e-06, 8.638000000001783e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.610999999998648e-06, 8.597000000002547e-06, 8.625000000001687e-06, 8.638000000001783e-06, 8.638999999997787e-06, 8.597999999998551e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.721999999999203e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.652000000001353e-06, 8.582999999999508e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:36:21.379" endtime="20201110 08:36:21.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.375" endtime="20201110 08:36:21.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.384" endtime="20201110 08:36:21.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.388" endtime="20201110 08:36:21.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.386" endtime="20201110 08:36:21.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.382" endtime="20201110 08:36:21.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.024" endtime="20201110 08:36:21.409"></status>
</kw>
<msg timestamp="20201110 08:36:21.409" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.416" endtime="20201110 08:36:21.427"></status>
</kw>
<msg timestamp="20201110 08:36:21.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.415" endtime="20201110 08:36:21.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.429" endtime="20201110 08:36:21.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.431" endtime="20201110 08:36:21.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.412" endtime="20201110 08:36:21.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.411" endtime="20201110 08:36:21.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.440" endtime="20201110 08:36:21.725"></status>
</kw>
<msg timestamp="20201110 08:36:21.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019258694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:21.438" endtime="20201110 08:36:21.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019249, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019258694, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:21.730" endtime="20201110 08:36:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.738" endtime="20201110 08:36:21.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.436" endtime="20201110 08:36:21.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.434" endtime="20201110 08:36:21.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:21.745" level="INFO">${RESULT} = [{'time': 0.019258694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.694000000001063e-06, 'source_diff': 9.694000000001063e-06}, {'time': 0.019297625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:21.742" endtime="20201110 08:36:21.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:21.758" level="INFO">${OVERHEAD} = {'source_diff': [9.694000000001063e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:21.746" endtime="20201110 08:36:21.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.763" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:21.762" endtime="20201110 08:36:21.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.765" level="INFO">VALUE: [9.694000000001063e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.596999999999078e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.638999999997787e-06, 8.597000000002547e-06, 8.639000000001257e-06, 8.637999999998314e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.583999999998981e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.694000000000063e-06, 8.639000000001257e-06, 8.639000000001257e-06]</msg>
<status status="PASS" starttime="20201110 08:36:21.764" endtime="20201110 08:36:21.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.759" endtime="20201110 08:36:21.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.768" endtime="20201110 08:36:21.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:21.772" endtime="20201110 08:36:21.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.770" endtime="20201110 08:36:21.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.767" endtime="20201110 08:36:21.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.409" endtime="20201110 08:36:21.793"></status>
</kw>
<msg timestamp="20201110 08:36:21.793" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.801" endtime="20201110 08:36:21.812"></status>
</kw>
<msg timestamp="20201110 08:36:21.812" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.799" endtime="20201110 08:36:21.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:21.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:21.813" endtime="20201110 08:36:21.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.816" endtime="20201110 08:36:21.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.797" endtime="20201110 08:36:21.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.795" endtime="20201110 08:36:21.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:21.824" endtime="20201110 08:36:22.110"></status>
</kw>
<msg timestamp="20201110 08:36:22.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:21.823" endtime="20201110 08:36:22.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019322319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.115" endtime="20201110 08:36:22.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.125" endtime="20201110 08:36:22.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.820" endtime="20201110 08:36:22.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.819" endtime="20201110 08:36:22.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.131" level="INFO">${RESULT} = [{'time': 0.019322319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.625000000002687e-06, 'source_diff': 9.625000000002687e-06}, {'time': 0.019342611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.128" endtime="20201110 08:36:22.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:22.146" level="INFO">${OVERHEAD} = {'source_diff': [9.625000000002687e-06, 8.582999999999508e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.680999999999967e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:22.132" endtime="20201110 08:36:22.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.150" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:22.149" endtime="20201110 08:36:22.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.152" level="INFO">VALUE: [9.625000000002687e-06, 8.582999999999508e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.624999999998217e-06, 8.679999999997023e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.680999999999967e-06, 8.582999999999508e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.583000000002977e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.708000000003102e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.639000000001257e-06]</msg>
<status status="PASS" starttime="20201110 08:36:22.151" endtime="20201110 08:36:22.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.146" endtime="20201110 08:36:22.153"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.155" endtime="20201110 08:36:22.157"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.159" endtime="20201110 08:36:22.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.157" endtime="20201110 08:36:22.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.154" endtime="20201110 08:36:22.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:21.794" endtime="20201110 08:36:22.180"></status>
</kw>
<msg timestamp="20201110 08:36:22.180" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.188" endtime="20201110 08:36:22.199"></status>
</kw>
<msg timestamp="20201110 08:36:22.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.186" endtime="20201110 08:36:22.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.202" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.200" endtime="20201110 08:36:22.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.203" endtime="20201110 08:36:22.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.184" endtime="20201110 08:36:22.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.182" endtime="20201110 08:36:22.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.211" endtime="20201110 08:36:22.497"></status>
</kw>
<msg timestamp="20201110 08:36:22.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.210" endtime="20201110 08:36:22.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019243208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019252861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.502" endtime="20201110 08:36:22.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.510" endtime="20201110 08:36:22.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.207" endtime="20201110 08:36:22.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.206" endtime="20201110 08:36:22.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.517" level="INFO">${RESULT} = [{'time': 0.019252861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019279694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.513" endtime="20201110 08:36:22.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:22.531" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.637999999998314e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.653000000000827e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:22.518" endtime="20201110 08:36:22.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.535" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:22.534" endtime="20201110 08:36:22.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.538" level="INFO">VALUE: [9.652999999998357e-06, 8.637999999998314e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.637999999998314e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.651999999997884e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.596999999999078e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.652999999997357e-06, 8.596999999999078e-06, 8.611000000002117e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:36:22.536" endtime="20201110 08:36:22.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.532" endtime="20201110 08:36:22.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.541" endtime="20201110 08:36:22.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.545" endtime="20201110 08:36:22.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.543" endtime="20201110 08:36:22.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.539" endtime="20201110 08:36:22.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.181" endtime="20201110 08:36:22.566"></status>
</kw>
<msg timestamp="20201110 08:36:22.566" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.573" endtime="20201110 08:36:22.584"></status>
</kw>
<msg timestamp="20201110 08:36:22.585" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.572" endtime="20201110 08:36:22.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.587" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.586" endtime="20201110 08:36:22.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.588" endtime="20201110 08:36:22.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.569" endtime="20201110 08:36:22.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.568" endtime="20201110 08:36:22.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.598" endtime="20201110 08:36:22.884"></status>
</kw>
<msg timestamp="20201110 08:36:22.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019255681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.596" endtime="20201110 08:36:22.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019255681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019265333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:22.888" endtime="20201110 08:36:22.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.896" endtime="20201110 08:36:22.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.593" endtime="20201110 08:36:22.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.591" endtime="20201110 08:36:22.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:22.902" level="INFO">${RESULT} = [{'time': 0.019265333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.019301181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:22.899" endtime="20201110 08:36:22.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:22.916" level="INFO">${OVERHEAD} = {'source_diff': [9.651999999998884e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:22.903" endtime="20201110 08:36:22.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.920" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:22.919" endtime="20201110 08:36:22.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.923" level="INFO">VALUE: [9.651999999998884e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.610999999998648e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.652000000001353e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:36:22.921" endtime="20201110 08:36:22.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.917" endtime="20201110 08:36:22.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.926" endtime="20201110 08:36:22.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:22.930" endtime="20201110 08:36:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.928" endtime="20201110 08:36:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.924" endtime="20201110 08:36:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.566" endtime="20201110 08:36:22.951"></status>
</kw>
<msg timestamp="20201110 08:36:22.951" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.958" endtime="20201110 08:36:22.969"></status>
</kw>
<msg timestamp="20201110 08:36:22.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.957" endtime="20201110 08:36:22.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:22.972" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:22.971" endtime="20201110 08:36:22.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.973" endtime="20201110 08:36:22.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.954" endtime="20201110 08:36:22.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.953" endtime="20201110 08:36:22.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:22.982" endtime="20201110 08:36:23.269"></status>
</kw>
<msg timestamp="20201110 08:36:23.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019365083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:22.981" endtime="20201110 08:36:23.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019365083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01937475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:23.273" endtime="20201110 08:36:23.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.282" endtime="20201110 08:36:23.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.978" endtime="20201110 08:36:23.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.977" endtime="20201110 08:36:23.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.288" level="INFO">${RESULT} = [{'time': 0.01937475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.019395361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:23.285" endtime="20201110 08:36:23.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:23.302" level="INFO">${OVERHEAD} = {'source_diff': [9.666999999997927e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:23.289" endtime="20201110 08:36:23.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.306" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:23.305" endtime="20201110 08:36:23.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.308" level="INFO">VALUE: [9.666999999997927e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.639000000001257e-06, 8.735999999998773e-06, 8.639000000001257e-06, 8.722999999998676e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.596999999999078e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.651999999997884e-06, 8.707999999999633e-06, 8.638999999997787e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.722999999998676e-06, 8.680000000000493e-06, 8.651999999997884e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.596999999999078e-06, 8.652000000001353e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.735999999998773e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:36:23.307" endtime="20201110 08:36:23.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.302" endtime="20201110 08:36:23.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.311" endtime="20201110 08:36:23.313"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.315" endtime="20201110 08:36:23.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.313" endtime="20201110 08:36:23.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.310" endtime="20201110 08:36:23.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:22.951" endtime="20201110 08:36:23.336"></status>
</kw>
<msg timestamp="20201110 08:36:23.336" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.344" endtime="20201110 08:36:23.355"></status>
</kw>
<msg timestamp="20201110 08:36:23.355" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.342" endtime="20201110 08:36:23.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.358" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.356" endtime="20201110 08:36:23.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.359" endtime="20201110 08:36:23.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.340" endtime="20201110 08:36:23.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.338" endtime="20201110 08:36:23.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.368" endtime="20201110 08:36:23.653"></status>
</kw>
<msg timestamp="20201110 08:36:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.367" endtime="20201110 08:36:23.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019171708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019181375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.657" endtime="20201110 08:36:23.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.665" endtime="20201110 08:36:23.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.364" endtime="20201110 08:36:23.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.362" endtime="20201110 08:36:23.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:23.672" level="INFO">${RESULT} = [{'time': 0.019181375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.667000000001397e-06, 'source_diff': 9.667000000001397e-06}, {'time': 0.019202903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:23.669" endtime="20201110 08:36:23.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:23.685" level="INFO">${OVERHEAD} = {'source_diff': [9.667000000001397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.653000000000827e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:23.673" endtime="20201110 08:36:23.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.689" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:23.688" endtime="20201110 08:36:23.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.692" level="INFO">VALUE: [9.667000000001397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.722000000002672e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.639000000001257e-06, 8.723000000002146e-06, 8.694000000000063e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.666000000000923e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.611000000002117e-06, 8.625000000001687e-06, 8.639000000001257e-06, 8.680000000000493e-06, 8.652000000001353e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.638000000001783e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:36:23.690" endtime="20201110 08:36:23.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.686" endtime="20201110 08:36:23.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.695" endtime="20201110 08:36:23.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:23.699" endtime="20201110 08:36:23.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.697" endtime="20201110 08:36:23.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.693" endtime="20201110 08:36:23.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.337" endtime="20201110 08:36:23.720"></status>
</kw>
<msg timestamp="20201110 08:36:23.720" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.728" endtime="20201110 08:36:23.739"></status>
</kw>
<msg timestamp="20201110 08:36:23.739" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.726" endtime="20201110 08:36:23.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:23.742" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:23.740" endtime="20201110 08:36:23.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.743" endtime="20201110 08:36:23.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.723" endtime="20201110 08:36:23.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.722" endtime="20201110 08:36:23.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:23.752" endtime="20201110 08:36:24.039"></status>
</kw>
<msg timestamp="20201110 08:36:24.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:23.750" endtime="20201110 08:36:24.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019735736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.050" endtime="20201110 08:36:24.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.064" endtime="20201110 08:36:24.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.748" endtime="20201110 08:36:24.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.746" endtime="20201110 08:36:24.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.071" level="INFO">${RESULT} = [{'time': 0.019745375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.019771, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:36:24.067" endtime="20201110 08:36:24.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:24.088" level="INFO">${OVERHEAD} = {'source_diff': [9.638999999998787e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.708999999999106e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:24.072" endtime="20201110 08:36:24.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.093" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:24.092" endtime="20201110 08:36:24.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.096" level="INFO">VALUE: [9.638999999998787e-06, 8.694000000000063e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.680000000000493e-06, 8.680000000000493e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.638000000001783e-06, 8.596999999999078e-06, 8.707999999999633e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.624999999998217e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.624999999998217e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.638999999997787e-06, 8.722999999998676e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.597000000002547e-06, 8.651999999997884e-06, 8.666999999996927e-06]</msg>
<status status="PASS" starttime="20201110 08:36:24.094" endtime="20201110 08:36:24.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.089" endtime="20201110 08:36:24.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.099" endtime="20201110 08:36:24.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.103" endtime="20201110 08:36:24.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.101" endtime="20201110 08:36:24.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.098" endtime="20201110 08:36:24.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:23.720" endtime="20201110 08:36:24.124"></status>
</kw>
<msg timestamp="20201110 08:36:24.124" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.133" endtime="20201110 08:36:24.143"></status>
</kw>
<msg timestamp="20201110 08:36:24.144" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.131" endtime="20201110 08:36:24.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.145" endtime="20201110 08:36:24.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.147" endtime="20201110 08:36:24.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.129" endtime="20201110 08:36:24.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.126" endtime="20201110 08:36:24.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.156" endtime="20201110 08:36:24.442"></status>
</kw>
<msg timestamp="20201110 08:36:24.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019926667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.155" endtime="20201110 08:36:24.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019926667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019936333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.447" endtime="20201110 08:36:24.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.456" endtime="20201110 08:36:24.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.152" endtime="20201110 08:36:24.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.150" endtime="20201110 08:36:24.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.463" level="INFO">${RESULT} = [{'time': 0.019936333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666000000001923e-06, 'source_diff': 9.666000000001923e-06}, {'time': 0.019958819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:24.460" endtime="20201110 08:36:24.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:24.477" level="INFO">${OVERHEAD} = {'source_diff': [9.666000000001923e-06, 8.651999999997884e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.653000000000827e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:24.464" endtime="20201110 08:36:24.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.481" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:24.480" endtime="20201110 08:36:24.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.483" level="INFO">VALUE: [9.666000000001923e-06, 8.651999999997884e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.679999999997023e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.583999999998981e-06, 8.652999999997357e-06, 8.707999999999633e-06, 8.569999999999411e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.694999999999536e-06, 8.651999999997884e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.610999999998648e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:36:24.482" endtime="20201110 08:36:24.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.478" endtime="20201110 08:36:24.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.487" endtime="20201110 08:36:24.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.491" endtime="20201110 08:36:24.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.488" endtime="20201110 08:36:24.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.485" endtime="20201110 08:36:24.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.125" endtime="20201110 08:36:24.512"></status>
</kw>
<msg timestamp="20201110 08:36:24.512" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.520" endtime="20201110 08:36:24.530"></status>
</kw>
<msg timestamp="20201110 08:36:24.531" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.518" endtime="20201110 08:36:24.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.532" endtime="20201110 08:36:24.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.534" endtime="20201110 08:36:24.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.516" endtime="20201110 08:36:24.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.514" endtime="20201110 08:36:24.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.543" endtime="20201110 08:36:24.830"></status>
</kw>
<msg timestamp="20201110 08:36:24.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019252153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.542" endtime="20201110 08:36:24.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019252153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.834" endtime="20201110 08:36:24.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.842" endtime="20201110 08:36:24.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.539" endtime="20201110 08:36:24.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.537" endtime="20201110 08:36:24.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:24.849" level="INFO">${RESULT} = [{'time': 0.019261806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019288639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:24.845" endtime="20201110 08:36:24.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:24.862" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.596999999999078e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.652999999997357e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:24.850" endtime="20201110 08:36:24.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.866" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:24.865" endtime="20201110 08:36:24.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.869" level="INFO">VALUE: [9.652999999998357e-06, 8.653000000000827e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.596999999999078e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.652999999997357e-06, 8.624999999998217e-06, 8.652000000001353e-06, 8.721999999999203e-06, 8.680999999999967e-06, 8.652999999997357e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.708999999999106e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.737000000001716e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.722000000002672e-06, 8.694999999999536e-06, 8.624999999998217e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.625000000001687e-06, 8.722999999998676e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.750000000001812e-06, 8.708999999999106e-06, 8.638999999997787e-06, 8.639000000001257e-06, 8.680999999999967e-06, 8.666000000000923e-06]</msg>
<status status="PASS" starttime="20201110 08:36:24.867" endtime="20201110 08:36:24.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.863" endtime="20201110 08:36:24.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.872" endtime="20201110 08:36:24.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:24.877" endtime="20201110 08:36:24.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.874" endtime="20201110 08:36:24.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.871" endtime="20201110 08:36:24.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.513" endtime="20201110 08:36:24.897"></status>
</kw>
<msg timestamp="20201110 08:36:24.898" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.905" endtime="20201110 08:36:24.916"></status>
</kw>
<msg timestamp="20201110 08:36:24.917" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.904" endtime="20201110 08:36:24.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:24.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:24.918" endtime="20201110 08:36:24.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.920" endtime="20201110 08:36:24.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.901" endtime="20201110 08:36:24.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.900" endtime="20201110 08:36:24.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:24.929" endtime="20201110 08:36:25.217"></status>
</kw>
<msg timestamp="20201110 08:36:25.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:24.928" endtime="20201110 08:36:25.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019635458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019645111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.221" endtime="20201110 08:36:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.229" endtime="20201110 08:36:25.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.925" endtime="20201110 08:36:25.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.923" endtime="20201110 08:36:25.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:25.236" level="INFO">${RESULT} = [{'time': 0.019645111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019679417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:25.232" endtime="20201110 08:36:25.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:25.249" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.666999999996927e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.653000000000827e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:25.237" endtime="20201110 08:36:25.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.253" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:25.252" endtime="20201110 08:36:25.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.256" level="INFO">VALUE: [9.652999999998357e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.666999999996927e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.721999999999203e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.652000000001353e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.707999999999633e-06, 8.639000000001257e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.680000000000493e-06, 8.582999999999508e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.652999999997357e-06, 8.735999999998773e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201110 08:36:25.254" endtime="20201110 08:36:25.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.250" endtime="20201110 08:36:25.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.259" endtime="20201110 08:36:25.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:25.263" endtime="20201110 08:36:25.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.261" endtime="20201110 08:36:25.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.257" endtime="20201110 08:36:25.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:24.898" endtime="20201110 08:36:25.284"></status>
</kw>
<msg timestamp="20201110 08:36:25.284" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.292" endtime="20201110 08:36:25.303"></status>
</kw>
<msg timestamp="20201110 08:36:25.303" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.290" endtime="20201110 08:36:25.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.306" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.304" endtime="20201110 08:36:25.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.307" endtime="20201110 08:36:25.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.288" endtime="20201110 08:36:25.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.286" endtime="20201110 08:36:25.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.316" endtime="20201110 08:36:25.601"></status>
</kw>
<msg timestamp="20201110 08:36:25.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019241486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.314" endtime="20201110 08:36:25.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019231833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019241486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.605" endtime="20201110 08:36:25.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.613" endtime="20201110 08:36:25.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.311" endtime="20201110 08:36:25.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.310" endtime="20201110 08:36:25.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:25.619" level="INFO">${RESULT} = [{'time': 0.019241486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019264583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:25.616" endtime="20201110 08:36:25.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:25.634" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:25.620" endtime="20201110 08:36:25.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.638" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:25.637" endtime="20201110 08:36:25.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.640" level="INFO">VALUE: [9.652999999998357e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.652999999997357e-06, 8.651999999997884e-06, 8.694000000000063e-06, 8.694999999999536e-06, 8.666000000000923e-06, 8.610999999998648e-06, 8.582999999999508e-06, 8.653000000000827e-06, 8.597000000002547e-06, 8.709000000002576e-06, 8.721999999999203e-06, 8.611000000002117e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.625000000001687e-06, 8.736999999998246e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.651999999997884e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.665999999997454e-06, 8.680999999999967e-06, 8.610999999998648e-06]</msg>
<status status="PASS" starttime="20201110 08:36:25.639" endtime="20201110 08:36:25.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.635" endtime="20201110 08:36:25.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.644" endtime="20201110 08:36:25.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:25.648" endtime="20201110 08:36:25.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.646" endtime="20201110 08:36:25.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.642" endtime="20201110 08:36:25.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.285" endtime="20201110 08:36:25.669"></status>
</kw>
<msg timestamp="20201110 08:36:25.669" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.677" endtime="20201110 08:36:25.688"></status>
</kw>
<msg timestamp="20201110 08:36:25.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.675" endtime="20201110 08:36:25.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.691" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:25.689" endtime="20201110 08:36:25.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.692" endtime="20201110 08:36:25.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.673" endtime="20201110 08:36:25.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.671" endtime="20201110 08:36:25.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:25.701" endtime="20201110 08:36:25.988"></status>
</kw>
<msg timestamp="20201110 08:36:25.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019291292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.699" endtime="20201110 08:36:25.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:25.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019281625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019291292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:25.992" endtime="20201110 08:36:25.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.000" endtime="20201110 08:36:26.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.697" endtime="20201110 08:36:26.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.695" endtime="20201110 08:36:26.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.006" level="INFO">${RESULT} = [{'time': 0.019291292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.667000000001397e-06, 'source_diff': 9.667000000001397e-06}, {'time': 0.019311667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:26.003" endtime="20201110 08:36:26.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.020" level="INFO">${OVERHEAD} = {'source_diff': [9.667000000001397e-06, 8.750000000001812e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.653000000000827e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:26.007" endtime="20201110 08:36:26.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.024" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:26.023" endtime="20201110 08:36:26.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.026" level="INFO">VALUE: [9.667000000001397e-06, 8.750000000001812e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.625000000001687e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.680999999999967e-06, 8.611000000002117e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.680999999999967e-06, 8.638999999997787e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.568999999999938e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.651999999997884e-06, 8.666000000000923e-06, 8.652000000001353e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.680999999999967e-06]</msg>
<status status="PASS" starttime="20201110 08:36:26.025" endtime="20201110 08:36:26.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.021" endtime="20201110 08:36:26.028"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.030" endtime="20201110 08:36:26.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.034" endtime="20201110 08:36:26.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.032" endtime="20201110 08:36:26.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.028" endtime="20201110 08:36:26.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:25.670" endtime="20201110 08:36:26.055"></status>
</kw>
<msg timestamp="20201110 08:36:26.055" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.063" endtime="20201110 08:36:26.073"></status>
</kw>
<msg timestamp="20201110 08:36:26.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.061" endtime="20201110 08:36:26.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.076" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.075" endtime="20201110 08:36:26.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.077" endtime="20201110 08:36:26.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.059" endtime="20201110 08:36:26.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.057" endtime="20201110 08:36:26.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.086" endtime="20201110 08:36:26.372"></status>
</kw>
<msg timestamp="20201110 08:36:26.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.085" endtime="20201110 08:36:26.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019288542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019298167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.376" endtime="20201110 08:36:26.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.384" endtime="20201110 08:36:26.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.082" endtime="20201110 08:36:26.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.080" endtime="20201110 08:36:26.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.391" level="INFO">${RESULT} = [{'time': 0.019298167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.625000000002687e-06, 'source_diff': 9.625000000002687e-06}, {'time': 0.019332806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:26.388" endtime="20201110 08:36:26.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.404" level="INFO">${OVERHEAD} = {'source_diff': [9.625000000002687e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:26.392" endtime="20201110 08:36:26.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.409" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:26.408" endtime="20201110 08:36:26.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.411" level="INFO">VALUE: [9.625000000002687e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.611000000002117e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.610999999998648e-06, 8.611000000002117e-06, 8.653000000000827e-06, 8.651999999997884e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.652000000001353e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.637999999998314e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.652000000001353e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.651999999997884e-06, 8.652000000001353e-06, 8.666999999996927e-06, 8.653000000000827e-06, 8.610999999998648e-06, 8.653000000000827e-06]</msg>
<status status="PASS" starttime="20201110 08:36:26.410" endtime="20201110 08:36:26.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.405" endtime="20201110 08:36:26.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.414" endtime="20201110 08:36:26.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.419" endtime="20201110 08:36:26.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.416" endtime="20201110 08:36:26.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.413" endtime="20201110 08:36:26.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.056" endtime="20201110 08:36:26.439"></status>
</kw>
<msg timestamp="20201110 08:36:26.440" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.447" endtime="20201110 08:36:26.458"></status>
</kw>
<msg timestamp="20201110 08:36:26.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.446" endtime="20201110 08:36:26.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.461" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.459" endtime="20201110 08:36:26.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.462" endtime="20201110 08:36:26.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.443" endtime="20201110 08:36:26.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.441" endtime="20201110 08:36:26.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.471" endtime="20201110 08:36:26.756"></status>
</kw>
<msg timestamp="20201110 08:36:26.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019244375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019254028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.469" endtime="20201110 08:36:26.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019244375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019254028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.760" endtime="20201110 08:36:26.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.768" endtime="20201110 08:36:26.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.467" endtime="20201110 08:36:26.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.465" endtime="20201110 08:36:26.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:26.774" level="INFO">${RESULT} = [{'time': 0.019254028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.019282111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:26.771" endtime="20201110 08:36:26.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:26.788" level="INFO">${OVERHEAD} = {'source_diff': [9.652999999998357e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:26.775" endtime="20201110 08:36:26.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.792" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:26.791" endtime="20201110 08:36:26.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.796" level="INFO">VALUE: [9.652999999998357e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.723000000002146e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.721999999999203e-06, 8.582999999999508e-06, 8.625000000001687e-06, 8.653000000000827e-06, 8.665999999997454e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.596999999999078e-06, 8.679999999997023e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.638000000001783e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.694999999999536e-06, 8.680000000000493e-06, 8.597999999998551e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.707999999999633e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.638000000001783e-06, 8.667000000000397e-06, 8.639000000001257e-06]</msg>
<status status="PASS" starttime="20201110 08:36:26.794" endtime="20201110 08:36:26.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.788" endtime="20201110 08:36:26.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.800" endtime="20201110 08:36:26.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:26.804" endtime="20201110 08:36:26.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.802" endtime="20201110 08:36:26.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.798" endtime="20201110 08:36:26.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.440" endtime="20201110 08:36:26.827"></status>
</kw>
<msg timestamp="20201110 08:36:26.827" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.838" endtime="20201110 08:36:26.848"></status>
</kw>
<msg timestamp="20201110 08:36:26.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.836" endtime="20201110 08:36:26.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:26.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:26.850" endtime="20201110 08:36:26.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.852" endtime="20201110 08:36:26.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.833" endtime="20201110 08:36:26.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.830" endtime="20201110 08:36:26.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:26.861" endtime="20201110 08:36:27.147"></status>
</kw>
<msg timestamp="20201110 08:36:27.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:26.860" endtime="20201110 08:36:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024120056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024129708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.151" endtime="20201110 08:36:27.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.160" endtime="20201110 08:36:27.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.857" endtime="20201110 08:36:27.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.855" endtime="20201110 08:36:27.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:27.166" level="INFO">${RESULT} = [{'time': 0.024129708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.024152806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:27.163" endtime="20201110 08:36:27.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:27.180" level="INFO">${OVERHEAD} = {'source_diff': [9.651999999998884e-06, 8.597999999998551e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.638999999997787e-06, 8.721999999999203e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:27.167" endtime="20201110 08:36:27.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.185" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:27.184" endtime="20201110 08:36:27.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.187" level="INFO">VALUE: [9.651999999998884e-06, 8.597999999998551e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.638999999997787e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.708999999999106e-06, 8.666000000000923e-06, 8.665999999997454e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.707999999999633e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.707999999999633e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.582999999999508e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.568999999999938e-06, 8.653000000000827e-06, 8.596999999999078e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.666999999996927e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.637999999998314e-06, 8.666000000000923e-06, 8.639000000001257e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.721999999999203e-06, 8.666999999996927e-06]</msg>
<status status="PASS" starttime="20201110 08:36:27.186" endtime="20201110 08:36:27.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.181" endtime="20201110 08:36:27.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.191" endtime="20201110 08:36:27.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.195" endtime="20201110 08:36:27.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.193" endtime="20201110 08:36:27.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.189" endtime="20201110 08:36:27.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:26.828" endtime="20201110 08:36:27.216"></status>
</kw>
<msg timestamp="20201110 08:36:27.216" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.223" endtime="20201110 08:36:27.234"></status>
</kw>
<msg timestamp="20201110 08:36:27.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.222" endtime="20201110 08:36:27.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.236" endtime="20201110 08:36:27.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.238" endtime="20201110 08:36:27.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.219" endtime="20201110 08:36:27.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.218" endtime="20201110 08:36:27.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.247" endtime="20201110 08:36:27.532"></status>
</kw>
<msg timestamp="20201110 08:36:27.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019164444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.245" endtime="20201110 08:36:27.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019164444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019174097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.537" endtime="20201110 08:36:27.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.545" endtime="20201110 08:36:27.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.243" endtime="20201110 08:36:27.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.241" endtime="20201110 08:36:27.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:27.551" level="INFO">${RESULT} = [{'time': 0.019174097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.653000000001827e-06, 'source_diff': 9.653000000001827e-06}, {'time': 0.019201903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:27.548" endtime="20201110 08:36:27.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:27.564" level="INFO">${OVERHEAD} = {'source_diff': [9.653000000001827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.667000000000397e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:27.552" endtime="20201110 08:36:27.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.569" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:27.568" endtime="20201110 08:36:27.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.571" level="INFO">VALUE: [9.653000000001827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.625000000001687e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.680999999999967e-06, 8.667000000000397e-06, 8.722999999998676e-06, 8.666000000000923e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.597000000002547e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.637999999998314e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.625000000001687e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.638999999997787e-06, 8.680000000000493e-06, 8.666999999996927e-06, 8.667000000000397e-06, 8.639000000001257e-06, 8.666000000000923e-06, 8.624999999998217e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.694999999999536e-06, 8.652000000001353e-06, 8.667000000000397e-06]</msg>
<status status="PASS" starttime="20201110 08:36:27.570" endtime="20201110 08:36:27.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.565" endtime="20201110 08:36:27.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.575" endtime="20201110 08:36:27.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.579" endtime="20201110 08:36:27.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.577" endtime="20201110 08:36:27.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.573" endtime="20201110 08:36:27.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.216" endtime="20201110 08:36:27.600"></status>
</kw>
<msg timestamp="20201110 08:36:27.600" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.607" endtime="20201110 08:36:27.618"></status>
</kw>
<msg timestamp="20201110 08:36:27.619" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.606" endtime="20201110 08:36:27.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.621" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.620" endtime="20201110 08:36:27.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.622" endtime="20201110 08:36:27.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.603" endtime="20201110 08:36:27.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.602" endtime="20201110 08:36:27.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.631" endtime="20201110 08:36:27.917"></status>
</kw>
<msg timestamp="20201110 08:36:27.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.629" endtime="20201110 08:36:27.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019259736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:27.921" endtime="20201110 08:36:27.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.932" endtime="20201110 08:36:27.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.627" endtime="20201110 08:36:27.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.625" endtime="20201110 08:36:27.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:27.941" level="INFO">${RESULT} = [{'time': 0.019259736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.019288778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:27.936" endtime="20201110 08:36:27.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:27.955" level="INFO">${OVERHEAD} = {'source_diff': [9.666999999997927e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.637999999998314e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.666000000000923e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:27.942" endtime="20201110 08:36:27.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.959" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:27.958" endtime="20201110 08:36:27.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:27.962" level="INFO">VALUE: [9.666999999997927e-06, 8.694999999999536e-06, 8.653000000000827e-06, 8.637999999998314e-06, 8.680000000000493e-06, 8.639000000001257e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.666000000000923e-06, 8.680999999999967e-06, 8.652000000001353e-06, 8.638999999997787e-06, 8.624999999998217e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.694000000000063e-06, 8.667000000000397e-06, 8.666000000000923e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.680000000000493e-06, 8.653000000000827e-06, 8.652000000001353e-06, 8.680999999999967e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.666000000000923e-06, 8.721999999999203e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.652999999997357e-06, 8.610999999998648e-06, 8.680999999999967e-06, 8.59800000000202e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.652000000001353e-06, 8.665999999997454e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.638999999997787e-06, 8.625000000001687e-06, 8.693999999996593e-06]</msg>
<status status="PASS" starttime="20201110 08:36:27.961" endtime="20201110 08:36:27.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.956" endtime="20201110 08:36:27.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.965" endtime="20201110 08:36:27.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:27.970" endtime="20201110 08:36:27.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.967" endtime="20201110 08:36:27.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.964" endtime="20201110 08:36:27.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.600" endtime="20201110 08:36:27.990"></status>
</kw>
<msg timestamp="20201110 08:36:27.991" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:27.998" endtime="20201110 08:36:28.009"></status>
</kw>
<msg timestamp="20201110 08:36:28.009" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:27.997" endtime="20201110 08:36:28.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.010" endtime="20201110 08:36:28.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.013" endtime="20201110 08:36:28.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.994" endtime="20201110 08:36:28.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.992" endtime="20201110 08:36:28.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.022" endtime="20201110 08:36:28.308"></status>
</kw>
<msg timestamp="20201110 08:36:28.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019328139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.020" endtime="20201110 08:36:28.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019318444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019328139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.312" endtime="20201110 08:36:28.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.320" endtime="20201110 08:36:28.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.018" endtime="20201110 08:36:28.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.016" endtime="20201110 08:36:28.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.327" level="INFO">${RESULT} = [{'time': 0.019328139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.695000000000537e-06, 'source_diff': 9.695000000000537e-06}, {'time': 0.019359611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:28.323" endtime="20201110 08:36:28.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:28.340" level="INFO">${OVERHEAD} = {'source_diff': [9.695000000000537e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.679999999997023e-06,...</msg>
<status status="PASS" starttime="20201110 08:36:28.328" endtime="20201110 08:36:28.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.344" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:36:28.343" endtime="20201110 08:36:28.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.347" level="INFO">VALUE: [9.695000000000537e-06, 8.652999999997357e-06, 8.652999999997357e-06, 8.667000000000397e-06, 8.652999999997357e-06, 8.666000000000923e-06, 8.680000000000493e-06, 8.679999999997023e-06, 8.652999999997357e-06, 8.596999999999078e-06, 8.709000000002576e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.582999999999508e-06, 8.667000000000397e-06, 8.625000000001687e-06, 8.679999999997023e-06, 8.639000000001257e-06, 8.652000000001353e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.638999999997787e-06, 8.653000000000827e-06, 8.652999999997357e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.624999999998217e-06, 8.652000000001353e-06, 8.653000000000827e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.665999999997454e-06, 8.639000000001257e-06, 8.667000000000397e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.680999999999967e-06, 8.653000000000827e-06, 8.653000000000827e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.667000000000397e-06, 8.651999999997884e-06, 8.652999999997357e-06, 8.639000000001257e-06, 8.653000000000827e-06, 8.596999999999078e-06]</msg>
<status status="PASS" starttime="20201110 08:36:28.345" endtime="20201110 08:36:28.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.341" endtime="20201110 08:36:28.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.350" endtime="20201110 08:36:28.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.354" endtime="20201110 08:36:28.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.352" endtime="20201110 08:36:28.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.349" endtime="20201110 08:36:28.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:27.991" endtime="20201110 08:36:28.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:20.639" endtime="20201110 08:36:28.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.379" endtime="20201110 08:36:28.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.378" endtime="20201110 08:36:28.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.376" endtime="20201110 08:36:28.399"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:20.570" endtime="20201110 08:36:28.400" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.406" endtime="20201110 08:36:28.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.405" endtime="20201110 08:36:28.426"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.439" endtime="20201110 08:36:28.451"></status>
</kw>
<msg timestamp="20201110 08:36:28.452" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.437" endtime="20201110 08:36:28.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.454" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.453" endtime="20201110 08:36:28.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.457" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:28.455" endtime="20201110 08:36:28.458"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:28.435" endtime="20201110 08:36:28.458"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:28.433" endtime="20201110 08:36:28.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.431" endtime="20201110 08:36:28.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:28.463" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:28.462" endtime="20201110 08:36:28.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.460" endtime="20201110 08:36:28.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.431" endtime="20201110 08:36:28.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.430" endtime="20201110 08:36:28.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.464" endtime="20201110 08:36:28.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.429" endtime="20201110 08:36:28.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.427" endtime="20201110 08:36:28.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.403" endtime="20201110 08:36:28.467"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.477" endtime="20201110 08:36:28.498"></status>
</kw>
<msg timestamp="20201110 08:36:28.498" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.476" endtime="20201110 08:36:28.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.501" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.499" endtime="20201110 08:36:28.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.502" endtime="20201110 08:36:28.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.473" endtime="20201110 08:36:28.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.469" endtime="20201110 08:36:28.504"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.507" endtime="20201110 08:36:28.508"></status>
</kw>
<msg timestamp="20201110 08:36:28.509" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:28.505" endtime="20201110 08:36:28.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.512" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:28.511" endtime="20201110 08:36:28.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.514" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:28.514" endtime="20201110 08:36:28.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.509" endtime="20201110 08:36:28.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.519" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:28.518" endtime="20201110 08:36:28.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.521" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:28.520" endtime="20201110 08:36:28.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.516" endtime="20201110 08:36:28.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.528" endtime="20201110 08:36:28.814"></status>
</kw>
<msg timestamp="20201110 08:36:28.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064096917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064130722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.527" endtime="20201110 08:36:28.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064096917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064130722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:28.818" endtime="20201110 08:36:28.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.827" endtime="20201110 08:36:28.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.524" endtime="20201110 08:36:28.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.523" endtime="20201110 08:36:28.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:28.834" level="INFO">${RESULT} = [{'time': 0.064130722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3804999999997865e-05, 'source_diff': 3.3804999999997865e-05}, {'time': 0.064198167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:28.830" endtime="20201110 08:36:28.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:28.848" level="INFO">${OVERHEAD} = {'source_diff': [3.3804999999997865e-05, 3.8361000000000645e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.7930999999991055e-05, 3.793100000000493e-05, 3.791599999999895e-05, 3.788799999999981e-...</msg>
<status status="PASS" starttime="20201110 08:36:28.835" endtime="20201110 08:36:28.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.853" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:36:28.852" endtime="20201110 08:36:28.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.856" level="INFO">VALUE: [3.3804999999997865e-05, 3.8361000000000645e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.7930999999991055e-05, 3.793100000000493e-05, 3.791599999999895e-05, 3.788799999999981e-05, 3.792999999999158e-05, 3.7916999999998424e-05, 3.792999999999158e-05, 3.794400000001197e-05, 3.793100000000493e-05, 3.794399999999809e-05, 3.783400000000048e-05, 3.7916999999998424e-05, 3.7916999999998424e-05, 3.7930999999991055e-05, 3.7902999999991915e-05, 3.791599999999895e-05, 3.793100000000493e-05, 3.793000000000546e-05, 3.793100000000493e-05, 3.794399999999809e-05, 3.793000000000546e-05, 3.793100000000493e-05, 3.7930999999991055e-05, 3.797199999999723e-05, 3.793000000000546e-05, 3.7916999999998424e-05, 3.791599999999895e-05, 3.792999999999158e-05, 3.79580000000046e-05, 3.793000000000546e-05, 3.793000000000546e-05, 3.793100000000493e-05, 3.793100000000493e-05, 3.793100000000493e-05, 3.79170000000123e-05, 3.791599999999895e-05, 3.7846999999993636e-05, 3.792999999999158e-05, 3.797200000001111e-05, 3.791599999999895e-05, 3.791599999999895e-05, 3.7916999999998424e-05, 3.791599999999895e-05, 3.795900000000407e-05, 3.794399999999809e-05, 3.7888999999999284e-05]</msg>
<status status="PASS" starttime="20201110 08:36:28.854" endtime="20201110 08:36:28.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.849" endtime="20201110 08:36:28.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.859" endtime="20201110 08:36:28.860"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.862" endtime="20201110 08:36:28.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.861" endtime="20201110 08:36:28.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.857" endtime="20201110 08:36:28.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.468" endtime="20201110 08:36:28.883"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:28.401" endtime="20201110 08:36:28.884" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:28.890" endtime="20201110 08:36:28.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.889" endtime="20201110 08:36:28.910"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.923" endtime="20201110 08:36:28.935"></status>
</kw>
<msg timestamp="20201110 08:36:28.936" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.922" endtime="20201110 08:36:28.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.938" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.937" endtime="20201110 08:36:28.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:28.941" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:28.939" endtime="20201110 08:36:28.941"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:28.919" endtime="20201110 08:36:28.942"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:28.917" endtime="20201110 08:36:28.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.915" endtime="20201110 08:36:28.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:28.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:28.946" endtime="20201110 08:36:28.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.944" endtime="20201110 08:36:28.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.915" endtime="20201110 08:36:28.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.914" endtime="20201110 08:36:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.949" endtime="20201110 08:36:28.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.913" endtime="20201110 08:36:28.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.911" endtime="20201110 08:36:28.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.888" endtime="20201110 08:36:28.952"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:28.961" endtime="20201110 08:36:29.105"></status>
</kw>
<msg timestamp="20201110 08:36:29.106" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:28.959" endtime="20201110 08:36:29.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.108" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.107" endtime="20201110 08:36:29.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.109" endtime="20201110 08:36:29.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.957" endtime="20201110 08:36:29.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.954" endtime="20201110 08:36:29.112"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.114" endtime="20201110 08:36:29.116"></status>
</kw>
<msg timestamp="20201110 08:36:29.116" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:29.113" endtime="20201110 08:36:29.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.120" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:29.119" endtime="20201110 08:36:29.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.122" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:29.121" endtime="20201110 08:36:29.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.117" endtime="20201110 08:36:29.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.127" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:29.126" endtime="20201110 08:36:29.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.129" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:29.128" endtime="20201110 08:36:29.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.123" endtime="20201110 08:36:29.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.136" endtime="20201110 08:36:29.443"></status>
</kw>
<msg timestamp="20201110 08:36:29.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064921542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.134" endtime="20201110 08:36:29.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064921542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:29.447" endtime="20201110 08:36:29.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.455" endtime="20201110 08:36:29.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.132" endtime="20201110 08:36:29.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.130" endtime="20201110 08:36:29.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:29.461" level="INFO">${RESULT} = [{'time': 0.064921542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4735999999999674e-05, 'source_diff': 5.4735999999999674e-05}, {'time': 0.067449083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:29.458" endtime="20201110 08:36:29.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:29.475" level="INFO">${OVERHEAD} = {'source_diff': [5.4735999999999674e-05, 7.82910000000081e-05, 7.829099999999423e-05, 7.82910000000081e-05, 7.83469999999925e-05, 7.82919999999937e-05, 7.82910000000081e-05, 7.827800000000107e-05, 7.8...</msg>
<status status="PASS" starttime="20201110 08:36:29.462" endtime="20201110 08:36:29.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.480" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:36:29.479" endtime="20201110 08:36:29.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.483" level="INFO">VALUE: [5.4735999999999674e-05, 7.82910000000081e-05, 7.829099999999423e-05, 7.82910000000081e-05, 7.83469999999925e-05, 7.82919999999937e-05, 7.82910000000081e-05, 7.827800000000107e-05, 7.831899999999337e-05, 7.833299999999987e-05, 7.827800000000107e-05, 7.829200000000758e-05, 7.832000000000672e-05, 7.829200000000758e-05, 7.82919999999937e-05, 7.82919999999937e-05, 7.826399999999456e-05, 7.829200000000758e-05, 7.830500000000074e-05, 7.830600000000021e-05, 7.82919999999937e-05, 7.82919999999937e-05, 7.827800000000107e-05, 7.826400000000844e-05, 7.827799999998719e-05, 7.830500000000074e-05, 7.827800000001495e-05, 7.834800000000586e-05, 7.827799999998719e-05, 7.829199999997982e-05, 7.822199999998891e-05, 7.829200000000758e-05, 7.827799999998719e-05, 7.827800000001495e-05, 7.829200000000758e-05, 7.829200000000758e-05, 7.827799999998719e-05, 7.829200000000758e-05, 7.82910000000081e-05, 7.826399999999456e-05, 7.825000000000193e-05, 7.829199999997982e-05, 7.830500000000074e-05, 7.827699999998772e-05, 7.829099999998035e-05, 7.830500000000074e-05, 7.830500000000074e-05, 7.829199999997982e-05, 7.829099999998035e-05, 7.830500000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:36:29.482" endtime="20201110 08:36:29.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.477" endtime="20201110 08:36:29.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.486" endtime="20201110 08:36:29.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.489" endtime="20201110 08:36:29.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.488" endtime="20201110 08:36:29.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.484" endtime="20201110 08:36:29.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:28.953" endtime="20201110 08:36:29.510"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:28.885" endtime="20201110 08:36:29.511" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:29.518" endtime="20201110 08:36:29.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.516" endtime="20201110 08:36:29.539"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.556" endtime="20201110 08:36:29.568"></status>
</kw>
<msg timestamp="20201110 08:36:29.568" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.554" endtime="20201110 08:36:29.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.571" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.569" endtime="20201110 08:36:29.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:29.575" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:29.572" endtime="20201110 08:36:29.575"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:29.551" endtime="20201110 08:36:29.576"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:29.549" endtime="20201110 08:36:29.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.547" endtime="20201110 08:36:29.577"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:29.580" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:29.580" endtime="20201110 08:36:29.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.577" endtime="20201110 08:36:29.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.546" endtime="20201110 08:36:29.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.545" endtime="20201110 08:36:29.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.582" endtime="20201110 08:36:29.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.543" endtime="20201110 08:36:29.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.540" endtime="20201110 08:36:29.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.514" endtime="20201110 08:36:29.585"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:29.593" endtime="20201110 08:36:30.017"></status>
</kw>
<msg timestamp="20201110 08:36:30.018" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:29.592" endtime="20201110 08:36:30.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.020" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.019" endtime="20201110 08:36:30.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.021" endtime="20201110 08:36:30.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.589" endtime="20201110 08:36:30.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.587" endtime="20201110 08:36:30.024"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.026" endtime="20201110 08:36:30.028"></status>
</kw>
<msg timestamp="20201110 08:36:30.028" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:30.025" endtime="20201110 08:36:30.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.032" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:30.031" endtime="20201110 08:36:30.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.034" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:30.033" endtime="20201110 08:36:30.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.029" endtime="20201110 08:36:30.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.039" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:30.038" endtime="20201110 08:36:30.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.041" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:30.040" endtime="20201110 08:36:30.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.036" endtime="20201110 08:36:30.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.048" endtime="20201110 08:36:30.362"></status>
</kw>
<msg timestamp="20201110 08:36:30.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072826958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072919056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.046" endtime="20201110 08:36:30.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072826958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072919056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:30.366" endtime="20201110 08:36:30.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.373" endtime="20201110 08:36:30.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.044" endtime="20201110 08:36:30.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.042" endtime="20201110 08:36:30.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:30.380" level="INFO">${RESULT} = [{'time': 0.072919056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.209799999999879e-05, 'source_diff': 9.209799999999879e-05}, {'time': 0.0810075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:30.377" endtime="20201110 08:36:30.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:30.393" level="INFO">${OVERHEAD} = {'source_diff': [9.209799999999879e-05, 0.00013526399999999605, 0.00013526399999999605, 0.00013524999999998955, 0.00013527799999998869, 0.00013526299999999658, 0.00013524999999998955, 0.00013525000000...</msg>
<status status="PASS" starttime="20201110 08:36:30.381" endtime="20201110 08:36:30.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.398" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:36:30.397" endtime="20201110 08:36:30.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.400" level="INFO">VALUE: [9.209799999999879e-05, 0.00013526399999999605, 0.00013526399999999605, 0.00013524999999998955, 0.00013527799999998869, 0.00013526299999999658, 0.00013524999999998955, 0.00013525000000000342, 0.00013524999999997567, 0.00013527800000001644, 0.00013527799999998869, 0.00013526399999999605, 0.00013526399999999605, 0.00013531899999999486, 0.00013527799999998869, 0.0001351939999999774, 0.00013527800000001644, 0.00013525000000000342, 0.00013526399999999605, 0.0001352360000000108, 0.00013533400000001472, 0.00013525000000000342, 0.00013524999999997567, 0.0001352640000000238, 0.00013524999999997567, 0.00013523599999998304, 0.00013526299999999658, 0.0001352639999999683, 0.0001352640000000238, 0.00013529200000000907, 0.0001352769999999892, 0.00013529200000000907, 0.00013523599999998304, 0.00013529200000000907, 0.0001352219999999904, 0.00013524999999997567, 0.0001352639999999683, 0.0001352640000000238, 0.0001352639999999683, 0.0001353060000000017, 0.0001352769999999892, 0.00013526299999999658, 0.00013525000000003118, 0.0001352640000000238, 0.0001353060000000017, 0.00013524999999997567, 0.0001352640000000238, 0.00013524999999997567, 0.00013523600000003855, 0.00013526299999999658]</msg>
<status status="PASS" starttime="20201110 08:36:30.399" endtime="20201110 08:36:30.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.394" endtime="20201110 08:36:30.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.403" endtime="20201110 08:36:30.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.407" endtime="20201110 08:36:30.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.405" endtime="20201110 08:36:30.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.402" endtime="20201110 08:36:30.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:29.586" endtime="20201110 08:36:30.427"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:29.512" endtime="20201110 08:36:30.428" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.434" endtime="20201110 08:36:30.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.433" endtime="20201110 08:36:30.454"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.469" endtime="20201110 08:36:30.482"></status>
</kw>
<msg timestamp="20201110 08:36:30.482" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.466" endtime="20201110 08:36:30.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.485" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.483" endtime="20201110 08:36:30.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.488" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:30.486" endtime="20201110 08:36:30.488"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:30.463" endtime="20201110 08:36:30.489"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:30.461" endtime="20201110 08:36:30.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.460" endtime="20201110 08:36:30.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:30.493" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:30.493" endtime="20201110 08:36:30.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.491" endtime="20201110 08:36:30.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.459" endtime="20201110 08:36:30.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.458" endtime="20201110 08:36:30.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.496" endtime="20201110 08:36:30.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.457" endtime="20201110 08:36:30.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.455" endtime="20201110 08:36:30.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.432" endtime="20201110 08:36:30.498"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.506" endtime="20201110 08:36:30.528"></status>
</kw>
<msg timestamp="20201110 08:36:30.528" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.505" endtime="20201110 08:36:30.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.531" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.529" endtime="20201110 08:36:30.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.532" endtime="20201110 08:36:30.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.502" endtime="20201110 08:36:30.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.500" endtime="20201110 08:36:30.534"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.537" endtime="20201110 08:36:30.538"></status>
</kw>
<msg timestamp="20201110 08:36:30.539" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:30.535" endtime="20201110 08:36:30.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.543" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:30.542" endtime="20201110 08:36:30.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.545" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:30.544" endtime="20201110 08:36:30.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.539" endtime="20201110 08:36:30.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.550" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:30.549" endtime="20201110 08:36:30.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.553" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:30.552" endtime="20201110 08:36:30.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.546" endtime="20201110 08:36:30.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.563" endtime="20201110 08:36:30.851"></status>
</kw>
<msg timestamp="20201110 08:36:30.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064889597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06491275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:30.561" endtime="20201110 08:36:30.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064889597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06491275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:30.857" endtime="20201110 08:36:30.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.868" endtime="20201110 08:36:30.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.558" endtime="20201110 08:36:30.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.555" endtime="20201110 08:36:30.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:30.877" level="INFO">${RESULT} = [{'time': 0.06491275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.315300000001186e-05, 'source_diff': 2.315300000001186e-05}, {'time': 0.064985806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:30.874" endtime="20201110 08:36:30.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:30.891" level="INFO">${OVERHEAD} = {'source_diff': [2.315300000001186e-05, 2.265299999999748e-05, 2.2679999999997147e-05, 2.2666999999990112e-05, 2.2666999999990112e-05, 2.265299999999748e-05, 2.269500000000313e-05, 2.2665999999990638e...</msg>
<status status="PASS" starttime="20201110 08:36:30.878" endtime="20201110 08:36:30.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.895" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:36:30.894" endtime="20201110 08:36:30.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.898" level="INFO">VALUE: [2.315300000001186e-05, 2.265299999999748e-05, 2.2679999999997147e-05, 2.2666999999990112e-05, 2.2666999999990112e-05, 2.265299999999748e-05, 2.269500000000313e-05, 2.2665999999990638e-05, 2.2666000000004516e-05, 2.265300000001136e-05, 2.2736000000009304e-05, 2.2749999999988058e-05, 2.266700000000399e-05, 2.266700000000399e-05, 2.2638000000005376e-05, 2.268099999999662e-05, 2.2679999999997147e-05, 2.268099999999662e-05, 2.265299999999748e-05, 2.272300000000227e-05, 2.2666999999990112e-05, 2.266700000000399e-05, 2.265299999999748e-05, 2.268099999999662e-05, 2.2679999999997147e-05, 2.2680000000011025e-05, 2.2666000000004516e-05, 2.2679999999997147e-05, 2.2721999999988918e-05, 2.266700000000399e-05, 2.2679999999997147e-05, 2.2666000000004516e-05, 2.268099999999662e-05, 2.2665999999990638e-05, 2.266700000000399e-05, 2.268099999999662e-05, 2.269499999998925e-05, 2.266700000000399e-05, 2.2679999999997147e-05, 2.268099999999662e-05, 2.2651999999998007e-05, 2.2694000000003656e-05, 2.2651999999998007e-05, 2.2693999999989778e-05, 2.2666999999990112e-05, 2.268099999999662e-05, 2.2694000000003656e-05, 2.268099999999662e-05, 2.265299999999748e-05, 2.265299999999748e-05]</msg>
<status status="PASS" starttime="20201110 08:36:30.897" endtime="20201110 08:36:30.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.892" endtime="20201110 08:36:30.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.901" endtime="20201110 08:36:30.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.905" endtime="20201110 08:36:30.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.903" endtime="20201110 08:36:30.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.900" endtime="20201110 08:36:30.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.499" endtime="20201110 08:36:30.925"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:30.429" endtime="20201110 08:36:30.926" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:30.933" endtime="20201110 08:36:30.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.931" endtime="20201110 08:36:30.953"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.966" endtime="20201110 08:36:30.979"></status>
</kw>
<msg timestamp="20201110 08:36:30.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.964" endtime="20201110 08:36:30.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.982" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:30.980" endtime="20201110 08:36:30.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:30.985" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:30.983" endtime="20201110 08:36:30.985"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:30.961" endtime="20201110 08:36:30.986"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:30.959" endtime="20201110 08:36:30.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.958" endtime="20201110 08:36:30.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:30.991" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:30.990" endtime="20201110 08:36:30.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.988" endtime="20201110 08:36:30.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.957" endtime="20201110 08:36:30.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.956" endtime="20201110 08:36:30.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:30.993" endtime="20201110 08:36:30.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.955" endtime="20201110 08:36:30.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.953" endtime="20201110 08:36:30.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.930" endtime="20201110 08:36:30.995"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.004" endtime="20201110 08:36:31.150"></status>
</kw>
<msg timestamp="20201110 08:36:31.151" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.002" endtime="20201110 08:36:31.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.153" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.152" endtime="20201110 08:36:31.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.154" endtime="20201110 08:36:31.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.000" endtime="20201110 08:36:31.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.998" endtime="20201110 08:36:31.157"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.159" endtime="20201110 08:36:31.161"></status>
</kw>
<msg timestamp="20201110 08:36:31.161" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:31.158" endtime="20201110 08:36:31.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.165" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:31.164" endtime="20201110 08:36:31.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.167" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:31.166" endtime="20201110 08:36:31.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.162" endtime="20201110 08:36:31.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.172" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:31.171" endtime="20201110 08:36:31.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.175" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:31.174" endtime="20201110 08:36:31.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.169" endtime="20201110 08:36:31.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.186" endtime="20201110 08:36:31.511"></status>
</kw>
<msg timestamp="20201110 08:36:31.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066050264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066106458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.184" endtime="20201110 08:36:31.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066050264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066106458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:31.515" endtime="20201110 08:36:31.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.523" endtime="20201110 08:36:31.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.180" endtime="20201110 08:36:31.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.178" endtime="20201110 08:36:31.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:31.531" level="INFO">${RESULT} = [{'time': 0.066106458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61940000000094e-05, 'source_diff': 5.61940000000094e-05}, {'time': 0.068644806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:31.528" endtime="20201110 08:36:31.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:31.545" level="INFO">${OVERHEAD} = {'source_diff': [5.61940000000094e-05, 5.547300000000033e-05, 5.5485999999993485e-05, 5.5499999999999994e-05, 5.548600000000736e-05, 5.5499999999999994e-05, 5.5527999999999134e-05, 5.5499999999999994e...</msg>
<status status="PASS" starttime="20201110 08:36:31.532" endtime="20201110 08:36:31.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.549" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:36:31.548" endtime="20201110 08:36:31.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.552" level="INFO">VALUE: [5.61940000000094e-05, 5.547300000000033e-05, 5.5485999999993485e-05, 5.5499999999999994e-05, 5.548600000000736e-05, 5.5499999999999994e-05, 5.5527999999999134e-05, 5.5499999999999994e-05, 5.551300000000703e-05, 5.552699999999966e-05, 5.5472000000000854e-05, 5.548600000000736e-05, 5.547300000000033e-05, 5.5444000000001714e-05, 5.5444000000001714e-05, 5.5499999999999994e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.547300000000033e-05, 5.548600000000736e-05, 5.5416000000002574e-05, 5.5459000000007697e-05, 5.5499999999999994e-05, 5.548600000000736e-05, 5.5485999999993485e-05, 5.5499999999986116e-05, 5.5485999999993485e-05, 5.550000000001387e-05, 5.5459000000007697e-05, 5.5472000000000854e-05, 5.5499999999986116e-05, 5.5472000000000854e-05, 5.5541999999991765e-05, 5.548699999999296e-05, 5.550000000001387e-05, 5.5499999999986116e-05, 5.543099999999468e-05, 5.552699999999966e-05, 5.548600000002124e-05, 5.544499999998731e-05, 5.544499999998731e-05, 5.5485999999993485e-05, 5.5499999999986116e-05, 5.5485999999993485e-05, 5.5485999999993485e-05, 5.5485999999993485e-05, 5.548699999999296e-05, 5.5499999999986116e-05, 5.551399999997875e-05, 5.550000000001387e-05]</msg>
<status status="PASS" starttime="20201110 08:36:31.550" endtime="20201110 08:36:31.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.546" endtime="20201110 08:36:31.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.555" endtime="20201110 08:36:31.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.558" endtime="20201110 08:36:31.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.557" endtime="20201110 08:36:31.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.553" endtime="20201110 08:36:31.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:30.996" endtime="20201110 08:36:31.579"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:30.927" endtime="20201110 08:36:31.580" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:31.586" endtime="20201110 08:36:31.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.585" endtime="20201110 08:36:31.607"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.620" endtime="20201110 08:36:31.638"></status>
</kw>
<msg timestamp="20201110 08:36:31.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.618" endtime="20201110 08:36:31.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.644" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.641" endtime="20201110 08:36:31.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:31.651" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:31.646" endtime="20201110 08:36:31.652"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:31.615" endtime="20201110 08:36:31.653"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:31.613" endtime="20201110 08:36:31.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.612" endtime="20201110 08:36:31.655"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:31.663" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:31.661" endtime="20201110 08:36:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.657" endtime="20201110 08:36:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.611" endtime="20201110 08:36:31.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.610" endtime="20201110 08:36:31.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.667" endtime="20201110 08:36:31.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.609" endtime="20201110 08:36:31.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.607" endtime="20201110 08:36:31.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.584" endtime="20201110 08:36:31.672"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:31.690" endtime="20201110 08:36:32.117"></status>
</kw>
<msg timestamp="20201110 08:36:32.118" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:31.687" endtime="20201110 08:36:32.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.120" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:32.119" endtime="20201110 08:36:32.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.121" endtime="20201110 08:36:32.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.681" endtime="20201110 08:36:32.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.677" endtime="20201110 08:36:32.124"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.126" endtime="20201110 08:36:32.129"></status>
</kw>
<msg timestamp="20201110 08:36:32.129" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:36:32.125" endtime="20201110 08:36:32.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.133" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:36:32.132" endtime="20201110 08:36:32.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.135" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:36:32.134" endtime="20201110 08:36:32.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.130" endtime="20201110 08:36:32.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.140" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:36:32.139" endtime="20201110 08:36:32.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.142" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:36:32.141" endtime="20201110 08:36:32.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.137" endtime="20201110 08:36:32.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.150" endtime="20201110 08:36:32.448"></status>
</kw>
<msg timestamp="20201110 08:36:32.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103256597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103334625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.148" endtime="20201110 08:36:32.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.103256597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.103334625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:32.461" endtime="20201110 08:36:32.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.480" endtime="20201110 08:36:32.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.145" endtime="20201110 08:36:32.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.143" endtime="20201110 08:36:32.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:32.495" level="INFO">${RESULT} = [{'time': 0.103334625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.802799999999388e-05, 'source_diff': 7.802799999999388e-05}, {'time': 0.111444611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:32.488" endtime="20201110 08:36:32.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:32.526" level="INFO">${OVERHEAD} = {'source_diff': [7.802799999999388e-05, 7.730499999999974e-05, 7.726399999999356e-05, 7.729200000000658e-05, 7.720899999999475e-05, 7.727799999998619e-05, 7.734700000000538e-05, 7.736100000002577e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:32.497" endtime="20201110 08:36:32.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.537" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:36:32.534" endtime="20201110 08:36:32.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.540" level="INFO">VALUE: [7.802799999999388e-05, 7.730499999999974e-05, 7.726399999999356e-05, 7.729200000000658e-05, 7.720899999999475e-05, 7.727799999998619e-05, 7.734700000000538e-05, 7.736100000002577e-05, 7.731999999999184e-05, 7.734700000000538e-05, 7.727799999998619e-05, 7.72910000000071e-05, 7.731900000002012e-05, 7.726400000002132e-05, 7.72910000000071e-05, 7.720799999999528e-05, 7.726400000002132e-05, 7.727799999998619e-05, 7.727800000001395e-05, 7.729099999997935e-05, 7.727800000001395e-05, 7.727800000001395e-05, 7.731900000002012e-05, 7.729099999997935e-05, 7.729099999997935e-05, 7.730599999999921e-05, 7.727800000001395e-05, 7.729099999997935e-05, 7.725000000002868e-05, 7.730499999997198e-05, 7.734699999994987e-05, 7.726400000002132e-05, 7.729200000000658e-05, 7.727800000001395e-05, 7.725000000002868e-05, 7.726400000002132e-05, 7.729100000003486e-05, 7.727800000001395e-05, 7.730499999997198e-05, 7.729100000003486e-05, 7.730599999999921e-05, 7.726400000002132e-05, 7.729200000000658e-05, 7.729200000000658e-05, 7.729099999997935e-05, 7.729200000000658e-05, 7.729099999997935e-05, 7.723599999998054e-05, 7.729199999995107e-05, 7.727700000004223e-05]</msg>
<status status="PASS" starttime="20201110 08:36:32.538" endtime="20201110 08:36:32.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.529" endtime="20201110 08:36:32.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:32.543" endtime="20201110 08:36:32.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:32.546" endtime="20201110 08:36:32.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.545" endtime="20201110 08:36:32.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.541" endtime="20201110 08:36:32.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:31.673" endtime="20201110 08:36:32.567"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:31.581" endtime="20201110 08:36:32.568" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:10.366" endtime="20201110 08:36:32.575"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:32.643" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:32.652" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:33.884" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:32.642" endtime="20201110 08:36:33.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:33.887" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:33.886" endtime="20201110 08:36:33.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.641" endtime="20201110 08:36:33.888"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:33.890" endtime="20201110 08:36:34.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:33.889" endtime="20201110 08:36:34.076"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.089" endtime="20201110 08:36:34.101"></status>
</kw>
<msg timestamp="20201110 08:36:34.102" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.087" endtime="20201110 08:36:34.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.104" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.103" endtime="20201110 08:36:34.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.108" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:34.105" endtime="20201110 08:36:34.109"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:34.084" endtime="20201110 08:36:34.109"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:34.082" endtime="20201110 08:36:34.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.081" endtime="20201110 08:36:34.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:34.114" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:34.113" endtime="20201110 08:36:34.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.111" endtime="20201110 08:36:34.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.080" endtime="20201110 08:36:34.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.079" endtime="20201110 08:36:34.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.116" endtime="20201110 08:36:34.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.078" endtime="20201110 08:36:34.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.118" endtime="20201110 08:36:34.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.076" endtime="20201110 08:36:34.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:32.640" endtime="20201110 08:36:34.121"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.128" endtime="20201110 08:36:34.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.125" endtime="20201110 08:36:34.148"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.166" endtime="20201110 08:36:34.186"></status>
</kw>
<msg timestamp="20201110 08:36:34.187" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.163" endtime="20201110 08:36:34.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.192" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.189" endtime="20201110 08:36:34.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.199" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:34.194" endtime="20201110 08:36:34.199"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:34.158" endtime="20201110 08:36:34.201"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:34.154" endtime="20201110 08:36:34.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.153" endtime="20201110 08:36:34.203"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:34.211" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:34.209" endtime="20201110 08:36:34.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.204" endtime="20201110 08:36:34.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.152" endtime="20201110 08:36:34.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.152" endtime="20201110 08:36:34.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.215" endtime="20201110 08:36:34.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.150" endtime="20201110 08:36:34.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.149" endtime="20201110 08:36:34.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.124" endtime="20201110 08:36:34.221"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.243" endtime="20201110 08:36:34.260"></status>
</kw>
<msg timestamp="20201110 08:36:34.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.240" endtime="20201110 08:36:34.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.262" endtime="20201110 08:36:34.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.264" endtime="20201110 08:36:34.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.234" endtime="20201110 08:36:34.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.229" endtime="20201110 08:36:34.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.273" endtime="20201110 08:36:34.572"></status>
</kw>
<msg timestamp="20201110 08:36:34.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108451111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108495208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.272" endtime="20201110 08:36:34.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108451111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108495208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.576" endtime="20201110 08:36:34.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.585" endtime="20201110 08:36:34.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.269" endtime="20201110 08:36:34.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.268" endtime="20201110 08:36:34.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.591" level="INFO">${RESULT} = [{'time': 0.108495208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.409699999999295e-05, 'source_diff': 4.409699999999295e-05}, {'time': 0.108589306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:34.588" endtime="20201110 08:36:34.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:34.611" level="INFO">${ACCURACY} = {'source_diff': [4.409699999999295e-05, 4.334799999999861e-05, 4.3361000000005645e-05, 4.3374999999998276e-05, 4.336099999999177e-05, 4.3361000000005645e-05, 4.3346999999999136e-05, 4.3361000000005645...</msg>
<status status="PASS" starttime="20201110 08:36:34.592" endtime="20201110 08:36:34.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.618" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:36:34.615" endtime="20201110 08:36:34.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.622" level="INFO">VALUE: [4.409699999999295e-05, 4.334799999999861e-05, 4.3361000000005645e-05, 4.3374999999998276e-05, 4.336099999999177e-05, 4.3361000000005645e-05, 4.3346999999999136e-05, 4.3361000000005645e-05, 4.3305000000007365e-05, 4.3361000000005645e-05, 4.340200000001182e-05, 4.333400000000598e-05, 4.333299999999263e-05, 4.333400000000598e-05, 4.334799999999861e-05, 4.3375000000012154e-05, 4.3318999999999996e-05, 4.3346999999999136e-05, 4.333299999999263e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.33339999999921e-05, 4.3374999999998276e-05, 4.3361000000005645e-05, 4.334799999999861e-05, 4.3361000000005645e-05, 4.3346999999999136e-05, 4.3361000000005645e-05, 4.3346999999999136e-05, 4.3361000000005645e-05, 4.3346999999999136e-05, 4.3361000000005645e-05, 4.3333000000006505e-05, 4.3346999999999136e-05, 4.331999999999947e-05, 4.336099999999177e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3318999999999996e-05, 4.336099999999177e-05, 4.3346999999999136e-05, 4.333400000000598e-05, 4.333299999999263e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.333299999999263e-05, 4.3346999999999136e-05, 4.3333000000006505e-05]</msg>
<status status="PASS" starttime="20201110 08:36:34.620" endtime="20201110 08:36:34.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.612" endtime="20201110 08:36:34.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.629" endtime="20201110 08:36:34.631"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:34.633" endtime="20201110 08:36:34.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.631" endtime="20201110 08:36:34.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.627" endtime="20201110 08:36:34.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.224" endtime="20201110 08:36:34.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.223" endtime="20201110 08:36:34.654"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.663" endtime="20201110 08:36:34.679"></status>
</kw>
<msg timestamp="20201110 08:36:34.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.662" endtime="20201110 08:36:34.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:34.681" endtime="20201110 08:36:34.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.683" endtime="20201110 08:36:34.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.658" endtime="20201110 08:36:34.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.656" endtime="20201110 08:36:34.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.692" endtime="20201110 08:36:34.979"></status>
</kw>
<msg timestamp="20201110 08:36:34.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.691" endtime="20201110 08:36:34.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:34.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022671833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:34.983" endtime="20201110 08:36:34.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:34.991" endtime="20201110 08:36:34.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.688" endtime="20201110 08:36:34.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.687" endtime="20201110 08:36:34.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:34.998" level="INFO">${RESULT} = [{'time': 0.022671833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.406899999999728e-05, 'source_diff': 4.406899999999728e-05}, {'time': 0.0227645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:34.995" endtime="20201110 08:36:34.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:35.012" level="INFO">${ACCURACY} = {'source_diff': [4.406899999999728e-05, 4.329200000000033e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3360999999998706e...</msg>
<status status="PASS" starttime="20201110 08:36:34.999" endtime="20201110 08:36:35.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.017" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:36:35.016" endtime="20201110 08:36:35.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.019" level="INFO">VALUE: [4.406899999999728e-05, 4.329200000000033e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3332999999999566e-05, 4.3375000000001745e-05, 4.334799999999861e-05, 4.3347000000002606e-05, 4.3361000000002176e-05, 4.326399999999772e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3305000000000426e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3361000000002176e-05, 4.3333000000003036e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.341600000000098e-05, 4.3360999999998706e-05, 4.3332999999999566e-05]</msg>
<status status="PASS" starttime="20201110 08:36:35.018" endtime="20201110 08:36:35.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.013" endtime="20201110 08:36:35.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.023" endtime="20201110 08:36:35.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.026" endtime="20201110 08:36:35.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.025" endtime="20201110 08:36:35.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.021" endtime="20201110 08:36:35.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.655" endtime="20201110 08:36:35.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.654" endtime="20201110 08:36:35.047"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.056" endtime="20201110 08:36:35.073"></status>
</kw>
<msg timestamp="20201110 08:36:35.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.055" endtime="20201110 08:36:35.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.075" endtime="20201110 08:36:35.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.077" endtime="20201110 08:36:35.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.052" endtime="20201110 08:36:35.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.050" endtime="20201110 08:36:35.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.086" endtime="20201110 08:36:35.381"></status>
</kw>
<msg timestamp="20201110 08:36:35.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.085" endtime="20201110 08:36:35.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022640083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022684194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.386" endtime="20201110 08:36:35.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.394" endtime="20201110 08:36:35.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.082" endtime="20201110 08:36:35.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.080" endtime="20201110 08:36:35.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.401" level="INFO">${RESULT} = [{'time': 0.022684194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4111000000002926e-05, 'source_diff': 4.4111000000002926e-05}, {'time': 0.022776042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:35.397" endtime="20201110 08:36:35.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:35.414" level="INFO">${ACCURACY} = {'source_diff': [4.4111000000002926e-05, 4.329200000000033e-05, 4.3431000000000025e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.33609999999987...</msg>
<status status="PASS" starttime="20201110 08:36:35.402" endtime="20201110 08:36:35.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.419" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:36:35.418" endtime="20201110 08:36:35.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.421" level="INFO">VALUE: [4.4111000000002926e-05, 4.329200000000033e-05, 4.3431000000000025e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3333000000003036e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.333399999999904e-05, 4.3318999999999996e-05, 4.338799999999837e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.329200000000033e-05, 4.3374999999998276e-05, 4.334799999999861e-05, 4.3375000000001745e-05, 4.3403000000000885e-05, 4.3375000000001745e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.336200000000165e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3347000000002606e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.3318999999999996e-05, 4.336199999999818e-05, 4.3374999999998276e-05, 4.3389000000001315e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.331999999999947e-05, 4.3346999999999136e-05]</msg>
<status status="PASS" starttime="20201110 08:36:35.420" endtime="20201110 08:36:35.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.415" endtime="20201110 08:36:35.423"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.425" endtime="20201110 08:36:35.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.429" endtime="20201110 08:36:35.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.427" endtime="20201110 08:36:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.423" endtime="20201110 08:36:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.048" endtime="20201110 08:36:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.048" endtime="20201110 08:36:35.449"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.458" endtime="20201110 08:36:35.474"></status>
</kw>
<msg timestamp="20201110 08:36:35.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.457" endtime="20201110 08:36:35.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.476" endtime="20201110 08:36:35.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.478" endtime="20201110 08:36:35.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.454" endtime="20201110 08:36:35.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.452" endtime="20201110 08:36:35.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.489" endtime="20201110 08:36:35.776"></status>
</kw>
<msg timestamp="20201110 08:36:35.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.488" endtime="20201110 08:36:35.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021757819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.780" endtime="20201110 08:36:35.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.788" endtime="20201110 08:36:35.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.485" endtime="20201110 08:36:35.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.484" endtime="20201110 08:36:35.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:35.795" level="INFO">${RESULT} = [{'time': 0.021801917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.409799999999936e-05, 'source_diff': 4.409799999999936e-05}, {'time': 0.02189025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:36:35.791" endtime="20201110 08:36:35.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:35.809" level="INFO">${ACCURACY} = {'source_diff': [4.409799999999936e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.336100000000217...</msg>
<status status="PASS" starttime="20201110 08:36:35.796" endtime="20201110 08:36:35.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.814" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:36:35.813" endtime="20201110 08:36:35.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.818" level="INFO">VALUE: [4.409799999999936e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3332999999999566e-05, 4.3332999999999566e-05, 4.3374999999998276e-05, 4.333400000000251e-05, 4.333400000000251e-05, 4.3361000000002176e-05, 4.3318999999999996e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3318999999999996e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.334800000000208e-05, 4.3332999999999566e-05, 4.3318999999999996e-05, 4.3374999999998276e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.336200000000165e-05, 4.3375000000001745e-05, 4.3388999999997846e-05, 4.3346999999999136e-05, 4.3388999999997846e-05, 4.3333000000003036e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.334800000000208e-05, 4.336200000000165e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3346999999999136e-05]</msg>
<status status="PASS" starttime="20201110 08:36:35.816" endtime="20201110 08:36:35.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.810" endtime="20201110 08:36:35.819"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.822" endtime="20201110 08:36:35.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:35.826" endtime="20201110 08:36:35.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.824" endtime="20201110 08:36:35.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.820" endtime="20201110 08:36:35.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.450" endtime="20201110 08:36:35.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.450" endtime="20201110 08:36:35.848"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.856" endtime="20201110 08:36:35.872"></status>
</kw>
<msg timestamp="20201110 08:36:35.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.855" endtime="20201110 08:36:35.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:35.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:35.874" endtime="20201110 08:36:35.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.876" endtime="20201110 08:36:35.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.852" endtime="20201110 08:36:35.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.850" endtime="20201110 08:36:35.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:35.886" endtime="20201110 08:36:36.172"></status>
</kw>
<msg timestamp="20201110 08:36:36.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:35.885" endtime="20201110 08:36:36.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021791806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.176" endtime="20201110 08:36:36.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.184" endtime="20201110 08:36:36.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.882" endtime="20201110 08:36:36.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.880" endtime="20201110 08:36:36.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.191" level="INFO">${RESULT} = [{'time': 0.021835903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4096999999999886e-05, 'source_diff': 4.4096999999999886e-05}, {'time': 0.021919264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:36.188" endtime="20201110 08:36:36.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:36.204" level="INFO">${ACCURACY} = {'source_diff': [4.4096999999999886e-05, 4.3375000000001745e-05, 4.330499999999696e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.334800000000208e-05, 4.3332999999999566e...</msg>
<status status="PASS" starttime="20201110 08:36:36.192" endtime="20201110 08:36:36.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.209" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:36:36.208" endtime="20201110 08:36:36.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.211" level="INFO">VALUE: [4.4096999999999886e-05, 4.3375000000001745e-05, 4.330499999999696e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.334800000000208e-05, 4.3332999999999566e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3402999999997416e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.332000000000294e-05, 4.3360999999998706e-05, 4.331999999999947e-05, 4.331999999999947e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3332999999999566e-05, 4.334800000000208e-05, 4.333400000000251e-05, 4.3374999999998276e-05, 4.336199999999818e-05, 4.33059999999999e-05, 4.3347000000002606e-05, 4.327800000000076e-05, 4.3360999999998706e-05, 4.338799999999837e-05, 4.3361000000002176e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.331999999999947e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.334799999999861e-05, 4.3332999999999566e-05, 4.329200000000033e-05, 4.33059999999999e-05, 4.3346999999999136e-05, 4.3346999999999136e-05]</msg>
<status status="PASS" starttime="20201110 08:36:36.210" endtime="20201110 08:36:36.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.205" endtime="20201110 08:36:36.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.223" endtime="20201110 08:36:36.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.227" endtime="20201110 08:36:36.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.225" endtime="20201110 08:36:36.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.222" endtime="20201110 08:36:36.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.849" endtime="20201110 08:36:36.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:35.848" endtime="20201110 08:36:36.248"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.256" endtime="20201110 08:36:36.272"></status>
</kw>
<msg timestamp="20201110 08:36:36.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.255" endtime="20201110 08:36:36.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.274" endtime="20201110 08:36:36.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.276" endtime="20201110 08:36:36.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.252" endtime="20201110 08:36:36.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.250" endtime="20201110 08:36:36.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.286" endtime="20201110 08:36:36.572"></status>
</kw>
<msg timestamp="20201110 08:36:36.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.284" endtime="20201110 08:36:36.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021523403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.576" endtime="20201110 08:36:36.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.584" endtime="20201110 08:36:36.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.282" endtime="20201110 08:36:36.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.280" endtime="20201110 08:36:36.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.591" level="INFO">${RESULT} = [{'time': 0.021523403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4124999999999026e-05, 'source_diff': 4.4124999999999026e-05}, {'time': 0.021604236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:36.588" endtime="20201110 08:36:36.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:36.604" level="INFO">${ACCURACY} = {'source_diff': [4.4124999999999026e-05, 4.3305000000000426e-05, 4.3375000000001745e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.33610000000021...</msg>
<status status="PASS" starttime="20201110 08:36:36.592" endtime="20201110 08:36:36.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.609" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:36:36.608" endtime="20201110 08:36:36.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.611" level="INFO">VALUE: [4.4124999999999026e-05, 4.3305000000000426e-05, 4.3375000000001745e-05, 4.3375000000001745e-05, 4.3346999999999136e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3361000000002176e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3403000000000885e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.334800000000208e-05, 4.333400000000251e-05, 4.3360999999998706e-05, 4.341600000000098e-05, 4.3332999999999566e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.327800000000076e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.3374999999998276e-05, 4.3375000000001745e-05, 4.3333000000003036e-05, 4.3361000000002176e-05, 4.332000000000294e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3347000000002606e-05, 4.331999999999947e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.343000000000055e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201110 08:36:36.610" endtime="20201110 08:36:36.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.605" endtime="20201110 08:36:36.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.615" endtime="20201110 08:36:36.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:36.618" endtime="20201110 08:36:36.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.617" endtime="20201110 08:36:36.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.613" endtime="20201110 08:36:36.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.248" endtime="20201110 08:36:36.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.248" endtime="20201110 08:36:36.639"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.648" endtime="20201110 08:36:36.664"></status>
</kw>
<msg timestamp="20201110 08:36:36.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.646" endtime="20201110 08:36:36.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:36.665" endtime="20201110 08:36:36.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.668" endtime="20201110 08:36:36.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.644" endtime="20201110 08:36:36.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.642" endtime="20201110 08:36:36.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.678" endtime="20201110 08:36:36.963"></status>
</kw>
<msg timestamp="20201110 08:36:36.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.676" endtime="20201110 08:36:36.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:36.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021507028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:36.968" endtime="20201110 08:36:36.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:36.976" endtime="20201110 08:36:36.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.674" endtime="20201110 08:36:36.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.672" endtime="20201110 08:36:36.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:36.982" level="INFO">${RESULT} = [{'time': 0.021507028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4110999999999456e-05, 'source_diff': 4.4110999999999456e-05}, {'time': 0.021605014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:36.979" endtime="20201110 08:36:36.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:36.996" level="INFO">${ACCURACY} = {'source_diff': [4.4110999999999456e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.336100000000217...</msg>
<status status="PASS" starttime="20201110 08:36:36.983" endtime="20201110 08:36:36.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.000" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:36:36.999" endtime="20201110 08:36:37.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.003" level="INFO">VALUE: [4.4110999999999456e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.331999999999947e-05, 4.336200000000165e-05, 4.3347000000002606e-05, 4.3347000000002606e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.334799999999861e-05, 4.333400000000251e-05, 4.333400000000251e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3374999999998276e-05, 4.3403000000000885e-05, 4.336199999999818e-05, 4.3347000000002606e-05, 4.3375000000001745e-05, 4.3389000000001315e-05, 4.3360999999998706e-05, 4.336200000000165e-05, 4.327800000000076e-05, 4.334799999999861e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3347000000002606e-05, 4.333399999999904e-05, 4.3375000000001745e-05, 4.3361000000002176e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.334799999999861e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3361000000002176e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201110 08:36:37.001" endtime="20201110 08:36:37.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.997" endtime="20201110 08:36:37.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.006" endtime="20201110 08:36:37.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.010" endtime="20201110 08:36:37.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.008" endtime="20201110 08:36:37.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.005" endtime="20201110 08:36:37.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.640" endtime="20201110 08:36:37.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:36.640" endtime="20201110 08:36:37.031"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.043" endtime="20201110 08:36:37.060"></status>
</kw>
<msg timestamp="20201110 08:36:37.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.040" endtime="20201110 08:36:37.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.062" endtime="20201110 08:36:37.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.064" endtime="20201110 08:36:37.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.037" endtime="20201110 08:36:37.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.035" endtime="20201110 08:36:37.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.075" endtime="20201110 08:36:37.360"></status>
</kw>
<msg timestamp="20201110 08:36:37.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025439653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.074" endtime="20201110 08:36:37.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025395542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025439653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.364" endtime="20201110 08:36:37.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.372" endtime="20201110 08:36:37.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.071" endtime="20201110 08:36:37.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.070" endtime="20201110 08:36:37.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:37.379" level="INFO">${RESULT} = [{'time': 0.025439653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4110999999999456e-05, 'source_diff': 4.4110999999999456e-05}, {'time': 0.025525444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:37.376" endtime="20201110 08:36:37.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:37.392" level="INFO">${ACCURACY} = {'source_diff': [4.4110999999999456e-05, 4.3347000000002606e-05, 4.3375000000001745e-05, 4.327799999999729e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.33469999999991...</msg>
<status status="PASS" starttime="20201110 08:36:37.380" endtime="20201110 08:36:37.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.397" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:36:37.396" endtime="20201110 08:36:37.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.399" level="INFO">VALUE: [4.4110999999999456e-05, 4.3347000000002606e-05, 4.3375000000001745e-05, 4.327799999999729e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.334799999999861e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.333399999999904e-05, 4.3403000000000885e-05, 4.3346999999999136e-05, 4.3305000000000426e-05, 4.3347000000002606e-05, 4.3333000000003036e-05, 4.330499999999696e-05, 4.3375000000001745e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.3374999999998276e-05, 4.334799999999861e-05, 4.3374999999998276e-05, 4.329200000000033e-05, 4.334800000000208e-05, 4.333400000000251e-05, 4.334799999999861e-05, 4.333399999999904e-05, 4.3318999999999996e-05, 4.333400000000251e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.333400000000251e-05, 4.327799999999729e-05, 4.33059999999999e-05, 4.334800000000208e-05, 4.3347000000002606e-05, 4.3375000000001745e-05, 4.327800000000076e-05, 4.3360999999998706e-05, 4.3318999999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:36:37.398" endtime="20201110 08:36:37.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.393" endtime="20201110 08:36:37.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.403" endtime="20201110 08:36:37.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.406" endtime="20201110 08:36:37.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.405" endtime="20201110 08:36:37.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.401" endtime="20201110 08:36:37.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.033" endtime="20201110 08:36:37.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.032" endtime="20201110 08:36:37.427"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.436" endtime="20201110 08:36:37.452"></status>
</kw>
<msg timestamp="20201110 08:36:37.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.434" endtime="20201110 08:36:37.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.453" endtime="20201110 08:36:37.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.456" endtime="20201110 08:36:37.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.432" endtime="20201110 08:36:37.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.430" endtime="20201110 08:36:37.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.466" endtime="20201110 08:36:37.751"></status>
</kw>
<msg timestamp="20201110 08:36:37.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.464" endtime="20201110 08:36:37.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.755" endtime="20201110 08:36:37.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.764" endtime="20201110 08:36:37.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.462" endtime="20201110 08:36:37.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.460" endtime="20201110 08:36:37.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:37.770" level="INFO">${RESULT} = [{'time': 0.021528778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4096999999999886e-05, 'source_diff': 4.4096999999999886e-05}, {'time': 0.021607125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:37.767" endtime="20201110 08:36:37.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:37.784" level="INFO">${ACCURACY} = {'source_diff': [4.4096999999999886e-05, 4.33059999999999e-05, 4.336200000000165e-05, 4.3360999999998706e-05, 4.3389000000001315e-05, 4.331999999999947e-05, 4.3374999999998276e-05, 4.3346999999999136e...</msg>
<status status="PASS" starttime="20201110 08:36:37.771" endtime="20201110 08:36:37.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.788" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:36:37.787" endtime="20201110 08:36:37.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.791" level="INFO">VALUE: [4.4096999999999886e-05, 4.33059999999999e-05, 4.336200000000165e-05, 4.3360999999998706e-05, 4.3389000000001315e-05, 4.331999999999947e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.336200000000165e-05, 4.329200000000033e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.3374999999998276e-05, 4.3346999999999136e-05, 4.3347000000002606e-05, 4.3346999999999136e-05, 4.334799999999861e-05, 4.327799999999729e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3375000000001745e-05, 4.329200000000033e-05, 4.3332999999999566e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.333400000000251e-05, 4.3417000000000455e-05, 4.3375000000001745e-05, 4.33059999999999e-05, 4.3346999999999136e-05, 4.3375000000001745e-05, 4.3347000000002606e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.3332999999999566e-05, 4.3361000000002176e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3332999999999566e-05, 4.334800000000208e-05, 4.3403000000000885e-05, 4.3360999999998706e-05]</msg>
<status status="PASS" starttime="20201110 08:36:37.789" endtime="20201110 08:36:37.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.784" endtime="20201110 08:36:37.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.794" endtime="20201110 08:36:37.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:37.798" endtime="20201110 08:36:37.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.796" endtime="20201110 08:36:37.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.793" endtime="20201110 08:36:37.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.428" endtime="20201110 08:36:37.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.427" endtime="20201110 08:36:37.819"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.831" endtime="20201110 08:36:37.848"></status>
</kw>
<msg timestamp="20201110 08:36:37.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.829" endtime="20201110 08:36:37.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:37.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:37.850" endtime="20201110 08:36:37.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.853" endtime="20201110 08:36:37.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.827" endtime="20201110 08:36:37.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.824" endtime="20201110 08:36:37.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:37.865" endtime="20201110 08:36:38.151"></status>
</kw>
<msg timestamp="20201110 08:36:38.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026014236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:37.864" endtime="20201110 08:36:38.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025970125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026014236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.156" endtime="20201110 08:36:38.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.164" endtime="20201110 08:36:38.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.861" endtime="20201110 08:36:38.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.860" endtime="20201110 08:36:38.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.170" level="INFO">${RESULT} = [{'time': 0.026014236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4110999999999456e-05, 'source_diff': 4.4110999999999456e-05}, {'time': 0.026095361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:38.167" endtime="20201110 08:36:38.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:38.184" level="INFO">${ACCURACY} = {'source_diff': [4.4110999999999456e-05, 4.3347000000002606e-05, 4.331999999999947e-05, 4.3347000000002606e-05, 4.33059999999999e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.334799999999861e...</msg>
<status status="PASS" starttime="20201110 08:36:38.171" endtime="20201110 08:36:38.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.188" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:36:38.187" endtime="20201110 08:36:38.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.191" level="INFO">VALUE: [4.4110999999999456e-05, 4.3347000000002606e-05, 4.331999999999947e-05, 4.3347000000002606e-05, 4.33059999999999e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.334799999999861e-05, 4.3417000000000455e-05, 4.3333000000003036e-05, 4.334800000000208e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.334800000000208e-05, 4.3333000000003036e-05, 4.3332999999999566e-05, 4.3347000000002606e-05, 4.3318999999999996e-05, 4.3374999999998276e-05, 4.3360999999998706e-05, 4.334800000000208e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3361000000002176e-05, 4.3375000000001745e-05, 4.3347000000002606e-05, 4.334799999999861e-05, 4.3360999999998706e-05, 4.331999999999947e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.3374999999998276e-05, 4.3332999999999566e-05, 4.3360999999998706e-05, 4.33059999999999e-05, 4.334799999999861e-05, 4.3346999999999136e-05, 4.333400000000251e-05, 4.3332999999999566e-05, 4.3388999999997846e-05, 4.334800000000208e-05, 4.3346999999999136e-05, 4.3332999999999566e-05, 4.3346999999999136e-05, 4.3305000000000426e-05, 4.334799999999861e-05, 4.3332999999999566e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201110 08:36:38.189" endtime="20201110 08:36:38.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.185" endtime="20201110 08:36:38.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.194" endtime="20201110 08:36:38.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.198" endtime="20201110 08:36:38.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.196" endtime="20201110 08:36:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.193" endtime="20201110 08:36:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.822" endtime="20201110 08:36:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:37.820" endtime="20201110 08:36:38.219"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.227" endtime="20201110 08:36:38.243"></status>
</kw>
<msg timestamp="20201110 08:36:38.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.226" endtime="20201110 08:36:38.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.245" endtime="20201110 08:36:38.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.247" endtime="20201110 08:36:38.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.223" endtime="20201110 08:36:38.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.221" endtime="20201110 08:36:38.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.257" endtime="20201110 08:36:38.555"></status>
</kw>
<msg timestamp="20201110 08:36:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.256" endtime="20201110 08:36:38.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021660542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.564" endtime="20201110 08:36:38.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.582" endtime="20201110 08:36:38.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.253" endtime="20201110 08:36:38.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.251" endtime="20201110 08:36:38.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.597" level="INFO">${RESULT} = [{'time': 0.021660542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.409800000000283e-05, 'source_diff': 4.409800000000283e-05}, {'time': 0.021755694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:38.589" endtime="20201110 08:36:38.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:38.610" level="INFO">${ACCURACY} = {'source_diff': [4.409800000000283e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3361000000002176e-05, 4.3333000000003036e-05, 4.3610999999998956e-05, 4.338799999999837e-05, 4.3652999999997666...</msg>
<status status="PASS" starttime="20201110 08:36:38.598" endtime="20201110 08:36:38.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.615" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:36:38.614" endtime="20201110 08:36:38.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.617" level="INFO">VALUE: [4.409800000000283e-05, 4.3346999999999136e-05, 4.333399999999904e-05, 4.3361000000002176e-05, 4.3333000000003036e-05, 4.3610999999998956e-05, 4.338799999999837e-05, 4.3652999999997666e-05, 4.3374999999998276e-05, 4.3417000000000455e-05, 4.3694999999999845e-05, 4.3361000000002176e-05, 4.3374999999998276e-05, 4.3347000000002606e-05, 4.370799999999994e-05, 4.343000000000055e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.351400000000144e-05, 4.3361000000002176e-05, 4.3346999999999136e-05, 4.3417000000000455e-05, 4.347199999999926e-05, 4.369400000000037e-05, 4.374999999999865e-05, 4.345799999999969e-05, 4.370799999999994e-05, 4.3722999999998985e-05, 4.3346999999999136e-05, 4.3582999999999816e-05, 4.3722999999998985e-05, 4.3360999999998706e-05, 4.3360999999998706e-05, 4.354200000000058e-05, 4.365200000000166e-05, 4.3472999999998735e-05, 4.3347000000002606e-05, 4.3332999999999566e-05, 4.3652999999997666e-05, 4.3389000000001315e-05, 4.3333000000003036e-05, 4.3375000000001745e-05, 4.3360999999998706e-05, 4.3346999999999136e-05, 4.334800000000208e-05, 4.3403000000000885e-05, 4.333400000000251e-05, 4.327700000000129e-05, 4.341600000000098e-05, 4.3361000000002176e-05]</msg>
<status status="PASS" starttime="20201110 08:36:38.616" endtime="20201110 08:36:38.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.611" endtime="20201110 08:36:38.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.621" endtime="20201110 08:36:38.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:38.624" endtime="20201110 08:36:38.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.623" endtime="20201110 08:36:38.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.619" endtime="20201110 08:36:38.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.220" endtime="20201110 08:36:38.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.219" endtime="20201110 08:36:38.645"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.654" endtime="20201110 08:36:38.670"></status>
</kw>
<msg timestamp="20201110 08:36:38.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.652" endtime="20201110 08:36:38.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:38.671" endtime="20201110 08:36:38.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.674" endtime="20201110 08:36:38.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.650" endtime="20201110 08:36:38.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.648" endtime="20201110 08:36:38.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.685" endtime="20201110 08:36:38.970"></status>
</kw>
<msg timestamp="20201110 08:36:38.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.683" endtime="20201110 08:36:38.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:38.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021567444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:38.975" endtime="20201110 08:36:38.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:38.983" endtime="20201110 08:36:38.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.681" endtime="20201110 08:36:38.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.679" endtime="20201110 08:36:38.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:38.990" level="INFO">${RESULT} = [{'time': 0.021611736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429199999999786e-05, 'source_diff': 4.429199999999786e-05}, {'time': 0.021704264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:38.987" endtime="20201110 08:36:38.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:39.004" level="INFO">${ACCURACY} = {'source_diff': [4.429199999999786e-05, 4.445800000000069e-05, 4.4083000000000316e-05, 4.408399999999979e-05, 4.457000000000072e-05, 4.377799999999779e-05, 4.420800000000044e-05, 4.422200000000001e-05...</msg>
<status status="PASS" starttime="20201110 08:36:38.991" endtime="20201110 08:36:39.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.008" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:36:39.007" endtime="20201110 08:36:39.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.011" level="INFO">VALUE: [4.429199999999786e-05, 4.445800000000069e-05, 4.4083000000000316e-05, 4.408399999999979e-05, 4.457000000000072e-05, 4.377799999999779e-05, 4.420800000000044e-05, 4.422200000000001e-05, 4.404099999999814e-05, 4.458400000000029e-05, 4.409799999999936e-05, 4.4652999999998666e-05, 4.4431000000001025e-05, 4.466599999999876e-05, 4.426399999999872e-05, 4.447200000000026e-05, 4.461199999999943e-05, 4.4096999999999886e-05, 4.3846999999999636e-05, 4.4722999999999985e-05, 4.3916999999997486e-05, 4.426399999999872e-05, 4.4610999999999956e-05, 4.3888999999998346e-05, 4.377800000000126e-05, 4.452800000000201e-05, 4.4152999999998166e-05, 4.472199999999704e-05, 4.4333000000000566e-05, 4.4667000000001705e-05, 4.4374999999999276e-05, 4.422200000000001e-05, 4.426399999999872e-05, 4.422200000000001e-05, 4.402800000000151e-05, 4.397199999999976e-05, 4.426399999999872e-05, 4.4124999999999026e-05, 4.377799999999779e-05, 4.4096999999999886e-05, 4.4347000000000136e-05, 4.422200000000001e-05, 4.3846999999999636e-05, 4.4389000000002315e-05, 4.4347000000000136e-05, 4.4610999999999956e-05, 4.416600000000173e-05, 4.4096999999999886e-05, 4.4403000000001885e-05, 4.397200000000323e-05]</msg>
<status status="PASS" starttime="20201110 08:36:39.009" endtime="20201110 08:36:39.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.005" endtime="20201110 08:36:39.012"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.014" endtime="20201110 08:36:39.016"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.018" endtime="20201110 08:36:39.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.016" endtime="20201110 08:36:39.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.013" endtime="20201110 08:36:39.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.646" endtime="20201110 08:36:39.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:38.646" endtime="20201110 08:36:39.039"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.047" endtime="20201110 08:36:39.064"></status>
</kw>
<msg timestamp="20201110 08:36:39.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.046" endtime="20201110 08:36:39.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.065" endtime="20201110 08:36:39.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.068" endtime="20201110 08:36:39.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.043" endtime="20201110 08:36:39.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.041" endtime="20201110 08:36:39.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.077" endtime="20201110 08:36:39.363"></status>
</kw>
<msg timestamp="20201110 08:36:39.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.076" endtime="20201110 08:36:39.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.367" endtime="20201110 08:36:39.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.375" endtime="20201110 08:36:39.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.073" endtime="20201110 08:36:39.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.072" endtime="20201110 08:36:39.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:39.382" level="INFO">${RESULT} = [{'time': 0.021723958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.604100000000014e-05, 'source_diff': 4.604100000000014e-05}, {'time': 0.021805528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:39.378" endtime="20201110 08:36:39.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:39.395" level="INFO">${ACCURACY} = {'source_diff': [4.604100000000014e-05, 4.5153000000002635e-05, 4.541599999999951e-05, 4.5708999999997946e-05, 4.525000000000015e-05, 4.527799999999929e-05, 4.482000000000097e-05, 4.572200000000151e-0...</msg>
<status status="PASS" starttime="20201110 08:36:39.383" endtime="20201110 08:36:39.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.400" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:36:39.399" endtime="20201110 08:36:39.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.402" level="INFO">VALUE: [4.604100000000014e-05, 4.5153000000002635e-05, 4.541599999999951e-05, 4.5708999999997946e-05, 4.525000000000015e-05, 4.527799999999929e-05, 4.482000000000097e-05, 4.572200000000151e-05, 4.572200000000151e-05, 4.5709000000001415e-05, 4.527799999999929e-05, 4.5361000000000706e-05, 4.508399999999732e-05, 4.5652999999999666e-05, 4.558299999999835e-05, 4.572199999999804e-05, 4.5152999999999166e-05, 4.5458999999997696e-05, 4.4833000000001066e-05, 4.5695000000001845e-05, 4.4916999999998486e-05, 4.502799999999904e-05, 4.5166999999998736e-05, 4.5319999999998e-05, 4.5652999999999666e-05, 4.5111000000000456e-05, 4.527799999999929e-05, 4.5569000000002247e-05, 4.529200000000233e-05, 4.495800000000119e-05, 4.527799999999929e-05, 4.51939999999984e-05, 4.495800000000119e-05, 4.570800000000194e-05, 4.5097000000000886e-05, 4.4903000000002385e-05, 4.5639000000000096e-05, 4.490199999999944e-05, 4.476399999999922e-05, 4.484800000000011e-05, 4.5445000000001595e-05, 4.5416999999998986e-05, 4.56939999999989e-05, 4.567999999999933e-05, 4.477800000000226e-05, 4.5223000000000485e-05, 4.519400000000187e-05, 4.5639000000000096e-05, 4.4902999999998916e-05, 4.5195000000001345e-05]</msg>
<status status="PASS" starttime="20201110 08:36:39.401" endtime="20201110 08:36:39.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.396" endtime="20201110 08:36:39.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.406" endtime="20201110 08:36:39.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.409" endtime="20201110 08:36:39.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.407" endtime="20201110 08:36:39.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.404" endtime="20201110 08:36:39.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.040" endtime="20201110 08:36:39.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.039" endtime="20201110 08:36:39.430"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.438" endtime="20201110 08:36:39.455"></status>
</kw>
<msg timestamp="20201110 08:36:39.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.437" endtime="20201110 08:36:39.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.456" endtime="20201110 08:36:39.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.459" endtime="20201110 08:36:39.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.434" endtime="20201110 08:36:39.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.432" endtime="20201110 08:36:39.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.469" endtime="20201110 08:36:39.754"></status>
</kw>
<msg timestamp="20201110 08:36:39.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.467" endtime="20201110 08:36:39.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021566278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.758" endtime="20201110 08:36:39.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.766" endtime="20201110 08:36:39.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.465" endtime="20201110 08:36:39.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.463" endtime="20201110 08:36:39.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:39.773" level="INFO">${RESULT} = [{'time': 0.021566278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389000000000846e-05, 'source_diff': 4.6389000000000846e-05}, {'time': 0.021661806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:39.769" endtime="20201110 08:36:39.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:39.786" level="INFO">${ACCURACY} = {'source_diff': [4.6389000000000846e-05, 4.638899999999738e-05, 4.577799999999979e-05, 4.602800000000004e-05, 4.65139999999975e-05, 4.6653000000000666e-05, 4.6375000000001276e-05, 4.6194999999998876e-...</msg>
<status status="PASS" starttime="20201110 08:36:39.774" endtime="20201110 08:36:39.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.790" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:36:39.789" endtime="20201110 08:36:39.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.793" level="INFO">VALUE: [4.6389000000000846e-05, 4.638899999999738e-05, 4.577799999999979e-05, 4.602800000000004e-05, 4.65139999999975e-05, 4.6653000000000666e-05, 4.6375000000001276e-05, 4.6194999999998876e-05, 4.658299999999935e-05, 4.6389000000000846e-05, 4.626300000000125e-05, 4.640299999999695e-05, 4.595800000000219e-05, 4.6319999999999e-05, 4.632000000000247e-05, 4.5875000000000776e-05, 4.609699999999842e-05, 4.58199999999985e-05, 4.5861000000001206e-05, 4.634699999999867e-05, 4.63329999999991e-05, 4.633399999999857e-05, 4.6403000000000416e-05, 4.627800000000029e-05, 4.677700000000132e-05, 4.608299999999885e-05, 4.630599999999943e-05, 4.625000000000115e-05, 4.6139000000000596e-05, 4.658400000000229e-05, 4.5889000000000346e-05, 4.670799999999947e-05, 4.66529999999972e-05, 4.663800000000162e-05, 4.604199999999961e-05, 4.661099999999849e-05, 4.6153000000000166e-05, 4.579099999999989e-05, 4.6097000000001886e-05, 4.6445000000002595e-05, 4.617999999999983e-05, 4.644399999999965e-05, 4.627800000000029e-05, 4.670799999999947e-05, 4.6083000000002317e-05, 4.622199999999854e-05, 4.572200000000151e-05, 4.658399999999882e-05, 4.6625000000001526e-05, 4.629100000000039e-05]</msg>
<status status="PASS" starttime="20201110 08:36:39.791" endtime="20201110 08:36:39.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.787" endtime="20201110 08:36:39.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.796" endtime="20201110 08:36:39.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:39.800" endtime="20201110 08:36:39.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.798" endtime="20201110 08:36:39.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.795" endtime="20201110 08:36:39.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.431" endtime="20201110 08:36:39.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.430" endtime="20201110 08:36:39.821"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.829" endtime="20201110 08:36:39.846"></status>
</kw>
<msg timestamp="20201110 08:36:39.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.828" endtime="20201110 08:36:39.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:39.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:39.847" endtime="20201110 08:36:39.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.849" endtime="20201110 08:36:39.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.825" endtime="20201110 08:36:39.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.823" endtime="20201110 08:36:39.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:39.859" endtime="20201110 08:36:40.147"></status>
</kw>
<msg timestamp="20201110 08:36:40.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:39.858" endtime="20201110 08:36:40.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021594986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021643194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.152" endtime="20201110 08:36:40.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.160" endtime="20201110 08:36:40.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.855" endtime="20201110 08:36:40.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.854" endtime="20201110 08:36:40.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.167" level="INFO">${RESULT} = [{'time': 0.021643194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.820800000000097e-05, 'source_diff': 4.820800000000097e-05}, {'time': 0.021729764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:40.164" endtime="20201110 08:36:40.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:40.181" level="INFO">${ACCURACY} = {'source_diff': [4.820800000000097e-05, 4.708299999999985e-05, 4.759699999999992e-05, 4.6944999999999626e-05, 4.75269999999986e-05, 4.758399999999982e-05, 4.763899999999863e-05, 4.726399999999825e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:40.168" endtime="20201110 08:36:40.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.185" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:36:40.184" endtime="20201110 08:36:40.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.188" level="INFO">VALUE: [4.820800000000097e-05, 4.708299999999985e-05, 4.759699999999992e-05, 4.6944999999999626e-05, 4.75269999999986e-05, 4.758399999999982e-05, 4.763899999999863e-05, 4.726399999999825e-05, 4.7139000000001596e-05, 4.695799999999972e-05, 4.7472999999999266e-05, 4.684699999999917e-05, 4.7153000000001166e-05, 4.708299999999985e-05, 4.684699999999917e-05, 4.727700000000182e-05, 4.720799999999997e-05, 4.7458999999999696e-05, 4.765199999999872e-05, 4.770800000000047e-05, 4.757000000000025e-05, 4.7389000000001846e-05, 4.683400000000254e-05, 4.70000000000019e-05, 4.770800000000047e-05, 4.75000000000024e-05, 4.701400000000147e-05, 4.7707999999997e-05, 4.75139999999985e-05, 4.747199999999979e-05, 4.720799999999997e-05, 4.726400000000172e-05, 4.702799999999757e-05, 4.686099999999874e-05, 4.7194999999999876e-05, 4.7403000000001416e-05, 4.7153000000001166e-05, 4.751400000000197e-05, 4.75269999999986e-05, 4.7417000000000986e-05, 4.674999999999818e-05, 4.688899999999788e-05, 4.695800000000319e-05, 4.68199999999995e-05, 4.73330000000001e-05, 4.772200000000004e-05, 4.7208999999999446e-05, 4.708299999999985e-05, 4.772200000000004e-05, 4.769399999999743e-05]</msg>
<status status="PASS" starttime="20201110 08:36:40.186" endtime="20201110 08:36:40.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.181" endtime="20201110 08:36:40.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.192" endtime="20201110 08:36:40.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.195" endtime="20201110 08:36:40.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.193" endtime="20201110 08:36:40.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.190" endtime="20201110 08:36:40.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.822" endtime="20201110 08:36:40.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:39.821" endtime="20201110 08:36:40.216"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.225" endtime="20201110 08:36:40.241"></status>
</kw>
<msg timestamp="20201110 08:36:40.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.223" endtime="20201110 08:36:40.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.243" endtime="20201110 08:36:40.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.245" endtime="20201110 08:36:40.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.221" endtime="20201110 08:36:40.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.218" endtime="20201110 08:36:40.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.256" endtime="20201110 08:36:40.541"></status>
</kw>
<msg timestamp="20201110 08:36:40.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.255" endtime="20201110 08:36:40.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.546" endtime="20201110 08:36:40.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.554" endtime="20201110 08:36:40.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.252" endtime="20201110 08:36:40.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.250" endtime="20201110 08:36:40.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.560" level="INFO">${RESULT} = [{'time': 0.021981458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847199999999732e-05, 'source_diff': 4.847199999999732e-05}, {'time': 0.022065028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:40.557" endtime="20201110 08:36:40.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:40.574" level="INFO">${ACCURACY} = {'source_diff': [4.847199999999732e-05, 4.81529999999987e-05, 4.845800000000122e-05, 4.844399999999818e-05, 4.838899999999938e-05, 4.825000000000315e-05, 4.849999999999993e-05, 4.838899999999938e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:40.561" endtime="20201110 08:36:40.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.578" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:36:40.577" endtime="20201110 08:36:40.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.581" level="INFO">VALUE: [4.847199999999732e-05, 4.81529999999987e-05, 4.845800000000122e-05, 4.844399999999818e-05, 4.838899999999938e-05, 4.825000000000315e-05, 4.849999999999993e-05, 4.838899999999938e-05, 4.8209000000000446e-05, 4.774999999999918e-05, 4.8707999999998e-05, 4.807000000000075e-05, 4.823600000000011e-05, 4.854099999999917e-05, 4.813799999999965e-05, 4.791699999999802e-05, 4.820800000000097e-05, 4.85139999999995e-05, 4.827799999999882e-05, 4.8681000000001806e-05, 4.82079999999975e-05, 4.775000000000265e-05, 4.840299999999895e-05, 4.830500000000196e-05, 4.866699999999877e-05, 4.779099999999842e-05, 4.858299999999788e-05, 4.808400000000032e-05, 4.8403000000002416e-05, 4.827799999999882e-05, 4.86529999999992e-05, 4.777799999999832e-05, 4.861100000000049e-05, 4.794399999999768e-05, 4.806900000000128e-05, 4.784700000000017e-05, 4.802799999999857e-05, 4.863800000000015e-05, 4.85139999999995e-05, 4.808299999999738e-05, 4.85139999999995e-05, 4.863899999999963e-05, 4.81940000000014e-05, 4.78200000000005e-05, 4.826399999999925e-05, 4.852799999999907e-05, 4.849999999999993e-05, 4.8444999999997657e-05, 4.813899999999913e-05, 4.798599999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:36:40.579" endtime="20201110 08:36:40.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.575" endtime="20201110 08:36:40.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.584" endtime="20201110 08:36:40.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.588" endtime="20201110 08:36:40.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.586" endtime="20201110 08:36:40.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.583" endtime="20201110 08:36:40.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.217" endtime="20201110 08:36:40.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.216" endtime="20201110 08:36:40.609"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.617" endtime="20201110 08:36:40.634"></status>
</kw>
<msg timestamp="20201110 08:36:40.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.616" endtime="20201110 08:36:40.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:40.635" endtime="20201110 08:36:40.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.638" endtime="20201110 08:36:40.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.613" endtime="20201110 08:36:40.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.611" endtime="20201110 08:36:40.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.647" endtime="20201110 08:36:40.933"></status>
</kw>
<msg timestamp="20201110 08:36:40.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.646" endtime="20201110 08:36:40.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021635708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:40.937" endtime="20201110 08:36:40.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.945" endtime="20201110 08:36:40.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.643" endtime="20201110 08:36:40.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.642" endtime="20201110 08:36:40.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:40.952" level="INFO">${RESULT} = [{'time': 0.021685194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.948600000000136e-05, 'source_diff': 4.948600000000136e-05}, {'time': 0.021777736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:40.949" endtime="20201110 08:36:40.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:40.965" level="INFO">${ACCURACY} = {'source_diff': [4.948600000000136e-05, 4.963900000000063e-05, 4.963900000000063e-05, 4.899999999999696e-05, 4.963900000000063e-05, 4.972199999999857e-05, 4.926400000000025e-05, 4.926400000000025e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:40.953" endtime="20201110 08:36:40.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.970" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:36:40.969" endtime="20201110 08:36:40.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:40.972" level="INFO">VALUE: [4.948600000000136e-05, 4.963900000000063e-05, 4.963900000000063e-05, 4.899999999999696e-05, 4.963900000000063e-05, 4.972199999999857e-05, 4.926400000000025e-05, 4.926400000000025e-05, 4.884800000000064e-05, 4.963900000000063e-05, 4.958399999999835e-05, 4.91529999999997e-05, 4.902800000000304e-05, 4.957000000000225e-05, 4.922200000000154e-05, 4.881900000000203e-05, 4.956999999999878e-05, 4.897200000000129e-05, 4.962499999999759e-05, 4.876399999999975e-05, 4.958399999999835e-05, 4.949999999999746e-05, 4.879199999999889e-05, 4.912500000000056e-05, 4.967999999999986e-05, 4.93330000000021e-05, 4.908299999999838e-05, 4.888899999999988e-05, 4.8723000000000516e-05, 4.9014e-05, 4.883299999999813e-05, 4.922200000000154e-05, 4.931899999999906e-05, 4.876399999999975e-05, 4.876400000000322e-05, 4.952800000000007e-05, 4.936099999999777e-05, 4.961100000000149e-05, 4.9445000000002126e-05, 4.969399999999943e-05, 4.927799999999982e-05, 4.876399999999975e-05, 4.940299999999995e-05, 4.912500000000056e-05, 4.952800000000007e-05, 4.926400000000025e-05, 4.888899999999988e-05, 4.88330000000016e-05, 4.944499999999866e-05, 4.940299999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:36:40.971" endtime="20201110 08:36:40.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.966" endtime="20201110 08:36:40.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:40.976" endtime="20201110 08:36:40.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:40.979" endtime="20201110 08:36:40.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.978" endtime="20201110 08:36:40.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.974" endtime="20201110 08:36:41.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.609" endtime="20201110 08:36:41.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:40.609" endtime="20201110 08:36:41.000"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.009" endtime="20201110 08:36:41.026"></status>
</kw>
<msg timestamp="20201110 08:36:41.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.008" endtime="20201110 08:36:41.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.027" endtime="20201110 08:36:41.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.030" endtime="20201110 08:36:41.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.005" endtime="20201110 08:36:41.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.002" endtime="20201110 08:36:41.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.040" endtime="20201110 08:36:41.325"></status>
</kw>
<msg timestamp="20201110 08:36:41.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:41.038" endtime="20201110 08:36:41.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0225365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022587278, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:36:41.329" endtime="20201110 08:36:41.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.337" endtime="20201110 08:36:41.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.036" endtime="20201110 08:36:41.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.034" endtime="20201110 08:36:41.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.344" level="INFO">${RESULT} = [{'time': 0.022587278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.077799999999785e-05, 'source_diff': 5.077799999999785e-05}, {'time': 0.022678819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:41.341" endtime="20201110 08:36:41.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:41.357" level="INFO">${ACCURACY} = {'source_diff': [5.077799999999785e-05, 5.02079999999995e-05, 5.008299999999938e-05, 4.993099999999959e-05, 4.990300000000045e-05, 5.056900000000031e-05, 5.004200000000014e-05, 5.072299999999905e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:41.345" endtime="20201110 08:36:41.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.362" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:36:41.361" endtime="20201110 08:36:41.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.364" level="INFO">VALUE: [5.077799999999785e-05, 5.02079999999995e-05, 5.008299999999938e-05, 4.993099999999959e-05, 4.990300000000045e-05, 5.056900000000031e-05, 5.004200000000014e-05, 5.072299999999905e-05, 5.005500000000024e-05, 4.976400000000075e-05, 5.001299999999806e-05, 5.034800000000214e-05, 5.0014000000001e-05, 5.043100000000009e-05, 4.980599999999946e-05, 5.069400000000043e-05, 5.026400000000125e-05, 5.034700000000267e-05, 5.045799999999975e-05, 5.024999999999821e-05, 4.993099999999959e-05, 5.0014000000001e-05, 4.98330000000026e-05, 5.02079999999995e-05, 5.070899999999948e-05, 5.063900000000163e-05, 5.027799999999735e-05, 5.0665999999997824e-05, 5.02079999999995e-05, 5.026399999999778e-05, 5.038900000000138e-05, 5.013900000000113e-05, 5.056899999999684e-05, 5.044499999999966e-05, 5.018099999999984e-05, 4.999999999999796e-05, 4.9709000000001946e-05, 5.040300000000095e-05, 4.98469999999987e-05, 5.051399999999803e-05, 4.976400000000075e-05, 5.0486999999998367e-05, 5.058299999999988e-05, 5.062500000000206e-05, 4.980499999999999e-05, 5.02079999999995e-05, 4.976300000000128e-05, 5.027799999999735e-05, 4.9888000000001403e-05, 5.038899999999791e-05]</msg>
<status status="PASS" starttime="20201110 08:36:41.363" endtime="20201110 08:36:41.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.358" endtime="20201110 08:36:41.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.373" endtime="20201110 08:36:41.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:41.376" endtime="20201110 08:36:41.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.375" endtime="20201110 08:36:41.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.371" endtime="20201110 08:36:41.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.001" endtime="20201110 08:36:41.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.000" endtime="20201110 08:36:41.397"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.406" endtime="20201110 08:36:41.422"></status>
</kw>
<msg timestamp="20201110 08:36:41.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.404" endtime="20201110 08:36:41.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.424" endtime="20201110 08:36:41.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.426" endtime="20201110 08:36:41.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.402" endtime="20201110 08:36:41.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.400" endtime="20201110 08:36:41.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.436" endtime="20201110 08:36:41.722"></status>
</kw>
<msg timestamp="20201110 08:36:41.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.435" endtime="20201110 08:36:41.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.726" endtime="20201110 08:36:41.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.734" endtime="20201110 08:36:41.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.432" endtime="20201110 08:36:41.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.430" endtime="20201110 08:36:41.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:41.741" level="INFO">${RESULT} = [{'time': 0.021641042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.205599999999824e-05, 'source_diff': 5.205599999999824e-05}, {'time': 0.021745528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:41.738" endtime="20201110 08:36:41.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:41.754" level="INFO">${ACCURACY} = {'source_diff': [5.205599999999824e-05, 5.11530000000017e-05, 5.098599999999939e-05, 5.104100000000167e-05, 5.086099999999927e-05, 5.13340000000001e-05, 5.1152000000002223e-05, 5.077699999999838e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:41.742" endtime="20201110 08:36:41.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.759" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:36:41.758" endtime="20201110 08:36:41.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.761" level="INFO">VALUE: [5.205599999999824e-05, 5.11530000000017e-05, 5.098599999999939e-05, 5.104100000000167e-05, 5.086099999999927e-05, 5.13340000000001e-05, 5.1152000000002223e-05, 5.077699999999838e-05, 5.087500000000231e-05, 5.108300000000038e-05, 5.119500000000041e-05, 5.170900000000048e-05, 5.113900000000213e-05, 5.088900000000188e-05, 5.137499999999934e-05, 5.08339999999996e-05, 5.086099999999927e-05, 5.08469999999997e-05, 5.12080000000005e-05, 5.129199999999792e-05, 5.081900000000056e-05, 5.13470000000002e-05, 5.124999999999921e-05, 5.095899999999973e-05, 5.095800000000025e-05, 5.084700000000317e-05, 5.137499999999934e-05, 5.082000000000003e-05, 5.080600000000046e-05, 5.138900000000238e-05, 5.1693999999997964e-05, 5.163899999999916e-05, 5.107000000000028e-05, 5.088899999999841e-05, 5.138899999999891e-05, 5.156900000000131e-05, 5.107000000000028e-05, 5.130500000000149e-05, 5.108399999999985e-05, 5.14729999999998e-05, 5.074999999999871e-05, 5.137499999999934e-05, 5.169500000000091e-05, 5.132000000000053e-05, 5.119400000000093e-05, 5.169400000000143e-05, 5.079199999999742e-05, 5.099999999999896e-05, 5.074999999999871e-05, 5.122200000000007e-05]</msg>
<status status="PASS" starttime="20201110 08:36:41.760" endtime="20201110 08:36:41.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.755" endtime="20201110 08:36:41.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.765" endtime="20201110 08:36:41.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:41.768" endtime="20201110 08:36:41.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.767" endtime="20201110 08:36:41.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.763" endtime="20201110 08:36:41.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.398" endtime="20201110 08:36:41.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.398" endtime="20201110 08:36:41.789"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.798" endtime="20201110 08:36:41.814"></status>
</kw>
<msg timestamp="20201110 08:36:41.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.796" endtime="20201110 08:36:41.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:41.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:41.816" endtime="20201110 08:36:41.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.818" endtime="20201110 08:36:41.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.794" endtime="20201110 08:36:41.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.791" endtime="20201110 08:36:41.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:41.829" endtime="20201110 08:36:42.115"></status>
</kw>
<msg timestamp="20201110 08:36:42.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021636556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:41.828" endtime="20201110 08:36:42.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021583903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021636556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:42.119" endtime="20201110 08:36:42.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.128" endtime="20201110 08:36:42.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.825" endtime="20201110 08:36:42.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.823" endtime="20201110 08:36:42.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:42.134" level="INFO">${RESULT} = [{'time': 0.021636556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.265299999999973e-05, 'source_diff': 5.265299999999973e-05}, {'time': 0.021736125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:42.131" endtime="20201110 08:36:42.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:42.148" level="INFO">${ACCURACY} = {'source_diff': [5.265299999999973e-05, 5.2707999999998534e-05, 5.2193999999998464e-05, 5.195900000000073e-05, 5.183300000000113e-05, 5.2707999999998534e-05, 5.250000000000046e-05, 5.2471999999997854e...</msg>
<status status="PASS" starttime="20201110 08:36:42.135" endtime="20201110 08:36:42.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.152" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:36:42.151" endtime="20201110 08:36:42.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.154" level="INFO">VALUE: [5.265299999999973e-05, 5.2707999999998534e-05, 5.2193999999998464e-05, 5.195900000000073e-05, 5.183300000000113e-05, 5.2707999999998534e-05, 5.250000000000046e-05, 5.2471999999997854e-05, 5.259800000000092e-05, 5.1957999999997784e-05, 5.209700000000095e-05, 5.256900000000231e-05, 5.188899999999941e-05, 5.174999999999971e-05, 5.226399999999978e-05, 5.182000000000103e-05, 5.223600000000064e-05, 5.219499999999794e-05, 5.193099999999812e-05, 5.238899999999991e-05, 5.231899999999859e-05, 5.22080000000015e-05, 5.268099999999887e-05, 5.219499999999794e-05, 5.238899999999991e-05, 5.222299999999708e-05, 5.212499999999662e-05, 5.231900000000206e-05, 5.2207999999998034e-05, 5.183299999999766e-05, 5.258400000000135e-05, 5.194400000000168e-05, 5.213899999999966e-05, 5.187500000000331e-05, 5.215299999999923e-05, 5.2138000000000184e-05, 5.248600000000089e-05, 5.243099999999862e-05, 5.186100000000027e-05, 5.188899999999941e-05, 5.2457999999998284e-05, 5.208299999999791e-05, 5.261100000000102e-05, 5.201399999999953e-05, 5.2693999999998964e-05, 5.265299999999973e-05, 5.206899999999834e-05, 5.238899999999991e-05, 5.222300000000055e-05, 5.237500000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:36:42.153" endtime="20201110 08:36:42.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.148" endtime="20201110 08:36:42.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.158" endtime="20201110 08:36:42.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:42.161" endtime="20201110 08:36:42.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.160" endtime="20201110 08:36:42.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.156" endtime="20201110 08:36:42.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.790" endtime="20201110 08:36:42.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:41.789" endtime="20201110 08:36:42.182"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.191" endtime="20201110 08:36:42.207"></status>
</kw>
<msg timestamp="20201110 08:36:42.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.189" endtime="20201110 08:36:42.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.209" endtime="20201110 08:36:42.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.211" endtime="20201110 08:36:42.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.187" endtime="20201110 08:36:42.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.185" endtime="20201110 08:36:42.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.221" endtime="20201110 08:36:42.507"></status>
</kw>
<msg timestamp="20201110 08:36:42.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:42.220" endtime="20201110 08:36:42.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021585917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021639361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:42.511" endtime="20201110 08:36:42.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.519" endtime="20201110 08:36:42.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.217" endtime="20201110 08:36:42.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.215" endtime="20201110 08:36:42.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:42.526" level="INFO">${RESULT} = [{'time': 0.021639361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3443999999999714e-05, 'source_diff': 5.3443999999999714e-05}, {'time': 0.021727931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:42.522" endtime="20201110 08:36:42.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:42.539" level="INFO">${ACCURACY} = {'source_diff': [5.3443999999999714e-05, 5.312499999999762e-05, 5.286100000000127e-05, 5.369499999999944e-05, 5.3207999999999034e-05, 5.287500000000084e-05, 5.331900000000306e-05, 5.275000000000071e-0...</msg>
<status status="PASS" starttime="20201110 08:36:42.527" endtime="20201110 08:36:42.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.543" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:36:42.542" endtime="20201110 08:36:42.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.546" level="INFO">VALUE: [5.3443999999999714e-05, 5.312499999999762e-05, 5.286100000000127e-05, 5.369499999999944e-05, 5.3207999999999034e-05, 5.287500000000084e-05, 5.331900000000306e-05, 5.275000000000071e-05, 5.294499999999869e-05, 5.35410000000007e-05, 5.362500000000159e-05, 5.356899999999984e-05, 5.326400000000078e-05, 5.2943999999999214e-05, 5.2916000000000074e-05, 5.329100000000045e-05, 5.3013999999997063e-05, 5.277799999999985e-05, 5.362499999999812e-05, 5.3680000000000394e-05, 5.2999999999997494e-05, 5.2985999999997924e-05, 5.30280000000001e-05, 5.336100000000177e-05, 5.334699999999873e-05, 5.273600000000114e-05, 5.327800000000035e-05, 5.323600000000164e-05, 5.3499999999997994e-05, 5.306900000000281e-05, 5.3249999999997744e-05, 5.301400000000053e-05, 5.350000000000146e-05, 5.294499999999869e-05, 5.294500000000216e-05, 5.325000000000121e-05, 5.318100000000284e-05, 5.369499999999944e-05, 5.355599999999974e-05, 5.330500000000002e-05, 5.325000000000121e-05, 5.290299999999998e-05, 5.356999999999931e-05, 5.319499999999894e-05, 5.315300000000023e-05, 5.306999999999881e-05, 5.288900000000041e-05, 5.3457999999999284e-05, 5.312499999999762e-05, 5.290299999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:36:42.544" endtime="20201110 08:36:42.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.540" endtime="20201110 08:36:42.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.549" endtime="20201110 08:36:42.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:42.553" endtime="20201110 08:36:42.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.551" endtime="20201110 08:36:42.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.548" endtime="20201110 08:36:42.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.183" endtime="20201110 08:36:42.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.183" endtime="20201110 08:36:42.574"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.582" endtime="20201110 08:36:42.599"></status>
</kw>
<msg timestamp="20201110 08:36:42.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.581" endtime="20201110 08:36:42.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.600" endtime="20201110 08:36:42.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.603" endtime="20201110 08:36:42.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.578" endtime="20201110 08:36:42.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.576" endtime="20201110 08:36:42.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.613" endtime="20201110 08:36:42.897"></status>
</kw>
<msg timestamp="20201110 08:36:42.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:42.611" endtime="20201110 08:36:42.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021724639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021779611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:42.902" endtime="20201110 08:36:42.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.910" endtime="20201110 08:36:42.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.609" endtime="20201110 08:36:42.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.607" endtime="20201110 08:36:42.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:42.916" level="INFO">${RESULT} = [{'time': 0.021779611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4972000000000354e-05, 'source_diff': 5.4972000000000354e-05}, {'time': 0.021883083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:42.913" endtime="20201110 08:36:42.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:42.930" level="INFO">${ACCURACY} = {'source_diff': [5.4972000000000354e-05, 5.4208000000000034e-05, 5.381999999999956e-05, 5.4179999999997425e-05, 5.390300000000098e-05, 5.408299999999991e-05, 5.4485999999999424e-05, 5.423700000000212e...</msg>
<status status="PASS" starttime="20201110 08:36:42.917" endtime="20201110 08:36:42.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.934" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:36:42.933" endtime="20201110 08:36:42.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.937" level="INFO">VALUE: [5.4972000000000354e-05, 5.4208000000000034e-05, 5.381999999999956e-05, 5.4179999999997425e-05, 5.390300000000098e-05, 5.408299999999991e-05, 5.4485999999999424e-05, 5.423700000000212e-05, 5.3929999999997175e-05, 5.437499999999887e-05, 5.429200000000092e-05, 5.391700000000055e-05, 5.448600000000289e-05, 5.4416000000001574e-05, 5.380499999999705e-05, 5.3749999999998244e-05, 5.4458000000000284e-05, 5.4666000000001824e-05, 5.4680000000001394e-05, 5.430500000000102e-05, 5.468100000000087e-05, 5.387500000000184e-05, 5.405500000000077e-05, 5.4235999999999174e-05, 5.388900000000141e-05, 5.384699999999923e-05, 5.418100000000037e-05, 5.3721999999999104e-05, 5.4693999999997495e-05, 5.4179999999997425e-05, 5.380500000000052e-05, 5.387500000000184e-05, 5.409699999999948e-05, 5.413899999999819e-05, 5.4499999999998994e-05, 5.430500000000102e-05, 5.4499999999998994e-05, 5.43609999999993e-05, 5.4180000000000894e-05, 5.383300000000313e-05, 5.393099999999665e-05, 5.430500000000102e-05, 5.4694000000000964e-05, 5.404099999999773e-05, 5.3944000000000214e-05, 5.441699999999758e-05, 5.43609999999993e-05, 5.454200000000117e-05, 5.377800000000085e-05, 5.419499999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:36:42.935" endtime="20201110 08:36:42.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.931" endtime="20201110 08:36:42.938"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.940" endtime="20201110 08:36:42.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:42.943" endtime="20201110 08:36:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.942" endtime="20201110 08:36:42.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.939" endtime="20201110 08:36:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.575" endtime="20201110 08:36:42.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.574" endtime="20201110 08:36:42.964"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.973" endtime="20201110 08:36:42.990"></status>
</kw>
<msg timestamp="20201110 08:36:42.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.971" endtime="20201110 08:36:42.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:42.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:42.991" endtime="20201110 08:36:42.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:42.993" endtime="20201110 08:36:42.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.969" endtime="20201110 08:36:42.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.967" endtime="20201110 08:36:42.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.003" endtime="20201110 08:36:43.290"></status>
</kw>
<msg timestamp="20201110 08:36:43.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.002" endtime="20201110 08:36:43.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.294" endtime="20201110 08:36:43.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.302" endtime="20201110 08:36:43.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.999" endtime="20201110 08:36:43.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.998" endtime="20201110 08:36:43.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.309" level="INFO">${RESULT} = [{'time': 0.021633347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.537499999999987e-05, 'source_diff': 5.537499999999987e-05}, {'time': 0.021741833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:43.305" endtime="20201110 08:36:43.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:43.322" level="INFO">${ACCURACY} = {'source_diff': [5.537499999999987e-05, 5.529099999999898e-05, 5.4944000000001214e-05, 5.5249999999999744e-05, 5.515299999999876e-05, 5.5486000000000424e-05, 5.519500000000094e-05, 5.5499999999999994e...</msg>
<status status="PASS" starttime="20201110 08:36:43.310" endtime="20201110 08:36:43.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.326" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:36:43.325" endtime="20201110 08:36:43.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.329" level="INFO">VALUE: [5.537499999999987e-05, 5.529099999999898e-05, 5.4944000000001214e-05, 5.5249999999999744e-05, 5.515299999999876e-05, 5.5486000000000424e-05, 5.519500000000094e-05, 5.5499999999999994e-05, 5.532000000000106e-05, 5.4749999999999244e-05, 5.51670000000018e-05, 5.5249999999999744e-05, 5.480500000000152e-05, 5.4777999999998384e-05, 5.512499999999962e-05, 5.4735999999999674e-05, 5.5555999999998273e-05, 5.5443999999998245e-05, 5.519500000000094e-05, 5.491700000000155e-05, 5.568100000000187e-05, 5.536099999999683e-05, 5.538900000000291e-05, 5.5555999999998273e-05, 5.561100000000055e-05, 5.4929999999998175e-05, 5.4749999999999244e-05, 5.555600000000174e-05, 5.5444000000001714e-05, 5.4985999999999924e-05, 5.5694000000001964e-05, 5.504200000000167e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.480500000000152e-05, 5.4749999999999244e-05, 5.5249999999999744e-05, 5.53610000000003e-05, 5.538900000000291e-05, 5.50549999999983e-05, 5.488899999999894e-05, 5.5499999999999994e-05, 5.566699999999883e-05, 5.4985999999999924e-05, 5.505500000000177e-05, 5.543099999999815e-05, 5.4972000000000354e-05, 5.533300000000116e-05, 5.56670000000023e-05, 5.5429999999998675e-05]</msg>
<status status="PASS" starttime="20201110 08:36:43.327" endtime="20201110 08:36:43.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.323" endtime="20201110 08:36:43.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.332" endtime="20201110 08:36:43.334"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:43.336" endtime="20201110 08:36:43.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.334" endtime="20201110 08:36:43.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.331" endtime="20201110 08:36:43.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.965" endtime="20201110 08:36:43.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:42.965" endtime="20201110 08:36:43.357"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.365" endtime="20201110 08:36:43.382"></status>
</kw>
<msg timestamp="20201110 08:36:43.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.364" endtime="20201110 08:36:43.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.384" endtime="20201110 08:36:43.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.386" endtime="20201110 08:36:43.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.361" endtime="20201110 08:36:43.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.359" endtime="20201110 08:36:43.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.397" endtime="20201110 08:36:43.684"></status>
</kw>
<msg timestamp="20201110 08:36:43.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.395" endtime="20201110 08:36:43.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.688" endtime="20201110 08:36:43.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.696" endtime="20201110 08:36:43.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.393" endtime="20201110 08:36:43.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.391" endtime="20201110 08:36:43.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:43.703" level="INFO">${RESULT} = [{'time': 0.021805847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.711099999999858e-05, 'source_diff': 5.711099999999858e-05}, {'time': 0.021896375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:43.699" endtime="20201110 08:36:43.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:43.716" level="INFO">${ACCURACY} = {'source_diff': [5.711099999999858e-05, 5.588899999999994e-05, 5.634799999999773e-05, 5.573700000000015e-05, 5.579100000000295e-05, 5.6500000000000994e-05, 5.6236000000001174e-05, 5.611099999999758e-0...</msg>
<status status="PASS" starttime="20201110 08:36:43.704" endtime="20201110 08:36:43.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.720" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:36:43.720" endtime="20201110 08:36:43.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.723" level="INFO">VALUE: [5.711099999999858e-05, 5.588899999999994e-05, 5.634799999999773e-05, 5.573700000000015e-05, 5.579100000000295e-05, 5.6500000000000994e-05, 5.6236000000001174e-05, 5.611099999999758e-05, 5.629099999999998e-05, 5.6236000000001174e-05, 5.6665999999996886e-05, 5.58610000000008e-05, 5.6485999999997955e-05, 5.5805999999998523e-05, 5.593099999999865e-05, 5.6291999999999454e-05, 5.638900000000044e-05, 5.6416000000000105e-05, 5.666699999999983e-05, 5.593100000000212e-05, 5.637500000000087e-05, 5.608299999999844e-05, 5.654100000000023e-05, 5.6236000000001174e-05, 5.63610000000013e-05, 5.633299999999869e-05, 5.641699999999958e-05, 5.58610000000008e-05, 5.5791999999998954e-05, 5.584700000000123e-05, 5.655600000000274e-05, 5.6569999999998843e-05, 5.66809999999994e-05, 5.611100000000105e-05, 5.61809999999989e-05, 5.6305999999999023e-05, 5.613900000000019e-05, 5.6236000000001174e-05, 5.633299999999869e-05, 5.666699999999983e-05, 5.663900000000069e-05, 5.5791999999998954e-05, 5.643100000000262e-05, 5.6500000000000994e-05, 5.656899999999937e-05, 5.616699999999933e-05, 5.652700000000066e-05, 5.5986000000000924e-05, 5.6541999999999704e-05, 5.6458000000002284e-05]</msg>
<status status="PASS" starttime="20201110 08:36:43.722" endtime="20201110 08:36:43.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.717" endtime="20201110 08:36:43.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.727" endtime="20201110 08:36:43.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:43.730" endtime="20201110 08:36:43.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.728" endtime="20201110 08:36:43.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.725" endtime="20201110 08:36:43.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.358" endtime="20201110 08:36:43.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.357" endtime="20201110 08:36:43.751"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.759" endtime="20201110 08:36:43.776"></status>
</kw>
<msg timestamp="20201110 08:36:43.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.758" endtime="20201110 08:36:43.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:43.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:43.778" endtime="20201110 08:36:43.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.780" endtime="20201110 08:36:43.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.755" endtime="20201110 08:36:43.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.753" endtime="20201110 08:36:43.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:43.790" endtime="20201110 08:36:44.075"></status>
</kw>
<msg timestamp="20201110 08:36:44.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:43.789" endtime="20201110 08:36:44.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021596319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.079" endtime="20201110 08:36:44.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.087" endtime="20201110 08:36:44.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.786" endtime="20201110 08:36:44.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.784" endtime="20201110 08:36:44.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.094" level="INFO">${RESULT} = [{'time': 0.021654125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7806000000000524e-05, 'source_diff': 5.7806000000000524e-05}, {'time': 0.021752611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:44.090" endtime="20201110 08:36:44.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:44.107" level="INFO">${ACCURACY} = {'source_diff': [5.7806000000000524e-05, 5.7472000000002854e-05, 5.6916000000000605e-05, 5.7471999999999385e-05, 5.731900000000012e-05, 5.708300000000291e-05, 5.709700000000248e-05, 5.737500000000187e...</msg>
<status status="PASS" starttime="20201110 08:36:44.095" endtime="20201110 08:36:44.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.112" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:36:44.111" endtime="20201110 08:36:44.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.114" level="INFO">VALUE: [5.7806000000000524e-05, 5.7472000000002854e-05, 5.6916000000000605e-05, 5.7471999999999385e-05, 5.731900000000012e-05, 5.708300000000291e-05, 5.709700000000248e-05, 5.737500000000187e-05, 5.711100000000205e-05, 5.709699999999901e-05, 5.7555999999996804e-05, 5.6791999999999954e-05, 5.754100000000123e-05, 5.7444000000000245e-05, 5.761099999999908e-05, 5.6986000000001924e-05, 5.7556000000000274e-05, 5.709699999999901e-05, 5.688900000000094e-05, 5.68749999999979e-05, 5.6930000000000175e-05, 5.7306000000000024e-05, 5.7249999999998274e-05, 5.733400000000263e-05, 5.7236000000002174e-05, 5.7042000000000204e-05, 5.7278000000000884e-05, 5.688900000000094e-05, 5.7444000000000245e-05, 5.7180000000000425e-05, 5.762499999999865e-05, 5.765300000000126e-05, 5.70550000000003e-05, 5.729100000000098e-05, 5.708299999999944e-05, 5.729099999999751e-05, 5.6971999999998885e-05, 5.6750000000001244e-05, 5.688900000000094e-05, 5.734799999999873e-05, 5.713900000000119e-05, 5.7222000000002604e-05, 5.71809999999999e-05, 5.712499999999815e-05, 5.686099999999833e-05, 5.6749999999997774e-05, 5.7180000000000425e-05, 5.7485999999998955e-05, 5.744499999999972e-05, 5.6791999999999954e-05]</msg>
<status status="PASS" starttime="20201110 08:36:44.113" endtime="20201110 08:36:44.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.108" endtime="20201110 08:36:44.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.118" endtime="20201110 08:36:44.119"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.121" endtime="20201110 08:36:44.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.120" endtime="20201110 08:36:44.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.116" endtime="20201110 08:36:44.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.752" endtime="20201110 08:36:44.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:43.751" endtime="20201110 08:36:44.142"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.151" endtime="20201110 08:36:44.168"></status>
</kw>
<msg timestamp="20201110 08:36:44.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.150" endtime="20201110 08:36:44.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.170" endtime="20201110 08:36:44.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.172" endtime="20201110 08:36:44.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.147" endtime="20201110 08:36:44.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.145" endtime="20201110 08:36:44.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.182" endtime="20201110 08:36:44.468"></status>
</kw>
<msg timestamp="20201110 08:36:44.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.181" endtime="20201110 08:36:44.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022348014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.472" endtime="20201110 08:36:44.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.481" endtime="20201110 08:36:44.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.178" endtime="20201110 08:36:44.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.176" endtime="20201110 08:36:44.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.487" level="INFO">${RESULT} = [{'time': 0.022406931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.891700000000208e-05, 'source_diff': 5.891700000000208e-05}, {'time': 0.022515431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:44.484" endtime="20201110 08:36:44.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:44.501" level="INFO">${ACCURACY} = {'source_diff': [5.891700000000208e-05, 5.8320000000000594e-05, 5.854100000000223e-05, 5.81810000000009e-05, 5.7736000000002674e-05, 5.83749999999994e-05, 5.8250000000002744e-05, 5.848699999999943e-05...</msg>
<status status="PASS" starttime="20201110 08:36:44.488" endtime="20201110 08:36:44.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.505" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:36:44.504" endtime="20201110 08:36:44.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.508" level="INFO">VALUE: [5.891700000000208e-05, 5.8320000000000594e-05, 5.854100000000223e-05, 5.81810000000009e-05, 5.7736000000002674e-05, 5.83749999999994e-05, 5.8250000000002744e-05, 5.848699999999943e-05, 5.786200000000227e-05, 5.816699999999786e-05, 5.8235999999999705e-05, 5.779100000000148e-05, 5.8485999999999955e-05, 5.8028000000001634e-05, 5.836099999999983e-05, 5.818099999999743e-05, 5.8041999999997734e-05, 5.815300000000176e-05, 5.786099999999933e-05, 5.7820000000000094e-05, 5.809700000000001e-05, 5.834700000000026e-05, 5.812499999999915e-05, 5.7721999999999635e-05, 5.786099999999933e-05, 5.8306000000001024e-05, 5.866700000000183e-05, 5.8679999999998456e-05, 5.80550000000013e-05, 5.793100000000065e-05, 5.868099999999793e-05, 5.811099999999958e-05, 5.7792000000000954e-05, 5.8347999999999733e-05, 5.793100000000065e-05, 5.7749999999998775e-05, 5.8665999999998886e-05, 5.836099999999983e-05, 5.7971999999999885e-05, 5.812500000000262e-05, 5.7985999999999455e-05, 5.7999999999999025e-05, 5.858300000000094e-05, 5.7806000000000524e-05, 5.770899999999954e-05, 5.7958000000000315e-05, 5.8165999999998386e-05, 5.8070000000000344e-05, 5.866700000000183e-05, 5.8306000000001024e-05]</msg>
<status status="PASS" starttime="20201110 08:36:44.506" endtime="20201110 08:36:44.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.502" endtime="20201110 08:36:44.509"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.511" endtime="20201110 08:36:44.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.515" endtime="20201110 08:36:44.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.513" endtime="20201110 08:36:44.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.510" endtime="20201110 08:36:44.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.144" endtime="20201110 08:36:44.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.143" endtime="20201110 08:36:44.536"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.544" endtime="20201110 08:36:44.561"></status>
</kw>
<msg timestamp="20201110 08:36:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.543" endtime="20201110 08:36:44.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.563" endtime="20201110 08:36:44.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.565" endtime="20201110 08:36:44.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.540" endtime="20201110 08:36:44.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.538" endtime="20201110 08:36:44.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.575" endtime="20201110 08:36:44.862"></status>
</kw>
<msg timestamp="20201110 08:36:44.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.574" endtime="20201110 08:36:44.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.867" endtime="20201110 08:36:44.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.875" endtime="20201110 08:36:44.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.571" endtime="20201110 08:36:44.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.569" endtime="20201110 08:36:44.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:44.883" level="INFO">${RESULT} = [{'time': 0.021812528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.965299999999979e-05, 'source_diff': 5.965299999999979e-05}, {'time': 0.021906014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:44.879" endtime="20201110 08:36:44.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:44.897" level="INFO">${ACCURACY} = {'source_diff': [5.965299999999979e-05, 5.8749999999999775e-05, 5.9291999999998984e-05, 5.9471999999997915e-05, 5.965299999999979e-05, 5.912500000000015e-05, 5.961100000000108e-05, 5.9584000000001414e...</msg>
<status status="PASS" starttime="20201110 08:36:44.884" endtime="20201110 08:36:44.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.901" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:36:44.900" endtime="20201110 08:36:44.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.904" level="INFO">VALUE: [5.965299999999979e-05, 5.8749999999999775e-05, 5.9291999999998984e-05, 5.9471999999997915e-05, 5.965299999999979e-05, 5.912500000000015e-05, 5.961100000000108e-05, 5.9584000000001414e-05, 5.9443999999998776e-05, 5.941699999999911e-05, 5.941699999999911e-05, 5.9263999999999845e-05, 5.9457999999998346e-05, 5.9222000000001135e-05, 5.933299999999822e-05, 5.936100000000083e-05, 5.973700000000068e-05, 5.958300000000194e-05, 5.941700000000258e-05, 5.9291999999998984e-05, 5.883299999999772e-05, 5.8736000000000205e-05, 5.911100000000058e-05, 5.8791999999998484e-05, 5.905499999999883e-05, 5.884700000000076e-05, 5.947300000000086e-05, 5.9000000000000025e-05, 5.9041999999998734e-05, 5.968099999999893e-05, 5.93750000000004e-05, 5.9348000000000734e-05, 5.9236000000000705e-05, 5.965299999999979e-05, 5.8721999999997165e-05, 5.9458000000001815e-05, 5.902699999999969e-05, 5.8722000000000635e-05, 5.8985999999996985e-05, 5.9542000000002704e-05, 5.934700000000126e-05, 5.8708000000001065e-05, 5.9028000000002634e-05, 5.9041999999998734e-05, 5.88749999999999e-05, 5.8972000000000885e-05, 5.880500000000205e-05, 5.955499999999933e-05, 5.890299999999904e-05, 5.877699999999944e-05]</msg>
<status status="PASS" starttime="20201110 08:36:44.902" endtime="20201110 08:36:44.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.898" endtime="20201110 08:36:44.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.907" endtime="20201110 08:36:44.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:44.911" endtime="20201110 08:36:44.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.909" endtime="20201110 08:36:44.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.906" endtime="20201110 08:36:44.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.537" endtime="20201110 08:36:44.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.536" endtime="20201110 08:36:44.932"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.940" endtime="20201110 08:36:44.957"></status>
</kw>
<msg timestamp="20201110 08:36:44.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.939" endtime="20201110 08:36:44.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:44.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:44.959" endtime="20201110 08:36:44.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.961" endtime="20201110 08:36:44.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.936" endtime="20201110 08:36:44.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.934" endtime="20201110 08:36:44.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:44.972" endtime="20201110 08:36:45.259"></status>
</kw>
<msg timestamp="20201110 08:36:45.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:44.971" endtime="20201110 08:36:45.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021591264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.263" endtime="20201110 08:36:45.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.271" endtime="20201110 08:36:45.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.968" endtime="20201110 08:36:45.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.967" endtime="20201110 08:36:45.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.278" level="INFO">${RESULT} = [{'time': 0.021651903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.063900000000122e-05, 'source_diff': 6.063900000000122e-05}, {'time': 0.021747458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:45.275" endtime="20201110 08:36:45.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:45.292" level="INFO">${ACCURACY} = {'source_diff': [6.063900000000122e-05, 5.980499999999958e-05, 6.0194999999999e-05, 6.0291999999999984e-05, 6.0250000000001275e-05, 6.009699999999854e-05, 5.9916000000000136e-05, 6.058299999999947e-05...</msg>
<status status="PASS" starttime="20201110 08:36:45.279" endtime="20201110 08:36:45.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.296" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:36:45.295" endtime="20201110 08:36:45.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.299" level="INFO">VALUE: [6.063900000000122e-05, 5.980499999999958e-05, 6.0194999999999e-05, 6.0291999999999984e-05, 6.0250000000001275e-05, 6.009699999999854e-05, 5.9916000000000136e-05, 6.058299999999947e-05, 6.027700000000094e-05, 5.991699999999961e-05, 6.033299999999922e-05, 5.983299999999872e-05, 6.015300000000029e-05, 6.0041999999999734e-05, 6.0555999999999804e-05, 6.0514000000001095e-05, 6.029100000000051e-05, 5.995900000000179e-05, 6.040300000000054e-05, 6.006900000000287e-05, 6.0264000000000845e-05, 6.013900000000072e-05, 6.0235999999998235e-05, 6.0584000000002414e-05, 6.0028000000000165e-05, 5.9848000000001234e-05, 6.019500000000247e-05, 5.980499999999958e-05, 5.991699999999961e-05, 6.0471999999998916e-05, 6.0471999999998916e-05, 6.05689999999999e-05, 6.0014000000000595e-05, 5.9834000000001664e-05, 5.984699999999829e-05, 6.016699999999986e-05, 6.0457999999999346e-05, 6.0416000000000636e-05, 5.9848000000001234e-05, 6.066700000000036e-05, 5.991699999999961e-05, 6.0264000000000845e-05, 6.06949999999995e-05, 6.0278000000000415e-05, 5.9971999999998415e-05, 6.054099999999729e-05, 6.0471999999998916e-05, 6.018099999999943e-05, 6.0528000000000665e-05, 6.0264000000000845e-05]</msg>
<status status="PASS" starttime="20201110 08:36:45.297" endtime="20201110 08:36:45.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.293" endtime="20201110 08:36:45.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.302" endtime="20201110 08:36:45.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:45.306" endtime="20201110 08:36:45.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.304" endtime="20201110 08:36:45.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.301" endtime="20201110 08:36:45.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.933" endtime="20201110 08:36:45.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:44.932" endtime="20201110 08:36:45.327"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.335" endtime="20201110 08:36:45.353"></status>
</kw>
<msg timestamp="20201110 08:36:45.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.334" endtime="20201110 08:36:45.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.354" endtime="20201110 08:36:45.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.357" endtime="20201110 08:36:45.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.331" endtime="20201110 08:36:45.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.329" endtime="20201110 08:36:45.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.367" endtime="20201110 08:36:45.652"></status>
</kw>
<msg timestamp="20201110 08:36:45.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.365" endtime="20201110 08:36:45.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.657" endtime="20201110 08:36:45.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.665" endtime="20201110 08:36:45.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.363" endtime="20201110 08:36:45.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.361" endtime="20201110 08:36:45.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:45.678" level="INFO">${RESULT} = [{'time': 0.021917083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.17080000000006e-05, 'source_diff': 6.17080000000006e-05}, {'time': 0.022018625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:45.671" endtime="20201110 08:36:45.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:45.708" level="INFO">${ACCURACY} = {'source_diff': [6.17080000000006e-05, 6.15560000000008e-05, 6.118100000000043e-05, 6.116700000000086e-05, 6.079100000000101e-05, 6.083299999999972e-05, 6.134699999999979e-05, 6.15279999999982e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:36:45.680" endtime="20201110 08:36:45.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.717" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:36:45.715" endtime="20201110 08:36:45.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.722" level="INFO">VALUE: [6.17080000000006e-05, 6.15560000000008e-05, 6.118100000000043e-05, 6.116700000000086e-05, 6.079100000000101e-05, 6.083299999999972e-05, 6.134699999999979e-05, 6.15279999999982e-05, 6.163899999999875e-05, 6.0791999999997015e-05, 6.15140000000021e-05, 6.154200000000123e-05, 6.101300000000212e-05, 6.14019999999986e-05, 6.14300000000012e-05, 6.12360000000027e-05, 6.165299999999832e-05, 6.154200000000123e-05, 6.1013999999998125e-05, 6.109799999999901e-05, 6.122299999999914e-05, 6.091700000000061e-05, 6.162499999999918e-05, 6.109699999999954e-05, 6.093100000000018e-05, 6.147199999999992e-05, 6.109700000000301e-05, 6.15279999999982e-05, 6.090300000000104e-05, 6.148599999999949e-05, 6.137499999999893e-05, 6.109699999999954e-05, 6.152699999999872e-05, 6.08750000000019e-05, 6.116600000000139e-05, 6.117999999999749e-05, 6.142999999999774e-05, 6.130500000000108e-05, 6.141600000000164e-05, 6.137499999999893e-05, 6.116600000000139e-05, 6.165300000000179e-05, 6.097299999999889e-05, 6.155499999999786e-05, 6.147199999999992e-05, 6.155499999999786e-05, 6.147199999999992e-05, 6.111100000000258e-05, 6.13889999999985e-05, 6.122199999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:36:45.719" endtime="20201110 08:36:45.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.710" endtime="20201110 08:36:45.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.730" endtime="20201110 08:36:45.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:45.737" endtime="20201110 08:36:45.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.733" endtime="20201110 08:36:45.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.726" endtime="20201110 08:36:45.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.328" endtime="20201110 08:36:45.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.327" endtime="20201110 08:36:45.762"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.773" endtime="20201110 08:36:45.790"></status>
</kw>
<msg timestamp="20201110 08:36:45.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.772" endtime="20201110 08:36:45.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:45.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:45.792" endtime="20201110 08:36:45.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.794" endtime="20201110 08:36:45.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.769" endtime="20201110 08:36:45.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.767" endtime="20201110 08:36:45.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:45.804" endtime="20201110 08:36:46.091"></status>
</kw>
<msg timestamp="20201110 08:36:46.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028208194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:45.803" endtime="20201110 08:36:46.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028208194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028271264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.095" endtime="20201110 08:36:46.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.103" endtime="20201110 08:36:46.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.800" endtime="20201110 08:36:46.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.798" endtime="20201110 08:36:46.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.110" level="INFO">${RESULT} = [{'time': 0.028271264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.307000000000187e-05, 'source_diff': 6.307000000000187e-05}, {'time': 0.028369736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:46.107" endtime="20201110 08:36:46.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:46.123" level="INFO">${ACCURACY} = {'source_diff': [6.307000000000187e-05, 6.172200000000017e-05, 6.247200000000092e-05, 6.236100000000036e-05, 6.236100000000036e-05, 6.176399999999888e-05, 6.265299999999932e-05, 6.261099999999714e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:46.111" endtime="20201110 08:36:46.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.128" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:36:46.127" endtime="20201110 08:36:46.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.130" level="INFO">VALUE: [6.307000000000187e-05, 6.172200000000017e-05, 6.247200000000092e-05, 6.236100000000036e-05, 6.236100000000036e-05, 6.176399999999888e-05, 6.265299999999932e-05, 6.261099999999714e-05, 6.266599999999942e-05, 6.209700000000054e-05, 6.245899999999735e-05, 6.217999999999849e-05, 6.197299999999989e-05, 6.213899999999925e-05, 6.209699999999707e-05, 6.208300000000097e-05, 6.25279999999992e-05, 6.179200000000148e-05, 6.25560000000018e-05, 6.240299999999907e-05, 6.252699999999972e-05, 6.240300000000254e-05, 6.245800000000135e-05, 6.266699999999889e-05, 6.259699999999757e-05, 6.197200000000042e-05, 6.177799999999845e-05, 6.23340000000007e-05, 6.215300000000229e-05, 6.218100000000143e-05, 6.209699999999707e-05, 6.251399999999963e-05, 6.183400000000366e-05, 6.172200000000017e-05, 6.183300000000419e-05, 6.18750000000029e-05, 6.266700000000236e-05, 6.236100000000383e-05, 6.20420000000052e-05, 6.20279999999987e-05, 6.230500000000555e-05, 6.234699999999732e-05, 6.226399999999938e-05, 6.184699999999682e-05, 6.245800000000135e-05, 6.22629999999999e-05, 6.184699999999682e-05, 6.240300000000254e-05, 6.234700000000426e-05, 6.184700000000376e-05]</msg>
<status status="PASS" starttime="20201110 08:36:46.129" endtime="20201110 08:36:46.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.124" endtime="20201110 08:36:46.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.134" endtime="20201110 08:36:46.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.137" endtime="20201110 08:36:46.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.136" endtime="20201110 08:36:46.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.132" endtime="20201110 08:36:46.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.763" endtime="20201110 08:36:46.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:45.762" endtime="20201110 08:36:46.159"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.168" endtime="20201110 08:36:46.186"></status>
</kw>
<msg timestamp="20201110 08:36:46.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.167" endtime="20201110 08:36:46.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.187" endtime="20201110 08:36:46.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.189" endtime="20201110 08:36:46.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.164" endtime="20201110 08:36:46.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.162" endtime="20201110 08:36:46.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.199" endtime="20201110 08:36:46.484"></status>
</kw>
<msg timestamp="20201110 08:36:46.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023281528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.198" endtime="20201110 08:36:46.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023218125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023281528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.489" endtime="20201110 08:36:46.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.497" endtime="20201110 08:36:46.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.195" endtime="20201110 08:36:46.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.194" endtime="20201110 08:36:46.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.503" level="INFO">${RESULT} = [{'time': 0.023281528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.340300000000007e-05, 'source_diff': 6.340300000000007e-05}, {'time': 0.023386083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:46.500" endtime="20201110 08:36:46.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:46.516" level="INFO">${ACCURACY} = {'source_diff': [6.340300000000007e-05, 6.349999999999759e-05, 6.366699999999989e-05, 6.276399999999988e-05, 6.334700000000179e-05, 6.336100000000136e-05, 6.291699999999914e-05, 6.340300000000007e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:46.504" endtime="20201110 08:36:46.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.521" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:36:46.520" endtime="20201110 08:36:46.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.523" level="INFO">VALUE: [6.340300000000007e-05, 6.349999999999759e-05, 6.366699999999989e-05, 6.276399999999988e-05, 6.334700000000179e-05, 6.336100000000136e-05, 6.291699999999914e-05, 6.340300000000007e-05, 6.298600000000099e-05, 6.3582999999999e-05, 6.345800000000235e-05, 6.277799999999945e-05, 6.327799999999995e-05, 6.284699999999782e-05, 6.283300000000172e-05, 6.334700000000179e-05, 6.277799999999945e-05, 6.297200000000142e-05, 6.270900000000107e-05, 6.295900000000132e-05, 6.347300000000139e-05, 6.340300000000007e-05, 6.341699999999964e-05, 6.279199999999902e-05, 6.355599999999934e-05, 6.286200000000033e-05, 6.309800000000101e-05, 6.297200000000142e-05, 6.291699999999914e-05, 6.363899999999728e-05, 6.2889e-05, 6.273600000000074e-05, 6.329200000000298e-05, 6.272200000000117e-05, 6.318099999999896e-05, 6.363899999999728e-05, 6.32080000000021e-05, 6.30279999999997e-05, 6.286100000000086e-05, 6.276399999999988e-05, 6.334700000000179e-05, 6.280599999999859e-05, 6.345799999999888e-05, 6.326400000000038e-05, 6.327799999999995e-05, 6.309699999999807e-05, 6.315299999999982e-05, 6.354100000000029e-05, 6.304099999999979e-05, 6.365199999999738e-05]</msg>
<status status="PASS" starttime="20201110 08:36:46.522" endtime="20201110 08:36:46.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.517" endtime="20201110 08:36:46.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.534" endtime="20201110 08:36:46.535"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.537" endtime="20201110 08:36:46.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.536" endtime="20201110 08:36:46.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.532" endtime="20201110 08:36:46.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.160" endtime="20201110 08:36:46.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.160" endtime="20201110 08:36:46.558"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.567" endtime="20201110 08:36:46.584"></status>
</kw>
<msg timestamp="20201110 08:36:46.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.565" endtime="20201110 08:36:46.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.586" endtime="20201110 08:36:46.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.588" endtime="20201110 08:36:46.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.563" endtime="20201110 08:36:46.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.561" endtime="20201110 08:36:46.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.599" endtime="20201110 08:36:46.884"></status>
</kw>
<msg timestamp="20201110 08:36:46.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.597" endtime="20201110 08:36:46.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.889" endtime="20201110 08:36:46.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.897" endtime="20201110 08:36:46.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.595" endtime="20201110 08:36:46.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.593" endtime="20201110 08:36:46.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:46.903" level="INFO">${RESULT} = [{'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445799999999988e-05, 'source_diff': 6.445799999999988e-05}, {'time': 0.021825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:36:46.900" endtime="20201110 08:36:46.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:46.917" level="INFO">${ACCURACY} = {'source_diff': [6.445799999999988e-05, 6.397199999999895e-05, 6.452799999999773e-05, 6.45280000000012e-05, 6.409699999999907e-05, 6.384699999999882e-05, 6.434699999999932e-05, 6.388800000000153e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:46.904" endtime="20201110 08:36:46.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.921" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:36:46.920" endtime="20201110 08:36:46.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.924" level="INFO">VALUE: [6.445799999999988e-05, 6.397199999999895e-05, 6.452799999999773e-05, 6.45280000000012e-05, 6.409699999999907e-05, 6.384699999999882e-05, 6.434699999999932e-05, 6.388800000000153e-05, 6.438899999999803e-05, 6.458399999999948e-05, 6.444499999999978e-05, 6.377800000000045e-05, 6.416700000000039e-05, 6.433299999999975e-05, 6.413899999999778e-05, 6.454200000000077e-05, 6.405599999999984e-05, 6.465299999999785e-05, 6.390300000000057e-05, 6.379200000000002e-05, 6.409700000000254e-05, 6.40280000000007e-05, 6.39439999999998e-05, 6.433299999999975e-05, 6.391600000000067e-05, 6.436099999999889e-05, 6.448599999999902e-05, 6.40829999999995e-05, 6.377800000000045e-05, 6.422300000000214e-05, 6.42219999999992e-05, 6.466700000000089e-05, 6.447199999999945e-05, 6.398600000000199e-05, 6.44029999999976e-05, 6.44440000000003e-05, 6.408400000000244e-05, 6.415300000000082e-05, 6.431900000000018e-05, 6.454200000000077e-05, 6.416700000000039e-05, 6.40280000000007e-05, 6.43890000000015e-05, 6.447199999999945e-05, 6.369499999999903e-05, 6.447199999999945e-05, 6.377700000000097e-05, 6.397199999999895e-05, 6.4583e-05, 6.37219999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:36:46.922" endtime="20201110 08:36:46.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.918" endtime="20201110 08:36:46.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.927" endtime="20201110 08:36:46.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:46.931" endtime="20201110 08:36:46.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.929" endtime="20201110 08:36:46.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.926" endtime="20201110 08:36:46.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.559" endtime="20201110 08:36:46.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.558" endtime="20201110 08:36:46.953"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.964" endtime="20201110 08:36:46.982"></status>
</kw>
<msg timestamp="20201110 08:36:46.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.962" endtime="20201110 08:36:46.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:46.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:46.984" endtime="20201110 08:36:46.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.987" endtime="20201110 08:36:46.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.958" endtime="20201110 08:36:46.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.956" endtime="20201110 08:36:46.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:46.997" endtime="20201110 08:36:47.284"></status>
</kw>
<msg timestamp="20201110 08:36:47.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026168083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026233722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:46.996" endtime="20201110 08:36:47.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026168083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026233722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.288" endtime="20201110 08:36:47.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.296" endtime="20201110 08:36:47.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.993" endtime="20201110 08:36:47.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.991" endtime="20201110 08:36:47.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.303" level="INFO">${RESULT} = [{'time': 0.026233722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.563899999999928e-05, 'source_diff': 6.563899999999928e-05}, {'time': 0.026336222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:47.299" endtime="20201110 08:36:47.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:47.316" level="INFO">${ACCURACY} = {'source_diff': [6.563899999999928e-05, 6.519400000000106e-05, 6.55700000000009e-05, 6.536099999999989e-05, 6.556899999999796e-05, 6.50280000000017e-05, 6.52220000000002e-05, 6.468099999999699e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:36:47.304" endtime="20201110 08:36:47.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.321" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:36:47.320" endtime="20201110 08:36:47.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.323" level="INFO">VALUE: [6.563899999999928e-05, 6.519400000000106e-05, 6.55700000000009e-05, 6.536099999999989e-05, 6.556899999999796e-05, 6.50280000000017e-05, 6.52220000000002e-05, 6.468099999999699e-05, 6.534700000000032e-05, 6.491699999999767e-05, 6.548600000000002e-05, 6.515199999999888e-05, 6.545900000000035e-05, 6.523599999999977e-05, 6.57220000000007e-05, 6.55280000000022e-05, 6.511099999999964e-05, 6.565300000000232e-05, 6.55700000000009e-05, 6.5276999999999e-05, 6.50280000000017e-05, 6.483399999999973e-05, 6.552799999999873e-05, 6.47219999999997e-05, 6.494500000000028e-05, 6.549999999999959e-05, 6.487499999999896e-05, 6.505599999999737e-05, 6.540199999999913e-05, 6.547299999999992e-05, 6.50700000000004e-05, 6.515299999999835e-05, 6.558299999999753e-05, 6.519400000000106e-05, 6.487499999999896e-05, 6.483300000000025e-05, 6.477799999999798e-05, 6.54029999999986e-05, 6.490199999999863e-05, 6.4889000000002e-05, 6.540300000000207e-05, 6.484699999999982e-05, 6.547299999999992e-05, 6.516700000000139e-05, 6.533299999999728e-05, 6.491700000000114e-05, 6.488899999999853e-05, 6.46950000000035e-05, 6.477699999999503e-05, 6.509799999999955e-05]</msg>
<status status="PASS" starttime="20201110 08:36:47.322" endtime="20201110 08:36:47.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.317" endtime="20201110 08:36:47.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.327" endtime="20201110 08:36:47.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.330" endtime="20201110 08:36:47.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.329" endtime="20201110 08:36:47.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.325" endtime="20201110 08:36:47.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.954" endtime="20201110 08:36:47.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:46.954" endtime="20201110 08:36:47.351"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.360" endtime="20201110 08:36:47.377"></status>
</kw>
<msg timestamp="20201110 08:36:47.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.358" endtime="20201110 08:36:47.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.379" endtime="20201110 08:36:47.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.381" endtime="20201110 08:36:47.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.356" endtime="20201110 08:36:47.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.353" endtime="20201110 08:36:47.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.391" endtime="20201110 08:36:47.676"></status>
</kw>
<msg timestamp="20201110 08:36:47.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.389" endtime="20201110 08:36:47.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021697986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021764528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.680" endtime="20201110 08:36:47.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.688" endtime="20201110 08:36:47.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.387" endtime="20201110 08:36:47.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.385" endtime="20201110 08:36:47.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:47.695" level="INFO">${RESULT} = [{'time': 0.021764528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.654200000000277e-05, 'source_diff': 6.654200000000277e-05}, {'time': 0.021865042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:47.692" endtime="20201110 08:36:47.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:47.708" level="INFO">${ACCURACY} = {'source_diff': [6.654200000000277e-05, 6.601399999999966e-05, 6.581999999999769e-05, 6.574999999999984e-05, 6.613899999999978e-05, 6.625000000000034e-05, 6.637500000000046e-05, 6.570800000000113e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:47.696" endtime="20201110 08:36:47.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.713" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:36:47.712" endtime="20201110 08:36:47.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.715" level="INFO">VALUE: [6.654200000000277e-05, 6.601399999999966e-05, 6.581999999999769e-05, 6.574999999999984e-05, 6.613899999999978e-05, 6.625000000000034e-05, 6.637500000000046e-05, 6.570800000000113e-05, 6.569399999999809e-05, 6.60969999999976e-05, 6.65419999999993e-05, 6.62220000000012e-05, 6.602699999999975e-05, 6.59159999999992e-05, 6.570800000000113e-05, 6.602699999999975e-05, 6.584699999999735e-05, 6.600000000000009e-05, 6.662500000000071e-05, 6.613899999999978e-05, 6.662500000000071e-05, 6.645899999999788e-05, 6.656899999999896e-05, 6.605600000000184e-05, 6.651400000000016e-05, 6.65700000000019e-05, 6.630599999999862e-05, 6.633400000000123e-05, 6.569399999999809e-05, 6.573600000000027e-05, 6.62220000000012e-05, 6.597200000000095e-05, 6.587499999999996e-05, 6.633300000000175e-05, 6.661100000000114e-05, 6.65700000000019e-05, 6.658400000000148e-05, 6.627799999999948e-05, 6.636100000000089e-05, 6.620800000000163e-05, 6.626299999999696e-05, 6.666699999999942e-05, 6.644399999999884e-05, 6.57090000000006e-05, 6.62639999999999e-05, 6.659800000000105e-05, 6.6583999999998e-05, 6.608299999999803e-05, 6.633299999999828e-05, 6.638900000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:36:47.714" endtime="20201110 08:36:47.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.709" endtime="20201110 08:36:47.717"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.719" endtime="20201110 08:36:47.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:47.722" endtime="20201110 08:36:47.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.721" endtime="20201110 08:36:47.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.717" endtime="20201110 08:36:47.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.352" endtime="20201110 08:36:47.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.351" endtime="20201110 08:36:47.743"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.752" endtime="20201110 08:36:47.769"></status>
</kw>
<msg timestamp="20201110 08:36:47.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.750" endtime="20201110 08:36:47.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:47.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:47.770" endtime="20201110 08:36:47.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.773" endtime="20201110 08:36:47.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.748" endtime="20201110 08:36:47.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.745" endtime="20201110 08:36:47.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:47.783" endtime="20201110 08:36:48.069"></status>
</kw>
<msg timestamp="20201110 08:36:48.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:47.781" endtime="20201110 08:36:48.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.073" endtime="20201110 08:36:48.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.081" endtime="20201110 08:36:48.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.779" endtime="20201110 08:36:48.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.777" endtime="20201110 08:36:48.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.088" level="INFO">${RESULT} = [{'time': 0.021673347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.719399999999959e-05, 'source_diff': 6.719399999999959e-05}, {'time': 0.021789819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:48.084" endtime="20201110 08:36:48.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.101" level="INFO">${ACCURACY} = {'source_diff': [6.719399999999959e-05, 6.761099999999867e-05, 6.694399999999934e-05, 6.72220000000022e-05, 6.691699999999967e-05, 6.683400000000173e-05, 6.723600000000177e-05, 6.708299999999903e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:48.089" endtime="20201110 08:36:48.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.105" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.104" endtime="20201110 08:36:48.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.108" level="INFO">VALUE: [6.719399999999959e-05, 6.761099999999867e-05, 6.694399999999934e-05, 6.72220000000022e-05, 6.691699999999967e-05, 6.683400000000173e-05, 6.723600000000177e-05, 6.708299999999903e-05, 6.75969999999991e-05, 6.700000000000109e-05, 6.715300000000035e-05, 6.72640000000009e-05, 6.75969999999991e-05, 6.713900000000078e-05, 6.701400000000066e-05, 6.711200000000112e-05, 6.745900000000235e-05, 6.687500000000096e-05, 6.752699999999778e-05, 6.709700000000207e-05, 6.731899999999971e-05, 6.695900000000185e-05, 6.756899999999996e-05, 6.740299999999713e-05, 6.686100000000139e-05, 6.716699999999992e-05, 6.745799999999941e-05, 6.748599999999855e-05, 6.694499999999881e-05, 6.686099999999792e-05, 6.74030000000006e-05, 6.716699999999992e-05, 6.698599999999805e-05, 6.731899999999971e-05, 6.733299999999928e-05, 6.711099999999817e-05, 6.763900000000128e-05, 6.709700000000207e-05, 6.763899999999781e-05, 6.715300000000035e-05, 6.737499999999799e-05, 6.727800000000048e-05, 6.701400000000066e-05, 6.679199999999955e-05, 6.67640000000004e-05, 6.677799999999998e-05, 6.67640000000004e-05, 6.719399999999959e-05, 6.722199999999873e-05, 6.681899999999921e-05]</msg>
<status status="PASS" starttime="20201110 08:36:48.107" endtime="20201110 08:36:48.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.102" endtime="20201110 08:36:48.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.112" endtime="20201110 08:36:48.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.116" endtime="20201110 08:36:48.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.114" endtime="20201110 08:36:48.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.110" endtime="20201110 08:36:48.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.744" endtime="20201110 08:36:48.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:47.743" endtime="20201110 08:36:48.137"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.145" endtime="20201110 08:36:48.163"></status>
</kw>
<msg timestamp="20201110 08:36:48.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.144" endtime="20201110 08:36:48.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.164" endtime="20201110 08:36:48.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.167" endtime="20201110 08:36:48.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.141" endtime="20201110 08:36:48.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.139" endtime="20201110 08:36:48.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.178" endtime="20201110 08:36:48.465"></status>
</kw>
<msg timestamp="20201110 08:36:48.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.176" endtime="20201110 08:36:48.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.469" endtime="20201110 08:36:48.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.477" endtime="20201110 08:36:48.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.174" endtime="20201110 08:36:48.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.172" endtime="20201110 08:36:48.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.484" level="INFO">${RESULT} = [{'time': 0.021732194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.826299999999896e-05, 'source_diff': 6.826299999999896e-05}, {'time': 0.021842681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:48.480" endtime="20201110 08:36:48.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.497" level="INFO">${ACCURACY} = {'source_diff': [6.826299999999896e-05, 6.797299999999895e-05, 6.845800000000041e-05, 6.862499999999924e-05, 6.799999999999862e-05, 6.8584e-05, 6.781900000000021e-05, 6.786099999999892e-05, 6.81810000...</msg>
<status status="PASS" starttime="20201110 08:36:48.485" endtime="20201110 08:36:48.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.501" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.500" endtime="20201110 08:36:48.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.504" level="INFO">VALUE: [6.826299999999896e-05, 6.797299999999895e-05, 6.845800000000041e-05, 6.862499999999924e-05, 6.799999999999862e-05, 6.8584e-05, 6.781900000000021e-05, 6.786099999999892e-05, 6.818100000000049e-05, 6.788899999999806e-05, 6.781900000000021e-05, 6.805499999999742e-05, 6.862499999999924e-05, 6.8277000000002e-05, 6.775000000000184e-05, 6.777699999999803e-05, 6.824999999999887e-05, 6.795899999999938e-05, 6.827799999999801e-05, 6.770799999999966e-05, 6.770899999999913e-05, 6.838899999999856e-05, 6.79030000000011e-05, 6.862499999999924e-05, 6.769500000000303e-05, 6.855500000000139e-05, 6.812500000000221e-05, 6.865300000000185e-05, 6.861099999999967e-05, 6.844400000000084e-05, 6.830600000000062e-05, 6.800000000000209e-05, 6.788899999999806e-05, 6.827800000000148e-05, 6.788900000000153e-05, 6.800000000000209e-05, 6.80969999999996e-05, 6.794499999999981e-05, 6.826399999999844e-05, 6.819400000000059e-05, 6.824999999999887e-05, 6.781999999999969e-05, 6.787499999999849e-05, 6.844400000000084e-05, 6.772199999999923e-05, 6.848599999999955e-05, 6.801399999999819e-05, 6.820899999999963e-05, 6.845799999999694e-05, 6.819399999999712e-05]</msg>
<status status="PASS" starttime="20201110 08:36:48.503" endtime="20201110 08:36:48.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.498" endtime="20201110 08:36:48.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.507" endtime="20201110 08:36:48.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.511" endtime="20201110 08:36:48.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.509" endtime="20201110 08:36:48.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.506" endtime="20201110 08:36:48.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.138" endtime="20201110 08:36:48.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.137" endtime="20201110 08:36:48.532"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.540" endtime="20201110 08:36:48.558"></status>
</kw>
<msg timestamp="20201110 08:36:48.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.539" endtime="20201110 08:36:48.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.559" endtime="20201110 08:36:48.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.562" endtime="20201110 08:36:48.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.536" endtime="20201110 08:36:48.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.534" endtime="20201110 08:36:48.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.571" endtime="20201110 08:36:48.857"></status>
</kw>
<msg timestamp="20201110 08:36:48.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.570" endtime="20201110 08:36:48.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021608347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.861" endtime="20201110 08:36:48.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.869" endtime="20201110 08:36:48.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.567" endtime="20201110 08:36:48.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.566" endtime="20201110 08:36:48.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:48.876" level="INFO">${RESULT} = [{'time': 0.021678042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.969500000000156e-05, 'source_diff': 6.969500000000156e-05}, {'time': 0.021784542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:48.872" endtime="20201110 08:36:48.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:48.889" level="INFO">${ACCURACY} = {'source_diff': [6.969500000000156e-05, 6.918100000000149e-05, 6.888899999999906e-05, 6.874999999999937e-05, 6.945900000000088e-05, 6.890299999999863e-05, 6.909699999999713e-05, 6.956999999999797e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:48.877" endtime="20201110 08:36:48.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.893" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:36:48.892" endtime="20201110 08:36:48.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.896" level="INFO">VALUE: [6.969500000000156e-05, 6.918100000000149e-05, 6.888899999999906e-05, 6.874999999999937e-05, 6.945900000000088e-05, 6.890299999999863e-05, 6.909699999999713e-05, 6.956999999999797e-05, 6.919400000000159e-05, 6.916599999999898e-05, 6.932000000000119e-05, 6.936100000000042e-05, 6.94299999999988e-05, 6.874999999999937e-05, 6.87229999999997e-05, 6.880499999999817e-05, 6.876399999999894e-05, 6.89299999999983e-05, 6.894500000000081e-05, 6.87640000000024e-05, 6.89030000000021e-05, 6.930499999999867e-05, 6.918099999999802e-05, 6.90559999999979e-05, 6.924999999999987e-05, 6.901399999999919e-05, 6.923699999999977e-05, 6.897200000000048e-05, 6.954199999999883e-05, 6.937499999999999e-05, 6.922200000000073e-05, 6.865299999999838e-05, 6.924999999999987e-05, 6.874999999999937e-05, 6.895900000000038e-05, 6.938899999999956e-05, 6.901299999999971e-05, 6.962500000000024e-05, 6.920800000000116e-05, 6.913899999999931e-05, 6.962500000000024e-05, 6.926399999999944e-05, 6.883300000000078e-05, 6.913899999999931e-05, 6.874999999999937e-05, 6.95559999999984e-05, 6.887499999999949e-05, 6.958300000000153e-05, 6.951300000000021e-05, 6.894400000000134e-05]</msg>
<status status="PASS" starttime="20201110 08:36:48.894" endtime="20201110 08:36:48.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.890" endtime="20201110 08:36:48.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.899" endtime="20201110 08:36:48.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:48.903" endtime="20201110 08:36:48.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.901" endtime="20201110 08:36:48.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.898" endtime="20201110 08:36:48.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.533" endtime="20201110 08:36:48.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.532" endtime="20201110 08:36:48.924"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.932" endtime="20201110 08:36:48.950"></status>
</kw>
<msg timestamp="20201110 08:36:48.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.931" endtime="20201110 08:36:48.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:48.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:48.951" endtime="20201110 08:36:48.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.954" endtime="20201110 08:36:48.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.928" endtime="20201110 08:36:48.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.926" endtime="20201110 08:36:48.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:48.963" endtime="20201110 08:36:49.249"></status>
</kw>
<msg timestamp="20201110 08:36:49.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:48.962" endtime="20201110 08:36:49.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.254" endtime="20201110 08:36:49.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.262" endtime="20201110 08:36:49.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.959" endtime="20201110 08:36:49.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.958" endtime="20201110 08:36:49.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.268" level="INFO">${RESULT} = [{'time': 0.021698236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.05689999999995e-05, 'source_diff': 7.05689999999995e-05}, {'time': 0.021810722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:49.265" endtime="20201110 08:36:49.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:49.282" level="INFO">${ACCURACY} = {'source_diff': [7.05689999999995e-05, 7.050000000000112e-05, 7.043099999999927e-05, 6.97360000000008e-05, 7.058299999999906e-05, 7.020799999999869e-05, 7.013900000000031e-05, 7.037500000000099e-05, 6...</msg>
<status status="PASS" starttime="20201110 08:36:49.269" endtime="20201110 08:36:49.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.286" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:36:49.285" endtime="20201110 08:36:49.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.289" level="INFO">VALUE: [7.05689999999995e-05, 7.050000000000112e-05, 7.043099999999927e-05, 6.97360000000008e-05, 7.058299999999906e-05, 7.020799999999869e-05, 7.013900000000031e-05, 7.037500000000099e-05, 6.967999999999905e-05, 6.975000000000037e-05, 6.97360000000008e-05, 7.045900000000188e-05, 7.045799999999894e-05, 7.017999999999955e-05, 6.97360000000008e-05, 7.050000000000112e-05, 6.987500000000049e-05, 7.051400000000069e-05, 7.012499999999727e-05, 7.000000000000062e-05, 7.019399999999912e-05, 6.970899999999766e-05, 6.987500000000049e-05, 7.002699999999681e-05, 7.029199999999958e-05, 7.036099999999795e-05, 7.044499999999884e-05, 6.966699999999895e-05, 6.975000000000037e-05, 6.986100000000092e-05, 6.981999999999822e-05, 7.04169999999997e-05, 7.019399999999912e-05, 7.062500000000124e-05, 7.044499999999884e-05, 7.033300000000228e-05, 7.050000000000112e-05, 6.969399999999862e-05, 6.968099999999852e-05, 6.969399999999862e-05, 7.012500000000074e-05, 7.008300000000203e-05, 6.988800000000059e-05, 7.051400000000069e-05, 7.002799999999976e-05, 7.019399999999912e-05, 7.001400000000019e-05, 7.04299999999998e-05, 7.031900000000271e-05, 6.977700000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:36:49.287" endtime="20201110 08:36:49.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.283" endtime="20201110 08:36:49.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.292" endtime="20201110 08:36:49.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.296" endtime="20201110 08:36:49.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.294" endtime="20201110 08:36:49.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.291" endtime="20201110 08:36:49.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.924" endtime="20201110 08:36:49.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:48.924" endtime="20201110 08:36:49.317"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.325" endtime="20201110 08:36:49.343"></status>
</kw>
<msg timestamp="20201110 08:36:49.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.324" endtime="20201110 08:36:49.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.344" endtime="20201110 08:36:49.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.347" endtime="20201110 08:36:49.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.321" endtime="20201110 08:36:49.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.319" endtime="20201110 08:36:49.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.357" endtime="20201110 08:36:49.642"></status>
</kw>
<msg timestamp="20201110 08:36:49.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.355" endtime="20201110 08:36:49.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.647" endtime="20201110 08:36:49.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.655" endtime="20201110 08:36:49.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.353" endtime="20201110 08:36:49.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.351" endtime="20201110 08:36:49.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:49.663" level="INFO">${RESULT} = [{'time': 0.021605097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.136099999999895e-05, 'source_diff': 7.136099999999895e-05}, {'time': 0.021719569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:49.660" endtime="20201110 08:36:49.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:49.677" level="INFO">${ACCURACY} = {'source_diff': [7.136099999999895e-05, 7.105500000000042e-05, 7.149999999999865e-05, 7.088900000000106e-05, 7.080500000000017e-05, 7.112500000000174e-05, 7.095899999999891e-05, 7.130500000000067e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:49.664" endtime="20201110 08:36:49.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.682" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:36:49.681" endtime="20201110 08:36:49.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.686" level="INFO">VALUE: [7.136099999999895e-05, 7.105500000000042e-05, 7.149999999999865e-05, 7.088900000000106e-05, 7.080500000000017e-05, 7.112500000000174e-05, 7.095899999999891e-05, 7.130500000000067e-05, 7.093099999999977e-05, 7.087500000000149e-05, 7.162500000000224e-05, 7.075000000000137e-05, 7.12360000000023e-05, 7.101399999999772e-05, 7.143100000000027e-05, 7.068099999999952e-05, 7.087499999999802e-05, 7.101399999999772e-05, 7.097300000000195e-05, 7.086099999999845e-05, 7.120799999999969e-05, 7.112500000000174e-05, 7.119400000000012e-05, 7.112500000000174e-05, 7.156999999999997e-05, 7.083300000000278e-05, 7.09300000000003e-05, 7.094399999999987e-05, 7.081899999999974e-05, 7.076400000000094e-05, 7.148599999999908e-05, 7.106999999999947e-05, 7.100000000000162e-05, 7.156899999999702e-05, 7.14170000000007e-05, 7.070800000000266e-05, 7.115199999999794e-05, 7.151399999999822e-05, 7.163900000000181e-05, 7.137499999999852e-05, 7.145799999999994e-05, 7.137500000000199e-05, 7.119499999999959e-05, 7.076400000000094e-05, 7.147199999999951e-05, 7.088900000000106e-05, 7.163900000000181e-05, 7.087499999999802e-05, 7.070799999999919e-05, 7.15829999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:36:49.684" endtime="20201110 08:36:49.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.678" endtime="20201110 08:36:49.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.691" endtime="20201110 08:36:49.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:49.696" endtime="20201110 08:36:49.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.693" endtime="20201110 08:36:49.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.689" endtime="20201110 08:36:49.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.318" endtime="20201110 08:36:49.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.317" endtime="20201110 08:36:49.717"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.725" endtime="20201110 08:36:49.743"></status>
</kw>
<msg timestamp="20201110 08:36:49.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.724" endtime="20201110 08:36:49.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:49.744" endtime="20201110 08:36:49.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.747" endtime="20201110 08:36:49.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.721" endtime="20201110 08:36:49.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.719" endtime="20201110 08:36:49.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:49.758" endtime="20201110 08:36:50.043"></status>
</kw>
<msg timestamp="20201110 08:36:50.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:49.756" endtime="20201110 08:36:50.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021640139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.047" endtime="20201110 08:36:50.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.056" endtime="20201110 08:36:50.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.754" endtime="20201110 08:36:50.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.752" endtime="20201110 08:36:50.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.062" level="INFO">${RESULT} = [{'time': 0.021712486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.234700000000038e-05, 'source_diff': 7.234700000000038e-05}, {'time': 0.021830944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:50.059" endtime="20201110 08:36:50.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.076" level="INFO">${ACCURACY} = {'source_diff': [7.234700000000038e-05, 7.262499999999977e-05, 7.229199999999811e-05, 7.19170000000012e-05, 7.220800000000069e-05, 7.173599999999933e-05, 7.181900000000074e-05, 7.249999999999965e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:50.063" endtime="20201110 08:36:50.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.080" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.079" endtime="20201110 08:36:50.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.083" level="INFO">VALUE: [7.234700000000038e-05, 7.262499999999977e-05, 7.229199999999811e-05, 7.19170000000012e-05, 7.220800000000069e-05, 7.173599999999933e-05, 7.181900000000074e-05, 7.249999999999965e-05, 7.232000000000072e-05, 7.176400000000194e-05, 7.230599999999768e-05, 7.173599999999933e-05, 7.22910000000021e-05, 7.229200000000158e-05, 7.186099999999945e-05, 7.201399999999872e-05, 7.227799999999854e-05, 7.249999999999965e-05, 7.242999999999833e-05, 7.216700000000145e-05, 7.227799999999854e-05, 7.195800000000044e-05, 7.198599999999958e-05, 7.184699999999988e-05, 7.212499999999927e-05, 7.220800000000069e-05, 7.168100000000052e-05, 7.212499999999927e-05, 7.182000000000022e-05, 7.236099999999995e-05, 7.240299999999866e-05, 7.236099999999995e-05, 7.184799999999936e-05, 7.173599999999933e-05, 7.187499999999902e-05, 7.168100000000052e-05, 7.252699999999931e-05, 7.19300000000013e-05, 7.199999999999915e-05, 7.231999999999725e-05, 7.172199999999976e-05, 7.219500000000059e-05, 7.202799999999829e-05, 7.191600000000173e-05, 7.179199999999761e-05, 7.216700000000145e-05, 7.202799999999829e-05, 7.168099999999705e-05, 7.230600000000115e-05, 7.199999999999915e-05]</msg>
<status status="PASS" starttime="20201110 08:36:50.081" endtime="20201110 08:36:50.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.077" endtime="20201110 08:36:50.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.086" endtime="20201110 08:36:50.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.090" endtime="20201110 08:36:50.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.088" endtime="20201110 08:36:50.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.084" endtime="20201110 08:36:50.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.718" endtime="20201110 08:36:50.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.717" endtime="20201110 08:36:50.110"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.119" endtime="20201110 08:36:50.137"></status>
</kw>
<msg timestamp="20201110 08:36:50.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.117" endtime="20201110 08:36:50.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.138" endtime="20201110 08:36:50.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.141" endtime="20201110 08:36:50.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.115" endtime="20201110 08:36:50.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.113" endtime="20201110 08:36:50.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.152" endtime="20201110 08:36:50.437"></status>
</kw>
<msg timestamp="20201110 08:36:50.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.150" endtime="20201110 08:36:50.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.442" endtime="20201110 08:36:50.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.450" endtime="20201110 08:36:50.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.147" endtime="20201110 08:36:50.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.145" endtime="20201110 08:36:50.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.456" level="INFO">${RESULT} = [{'time': 0.021628708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.367999999999958e-05, 'source_diff': 7.367999999999958e-05}, {'time': 0.021753167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:50.453" endtime="20201110 08:36:50.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.470" level="INFO">${ACCURACY} = {'source_diff': [7.367999999999958e-05, 7.34309999999988e-05, 7.3069000000002e-05, 7.3069000000002e-05, 7.292999999999883e-05, 7.340299999999966e-05, 7.287500000000002e-05, 7.33049999999992e-05, 7.286...</msg>
<status status="PASS" starttime="20201110 08:36:50.457" endtime="20201110 08:36:50.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.474" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.473" endtime="20201110 08:36:50.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.476" level="INFO">VALUE: [7.367999999999958e-05, 7.34309999999988e-05, 7.3069000000002e-05, 7.3069000000002e-05, 7.292999999999883e-05, 7.340299999999966e-05, 7.287500000000002e-05, 7.33049999999992e-05, 7.286099999999698e-05, 7.31110000000007e-05, 7.280600000000165e-05, 7.300000000000015e-05, 7.36110000000012e-05, 7.295900000000091e-05, 7.301399999999972e-05, 7.305599999999843e-05, 7.317999999999908e-05, 7.337500000000052e-05, 7.323599999999736e-05, 7.331900000000224e-05, 7.337500000000052e-05, 7.283400000000079e-05, 7.34309999999988e-05, 7.336100000000095e-05, 7.304199999999886e-05, 7.319500000000159e-05, 7.272200000000076e-05, 7.340299999999966e-05, 7.336100000000095e-05, 7.305500000000242e-05, 7.359800000000111e-05, 7.272200000000076e-05, 7.34309999999988e-05, 7.283299999999784e-05, 7.273600000000033e-05, 7.359699999999816e-05, 7.276399999999947e-05, 7.27910000000026e-05, 7.266699999999848e-05, 7.300000000000015e-05, 7.318099999999855e-05, 7.272200000000076e-05, 7.269399999999815e-05, 7.337500000000052e-05, 7.337500000000052e-05, 7.279099999999913e-05, 7.307000000000147e-05, 7.27499999999999e-05, 7.357000000000197e-05, 7.309700000000113e-05]</msg>
<status status="PASS" starttime="20201110 08:36:50.475" endtime="20201110 08:36:50.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.470" endtime="20201110 08:36:50.478"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.480" endtime="20201110 08:36:50.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.483" endtime="20201110 08:36:50.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.482" endtime="20201110 08:36:50.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.478" endtime="20201110 08:36:50.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.111" endtime="20201110 08:36:50.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.111" endtime="20201110 08:36:50.504"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.513" endtime="20201110 08:36:50.530"></status>
</kw>
<msg timestamp="20201110 08:36:50.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.511" endtime="20201110 08:36:50.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.532" endtime="20201110 08:36:50.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.534" endtime="20201110 08:36:50.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.509" endtime="20201110 08:36:50.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.507" endtime="20201110 08:36:50.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.544" endtime="20201110 08:36:50.830"></status>
</kw>
<msg timestamp="20201110 08:36:50.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.543" endtime="20201110 08:36:50.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021552069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.834" endtime="20201110 08:36:50.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.843" endtime="20201110 08:36:50.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.540" endtime="20201110 08:36:50.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.539" endtime="20201110 08:36:50.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:50.849" level="INFO">${RESULT} = [{'time': 0.021626236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416699999999998e-05, 'source_diff': 7.416699999999998e-05}, {'time': 0.021751653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:50.846" endtime="20201110 08:36:50.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:50.863" level="INFO">${ACCURACY} = {'source_diff': [7.416699999999998e-05, 7.455599999999993e-05, 7.399999999999768e-05, 7.398600000000158e-05, 7.461099999999873e-05, 7.404199999999986e-05, 7.46110000000022e-05, 7.397299999999801e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:50.850" endtime="20201110 08:36:50.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.867" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:36:50.866" endtime="20201110 08:36:50.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.870" level="INFO">VALUE: [7.416699999999998e-05, 7.455599999999993e-05, 7.399999999999768e-05, 7.398600000000158e-05, 7.461099999999873e-05, 7.404199999999986e-05, 7.46110000000022e-05, 7.397299999999801e-05, 7.422199999999879e-05, 7.391699999999973e-05, 7.38049999999997e-05, 7.366699999999948e-05, 7.411099999999823e-05, 7.380600000000265e-05, 7.391699999999973e-05, 7.386100000000145e-05, 7.379099999999666e-05, 7.429200000000011e-05, 7.397200000000201e-05, 7.388900000000059e-05, 7.426400000000097e-05, 7.368099999999905e-05, 7.423599999999836e-05, 7.366699999999948e-05, 7.368099999999905e-05, 7.46110000000022e-05, 7.372199999999829e-05, 7.430499999999673e-05, 7.383299999999884e-05, 7.454200000000036e-05, 7.409700000000213e-05, 7.372199999999829e-05, 7.438800000000162e-05, 7.400000000000115e-05, 7.377700000000056e-05, 7.426400000000097e-05, 7.430600000000315e-05, 7.412500000000127e-05, 7.373599999999786e-05, 7.41110000000017e-05, 7.400000000000115e-05, 7.409699999999866e-05, 7.392999999999983e-05, 7.455599999999993e-05, 7.423599999999836e-05, 7.436199999999796e-05, 7.412500000000127e-05, 7.405499999999995e-05, 7.436099999999848e-05, 7.40829999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:36:50.868" endtime="20201110 08:36:50.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.863" endtime="20201110 08:36:50.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.873" endtime="20201110 08:36:50.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:50.877" endtime="20201110 08:36:50.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.875" endtime="20201110 08:36:50.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.871" endtime="20201110 08:36:50.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.505" endtime="20201110 08:36:50.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.505" endtime="20201110 08:36:50.898"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.906" endtime="20201110 08:36:50.924"></status>
</kw>
<msg timestamp="20201110 08:36:50.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.904" endtime="20201110 08:36:50.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:50.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:50.925" endtime="20201110 08:36:50.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.928" endtime="20201110 08:36:50.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.902" endtime="20201110 08:36:50.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.900" endtime="20201110 08:36:50.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:50.938" endtime="20201110 08:36:51.223"></status>
</kw>
<msg timestamp="20201110 08:36:51.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:50.936" endtime="20201110 08:36:51.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.228" endtime="20201110 08:36:51.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.236" endtime="20201110 08:36:51.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.933" endtime="20201110 08:36:51.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.932" endtime="20201110 08:36:51.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.242" level="INFO">${RESULT} = [{'time': 0.021771278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597200000000054e-05, 'source_diff': 7.597200000000054e-05}, {'time': 0.021882778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:51.239" endtime="20201110 08:36:51.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:51.255" level="INFO">${ACCURACY} = {'source_diff': [7.597200000000054e-05, 7.524999999999893e-05, 7.56249999999993e-05, 7.504200000000086e-05, 7.488899999999812e-05, 7.516599999999804e-05, 7.504200000000086e-05, 7.54029999999982e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:51.243" endtime="20201110 08:36:51.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.260" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:36:51.259" endtime="20201110 08:36:51.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.262" level="INFO">VALUE: [7.597200000000054e-05, 7.524999999999893e-05, 7.56249999999993e-05, 7.504200000000086e-05, 7.488899999999812e-05, 7.516599999999804e-05, 7.504200000000086e-05, 7.54029999999982e-05, 7.53890000000021e-05, 7.473599999999886e-05, 7.540300000000166e-05, 7.473599999999886e-05, 7.554100000000188e-05, 7.548699999999908e-05, 7.534699999999991e-05, 7.55830000000006e-05, 7.543000000000133e-05, 7.551399999999875e-05, 7.502700000000181e-05, 7.504200000000086e-05, 7.468100000000005e-05, 7.555500000000145e-05, 7.559799999999964e-05, 7.533399999999982e-05, 7.466700000000048e-05, 7.556900000000102e-05, 7.511099999999923e-05, 7.554200000000136e-05, 7.511099999999923e-05, 7.554199999999789e-05, 7.484699999999941e-05, 7.520899999999969e-05, 7.502799999999782e-05, 7.536200000000243e-05, 7.51249999999988e-05, 7.472200000000276e-05, 7.561099999999973e-05, 7.548599999999961e-05, 7.530600000000068e-05, 7.545899999999994e-05, 7.522199999999979e-05, 7.466700000000048e-05, 7.527799999999807e-05, 7.554100000000188e-05, 7.491699999999726e-05, 7.559700000000016e-05, 7.548699999999908e-05, 7.559700000000016e-05, 7.548599999999961e-05, 7.554099999999841e-05]</msg>
<status status="PASS" starttime="20201110 08:36:51.261" endtime="20201110 08:36:51.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.256" endtime="20201110 08:36:51.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.266" endtime="20201110 08:36:51.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.269" endtime="20201110 08:36:51.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.268" endtime="20201110 08:36:51.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.264" endtime="20201110 08:36:51.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.898" endtime="20201110 08:36:51.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:50.898" endtime="20201110 08:36:51.290"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.299" endtime="20201110 08:36:51.317"></status>
</kw>
<msg timestamp="20201110 08:36:51.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.297" endtime="20201110 08:36:51.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.318" endtime="20201110 08:36:51.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.321" endtime="20201110 08:36:51.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.295" endtime="20201110 08:36:51.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.293" endtime="20201110 08:36:51.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.331" endtime="20201110 08:36:51.617"></status>
</kw>
<msg timestamp="20201110 08:36:51.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.330" endtime="20201110 08:36:51.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.621" endtime="20201110 08:36:51.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.629" endtime="20201110 08:36:51.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.327" endtime="20201110 08:36:51.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.326" endtime="20201110 08:36:51.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:51.636" level="INFO">${RESULT} = [{'time': 0.021740444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.70830000000021e-05, 'source_diff': 7.70830000000021e-05}, {'time': 0.021855889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:51.632" endtime="20201110 08:36:51.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:51.649" level="INFO">${ACCURACY} = {'source_diff': [7.70830000000021e-05, 7.629199999999864e-05, 7.611100000000023e-05, 7.609799999999667e-05, 7.609800000000014e-05, 7.654099999999942e-05, 7.643099999999833e-05, 7.659700000000116e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:51.637" endtime="20201110 08:36:51.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.654" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:36:51.653" endtime="20201110 08:36:51.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.656" level="INFO">VALUE: [7.70830000000021e-05, 7.629199999999864e-05, 7.611100000000023e-05, 7.609799999999667e-05, 7.609800000000014e-05, 7.654099999999942e-05, 7.643099999999833e-05, 7.659700000000116e-05, 7.566700000000148e-05, 7.636100000000048e-05, 7.661200000000021e-05, 7.61249999999998e-05, 7.63189999999983e-05, 7.568100000000105e-05, 7.641700000000223e-05, 7.63189999999983e-05, 7.636199999999996e-05, 7.579099999999866e-05, 7.629199999999864e-05, 7.601400000000272e-05, 7.616700000000198e-05, 7.611100000000023e-05, 7.648600000000061e-05, 7.590300000000216e-05, 7.629099999999917e-05, 7.638899999999962e-05, 7.602799999999882e-05, 7.648600000000061e-05, 7.566700000000148e-05, 7.573599999999986e-05, 7.59310000000013e-05, 7.637500000000005e-05, 7.647199999999757e-05, 7.661099999999726e-05, 7.620800000000122e-05, 7.656899999999855e-05, 7.634700000000091e-05, 7.655600000000193e-05, 7.64029999999992e-05, 7.598600000000011e-05, 7.573599999999986e-05, 7.591700000000173e-05, 7.650000000000018e-05, 7.565299999999844e-05, 7.567999999999811e-05, 7.601400000000272e-05, 7.624999999999993e-05, 7.647199999999757e-05, 7.647300000000051e-05, 7.648600000000061e-05]</msg>
<status status="PASS" starttime="20201110 08:36:51.655" endtime="20201110 08:36:51.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.650" endtime="20201110 08:36:51.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.660" endtime="20201110 08:36:51.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:51.663" endtime="20201110 08:36:51.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.661" endtime="20201110 08:36:51.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.658" endtime="20201110 08:36:51.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.291" endtime="20201110 08:36:51.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.291" endtime="20201110 08:36:51.684"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.692" endtime="20201110 08:36:51.710"></status>
</kw>
<msg timestamp="20201110 08:36:51.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.691" endtime="20201110 08:36:51.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:51.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:51.712" endtime="20201110 08:36:51.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.714" endtime="20201110 08:36:51.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.688" endtime="20201110 08:36:51.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.686" endtime="20201110 08:36:51.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:51.724" endtime="20201110 08:36:52.009"></status>
</kw>
<msg timestamp="20201110 08:36:52.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:51.723" endtime="20201110 08:36:52.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.013" endtime="20201110 08:36:52.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.021" endtime="20201110 08:36:52.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.720" endtime="20201110 08:36:52.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.718" endtime="20201110 08:36:52.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.028" level="INFO">${RESULT} = [{'time': 0.021691403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.801400000000125e-05, 'source_diff': 7.801400000000125e-05}, {'time': 0.021805861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:52.024" endtime="20201110 08:36:52.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:52.041" level="INFO">${ACCURACY} = {'source_diff': [7.801400000000125e-05, 7.715299999999994e-05, 7.702799999999982e-05, 7.741600000000029e-05, 7.747300000000151e-05, 7.748599999999814e-05, 7.665299999999944e-05, 7.741699999999976e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:52.029" endtime="20201110 08:36:52.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.046" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:36:52.045" endtime="20201110 08:36:52.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.048" level="INFO">VALUE: [7.801400000000125e-05, 7.715299999999994e-05, 7.702799999999982e-05, 7.741600000000029e-05, 7.747300000000151e-05, 7.748599999999814e-05, 7.665299999999944e-05, 7.741699999999976e-05, 7.709799999999767e-05, 7.71380000000009e-05, 7.733400000000182e-05, 7.694399999999893e-05, 7.74030000000002e-05, 7.76389999999974e-05, 7.691699999999926e-05, 7.665299999999944e-05, 7.704099999999992e-05, 7.719399999999918e-05, 7.723600000000136e-05, 7.672199999999782e-05, 7.691699999999926e-05, 7.723600000000136e-05, 7.665299999999944e-05, 7.719500000000212e-05, 7.691699999999926e-05, 7.69029999999997e-05, 7.737500000000105e-05, 7.70830000000021e-05, 7.69029999999997e-05, 7.747199999999857e-05, 7.709799999999767e-05, 7.663899999999987e-05, 7.670799999999825e-05, 7.737500000000105e-05, 7.752800000000032e-05, 7.665299999999944e-05, 7.72640000000005e-05, 7.701400000000025e-05, 7.691699999999926e-05, 7.705600000000243e-05, 7.698600000000111e-05, 7.677799999999957e-05, 7.69579999999985e-05, 7.738900000000062e-05, 7.727800000000007e-05, 7.698600000000111e-05, 7.75839999999986e-05, 7.715299999999994e-05, 7.666600000000301e-05, 7.751400000000075e-05]</msg>
<status status="PASS" starttime="20201110 08:36:52.047" endtime="20201110 08:36:52.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.042" endtime="20201110 08:36:52.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.052" endtime="20201110 08:36:52.053"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.055" endtime="20201110 08:36:52.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.053" endtime="20201110 08:36:52.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.050" endtime="20201110 08:36:52.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.685" endtime="20201110 08:36:52.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:51.684" endtime="20201110 08:36:52.076"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.084" endtime="20201110 08:36:52.102"></status>
</kw>
<msg timestamp="20201110 08:36:52.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.083" endtime="20201110 08:36:52.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.104" endtime="20201110 08:36:52.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.106" endtime="20201110 08:36:52.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.080" endtime="20201110 08:36:52.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.078" endtime="20201110 08:36:52.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.116" endtime="20201110 08:36:52.402"></status>
</kw>
<msg timestamp="20201110 08:36:52.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.115" endtime="20201110 08:36:52.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021744014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.406" endtime="20201110 08:36:52.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.414" endtime="20201110 08:36:52.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.112" endtime="20201110 08:36:52.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.110" endtime="20201110 08:36:52.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.420" level="INFO">${RESULT} = [{'time': 0.021744014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.84449999999999e-05, 'source_diff': 7.84449999999999e-05}, {'time': 0.021862542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:52.417" endtime="20201110 08:36:52.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:52.434" level="INFO">${ACCURACY} = {'source_diff': [7.84449999999999e-05, 7.823599999999889e-05, 7.777800000000057e-05, 7.766700000000001e-05, 7.851399999999828e-05, 7.812499999999833e-05, 7.78189999999998e-05, 7.837499999999858e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:52.421" endtime="20201110 08:36:52.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.438" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:36:52.437" endtime="20201110 08:36:52.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.441" level="INFO">VALUE: [7.84449999999999e-05, 7.823599999999889e-05, 7.777800000000057e-05, 7.766700000000001e-05, 7.851399999999828e-05, 7.812499999999833e-05, 7.78189999999998e-05, 7.837499999999858e-05, 7.819400000000018e-05, 7.779200000000014e-05, 7.808299999999962e-05, 7.833399999999935e-05, 7.770799999999925e-05, 7.842999999999739e-05, 7.76250000000013e-05, 7.857000000000003e-05, 7.843000000000086e-05, 7.811099999999876e-05, 7.79449999999994e-05, 7.833299999999987e-05, 7.809799999999867e-05, 7.834699999999944e-05, 7.8458e-05, 7.763900000000087e-05, 7.841600000000129e-05, 7.827800000000107e-05, 7.820899999999922e-05, 7.79030000000007e-05, 7.816700000000051e-05, 7.784699999999894e-05, 7.843000000000086e-05, 7.82640000000015e-05, 7.775000000000143e-05, 7.777800000000057e-05, 7.790200000000122e-05, 7.808299999999962e-05, 7.783299999999937e-05, 7.834699999999944e-05, 7.845899999999947e-05, 7.81389999999979e-05, 7.816700000000051e-05, 7.836099999999901e-05, 7.840299999999772e-05, 7.816600000000104e-05, 7.784799999999842e-05, 7.854100000000142e-05, 7.829200000000064e-05, 7.852799999999785e-05, 7.79579999999995e-05, 7.838899999999815e-05]</msg>
<status status="PASS" starttime="20201110 08:36:52.439" endtime="20201110 08:36:52.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.435" endtime="20201110 08:36:52.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.444" endtime="20201110 08:36:52.445"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.448" endtime="20201110 08:36:52.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.446" endtime="20201110 08:36:52.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.443" endtime="20201110 08:36:52.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.077" endtime="20201110 08:36:52.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.076" endtime="20201110 08:36:52.468"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.477" endtime="20201110 08:36:52.495"></status>
</kw>
<msg timestamp="20201110 08:36:52.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.475" endtime="20201110 08:36:52.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.496" endtime="20201110 08:36:52.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.499" endtime="20201110 08:36:52.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.473" endtime="20201110 08:36:52.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.471" endtime="20201110 08:36:52.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.509" endtime="20201110 08:36:52.794"></status>
</kw>
<msg timestamp="20201110 08:36:52.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.507" endtime="20201110 08:36:52.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.798" endtime="20201110 08:36:52.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.806" endtime="20201110 08:36:52.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.505" endtime="20201110 08:36:52.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.503" endtime="20201110 08:36:52.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:52.813" level="INFO">${RESULT} = [{'time': 0.021657694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.93190000000013e-05, 'source_diff': 7.93190000000013e-05}, {'time': 0.021781125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:52.809" endtime="20201110 08:36:52.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:52.826" level="INFO">${ACCURACY} = {'source_diff': [7.93190000000013e-05, 7.924999999999946e-05, 7.961100000000026e-05, 7.929199999999817e-05, 7.888900000000212e-05, 7.934799999999992e-05, 7.884699999999994e-05, 7.954200000000189e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:52.814" endtime="20201110 08:36:52.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.830" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:36:52.829" endtime="20201110 08:36:52.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.833" level="INFO">VALUE: [7.93190000000013e-05, 7.924999999999946e-05, 7.961100000000026e-05, 7.929199999999817e-05, 7.888900000000212e-05, 7.934799999999992e-05, 7.884699999999994e-05, 7.954200000000189e-05, 7.945799999999753e-05, 7.909799999999967e-05, 7.893000000000136e-05, 7.882000000000028e-05, 7.933300000000088e-05, 7.869399999999721e-05, 7.947200000000057e-05, 7.893100000000083e-05, 7.869500000000015e-05, 7.947200000000057e-05, 7.865300000000144e-05, 7.902799999999835e-05, 7.944399999999796e-05, 7.902799999999835e-05, 7.90970000000002e-05, 7.916699999999804e-05, 7.929199999999817e-05, 7.866599999999807e-05, 7.926399999999903e-05, 7.952799999999885e-05, 7.898599999999964e-05, 7.90970000000002e-05, 7.92640000000025e-05, 7.883300000000037e-05, 7.884699999999994e-05, 7.869500000000015e-05, 7.957000000000103e-05, 7.961100000000026e-05, 7.880500000000124e-05, 7.869400000000068e-05, 7.941700000000176e-05, 7.872200000000329e-05, 7.958299999999766e-05, 7.9151999999999e-05, 7.956900000000156e-05, 7.940299999999872e-05, 7.869400000000068e-05, 7.90970000000002e-05, 7.90970000000002e-05, 7.949999999999971e-05, 7.951399999999928e-05, 7.89030000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:36:52.831" endtime="20201110 08:36:52.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.827" endtime="20201110 08:36:52.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.836" endtime="20201110 08:36:52.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:52.840" endtime="20201110 08:36:52.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.838" endtime="20201110 08:36:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.835" endtime="20201110 08:36:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.469" endtime="20201110 08:36:52.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.469" endtime="20201110 08:36:52.861"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.869" endtime="20201110 08:36:52.887"></status>
</kw>
<msg timestamp="20201110 08:36:52.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.868" endtime="20201110 08:36:52.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:52.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:52.889" endtime="20201110 08:36:52.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.891" endtime="20201110 08:36:52.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.865" endtime="20201110 08:36:52.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.863" endtime="20201110 08:36:52.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:52.902" endtime="20201110 08:36:53.187"></status>
</kw>
<msg timestamp="20201110 08:36:53.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:52.900" endtime="20201110 08:36:53.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021630417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.191" endtime="20201110 08:36:53.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.199" endtime="20201110 08:36:53.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.898" endtime="20201110 08:36:53.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.896" endtime="20201110 08:36:53.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.206" level="INFO">${RESULT} = [{'time': 0.021711139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.072200000000182e-05, 'source_diff': 8.072200000000182e-05}, {'time': 0.021841542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.203" endtime="20201110 08:36:53.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:53.264" level="INFO">${ACCURACY} = {'source_diff': [8.072200000000182e-05, 8.015299999999947e-05, 7.962499999999983e-05, 8.00970000000012e-05, 7.997200000000107e-05, 8.047200000000157e-05, 8.020900000000122e-05, 7.97779999999991e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:36:53.207" endtime="20201110 08:36:53.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.269" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:36:53.268" endtime="20201110 08:36:53.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.271" level="INFO">VALUE: [8.072200000000182e-05, 8.015299999999947e-05, 7.962499999999983e-05, 8.00970000000012e-05, 7.997200000000107e-05, 8.047200000000157e-05, 8.020900000000122e-05, 7.97779999999991e-05, 7.984800000000042e-05, 8.056899999999909e-05, 8.002799999999935e-05, 7.992999999999889e-05, 7.99719999999976e-05, 8.024999999999699e-05, 8.033300000000188e-05, 8.006899999999859e-05, 8.052799999999985e-05, 7.983300000000138e-05, 7.983400000000085e-05, 7.970800000000125e-05, 8.047300000000104e-05, 8.047200000000157e-05, 7.970900000000072e-05, 8.023599999999742e-05, 8.002699999999988e-05, 7.99580000000015e-05, 8.029199999999917e-05, 7.990299999999922e-05, 8.016599999999957e-05, 8.034800000000092e-05, 7.977699999999963e-05, 8.019400000000218e-05, 8.030599999999874e-05, 7.977699999999963e-05, 8.027700000000013e-05, 8.038900000000015e-05, 7.988899999999965e-05, 8.034700000000145e-05, 7.986099999999705e-05, 7.965299999999897e-05, 8.022199999999785e-05, 8.00970000000012e-05, 8.059800000000117e-05, 7.990299999999922e-05, 8.04169999999993e-05, 8.047200000000157e-05, 8.023600000000089e-05, 8.058299999999866e-05, 7.973600000000039e-05, 8.054199999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:36:53.270" endtime="20201110 08:36:53.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.265" endtime="20201110 08:36:53.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.276" endtime="20201110 08:36:53.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.279" endtime="20201110 08:36:53.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.277" endtime="20201110 08:36:53.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.273" endtime="20201110 08:36:53.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.862" endtime="20201110 08:36:53.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:52.861" endtime="20201110 08:36:53.300"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.308" endtime="20201110 08:36:53.326"></status>
</kw>
<msg timestamp="20201110 08:36:53.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.307" endtime="20201110 08:36:53.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.328" endtime="20201110 08:36:53.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.330" endtime="20201110 08:36:53.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.304" endtime="20201110 08:36:53.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.302" endtime="20201110 08:36:53.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.339" endtime="20201110 08:36:53.624"></status>
</kw>
<msg timestamp="20201110 08:36:53.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.338" endtime="20201110 08:36:53.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021504611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021586597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.628" endtime="20201110 08:36:53.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.636" endtime="20201110 08:36:53.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.335" endtime="20201110 08:36:53.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.333" endtime="20201110 08:36:53.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:53.643" level="INFO">${RESULT} = [{'time': 0.021586597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.198599999999917e-05, 'source_diff': 8.198599999999917e-05}, {'time': 0.021715028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:53.639" endtime="20201110 08:36:53.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:53.656" level="INFO">${ACCURACY} = {'source_diff': [8.198599999999917e-05, 8.161100000000227e-05, 8.148599999999867e-05, 8.104100000000045e-05, 8.14719999999991e-05, 8.158299999999966e-05, 8.093100000000283e-05, 8.104199999999992e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:53.644" endtime="20201110 08:36:53.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.661" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:36:53.660" endtime="20201110 08:36:53.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.664" level="INFO">VALUE: [8.198599999999917e-05, 8.161100000000227e-05, 8.148599999999867e-05, 8.104100000000045e-05, 8.14719999999991e-05, 8.158299999999966e-05, 8.093100000000283e-05, 8.104199999999992e-05, 8.154099999999748e-05, 8.120900000000222e-05, 8.101400000000078e-05, 8.088900000000065e-05, 8.137500000000158e-05, 8.091600000000032e-05, 8.122200000000232e-05, 8.072199999999835e-05, 8.14170000000003e-05, 8.116600000000057e-05, 8.129200000000017e-05, 8.094399999999946e-05, 8.070799999999878e-05, 8.122199999999885e-05, 8.090299999999676e-05, 8.090300000000022e-05, 8.127700000000113e-05, 8.140300000000072e-05, 8.150000000000171e-05, 8.098599999999817e-05, 8.069399999999921e-05, 8.161100000000227e-05, 8.104199999999992e-05, 8.097200000000207e-05, 8.141599999999735e-05, 8.09719999999986e-05, 8.097200000000207e-05, 8.1458999999999e-05, 8.094399999999946e-05, 8.159800000000217e-05, 8.152800000000085e-05, 8.079099999999673e-05, 8.156900000000009e-05, 8.137500000000158e-05, 8.065299999999997e-05, 8.13329999999994e-05, 8.13329999999994e-05, 8.145799999999953e-05, 8.109699999999873e-05, 8.140200000000125e-05, 8.120799999999928e-05, 8.079199999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:36:53.662" endtime="20201110 08:36:53.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.657" endtime="20201110 08:36:53.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.669" endtime="20201110 08:36:53.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.673" endtime="20201110 08:36:53.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.671" endtime="20201110 08:36:53.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.667" endtime="20201110 08:36:53.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.301" endtime="20201110 08:36:53.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.300" endtime="20201110 08:36:53.700"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.709" endtime="20201110 08:36:53.729"></status>
</kw>
<msg timestamp="20201110 08:36:53.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.708" endtime="20201110 08:36:53.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.730" endtime="20201110 08:36:53.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.733" endtime="20201110 08:36:53.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.705" endtime="20201110 08:36:53.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.703" endtime="20201110 08:36:53.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.742" endtime="20201110 08:36:54.033"></status>
</kw>
<msg timestamp="20201110 08:36:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028817653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028900139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:53.741" endtime="20201110 08:36:54.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028817653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028900139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.038" endtime="20201110 08:36:54.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.046" endtime="20201110 08:36:54.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.738" endtime="20201110 08:36:54.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.736" endtime="20201110 08:36:54.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.054" level="INFO">${RESULT} = [{'time': 0.028900139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.248599999999967e-05, 'source_diff': 8.248599999999967e-05}, {'time': 0.029034542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:54.051" endtime="20201110 08:36:54.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:54.068" level="INFO">${ACCURACY} = {'source_diff': [8.248599999999967e-05, 8.247299999999957e-05, 8.238900000000215e-05, 8.188899999999819e-05, 8.240299999999826e-05, 8.215199999999853e-05, 8.254200000000142e-05, 8.165300000000097e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:54.055" endtime="20201110 08:36:54.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.072" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:36:54.071" endtime="20201110 08:36:54.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.075" level="INFO">VALUE: [8.248599999999967e-05, 8.247299999999957e-05, 8.238900000000215e-05, 8.188899999999819e-05, 8.240299999999826e-05, 8.215199999999853e-05, 8.254200000000142e-05, 8.165300000000097e-05, 8.255599999999752e-05, 8.172199999999935e-05, 8.251400000000228e-05, 8.202700000000188e-05, 8.24720000000001e-05, 8.252800000000185e-05, 8.21390000000019e-05, 8.166700000000054e-05, 8.17780000000011e-05, 8.202800000000135e-05, 8.231899999999737e-05, 8.162499999999837e-05, 8.166700000000054e-05, 8.226399999999856e-05, 8.238799999999574e-05, 8.190300000000122e-05, 8.240200000000225e-05, 8.188900000000165e-05, 8.177799999999763e-05, 8.181999999999634e-05, 8.183299999999644e-05, 8.249999999999924e-05, 8.181899999999687e-05, 8.165300000000097e-05, 8.252799999999838e-05, 8.231999999999684e-05, 8.233400000000335e-05, 8.195800000000003e-05, 8.22919999999977e-05, 8.220799999999334e-05, 8.231899999999737e-05, 8.194400000000046e-05, 8.254199999999795e-05, 8.233300000000388e-05, 8.230500000000474e-05, 8.194400000000046e-05, 8.233399999999641e-05, 8.248599999999967e-05, 8.19719999999996e-05, 8.183299999999644e-05, 8.222299999999932e-05, 8.220800000000028e-05]</msg>
<status status="PASS" starttime="20201110 08:36:54.073" endtime="20201110 08:36:54.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.069" endtime="20201110 08:36:54.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.078" endtime="20201110 08:36:54.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.082" endtime="20201110 08:36:54.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.080" endtime="20201110 08:36:54.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.077" endtime="20201110 08:36:54.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.702" endtime="20201110 08:36:54.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.701" endtime="20201110 08:36:54.103"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.111" endtime="20201110 08:36:54.129"></status>
</kw>
<msg timestamp="20201110 08:36:54.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.110" endtime="20201110 08:36:54.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.131" endtime="20201110 08:36:54.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.133" endtime="20201110 08:36:54.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.107" endtime="20201110 08:36:54.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.105" endtime="20201110 08:36:54.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.142" endtime="20201110 08:36:54.439"></status>
</kw>
<msg timestamp="20201110 08:36:54.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.141" endtime="20201110 08:36:54.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.443" endtime="20201110 08:36:54.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.451" endtime="20201110 08:36:54.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.138" endtime="20201110 08:36:54.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.137" endtime="20201110 08:36:54.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.458" level="INFO">${RESULT} = [{'time': 0.021737403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.352799999999938e-05, 'source_diff': 8.352799999999938e-05}, {'time': 0.021872792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:54.455" endtime="20201110 08:36:54.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:54.471" level="INFO">${ACCURACY} = {'source_diff': [8.352799999999938e-05, 8.262499999999937e-05, 8.301299999999984e-05, 8.306899999999812e-05, 8.355599999999852e-05, 8.276399999999906e-05, 8.338899999999969e-05, 8.3459000000001e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:36:54.459" endtime="20201110 08:36:54.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.476" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:36:54.475" endtime="20201110 08:36:54.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.478" level="INFO">VALUE: [8.352799999999938e-05, 8.262499999999937e-05, 8.301299999999984e-05, 8.306899999999812e-05, 8.355599999999852e-05, 8.276399999999906e-05, 8.338899999999969e-05, 8.3459000000001e-05, 8.26659999999986e-05, 8.29720000000006e-05, 8.294399999999799e-05, 8.30980000000002e-05, 8.322199999999738e-05, 8.276400000000253e-05, 8.26390000000024e-05, 8.333400000000088e-05, 8.320799999999781e-05, 8.345799999999806e-05, 8.283400000000038e-05, 8.286100000000005e-05, 8.291699999999833e-05, 8.326400000000303e-05, 8.309700000000073e-05, 8.319499999999772e-05, 8.329200000000217e-05, 8.288799999999971e-05, 8.281900000000134e-05, 8.302799999999888e-05, 8.345800000000153e-05, 8.326400000000303e-05, 8.26390000000024e-05, 8.317999999999867e-05, 8.284700000000048e-05, 8.279200000000167e-05, 8.269399999999774e-05, 8.270800000000078e-05, 8.323600000000042e-05, 8.281899999999787e-05, 8.337500000000012e-05, 8.33469999999975e-05, 8.298600000000017e-05, 8.266699999999808e-05, 8.319500000000118e-05, 8.350000000000024e-05, 8.354199999999895e-05, 8.358399999999766e-05, 8.287499999999962e-05, 8.36110000000008e-05, 8.295800000000103e-05, 8.350000000000024e-05]</msg>
<status status="PASS" starttime="20201110 08:36:54.477" endtime="20201110 08:36:54.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.472" endtime="20201110 08:36:54.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.482" endtime="20201110 08:36:54.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.485" endtime="20201110 08:36:54.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.484" endtime="20201110 08:36:54.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.480" endtime="20201110 08:36:54.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.104" endtime="20201110 08:36:54.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.103" endtime="20201110 08:36:54.507"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.515" endtime="20201110 08:36:54.533"></status>
</kw>
<msg timestamp="20201110 08:36:54.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.513" endtime="20201110 08:36:54.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.535" endtime="20201110 08:36:54.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.537" endtime="20201110 08:36:54.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.511" endtime="20201110 08:36:54.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.509" endtime="20201110 08:36:54.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.546" endtime="20201110 08:36:54.834"></status>
</kw>
<msg timestamp="20201110 08:36:54.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.545" endtime="20201110 08:36:54.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021676528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.838" endtime="20201110 08:36:54.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.847" endtime="20201110 08:36:54.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.542" endtime="20201110 08:36:54.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.541" endtime="20201110 08:36:54.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:54.853" level="INFO">${RESULT} = [{'time': 0.021761278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.474999999999802e-05, 'source_diff': 8.474999999999802e-05}, {'time': 0.021898639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:54.850" endtime="20201110 08:36:54.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:54.867" level="INFO">${ACCURACY} = {'source_diff': [8.474999999999802e-05, 8.400000000000074e-05, 8.431999999999884e-05, 8.458399999999866e-05, 8.367999999999917e-05, 8.431899999999937e-05, 8.394500000000193e-05, 8.394399999999899e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:54.854" endtime="20201110 08:36:54.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.871" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:36:54.870" endtime="20201110 08:36:54.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.874" level="INFO">VALUE: [8.474999999999802e-05, 8.400000000000074e-05, 8.431999999999884e-05, 8.458399999999866e-05, 8.367999999999917e-05, 8.431899999999937e-05, 8.394500000000193e-05, 8.394399999999899e-05, 8.438900000000069e-05, 8.376400000000006e-05, 8.444499999999897e-05, 8.445800000000253e-05, 8.420800000000228e-05, 8.387500000000062e-05, 8.400000000000074e-05, 8.413900000000044e-05, 8.369500000000168e-05, 8.452699999999744e-05, 8.441600000000035e-05, 8.437499999999765e-05, 8.405600000000249e-05, 8.369500000000168e-05, 8.451399999999734e-05, 8.406899999999912e-05, 8.373600000000092e-05, 8.381899999999887e-05, 8.363800000000046e-05, 8.406900000000259e-05, 8.413899999999697e-05, 8.363899999999994e-05, 8.458399999999866e-05, 8.444499999999897e-05, 8.395800000000203e-05, 8.426400000000056e-05, 8.441600000000035e-05, 8.382000000000181e-05, 8.420799999999881e-05, 8.413900000000044e-05, 8.387499999999715e-05, 8.427800000000013e-05, 8.440300000000026e-05, 8.451400000000081e-05, 8.369400000000221e-05, 8.409699999999826e-05, 8.370900000000125e-05, 8.401400000000031e-05, 8.376400000000006e-05, 8.408299999999869e-05, 8.387500000000062e-05, 8.408299999999869e-05]</msg>
<status status="PASS" starttime="20201110 08:36:54.872" endtime="20201110 08:36:54.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.868" endtime="20201110 08:36:54.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.877" endtime="20201110 08:36:54.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:54.881" endtime="20201110 08:36:54.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.879" endtime="20201110 08:36:54.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.876" endtime="20201110 08:36:54.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.507" endtime="20201110 08:36:54.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.507" endtime="20201110 08:36:54.901"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.910" endtime="20201110 08:36:54.928"></status>
</kw>
<msg timestamp="20201110 08:36:54.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.909" endtime="20201110 08:36:54.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:54.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:54.930" endtime="20201110 08:36:54.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.932" endtime="20201110 08:36:54.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.906" endtime="20201110 08:36:54.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.904" endtime="20201110 08:36:54.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:54.941" endtime="20201110 08:36:55.228"></status>
</kw>
<msg timestamp="20201110 08:36:55.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:54.940" endtime="20201110 08:36:55.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021743569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.233" endtime="20201110 08:36:55.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.241" endtime="20201110 08:36:55.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.937" endtime="20201110 08:36:55.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.935" endtime="20201110 08:36:55.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.248" level="INFO">${RESULT} = [{'time': 0.021743569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.591600000000185e-05, 'source_diff': 8.591600000000185e-05}, {'time': 0.021866, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:36:55.244" endtime="20201110 08:36:55.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:55.261" level="INFO">${ACCURACY} = {'source_diff': [8.591600000000185e-05, 8.554200000000095e-05, 8.494499999999947e-05, 8.487499999999815e-05, 8.499999999999827e-05, 8.537500000000212e-05, 8.53050000000008e-05, 8.463899999999747e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:55.249" endtime="20201110 08:36:55.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.266" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:36:55.265" endtime="20201110 08:36:55.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.268" level="INFO">VALUE: [8.591600000000185e-05, 8.554200000000095e-05, 8.494499999999947e-05, 8.487499999999815e-05, 8.499999999999827e-05, 8.537500000000212e-05, 8.53050000000008e-05, 8.463899999999747e-05, 8.537499999999865e-05, 8.461099999999833e-05, 8.518000000000067e-05, 8.552799999999791e-05, 8.486099999999858e-05, 8.466700000000008e-05, 8.494500000000293e-05, 8.53469999999995e-05, 8.470899999999879e-05, 8.49859999999987e-05, 8.549999999999877e-05, 8.466700000000008e-05, 8.538900000000169e-05, 8.524999999999852e-05, 8.51249999999984e-05, 8.556900000000062e-05, 8.523600000000242e-05, 8.506999999999959e-05, 8.469499999999922e-05, 8.524999999999852e-05, 8.518000000000067e-05, 8.541700000000083e-05, 8.526300000000209e-05, 8.513899999999797e-05, 8.541700000000083e-05, 8.469399999999974e-05, 8.544400000000049e-05, 8.468099999999965e-05, 8.468099999999965e-05, 8.469399999999974e-05, 8.499999999999827e-05, 8.536099999999908e-05, 8.505600000000002e-05, 8.537499999999865e-05, 8.513900000000144e-05, 8.49309999999999e-05, 8.481999999999934e-05, 8.462500000000137e-05, 8.481899999999987e-05, 8.537499999999865e-05, 8.534700000000298e-05, 8.469399999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:36:55.267" endtime="20201110 08:36:55.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.262" endtime="20201110 08:36:55.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.272" endtime="20201110 08:36:55.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.275" endtime="20201110 08:36:55.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.274" endtime="20201110 08:36:55.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.270" endtime="20201110 08:36:55.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.902" endtime="20201110 08:36:55.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:54.902" endtime="20201110 08:36:55.296"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.305" endtime="20201110 08:36:55.323"></status>
</kw>
<msg timestamp="20201110 08:36:55.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.303" endtime="20201110 08:36:55.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.325" endtime="20201110 08:36:55.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.327" endtime="20201110 08:36:55.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.301" endtime="20201110 08:36:55.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.299" endtime="20201110 08:36:55.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.336" endtime="20201110 08:36:55.621"></status>
</kw>
<msg timestamp="20201110 08:36:55.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.335" endtime="20201110 08:36:55.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021762139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.626" endtime="20201110 08:36:55.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.634" endtime="20201110 08:36:55.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.332" endtime="20201110 08:36:55.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.330" endtime="20201110 08:36:55.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:55.641" level="INFO">${RESULT} = [{'time': 0.021849069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.692999999999895e-05, 'source_diff': 8.692999999999895e-05}, {'time': 0.021982472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:55.637" endtime="20201110 08:36:55.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:55.654" level="INFO">${ACCURACY} = {'source_diff': [8.692999999999895e-05, 8.649999999999977e-05, 8.606900000000112e-05, 8.574999999999902e-05, 8.563899999999847e-05, 8.611099999999983e-05, 8.612500000000287e-05, 8.641600000000235e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:55.642" endtime="20201110 08:36:55.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.659" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:36:55.658" endtime="20201110 08:36:55.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.661" level="INFO">VALUE: [8.692999999999895e-05, 8.649999999999977e-05, 8.606900000000112e-05, 8.574999999999902e-05, 8.563899999999847e-05, 8.611099999999983e-05, 8.612500000000287e-05, 8.641600000000235e-05, 8.642999999999845e-05, 8.576400000000206e-05, 8.566700000000108e-05, 8.572299999999936e-05, 8.641700000000183e-05, 8.594400000000099e-05, 8.56249999999989e-05, 8.580499999999783e-05, 8.642999999999845e-05, 8.625000000000299e-05, 8.619500000000072e-05, 8.637499999999965e-05, 8.605499999999808e-05, 8.63059999999978e-05, 8.588899999999872e-05, 8.619399999999777e-05, 8.63050000000018e-05, 8.569400000000074e-05, 8.618100000000115e-05, 8.595900000000004e-05, 8.581900000000087e-05, 8.644500000000097e-05, 8.637499999999965e-05, 8.590300000000176e-05, 8.606900000000112e-05, 8.573599999999945e-05, 8.56249999999989e-05, 8.607000000000059e-05, 8.61799999999982e-05, 8.574999999999902e-05, 8.609700000000026e-05, 8.619399999999777e-05, 8.587499999999915e-05, 8.64860000000002e-05, 8.56249999999989e-05, 8.626400000000256e-05, 8.587499999999915e-05, 8.626399999999909e-05, 8.588899999999872e-05, 8.652699999999944e-05, 8.651399999999934e-05, 8.570799999999684e-05]</msg>
<status status="PASS" starttime="20201110 08:36:55.660" endtime="20201110 08:36:55.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.655" endtime="20201110 08:36:55.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.665" endtime="20201110 08:36:55.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:55.668" endtime="20201110 08:36:55.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.667" endtime="20201110 08:36:55.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.663" endtime="20201110 08:36:55.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.297" endtime="20201110 08:36:55.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.297" endtime="20201110 08:36:55.689"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.698" endtime="20201110 08:36:55.716"></status>
</kw>
<msg timestamp="20201110 08:36:55.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.696" endtime="20201110 08:36:55.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:55.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:55.718" endtime="20201110 08:36:55.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.720" endtime="20201110 08:36:55.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.694" endtime="20201110 08:36:55.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.692" endtime="20201110 08:36:55.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:55.729" endtime="20201110 08:36:56.015"></status>
</kw>
<msg timestamp="20201110 08:36:56.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:55.728" endtime="20201110 08:36:56.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.020" endtime="20201110 08:36:56.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.028" endtime="20201110 08:36:56.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.725" endtime="20201110 08:36:56.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.723" endtime="20201110 08:36:56.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.034" level="INFO">${RESULT} = [{'time': 0.021947056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.758399999999819e-05, 'source_diff': 8.758399999999819e-05}, {'time': 0.022082472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:56.031" endtime="20201110 08:36:56.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:56.048" level="INFO">${ACCURACY} = {'source_diff': [8.758399999999819e-05, 8.702799999999941e-05, 8.706899999999865e-05, 8.690299999999929e-05, 8.66249999999999e-05, 8.683299999999797e-05, 8.718099999999868e-05, 8.676300000000012e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:56.035" endtime="20201110 08:36:56.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.052" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:36:56.051" endtime="20201110 08:36:56.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.055" level="INFO">VALUE: [8.758399999999819e-05, 8.702799999999941e-05, 8.706899999999865e-05, 8.690299999999929e-05, 8.66249999999999e-05, 8.683299999999797e-05, 8.718099999999868e-05, 8.676300000000012e-05, 8.741599999999988e-05, 8.737500000000065e-05, 8.695800000000156e-05, 8.701399999999984e-05, 8.681900000000187e-05, 8.738900000000022e-05, 8.672200000000088e-05, 8.669500000000122e-05, 8.74449999999985e-05, 8.756999999999862e-05, 8.737500000000065e-05, 8.737500000000065e-05, 8.682000000000134e-05, 8.676400000000306e-05, 8.754199999999948e-05, 8.690299999999929e-05, 8.706899999999865e-05, 8.74860000000012e-05, 8.700000000000027e-05, 8.665299999999904e-05, 8.745900000000154e-05, 8.704100000000298e-05, 8.73470000000015e-05, 8.691599999999938e-05, 8.750000000000077e-05, 8.713800000000049e-05, 8.726400000000009e-05, 8.668099999999818e-05, 8.706999999999812e-05, 8.675000000000002e-05, 8.704099999999951e-05, 8.68189999999984e-05, 8.686100000000058e-05, 8.672199999999741e-05, 8.66119999999998e-05, 8.704200000000245e-05, 8.745800000000206e-05, 8.750000000000077e-05, 8.718100000000215e-05, 8.754199999999948e-05, 8.725000000000052e-05, 8.725000000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:36:56.053" endtime="20201110 08:36:56.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.049" endtime="20201110 08:36:56.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.059" endtime="20201110 08:36:56.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.062" endtime="20201110 08:36:56.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.060" endtime="20201110 08:36:56.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.057" endtime="20201110 08:36:56.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.690" endtime="20201110 08:36:56.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:55.689" endtime="20201110 08:36:56.083"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.092" endtime="20201110 08:36:56.110"></status>
</kw>
<msg timestamp="20201110 08:36:56.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.090" endtime="20201110 08:36:56.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.111" endtime="20201110 08:36:56.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.114" endtime="20201110 08:36:56.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.087" endtime="20201110 08:36:56.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.085" endtime="20201110 08:36:56.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.124" endtime="20201110 08:36:56.412"></status>
</kw>
<msg timestamp="20201110 08:36:56.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.122" endtime="20201110 08:36:56.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:56.416" endtime="20201110 08:36:56.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.424" endtime="20201110 08:36:56.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.120" endtime="20201110 08:36:56.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.118" endtime="20201110 08:36:56.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.431" level="INFO">${RESULT} = [{'time': 0.021897597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.869400000000027e-05, 'source_diff': 8.869400000000027e-05}, {'time': 0.022031014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:56.427" endtime="20201110 08:36:56.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:56.444" level="INFO">${ACCURACY} = {'source_diff': [8.869400000000027e-05, 8.801400000000084e-05, 8.783400000000191e-05, 8.805599999999955e-05, 8.811099999999836e-05, 8.797200000000213e-05, 8.827699999999772e-05, 8.81670000000001e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:56.432" endtime="20201110 08:36:56.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.449" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:36:56.448" endtime="20201110 08:36:56.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.451" level="INFO">VALUE: [8.869400000000027e-05, 8.801400000000084e-05, 8.783400000000191e-05, 8.805599999999955e-05, 8.811099999999836e-05, 8.797200000000213e-05, 8.827699999999772e-05, 8.81670000000001e-05, 8.857000000000309e-05, 8.826299999999815e-05, 8.834699999999904e-05, 8.831999999999937e-05, 8.7944999999999e-05, 8.837500000000165e-05, 8.804100000000051e-05, 8.769399999999927e-05, 8.848599999999873e-05, 8.809800000000173e-05, 8.83059999999998e-05, 8.830499999999686e-05, 8.800000000000127e-05, 8.795800000000256e-05, 8.84860000000022e-05, 8.776400000000059e-05, 8.824999999999805e-05, 8.763800000000099e-05, 8.852800000000091e-05, 8.805500000000008e-05, 8.805599999999955e-05, 8.795799999999909e-05, 8.773600000000145e-05, 8.78059999999993e-05, 8.775000000000102e-05, 8.781900000000287e-05, 8.812499999999793e-05, 8.838900000000122e-05, 8.798599999999823e-05, 8.763900000000047e-05, 8.801399999999737e-05, 8.79999999999978e-05, 8.819399999999977e-05, 8.83189999999999e-05, 8.856900000000015e-05, 8.76250000000009e-05, 8.825000000000152e-05, 8.76250000000009e-05, 8.829200000000023e-05, 8.848599999999873e-05, 8.783300000000244e-05, 8.763900000000047e-05]</msg>
<status status="PASS" starttime="20201110 08:36:56.450" endtime="20201110 08:36:56.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.445" endtime="20201110 08:36:56.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.455" endtime="20201110 08:36:56.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.458" endtime="20201110 08:36:56.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.457" endtime="20201110 08:36:56.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.453" endtime="20201110 08:36:56.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.084" endtime="20201110 08:36:56.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.083" endtime="20201110 08:36:56.479"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.488" endtime="20201110 08:36:56.506"></status>
</kw>
<msg timestamp="20201110 08:36:56.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.486" endtime="20201110 08:36:56.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.508" endtime="20201110 08:36:56.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.510" endtime="20201110 08:36:56.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.483" endtime="20201110 08:36:56.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.481" endtime="20201110 08:36:56.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.519" endtime="20201110 08:36:56.806"></status>
</kw>
<msg timestamp="20201110 08:36:56.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:56.517" endtime="20201110 08:36:56.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021589, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678194, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:56.810" endtime="20201110 08:36:56.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.819" endtime="20201110 08:36:56.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.515" endtime="20201110 08:36:56.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.513" endtime="20201110 08:36:56.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:56.825" level="INFO">${RESULT} = [{'time': 0.021678194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.919400000000077e-05, 'source_diff': 8.919400000000077e-05}, {'time': 0.021820569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:56.822" endtime="20201110 08:36:56.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:56.839" level="INFO">${ACCURACY} = {'source_diff': [8.919400000000077e-05, 8.875000000000202e-05, 8.880500000000083e-05, 8.887500000000215e-05, 8.8945e-05, 8.948599999999973e-05, 8.916600000000163e-05, 8.887499999999868e-05, 8.91799999...</msg>
<status status="PASS" starttime="20201110 08:36:56.826" endtime="20201110 08:36:56.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.843" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:36:56.842" endtime="20201110 08:36:56.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.846" level="INFO">VALUE: [8.919400000000077e-05, 8.875000000000202e-05, 8.880500000000083e-05, 8.887500000000215e-05, 8.8945e-05, 8.948599999999973e-05, 8.916600000000163e-05, 8.887499999999868e-05, 8.917999999999773e-05, 8.898599999999923e-05, 8.901300000000237e-05, 8.958300000000072e-05, 8.94999999999993e-05, 8.926399999999862e-05, 8.893000000000095e-05, 8.924999999999905e-05, 8.900000000000227e-05, 8.91250000000024e-05, 8.930500000000133e-05, 8.901400000000184e-05, 8.897199999999966e-05, 8.923699999999896e-05, 8.905500000000108e-05, 8.919500000000025e-05, 8.895800000000009e-05, 8.880499999999736e-05, 8.876399999999812e-05, 8.94999999999993e-05, 8.925000000000252e-05, 8.929100000000176e-05, 8.919500000000025e-05, 8.86670000000006e-05, 8.862499999999843e-05, 8.94999999999993e-05, 8.870899999999932e-05, 8.869400000000027e-05, 8.887500000000215e-05, 8.956899999999768e-05, 8.927800000000166e-05, 8.874999999999855e-05, 8.897199999999966e-05, 8.948599999999973e-05, 8.955600000000105e-05, 8.948599999999973e-05, 8.8945e-05, 8.873599999999898e-05, 8.94999999999993e-05, 8.859699999999929e-05, 8.879199999999726e-05, 8.941699999999789e-05]</msg>
<status status="PASS" starttime="20201110 08:36:56.844" endtime="20201110 08:36:56.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.839" endtime="20201110 08:36:56.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.854" endtime="20201110 08:36:56.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:56.857" endtime="20201110 08:36:56.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.856" endtime="20201110 08:36:56.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.852" endtime="20201110 08:36:56.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.480" endtime="20201110 08:36:56.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.479" endtime="20201110 08:36:56.878"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.887" endtime="20201110 08:36:56.905"></status>
</kw>
<msg timestamp="20201110 08:36:56.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.885" endtime="20201110 08:36:56.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:56.907" endtime="20201110 08:36:56.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.909" endtime="20201110 08:36:56.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.883" endtime="20201110 08:36:56.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.881" endtime="20201110 08:36:56.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:56.918" endtime="20201110 08:36:57.205"></status>
</kw>
<msg timestamp="20201110 08:36:57.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:36:56.917" endtime="20201110 08:36:57.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:36:57.209" endtime="20201110 08:36:57.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.217" endtime="20201110 08:36:57.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.914" endtime="20201110 08:36:57.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.913" endtime="20201110 08:36:57.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.224" level="INFO">${RESULT} = [{'time': 0.02175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.095799999999862e-05, 'source_diff': 9.095799999999862e-05}, {'time': 0.021889389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201110 08:36:57.220" endtime="20201110 08:36:57.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:57.237" level="INFO">${ACCURACY} = {'source_diff': [9.095799999999862e-05, 9.006999999999765e-05, 8.99999999999998e-05, 9.01800000000022e-05, 9.05000000000003e-05, 8.970800000000084e-05, 9.006999999999765e-05, 9.016600000000263e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:36:57.225" endtime="20201110 08:36:57.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.242" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:36:57.241" endtime="20201110 08:36:57.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.245" level="INFO">VALUE: [9.095799999999862e-05, 9.006999999999765e-05, 8.99999999999998e-05, 9.01800000000022e-05, 9.05000000000003e-05, 8.970800000000084e-05, 9.006999999999765e-05, 9.016600000000263e-05, 8.970900000000032e-05, 8.965299999999857e-05, 8.988900000000272e-05, 9.048600000000073e-05, 9.056999999999815e-05, 8.968100000000118e-05, 9.012499999999993e-05, 9.055499999999911e-05, 9.005599999999808e-05, 8.957000000000062e-05, 9.036100000000061e-05, 8.968100000000118e-05, 8.968099999999771e-05, 9.043000000000245e-05, 9.006899999999818e-05, 9.048600000000073e-05, 9.03060000000018e-05, 9.042999999999898e-05, 9.005499999999861e-05, 9.03199999999979e-05, 9.018099999999821e-05, 9.05000000000003e-05, 8.99999999999998e-05, 9.001400000000284e-05, 9.037500000000018e-05, 9.023600000000048e-05, 9.038899999999975e-05, 9.038899999999975e-05, 8.962499999999943e-05, 9.05000000000003e-05, 9.01939999999983e-05, 8.966699999999814e-05, 9.005499999999861e-05, 8.988900000000272e-05, 9.011100000000036e-05, 8.969400000000127e-05, 9.042999999999898e-05, 9.048599999999726e-05, 9.004200000000198e-05, 9.022200000000091e-05, 8.99999999999998e-05, 9.008299999999775e-05]</msg>
<status status="PASS" starttime="20201110 08:36:57.243" endtime="20201110 08:36:57.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.238" endtime="20201110 08:36:57.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.249" endtime="20201110 08:36:57.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.253" endtime="20201110 08:36:57.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.251" endtime="20201110 08:36:57.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.247" endtime="20201110 08:36:57.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.879" endtime="20201110 08:36:57.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.879" endtime="20201110 08:36:57.274"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.282" endtime="20201110 08:36:57.301"></status>
</kw>
<msg timestamp="20201110 08:36:57.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.281" endtime="20201110 08:36:57.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.302" endtime="20201110 08:36:57.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.305" endtime="20201110 08:36:57.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.278" endtime="20201110 08:36:57.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.276" endtime="20201110 08:36:57.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.314" endtime="20201110 08:36:57.601"></status>
</kw>
<msg timestamp="20201110 08:36:57.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.312" endtime="20201110 08:36:57.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021657778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.605" endtime="20201110 08:36:57.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.613" endtime="20201110 08:36:57.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.310" endtime="20201110 08:36:57.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.308" endtime="20201110 08:36:57.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:57.620" level="INFO">${RESULT} = [{'time': 0.021749097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.131899999999943e-05, 'source_diff': 9.131899999999943e-05}, {'time': 0.021880514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:57.616" endtime="20201110 08:36:57.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:57.633" level="INFO">${ACCURACY} = {'source_diff': [9.131899999999943e-05, 9.082000000000187e-05, 9.144499999999903e-05, 9.102799999999994e-05, 9.067999999999923e-05, 9.126399999999715e-05, 9.144499999999903e-05, 9.1332999999999e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:36:57.621" endtime="20201110 08:36:57.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.638" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:36:57.637" endtime="20201110 08:36:57.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.640" level="INFO">VALUE: [9.131899999999943e-05, 9.082000000000187e-05, 9.144499999999903e-05, 9.102799999999994e-05, 9.067999999999923e-05, 9.126399999999715e-05, 9.144499999999903e-05, 9.1332999999999e-05, 9.156999999999915e-05, 9.156899999999968e-05, 9.062500000000043e-05, 9.080499999999936e-05, 9.115300000000007e-05, 9.117999999999973e-05, 9.10000000000008e-05, 9.138900000000075e-05, 9.123600000000148e-05, 9.118100000000268e-05, 9.106999999999865e-05, 9.093100000000243e-05, 9.11390000000005e-05, 9.155500000000011e-05, 9.088900000000025e-05, 9.086099999999764e-05, 9.106900000000265e-05, 9.130499999999986e-05, 9.111100000000136e-05, 9.125000000000105e-05, 9.119500000000225e-05, 9.116699999999964e-05, 9.144399999999955e-05, 9.094400000000252e-05, 9.101400000000037e-05, 9.134700000000204e-05, 9.087500000000068e-05, 9.074999999999708e-05, 9.137499999999771e-05, 9.159700000000229e-05, 9.086100000000111e-05, 9.144499999999903e-05, 9.087500000000068e-05, 9.148599999999826e-05, 9.138900000000075e-05, 9.11390000000005e-05, 9.162499999999796e-05, 9.130599999999933e-05, 9.161099999999839e-05, 9.079099999999979e-05, 9.143099999999946e-05, 9.131899999999943e-05]</msg>
<status status="PASS" starttime="20201110 08:36:57.639" endtime="20201110 08:36:57.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.634" endtime="20201110 08:36:57.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.644" endtime="20201110 08:36:57.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.647" endtime="20201110 08:36:57.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.646" endtime="20201110 08:36:57.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.642" endtime="20201110 08:36:57.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.275" endtime="20201110 08:36:57.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.274" endtime="20201110 08:36:57.668"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.677" endtime="20201110 08:36:57.695"></status>
</kw>
<msg timestamp="20201110 08:36:57.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.675" endtime="20201110 08:36:57.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:57.697" endtime="20201110 08:36:57.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.699" endtime="20201110 08:36:57.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.673" endtime="20201110 08:36:57.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.671" endtime="20201110 08:36:57.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.708" endtime="20201110 08:36:57.996"></status>
</kw>
<msg timestamp="20201110 08:36:57.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:57.707" endtime="20201110 08:36:57.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021669833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021762028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.000" endtime="20201110 08:36:58.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.008" endtime="20201110 08:36:58.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.704" endtime="20201110 08:36:58.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.703" endtime="20201110 08:36:58.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.015" level="INFO">${RESULT} = [{'time': 0.021762028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.219499999999978e-05, 'source_diff': 9.219499999999978e-05}, {'time': 0.0218925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:36:58.012" endtime="20201110 08:36:58.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.028" level="INFO">${ACCURACY} = {'source_diff': [9.219499999999978e-05, 9.204199999999704e-05, 9.211099999999889e-05, 9.166700000000014e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.219499999999978e-05, 9.180599999999983e-05, ...</msg>
<status status="PASS" starttime="20201110 08:36:58.016" endtime="20201110 08:36:58.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.033" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.032" endtime="20201110 08:36:58.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.035" level="INFO">VALUE: [9.219499999999978e-05, 9.204199999999704e-05, 9.211099999999889e-05, 9.166700000000014e-05, 9.20000000000018e-05, 9.211099999999889e-05, 9.219499999999978e-05, 9.180599999999983e-05, 9.236100000000261e-05, 9.238899999999828e-05, 9.230500000000086e-05, 9.254099999999807e-05, 9.25139999999984e-05, 9.161099999999839e-05, 9.161100000000186e-05, 9.218000000000073e-05, 9.179099999999732e-05, 9.183300000000297e-05, 9.233399999999947e-05, 9.212499999999846e-05, 9.224999999999858e-05, 9.226399999999815e-05, 9.237499999999871e-05, 9.204200000000051e-05, 9.194400000000005e-05, 9.198600000000223e-05, 9.176400000000112e-05, 9.249999999999883e-05, 9.177700000000122e-05, 9.205500000000061e-05, 9.179100000000079e-05, 9.180500000000036e-05, 9.168000000000023e-05, 9.248599999999926e-05, 9.212499999999846e-05, 9.184700000000254e-05, 9.187500000000168e-05, 9.211099999999889e-05, 9.199999999999833e-05, 9.174999999999808e-05, 9.220899999999935e-05, 9.205600000000008e-05, 9.181899999999993e-05, 9.229099999999782e-05, 9.19719999999992e-05, 9.173600000000198e-05, 9.176399999999765e-05, 9.212500000000193e-05, 9.222199999999944e-05, 9.25269999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:36:58.034" endtime="20201110 08:36:58.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.029" endtime="20201110 08:36:58.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.039" endtime="20201110 08:36:58.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.042" endtime="20201110 08:36:58.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.041" endtime="20201110 08:36:58.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.037" endtime="20201110 08:36:58.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.669" endtime="20201110 08:36:58.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.669" endtime="20201110 08:36:58.063"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.072" endtime="20201110 08:36:58.090"></status>
</kw>
<msg timestamp="20201110 08:36:58.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.070" endtime="20201110 08:36:58.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.092" endtime="20201110 08:36:58.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.094" endtime="20201110 08:36:58.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.068" endtime="20201110 08:36:58.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.066" endtime="20201110 08:36:58.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.103" endtime="20201110 08:36:58.389"></status>
</kw>
<msg timestamp="20201110 08:36:58.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.102" endtime="20201110 08:36:58.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.394" endtime="20201110 08:36:58.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.402" endtime="20201110 08:36:58.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.099" endtime="20201110 08:36:58.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.098" endtime="20201110 08:36:58.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.409" level="INFO">${RESULT} = [{'time': 0.021739403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402799999999947e-05, 'source_diff': 9.402799999999947e-05}, {'time': 0.021868833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:58.405" endtime="20201110 08:36:58.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.422" level="INFO">${ACCURACY} = {'source_diff': [9.402799999999947e-05, 9.304100000000204e-05, 9.294400000000105e-05, 9.354099999999907e-05, 9.342999999999851e-05, 9.288900000000225e-05, 9.308400000000022e-05, 9.258399999999972e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:58.410" endtime="20201110 08:36:58.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.427" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.426" endtime="20201110 08:36:58.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.429" level="INFO">VALUE: [9.402799999999947e-05, 9.304100000000204e-05, 9.294400000000105e-05, 9.354099999999907e-05, 9.342999999999851e-05, 9.288900000000225e-05, 9.308400000000022e-05, 9.258399999999972e-05, 9.286099999999964e-05, 9.316700000000164e-05, 9.291700000000139e-05, 9.298599999999976e-05, 9.277799999999822e-05, 9.324999999999958e-05, 9.28330000000005e-05, 9.34720000000007e-05, 9.273599999999951e-05, 9.299999999999933e-05, 9.276400000000212e-05, 9.317999999999826e-05, 9.281899999999746e-05, 9.291699999999792e-05, 9.286099999999964e-05, 9.299999999999933e-05, 9.315199999999912e-05, 9.319399999999783e-05, 9.280600000000083e-05, 9.284700000000007e-05, 9.268100000000071e-05, 9.286199999999911e-05, 9.287499999999921e-05, 9.266700000000114e-05, 9.311099999999989e-05, 9.352799999999897e-05, 9.293100000000096e-05, 9.319499999999731e-05, 9.302799999999847e-05, 9.283399999999997e-05, 9.31529999999986e-05, 9.262499999999896e-05, 9.319500000000078e-05, 9.276299999999918e-05, 9.313899999999903e-05, 9.280500000000136e-05, 9.291700000000139e-05, 9.349999999999983e-05, 9.290299999999835e-05, 9.291699999999792e-05, 9.320900000000035e-05, 9.279099999999832e-05]</msg>
<status status="PASS" starttime="20201110 08:36:58.428" endtime="20201110 08:36:58.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.423" endtime="20201110 08:36:58.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.433" endtime="20201110 08:36:58.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.436" endtime="20201110 08:36:58.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.434" endtime="20201110 08:36:58.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.431" endtime="20201110 08:36:58.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.064" endtime="20201110 08:36:58.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.063" endtime="20201110 08:36:58.457"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.466" endtime="20201110 08:36:58.484"></status>
</kw>
<msg timestamp="20201110 08:36:58.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.464" endtime="20201110 08:36:58.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.486" endtime="20201110 08:36:58.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.488" endtime="20201110 08:36:58.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.462" endtime="20201110 08:36:58.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.459" endtime="20201110 08:36:58.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.498" endtime="20201110 08:36:58.784"></status>
</kw>
<msg timestamp="20201110 08:36:58.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:58.496" endtime="20201110 08:36:58.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021796569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:58.788" endtime="20201110 08:36:58.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.797" endtime="20201110 08:36:58.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.493" endtime="20201110 08:36:58.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.491" endtime="20201110 08:36:58.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:58.803" level="INFO">${RESULT} = [{'time': 0.021796569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.456899999999921e-05, 'source_diff': 9.456899999999921e-05}, {'time': 0.021927958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:58.800" endtime="20201110 08:36:58.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:58.817" level="INFO">${ACCURACY} = {'source_diff': [9.456899999999921e-05, 9.440200000000037e-05, 9.41659999999997e-05, 9.39720000000012e-05, 9.424999999999711e-05, 9.417999999999926e-05, 9.380499999999889e-05, 9.375000000000008e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:36:58.804" endtime="20201110 08:36:58.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.821" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:36:58.820" endtime="20201110 08:36:58.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.824" level="INFO">VALUE: [9.456899999999921e-05, 9.440200000000037e-05, 9.41659999999997e-05, 9.39720000000012e-05, 9.424999999999711e-05, 9.417999999999926e-05, 9.380499999999889e-05, 9.375000000000008e-05, 9.411100000000089e-05, 9.437499999999724e-05, 9.457000000000215e-05, 9.454199999999954e-05, 9.398600000000076e-05, 9.455499999999964e-05, 9.436100000000114e-05, 9.426400000000015e-05, 9.426300000000068e-05, 9.375000000000008e-05, 9.438900000000028e-05, 9.444399999999908e-05, 9.373600000000051e-05, 9.413800000000055e-05, 9.444399999999908e-05, 9.387500000000021e-05, 9.383400000000097e-05, 9.379199999999879e-05, 9.43880000000008e-05, 9.373600000000051e-05, 9.393100000000196e-05, 9.406899999999871e-05, 9.459700000000182e-05, 9.405499999999914e-05, 9.361100000000039e-05, 9.408400000000122e-05, 9.423600000000101e-05, 9.388899999999978e-05, 9.427800000000319e-05, 9.431999999999843e-05, 9.452799999999997e-05, 9.418099999999874e-05, 9.42079999999984e-05, 9.386100000000064e-05, 9.417999999999926e-05, 9.448600000000126e-05, 9.418099999999874e-05, 9.398600000000076e-05, 9.407000000000165e-05, 9.411100000000089e-05, 9.392999999999901e-05, 9.400000000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:36:58.822" endtime="20201110 08:36:58.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.818" endtime="20201110 08:36:58.825"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.827" endtime="20201110 08:36:58.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.831" endtime="20201110 08:36:58.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.829" endtime="20201110 08:36:58.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.826" endtime="20201110 08:36:58.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.458" endtime="20201110 08:36:58.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.457" endtime="20201110 08:36:58.852"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.860" endtime="20201110 08:36:58.879"></status>
</kw>
<msg timestamp="20201110 08:36:58.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.859" endtime="20201110 08:36:58.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.880" endtime="20201110 08:36:58.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.883" endtime="20201110 08:36:58.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.856" endtime="20201110 08:36:58.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.854" endtime="20201110 08:36:58.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.892" endtime="20201110 08:36:59.182"></status>
</kw>
<msg timestamp="20201110 08:36:59.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.890" endtime="20201110 08:36:59.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021686111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.186" endtime="20201110 08:36:59.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.194" endtime="20201110 08:36:59.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.888" endtime="20201110 08:36:59.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.886" endtime="20201110 08:36:59.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.201" level="INFO">${RESULT} = [{'time': 0.021781653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.554200000000054e-05, 'source_diff': 9.554200000000054e-05}, {'time': 0.021912056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.198" endtime="20201110 08:36:59.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:59.214" level="INFO">${ACCURACY} = {'source_diff': [9.554200000000054e-05, 9.49729999999982e-05, 9.504100000000057e-05, 9.518000000000026e-05, 9.502800000000047e-05, 9.472200000000194e-05, 9.472199999999847e-05, 9.48469999999986e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:36:59.202" endtime="20201110 08:36:59.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.219" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:36:59.218" endtime="20201110 08:36:59.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.221" level="INFO">VALUE: [9.554200000000054e-05, 9.49729999999982e-05, 9.504100000000057e-05, 9.518000000000026e-05, 9.502800000000047e-05, 9.472200000000194e-05, 9.472199999999847e-05, 9.48469999999986e-05, 9.537500000000171e-05, 9.547199999999922e-05, 9.477800000000022e-05, 9.545799999999965e-05, 9.491600000000044e-05, 9.461200000000086e-05, 9.504200000000004e-05, 9.54859999999988e-05, 9.466699999999967e-05, 9.523600000000201e-05, 9.480499999999989e-05, 9.531899999999996e-05, 9.523600000000201e-05, 9.516700000000017e-05, 9.522199999999897e-05, 9.554199999999707e-05, 9.540300000000085e-05, 9.479100000000032e-05, 9.541600000000094e-05, 9.49729999999982e-05, 9.498600000000176e-05, 9.493000000000001e-05, 9.46660000000002e-05, 9.518000000000026e-05, 9.479199999999979e-05, 9.462500000000096e-05, 9.46530000000001e-05, 9.458300000000225e-05, 9.493100000000296e-05, 9.494499999999906e-05, 9.509700000000232e-05, 9.524999999999811e-05, 9.491600000000044e-05, 9.519399999999983e-05, 9.529100000000082e-05, 9.554200000000054e-05, 9.541700000000042e-05, 9.53469999999991e-05, 9.493099999999949e-05, 9.509699999999885e-05, 9.493099999999949e-05, 9.46660000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:36:59.220" endtime="20201110 08:36:59.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.215" endtime="20201110 08:36:59.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.225" endtime="20201110 08:36:59.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.228" endtime="20201110 08:36:59.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.227" endtime="20201110 08:36:59.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.223" endtime="20201110 08:36:59.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.852" endtime="20201110 08:36:59.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.852" endtime="20201110 08:36:59.249"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.258" endtime="20201110 08:36:59.276"></status>
</kw>
<msg timestamp="20201110 08:36:59.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.256" endtime="20201110 08:36:59.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.278" endtime="20201110 08:36:59.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.281" endtime="20201110 08:36:59.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.253" endtime="20201110 08:36:59.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.251" endtime="20201110 08:36:59.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.297" endtime="20201110 08:36:59.592"></status>
</kw>
<msg timestamp="20201110 08:36:59.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.294" endtime="20201110 08:36:59.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.596" endtime="20201110 08:36:59.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.604" endtime="20201110 08:36:59.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.289" endtime="20201110 08:36:59.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.285" endtime="20201110 08:36:59.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.611" level="INFO">${RESULT} = [{'time': 0.021654236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.633300000000053e-05, 'source_diff': 9.633300000000053e-05}, {'time': 0.021787667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:36:59.608" endtime="20201110 08:36:59.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:36:59.624" level="INFO">${ACCURACY} = {'source_diff': [9.633300000000053e-05, 9.577800000000122e-05, 9.611100000000289e-05, 9.594399999999711e-05, 9.580500000000089e-05, 9.619399999999736e-05, 9.637500000000271e-05, 9.618000000000126e-05,...</msg>
<status status="PASS" starttime="20201110 08:36:59.612" endtime="20201110 08:36:59.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.629" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:36:59.628" endtime="20201110 08:36:59.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.631" level="INFO">VALUE: [9.633300000000053e-05, 9.577800000000122e-05, 9.611100000000289e-05, 9.594399999999711e-05, 9.580500000000089e-05, 9.619399999999736e-05, 9.637500000000271e-05, 9.618000000000126e-05, 9.587499999999874e-05, 9.641699999999795e-05, 9.576400000000165e-05, 9.619500000000031e-05, 9.654200000000154e-05, 9.580600000000036e-05, 9.59859999999993e-05, 9.623599999999954e-05, 9.598600000000276e-05, 9.637499999999924e-05, 9.591700000000092e-05, 9.623599999999954e-05, 9.587499999999874e-05, 9.615299999999813e-05, 9.605499999999767e-05, 9.655500000000164e-05, 9.609699999999985e-05, 9.580600000000036e-05, 9.579200000000079e-05, 9.644399999999761e-05, 9.559700000000282e-05, 9.597199999999972e-05, 9.612500000000246e-05, 9.605599999999714e-05, 9.602800000000147e-05, 9.623600000000301e-05, 9.602800000000147e-05, 9.626400000000215e-05, 9.583300000000003e-05, 9.559699999999935e-05, 9.593100000000049e-05, 9.569499999999981e-05, 9.6334e-05, 9.593099999999702e-05, 9.58469999999996e-05, 9.629100000000182e-05, 9.626400000000215e-05, 9.641700000000142e-05, 9.64859999999998e-05, 9.65279999999985e-05, 9.620899999999988e-05, 9.612499999999899e-05]</msg>
<status status="PASS" starttime="20201110 08:36:59.630" endtime="20201110 08:36:59.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.625" endtime="20201110 08:36:59.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.635" endtime="20201110 08:36:59.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.638" endtime="20201110 08:36:59.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.636" endtime="20201110 08:36:59.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.633" endtime="20201110 08:36:59.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.250" endtime="20201110 08:36:59.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.249" endtime="20201110 08:36:59.659"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.667" endtime="20201110 08:36:59.686"></status>
</kw>
<msg timestamp="20201110 08:36:59.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.666" endtime="20201110 08:36:59.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.688" endtime="20201110 08:36:59.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.690" endtime="20201110 08:36:59.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.663" endtime="20201110 08:36:59.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.661" endtime="20201110 08:36:59.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.699" endtime="20201110 08:36:59.985"></status>
</kw>
<msg timestamp="20201110 08:36:59.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02158325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:59.698" endtime="20201110 08:36:59.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02158325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021680333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:36:59.989" endtime="20201110 08:36:59.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.997" endtime="20201110 08:36:59.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.695" endtime="20201110 08:37:00.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.693" endtime="20201110 08:37:00.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.004" level="INFO">${RESULT} = [{'time': 0.021680333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.708300000000128e-05, 'source_diff': 9.708300000000128e-05}, {'time': 0.021821722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.001" endtime="20201110 08:37:00.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:00.017" level="INFO">${ACCURACY} = {'source_diff': [9.708300000000128e-05, 9.659700000000035e-05, 9.670900000000038e-05, 9.673699999999952e-05, 9.716599999999923e-05, 9.71660000000027e-05, 9.68470000000006e-05, 9.726399999999968e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:37:00.005" endtime="20201110 08:37:00.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.022" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:37:00.021" endtime="20201110 08:37:00.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.024" level="INFO">VALUE: [9.708300000000128e-05, 9.659700000000035e-05, 9.670900000000038e-05, 9.673699999999952e-05, 9.716599999999923e-05, 9.71660000000027e-05, 9.68470000000006e-05, 9.726399999999968e-05, 9.661099999999992e-05, 9.737500000000024e-05, 9.686100000000017e-05, 9.729099999999935e-05, 9.727799999999925e-05, 9.7027999999999e-05, 9.687499999999974e-05, 9.69860000000003e-05, 9.736100000000067e-05, 9.755499999999917e-05, 9.71669999999987e-05, 9.716700000000217e-05, 9.71669999999987e-05, 9.730600000000186e-05, 9.7027999999999e-05, 9.688799999999984e-05, 9.659700000000035e-05, 9.704200000000204e-05, 9.686100000000017e-05, 9.72219999999975e-05, 9.69860000000003e-05, 9.680600000000136e-05, 9.736100000000067e-05, 9.743099999999852e-05, 9.72080000000014e-05, 9.679199999999832e-05, 9.693099999999802e-05, 9.729100000000282e-05, 9.686199999999964e-05, 9.747200000000122e-05, 9.712499999999999e-05, 9.733299999999806e-05, 9.694499999999759e-05, 9.723600000000054e-05, 9.68470000000006e-05, 9.687499999999974e-05, 9.720799999999793e-05, 9.68340000000005e-05, 9.686100000000017e-05, 9.677699999999928e-05, 9.698599999999682e-05, 9.66530000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:37:00.023" endtime="20201110 08:37:00.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.018" endtime="20201110 08:37:00.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.028" endtime="20201110 08:37:00.029"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.031" endtime="20201110 08:37:00.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.030" endtime="20201110 08:37:00.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.026" endtime="20201110 08:37:00.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.660" endtime="20201110 08:37:00.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.659" endtime="20201110 08:37:00.052"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.061" endtime="20201110 08:37:00.080"></status>
</kw>
<msg timestamp="20201110 08:37:00.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.059" endtime="20201110 08:37:00.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.081" endtime="20201110 08:37:00.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.083" endtime="20201110 08:37:00.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.057" endtime="20201110 08:37:00.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.055" endtime="20201110 08:37:00.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.092" endtime="20201110 08:37:00.379"></status>
</kw>
<msg timestamp="20201110 08:37:00.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.091" endtime="20201110 08:37:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.383" endtime="20201110 08:37:00.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.392" endtime="20201110 08:37:00.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.088" endtime="20201110 08:37:00.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.087" endtime="20201110 08:37:00.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.398" level="INFO">${RESULT} = [{'time': 0.021620861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.827800000000025e-05, 'source_diff': 9.827800000000025e-05}, {'time': 0.02175725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:00.395" endtime="20201110 08:37:00.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:00.412" level="INFO">${ACCURACY} = {'source_diff': [9.827800000000025e-05, 9.847199999999875e-05, 9.777700000000028e-05, 9.79020000000004e-05, 9.847199999999875e-05, 9.809699999999838e-05, 9.804199999999957e-05, 9.776400000000018e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:00.399" endtime="20201110 08:37:00.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.416" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:37:00.415" endtime="20201110 08:37:00.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.418" level="INFO">VALUE: [9.827800000000025e-05, 9.847199999999875e-05, 9.777700000000028e-05, 9.79020000000004e-05, 9.847199999999875e-05, 9.809699999999838e-05, 9.804199999999957e-05, 9.776400000000018e-05, 9.834699999999863e-05, 9.768000000000276e-05, 9.76799999999993e-05, 9.820899999999841e-05, 9.83609999999982e-05, 9.802700000000053e-05, 9.815200000000066e-05, 9.763900000000006e-05, 9.827700000000078e-05, 9.838900000000081e-05, 9.826399999999721e-05, 9.777700000000028e-05, 9.76669999999992e-05, 9.85280000000005e-05, 9.763800000000059e-05, 9.85280000000005e-05, 9.759700000000135e-05, 9.766599999999973e-05, 9.852799999999703e-05, 9.794500000000206e-05, 9.805599999999914e-05, 9.791699999999945e-05, 9.834699999999863e-05, 9.855500000000017e-05, 9.790299999999988e-05, 9.797200000000172e-05, 9.782000000000193e-05, 9.827800000000025e-05, 9.809699999999838e-05, 9.783299999999856e-05, 9.795899999999816e-05, 9.827800000000025e-05, 9.759800000000082e-05, 9.851400000000093e-05, 9.840300000000038e-05, 9.822200000000197e-05, 9.76669999999992e-05, 9.779199999999932e-05, 9.815200000000066e-05, 9.840300000000038e-05, 9.762500000000049e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201110 08:37:00.417" endtime="20201110 08:37:00.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.412" endtime="20201110 08:37:00.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.422" endtime="20201110 08:37:00.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.425" endtime="20201110 08:37:00.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.424" endtime="20201110 08:37:00.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.420" endtime="20201110 08:37:00.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.053" endtime="20201110 08:37:00.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.052" endtime="20201110 08:37:00.446"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.455" endtime="20201110 08:37:00.474"></status>
</kw>
<msg timestamp="20201110 08:37:00.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.453" endtime="20201110 08:37:00.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.475" endtime="20201110 08:37:00.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.478" endtime="20201110 08:37:00.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.451" endtime="20201110 08:37:00.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.449" endtime="20201110 08:37:00.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.487" endtime="20201110 08:37:00.773"></status>
</kw>
<msg timestamp="20201110 08:37:00.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.485" endtime="20201110 08:37:00.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021636986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.777" endtime="20201110 08:37:00.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.785" endtime="20201110 08:37:00.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.483" endtime="20201110 08:37:00.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.481" endtime="20201110 08:37:00.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.792" level="INFO">${RESULT} = [{'time': 0.021736333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.934699999999963e-05, 'source_diff': 9.934699999999963e-05}, {'time': 0.021887639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.788" endtime="20201110 08:37:00.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:00.805" level="INFO">${ACCURACY} = {'source_diff': [9.934699999999963e-05, 9.875000000000161e-05, 9.945800000000019e-05, 9.901399999999796e-05, 9.900000000000186e-05, 9.951400000000193e-05, 9.88609999999987e-05, 9.908299999999981e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:00.793" endtime="20201110 08:37:00.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.809" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:37:00.808" endtime="20201110 08:37:00.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.812" level="INFO">VALUE: [9.934699999999963e-05, 9.875000000000161e-05, 9.945800000000019e-05, 9.901399999999796e-05, 9.900000000000186e-05, 9.951400000000193e-05, 9.88609999999987e-05, 9.908299999999981e-05, 9.931999999999996e-05, 9.938900000000181e-05, 9.922299999999898e-05, 9.952799999999803e-05, 9.920899999999941e-05, 9.926400000000168e-05, 9.876400000000118e-05, 9.908399999999928e-05, 9.95410000000016e-05, 9.890299999999741e-05, 9.877800000000075e-05, 9.890300000000088e-05, 9.908299999999981e-05, 9.937500000000224e-05, 9.955600000000064e-05, 9.879200000000032e-05, 9.870799999999944e-05, 9.913900000000156e-05, 9.901400000000143e-05, 9.945800000000019e-05, 9.95410000000016e-05, 9.945899999999966e-05, 9.944400000000062e-05, 9.93609999999992e-05, 9.88340000000025e-05, 9.940300000000138e-05, 9.937500000000224e-05, 9.9028000000001e-05, 9.863899999999759e-05, 9.877800000000075e-05, 9.926399999999821e-05, 9.902700000000153e-05, 9.912499999999852e-05, 9.955500000000117e-05, 9.92219999999995e-05, 9.856899999999974e-05, 9.855599999999964e-05, 9.909699999999938e-05, 9.895799999999969e-05, 9.865199999999769e-05, 9.901400000000143e-05, 9.865300000000063e-05]</msg>
<status status="PASS" starttime="20201110 08:37:00.810" endtime="20201110 08:37:00.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.806" endtime="20201110 08:37:00.813"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.815" endtime="20201110 08:37:00.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.819" endtime="20201110 08:37:00.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.817" endtime="20201110 08:37:00.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.814" endtime="20201110 08:37:00.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.447" endtime="20201110 08:37:00.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.447" endtime="20201110 08:37:00.840"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.848" endtime="20201110 08:37:00.867"></status>
</kw>
<msg timestamp="20201110 08:37:00.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.847" endtime="20201110 08:37:00.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.869" endtime="20201110 08:37:00.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.871" endtime="20201110 08:37:00.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.844" endtime="20201110 08:37:00.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.842" endtime="20201110 08:37:00.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.880" endtime="20201110 08:37:01.167"></status>
</kw>
<msg timestamp="20201110 08:37:01.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.878" endtime="20201110 08:37:01.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021572042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.171" endtime="20201110 08:37:01.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.179" endtime="20201110 08:37:01.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.876" endtime="20201110 08:37:01.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.874" endtime="20201110 08:37:01.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.188" level="INFO">${RESULT} = [{'time': 0.021672375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010033300000000106, 'source_diff': 0.00010033300000000106}, {'time': 0.021823694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.183" endtime="20201110 08:37:01.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.201" level="INFO">${ACCURACY} = {'source_diff': [0.00010033300000000106, 9.977700000000228e-05, 0.00010026399999999921, 9.998599999999983e-05, 0.00010037499999999977, 9.961100000000292e-05, 9.957000000000021e-05, 9.968100000000077e-...</msg>
<status status="PASS" starttime="20201110 08:37:01.189" endtime="20201110 08:37:01.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.206" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:37:01.205" endtime="20201110 08:37:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.208" level="INFO">VALUE: [0.00010033300000000106, 9.977700000000228e-05, 0.00010026399999999921, 9.998599999999983e-05, 0.00010037499999999977, 9.961100000000292e-05, 9.957000000000021e-05, 9.968100000000077e-05, 0.00010017999999999833, 0.00010022199999999704, 0.00010011099999999995, 0.00010038899999999934, 0.00010037499999999977, 0.00010020799999999747, 0.00010005599999999767, 0.00010031899999999802, 9.972299999999948e-05, 0.00010019400000000137, 9.987499999999927e-05, 9.987499999999927e-05, 0.00010029099999999888, 0.00010030499999999845, 0.00010052799999999903, 9.970800000000044e-05, 0.0001005280000000025, 0.0001004999999999999, 9.993100000000102e-05, 0.00010051400000000293, 0.00010045800000000119, 0.00010031900000000149, 0.00010013799999999962, 9.96800000000013e-05, 9.976400000000218e-05, 9.997200000000026e-05, 9.96670000000012e-05, 0.00010048600000000033, 9.955600000000064e-05, 0.0001002220000000005, 0.00010009700000000038, 0.00010012499999999952, 0.00010006900000000124, 0.0001001939999999979, 0.00010002799999999853, 0.00010008300000000081, 9.9722e-05, 0.00010007000000000071, 0.00010044399999999815, 0.00010026399999999921, 0.00010031899999999802, 9.997299999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:37:01.207" endtime="20201110 08:37:01.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.202" endtime="20201110 08:37:01.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.212" endtime="20201110 08:37:01.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.215" endtime="20201110 08:37:01.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.213" endtime="20201110 08:37:01.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.210" endtime="20201110 08:37:01.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.841" endtime="20201110 08:37:01.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.840" endtime="20201110 08:37:01.236"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.244" endtime="20201110 08:37:01.263"></status>
</kw>
<msg timestamp="20201110 08:37:01.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.243" endtime="20201110 08:37:01.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.265" endtime="20201110 08:37:01.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.267" endtime="20201110 08:37:01.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.240" endtime="20201110 08:37:01.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.238" endtime="20201110 08:37:01.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.276" endtime="20201110 08:37:01.563"></status>
</kw>
<msg timestamp="20201110 08:37:01.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.275" endtime="20201110 08:37:01.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.567" endtime="20201110 08:37:01.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.575" endtime="20201110 08:37:01.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.272" endtime="20201110 08:37:01.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.271" endtime="20201110 08:37:01.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.582" level="INFO">${RESULT} = [{'time': 0.021624333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010117999999999933, 'source_diff': 0.00010117999999999933}, {'time': 0.021772639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.579" endtime="20201110 08:37:01.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.595" level="INFO">${ACCURACY} = {'source_diff': [0.00010117999999999933, 0.00010077799999999928, 0.00010083299999999809, 0.0001010000000000004, 0.00010094400000000212, 0.00010106999999999824, 0.00010133399999999806, 0.00010130599999...</msg>
<status status="PASS" starttime="20201110 08:37:01.583" endtime="20201110 08:37:01.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.599" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:37:01.598" endtime="20201110 08:37:01.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.602" level="INFO">VALUE: [0.00010117999999999933, 0.00010077799999999928, 0.00010083299999999809, 0.0001010000000000004, 0.00010094400000000212, 0.00010106999999999824, 0.00010133399999999806, 0.00010130599999999892, 0.00010144399999999915, 0.00010130500000000292, 0.00010087500000000027, 0.00010120799999999847, 0.00010118100000000227, 0.00010065299999999916, 0.00010133299999999859, 0.00010079099999999938, 0.00010088800000000037, 0.00010144399999999915, 0.000100819999999998, 0.0001010000000000004, 0.00010133300000000206, 0.00010124999999999718, 0.00010158299999999884, 0.00010107000000000171, 0.00010142999999999958, 0.00010088800000000037, 0.00010052799999999903, 0.00010057000000000121, 0.00010155599999999917, 0.00010075000000000014, 0.0001006809999999983, 0.00010134699999999816, 0.00010073600000000058, 0.00010113900000000009, 0.00010072199999999754, 0.00010081899999999852, 0.00010077799999999928, 0.00010131899999999902, 0.00010055599999999817, 0.00010077799999999928, 0.00010130499999999945, 0.00010147199999999829, 0.0001011939999999989, 0.00010090299999999941, 0.00010101399999999996, 0.00010069500000000134, 0.00010098600000000083, 0.00010075000000000014, 0.00010138900000000034, 0.0001013060000000024]</msg>
<status status="PASS" starttime="20201110 08:37:01.600" endtime="20201110 08:37:01.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.596" endtime="20201110 08:37:01.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.605" endtime="20201110 08:37:01.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.609" endtime="20201110 08:37:01.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.607" endtime="20201110 08:37:01.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.604" endtime="20201110 08:37:01.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.237" endtime="20201110 08:37:01.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.236" endtime="20201110 08:37:01.629"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.638" endtime="20201110 08:37:01.657"></status>
</kw>
<msg timestamp="20201110 08:37:01.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.636" endtime="20201110 08:37:01.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.658" endtime="20201110 08:37:01.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.661" endtime="20201110 08:37:01.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.634" endtime="20201110 08:37:01.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.632" endtime="20201110 08:37:01.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.670" endtime="20201110 08:37:01.957"></status>
</kw>
<msg timestamp="20201110 08:37:01.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.668" endtime="20201110 08:37:01.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.962" endtime="20201110 08:37:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.973" endtime="20201110 08:37:01.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.666" endtime="20201110 08:37:01.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.664" endtime="20201110 08:37:01.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.982" level="INFO">${RESULT} = [{'time': 0.021628278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010238900000000134, 'source_diff': 0.00010238900000000134}, {'time': 0.021774625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.978" endtime="20201110 08:37:01.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:01.997" level="INFO">${ACCURACY} = {'source_diff': [0.00010238900000000134, 0.000102513999999998, 0.00010175000000000115, 0.00010194499999999912, 0.00010220799999999947, 0.00010188900000000084, 0.0001021809999999998, 0.0001018339999999...</msg>
<status status="PASS" starttime="20201110 08:37:01.984" endtime="20201110 08:37:01.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.003" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:37:02.002" endtime="20201110 08:37:02.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.006" level="INFO">VALUE: [0.00010238900000000134, 0.000102513999999998, 0.00010175000000000115, 0.00010194499999999912, 0.00010220799999999947, 0.00010188900000000084, 0.0001021809999999998, 0.00010183399999999856, 0.00010236099999999873, 0.00010244499999999962, 0.00010249999999999843, 0.00010175000000000115, 0.00010251400000000147, 0.00010213899999999762, 0.00010244400000000015, 0.00010219499999999937, 0.00010233399999999906, 0.00010230500000000045, 0.00010184699999999866, 0.00010237500000000177, 0.00010225000000000165, 0.00010236099999999873, 0.00010247199999999929, 0.00010176400000000071, 0.00010220799999999947, 0.0001021939999999999, 0.0001016939999999994, 0.00010163900000000059, 0.00010158299999999884, 0.00010227700000000131, 0.0001018749999999978, 0.00010243100000000005, 0.00010177800000000028, 0.00010183300000000256, 0.00010176400000000071, 0.00010208299999999934, 0.00010215300000000066, 0.00010186099999999823, 0.00010251299999999852, 0.00010220799999999947, 0.00010177800000000028, 0.00010220799999999947, 0.00010181899999999952, 0.00010177800000000028, 0.00010245900000000266, 0.00010216700000000023, 0.00010202800000000053, 0.00010229199999999689, 0.00010183299999999909, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201110 08:37:02.004" endtime="20201110 08:37:02.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.999" endtime="20201110 08:37:02.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.009" endtime="20201110 08:37:02.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.013" endtime="20201110 08:37:02.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.011" endtime="20201110 08:37:02.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.008" endtime="20201110 08:37:02.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.630" endtime="20201110 08:37:02.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.630" endtime="20201110 08:37:02.034"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.042" endtime="20201110 08:37:02.061"></status>
</kw>
<msg timestamp="20201110 08:37:02.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.041" endtime="20201110 08:37:02.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.063" endtime="20201110 08:37:02.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.065" endtime="20201110 08:37:02.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.038" endtime="20201110 08:37:02.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.036" endtime="20201110 08:37:02.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.074" endtime="20201110 08:37:02.361"></status>
</kw>
<msg timestamp="20201110 08:37:02.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.072" endtime="20201110 08:37:02.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021620264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021723903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.365" endtime="20201110 08:37:02.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.373" endtime="20201110 08:37:02.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.070" endtime="20201110 08:37:02.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.068" endtime="20201110 08:37:02.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.379" level="INFO">${RESULT} = [{'time': 0.021723903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010363899999999912, 'source_diff': 0.00010363899999999912}, {'time': 0.021867278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:02.376" endtime="20201110 08:37:02.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:02.392" level="INFO">${ACCURACY} = {'source_diff': [0.00010363899999999912, 0.00010265300000000116, 0.00010263899999999812, 0.00010349999999999943, 0.00010295800000000022, 0.00010293100000000055, 0.0001030000000000024, 0.00010272199999...</msg>
<status status="PASS" starttime="20201110 08:37:02.380" endtime="20201110 08:37:02.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.397" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:37:02.396" endtime="20201110 08:37:02.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.399" level="INFO">VALUE: [0.00010363899999999912, 0.00010265300000000116, 0.00010263899999999812, 0.00010349999999999943, 0.00010295800000000022, 0.00010293100000000055, 0.0001030000000000024, 0.00010272199999999954, 0.00010327800000000179, 0.00010320800000000047, 0.00010265300000000116, 0.00010344400000000115, 0.00010347200000000029, 0.00010294500000000012, 0.00010315300000000166, 0.0001028749999999988, 0.00010327800000000179, 0.00010279199999999739, 0.00010352799999999857, 0.00010288899999999837, 0.00010279100000000138, 0.00010326399999999875, 0.0001026810000000003, 0.0001028480000000026, 0.00010313899999999862, 0.00010348599999999986, 0.0001030139999999985, 0.00010334700000000016, 0.0001028610000000027, 0.0001031940000000009, 0.00010288900000000184, 0.00010309699999999991, 0.00010307000000000024, 0.00010297299999999926, 0.00010345799999999725, 0.00010348599999999986, 0.00010306900000000077, 0.00010308300000000034, 0.00010327699999999884, 0.00010295800000000022, 0.00010299999999999893, 0.00010344400000000115, 0.00010326399999999875, 0.0001028749999999988, 0.00010330500000000145, 0.00010334700000000016, 0.00010313899999999862, 0.00010338899999999887, 0.00010259699999999941, 0.00010322200000000004]</msg>
<status status="PASS" starttime="20201110 08:37:02.398" endtime="20201110 08:37:02.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.393" endtime="20201110 08:37:02.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.403" endtime="20201110 08:37:02.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.406" endtime="20201110 08:37:02.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.405" endtime="20201110 08:37:02.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.401" endtime="20201110 08:37:02.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.034" endtime="20201110 08:37:02.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.034" endtime="20201110 08:37:02.427"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.436" endtime="20201110 08:37:02.455"></status>
</kw>
<msg timestamp="20201110 08:37:02.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.434" endtime="20201110 08:37:02.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.457" endtime="20201110 08:37:02.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.459" endtime="20201110 08:37:02.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.432" endtime="20201110 08:37:02.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.430" endtime="20201110 08:37:02.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.468" endtime="20201110 08:37:02.755"></status>
</kw>
<msg timestamp="20201110 08:37:02.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:02.466" endtime="20201110 08:37:02.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021711, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:02.759" endtime="20201110 08:37:02.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.767" endtime="20201110 08:37:02.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.464" endtime="20201110 08:37:02.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.462" endtime="20201110 08:37:02.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.774" level="INFO">${RESULT} = [{'time': 0.021711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010463900000000012, 'source_diff': 0.00010463900000000012}, {'time': 0.021865333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:02.771" endtime="20201110 08:37:02.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:02.787" level="INFO">${ACCURACY} = {'source_diff': [0.00010463900000000012, 0.00010426399999999975, 0.00010404199999999864, 0.000104514, 0.00010356900000000127, 0.00010362500000000302, 0.00010443100000000205, 0.00010413899999999962, 0....</msg>
<status status="PASS" starttime="20201110 08:37:02.775" endtime="20201110 08:37:02.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.791" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:37:02.790" endtime="20201110 08:37:02.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.793" level="INFO">VALUE: [0.00010463900000000012, 0.00010426399999999975, 0.00010404199999999864, 0.000104514, 0.00010356900000000127, 0.00010362500000000302, 0.00010443100000000205, 0.00010413899999999962, 0.000104514, 0.00010425000000000018, 0.00010408300000000134, 0.00010443100000000205, 0.00010430499999999898, 0.00010358300000000084, 0.00010381900000000152, 0.0001038749999999998, 0.00010363899999999912, 0.00010355499999999823, 0.0001036810000000013, 0.0001037360000000001, 0.0001040139999999995, 0.0001040139999999995, 0.00010355600000000117, 0.0001037360000000001, 0.00010398599999999689, 0.0001038339999999971, 0.00010380600000000142, 0.00010426400000000322, 0.00010376299999999977, 0.00010362500000000302, 0.00010381899999999805, 0.00010386100000000023, 0.0001040139999999995, 0.00010425000000000018, 0.00010454199999999914, 0.00010440199999999997, 0.00010383300000000109, 0.00010411199999999995, 0.00010425000000000018, 0.00010384700000000066, 0.0001036810000000013, 0.00010447199999999782, 0.00010430499999999898, 0.00010431900000000202, 0.00010409700000000091, 0.00010447199999999782, 0.00010380600000000142, 0.00010450000000000043, 0.0001037360000000001, 0.0001040139999999995]</msg>
<status status="PASS" starttime="20201110 08:37:02.792" endtime="20201110 08:37:02.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.788" endtime="20201110 08:37:02.795"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.797" endtime="20201110 08:37:02.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.800" endtime="20201110 08:37:02.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.799" endtime="20201110 08:37:02.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.795" endtime="20201110 08:37:02.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.428" endtime="20201110 08:37:02.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.428" endtime="20201110 08:37:02.821"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.830" endtime="20201110 08:37:02.849"></status>
</kw>
<msg timestamp="20201110 08:37:02.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.828" endtime="20201110 08:37:02.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.850" endtime="20201110 08:37:02.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.853" endtime="20201110 08:37:02.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.826" endtime="20201110 08:37:02.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.824" endtime="20201110 08:37:02.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.862" endtime="20201110 08:37:03.147"></status>
</kw>
<msg timestamp="20201110 08:37:03.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.860" endtime="20201110 08:37:03.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021667875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.151" endtime="20201110 08:37:03.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.159" endtime="20201110 08:37:03.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.858" endtime="20201110 08:37:03.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.856" endtime="20201110 08:37:03.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.166" level="INFO">${RESULT} = [{'time': 0.021667875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010563900000000112, 'source_diff': 0.00010563900000000112}, {'time': 0.021813208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.163" endtime="20201110 08:37:03.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.179" level="INFO">${ACCURACY} = {'source_diff': [0.00010563900000000112, 0.00010470800000000197, 0.00010456999999999828, 0.00010459700000000141, 0.0001047360000000011, 0.0001053750000000013, 0.00010537499999999783, 0.000105166000000...</msg>
<status status="PASS" starttime="20201110 08:37:03.167" endtime="20201110 08:37:03.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.183" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.182" endtime="20201110 08:37:03.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.186" level="INFO">VALUE: [0.00010563900000000112, 0.00010470800000000197, 0.00010456999999999828, 0.00010459700000000141, 0.0001047360000000011, 0.0001053750000000013, 0.00010537499999999783, 0.00010516600000000029, 0.00010513900000000062, 0.00010515300000000019, 0.00010479199999999939, 0.00010475000000000068, 0.00010525000000000118, 0.00010500000000000093, 0.00010543000000000011, 0.00010494500000000212, 0.00010513800000000115, 0.0001053750000000013, 0.00010526400000000075, 0.0001047499999999972, 0.00010547200000000229, 0.0001053750000000013, 0.00010545900000000219, 0.00010549999999999796, 0.000104820000000002, 0.00010547299999999829, 0.00010512500000000105, 0.00010504199999999964, 0.00010469500000000187, 0.00010481899999999905, 0.00010519399999999943, 0.0001053200000000025, 0.00010531999999999903, 0.0001050559999999992, 0.00010456999999999828, 0.00010504199999999964, 0.00010548599999999839, 0.00010519500000000237, 0.00010516699999999976, 0.00010550000000000143, 0.00010462500000000055, 0.0001050140000000005, 0.00010525000000000118, 0.00010537499999999783, 0.00010494399999999918, 0.00010515300000000019, 0.00010463900000000012, 0.00010486100000000123, 0.00010469500000000187, 0.0001045689999999988]</msg>
<status status="PASS" starttime="20201110 08:37:03.184" endtime="20201110 08:37:03.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.180" endtime="20201110 08:37:03.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.189" endtime="20201110 08:37:03.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.193" endtime="20201110 08:37:03.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.191" endtime="20201110 08:37:03.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.188" endtime="20201110 08:37:03.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.822" endtime="20201110 08:37:03.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.822" endtime="20201110 08:37:03.213"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.222" endtime="20201110 08:37:03.241"></status>
</kw>
<msg timestamp="20201110 08:37:03.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.220" endtime="20201110 08:37:03.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.243" endtime="20201110 08:37:03.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.245" endtime="20201110 08:37:03.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.218" endtime="20201110 08:37:03.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.216" endtime="20201110 08:37:03.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.254" endtime="20201110 08:37:03.541"></status>
</kw>
<msg timestamp="20201110 08:37:03.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.252" endtime="20201110 08:37:03.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.545" endtime="20201110 08:37:03.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.553" endtime="20201110 08:37:03.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.250" endtime="20201110 08:37:03.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.248" endtime="20201110 08:37:03.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.560" level="INFO">${RESULT} = [{'time': 0.021641528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001065560000000007, 'source_diff': 0.0001065560000000007}, {'time': 0.021800861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.557" endtime="20201110 08:37:03.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.573" level="INFO">${ACCURACY} = {'source_diff': [0.0001065560000000007, 0.00010562500000000155, 0.00010636100000000273, 0.00010609699999999944, 0.00010594400000000018, 0.00010586099999999876, 0.00010632000000000003, 0.00010562500000...</msg>
<status status="PASS" starttime="20201110 08:37:03.561" endtime="20201110 08:37:03.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.577" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.576" endtime="20201110 08:37:03.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.580" level="INFO">VALUE: [0.0001065560000000007, 0.00010562500000000155, 0.00010636100000000273, 0.00010609699999999944, 0.00010594400000000018, 0.00010586099999999876, 0.00010632000000000003, 0.00010562500000000155, 0.00010602699999999812, 0.00010648599999999939, 0.00010618100000000033, 0.0001058750000000018, 0.00010595799999999975, 0.00010633300000000012, 0.00010591700000000051, 0.00010626399999999828, 0.00010559699999999894, 0.00010577799999999735, 0.0001063339999999996, 0.00010576399999999778, 0.00010569399999999993, 0.00010558400000000231, 0.00010562499999999808, 0.00010654199999999767, 0.00010631900000000055, 0.00010558299999999937, 0.00010588900000000137, 0.00010645800000000025, 0.000105820000000003, 0.00010556999999999928, 0.000106514000000002, 0.00010622200000000304, 0.00010594400000000018, 0.00010625000000000218, 0.00010630499999999751, 0.00010616699999999729, 0.00010637499999999883, 0.00010557000000000274, 0.00010566700000000026, 0.0001060690000000003, 0.00010645800000000025, 0.00010590300000000094, 0.00010558299999999937, 0.0001061949999999999, 0.00010570900000000244, 0.00010559699999999894, 0.00010616700000000076, 0.0001060690000000003, 0.00010611099999999901, 0.00010586100000000223]</msg>
<status status="PASS" starttime="20201110 08:37:03.578" endtime="20201110 08:37:03.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.574" endtime="20201110 08:37:03.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.583" endtime="20201110 08:37:03.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.587" endtime="20201110 08:37:03.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.585" endtime="20201110 08:37:03.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.582" endtime="20201110 08:37:03.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.214" endtime="20201110 08:37:03.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.214" endtime="20201110 08:37:03.608"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.616" endtime="20201110 08:37:03.635"></status>
</kw>
<msg timestamp="20201110 08:37:03.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.615" endtime="20201110 08:37:03.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.637" endtime="20201110 08:37:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.639" endtime="20201110 08:37:03.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.612" endtime="20201110 08:37:03.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.610" endtime="20201110 08:37:03.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.648" endtime="20201110 08:37:03.935"></status>
</kw>
<msg timestamp="20201110 08:37:03.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.647" endtime="20201110 08:37:03.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.939" endtime="20201110 08:37:03.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.947" endtime="20201110 08:37:03.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.644" endtime="20201110 08:37:03.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.642" endtime="20201110 08:37:03.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.953" level="INFO">${RESULT} = [{'time': 0.021642472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010756899999999833, 'source_diff': 0.00010756899999999833}, {'time': 0.021788819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.950" endtime="20201110 08:37:03.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:03.966" level="INFO">${ACCURACY} = {'source_diff': [0.00010756899999999833, 0.00010673599999999964, 0.00010729200000000189, 0.000107514000000003, 0.0001073889999999994, 0.0001067499999999992, 0.00010741699999999854, 0.00010744500000000...</msg>
<status status="PASS" starttime="20201110 08:37:03.954" endtime="20201110 08:37:03.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.971" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:37:03.970" endtime="20201110 08:37:03.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.973" level="INFO">VALUE: [0.00010756899999999833, 0.00010673599999999964, 0.00010729200000000189, 0.000107514000000003, 0.0001073889999999994, 0.0001067499999999992, 0.00010741699999999854, 0.00010744500000000115, 0.00010673599999999964, 0.00010672299999999954, 0.00010722200000000057, 0.00010701399999999903, 0.00010741699999999854, 0.00010676400000000225, 0.00010719400000000143, 0.00010730600000000146, 0.00010680500000000148, 0.00010718000000000186, 0.00010652699999999862, 0.00010747200000000082, 0.00010731900000000155, 0.00010736100000000026, 0.00010668100000000083, 0.0001070560000000012, 0.00010741700000000201, 0.00010652800000000157, 0.0001072499999999997, 0.00010673599999999964, 0.00010712499999999958, 0.00010743100000000158, 0.00010655599999999724, 0.00010699999999999946, 0.00010729099999999894, 0.00010698599999999989, 0.00010682000000000053, 0.00010734700000000069, 0.00010744400000000168, 0.00010705499999999826, 0.00010669399999999746, 0.00010666600000000179, 0.00010668099999999736, 0.00010734699999999722, 0.00010687499999999933, 0.00010731999999999756, 0.00010712499999999958, 0.00010734700000000069, 0.0001072499999999997, 0.00010744500000000115, 0.0001068889999999989, 0.00010682000000000053]</msg>
<status status="PASS" starttime="20201110 08:37:03.972" endtime="20201110 08:37:03.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.967" endtime="20201110 08:37:03.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.977" endtime="20201110 08:37:03.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.980" endtime="20201110 08:37:04.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.979" endtime="20201110 08:37:04.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.975" endtime="20201110 08:37:04.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.609" endtime="20201110 08:37:04.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.608" endtime="20201110 08:37:04.001"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.010" endtime="20201110 08:37:04.029"></status>
</kw>
<msg timestamp="20201110 08:37:04.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.008" endtime="20201110 08:37:04.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.031" endtime="20201110 08:37:04.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.033" endtime="20201110 08:37:04.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.006" endtime="20201110 08:37:04.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.004" endtime="20201110 08:37:04.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.042" endtime="20201110 08:37:04.330"></status>
</kw>
<msg timestamp="20201110 08:37:04.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.040" endtime="20201110 08:37:04.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.334" endtime="20201110 08:37:04.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.342" endtime="20201110 08:37:04.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.038" endtime="20201110 08:37:04.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.036" endtime="20201110 08:37:04.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.349" level="INFO">${RESULT} = [{'time': 0.021767944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001082500000000007, 'source_diff': 0.0001082500000000007}, {'time': 0.021915319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.346" endtime="20201110 08:37:04.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:04.362" level="INFO">${ACCURACY} = {'source_diff': [0.0001082500000000007, 0.00010819399999999896, 0.0001082500000000007, 0.00010824999999999724, 0.00010812500000000058, 0.00010833299999999865, 0.00010759700000000094, 0.000107986000000...</msg>
<status status="PASS" starttime="20201110 08:37:04.350" endtime="20201110 08:37:04.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.367" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:37:04.366" endtime="20201110 08:37:04.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.369" level="INFO">VALUE: [0.0001082500000000007, 0.00010819399999999896, 0.0001082500000000007, 0.00010824999999999724, 0.00010812500000000058, 0.00010833299999999865, 0.00010759700000000094, 0.00010798600000000089, 0.00010812500000000058, 0.0001080279999999996, 0.00010765299999999922, 0.00010831899999999908, 0.00010826400000000028, 0.00010800000000000046, 0.00010794499999999818, 0.00010765299999999922, 0.00010782000000000153, 0.00010850000000000096, 0.00010777800000000282, 0.00010822200000000157, 0.0001082219999999981, 0.00010812500000000058, 0.000108208999999998, 0.00010845799999999878, 0.00010766599999999932, 0.0001080699999999983, 0.00010762500000000008, 0.00010837500000000083, 0.00010812500000000058, 0.00010836100000000126, 0.00010798600000000089, 0.00010805599999999874, 0.00010794499999999818, 0.0001083340000000016, 0.00010829199999999942, 0.0001077500000000002, 0.0001078889999999999, 0.0001082630000000008, 0.00010807000000000178, 0.00010847200000000182, 0.00010769399999999846, 0.00010827700000000037, 0.0001077500000000002, 0.00010820799999999853, 0.00010809699999999797, 0.00010791599999999957, 0.0001080699999999983, 0.0001085829999999989, 0.0001083890000000004, 0.00010819399999999896]</msg>
<status status="PASS" starttime="20201110 08:37:04.368" endtime="20201110 08:37:04.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.363" endtime="20201110 08:37:04.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.373" endtime="20201110 08:37:04.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.376" endtime="20201110 08:37:04.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.375" endtime="20201110 08:37:04.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.371" endtime="20201110 08:37:04.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.002" endtime="20201110 08:37:04.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.001" endtime="20201110 08:37:04.397"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.406" endtime="20201110 08:37:04.425"></status>
</kw>
<msg timestamp="20201110 08:37:04.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.404" endtime="20201110 08:37:04.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.427" endtime="20201110 08:37:04.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.429" endtime="20201110 08:37:04.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.402" endtime="20201110 08:37:04.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.400" endtime="20201110 08:37:04.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.438" endtime="20201110 08:37:04.725"></status>
</kw>
<msg timestamp="20201110 08:37:04.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.437" endtime="20201110 08:37:04.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.730" endtime="20201110 08:37:04.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.738" endtime="20201110 08:37:04.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.434" endtime="20201110 08:37:04.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.432" endtime="20201110 08:37:04.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.745" level="INFO">${RESULT} = [{'time': 0.021732056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010958399999999938, 'source_diff': 0.00010958399999999938}, {'time': 0.021884403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:04.742" endtime="20201110 08:37:04.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:04.758" level="INFO">${ACCURACY} = {'source_diff': [0.00010958399999999938, 0.00010881999999999906, 0.00010950000000000196, 0.00010949999999999849, 0.00010901399999999756, 0.00010865300000000022, 0.00010869499999999893, 0.0001095000000...</msg>
<status status="PASS" starttime="20201110 08:37:04.746" endtime="20201110 08:37:04.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.763" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:37:04.762" endtime="20201110 08:37:04.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.765" level="INFO">VALUE: [0.00010958399999999938, 0.00010881999999999906, 0.00010950000000000196, 0.00010949999999999849, 0.00010901399999999756, 0.00010865300000000022, 0.00010869499999999893, 0.00010950000000000196, 0.00010870799999999903, 0.00010891700000000004, 0.00010936100000000226, 0.00010862500000000108, 0.00010929200000000042, 0.00010918000000000039, 0.00010943100000000011, 0.00010876400000000078, 0.00010894499999999918, 0.00010883299999999915, 0.00010925000000000171, 0.00010858300000000237, 0.00010944400000000021, 0.00010856899999999933, 0.00010894399999999971, 0.00010875000000000121, 0.00010858399999999838, 0.00010906899999999983, 0.00010911099999999854, 0.00010888899999999743, 0.00010859699999999847, 0.00010890300000000047, 0.00010901399999999756, 0.00010912499999999811, 0.00010949999999999849, 0.00010925000000000171, 0.00010863900000000065, 0.00010944400000000021, 0.00010868099999999936, 0.00010929200000000042, 0.00010891700000000004, 0.00010901400000000103, 0.00010880599999999949, 0.00010880600000000296, 0.0001091950000000029, 0.0001085699999999988, 0.0001093890000000014, 0.0001093890000000014, 0.00010863900000000065, 0.00010933399999999913, 0.00010901400000000103, 0.00010954099999999772]</msg>
<status status="PASS" starttime="20201110 08:37:04.764" endtime="20201110 08:37:04.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.759" endtime="20201110 08:37:04.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.769" endtime="20201110 08:37:04.770"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.772" endtime="20201110 08:37:04.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.771" endtime="20201110 08:37:04.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.767" endtime="20201110 08:37:04.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.398" endtime="20201110 08:37:04.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.398" endtime="20201110 08:37:04.793"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.802" endtime="20201110 08:37:04.821"></status>
</kw>
<msg timestamp="20201110 08:37:04.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.800" endtime="20201110 08:37:04.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.823" endtime="20201110 08:37:04.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.825" endtime="20201110 08:37:04.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.798" endtime="20201110 08:37:04.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.796" endtime="20201110 08:37:04.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.834" endtime="20201110 08:37:05.121"></status>
</kw>
<msg timestamp="20201110 08:37:05.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.833" endtime="20201110 08:37:05.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021606847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.125" endtime="20201110 08:37:05.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.133" endtime="20201110 08:37:05.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.830" endtime="20201110 08:37:05.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.828" endtime="20201110 08:37:05.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.140" level="INFO">${RESULT} = [{'time': 0.021717611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011076400000000278, 'source_diff': 0.00011076400000000278}, {'time': 0.021874944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:05.137" endtime="20201110 08:37:05.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:05.154" level="INFO">${ACCURACY} = {'source_diff': [0.00011076400000000278, 0.00011004100000000169, 0.00010972299999999907, 0.00011036099999999979, 0.00010987499999999886, 0.00011045900000000025, 0.00011049999999999949, 0.0001096389999...</msg>
<status status="PASS" starttime="20201110 08:37:05.142" endtime="20201110 08:37:05.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.158" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:37:05.157" endtime="20201110 08:37:05.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.161" level="INFO">VALUE: [0.00011076400000000278, 0.00011004100000000169, 0.00010972299999999907, 0.00011036099999999979, 0.00010987499999999886, 0.00011045900000000025, 0.00011049999999999949, 0.00010963899999999818, 0.00010994500000000018, 0.00011036099999999979, 0.00011023699999999914, 0.00010990300000000147, 0.00011037499999999936, 0.00010990300000000147, 0.00010962499999999861, 0.00011038799999999946, 0.00010983300000000015, 0.00010986099999999929, 0.00011026299999999933, 0.00010995800000000028, 0.00010983300000000015, 0.00011024999999999924, 0.00011018100000000086, 0.0001100700000000003, 0.00010958399999999938, 0.00010955500000000076, 0.00010986199999999877, 0.00011025000000000271, 0.00010962499999999861, 0.0001100830000000004, 0.00010983300000000015, 0.00010994500000000018, 0.00011036099999999979, 0.00011012499999999911, 0.000109902999999998, 0.00010974999999999874, 0.00011037499999999936, 0.00011022299999999957, 0.00010968100000000036, 0.00010981900000000058, 0.00011023599999999967, 0.00011051399999999906, 0.00010986099999999929, 0.00011004100000000169, 0.00011038899999999893, 0.00010994500000000018, 0.00011047299999999982, 0.00011048599999999992, 0.00010959699999999947, 0.00011012499999999911]</msg>
<status status="PASS" starttime="20201110 08:37:05.159" endtime="20201110 08:37:05.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.155" endtime="20201110 08:37:05.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.164" endtime="20201110 08:37:05.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.168" endtime="20201110 08:37:05.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.166" endtime="20201110 08:37:05.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.162" endtime="20201110 08:37:05.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.794" endtime="20201110 08:37:05.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.794" endtime="20201110 08:37:05.188"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.197" endtime="20201110 08:37:05.216"></status>
</kw>
<msg timestamp="20201110 08:37:05.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.195" endtime="20201110 08:37:05.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.218" endtime="20201110 08:37:05.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.220" endtime="20201110 08:37:05.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.193" endtime="20201110 08:37:05.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.191" endtime="20201110 08:37:05.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.229" endtime="20201110 08:37:05.516"></status>
</kw>
<msg timestamp="20201110 08:37:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.228" endtime="20201110 08:37:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021512528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021624083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.520" endtime="20201110 08:37:05.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.528" endtime="20201110 08:37:05.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.225" endtime="20201110 08:37:05.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.223" endtime="20201110 08:37:05.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.535" level="INFO">${RESULT} = [{'time': 0.021624083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001115549999999993, 'source_diff': 0.0001115549999999993}, {'time': 0.021775458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:05.532" endtime="20201110 08:37:05.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:05.548" level="INFO">${ACCURACY} = {'source_diff': [0.0001115549999999993, 0.00011138899999999993, 0.00011094500000000118, 0.00011126399999999981, 0.00011134699999999775, 0.00011129200000000242, 0.00011069499999999746, 0.00011099999999...</msg>
<status status="PASS" starttime="20201110 08:37:05.536" endtime="20201110 08:37:05.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.553" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:37:05.552" endtime="20201110 08:37:05.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.555" level="INFO">VALUE: [0.0001115549999999993, 0.00011138899999999993, 0.00011094500000000118, 0.00011126399999999981, 0.00011134699999999775, 0.00011129200000000242, 0.00011069499999999746, 0.00011099999999999999, 0.00011069399999999799, 0.00011076399999999931, 0.00011086100000000029, 0.00011063900000000265, 0.00011086100000000029, 0.00011098600000000042, 0.00011127799999999938, 0.00011112500000000011, 0.00011119400000000196, 0.0001105700000000008, 0.00011148600000000092, 0.00011138899999999993, 0.00011094500000000118, 0.00011105599999999827, 0.00011094400000000171, 0.00011105500000000226, 0.00011079199999999845, 0.00011136100000000079, 0.00011091700000000204, 0.00011069399999999799, 0.0001109159999999991, 0.00011108399999999741, 0.00011074999999999974, 0.00011148599999999745, 0.000111209000000001, 0.00011131900000000208, 0.00011063899999999918, 0.00011074999999999974, 0.00011126399999999981, 0.00011136100000000079, 0.00011073600000000017, 0.00011111100000000054, 0.00011109700000000097, 0.00011130599999999852, 0.00011080499999999854, 0.00011087499999999986, 0.00011126399999999981, 0.00011111100000000054, 0.00011068100000000136, 0.0001105549999999983, 0.00011129199999999895, 0.00011068000000000189]</msg>
<status status="PASS" starttime="20201110 08:37:05.554" endtime="20201110 08:37:05.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.549" endtime="20201110 08:37:05.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.559" endtime="20201110 08:37:05.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.562" endtime="20201110 08:37:05.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.560" endtime="20201110 08:37:05.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.557" endtime="20201110 08:37:05.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.189" endtime="20201110 08:37:05.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.189" endtime="20201110 08:37:05.583"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.591" endtime="20201110 08:37:05.611"></status>
</kw>
<msg timestamp="20201110 08:37:05.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.590" endtime="20201110 08:37:05.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.612" endtime="20201110 08:37:05.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.615" endtime="20201110 08:37:05.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.587" endtime="20201110 08:37:05.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.585" endtime="20201110 08:37:05.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.624" endtime="20201110 08:37:05.910"></status>
</kw>
<msg timestamp="20201110 08:37:05.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021510778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.622" endtime="20201110 08:37:05.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021510778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.914" endtime="20201110 08:37:05.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.922" endtime="20201110 08:37:05.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.620" endtime="20201110 08:37:05.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.618" endtime="20201110 08:37:05.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.928" level="INFO">${RESULT} = [{'time': 0.021623264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011248599999999845, 'source_diff': 0.00011248599999999845}, {'time': 0.021783569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:05.925" endtime="20201110 08:37:05.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:05.941" level="INFO">${ACCURACY} = {'source_diff': [0.00011248599999999845, 0.0001122359999999982, 0.0001120419999999997, 0.00011225000000000124, 0.00011197300000000132, 0.0001122359999999982, 0.00011241599999999713, 0.0001116529999999...</msg>
<status status="PASS" starttime="20201110 08:37:05.929" endtime="20201110 08:37:05.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.946" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:37:05.945" endtime="20201110 08:37:05.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.948" level="INFO">VALUE: [0.00011248599999999845, 0.0001122359999999982, 0.0001120419999999997, 0.00011225000000000124, 0.00011197300000000132, 0.0001122359999999982, 0.00011241599999999713, 0.00011165299999999975, 0.00011179099999999997, 0.00011180500000000301, 0.00011199999999999752, 0.00011236100000000179, 0.00011161099999999757, 0.00011173600000000117, 0.0001115419999999992, 0.00011220799999999906, 0.00011165200000000028, 0.00011245899999999878, 0.00011241700000000007, 0.00011226400000000081, 0.00011172199999999813, 0.00011241700000000007, 0.0001117229999999976, 0.00011227800000000038, 0.0001124160000000006, 0.00011225000000000124, 0.00011227800000000038, 0.00011231999999999909, 0.00011195799999999881, 0.0001124160000000006, 0.00011198599999999795, 0.0001115419999999992, 0.00011191699999999957, 0.00011186100000000129, 0.00011159799999999748, 0.00011248599999999845, 0.00011204100000000022, 0.00011244499999999921, 0.00011222199999999863, 0.00011193099999999914, 0.00011250000000000149, 0.0001120549999999998, 0.00011194499999999871, 0.00011236100000000179, 0.00011176400000000031, 0.00011249999999999802, 0.00011229199999999995, 0.00011197299999999785, 0.00011226399999999734, 0.0001119160000000001]</msg>
<status status="PASS" starttime="20201110 08:37:05.947" endtime="20201110 08:37:05.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.942" endtime="20201110 08:37:05.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.952" endtime="20201110 08:37:05.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.955" endtime="20201110 08:37:05.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.954" endtime="20201110 08:37:05.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.950" endtime="20201110 08:37:05.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.584" endtime="20201110 08:37:05.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.583" endtime="20201110 08:37:05.976"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.984" endtime="20201110 08:37:06.004"></status>
</kw>
<msg timestamp="20201110 08:37:06.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.983" endtime="20201110 08:37:06.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.006" endtime="20201110 08:37:06.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.008" endtime="20201110 08:37:06.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.980" endtime="20201110 08:37:06.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.978" endtime="20201110 08:37:06.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.017" endtime="20201110 08:37:06.304"></status>
</kw>
<msg timestamp="20201110 08:37:06.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.016" endtime="20201110 08:37:06.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021584667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021698528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.308" endtime="20201110 08:37:06.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.316" endtime="20201110 08:37:06.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.013" endtime="20201110 08:37:06.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.011" endtime="20201110 08:37:06.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.323" level="INFO">${RESULT} = [{'time': 0.021698528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011386100000000329, 'source_diff': 0.00011386100000000329}, {'time': 0.021854875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:06.320" endtime="20201110 08:37:06.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:06.336" level="INFO">${ACCURACY} = {'source_diff': [0.00011386100000000329, 0.00011283299999999968, 0.00011336099999999932, 0.00011329200000000095, 0.00011265300000000075, 0.0001125420000000002, 0.00011251399999999759, 0.00011323599999...</msg>
<status status="PASS" starttime="20201110 08:37:06.324" endtime="20201110 08:37:06.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.340" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:37:06.339" endtime="20201110 08:37:06.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.343" level="INFO">VALUE: [0.00011386100000000329, 0.00011283299999999968, 0.00011336099999999932, 0.00011329200000000095, 0.00011265300000000075, 0.0001125420000000002, 0.00011251399999999759, 0.0001132359999999992, 0.00011265199999999781, 0.00011280600000000002, 0.00011334799999999923, 0.00011316600000000135, 0.00011357000000000034, 0.00011311099999999907, 0.00011287500000000186, 0.00011287500000000186, 0.00011334699999999975, 0.00011298599999999895, 0.0001134169999999976, 0.00011280500000000054, 0.00011304100000000122, 0.00011345800000000031, 0.00011311100000000254, 0.00011279200000000045, 0.00011322199999999963, 0.0001128749999999984, 0.00011287500000000186, 0.0001134169999999976, 0.00011293000000000067, 0.00011318100000000039, 0.00011341700000000107, 0.00011325000000000224, 0.00011311099999999907, 0.00011331900000000061, 0.00011261199999999805, 0.00011313900000000168, 0.0001132229999999991, 0.00011318100000000039, 0.00011261100000000204, 0.00011262500000000161, 0.00011268099999999989, 0.00011266599999999738, 0.00011313799999999874, 0.00011305600000000027, 0.00011255599999999977, 0.00011293000000000067, 0.0001125420000000002, 0.00011347199999999988, 0.00011318100000000039, 0.00011293100000000014]</msg>
<status status="PASS" starttime="20201110 08:37:06.341" endtime="20201110 08:37:06.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.337" endtime="20201110 08:37:06.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.346" endtime="20201110 08:37:06.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.350" endtime="20201110 08:37:06.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.348" endtime="20201110 08:37:06.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.345" endtime="20201110 08:37:06.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.977" endtime="20201110 08:37:06.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.976" endtime="20201110 08:37:06.370"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.380" endtime="20201110 08:37:06.400"></status>
</kw>
<msg timestamp="20201110 08:37:06.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.378" endtime="20201110 08:37:06.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.401" endtime="20201110 08:37:06.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.404" endtime="20201110 08:37:06.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.375" endtime="20201110 08:37:06.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.373" endtime="20201110 08:37:06.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.413" endtime="20201110 08:37:06.698"></status>
</kw>
<msg timestamp="20201110 08:37:06.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.411" endtime="20201110 08:37:06.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022672569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.702" endtime="20201110 08:37:06.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.710" endtime="20201110 08:37:06.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.409" endtime="20201110 08:37:06.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.407" endtime="20201110 08:37:06.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.717" level="INFO">${RESULT} = [{'time': 0.022787306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011473700000000017, 'source_diff': 0.00011473700000000017}, {'time': 0.022950597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:06.713" endtime="20201110 08:37:06.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:06.730" level="INFO">${ACCURACY} = {'source_diff': [0.00011473700000000017, 0.00011401399999999909, 0.0001137229999999996, 0.00011383300000000068, 0.00011393000000000167, 0.00011381900000000111, 0.00011411100000000007, 0.00011444500000...</msg>
<status status="PASS" starttime="20201110 08:37:06.718" endtime="20201110 08:37:06.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.734" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:37:06.733" endtime="20201110 08:37:06.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.737" level="INFO">VALUE: [0.00011473700000000017, 0.00011401399999999909, 0.0001137229999999996, 0.00011383300000000068, 0.00011393000000000167, 0.00011381900000000111, 0.00011411100000000007, 0.00011444500000000121, 0.00011395800000000081, 0.0001137359999999997, 0.00011416699999999835, 0.0001144299999999987, 0.00011365300000000175, 0.00011397200000000038, 0.00011380499999999807, 0.00011390299999999853, 0.00011377800000000188, 0.00011445900000000078, 0.0001135420000000012, 0.00011408400000000041, 0.000114290999999999, 0.00011440299999999903, 0.00011372200000000013, 0.0001137359999999997, 0.00011407000000000084, 0.00011433400000000066, 0.00011390199999999906, 0.0001137359999999997, 0.00011362499999999914, 0.0001140970000000005, 0.00011365199999999881, 0.00011437500000000336, 0.00011402799999999866, 0.00011408300000000093, 0.00011369400000000099, 0.00011440299999999903, 0.0001144169999999986, 0.0001137909999999985, 0.00011411100000000007, 0.00011440199999999956, 0.0001142360000000002, 0.00011380499999999807, 0.00011386200000000277, 0.0001139160000000021, 0.0001138749999999994, 0.00011366699999999785, 0.0001144169999999986, 0.00011397299999999985, 0.00011412499999999964, 0.00011424999999999977]</msg>
<status status="PASS" starttime="20201110 08:37:06.735" endtime="20201110 08:37:06.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.731" endtime="20201110 08:37:06.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.740" endtime="20201110 08:37:06.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.743" endtime="20201110 08:37:06.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.742" endtime="20201110 08:37:06.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.739" endtime="20201110 08:37:06.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.371" endtime="20201110 08:37:06.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.371" endtime="20201110 08:37:06.764"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.773" endtime="20201110 08:37:06.792"></status>
</kw>
<msg timestamp="20201110 08:37:06.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.771" endtime="20201110 08:37:06.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.794" endtime="20201110 08:37:06.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.796" endtime="20201110 08:37:06.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.769" endtime="20201110 08:37:06.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.767" endtime="20201110 08:37:06.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.805" endtime="20201110 08:37:07.092"></status>
</kw>
<msg timestamp="20201110 08:37:07.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.804" endtime="20201110 08:37:07.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.097" endtime="20201110 08:37:07.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.105" endtime="20201110 08:37:07.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.801" endtime="20201110 08:37:07.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.800" endtime="20201110 08:37:07.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.111" level="INFO">${RESULT} = [{'time': 0.021635389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011558300000000243, 'source_diff': 0.00011558300000000243}, {'time': 0.021795694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:07.108" endtime="20201110 08:37:07.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.124" level="INFO">${ACCURACY} = {'source_diff': [0.00011558300000000243, 0.00011533300000000218, 0.00011495899999999781, 0.00011454199999999873, 0.00011516699999999935, 0.00011493099999999867, 0.00011522200000000163, 0.0001154309999...</msg>
<status status="PASS" starttime="20201110 08:37:07.112" endtime="20201110 08:37:07.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.129" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.128" endtime="20201110 08:37:07.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.131" level="INFO">VALUE: [0.00011558300000000243, 0.00011533300000000218, 0.00011495899999999781, 0.00011454199999999873, 0.00011516699999999935, 0.00011493099999999867, 0.00011522200000000163, 0.00011543099999999917, 0.00011508299999999846, 0.00011486099999999735, 0.00011475000000000027, 0.00011498700000000042, 0.00011502799999999966, 0.00011515299999999978, 0.00011516700000000282, 0.00011545799999999884, 0.00011536099999999785, 0.00011497199999999791, 0.00011466699999999885, 0.00011468100000000189, 0.0001154169999999996, 0.00011515200000000031, 0.00011490299999999953, 0.00011469399999999852, 0.000115388999999997, 0.0001148750000000004, 0.00011490299999999953, 0.00011504199999999923, 0.00011502800000000313, 0.00011547199999999841, 0.00011534700000000175, 0.00011486100000000082, 0.00011502799999999966, 0.00011543099999999917, 0.0001152230000000011, 0.00011516699999999935, 0.00011504199999999923, 0.00011536099999999785, 0.00011488899999999996, 0.00011461100000000057, 0.0001154299999999997, 0.000114597000000001, 0.00011500000000000052, 0.00011461100000000057, 0.0001145689999999984, 0.00011498600000000095, 0.00011545799999999884, 0.00011513900000000021, 0.00011522200000000163, 0.00011472199999999766]</msg>
<status status="PASS" starttime="20201110 08:37:07.130" endtime="20201110 08:37:07.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.125" endtime="20201110 08:37:07.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.135" endtime="20201110 08:37:07.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.138" endtime="20201110 08:37:07.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.137" endtime="20201110 08:37:07.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.133" endtime="20201110 08:37:07.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.765" endtime="20201110 08:37:07.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.765" endtime="20201110 08:37:07.159"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.168" endtime="20201110 08:37:07.187"></status>
</kw>
<msg timestamp="20201110 08:37:07.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.166" endtime="20201110 08:37:07.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.189" endtime="20201110 08:37:07.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.191" endtime="20201110 08:37:07.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.163" endtime="20201110 08:37:07.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.161" endtime="20201110 08:37:07.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.202" endtime="20201110 08:37:07.490"></status>
</kw>
<msg timestamp="20201110 08:37:07.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.201" endtime="20201110 08:37:07.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021623139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.494" endtime="20201110 08:37:07.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.502" endtime="20201110 08:37:07.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.198" endtime="20201110 08:37:07.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.195" endtime="20201110 08:37:07.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.509" level="INFO">${RESULT} = [{'time': 0.021739486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011634699999999928, 'source_diff': 0.00011634699999999928}, {'time': 0.02190775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:07.505" endtime="20201110 08:37:07.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.522" level="INFO">${ACCURACY} = {'source_diff': [0.00011634699999999928, 0.00011633299999999971, 0.00011637499999999842, 0.00011558300000000243, 0.00011551400000000059, 0.00011608399999999894, 0.00011549999999999755, 0.0001156109999...</msg>
<status status="PASS" starttime="20201110 08:37:07.510" endtime="20201110 08:37:07.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.526" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.525" endtime="20201110 08:37:07.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.529" level="INFO">VALUE: [0.00011634699999999928, 0.00011633299999999971, 0.00011637499999999842, 0.00011558300000000243, 0.00011551400000000059, 0.00011608399999999894, 0.00011549999999999755, 0.0001156109999999981, 0.00011572200000000213, 0.00011615299999999731, 0.0001157910000000005, 0.00011595799999999934, 0.00011633399999999919, 0.00011552800000000016, 0.00011613900000000121, 0.0001158889999999975, 0.00011629200000000048, 0.00011602800000000066, 0.00011586099999999835, 0.00011558300000000243, 0.00011577800000000041, 0.00011640300000000103, 0.00011641600000000113, 0.00011566699999999985, 0.00011648599999999898, 0.00011616700000000035, 0.00011591600000000063, 0.00011590300000000053, 0.00011647200000000288, 0.00011595799999999934, 0.00011588900000000096, 0.00011577700000000093, 0.00011559699999999853, 0.00011633399999999919, 0.00011627800000000091, 0.00011583399999999869, 0.00011581999999999912, 0.00011573599999999823, 0.00011555499999999982, 0.0001158620000000013, 0.00011609699999999903, 0.00011594399999999977, 0.00011573599999999823, 0.000116388999999998, 0.00011570799999999909, 0.00011642999999999723, 0.00011552700000000068, 0.00011625000000000177, 0.00011640200000000156, 0.0001160970000000025]</msg>
<status status="PASS" starttime="20201110 08:37:07.527" endtime="20201110 08:37:07.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.523" endtime="20201110 08:37:07.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.532" endtime="20201110 08:37:07.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.536" endtime="20201110 08:37:07.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.534" endtime="20201110 08:37:07.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.531" endtime="20201110 08:37:07.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.160" endtime="20201110 08:37:07.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.159" endtime="20201110 08:37:07.557"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.565" endtime="20201110 08:37:07.585"></status>
</kw>
<msg timestamp="20201110 08:37:07.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.564" endtime="20201110 08:37:07.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.587" endtime="20201110 08:37:07.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.589" endtime="20201110 08:37:07.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.561" endtime="20201110 08:37:07.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.559" endtime="20201110 08:37:07.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.598" endtime="20201110 08:37:07.883"></status>
</kw>
<msg timestamp="20201110 08:37:07.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.596" endtime="20201110 08:37:07.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021613556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.888" endtime="20201110 08:37:07.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.895" endtime="20201110 08:37:07.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.594" endtime="20201110 08:37:07.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.592" endtime="20201110 08:37:07.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.902" level="INFO">${RESULT} = [{'time': 0.021731472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011791600000000263, 'source_diff': 0.00011791600000000263}, {'time': 0.021899736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:07.899" endtime="20201110 08:37:07.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:07.915" level="INFO">${ACCURACY} = {'source_diff': [0.00011791600000000263, 0.0001173049999999981, 0.00011734799999999976, 0.00011723599999999973, 0.00011734700000000028, 0.00011736099999999985, 0.00011734700000000028, 0.00011690300000...</msg>
<status status="PASS" starttime="20201110 08:37:07.903" endtime="20201110 08:37:07.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.920" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:37:07.919" endtime="20201110 08:37:07.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.922" level="INFO">VALUE: [0.00011791600000000263, 0.0001173049999999981, 0.00011734799999999976, 0.00011723599999999973, 0.00011734700000000028, 0.00011736099999999985, 0.00011734700000000028, 0.00011690300000000153, 0.00011666699999999738, 0.00011684799999999926, 0.00011722200000000016, 0.00011722200000000016, 0.00011737499999999942, 0.00011747200000000041, 0.0001167499999999988, 0.00011715300000000178, 0.0001169300000000012, 0.00011704200000000123, 0.00011748599999999998, 0.00011666700000000085, 0.00011704100000000175, 0.0001172499999999993, 0.0001172369999999992, 0.00011676399999999837, 0.00011712499999999917, 0.00011747200000000041, 0.00011697299999999938, 0.00011672200000000313, 0.00011701399999999862, 0.00011712499999999917, 0.00011680600000000055, 0.00011681899999999718, 0.00011684700000000325, 0.00011647200000000288, 0.00011697199999999991, 0.00011729099999999854, 0.0001174309999999977, 0.00011716700000000135, 0.00011729099999999854, 0.00011730600000000105, 0.00011729199999999801, 0.00011654200000000073, 0.00011665299999999781, 0.00011665300000000128, 0.00011716599999999841, 0.00011726399999999887, 0.0001165560000000003, 0.00011736099999999985, 0.00011734700000000028, 0.00011665300000000128]</msg>
<status status="PASS" starttime="20201110 08:37:07.921" endtime="20201110 08:37:07.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.916" endtime="20201110 08:37:07.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.926" endtime="20201110 08:37:07.927"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.929" endtime="20201110 08:37:07.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.927" endtime="20201110 08:37:07.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.924" endtime="20201110 08:37:07.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.558" endtime="20201110 08:37:07.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.557" endtime="20201110 08:37:07.950"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.958" endtime="20201110 08:37:07.978"></status>
</kw>
<msg timestamp="20201110 08:37:07.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.957" endtime="20201110 08:37:07.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.980" endtime="20201110 08:37:07.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.982" endtime="20201110 08:37:07.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.954" endtime="20201110 08:37:07.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.952" endtime="20201110 08:37:07.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.991" endtime="20201110 08:37:08.278"></status>
</kw>
<msg timestamp="20201110 08:37:08.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.989" endtime="20201110 08:37:08.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.282" endtime="20201110 08:37:08.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.290" endtime="20201110 08:37:08.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.987" endtime="20201110 08:37:08.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.985" endtime="20201110 08:37:08.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.296" level="INFO">${RESULT} = [{'time': 0.021644486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011869400000000252, 'source_diff': 0.00011869400000000252}, {'time': 0.021808819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.293" endtime="20201110 08:37:08.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.309" level="INFO">${ACCURACY} = {'source_diff': [0.00011869400000000252, 0.00011831899999999868, 0.00011770800000000109, 0.00011793100000000167, 0.0001179439999999983, 0.00011812500000000017, 0.00011833300000000171, 0.00011806899999...</msg>
<status status="PASS" starttime="20201110 08:37:08.297" endtime="20201110 08:37:08.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.314" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.313" endtime="20201110 08:37:08.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.316" level="INFO">VALUE: [0.00011869400000000252, 0.00011831899999999868, 0.00011770800000000109, 0.00011793100000000167, 0.0001179439999999983, 0.00011812500000000017, 0.00011833300000000171, 0.00011806899999999843, 0.00011827699999999997, 0.00011784700000000078, 0.00011765299999999881, 0.00011802799999999919, 0.00011813899999999974, 0.00011817999999999898, 0.00011768000000000195, 0.000118389, 0.00011786100000000035, 0.00011765300000000228, 0.00011816599999999941, 0.00011815299999999931, 0.00011779199999999851, 0.00011779099999999904, 0.0001182370000000002, 0.00011795900000000081, 0.00011823600000000073, 0.00011852799999999969, 0.00011798600000000048, 0.00011792999999999873, 0.0001176110000000001, 0.00011827799999999944, 0.00011827799999999944, 0.00011754099999999879, 0.00011779200000000198, 0.00011773600000000023, 0.00011783300000000121, 0.00011836100000000085, 0.00011820799999999812, 0.00011804099999999929, 0.00011757000000000087, 0.00011809699999999757, 0.00011797200000000091, 0.0001179300000000022, 0.0001182500000000003, 0.00011829199999999901, 0.00011772300000000013, 0.00011773600000000023, 0.00011784699999999732, 0.00011831999999999815, 0.0001176110000000001, 0.00011847199999999794]</msg>
<status status="PASS" starttime="20201110 08:37:08.315" endtime="20201110 08:37:08.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.310" endtime="20201110 08:37:08.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.320" endtime="20201110 08:37:08.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.323" endtime="20201110 08:37:08.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.322" endtime="20201110 08:37:08.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.318" endtime="20201110 08:37:08.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.951" endtime="20201110 08:37:08.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.950" endtime="20201110 08:37:08.344"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.353" endtime="20201110 08:37:08.373"></status>
</kw>
<msg timestamp="20201110 08:37:08.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.351" endtime="20201110 08:37:08.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.374" endtime="20201110 08:37:08.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.377" endtime="20201110 08:37:08.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.349" endtime="20201110 08:37:08.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.347" endtime="20201110 08:37:08.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.385" endtime="20201110 08:37:08.672"></status>
</kw>
<msg timestamp="20201110 08:37:08.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.384" endtime="20201110 08:37:08.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.676" endtime="20201110 08:37:08.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.684" endtime="20201110 08:37:08.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.381" endtime="20201110 08:37:08.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.380" endtime="20201110 08:37:08.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.690" level="INFO">${RESULT} = [{'time': 0.021647333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011987500000000192, 'source_diff': 0.00011987500000000192}, {'time': 0.021804597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.687" endtime="20201110 08:37:08.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:08.704" level="INFO">${ACCURACY} = {'source_diff': [0.00011987500000000192, 0.00011877799999999994, 0.00011923699999999773, 0.00011856899999999893, 0.00011886099999999789, 0.00011865299999999981, 0.00011859699999999807, 0.0001191669999...</msg>
<status status="PASS" starttime="20201110 08:37:08.691" endtime="20201110 08:37:08.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.708" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:37:08.707" endtime="20201110 08:37:08.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.710" level="INFO">VALUE: [0.00011987500000000192, 0.00011877799999999994, 0.00011923699999999773, 0.00011856899999999893, 0.00011886099999999789, 0.00011865299999999981, 0.00011859699999999807, 0.00011916699999999988, 0.00011854200000000273, 0.00011908400000000194, 0.0001185690000000024, 0.0001194309999999997, 0.0001191249999999977, 0.00011892999999999973, 0.00011915300000000031, 0.00011891600000000016, 0.0001189439999999993, 0.00011865200000000034, 0.00011933299999999925, 0.00011940300000000056, 0.00011926400000000087, 0.00011872199999999819, 0.00011919499999999902, 0.00011888800000000102, 0.00011915300000000031, 0.00011922200000000216, 0.00011880500000000307, 0.00011901400000000062, 0.00011922200000000216, 0.00011947299999999841, 0.00011913900000000074, 0.0001189309999999992, 0.00011887500000000092, 0.00011909699999999857, 0.00011941700000000013, 0.00011897199999999844, 0.00011902700000000072, 0.00011858300000000196, 0.00011859699999999807, 0.00011915300000000031, 0.00011922199999999869, 0.00011863800000000077, 0.00011859700000000153, 0.00011866699999999938, 0.00011926400000000087, 0.00011877700000000047, 0.00011856899999999893, 0.00011881999999999865, 0.00011884800000000126, 0.00011915299999999684]</msg>
<status status="PASS" starttime="20201110 08:37:08.709" endtime="20201110 08:37:08.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.704" endtime="20201110 08:37:08.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.714" endtime="20201110 08:37:08.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.718" endtime="20201110 08:37:08.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.716" endtime="20201110 08:37:08.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.712" endtime="20201110 08:37:08.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.345" endtime="20201110 08:37:08.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.345" endtime="20201110 08:37:08.738"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.747" endtime="20201110 08:37:08.767"></status>
</kw>
<msg timestamp="20201110 08:37:08.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.745" endtime="20201110 08:37:08.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.768" endtime="20201110 08:37:08.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.771" endtime="20201110 08:37:08.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.743" endtime="20201110 08:37:08.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.741" endtime="20201110 08:37:08.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.780" endtime="20201110 08:37:09.068"></status>
</kw>
<msg timestamp="20201110 08:37:09.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02169725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:08.778" endtime="20201110 08:37:09.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021576875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02169725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:09.072" endtime="20201110 08:37:09.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.080" endtime="20201110 08:37:09.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.776" endtime="20201110 08:37:09.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.774" endtime="20201110 08:37:09.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.087" level="INFO">${RESULT} = [{'time': 0.02169725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012037500000000242, 'source_diff': 0.00012037500000000242}, {'time': 0.021852611, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:09.084" endtime="20201110 08:37:09.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.100" level="INFO">${ACCURACY} = {'source_diff': [0.00012037500000000242, 0.0001196110000000021, 0.00012038899999999852, 0.0001204440000000008, 0.00012019400000000055, 0.00012038899999999852, 0.00012013899999999827, 0.000120417000000...</msg>
<status status="PASS" starttime="20201110 08:37:09.088" endtime="20201110 08:37:09.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.104" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.103" endtime="20201110 08:37:09.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.107" level="INFO">VALUE: [0.00012037500000000242, 0.0001196110000000021, 0.00012038899999999852, 0.0001204440000000008, 0.00012019400000000055, 0.00012038899999999852, 0.00012013899999999827, 0.00012041700000000113, 0.00012020800000000012, 0.0001198050000000006, 0.00012027800000000144, 0.00011965299999999734, 0.00012019500000000002, 0.00012018099999999698, 0.0001195829999999995, 0.00012013899999999827, 0.00012004200000000076, 0.00012004100000000129, 0.00012004200000000076, 0.00012009699999999957, 0.00012013900000000174, 0.0001200699999999999, 0.00012019399999999708, 0.0001202089999999996, 0.0001195829999999995, 0.00012051300000000265, 0.00012038899999999852, 0.00012020800000000012, 0.00011952800000000069, 0.00012033300000000025, 0.00012022299999999916, 0.00012036099999999939, 0.00011979100000000104, 0.00011976400000000137, 0.00012029100000000154, 0.00012040300000000156, 0.00011956899999999993, 0.00012026400000000187, 0.00012047299999999941, 0.00012001399999999815, 0.0001197089999999991, 0.00011979100000000104, 0.00012020800000000012, 0.00011963899999999777, 0.0001197639999999979, 0.00012033399999999972, 0.00012022199999999969, 0.000120083, 0.00012015300000000131, 0.00011968099999999995]</msg>
<status status="PASS" starttime="20201110 08:37:09.105" endtime="20201110 08:37:09.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.101" endtime="20201110 08:37:09.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.110" endtime="20201110 08:37:09.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.114" endtime="20201110 08:37:09.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.112" endtime="20201110 08:37:09.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.109" endtime="20201110 08:37:09.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.739" endtime="20201110 08:37:09.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.739" endtime="20201110 08:37:09.134"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.143" endtime="20201110 08:37:09.163"></status>
</kw>
<msg timestamp="20201110 08:37:09.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.142" endtime="20201110 08:37:09.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.165" endtime="20201110 08:37:09.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.167" endtime="20201110 08:37:09.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.139" endtime="20201110 08:37:09.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.137" endtime="20201110 08:37:09.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.176" endtime="20201110 08:37:09.462"></status>
</kw>
<msg timestamp="20201110 08:37:09.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.174" endtime="20201110 08:37:09.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021577931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021699458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.466" endtime="20201110 08:37:09.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.474" endtime="20201110 08:37:09.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.172" endtime="20201110 08:37:09.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.170" endtime="20201110 08:37:09.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.480" level="INFO">${RESULT} = [{'time': 0.021699458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012152699999999975, 'source_diff': 0.00012152699999999975}, {'time': 0.021861778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:09.477" endtime="20201110 08:37:09.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.493" level="INFO">${ACCURACY} = {'source_diff': [0.00012152699999999975, 0.0001207639999999989, 0.00012120800000000112, 0.00012052800000000169, 0.00012120799999999765, 0.00012091700000000163, 0.00012070799999999715, 0.00012116699999...</msg>
<status status="PASS" starttime="20201110 08:37:09.481" endtime="20201110 08:37:09.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.498" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.497" endtime="20201110 08:37:09.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.500" level="INFO">VALUE: [0.00012152699999999975, 0.0001207639999999989, 0.00012120800000000112, 0.00012052800000000169, 0.00012120799999999765, 0.00012091700000000163, 0.00012070799999999715, 0.00012116699999999841, 0.00012116599999999894, 0.00012145899999999737, 0.0001212090000000006, 0.00012051400000000212, 0.00012106999999999743, 0.00012127799999999897, 0.00012095800000000087, 0.0001211249999999997, 0.0001207639999999989, 0.00012101399999999915, 0.0001207090000000001, 0.00012145800000000137, 0.0001211379999999998, 0.00012108400000000047, 0.00012083400000000022, 0.0001210969999999971, 0.00012099999999999958, 0.00012086099999999989, 0.00012134700000000082, 0.00012068000000000148, 0.00012145800000000137, 0.0001207639999999989, 0.00012133400000000072, 0.00012084700000000032, 0.00012083400000000022, 0.00012132000000000115, 0.00012097299999999991, 0.00012073599999999976, 0.00012108400000000047, 0.0001209440000000013, 0.00012144500000000127, 0.00012069400000000105, 0.00012098600000000001, 0.0001209310000000012, 0.00012122200000000069, 0.00012059700000000007, 0.00012079200000000151, 0.00012068100000000095, 0.00012104199999999829, 0.00012088899999999903, 0.00012097199999999697, 0.0001211249999999997]</msg>
<status status="PASS" starttime="20201110 08:37:09.499" endtime="20201110 08:37:09.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.494" endtime="20201110 08:37:09.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.504" endtime="20201110 08:37:09.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.507" endtime="20201110 08:37:09.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.506" endtime="20201110 08:37:09.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.502" endtime="20201110 08:37:09.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.135" endtime="20201110 08:37:09.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.135" endtime="20201110 08:37:09.528"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.537" endtime="20201110 08:37:09.557"></status>
</kw>
<msg timestamp="20201110 08:37:09.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.535" endtime="20201110 08:37:09.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.558" endtime="20201110 08:37:09.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.561" endtime="20201110 08:37:09.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.533" endtime="20201110 08:37:09.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.531" endtime="20201110 08:37:09.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.570" endtime="20201110 08:37:09.856"></status>
</kw>
<msg timestamp="20201110 08:37:09.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.568" endtime="20201110 08:37:09.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021637847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.861" endtime="20201110 08:37:09.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.868" endtime="20201110 08:37:09.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.566" endtime="20201110 08:37:09.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.564" endtime="20201110 08:37:09.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.875" level="INFO">${RESULT} = [{'time': 0.021760306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012245899999999837, 'source_diff': 0.00012245899999999837}, {'time': 0.021925597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:09.872" endtime="20201110 08:37:09.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:09.888" level="INFO">${ACCURACY} = {'source_diff': [0.00012245899999999837, 0.00012155500000000236, 0.00012191700000000263, 0.00012149999999999661, 0.00012198599999999754, 0.00012175000000000033, 0.00012206899999999896, 0.0001215139999...</msg>
<status status="PASS" starttime="20201110 08:37:09.876" endtime="20201110 08:37:09.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.893" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:37:09.892" endtime="20201110 08:37:09.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.895" level="INFO">VALUE: [0.00012245899999999837, 0.00012155500000000236, 0.00012191700000000263, 0.00012149999999999661, 0.00012198599999999754, 0.00012175000000000033, 0.00012206899999999896, 0.00012151399999999965, 0.0001222220000000017, 0.0001217090000000011, 0.00012158400000000097, 0.00012194399999999883, 0.0001222640000000004, 0.00012177800000000294, 0.0001221250000000007, 0.0001222090000000016, 0.0001222770000000005, 0.00012195900000000134, 0.00012151399999999965, 0.00012152799999999922, 0.00012177800000000294, 0.000122083000000002, 0.000122083000000002, 0.00012208400000000147, 0.00012151399999999965, 0.00012201400000000015, 0.00012201400000000015, 0.00012143000000000223, 0.00012197200000000144, 0.00012180599999999861, 0.00012208299999999853, 0.0001222770000000005, 0.00012219400000000255, 0.0001217090000000011, 0.00012172200000000119, 0.00012201400000000015, 0.0001219579999999984, 0.00012209700000000157, 0.00012172200000000119, 0.00012209700000000157, 0.0001221250000000007, 0.00012233399999999825, 0.00012202799999999972, 0.00012216599999999994, 0.00012215200000000037, 0.00012159700000000107, 0.00012227799999999997, 0.00012216699999999941, 0.00012247200000000194, 0.00012220799999999865]</msg>
<status status="PASS" starttime="20201110 08:37:09.894" endtime="20201110 08:37:09.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.889" endtime="20201110 08:37:09.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.898" endtime="20201110 08:37:09.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.902" endtime="20201110 08:37:09.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.900" endtime="20201110 08:37:09.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.897" endtime="20201110 08:37:09.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.529" endtime="20201110 08:37:09.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.528" endtime="20201110 08:37:09.923"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.931" endtime="20201110 08:37:09.951"></status>
</kw>
<msg timestamp="20201110 08:37:09.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.930" endtime="20201110 08:37:09.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.953" endtime="20201110 08:37:09.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.955" endtime="20201110 08:37:09.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.927" endtime="20201110 08:37:09.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.925" endtime="20201110 08:37:09.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.964" endtime="20201110 08:37:10.251"></status>
</kw>
<msg timestamp="20201110 08:37:10.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.963" endtime="20201110 08:37:10.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.256" endtime="20201110 08:37:10.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.263" endtime="20201110 08:37:10.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.960" endtime="20201110 08:37:10.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.958" endtime="20201110 08:37:10.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.270" level="INFO">${RESULT} = [{'time': 0.021694806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012373700000000223, 'source_diff': 0.00012373700000000223}, {'time': 0.021860097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.267" endtime="20201110 08:37:10.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.283" level="INFO">${ACCURACY} = {'source_diff': [0.00012373700000000223, 0.00012290299999999713, 0.00012286099999999842, 0.0001227640000000009, 0.0001228189999999997, 0.00012315300000000085, 0.00012277800000000047, 0.000122832999999...</msg>
<status status="PASS" starttime="20201110 08:37:10.271" endtime="20201110 08:37:10.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.288" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.287" endtime="20201110 08:37:10.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.290" level="INFO">VALUE: [0.00012373700000000223, 0.00012290299999999713, 0.00012286099999999842, 0.0001227640000000009, 0.0001228189999999997, 0.00012315300000000085, 0.00012277800000000047, 0.00012283299999999928, 0.00012258400000000197, 0.00012288900000000103, 0.00012331999999999968, 0.0001232640000000014, 0.00012283400000000222, 0.00012302699999999778, 0.00012261099999999817, 0.00012313900000000128, 0.0001225419999999998, 0.0001229999999999981, 0.0001233060000000001, 0.00012279200000000004, 0.0001227640000000009, 0.0001232359999999988, 0.0001230700000000029, 0.00012294399999999983, 0.00012258299999999903, 0.00012330500000000064, 0.00012343100000000023, 0.00012256899999999946, 0.00012263900000000078, 0.00012313799999999833, 0.00012280600000000308, 0.00012323600000000226, 0.0001228189999999997, 0.0001232779999999975, 0.00012319499999999955, 0.000122777000000001, 0.0001228059999999996, 0.00012337500000000196, 0.00012333299999999978, 0.0001232779999999975, 0.00012281999999999918, 0.0001225830000000025, 0.00012300000000000158, 0.00012265200000000087, 0.0001225700000000024, 0.0001227090000000021, 0.00012302800000000072, 0.00012287499999999799, 0.0001231250000000017, 0.00012333399999999925]</msg>
<status status="PASS" starttime="20201110 08:37:10.289" endtime="20201110 08:37:10.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.284" endtime="20201110 08:37:10.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.294" endtime="20201110 08:37:10.295"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.297" endtime="20201110 08:37:10.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.296" endtime="20201110 08:37:10.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.292" endtime="20201110 08:37:10.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.924" endtime="20201110 08:37:10.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.923" endtime="20201110 08:37:10.318"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.327" endtime="20201110 08:37:10.347"></status>
</kw>
<msg timestamp="20201110 08:37:10.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.325" endtime="20201110 08:37:10.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.348" endtime="20201110 08:37:10.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.351" endtime="20201110 08:37:10.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.323" endtime="20201110 08:37:10.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.320" endtime="20201110 08:37:10.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.360" endtime="20201110 08:37:10.647"></status>
</kw>
<msg timestamp="20201110 08:37:10.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.358" endtime="20201110 08:37:10.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.651" endtime="20201110 08:37:10.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.659" endtime="20201110 08:37:10.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.356" endtime="20201110 08:37:10.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.354" endtime="20201110 08:37:10.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.668" level="INFO">${RESULT} = [{'time': 0.021812764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012479199999999857, 'source_diff': 0.00012479199999999857}, {'time': 0.021982056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.663" endtime="20201110 08:37:10.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:10.682" level="INFO">${ACCURACY} = {'source_diff': [0.00012479199999999857, 0.00012356999999999993, 0.00012358300000000003, 0.00012397299999999944, 0.00012443100000000124, 0.00012436200000000286, 0.00012444400000000133, 0.0001244999999...</msg>
<status status="PASS" starttime="20201110 08:37:10.669" endtime="20201110 08:37:10.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.688" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:37:10.687" endtime="20201110 08:37:10.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.691" level="INFO">VALUE: [0.00012479199999999857, 0.00012356999999999993, 0.00012358300000000003, 0.00012397299999999944, 0.00012443100000000124, 0.00012436200000000286, 0.00012444400000000133, 0.0001244999999999996, 0.00012401399999999868, 0.00012355500000000089, 0.00012376399999999843, 0.00012424999999999936, 0.00012415300000000185, 0.0001238190000000007, 0.000123777999999998, 0.00012416699999999795, 0.0001235420000000008, 0.0001239999999999991, 0.00012383300000000028, 0.00012424999999999936, 0.0001239580000000004, 0.00012388799999999908, 0.00012359700000000307, 0.00012411099999999967, 0.00012362499999999874, 0.0001239299999999978, 0.0001241250000000027, 0.00012420900000000012, 0.00012380500000000114, 0.00012355500000000089, 0.00012437499999999949, 0.00012419500000000055, 0.0001241939999999976, 0.00012362499999999874, 0.0001235969999999996, 0.0001234579999999999, 0.00012406900000000096, 0.00012406900000000096, 0.00012408300000000053, 0.00012413900000000228, 0.00012365300000000135, 0.00012407000000000043, 0.00012363900000000178, 0.00012394400000000083, 0.0001241800000000015, 0.00012420800000000065, 0.00012417999999999804, 0.00012372199999999972, 0.00012393100000000074, 0.00012434700000000035]</msg>
<status status="PASS" starttime="20201110 08:37:10.689" endtime="20201110 08:37:10.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.684" endtime="20201110 08:37:10.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.696" endtime="20201110 08:37:10.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.700" endtime="20201110 08:37:10.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.698" endtime="20201110 08:37:10.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.694" endtime="20201110 08:37:10.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.319" endtime="20201110 08:37:10.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.318" endtime="20201110 08:37:10.721"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.729" endtime="20201110 08:37:10.749"></status>
</kw>
<msg timestamp="20201110 08:37:10.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.728" endtime="20201110 08:37:10.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.751" endtime="20201110 08:37:10.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.753" endtime="20201110 08:37:10.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.725" endtime="20201110 08:37:10.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.723" endtime="20201110 08:37:10.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.762" endtime="20201110 08:37:11.049"></status>
</kw>
<msg timestamp="20201110 08:37:11.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.761" endtime="20201110 08:37:11.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021741972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.053" endtime="20201110 08:37:11.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.061" endtime="20201110 08:37:11.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.758" endtime="20201110 08:37:11.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.757" endtime="20201110 08:37:11.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.067" level="INFO">${RESULT} = [{'time': 0.021741972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001253329999999983, 'source_diff': 0.0001253329999999983}, {'time': 0.021918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:11.064" endtime="20201110 08:37:11.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.080" level="INFO">${ACCURACY} = {'source_diff': [0.0001253329999999983, 0.00012516699999999895, 0.00012452799999999875, 0.00012538900000000006, 0.00012466599999999897, 0.00012526399999999993, 0.00012543100000000224, 0.00012504199999...</msg>
<status status="PASS" starttime="20201110 08:37:11.068" endtime="20201110 08:37:11.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.085" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.084" endtime="20201110 08:37:11.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.087" level="INFO">VALUE: [0.0001253329999999983, 0.00012516699999999895, 0.00012452799999999875, 0.00012538900000000006, 0.00012466599999999897, 0.00012526399999999993, 0.00012543100000000224, 0.00012504199999999882, 0.0001245559999999979, 0.000124777999999999, 0.00012490199999999965, 0.00012516599999999947, 0.00012511100000000067, 0.000125084000000001, 0.000124568999999998, 0.00012505600000000186, 0.0001247360000000003, 0.00012522200000000122, 0.00012486100000000042, 0.00012490299999999913, 0.0001244999999999996, 0.00012516699999999895, 0.00012519500000000156, 0.0001246519999999994, 0.00012486100000000042, 0.00012451400000000265, 0.0001250689999999985, 0.0001249299999999988, 0.0001249030000000026, 0.00012529200000000254, 0.00012481899999999824, 0.00012505499999999892, 0.0001249299999999988, 0.00012467999999999854, 0.00012462499999999974, 0.00012501399999999968, 0.00012530500000000264, 0.0001250000000000001, 0.0001253190000000022, 0.00012455499999999842, 0.00012525000000000036, 0.0001251109999999972, 0.0001252499999999969, 0.0001245559999999979, 0.00012545900000000137, 0.00012462499999999974, 0.00012494400000000183, 0.00012506999999999796, 0.00012469400000000158, 0.00012483399999999728]</msg>
<status status="PASS" starttime="20201110 08:37:11.086" endtime="20201110 08:37:11.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.081" endtime="20201110 08:37:11.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.091" endtime="20201110 08:37:11.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.094" endtime="20201110 08:37:11.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.093" endtime="20201110 08:37:11.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.089" endtime="20201110 08:37:11.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.722" endtime="20201110 08:37:11.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.721" endtime="20201110 08:37:11.115"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.124" endtime="20201110 08:37:11.144"></status>
</kw>
<msg timestamp="20201110 08:37:11.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.122" endtime="20201110 08:37:11.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.145" endtime="20201110 08:37:11.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.148" endtime="20201110 08:37:11.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.120" endtime="20201110 08:37:11.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.117" endtime="20201110 08:37:11.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.157" endtime="20201110 08:37:11.443"></status>
</kw>
<msg timestamp="20201110 08:37:11.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.155" endtime="20201110 08:37:11.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.447" endtime="20201110 08:37:11.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.455" endtime="20201110 08:37:11.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.153" endtime="20201110 08:37:11.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.151" endtime="20201110 08:37:11.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.462" level="INFO">${RESULT} = [{'time': 0.021867514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012607000000000243, 'source_diff': 0.00012607000000000243}, {'time': 0.022035819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.459" endtime="20201110 08:37:11.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.476" level="INFO">${ACCURACY} = {'source_diff': [0.00012607000000000243, 0.0001263190000000032, 0.00012609699999999863, 0.00012618100000000299, 0.0001259719999999985, 0.0001260130000000012, 0.0001261939999999996, 0.00012645799999999...</msg>
<status status="PASS" starttime="20201110 08:37:11.463" endtime="20201110 08:37:11.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.480" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.479" endtime="20201110 08:37:11.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.482" level="INFO">VALUE: [0.00012607000000000243, 0.0001263190000000032, 0.00012609699999999863, 0.00012618100000000299, 0.0001259719999999985, 0.0001260130000000012, 0.0001261939999999996, 0.00012645799999999943, 0.00012608299999999906, 0.00012562500000000074, 0.00012551400000000018, 0.00012644399999999986, 0.0001261939999999996, 0.00012626300000000146, 0.0001256939999999991, 0.00012644399999999986, 0.00012552700000000028, 0.00012637499999999802, 0.00012612500000000124, 0.00012548600000000104, 0.00012565299999999988, 0.00012598599999999807, 0.0001255559999999989, 0.00012636100000000192, 0.00012612499999999777, 0.00012566599999999997, 0.00012615300000000038, 0.00012604199999999982, 0.0001260689999999995, 0.0001259719999999985, 0.00012588900000000056, 0.0001259580000000024, 0.00012548600000000104, 0.0001259589999999984, 0.00012608299999999906, 0.00012643099999999977, 0.00012608299999999906, 0.00012580599999999914, 0.00012604100000000035, 0.0001258329999999988, 0.0001260559999999994, 0.00012626400000000093, 0.00012619499999999909, 0.00012618000000000004, 0.00012587500000000099, 0.0001257499999999974, 0.00012616699999999995, 0.00012565299999999988, 0.00012552799999999975, 0.000126471999999999]</msg>
<status status="PASS" starttime="20201110 08:37:11.481" endtime="20201110 08:37:11.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.476" endtime="20201110 08:37:11.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.486" endtime="20201110 08:37:11.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.489" endtime="20201110 08:37:11.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.488" endtime="20201110 08:37:11.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.484" endtime="20201110 08:37:11.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.116" endtime="20201110 08:37:11.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.115" endtime="20201110 08:37:11.510"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.519" endtime="20201110 08:37:11.539"></status>
</kw>
<msg timestamp="20201110 08:37:11.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.517" endtime="20201110 08:37:11.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.541" endtime="20201110 08:37:11.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.543" endtime="20201110 08:37:11.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.515" endtime="20201110 08:37:11.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.513" endtime="20201110 08:37:11.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.552" endtime="20201110 08:37:11.839"></status>
</kw>
<msg timestamp="20201110 08:37:11.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.550" endtime="20201110 08:37:11.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.843" endtime="20201110 08:37:11.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.851" endtime="20201110 08:37:11.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.548" endtime="20201110 08:37:11.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.546" endtime="20201110 08:37:11.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.857" level="INFO">${RESULT} = [{'time': 0.021822056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012740299999999816, 'source_diff': 0.00012740299999999816}, {'time': 0.021997306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.854" endtime="20201110 08:37:11.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:11.870" level="INFO">${ACCURACY} = {'source_diff': [0.00012740299999999816, 0.0001268199999999997, 0.00012661200000000164, 0.00012741599999999825, 0.00012702799999999778, 0.0001264450000000028, 0.00012665300000000088, 0.000126708000000...</msg>
<status status="PASS" starttime="20201110 08:37:11.858" endtime="20201110 08:37:11.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.875" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:37:11.874" endtime="20201110 08:37:11.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.877" level="INFO">VALUE: [0.00012740299999999816, 0.0001268199999999997, 0.00012661200000000164, 0.00012741599999999825, 0.00012702799999999778, 0.0001264450000000028, 0.00012665300000000088, 0.00012670800000000315, 0.0001272499999999989, 0.0001269450000000033, 0.0001271109999999992, 0.0001267910000000011, 0.00012686099999999895, 0.00012694499999999984, 0.00012725000000000236, 0.0001267910000000011, 0.0001273049999999977, 0.0001267919999999971, 0.00012647200000000247, 0.0001267360000000023, 0.00012663899999999784, 0.00012723599999999932, 0.0001273879999999991, 0.0001265130000000017, 0.0001266529999999974, 0.00012649999999999814, 0.0001264589999999989, 0.0001274300000000013, 0.00012694499999999984, 0.0001273049999999977, 0.00012651400000000118, 0.00012718100000000052, 0.0001270690000000005, 0.000126471999999999, 0.0001265970000000026, 0.0001268199999999997, 0.00012737499999999902, 0.00012647200000000247, 0.00012718100000000052, 0.00012677799999999753, 0.00012698599999999907, 0.00012716700000000095, 0.00012668100000000002, 0.0001269300000000008, 0.00012699999999999864, 0.0001273200000000002, 0.00012694400000000036, 0.0001270979999999991, 0.00012681900000000024, 0.00012681900000000024]</msg>
<status status="PASS" starttime="20201110 08:37:11.876" endtime="20201110 08:37:11.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.871" endtime="20201110 08:37:11.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.881" endtime="20201110 08:37:11.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.884" endtime="20201110 08:37:11.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.883" endtime="20201110 08:37:11.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.879" endtime="20201110 08:37:11.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.511" endtime="20201110 08:37:11.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.511" endtime="20201110 08:37:11.905"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.913" endtime="20201110 08:37:11.934"></status>
</kw>
<msg timestamp="20201110 08:37:11.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.912" endtime="20201110 08:37:11.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.935" endtime="20201110 08:37:11.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.938" endtime="20201110 08:37:11.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.909" endtime="20201110 08:37:11.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.907" endtime="20201110 08:37:11.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.947" endtime="20201110 08:37:12.235"></status>
</kw>
<msg timestamp="20201110 08:37:12.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.945" endtime="20201110 08:37:12.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021513042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.239" endtime="20201110 08:37:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.247" endtime="20201110 08:37:12.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.943" endtime="20201110 08:37:12.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.941" endtime="20201110 08:37:12.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.253" level="INFO">${RESULT} = [{'time': 0.021641097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012805500000000192, 'source_diff': 0.00012805500000000192}, {'time': 0.021803375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.250" endtime="20201110 08:37:12.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.266" level="INFO">${ACCURACY} = {'source_diff': [0.00012805500000000192, 0.00012790299999999866, 0.00012754199999999785, 0.0001276109999999997, 0.0001277499999999994, 0.00012804100000000235, 0.00012840299999999916, 0.000128138999999...</msg>
<status status="PASS" starttime="20201110 08:37:12.254" endtime="20201110 08:37:12.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.271" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.270" endtime="20201110 08:37:12.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.273" level="INFO">VALUE: [0.00012805500000000192, 0.00012790299999999866, 0.00012754199999999785, 0.0001276109999999997, 0.0001277499999999994, 0.00012804100000000235, 0.00012840299999999916, 0.00012813899999999934, 0.0001276940000000011, 0.0001276940000000011, 0.00012748599999999957, 0.00012786099999999995, 0.00012766700000000145, 0.00012826400000000293, 0.00012818099999999805, 0.00012834800000000035, 0.0001279720000000005, 0.00012773599999999982, 0.00012837500000000002, 0.00012786099999999995, 0.0001278330000000008, 0.00012798600000000007, 0.0001274170000000012, 0.00012802799999999878, 0.00012843100000000177, 0.00012798600000000007, 0.00012768000000000154, 0.00012786099999999995, 0.0001281110000000002, 0.00012748599999999957, 0.00012798600000000007, 0.0001279309999999978, 0.00012787499999999952, 0.00012766699999999798, 0.0001282079999999977, 0.00012784700000000038, 0.0001279170000000017, 0.00012834700000000088, 0.00012762499999999927, 0.00012779099999999863, 0.00012822199999999728, 0.0001283889999999996, 0.00012786099999999995, 0.0001277499999999994, 0.00012775000000000286, 0.00012802799999999878, 0.00012748599999999957, 0.00012829099999999913, 0.00012762499999999927, 0.00012794400000000136]</msg>
<status status="PASS" starttime="20201110 08:37:12.272" endtime="20201110 08:37:12.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.267" endtime="20201110 08:37:12.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.281" endtime="20201110 08:37:12.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.284" endtime="20201110 08:37:12.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.283" endtime="20201110 08:37:12.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.279" endtime="20201110 08:37:12.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.906" endtime="20201110 08:37:12.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.905" endtime="20201110 08:37:12.305"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.313" endtime="20201110 08:37:12.334"></status>
</kw>
<msg timestamp="20201110 08:37:12.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.312" endtime="20201110 08:37:12.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.335" endtime="20201110 08:37:12.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.338" endtime="20201110 08:37:12.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.309" endtime="20201110 08:37:12.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.307" endtime="20201110 08:37:12.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.347" endtime="20201110 08:37:12.633"></status>
</kw>
<msg timestamp="20201110 08:37:12.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.345" endtime="20201110 08:37:12.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021637417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.637" endtime="20201110 08:37:12.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.645" endtime="20201110 08:37:12.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.343" endtime="20201110 08:37:12.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.341" endtime="20201110 08:37:12.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.652" level="INFO">${RESULT} = [{'time': 0.021637417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012980599999999967, 'source_diff': 0.00012980599999999967}, {'time': 0.021815639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.649" endtime="20201110 08:37:12.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:12.665" level="INFO">${ACCURACY} = {'source_diff': [0.00012980599999999967, 0.00012913900000000034, 0.00012894500000000184, 0.00012917999999999957, 0.0001289309999999988, 0.00012867999999999907, 0.00012919500000000209, 0.00012908300000...</msg>
<status status="PASS" starttime="20201110 08:37:12.653" endtime="20201110 08:37:12.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.669" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:37:12.668" endtime="20201110 08:37:12.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.672" level="INFO">VALUE: [0.00012980599999999967, 0.00012913900000000034, 0.00012894500000000184, 0.00012917999999999957, 0.0001289309999999988, 0.00012867999999999907, 0.00012919500000000209, 0.00012908300000000206, 0.00012924999999999742, 0.00012868100000000202, 0.0001286110000000007, 0.00012945799999999896, 0.00012908399999999806, 0.0001292500000000009, 0.00012887500000000052, 0.0001289439999999989, 0.0001293330000000023, 0.00012926400000000046, 0.00012899999999999717, 0.00012931899999999927, 0.00012940300000000016, 0.00012863899999999984, 0.0001288339999999978, 0.0001287919999999991, 0.0001292500000000009, 0.00012927800000000003, 0.00012865199999999993, 0.0001287500000000004, 0.00012873600000000082, 0.00012874999999999692, 0.00012911200000000067, 0.0001285560000000019, 0.00012927800000000003, 0.0001288049999999992, 0.00012881899999999877, 0.0001291529999999999, 0.00012909699999999816, 0.00012909699999999816, 0.00012934799999999788, 0.00012908400000000153, 0.0001287500000000004, 0.0001289859999999976, 0.0001291110000000012, 0.0001287500000000004, 0.00012904099999999988, 0.00012880599999999867, 0.00012879200000000257, 0.00012854099999999938, 0.00012923600000000132, 0.00012884700000000138]</msg>
<status status="PASS" starttime="20201110 08:37:12.670" endtime="20201110 08:37:12.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.666" endtime="20201110 08:37:12.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.675" endtime="20201110 08:37:12.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.679" endtime="20201110 08:37:12.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.677" endtime="20201110 08:37:12.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.674" endtime="20201110 08:37:12.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.306" endtime="20201110 08:37:12.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.305" endtime="20201110 08:37:12.700"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.708" endtime="20201110 08:37:12.729"></status>
</kw>
<msg timestamp="20201110 08:37:12.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.707" endtime="20201110 08:37:12.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.730" endtime="20201110 08:37:12.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.732" endtime="20201110 08:37:12.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.704" endtime="20201110 08:37:12.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.702" endtime="20201110 08:37:12.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.742" endtime="20201110 08:37:13.028"></status>
</kw>
<msg timestamp="20201110 08:37:13.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.740" endtime="20201110 08:37:13.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021643556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.032" endtime="20201110 08:37:13.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.040" endtime="20201110 08:37:13.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.738" endtime="20201110 08:37:13.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.736" endtime="20201110 08:37:13.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.047" level="INFO">${RESULT} = [{'time': 0.021773861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013030499999999723, 'source_diff': 0.00013030499999999723}, {'time': 0.021955153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:13.044" endtime="20201110 08:37:13.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.060" level="INFO">${ACCURACY} = {'source_diff': [0.00013030499999999723, 0.00012983400000000228, 0.00013013800000000186, 0.00012983299999999934, 0.0001303050000000007, 0.00012970800000000268, 0.0001304310000000003, 0.000130262999999...</msg>
<status status="PASS" starttime="20201110 08:37:13.048" endtime="20201110 08:37:13.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.064" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.063" endtime="20201110 08:37:13.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.067" level="INFO">VALUE: [0.00013030499999999723, 0.00012983400000000228, 0.00013013800000000186, 0.00012983299999999934, 0.0001303050000000007, 0.00012970800000000268, 0.0001304310000000003, 0.00013026299999999852, 0.00013004200000000035, 0.0001303339999999993, 0.00012952800000000028, 0.00012988899999999762, 0.00012977800000000053, 0.0001299309999999998, 0.0001300829999999996, 0.00012963899999999737, 0.00013031999999999974, 0.0001302769999999981, 0.00012999999999999817, 0.00012976400000000096, 0.0001296530000000004, 0.00013008399999999906, 0.00012986200000000142, 0.00013037500000000202, 0.0001298890000000011, 0.00012995799999999946, 0.00013005599999999992, 0.00013013899999999787, 0.00012950000000000114, 0.0001303469999999994, 0.00013037500000000202, 0.0001304859999999991, 0.00012986099999999848, 0.00012963900000000084, 0.00013012500000000177, 0.00012976400000000096, 0.0001297089999999987, 0.00013043000000000082, 0.0001297500000000014, 0.00012988799999999814, 0.00012987500000000152, 0.00012988799999999814, 0.000130166999999997, 0.00013008399999999906, 0.00013013900000000134, 0.00012997199999999903, 0.00013029100000000113, 0.0001302079999999997, 0.0001301249999999983, 0.00012956899999999952]</msg>
<status status="PASS" starttime="20201110 08:37:13.066" endtime="20201110 08:37:13.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.061" endtime="20201110 08:37:13.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.070" endtime="20201110 08:37:13.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.074" endtime="20201110 08:37:13.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.072" endtime="20201110 08:37:13.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.069" endtime="20201110 08:37:13.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.700" endtime="20201110 08:37:13.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.700" endtime="20201110 08:37:13.095"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.103" endtime="20201110 08:37:13.124"></status>
</kw>
<msg timestamp="20201110 08:37:13.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.102" endtime="20201110 08:37:13.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.125" endtime="20201110 08:37:13.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.128" endtime="20201110 08:37:13.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.099" endtime="20201110 08:37:13.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.097" endtime="20201110 08:37:13.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.137" endtime="20201110 08:37:13.423"></status>
</kw>
<msg timestamp="20201110 08:37:13.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021473181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.135" endtime="20201110 08:37:13.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021473181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021605056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.427" endtime="20201110 08:37:13.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.435" endtime="20201110 08:37:13.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.132" endtime="20201110 08:37:13.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.131" endtime="20201110 08:37:13.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.441" level="INFO">${RESULT} = [{'time': 0.021605056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013187500000000005, 'source_diff': 0.00013187500000000005}, {'time': 0.021785333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:13.438" endtime="20201110 08:37:13.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.454" level="INFO">${ACCURACY} = {'source_diff': [0.00013187500000000005, 0.0001306660000000015, 0.0001308339999999998, 0.00013081900000000077, 0.00013141600000000225, 0.00013122299999999976, 0.00013147200000000053, 0.000131318999999...</msg>
<status status="PASS" starttime="20201110 08:37:13.442" endtime="20201110 08:37:13.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.459" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.458" endtime="20201110 08:37:13.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.461" level="INFO">VALUE: [0.00013187500000000005, 0.0001306660000000015, 0.0001308339999999998, 0.00013081900000000077, 0.00013141600000000225, 0.00013122299999999976, 0.00013147200000000053, 0.0001313189999999978, 0.0001309859999999996, 0.00013066599999999803, 0.00013080499999999773, 0.0001309310000000008, 0.00013119399999999767, 0.00013087499999999905, 0.00013118000000000157, 0.00013083300000000034, 0.00013049999999999867, 0.00013099999999999917, 0.00013080600000000067, 0.00013101399999999874, 0.0001307500000000024, 0.0001307639999999985, 0.00013105600000000092, 0.00013101399999999874, 0.00013106900000000102, 0.0001310700000000005, 0.00013051399999999824, 0.0001305140000000017, 0.00013088799999999914, 0.00013120799999999724, 0.0001311249999999993, 0.00013127799999999856, 0.00013054200000000085, 0.00013090200000000218, 0.00013086100000000295, 0.0001311249999999993, 0.00013055599999999695, 0.00013113899999999887, 0.00013076400000000196, 0.00013131900000000127, 0.0001307089999999997, 0.00013124999999999942, 0.0001305279999999978, 0.0001313890000000026, 0.00013133300000000084, 0.0001309029999999982, 0.00013069399999999717, 0.0001305279999999978, 0.00013100000000000264, 0.0001305830000000001]</msg>
<status status="PASS" starttime="20201110 08:37:13.460" endtime="20201110 08:37:13.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.455" endtime="20201110 08:37:13.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.465" endtime="20201110 08:37:13.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.468" endtime="20201110 08:37:13.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.467" endtime="20201110 08:37:13.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.463" endtime="20201110 08:37:13.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.096" endtime="20201110 08:37:13.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.095" endtime="20201110 08:37:13.489"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.498" endtime="20201110 08:37:13.519"></status>
</kw>
<msg timestamp="20201110 08:37:13.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.496" endtime="20201110 08:37:13.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.520" endtime="20201110 08:37:13.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.523" endtime="20201110 08:37:13.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.494" endtime="20201110 08:37:13.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.492" endtime="20201110 08:37:13.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.531" endtime="20201110 08:37:13.819"></status>
</kw>
<msg timestamp="20201110 08:37:13.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.530" endtime="20201110 08:37:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.823" endtime="20201110 08:37:13.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.831" endtime="20201110 08:37:13.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.527" endtime="20201110 08:37:13.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.526" endtime="20201110 08:37:13.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.837" level="INFO">${RESULT} = [{'time': 0.022195292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013247299999999754, 'source_diff': 0.00013247299999999754}, {'time': 0.022380583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:13.834" endtime="20201110 08:37:13.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:13.850" level="INFO">${ACCURACY} = {'source_diff': [0.00013247299999999754, 0.00013166599999999903, 0.00013211100000000073, 0.00013174999999999992, 0.00013186100000000048, 0.00013155599999999795, 0.00013197200000000103, 0.0001317219999...</msg>
<status status="PASS" starttime="20201110 08:37:13.838" endtime="20201110 08:37:13.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.855" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:37:13.854" endtime="20201110 08:37:13.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.857" level="INFO">VALUE: [0.00013247299999999754, 0.00013166599999999903, 0.00013211100000000073, 0.00013174999999999992, 0.00013186100000000048, 0.00013155599999999795, 0.00013197200000000103, 0.0001317219999999973, 0.00013154100000000238, 0.000132264, 0.00013242999999999935, 0.0001324449999999984, 0.00013208400000000106, 0.00013204199999999888, 0.0001319029999999992, 0.00013241699999999926, 0.0001321120000000002, 0.00013180600000000167, 0.00013223600000000085, 0.00013241599999999978, 0.00013223600000000085, 0.00013186100000000048, 0.00013219400000000214, 0.00013205599999999845, 0.00013180600000000167, 0.00013184800000000038, 0.00013216599999999953, 0.00013147200000000053, 0.00013209700000000116, 0.00013194500000000137, 0.00013236100000000098, 0.00013238900000000012, 0.0001316249999999998, 0.0001317920000000021, 0.00013222200000000128, 0.00013169500000000112, 0.00013230600000000217, 0.00013236100000000098, 0.0001315969999999972, 0.00013243099999999883, 0.00013156899999999805, 0.00013241599999999978, 0.00013155600000000142, 0.00013211100000000073, 0.0001316799999999986, 0.00013220799999999824, 0.00013204200000000235, 0.0001320279999999993, 0.00013229199999999913, 0.00013166700000000198]</msg>
<status status="PASS" starttime="20201110 08:37:13.856" endtime="20201110 08:37:13.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.851" endtime="20201110 08:37:13.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.861" endtime="20201110 08:37:13.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.864" endtime="20201110 08:37:13.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.863" endtime="20201110 08:37:13.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.859" endtime="20201110 08:37:13.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.490" endtime="20201110 08:37:13.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.490" endtime="20201110 08:37:13.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:34.221" endtime="20201110 08:37:13.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.889" endtime="20201110 08:37:13.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.888" endtime="20201110 08:37:13.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.886" endtime="20201110 08:37:13.909"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:34.121" endtime="20201110 08:37:13.910" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.916" endtime="20201110 08:37:13.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.915" endtime="20201110 08:37:13.936"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.950" endtime="20201110 08:37:13.962"></status>
</kw>
<msg timestamp="20201110 08:37:13.963" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.948" endtime="20201110 08:37:13.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.965" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.964" endtime="20201110 08:37:13.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.968" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:13.966" endtime="20201110 08:37:13.968"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:13.945" endtime="20201110 08:37:13.969"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:13.942" endtime="20201110 08:37:13.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.941" endtime="20201110 08:37:13.970"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:13.973" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:13.973" endtime="20201110 08:37:13.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.971" endtime="20201110 08:37:13.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.940" endtime="20201110 08:37:13.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.940" endtime="20201110 08:37:13.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.975" endtime="20201110 08:37:13.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.939" endtime="20201110 08:37:13.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.937" endtime="20201110 08:37:13.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.913" endtime="20201110 08:37:13.978"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.988" endtime="20201110 08:37:14.005"></status>
</kw>
<msg timestamp="20201110 08:37:14.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.986" endtime="20201110 08:37:14.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.006" endtime="20201110 08:37:14.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.009" endtime="20201110 08:37:14.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.983" endtime="20201110 08:37:14.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.981" endtime="20201110 08:37:14.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.017" endtime="20201110 08:37:14.301"></status>
</kw>
<msg timestamp="20201110 08:37:14.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063756569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06383575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:14.016" endtime="20201110 08:37:14.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063756569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.06383575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:14.305" endtime="20201110 08:37:14.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.313" endtime="20201110 08:37:14.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.013" endtime="20201110 08:37:14.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.012" endtime="20201110 08:37:14.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.321" level="INFO">${RESULT} = [{'time': 0.06383575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.918099999999761e-05, 'source_diff': 7.918099999999761e-05}, {'time': 0.063938694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:14.318" endtime="20201110 08:37:14.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.334" level="INFO">${ACCURACY} = {'source_diff': [7.918099999999761e-05, 7.840200000000519e-05, 7.84169999999973e-05, 7.836199999999849e-05, 7.84719999999961e-05, 7.840300000000466e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:37:14.322" endtime="20201110 08:37:14.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.339" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.338" endtime="20201110 08:37:14.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.341" level="INFO">VALUE: [7.918099999999761e-05, 7.840200000000519e-05, 7.84169999999973e-05, 7.836199999999849e-05, 7.84719999999961e-05, 7.840300000000466e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7.840200000000519e-05, 7.838899999999815e-05, 7.84169999999973e-05, 7.840299999999079e-05, 7.841599999999782e-05, 7.838899999999815e-05, 7.84169999999973e-05, 7.843000000000433e-05, 7.845800000000347e-05, 7.841700000001117e-05, 7.840300000000466e-05, 7.840299999999079e-05, 7.84169999999973e-05, 7.84169999999973e-05, 7.841599999999782e-05, 7.841700000001117e-05, 7.836099999999901e-05, 7.841599999999782e-05, 7.840200000000519e-05, 7.845900000000294e-05, 7.840299999999079e-05, 7.842999999999045e-05, 7.84719999999961e-05, 7.840300000000466e-05, 7.838900000001203e-05, 7.840299999999079e-05, 7.840200000000519e-05, 7.840200000000519e-05, 7.841700000001117e-05, 7.840199999999131e-05, 7.844399999999696e-05, 7.840300000000466e-05, 7.840300000000466e-05, 7.844500000001031e-05, 7.840199999999131e-05, 7.840300000000466e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7.84310000000038e-05, 7.841599999999782e-05, 7.841599999999782e-05, 7.842999999999045e-05]</msg>
<status status="PASS" starttime="20201110 08:37:14.340" endtime="20201110 08:37:14.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.335" endtime="20201110 08:37:14.342"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.344" endtime="20201110 08:37:14.346"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.348" endtime="20201110 08:37:14.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.346" endtime="20201110 08:37:14.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.343" endtime="20201110 08:37:14.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.979" endtime="20201110 08:37:14.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.979" endtime="20201110 08:37:14.369"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.378" endtime="20201110 08:37:14.395"></status>
</kw>
<msg timestamp="20201110 08:37:14.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.376" endtime="20201110 08:37:14.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.396" endtime="20201110 08:37:14.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.399" endtime="20201110 08:37:14.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.374" endtime="20201110 08:37:14.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.372" endtime="20201110 08:37:14.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.407" endtime="20201110 08:37:14.694"></status>
</kw>
<msg timestamp="20201110 08:37:14.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.406" endtime="20201110 08:37:14.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022216542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022295681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.698" endtime="20201110 08:37:14.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.707" endtime="20201110 08:37:14.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.403" endtime="20201110 08:37:14.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.402" endtime="20201110 08:37:14.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.713" level="INFO">${RESULT} = [{'time': 0.022295681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.913900000000237e-05, 'source_diff': 7.913900000000237e-05}, {'time': 0.022397139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:14.710" endtime="20201110 08:37:14.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:14.726" level="INFO">${ACCURACY} = {'source_diff': [7.913900000000237e-05, 7.84449999999999e-05, 7.842999999999739e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.84449999999999e-05, 7.842999999999739e-05, 7.8...</msg>
<status status="PASS" starttime="20201110 08:37:14.714" endtime="20201110 08:37:14.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.731" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:14.730" endtime="20201110 08:37:14.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.733" level="INFO">VALUE: [7.913900000000237e-05, 7.84449999999999e-05, 7.842999999999739e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.84449999999999e-05, 7.842999999999739e-05, 7.836099999999901e-05, 7.836099999999901e-05, 7.843100000000033e-05, 7.838799999999868e-05, 7.841599999999782e-05, 7.836099999999901e-05, 7.84169999999973e-05, 7.840299999999772e-05, 7.84169999999973e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.845899999999947e-05, 7.844399999999696e-05, 7.84030000000012e-05, 7.84169999999973e-05, 7.838900000000162e-05, 7.834799999999892e-05, 7.841599999999782e-05, 7.841700000000076e-05, 7.838799999999868e-05, 7.843000000000086e-05, 7.84030000000012e-05, 7.841599999999782e-05, 7.844400000000043e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.834699999999944e-05, 7.843000000000086e-05, 7.842999999999739e-05, 7.838900000000162e-05, 7.836199999999849e-05, 7.842999999999739e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.841600000000129e-05, 7.84030000000012e-05, 7.841599999999782e-05, 7.843000000000086e-05, 7.840299999999772e-05, 7.840299999999772e-05]</msg>
<status status="PASS" starttime="20201110 08:37:14.732" endtime="20201110 08:37:14.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.727" endtime="20201110 08:37:14.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.736" endtime="20201110 08:37:14.738"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.740" endtime="20201110 08:37:14.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.739" endtime="20201110 08:37:14.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.735" endtime="20201110 08:37:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.370" endtime="20201110 08:37:14.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.369" endtime="20201110 08:37:14.761"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.770" endtime="20201110 08:37:14.787"></status>
</kw>
<msg timestamp="20201110 08:37:14.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.768" endtime="20201110 08:37:14.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.788" endtime="20201110 08:37:14.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.791" endtime="20201110 08:37:14.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.766" endtime="20201110 08:37:14.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.764" endtime="20201110 08:37:14.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.799" endtime="20201110 08:37:15.085"></status>
</kw>
<msg timestamp="20201110 08:37:15.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.798" endtime="20201110 08:37:15.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.089" endtime="20201110 08:37:15.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.097" endtime="20201110 08:37:15.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.795" endtime="20201110 08:37:15.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.794" endtime="20201110 08:37:15.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.104" level="INFO">${RESULT} = [{'time': 0.021773139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915300000000194e-05, 'source_diff': 7.915300000000194e-05}, {'time': 0.021871125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.100" endtime="20201110 08:37:15.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.119" level="INFO">${ACCURACY} = {'source_diff': [7.915300000000194e-05, 7.84030000000012e-05, 7.842999999999739e-05, 7.848699999999861e-05, 7.841599999999782e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.8458e-05, 7.8403000000...</msg>
<status status="PASS" starttime="20201110 08:37:15.105" endtime="20201110 08:37:15.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.123" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.122" endtime="20201110 08:37:15.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.126" level="INFO">VALUE: [7.915300000000194e-05, 7.84030000000012e-05, 7.842999999999739e-05, 7.848699999999861e-05, 7.841599999999782e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.8458e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.843000000000086e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7.837499999999858e-05, 7.84449999999999e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.843100000000033e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.84169999999973e-05, 7.841700000000076e-05, 7.834699999999944e-05, 7.841700000000076e-05, 7.841600000000129e-05, 7.838900000000162e-05, 7.847199999999957e-05, 7.847199999999957e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.841600000000129e-05, 7.838900000000162e-05, 7.84449999999999e-05, 7.84169999999973e-05, 7.837499999999858e-05, 7.84030000000012e-05, 7.837499999999858e-05, 7.841599999999782e-05, 7.838899999999815e-05, 7.851400000000175e-05, 7.843000000000086e-05, 7.843100000000033e-05, 7.84169999999973e-05, 7.841600000000129e-05, 7.84030000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.124" endtime="20201110 08:37:15.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.120" endtime="20201110 08:37:15.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.129" endtime="20201110 08:37:15.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.133" endtime="20201110 08:37:15.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.131" endtime="20201110 08:37:15.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.128" endtime="20201110 08:37:15.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.762" endtime="20201110 08:37:15.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.762" endtime="20201110 08:37:15.153"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.162" endtime="20201110 08:37:15.179"></status>
</kw>
<msg timestamp="20201110 08:37:15.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.160" endtime="20201110 08:37:15.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.180" endtime="20201110 08:37:15.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.183" endtime="20201110 08:37:15.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.158" endtime="20201110 08:37:15.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.156" endtime="20201110 08:37:15.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.191" endtime="20201110 08:37:15.478"></status>
</kw>
<msg timestamp="20201110 08:37:15.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.190" endtime="20201110 08:37:15.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.482" endtime="20201110 08:37:15.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.490" endtime="20201110 08:37:15.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.187" endtime="20201110 08:37:15.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.186" endtime="20201110 08:37:15.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.497" level="INFO">${RESULT} = [{'time': 0.021758056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916700000000151e-05, 'source_diff': 7.916700000000151e-05}, {'time': 0.021852903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.493" endtime="20201110 08:37:15.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.510" level="INFO">${ACCURACY} = {'source_diff': [7.916700000000151e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.838899999999815e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:15.498" endtime="20201110 08:37:15.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.515" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.514" endtime="20201110 08:37:15.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.518" level="INFO">VALUE: [7.916700000000151e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.838899999999815e-05, 7.840299999999772e-05, 7.838900000000162e-05, 7.843100000000033e-05, 7.843100000000033e-05, 7.841600000000129e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.834699999999944e-05, 7.84449999999999e-05, 7.841700000000076e-05, 7.838900000000162e-05, 7.848599999999914e-05, 7.84030000000012e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.841600000000129e-05, 7.84030000000012e-05, 7.841599999999782e-05, 7.834799999999892e-05, 7.837500000000205e-05, 7.843100000000033e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.833399999999935e-05, 7.840299999999772e-05, 7.840200000000172e-05, 7.841700000000076e-05, 7.837499999999858e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.83190000000003e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.838900000000162e-05, 7.841700000000076e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.841700000000076e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.516" endtime="20201110 08:37:15.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.511" endtime="20201110 08:37:15.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.522" endtime="20201110 08:37:15.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.525" endtime="20201110 08:37:15.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.523" endtime="20201110 08:37:15.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.520" endtime="20201110 08:37:15.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.154" endtime="20201110 08:37:15.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.154" endtime="20201110 08:37:15.546"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.554" endtime="20201110 08:37:15.571"></status>
</kw>
<msg timestamp="20201110 08:37:15.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.553" endtime="20201110 08:37:15.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.573" endtime="20201110 08:37:15.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.575" endtime="20201110 08:37:15.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.550" endtime="20201110 08:37:15.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.548" endtime="20201110 08:37:15.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.584" endtime="20201110 08:37:15.870"></status>
</kw>
<msg timestamp="20201110 08:37:15.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.583" endtime="20201110 08:37:15.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021687458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021766611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.874" endtime="20201110 08:37:15.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.882" endtime="20201110 08:37:15.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.580" endtime="20201110 08:37:15.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.578" endtime="20201110 08:37:15.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.889" level="INFO">${RESULT} = [{'time': 0.021766611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915300000000194e-05, 'source_diff': 7.915300000000194e-05}, {'time': 0.021861806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.886" endtime="20201110 08:37:15.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:15.902" level="INFO">${ACCURACY} = {'source_diff': [7.915300000000194e-05, 7.843100000000033e-05, 7.84169999999973e-05, 7.843100000000033e-05, 7.843000000000086e-05, 7.84030000000012e-05, 7.840200000000172e-05, 7.840299999999772e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:37:15.890" endtime="20201110 08:37:15.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.907" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:15.906" endtime="20201110 08:37:15.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.909" level="INFO">VALUE: [7.915300000000194e-05, 7.843100000000033e-05, 7.84169999999973e-05, 7.843100000000033e-05, 7.843000000000086e-05, 7.84030000000012e-05, 7.840200000000172e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.844400000000043e-05, 7.833299999999987e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.843100000000033e-05, 7.841700000000076e-05, 7.838900000000162e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.837499999999858e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.851399999999828e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.838900000000162e-05, 7.841700000000076e-05, 7.844400000000043e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.838899999999815e-05, 7.838799999999868e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.841599999999782e-05, 7.843100000000033e-05, 7.843000000000086e-05, 7.838799999999868e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.837500000000205e-05, 7.841700000000076e-05, 7.841600000000129e-05]</msg>
<status status="PASS" starttime="20201110 08:37:15.908" endtime="20201110 08:37:15.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.903" endtime="20201110 08:37:15.910"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.913" endtime="20201110 08:37:15.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.916" endtime="20201110 08:37:15.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.914" endtime="20201110 08:37:15.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.911" endtime="20201110 08:37:15.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.547" endtime="20201110 08:37:15.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.546" endtime="20201110 08:37:15.937"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.945" endtime="20201110 08:37:15.962"></status>
</kw>
<msg timestamp="20201110 08:37:15.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.944" endtime="20201110 08:37:15.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.964" endtime="20201110 08:37:15.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.966" endtime="20201110 08:37:15.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.941" endtime="20201110 08:37:15.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.939" endtime="20201110 08:37:15.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.975" endtime="20201110 08:37:16.262"></status>
</kw>
<msg timestamp="20201110 08:37:16.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.974" endtime="20201110 08:37:16.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.266" endtime="20201110 08:37:16.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.274" endtime="20201110 08:37:16.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.971" endtime="20201110 08:37:16.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.969" endtime="20201110 08:37:16.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.281" level="INFO">${RESULT} = [{'time': 0.021806597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.915300000000194e-05, 'source_diff': 7.915300000000194e-05}, {'time': 0.021903639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:16.277" endtime="20201110 08:37:16.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.294" level="INFO">${ACCURACY} = {'source_diff': [7.915300000000194e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841600000000129e-05, 7.84030000000012e-05, 7.834800000000239e-05, 7.838899999999815e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:37:16.282" endtime="20201110 08:37:16.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.298" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.297" endtime="20201110 08:37:16.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.301" level="INFO">VALUE: [7.915300000000194e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841600000000129e-05, 7.84030000000012e-05, 7.834800000000239e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.840200000000172e-05, 7.84030000000012e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7.837499999999858e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.834699999999944e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.843000000000086e-05, 7.836099999999901e-05, 7.84030000000012e-05, 7.840200000000172e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.843000000000086e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.838899999999815e-05, 7.840199999999825e-05, 7.840200000000172e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.840200000000172e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.838900000000162e-05, 7.843099999999686e-05, 7.844400000000043e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.841600000000129e-05, 7.840199999999825e-05, 7.838899999999815e-05]</msg>
<status status="PASS" starttime="20201110 08:37:16.300" endtime="20201110 08:37:16.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.295" endtime="20201110 08:37:16.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.304" endtime="20201110 08:37:16.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.308" endtime="20201110 08:37:16.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.306" endtime="20201110 08:37:16.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.303" endtime="20201110 08:37:16.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.938" endtime="20201110 08:37:16.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.937" endtime="20201110 08:37:16.329"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.337" endtime="20201110 08:37:16.354"></status>
</kw>
<msg timestamp="20201110 08:37:16.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.336" endtime="20201110 08:37:16.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.356" endtime="20201110 08:37:16.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.358" endtime="20201110 08:37:16.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.333" endtime="20201110 08:37:16.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.331" endtime="20201110 08:37:16.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.367" endtime="20201110 08:37:16.652"></status>
</kw>
<msg timestamp="20201110 08:37:16.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.366" endtime="20201110 08:37:16.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.657" endtime="20201110 08:37:16.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.665" endtime="20201110 08:37:16.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.363" endtime="20201110 08:37:16.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.361" endtime="20201110 08:37:16.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.671" level="INFO">${RESULT} = [{'time': 0.021914806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.912499999999933e-05, 'source_diff': 7.912499999999933e-05}, {'time': 0.022018375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:16.668" endtime="20201110 08:37:16.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:16.686" level="INFO">${ACCURACY} = {'source_diff': [7.912499999999933e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:37:16.672" endtime="20201110 08:37:16.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.691" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:16.690" endtime="20201110 08:37:16.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.693" level="INFO">VALUE: [7.912499999999933e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.837500000000205e-05, 7.838899999999815e-05, 7.843000000000086e-05, 7.844400000000043e-05, 7.836099999999901e-05, 7.84169999999973e-05, 7.838899999999815e-05, 7.837499999999858e-05, 7.84030000000012e-05, 7.843000000000086e-05, 7.838900000000162e-05, 7.847199999999957e-05, 7.84030000000012e-05, 7.847300000000251e-05, 7.84030000000012e-05, 7.843100000000033e-05, 7.840299999999772e-05, 7.843100000000033e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.838900000000162e-05, 7.84449999999999e-05, 7.841599999999782e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.836099999999901e-05, 7.840199999999825e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.843099999999686e-05, 7.84449999999999e-05, 7.848699999999861e-05, 7.838900000000162e-05, 7.838899999999815e-05, 7.838900000000162e-05, 7.838899999999815e-05, 7.840299999999772e-05, 7.841700000000076e-05]</msg>
<status status="PASS" starttime="20201110 08:37:16.692" endtime="20201110 08:37:16.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.687" endtime="20201110 08:37:16.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.697" endtime="20201110 08:37:16.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.700" endtime="20201110 08:37:16.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.699" endtime="20201110 08:37:16.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.695" endtime="20201110 08:37:16.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.330" endtime="20201110 08:37:16.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.329" endtime="20201110 08:37:16.721"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.729" endtime="20201110 08:37:16.746"></status>
</kw>
<msg timestamp="20201110 08:37:16.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.728" endtime="20201110 08:37:16.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.748" endtime="20201110 08:37:16.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.750" endtime="20201110 08:37:16.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.725" endtime="20201110 08:37:16.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.723" endtime="20201110 08:37:16.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.759" endtime="20201110 08:37:17.044"></status>
</kw>
<msg timestamp="20201110 08:37:17.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:16.758" endtime="20201110 08:37:17.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021752861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:17.048" endtime="20201110 08:37:17.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.056" endtime="20201110 08:37:17.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.755" endtime="20201110 08:37:17.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.753" endtime="20201110 08:37:17.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.063" level="INFO">${RESULT} = [{'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.913900000000237e-05, 'source_diff': 7.913900000000237e-05}, {'time': 0.021937431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:17.060" endtime="20201110 08:37:17.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.076" level="INFO">${ACCURACY} = {'source_diff': [7.913900000000237e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.841599999999782e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:37:17.064" endtime="20201110 08:37:17.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.081" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.080" endtime="20201110 08:37:17.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.083" level="INFO">VALUE: [7.913900000000237e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.841599999999782e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.837499999999858e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.840200000000172e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.838900000000162e-05, 7.838900000000162e-05, 7.84030000000012e-05, 7.834799999999892e-05, 7.84030000000012e-05, 7.838899999999815e-05, 7.831999999999978e-05, 7.840200000000172e-05, 7.838900000000162e-05, 7.833299999999987e-05, 7.838899999999815e-05, 7.838900000000162e-05, 7.84169999999973e-05, 7.84030000000012e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.843100000000033e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.836100000000248e-05, 7.840299999999772e-05, 7.843000000000086e-05, 7.840299999999772e-05, 7.836099999999901e-05, 7.838900000000162e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.837499999999858e-05, 7.841700000000076e-05, 7.844399999999696e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.84030000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.082" endtime="20201110 08:37:17.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.077" endtime="20201110 08:37:17.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.087" endtime="20201110 08:37:17.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.090" endtime="20201110 08:37:17.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.088" endtime="20201110 08:37:17.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.085" endtime="20201110 08:37:17.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.722" endtime="20201110 08:37:17.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.721" endtime="20201110 08:37:17.111"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.119" endtime="20201110 08:37:17.136"></status>
</kw>
<msg timestamp="20201110 08:37:17.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.118" endtime="20201110 08:37:17.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.138" endtime="20201110 08:37:17.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.140" endtime="20201110 08:37:17.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.115" endtime="20201110 08:37:17.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.113" endtime="20201110 08:37:17.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.149" endtime="20201110 08:37:17.435"></status>
</kw>
<msg timestamp="20201110 08:37:17.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.147" endtime="20201110 08:37:17.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021808583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.439" endtime="20201110 08:37:17.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.448" endtime="20201110 08:37:17.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.145" endtime="20201110 08:37:17.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.143" endtime="20201110 08:37:17.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.454" level="INFO">${RESULT} = [{'time': 0.021808583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.91389999999989e-05, 'source_diff': 7.91389999999989e-05}, {'time': 0.021901597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:17.451" endtime="20201110 08:37:17.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.467" level="INFO">${ACCURACY} = {'source_diff': [7.91389999999989e-05, 7.841599999999782e-05, 7.84169999999973e-05, 7.841600000000129e-05, 7.840299999999772e-05, 7.834800000000239e-05, 7.843100000000033e-05, 7.833299999999987e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:37:17.455" endtime="20201110 08:37:17.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.472" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.471" endtime="20201110 08:37:17.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.474" level="INFO">VALUE: [7.91389999999989e-05, 7.841599999999782e-05, 7.84169999999973e-05, 7.841600000000129e-05, 7.840299999999772e-05, 7.834800000000239e-05, 7.843100000000033e-05, 7.833299999999987e-05, 7.837499999999858e-05, 7.840200000000172e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.84169999999973e-05, 7.84030000000012e-05, 7.843000000000086e-05, 7.843000000000086e-05, 7.841599999999782e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.840200000000172e-05, 7.837499999999858e-05, 7.841700000000076e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.844400000000043e-05, 7.838900000000162e-05, 7.843100000000033e-05, 7.840200000000172e-05, 7.84169999999973e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.84449999999999e-05, 7.836099999999901e-05, 7.841599999999782e-05, 7.838899999999815e-05, 7.840299999999772e-05, 7.843100000000033e-05, 7.8458e-05, 7.841600000000129e-05, 7.849999999999871e-05, 7.84169999999973e-05, 7.843100000000033e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.84449999999999e-05, 7.834699999999944e-05, 7.842999999999739e-05, 7.840199999999825e-05, 7.842999999999739e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.473" endtime="20201110 08:37:17.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.468" endtime="20201110 08:37:17.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.478" endtime="20201110 08:37:17.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.482" endtime="20201110 08:37:17.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.480" endtime="20201110 08:37:17.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.476" endtime="20201110 08:37:17.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.112" endtime="20201110 08:37:17.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.111" endtime="20201110 08:37:17.503"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.511" endtime="20201110 08:37:17.528"></status>
</kw>
<msg timestamp="20201110 08:37:17.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.510" endtime="20201110 08:37:17.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.530" endtime="20201110 08:37:17.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.532" endtime="20201110 08:37:17.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.507" endtime="20201110 08:37:17.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.505" endtime="20201110 08:37:17.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.542" endtime="20201110 08:37:17.828"></status>
</kw>
<msg timestamp="20201110 08:37:17.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.540" endtime="20201110 08:37:17.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.832" endtime="20201110 08:37:17.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.840" endtime="20201110 08:37:17.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.538" endtime="20201110 08:37:17.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.536" endtime="20201110 08:37:17.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.847" level="INFO">${RESULT} = [{'time': 0.021876361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916700000000151e-05, 'source_diff': 7.916700000000151e-05}, {'time': 0.021978333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:17.843" endtime="20201110 08:37:17.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:17.860" level="INFO">${ACCURACY} = {'source_diff': [7.916700000000151e-05, 7.841599999999782e-05, 7.836099999999901e-05, 7.837500000000205e-05, 7.841600000000129e-05, 7.847199999999957e-05, 7.845900000000294e-05, 7.838900000000162e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:17.848" endtime="20201110 08:37:17.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.864" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:17.863" endtime="20201110 08:37:17.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.867" level="INFO">VALUE: [7.916700000000151e-05, 7.841599999999782e-05, 7.836099999999901e-05, 7.837500000000205e-05, 7.841600000000129e-05, 7.847199999999957e-05, 7.845900000000294e-05, 7.838900000000162e-05, 7.837500000000205e-05, 7.840299999999772e-05, 7.841700000000076e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.84030000000012e-05, 7.84169999999973e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.838900000000162e-05, 7.840200000000172e-05, 7.840299999999772e-05, 7.840299999999772e-05, 7.84030000000012e-05, 7.841600000000129e-05, 7.843000000000086e-05, 7.837499999999858e-05, 7.841600000000129e-05, 7.841600000000129e-05, 7.84169999999973e-05, 7.841600000000129e-05, 7.844400000000043e-05, 7.834699999999944e-05, 7.843000000000086e-05, 7.840299999999772e-05, 7.837500000000205e-05, 7.838900000000162e-05, 7.845899999999947e-05, 7.84030000000012e-05, 7.840199999999825e-05, 7.838899999999815e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.84449999999999e-05, 7.841600000000129e-05, 7.841700000000076e-05, 7.844400000000043e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.841700000000076e-05, 7.838900000000162e-05, 7.841700000000076e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.865" endtime="20201110 08:37:17.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.861" endtime="20201110 08:37:17.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.870" endtime="20201110 08:37:17.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.874" endtime="20201110 08:37:17.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.872" endtime="20201110 08:37:17.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.869" endtime="20201110 08:37:17.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.504" endtime="20201110 08:37:17.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.503" endtime="20201110 08:37:17.895"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.903" endtime="20201110 08:37:17.920"></status>
</kw>
<msg timestamp="20201110 08:37:17.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.902" endtime="20201110 08:37:17.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.922" endtime="20201110 08:37:17.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.924" endtime="20201110 08:37:17.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.899" endtime="20201110 08:37:17.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.897" endtime="20201110 08:37:17.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.933" endtime="20201110 08:37:18.219"></status>
</kw>
<msg timestamp="20201110 08:37:18.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.932" endtime="20201110 08:37:18.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.223" endtime="20201110 08:37:18.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.231" endtime="20201110 08:37:18.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.929" endtime="20201110 08:37:18.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.927" endtime="20201110 08:37:18.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.237" level="INFO">${RESULT} = [{'time': 0.021866861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.918000000000161e-05, 'source_diff': 7.918000000000161e-05}, {'time': 0.021960458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.234" endtime="20201110 08:37:18.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.252" level="INFO">${ACCURACY} = {'source_diff': [7.918000000000161e-05, 7.842999999999739e-05, 7.850000000000218e-05, 7.866599999999807e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.8458e-05, 7.841700000000076e-05, 7.841600000...</msg>
<status status="PASS" starttime="20201110 08:37:18.238" endtime="20201110 08:37:18.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.257" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.255" endtime="20201110 08:37:18.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.259" level="INFO">VALUE: [7.918000000000161e-05, 7.842999999999739e-05, 7.850000000000218e-05, 7.866599999999807e-05, 7.84030000000012e-05, 7.841700000000076e-05, 7.8458e-05, 7.841700000000076e-05, 7.841600000000129e-05, 7.84030000000012e-05, 7.861099999999926e-05, 7.847299999999904e-05, 7.84030000000012e-05, 7.840299999999772e-05, 7.852800000000132e-05, 7.84169999999973e-05, 7.850000000000218e-05, 7.843099999999686e-05, 7.84030000000012e-05, 7.843000000000086e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.842999999999739e-05, 7.843000000000086e-05, 7.868100000000058e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.843000000000086e-05, 7.838900000000162e-05, 7.849999999999871e-05, 7.836200000000196e-05, 7.843100000000033e-05, 7.848599999999914e-05, 7.865300000000144e-05, 7.843100000000033e-05, 7.843000000000086e-05, 7.841700000000076e-05, 7.849999999999871e-05, 7.843100000000033e-05, 7.841600000000129e-05, 7.866700000000101e-05, 7.843000000000086e-05, 7.841700000000076e-05, 7.843100000000033e-05, 7.841700000000076e-05, 7.841700000000076e-05, 7.847199999999957e-05, 7.837499999999858e-05, 7.84169999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:37:18.258" endtime="20201110 08:37:18.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.253" endtime="20201110 08:37:18.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.263" endtime="20201110 08:37:18.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.266" endtime="20201110 08:37:18.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.264" endtime="20201110 08:37:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.261" endtime="20201110 08:37:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.896" endtime="20201110 08:37:18.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.895" endtime="20201110 08:37:18.287"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.295" endtime="20201110 08:37:18.312"></status>
</kw>
<msg timestamp="20201110 08:37:18.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.294" endtime="20201110 08:37:18.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.314" endtime="20201110 08:37:18.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.316" endtime="20201110 08:37:18.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.291" endtime="20201110 08:37:18.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.289" endtime="20201110 08:37:18.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.325" endtime="20201110 08:37:18.610"></status>
</kw>
<msg timestamp="20201110 08:37:18.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.324" endtime="20201110 08:37:18.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.614" endtime="20201110 08:37:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.622" endtime="20201110 08:37:18.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.321" endtime="20201110 08:37:18.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.320" endtime="20201110 08:37:18.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.629" level="INFO">${RESULT} = [{'time': 0.021869208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.897200000000007e-05, 'source_diff': 7.897200000000007e-05}, {'time': 0.021971611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.626" endtime="20201110 08:37:18.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:18.642" level="INFO">${ACCURACY} = {'source_diff': [7.897200000000007e-05, 7.848599999999914e-05, 7.820899999999922e-05, 7.8458e-05, 7.847299999999904e-05, 7.854200000000089e-05, 7.847199999999957e-05, 7.822200000000279e-05, 7.82080000...</msg>
<status status="PASS" starttime="20201110 08:37:18.630" endtime="20201110 08:37:18.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.647" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:18.646" endtime="20201110 08:37:18.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.649" level="INFO">VALUE: [7.897200000000007e-05, 7.848599999999914e-05, 7.820899999999922e-05, 7.8458e-05, 7.847299999999904e-05, 7.854200000000089e-05, 7.847199999999957e-05, 7.822200000000279e-05, 7.820800000000322e-05, 7.82640000000015e-05, 7.854100000000142e-05, 7.823599999999889e-05, 7.838900000000162e-05, 7.822199999999932e-05, 7.815300000000094e-05, 7.843100000000033e-05, 7.845899999999947e-05, 7.845899999999947e-05, 7.879100000000167e-05, 7.82640000000015e-05, 7.822199999999932e-05, 7.852800000000132e-05, 7.824999999999846e-05, 7.823599999999889e-05, 7.849999999999871e-05, 7.8458e-05, 7.819499999999965e-05, 7.841599999999782e-05, 7.866700000000101e-05, 7.823599999999889e-05, 7.840200000000172e-05, 7.852800000000132e-05, 7.840299999999772e-05, 7.823599999999889e-05, 7.8458e-05, 7.823599999999889e-05, 7.823599999999889e-05, 7.842999999999739e-05, 7.84449999999999e-05, 7.89030000000017e-05, 7.823600000000236e-05, 7.890299999999822e-05, 7.816600000000104e-05, 7.82229999999988e-05, 7.872199999999982e-05, 7.882000000000028e-05, 7.8458e-05, 7.822199999999932e-05, 7.840299999999772e-05, 7.847199999999957e-05]</msg>
<status status="PASS" starttime="20201110 08:37:18.648" endtime="20201110 08:37:18.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.643" endtime="20201110 08:37:18.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.655" endtime="20201110 08:37:18.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.658" endtime="20201110 08:37:18.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.657" endtime="20201110 08:37:18.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.652" endtime="20201110 08:37:18.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.288" endtime="20201110 08:37:18.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.287" endtime="20201110 08:37:18.680"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.690" endtime="20201110 08:37:18.708"></status>
</kw>
<msg timestamp="20201110 08:37:18.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.689" endtime="20201110 08:37:18.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.709" endtime="20201110 08:37:18.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.712" endtime="20201110 08:37:18.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.686" endtime="20201110 08:37:18.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.683" endtime="20201110 08:37:18.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.721" endtime="20201110 08:37:19.008"></status>
</kw>
<msg timestamp="20201110 08:37:19.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.719" endtime="20201110 08:37:19.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024237847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024338792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.012" endtime="20201110 08:37:19.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.020" endtime="20201110 08:37:19.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.717" endtime="20201110 08:37:19.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.715" endtime="20201110 08:37:19.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.027" level="INFO">${RESULT} = [{'time': 0.024338792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010094500000000159, 'source_diff': 0.00010094500000000159}, {'time': 0.024450278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.024" endtime="20201110 08:37:19.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.040" level="INFO">${ACCURACY} = {'source_diff': [0.00010094500000000159, 7.904199999999792e-05, 7.852800000000132e-05, 9.990299999999841e-05, 7.908299999999716e-05, 7.854099999999795e-05, 7.86250000000023e-05, 7.847199999999957e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:19.028" endtime="20201110 08:37:19.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.045" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.044" endtime="20201110 08:37:19.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.047" level="INFO">VALUE: [0.00010094500000000159, 7.904199999999792e-05, 7.852800000000132e-05, 9.990299999999841e-05, 7.908299999999716e-05, 7.854099999999795e-05, 7.86250000000023e-05, 7.847199999999957e-05, 7.847300000000251e-05, 7.854199999999742e-05, 7.851400000000175e-05, 7.847199999999957e-05, 7.841700000000076e-05, 7.85969999999997e-05, 7.855600000000046e-05, 9.990300000000188e-05, 7.901399999999878e-05, 7.851399999999828e-05, 9.990300000000188e-05, 7.895899999999997e-05, 9.987500000000274e-05, 7.907000000000053e-05, 7.847199999999957e-05, 7.85839999999996e-05, 7.847199999999957e-05, 9.98609999999997e-05, 7.924999999999946e-05, 7.852800000000132e-05, 7.847199999999957e-05, 7.847199999999957e-05, 7.855600000000046e-05, 9.988899999999884e-05, 7.907000000000053e-05, 7.843000000000086e-05, 7.847199999999957e-05, 7.852799999999785e-05, 9.988899999999884e-05, 7.920800000000075e-05, 7.852799999999785e-05, 9.987499999999927e-05, 7.916599999999857e-05, 7.854199999999742e-05, 7.854100000000142e-05, 7.86250000000023e-05, 7.847199999999957e-05, 7.847199999999957e-05, 9.997200000000026e-05, 7.908299999999716e-05, 7.852800000000132e-05, 9.990199999999894e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.046" endtime="20201110 08:37:19.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.041" endtime="20201110 08:37:19.049"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.051" endtime="20201110 08:37:19.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.054" endtime="20201110 08:37:19.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.053" endtime="20201110 08:37:19.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.049" endtime="20201110 08:37:19.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.681" endtime="20201110 08:37:19.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.680" endtime="20201110 08:37:19.075"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.084" endtime="20201110 08:37:19.102"></status>
</kw>
<msg timestamp="20201110 08:37:19.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.082" endtime="20201110 08:37:19.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.103" endtime="20201110 08:37:19.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.106" endtime="20201110 08:37:19.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.080" endtime="20201110 08:37:19.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.078" endtime="20201110 08:37:19.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.115" endtime="20201110 08:37:19.401"></status>
</kw>
<msg timestamp="20201110 08:37:19.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.113" endtime="20201110 08:37:19.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021923903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.405" endtime="20201110 08:37:19.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.413" endtime="20201110 08:37:19.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.111" endtime="20201110 08:37:19.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.109" endtime="20201110 08:37:19.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.420" level="INFO">${RESULT} = [{'time': 0.021923903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010093100000000202, 'source_diff': 0.00010093100000000202}, {'time': 0.022047819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.417" endtime="20201110 08:37:19.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.433" level="INFO">${ACCURACY} = {'source_diff': [0.00010093100000000202, 0.00010051299999999999, 0.0001004999999999999, 0.00010051399999999946, 0.0001004999999999999, 0.0001004999999999999, 0.00010052699999999956, 0.0001005699999999...</msg>
<status status="PASS" starttime="20201110 08:37:19.421" endtime="20201110 08:37:19.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.437" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.436" endtime="20201110 08:37:19.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.440" level="INFO">VALUE: [0.00010093100000000202, 0.00010051299999999999, 0.0001004999999999999, 0.00010051399999999946, 0.0001004999999999999, 0.0001004999999999999, 0.00010052699999999956, 0.00010056999999999774, 0.00010050000000000336, 0.0001004999999999999, 0.00010051399999999946, 0.0001005419999999986, 0.00010047200000000076, 0.00010048600000000033, 0.0001005549999999987, 0.0001004999999999999, 0.00010051399999999946, 0.00010048600000000033, 0.00010051399999999946, 0.00010048600000000033, 0.00010047300000000023, 0.00010057000000000121, 0.0001004999999999999, 0.00010047300000000023, 0.0001004999999999999, 0.00010051399999999946, 0.00010051399999999946, 0.0001004999999999999, 0.00010048600000000033, 0.0001004999999999999, 0.0001004999999999999, 0.00010048600000000033, 0.00010048600000000033, 0.0001004999999999999, 0.0001004999999999999, 0.0001004999999999999, 0.0001004999999999999, 0.00010054200000000207, 0.00010051399999999946, 0.00010051399999999946, 0.00010051399999999946, 0.0001004999999999999, 0.00010048600000000033, 0.0001004999999999999, 0.0001004999999999999, 0.00010045799999999772, 0.0001004999999999999, 0.00010051399999999946, 0.00010048600000000033, 0.00010051399999999946]</msg>
<status status="PASS" starttime="20201110 08:37:19.438" endtime="20201110 08:37:19.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.434" endtime="20201110 08:37:19.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.443" endtime="20201110 08:37:19.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.447" endtime="20201110 08:37:19.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.445" endtime="20201110 08:37:19.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.442" endtime="20201110 08:37:19.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.076" endtime="20201110 08:37:19.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.075" endtime="20201110 08:37:19.467"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.476" endtime="20201110 08:37:19.494"></status>
</kw>
<msg timestamp="20201110 08:37:19.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.474" endtime="20201110 08:37:19.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.496" endtime="20201110 08:37:19.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.498" endtime="20201110 08:37:19.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.472" endtime="20201110 08:37:19.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.470" endtime="20201110 08:37:19.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.507" endtime="20201110 08:37:19.794"></status>
</kw>
<msg timestamp="20201110 08:37:19.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.505" endtime="20201110 08:37:19.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021782306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021883236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.798" endtime="20201110 08:37:19.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.806" endtime="20201110 08:37:19.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.503" endtime="20201110 08:37:19.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.501" endtime="20201110 08:37:19.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.812" level="INFO">${RESULT} = [{'time': 0.021883236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010092999999999908, 'source_diff': 0.00010092999999999908}, {'time': 0.021998444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.809" endtime="20201110 08:37:19.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:19.827" level="INFO">${ACCURACY} = {'source_diff': [0.00010092999999999908, 0.00010051299999999999, 0.00010051399999999946, 0.00010051399999999946, 0.0001005419999999986, 0.00010051400000000293, 0.00010050000000000336, 0.00010051399999...</msg>
<status status="PASS" starttime="20201110 08:37:19.813" endtime="20201110 08:37:19.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.831" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:19.830" endtime="20201110 08:37:19.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.834" level="INFO">VALUE: [0.00010092999999999908, 0.00010051299999999999, 0.00010051399999999946, 0.00010051399999999946, 0.0001005419999999986, 0.00010051400000000293, 0.00010050000000000336, 0.00010051399999999946, 0.00010051399999999946, 0.0001004999999999999, 0.00010048600000000033, 0.0001004999999999999, 0.00010043100000000152, 0.00010051400000000293, 0.00010051399999999946, 0.0001004999999999999, 0.00010044400000000162, 0.00010048599999999686, 0.00010048600000000033, 0.00010051399999999946, 0.00010050000000000336, 0.00010052799999999903, 0.00010051399999999946, 0.00010054099999999913, 0.00010044399999999815, 0.00010051399999999946, 0.00010051399999999946, 0.00010048600000000033, 0.00010048599999999686, 0.00010051399999999946, 0.00010047200000000076, 0.00010051399999999946, 0.00010057000000000121, 0.0001004999999999999, 0.00010051299999999999, 0.00010051399999999946, 0.00010051399999999946, 0.00010052799999999903, 0.00010052799999999903, 0.00010051399999999946, 0.0001004999999999999, 0.00010052799999999903, 0.00010048600000000033, 0.00010051399999999946, 0.00010051299999999999, 0.00010051399999999946, 0.00010052799999999903, 0.00010051299999999999, 0.00010051399999999946, 0.00010051399999999946]</msg>
<status status="PASS" starttime="20201110 08:37:19.832" endtime="20201110 08:37:19.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.828" endtime="20201110 08:37:19.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.837" endtime="20201110 08:37:19.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.841" endtime="20201110 08:37:19.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.839" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.836" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.468" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.468" endtime="20201110 08:37:19.861"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.870" endtime="20201110 08:37:19.888"></status>
</kw>
<msg timestamp="20201110 08:37:19.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.869" endtime="20201110 08:37:19.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.890" endtime="20201110 08:37:19.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.892" endtime="20201110 08:37:19.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.866" endtime="20201110 08:37:19.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.864" endtime="20201110 08:37:19.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.901" endtime="20201110 08:37:20.188"></status>
</kw>
<msg timestamp="20201110 08:37:20.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.899" endtime="20201110 08:37:20.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021982069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.192" endtime="20201110 08:37:20.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.200" endtime="20201110 08:37:20.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.897" endtime="20201110 08:37:20.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.895" endtime="20201110 08:37:20.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.206" level="INFO">${RESULT} = [{'time': 0.021982069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010090199999999994, 'source_diff': 0.00010090199999999994}, {'time': 0.022111292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.203" endtime="20201110 08:37:20.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.219" level="INFO">${ACCURACY} = {'source_diff': [0.00010090199999999994, 0.0001004999999999999, 0.00010055599999999817, 0.0001004999999999999, 0.00010040300000000238, 0.00010048600000000033, 0.00010051399999999946, 0.000100513999999...</msg>
<status status="PASS" starttime="20201110 08:37:20.207" endtime="20201110 08:37:20.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.224" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.223" endtime="20201110 08:37:20.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.226" level="INFO">VALUE: [0.00010090199999999994, 0.0001004999999999999, 0.00010055599999999817, 0.0001004999999999999, 0.00010040300000000238, 0.00010048600000000033, 0.00010051399999999946, 0.00010051399999999946, 0.0001005280000000025, 0.00010051399999999946, 0.00010051400000000293, 0.0001005549999999987, 0.0001005419999999986, 0.00010054099999999913, 0.00010048600000000033, 0.0001004999999999999, 0.0001005549999999987, 0.0001004999999999999, 0.00010052699999999956, 0.0001005280000000025, 0.00010051399999999946, 0.00010052699999999956, 0.0001004999999999999, 0.00010051399999999946, 0.00010052699999999956, 0.00010058400000000078, 0.00010051399999999946, 0.00010052699999999956, 0.0001004999999999999, 0.00010051399999999946, 0.00010051399999999946, 0.0001004999999999999, 0.00010051399999999946, 0.0001004999999999999, 0.00010048599999999686, 0.00010052799999999903, 0.00010047200000000076, 0.0001004999999999999, 0.00010050000000000336, 0.0001004999999999999, 0.0001004999999999999, 0.0001004999999999999, 0.00010051299999999999, 0.00010044400000000162, 0.00010051399999999946, 0.00010051399999999946, 0.00010058300000000131, 0.00010048600000000033, 0.00010051399999999946, 0.0001004999999999999]</msg>
<status status="PASS" starttime="20201110 08:37:20.225" endtime="20201110 08:37:20.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.220" endtime="20201110 08:37:20.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.230" endtime="20201110 08:37:20.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.233" endtime="20201110 08:37:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.232" endtime="20201110 08:37:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.228" endtime="20201110 08:37:20.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.862" endtime="20201110 08:37:20.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.862" endtime="20201110 08:37:20.254"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.263" endtime="20201110 08:37:20.281"></status>
</kw>
<msg timestamp="20201110 08:37:20.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.262" endtime="20201110 08:37:20.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.283" endtime="20201110 08:37:20.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.285" endtime="20201110 08:37:20.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.259" endtime="20201110 08:37:20.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.257" endtime="20201110 08:37:20.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.294" endtime="20201110 08:37:20.581"></status>
</kw>
<msg timestamp="20201110 08:37:20.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.293" endtime="20201110 08:37:20.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022242875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.586" endtime="20201110 08:37:20.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.594" endtime="20201110 08:37:20.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.290" endtime="20201110 08:37:20.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.288" endtime="20201110 08:37:20.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.601" level="INFO">${RESULT} = [{'time': 0.022242875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010094399999999865, 'source_diff': 0.00010094399999999865}, {'time': 0.022365292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.597" endtime="20201110 08:37:20.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:20.614" level="INFO">${ACCURACY} = {'source_diff': [0.00010094399999999865, 0.0001005419999999986, 0.0001004999999999999, 0.00010051299999999999, 0.0001004999999999999, 0.00010051299999999999, 0.0001004999999999999, 0.00010051399999999...</msg>
<status status="PASS" starttime="20201110 08:37:20.602" endtime="20201110 08:37:20.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.618" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:20.617" endtime="20201110 08:37:20.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.620" level="INFO">VALUE: [0.00010094399999999865, 0.0001005419999999986, 0.0001004999999999999, 0.00010051299999999999, 0.0001004999999999999, 0.00010051299999999999, 0.0001004999999999999, 0.00010051399999999946, 0.00010054200000000207, 0.00010051299999999999, 0.0001004999999999999, 0.00010052799999999903, 0.0001005419999999986, 0.00010051399999999946, 0.0001004999999999999, 0.00010054099999999913, 0.00010051399999999946, 0.00010052699999999956, 0.00010056899999999827, 0.0001005280000000025, 0.00010052700000000303, 0.00010051399999999946, 0.00010051399999999946, 0.0001005280000000025, 0.0001004999999999999, 0.00010047199999999729, 0.00010051399999999946, 0.0001004999999999999, 0.00010057000000000121, 0.00010051299999999999, 0.0001004999999999999, 0.00010052799999999903, 0.00010056900000000174, 0.0001004999999999999, 0.00010051399999999946, 0.00010052699999999956, 0.0001004999999999999, 0.00010051299999999999, 0.00010048600000000033, 0.00010044499999999762, 0.00010051399999999946, 0.00010051399999999946, 0.00010054200000000207, 0.00010051399999999946, 0.00010054200000000207, 0.00010052799999999903, 0.00010051400000000293, 0.00010051399999999946, 0.00010051399999999946, 0.0001005280000000025]</msg>
<status status="PASS" starttime="20201110 08:37:20.619" endtime="20201110 08:37:20.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.614" endtime="20201110 08:37:20.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.624" endtime="20201110 08:37:20.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.628" endtime="20201110 08:37:20.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.626" endtime="20201110 08:37:20.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.622" endtime="20201110 08:37:20.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.255" endtime="20201110 08:37:20.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.255" endtime="20201110 08:37:20.648"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.657" endtime="20201110 08:37:20.675"></status>
</kw>
<msg timestamp="20201110 08:37:20.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.655" endtime="20201110 08:37:20.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.677" endtime="20201110 08:37:20.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.679" endtime="20201110 08:37:20.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.653" endtime="20201110 08:37:20.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.651" endtime="20201110 08:37:20.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.688" endtime="20201110 08:37:20.974"></status>
</kw>
<msg timestamp="20201110 08:37:20.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.687" endtime="20201110 08:37:20.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021815278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.978" endtime="20201110 08:37:20.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.986" endtime="20201110 08:37:20.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.684" endtime="20201110 08:37:20.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.682" endtime="20201110 08:37:20.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.993" level="INFO">${RESULT} = [{'time': 0.021916236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010095799999999822, 'source_diff': 0.00010095799999999822}, {'time': 0.022038292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.990" endtime="20201110 08:37:20.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.006" level="INFO">${ACCURACY} = {'source_diff': [0.00010095799999999822, 0.00010051399999999946, 0.00010052699999999956, 0.00010054200000000207, 0.00010048600000000033, 0.00010052799999999903, 0.0001005419999999986, 0.00010054200000...</msg>
<status status="PASS" starttime="20201110 08:37:20.994" endtime="20201110 08:37:21.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.010" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.009" endtime="20201110 08:37:21.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.013" level="INFO">VALUE: [0.00010095799999999822, 0.00010051399999999946, 0.00010052699999999956, 0.00010054200000000207, 0.00010048600000000033, 0.00010052799999999903, 0.0001005419999999986, 0.00010054200000000207, 0.00010052799999999903, 0.00010051400000000293, 0.00010052700000000303, 0.00010058300000000131, 0.00010043099999999805, 0.00010052700000000303, 0.00010051400000000293, 0.00010055599999999817, 0.00010051400000000293, 0.0001005410000000026, 0.00010052799999999903, 0.00010052799999999903, 0.00010052799999999903, 0.0001004999999999999, 0.00010052799999999903, 0.00010052799999999903, 0.00010048599999999686, 0.00010048600000000033, 0.0001004999999999999, 0.00010052699999999956, 0.0001004999999999999, 0.00010044499999999762, 0.00010051399999999946, 0.0001004999999999999, 0.00010044400000000162, 0.00010051399999999946, 0.0001004999999999999, 0.00010048600000000033, 0.00010051399999999946, 0.00010051399999999946, 0.00010052799999999903, 0.00010051299999999999, 0.0001004999999999999, 0.00010051399999999946, 0.00010052799999999903, 0.00010051399999999946, 0.0001004999999999999, 0.00010055500000000217, 0.00010051399999999946, 0.00010051299999999999, 0.00010051399999999946, 0.00010047199999999729]</msg>
<status status="PASS" starttime="20201110 08:37:21.011" endtime="20201110 08:37:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.007" endtime="20201110 08:37:21.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.016" endtime="20201110 08:37:21.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.020" endtime="20201110 08:37:21.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.018" endtime="20201110 08:37:21.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.015" endtime="20201110 08:37:21.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.649" endtime="20201110 08:37:21.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.649" endtime="20201110 08:37:21.041"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.049" endtime="20201110 08:37:21.067"></status>
</kw>
<msg timestamp="20201110 08:37:21.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.048" endtime="20201110 08:37:21.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.069" endtime="20201110 08:37:21.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.071" endtime="20201110 08:37:21.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.045" endtime="20201110 08:37:21.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.043" endtime="20201110 08:37:21.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.080" endtime="20201110 08:37:21.367"></status>
</kw>
<msg timestamp="20201110 08:37:21.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.079" endtime="20201110 08:37:21.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021887833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.372" endtime="20201110 08:37:21.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.381" endtime="20201110 08:37:21.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.076" endtime="20201110 08:37:21.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.074" endtime="20201110 08:37:21.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.387" level="INFO">${RESULT} = [{'time': 0.021988764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010093100000000202, 'source_diff': 0.00010093100000000202}, {'time': 0.022120208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.384" endtime="20201110 08:37:21.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.402" level="INFO">${ACCURACY} = {'source_diff': [0.00010093100000000202, 0.00010052699999999956, 0.0001004999999999999, 0.00010051400000000293, 0.0001004999999999999, 0.00010051400000000293, 0.0001004999999999999, 0.0001005139999999...</msg>
<status status="PASS" starttime="20201110 08:37:21.388" endtime="20201110 08:37:21.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.406" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.405" endtime="20201110 08:37:21.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.409" level="INFO">VALUE: [0.00010093100000000202, 0.00010052699999999956, 0.0001004999999999999, 0.00010051400000000293, 0.0001004999999999999, 0.00010051400000000293, 0.0001004999999999999, 0.00010051399999999946, 0.0001004999999999999, 0.00010047199999999729, 0.0001004999999999999, 0.0001004999999999999, 0.0001004999999999999, 0.0001004999999999999, 0.00010048600000000033, 0.00010051399999999946, 0.0001004999999999999, 0.00010055599999999817, 0.00010051399999999946, 0.00010054099999999913, 0.0001004999999999999, 0.00010047200000000076, 0.0001004999999999999, 0.0001004999999999999, 0.00010051399999999946, 0.00010051399999999946, 0.00010045899999999719, 0.00010055599999999817, 0.00010052799999999903, 0.00010051299999999999, 0.00010051400000000293, 0.00010051399999999946, 0.00010045799999999772, 0.00010048600000000033, 0.00010052799999999903, 0.0001004999999999999, 0.00010051399999999946, 0.0001004999999999999, 0.00010051399999999946, 0.00010052799999999903, 0.0001005419999999986, 0.00010052699999999956, 0.00010051399999999946, 0.00010047200000000076, 0.00010051399999999946, 0.00010052699999999956, 0.00010052699999999956, 0.00010059800000000035, 0.00010051399999999946, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201110 08:37:21.407" endtime="20201110 08:37:21.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.403" endtime="20201110 08:37:21.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.412" endtime="20201110 08:37:21.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.416" endtime="20201110 08:37:21.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.414" endtime="20201110 08:37:21.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.411" endtime="20201110 08:37:21.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.042" endtime="20201110 08:37:21.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.041" endtime="20201110 08:37:21.437"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.445" endtime="20201110 08:37:21.463"></status>
</kw>
<msg timestamp="20201110 08:37:21.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.443" endtime="20201110 08:37:21.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.465" endtime="20201110 08:37:21.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.467" endtime="20201110 08:37:21.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.441" endtime="20201110 08:37:21.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.439" endtime="20201110 08:37:21.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.476" endtime="20201110 08:37:21.762"></status>
</kw>
<msg timestamp="20201110 08:37:21.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:21.475" endtime="20201110 08:37:21.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021920264, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:21.766" endtime="20201110 08:37:21.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.774" endtime="20201110 08:37:21.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.472" endtime="20201110 08:37:21.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.470" endtime="20201110 08:37:21.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.781" level="INFO">${RESULT} = [{'time': 0.021920264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010101399999999996, 'source_diff': 0.00010101399999999996}, {'time': 0.022034472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.778" endtime="20201110 08:37:21.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.794" level="INFO">${ACCURACY} = {'source_diff': [0.00010101399999999996, 0.00010044399999999815, 0.0001004999999999999, 0.00010058299999999784, 0.00010052699999999956, 0.0001004999999999999, 0.00010051399999999946, 0.000100513999999...</msg>
<status status="PASS" starttime="20201110 08:37:21.782" endtime="20201110 08:37:21.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.798" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.797" endtime="20201110 08:37:21.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.801" level="INFO">VALUE: [0.00010101399999999996, 0.00010044399999999815, 0.0001004999999999999, 0.00010058299999999784, 0.00010052699999999956, 0.0001004999999999999, 0.00010051399999999946, 0.00010051399999999946, 0.00010051399999999946, 0.00010051400000000293, 0.00010047199999999729, 0.00010044500000000109, 0.0001004999999999999, 0.00010047300000000023, 0.00010044499999999762, 0.0001004999999999999, 0.00010047200000000076, 0.0001004999999999999, 0.0001004999999999999, 0.00010044499999999762, 0.0001004999999999999, 0.00010041699999999848, 0.00010051299999999999, 0.00010056899999999827, 0.00010051299999999999, 0.00010044500000000109, 0.00010056900000000174, 0.00010047300000000023, 0.00010044499999999762, 0.00010051399999999946, 0.00010055600000000164, 0.00010051399999999946, 0.0001004999999999999, 0.00010051299999999999, 0.0001004999999999999, 0.0001005549999999987, 0.00010056900000000174, 0.00010051399999999946, 0.0001004999999999999, 0.00010051399999999946, 0.00010051299999999999, 0.0001004999999999999, 0.0001004999999999999, 0.00010051399999999946, 0.00010052799999999903, 0.00010045800000000119, 0.0001004999999999999, 0.00010058300000000131, 0.00010045800000000119, 0.0001005280000000025]</msg>
<status status="PASS" starttime="20201110 08:37:21.800" endtime="20201110 08:37:21.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.795" endtime="20201110 08:37:21.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.804" endtime="20201110 08:37:21.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.808" endtime="20201110 08:37:21.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.806" endtime="20201110 08:37:21.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.803" endtime="20201110 08:37:21.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.438" endtime="20201110 08:37:21.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.437" endtime="20201110 08:37:21.829"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.837" endtime="20201110 08:37:21.855"></status>
</kw>
<msg timestamp="20201110 08:37:21.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.836" endtime="20201110 08:37:21.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.857" endtime="20201110 08:37:21.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.859" endtime="20201110 08:37:21.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.833" endtime="20201110 08:37:21.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.831" endtime="20201110 08:37:21.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.868" endtime="20201110 08:37:22.155"></status>
</kw>
<msg timestamp="20201110 08:37:22.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.867" endtime="20201110 08:37:22.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.160" endtime="20201110 08:37:22.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.168" endtime="20201110 08:37:22.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.864" endtime="20201110 08:37:22.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.862" endtime="20201110 08:37:22.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.174" level="INFO">${RESULT} = [{'time': 0.021970417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001000419999999981, 'source_diff': 0.0001000419999999981}, {'time': 0.022097083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.171" endtime="20201110 08:37:22.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.188" level="INFO">${ACCURACY} = {'source_diff': [0.0001000419999999981, 9.947199999999976e-05, 9.952799999999803e-05, 9.959800000000282e-05, 9.945800000000019e-05, 9.958399999999978e-05, 9.955500000000117e-05, 0.00010047200000000076...</msg>
<status status="PASS" starttime="20201110 08:37:22.175" endtime="20201110 08:37:22.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.192" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.191" endtime="20201110 08:37:22.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.195" level="INFO">VALUE: [0.0001000419999999981, 9.947199999999976e-05, 9.952799999999803e-05, 9.959800000000282e-05, 9.945800000000019e-05, 9.958399999999978e-05, 9.955500000000117e-05, 0.00010047200000000076, 9.959699999999988e-05, 9.961099999999945e-05, 9.959799999999935e-05, 0.00010043099999999805, 9.95549999999977e-05, 9.955600000000064e-05, 9.961099999999945e-05, 9.959699999999988e-05, 0.00010048600000000033, 9.962499999999902e-05, 9.961100000000292e-05, 0.00010045800000000119, 9.956899999999727e-05, 9.957000000000021e-05, 0.00010047300000000023, 0.00010042999999999858, 9.958300000000031e-05, 9.95280000000015e-05, 0.000100415999999999, 9.958300000000031e-05, 9.958300000000031e-05, 9.959699999999988e-05, 9.961099999999945e-05, 9.959699999999988e-05, 0.00010045899999999719, 0.00010052799999999903, 9.959699999999988e-05, 0.00010045800000000119, 9.959799999999935e-05, 9.950000000000236e-05, 9.958300000000031e-05, 9.958300000000031e-05, 0.00010045800000000119, 9.957000000000021e-05, 0.00010048600000000033, 9.95280000000015e-05, 9.959700000000335e-05, 9.961099999999945e-05, 9.951400000000193e-05, 9.959699999999988e-05, 9.959699999999988e-05, 9.958300000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.193" endtime="20201110 08:37:22.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.189" endtime="20201110 08:37:22.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.198" endtime="20201110 08:37:22.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.202" endtime="20201110 08:37:22.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.200" endtime="20201110 08:37:22.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.197" endtime="20201110 08:37:22.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.830" endtime="20201110 08:37:22.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.829" endtime="20201110 08:37:22.223"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.232" endtime="20201110 08:37:22.251"></status>
</kw>
<msg timestamp="20201110 08:37:22.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.231" endtime="20201110 08:37:22.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.252" endtime="20201110 08:37:22.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.254" endtime="20201110 08:37:22.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.228" endtime="20201110 08:37:22.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.226" endtime="20201110 08:37:22.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.263" endtime="20201110 08:37:22.550"></status>
</kw>
<msg timestamp="20201110 08:37:22.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023370278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.262" endtime="20201110 08:37:22.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023370278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.554" endtime="20201110 08:37:22.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.562" endtime="20201110 08:37:22.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.259" endtime="20201110 08:37:22.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.258" endtime="20201110 08:37:22.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.569" level="INFO">${RESULT} = [{'time': 0.023370278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010024999999999964, 'source_diff': 0.00010024999999999964}, {'time': 0.023489597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.565" endtime="20201110 08:37:22.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.582" level="INFO">${ACCURACY} = {'source_diff': [0.00010024999999999964, 0.0001005280000000025, 0.00010077800000000275, 0.00010058299999999784, 0.0001005280000000025, 9.983300000000056e-05, 0.00010059700000000088, 0.0001005279999999...</msg>
<status status="PASS" starttime="20201110 08:37:22.570" endtime="20201110 08:37:22.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.586" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.585" endtime="20201110 08:37:22.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.589" level="INFO">VALUE: [0.00010024999999999964, 0.0001005280000000025, 0.00010077800000000275, 0.00010058299999999784, 0.0001005280000000025, 9.983300000000056e-05, 0.00010059700000000088, 0.00010052799999999903, 0.00010058300000000131, 9.983400000000003e-05, 0.00010063899999999959, 0.0001005549999999987, 0.00010063899999999959, 0.00010058299999999784, 0.00010052799999999903, 0.00010056900000000174, 0.00010059699999999741, 0.00010057000000000121, 0.00010081900000000199, 0.00010059800000000035, 0.00010063800000000012, 0.0001005549999999987, 0.00010065299999999916, 0.00010062500000000002, 0.00010047200000000076, 0.00010076399999999971, 0.00010058299999999784, 9.98060000000009e-05, 9.977799999999828e-05, 0.00010065299999999916, 0.00010065299999999916, 0.00010061100000000045, 9.987499999999927e-05, 0.00010054099999999913, 9.983299999999709e-05, 0.00010061100000000045, 0.00010055599999999817, 0.00010058300000000131, 0.00010057000000000121, 9.983300000000056e-05, 0.00010051299999999999, 0.00010052799999999903, 0.00010058300000000131, 0.00010062500000000002, 0.0001005419999999986, 0.00010062500000000002, 0.00010051399999999946, 9.976399999999871e-05, 0.00010051399999999946, 9.984700000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.587" endtime="20201110 08:37:22.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.583" endtime="20201110 08:37:22.595"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.597" endtime="20201110 08:37:22.598"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.601" endtime="20201110 08:37:22.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.599" endtime="20201110 08:37:22.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.596" endtime="20201110 08:37:22.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.225" endtime="20201110 08:37:22.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.224" endtime="20201110 08:37:22.622"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.630" endtime="20201110 08:37:22.649"></status>
</kw>
<msg timestamp="20201110 08:37:22.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.629" endtime="20201110 08:37:22.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.650" endtime="20201110 08:37:22.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.653" endtime="20201110 08:37:22.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.626" endtime="20201110 08:37:22.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.624" endtime="20201110 08:37:22.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.662" endtime="20201110 08:37:22.947"></status>
</kw>
<msg timestamp="20201110 08:37:22.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.660" endtime="20201110 08:37:22.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.951" endtime="20201110 08:37:22.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.959" endtime="20201110 08:37:22.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.658" endtime="20201110 08:37:22.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.656" endtime="20201110 08:37:22.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.966" level="INFO">${RESULT} = [{'time': 0.022127319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001130550000000008, 'source_diff': 0.0001130550000000008}, {'time': 0.022255542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.962" endtime="20201110 08:37:22.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.980" level="INFO">${ACCURACY} = {'source_diff': [0.0001130550000000008, 0.00011283399999999916, 0.00011284699999999925, 0.00011286099999999882, 0.00011290199999999806, 0.00011284699999999925, 0.00011279100000000097, 0.00011284699999...</msg>
<status status="PASS" starttime="20201110 08:37:22.967" endtime="20201110 08:37:22.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.985" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.984" endtime="20201110 08:37:22.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.987" level="INFO">VALUE: [0.0001130550000000008, 0.00011283399999999916, 0.00011284699999999925, 0.00011286099999999882, 0.00011290199999999806, 0.00011284699999999925, 0.00011279100000000097, 0.00011284699999999925, 0.0001128749999999984, 0.00011283299999999968, 0.000112903000000001, 0.00011279100000000097, 0.00011281900000000011, 0.00011284699999999925, 0.00010055599999999817, 0.00011272199999999913, 0.00011283299999999968, 0.00010056900000000174, 0.00011276400000000131, 0.00011284799999999873, 0.00011283299999999968, 0.00011283299999999968, 0.00011281900000000011, 0.00011286099999999882, 0.00011284700000000272, 0.00011284700000000272, 0.00011284699999999925, 0.00011281900000000011, 0.00011281999999999959, 0.00011283299999999968, 0.00011284699999999925, 0.00011283399999999916, 0.00011286100000000229, 0.00011281900000000011, 0.00011286100000000229, 0.00011286100000000229, 0.0001129299999999972, 0.00011284699999999925, 0.00011282000000000306, 0.00011281900000000011, 0.00011283299999999968, 0.00010058300000000131, 0.00011279100000000097, 0.00011284699999999925, 0.00011284699999999925, 0.00011283400000000263, 0.0001128749999999984, 0.00011286200000000177, 0.00011284700000000272, 0.00010058300000000131]</msg>
<status status="PASS" starttime="20201110 08:37:22.986" endtime="20201110 08:37:22.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.981" endtime="20201110 08:37:22.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.991" endtime="20201110 08:37:22.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.994" endtime="20201110 08:37:23.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.992" endtime="20201110 08:37:23.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.989" endtime="20201110 08:37:23.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.622" endtime="20201110 08:37:23.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.622" endtime="20201110 08:37:23.015"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.023" endtime="20201110 08:37:23.042"></status>
</kw>
<msg timestamp="20201110 08:37:23.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.022" endtime="20201110 08:37:23.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.044" endtime="20201110 08:37:23.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.046" endtime="20201110 08:37:23.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.019" endtime="20201110 08:37:23.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.017" endtime="20201110 08:37:23.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.058" endtime="20201110 08:37:23.350"></status>
</kw>
<msg timestamp="20201110 08:37:23.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.055" endtime="20201110 08:37:23.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021960458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.354" endtime="20201110 08:37:23.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.363" endtime="20201110 08:37:23.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.051" endtime="20201110 08:37:23.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.049" endtime="20201110 08:37:23.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.369" level="INFO">${RESULT} = [{'time': 0.021960458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011304099999999775, 'source_diff': 0.00011304099999999775}, {'time': 0.022088681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:23.366" endtime="20201110 08:37:23.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.382" level="INFO">${ACCURACY} = {'source_diff': [0.00011304099999999775, 0.0001128619999999983, 0.00011281900000000011, 0.00011284799999999873, 0.00011283299999999968, 0.00011283400000000263, 0.0001127770000000014, 0.000112846999999...</msg>
<status status="PASS" starttime="20201110 08:37:23.370" endtime="20201110 08:37:23.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.387" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.386" endtime="20201110 08:37:23.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.389" level="INFO">VALUE: [0.00011304099999999775, 0.0001128619999999983, 0.00011281900000000011, 0.00011284799999999873, 0.00011283299999999968, 0.00011283400000000263, 0.0001127770000000014, 0.00011284699999999925, 0.00011281900000000011, 0.00011286099999999882, 0.00011284700000000272, 0.0001128480000000022, 0.00011280499999999707, 0.0001128749999999984, 0.00011286100000000229, 0.00011286100000000229, 0.00011283299999999968, 0.00011284699999999925, 0.00011284699999999925, 0.00011281900000000011, 0.00011283299999999968, 0.00011277800000000088, 0.0001128480000000022, 0.00011283299999999968, 0.0001128480000000022, 0.00011286099999999882, 0.00011283299999999968, 0.00011284699999999925, 0.00011283299999999968, 0.00011283299999999968, 0.00011284700000000272, 0.00011286200000000177, 0.00011283400000000263, 0.00011283399999999916, 0.00011280600000000002, 0.00011284699999999925, 0.0001128619999999983, 0.00011283299999999968, 0.00011283399999999916, 0.00011282000000000306, 0.00011284799999999873, 0.00011283299999999968, 0.00011283299999999968, 0.00011286100000000229, 0.00011280600000000002, 0.00011277800000000088, 0.00011277800000000088, 0.00011284699999999925, 0.00011283299999999968, 0.00011287500000000186]</msg>
<status status="PASS" starttime="20201110 08:37:23.388" endtime="20201110 08:37:23.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.383" endtime="20201110 08:37:23.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.393" endtime="20201110 08:37:23.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.396" endtime="20201110 08:37:23.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.394" endtime="20201110 08:37:23.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.391" endtime="20201110 08:37:23.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.016" endtime="20201110 08:37:23.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.015" endtime="20201110 08:37:23.417"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.426" endtime="20201110 08:37:23.444"></status>
</kw>
<msg timestamp="20201110 08:37:23.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.424" endtime="20201110 08:37:23.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.446" endtime="20201110 08:37:23.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.448" endtime="20201110 08:37:23.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.421" endtime="20201110 08:37:23.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.419" endtime="20201110 08:37:23.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.457" endtime="20201110 08:37:23.744"></status>
</kw>
<msg timestamp="20201110 08:37:23.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:23.456" endtime="20201110 08:37:23.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021774708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:23.748" endtime="20201110 08:37:23.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.756" endtime="20201110 08:37:23.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.453" endtime="20201110 08:37:23.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.451" endtime="20201110 08:37:23.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.762" level="INFO">${RESULT} = [{'time': 0.02188775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001130420000000007, 'source_diff': 0.0001130420000000007}, {'time': 0.022033153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:23.759" endtime="20201110 08:37:23.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.775" level="INFO">${ACCURACY} = {'source_diff': [0.0001130420000000007, 0.000112903000000001, 0.00011280600000000002, 0.00011279200000000045, 0.00011283400000000263, 0.00011283300000000315, 0.00011281900000000011, 0.0001128200000000...</msg>
<status status="PASS" starttime="20201110 08:37:23.763" endtime="20201110 08:37:23.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.780" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.779" endtime="20201110 08:37:23.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.782" level="INFO">VALUE: [0.0001130420000000007, 0.000112903000000001, 0.00011280600000000002, 0.00011279200000000045, 0.00011283400000000263, 0.00011283300000000315, 0.00011281900000000011, 0.00011282000000000306, 0.00011281999999999959, 0.00011283399999999916, 0.00011281900000000011, 0.00011281900000000011, 0.00011275000000000174, 0.00011284700000000272, 0.00011280600000000002, 0.00011286099999999882, 0.00011293100000000014, 0.000112903000000001, 0.00011283299999999968, 0.00011281900000000011, 0.0001128749999999984, 0.00011284700000000272, 0.0001128480000000022, 0.00011284699999999925, 0.00011281999999999959, 0.00011283299999999968, 0.00011283299999999968, 0.00011283399999999916, 0.00011283299999999968, 0.0001128619999999983, 0.00011284700000000272, 0.00011286100000000229, 0.00011283299999999968, 0.00011283299999999968, 0.00011283300000000315, 0.00011283299999999968, 0.0001128480000000022, 0.00011286099999999882, 0.00011281999999999959, 0.00011283299999999968, 0.00011281900000000011, 0.00011284699999999925, 0.00011283299999999968, 0.00011286099999999882, 0.00011284699999999925, 0.00011284700000000272, 0.00011284799999999873, 0.00011279200000000045, 0.00011283400000000263, 0.0001128749999999984]</msg>
<status status="PASS" starttime="20201110 08:37:23.781" endtime="20201110 08:37:23.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.776" endtime="20201110 08:37:23.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.786" endtime="20201110 08:37:23.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.789" endtime="20201110 08:37:23.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.788" endtime="20201110 08:37:23.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.784" endtime="20201110 08:37:23.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.418" endtime="20201110 08:37:23.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.417" endtime="20201110 08:37:23.810"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.819" endtime="20201110 08:37:23.838"></status>
</kw>
<msg timestamp="20201110 08:37:23.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.817" endtime="20201110 08:37:23.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.839" endtime="20201110 08:37:23.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.842" endtime="20201110 08:37:23.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.815" endtime="20201110 08:37:23.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.813" endtime="20201110 08:37:23.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.851" endtime="20201110 08:37:24.137"></status>
</kw>
<msg timestamp="20201110 08:37:24.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.849" endtime="20201110 08:37:24.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.141" endtime="20201110 08:37:24.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.150" endtime="20201110 08:37:24.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.847" endtime="20201110 08:37:24.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.845" endtime="20201110 08:37:24.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.156" level="INFO">${RESULT} = [{'time': 0.022073208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011302700000000165, 'source_diff': 0.00011302700000000165}, {'time': 0.022217306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:24.153" endtime="20201110 08:37:24.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.172" level="INFO">${ACCURACY} = {'source_diff': [0.00011302700000000165, 0.00011281999999999959, 0.00011283299999999968, 0.00011280600000000002, 0.00011283299999999968, 0.00011280600000000002, 0.00011283400000000263, 0.0001128190000...</msg>
<status status="PASS" starttime="20201110 08:37:24.157" endtime="20201110 08:37:24.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.177" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.176" endtime="20201110 08:37:24.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.180" level="INFO">VALUE: [0.00011302700000000165, 0.00011281999999999959, 0.00011283299999999968, 0.00011280600000000002, 0.00011283299999999968, 0.00011280600000000002, 0.00011283400000000263, 0.00011281900000000011, 0.00011284699999999925, 0.00011284799999999873, 0.00011286100000000229, 0.00011284699999999925, 0.00011286100000000229, 0.00011284699999999925, 0.00011287500000000186, 0.00011284699999999925, 0.00011286099999999882, 0.00011283399999999916, 0.00011284799999999873, 0.00011283400000000263, 0.00011284699999999925, 0.000112903000000001, 0.00011283299999999968, 0.00011283299999999968, 0.00011283299999999968, 0.00011283399999999916, 0.00011283299999999968, 0.00011283399999999916, 0.00011283399999999916, 0.00011283299999999968, 0.0001128749999999984, 0.0001128749999999984, 0.00011290299999999753, 0.00011286200000000177, 0.00011288900000000143, 0.00011286099999999882, 0.00011283299999999968, 0.00011286099999999882, 0.00011283299999999968, 0.00011281999999999959, 0.00011283399999999916, 0.00011281999999999959, 0.00011279100000000097, 0.00011283399999999916, 0.00011283299999999968, 0.00011277800000000088, 0.00011281900000000011, 0.00011284699999999925, 0.00011283399999999916, 0.00011283299999999968]</msg>
<status status="PASS" starttime="20201110 08:37:24.178" endtime="20201110 08:37:24.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.173" endtime="20201110 08:37:24.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.183" endtime="20201110 08:37:24.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.187" endtime="20201110 08:37:24.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.185" endtime="20201110 08:37:24.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.182" endtime="20201110 08:37:24.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.811" endtime="20201110 08:37:24.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.811" endtime="20201110 08:37:24.208"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.217" endtime="20201110 08:37:24.236"></status>
</kw>
<msg timestamp="20201110 08:37:24.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.216" endtime="20201110 08:37:24.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.238" endtime="20201110 08:37:24.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.240" endtime="20201110 08:37:24.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.213" endtime="20201110 08:37:24.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.211" endtime="20201110 08:37:24.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.249" endtime="20201110 08:37:24.536"></status>
</kw>
<msg timestamp="20201110 08:37:24.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:24.248" endtime="20201110 08:37:24.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:24.540" endtime="20201110 08:37:24.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.548" endtime="20201110 08:37:24.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.245" endtime="20201110 08:37:24.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.243" endtime="20201110 08:37:24.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.555" level="INFO">${RESULT} = [{'time': 0.022246, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011302799999999766, 'source_diff': 0.00011302799999999766}, {'time': 0.022385111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:24.551" endtime="20201110 08:37:24.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.569" level="INFO">${ACCURACY} = {'source_diff': [0.00011302799999999766, 0.00011279200000000045, 0.00011284699999999925, 0.00011284699999999925, 0.00011283299999999968, 0.00011284699999999925, 0.00011284699999999925, 0.0001128339999...</msg>
<status status="PASS" starttime="20201110 08:37:24.556" endtime="20201110 08:37:24.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.574" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.573" endtime="20201110 08:37:24.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.576" level="INFO">VALUE: [0.00011302799999999766, 0.00011279200000000045, 0.00011284699999999925, 0.00011284699999999925, 0.00011283299999999968, 0.00011284699999999925, 0.00011284699999999925, 0.00011283399999999916, 0.00011286099999999882, 0.00011283299999999968, 0.00011283299999999968, 0.00011286100000000229, 0.00011279200000000045, 0.00011290299999999753, 0.00011284699999999925, 0.00011286100000000229, 0.00011283399999999916, 0.00011284700000000272, 0.00011284799999999873, 0.00011284699999999925, 0.00011283299999999968, 0.00011284700000000272, 0.00011281900000000011, 0.00011286099999999882, 0.00011283299999999968, 0.00011281900000000011, 0.00011283299999999968, 0.00011283299999999968, 0.00011284699999999925, 0.00011284700000000272, 0.00011284700000000272, 0.00011283399999999916, 0.00011281900000000011, 0.00011284699999999925, 0.00011283399999999916, 0.00011284700000000272, 0.00011281900000000011, 0.00011290199999999806, 0.00011283399999999916, 0.00011286100000000229, 0.00011284699999999925, 0.00011281900000000011, 0.00011286100000000229, 0.00011284700000000272, 0.00011281999999999959, 0.0001128619999999983, 0.0001128749999999984, 0.0001128480000000022, 0.00011281900000000011, 0.00011281900000000011]</msg>
<status status="PASS" starttime="20201110 08:37:24.575" endtime="20201110 08:37:24.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.570" endtime="20201110 08:37:24.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.580" endtime="20201110 08:37:24.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.583" endtime="20201110 08:37:24.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.582" endtime="20201110 08:37:24.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.578" endtime="20201110 08:37:24.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.209" endtime="20201110 08:37:24.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.209" endtime="20201110 08:37:24.604"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.615" endtime="20201110 08:37:24.634"></status>
</kw>
<msg timestamp="20201110 08:37:24.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.613" endtime="20201110 08:37:24.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.636" endtime="20201110 08:37:24.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.639" endtime="20201110 08:37:24.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.610" endtime="20201110 08:37:24.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.607" endtime="20201110 08:37:24.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.649" endtime="20201110 08:37:24.953"></status>
</kw>
<msg timestamp="20201110 08:37:24.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.647" endtime="20201110 08:37:24.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024309708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024422736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.957" endtime="20201110 08:37:24.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.965" endtime="20201110 08:37:24.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.644" endtime="20201110 08:37:24.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.642" endtime="20201110 08:37:24.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.972" level="INFO">${RESULT} = [{'time': 0.024422736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011302800000000113, 'source_diff': 0.00011302800000000113}, {'time': 0.024559694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:24.969" endtime="20201110 08:37:24.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.985" level="INFO">${ACCURACY} = {'source_diff': [0.00011302800000000113, 0.00011279100000000097, 0.00011284700000000272, 0.00011283400000000263, 0.00011284799999999873, 0.00011284699999999925, 0.00011286100000000229, 0.0001128610000...</msg>
<status status="PASS" starttime="20201110 08:37:24.973" endtime="20201110 08:37:24.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.990" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.989" endtime="20201110 08:37:24.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.992" level="INFO">VALUE: [0.00011302800000000113, 0.00011279100000000097, 0.00011284700000000272, 0.00011283400000000263, 0.00011284799999999873, 0.00011284699999999925, 0.00011286100000000229, 0.00011286100000000229, 0.00011286099999999882, 0.00011284699999999925, 0.00011286200000000177, 0.00011284700000000272, 0.00011284699999999925, 0.00011284699999999925, 0.00011284799999999873, 0.00011279100000000097, 0.00011283399999999916, 0.0001128749999999984, 0.00011283299999999968, 0.00011290199999999806, 0.00011283299999999968, 0.00011281900000000011, 0.00011284699999999925, 0.00011281999999999959, 0.00011281999999999959, 0.00011283300000000315, 0.00011283399999999916, 0.00011286100000000229, 0.0001128480000000022, 0.00011284700000000272, 0.00011279200000000045, 0.00011284699999999925, 0.00011281900000000011, 0.00011283399999999916, 0.00011284699999999925, 0.00011283299999999968, 0.00011284699999999925, 0.00011283399999999916, 0.00011283299999999968, 0.00011284699999999925, 0.00011284699999999925, 0.00011284699999999925, 0.00011281900000000011, 0.00011284699999999925, 0.00011290200000000153, 0.0001128480000000022, 0.00011283299999999968, 0.00011283299999999968, 0.00011284700000000272, 0.00011283300000000315]</msg>
<status status="PASS" starttime="20201110 08:37:24.991" endtime="20201110 08:37:24.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.986" endtime="20201110 08:37:24.994"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.996" endtime="20201110 08:37:24.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.999" endtime="20201110 08:37:25.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.998" endtime="20201110 08:37:25.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.994" endtime="20201110 08:37:25.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.606" endtime="20201110 08:37:25.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.605" endtime="20201110 08:37:25.021"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.029" endtime="20201110 08:37:25.048"></status>
</kw>
<msg timestamp="20201110 08:37:25.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.028" endtime="20201110 08:37:25.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.050" endtime="20201110 08:37:25.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.052" endtime="20201110 08:37:25.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.025" endtime="20201110 08:37:25.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.023" endtime="20201110 08:37:25.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.061" endtime="20201110 08:37:25.348"></status>
</kw>
<msg timestamp="20201110 08:37:25.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:25.059" endtime="20201110 08:37:25.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022147, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:25.352" endtime="20201110 08:37:25.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.360" endtime="20201110 08:37:25.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.057" endtime="20201110 08:37:25.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.055" endtime="20201110 08:37:25.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.367" level="INFO">${RESULT} = [{'time': 0.022147, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011301400000000156, 'source_diff': 0.00011301400000000156}, {'time': 0.022276167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:25.363" endtime="20201110 08:37:25.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.380" level="INFO">${ACCURACY} = {'source_diff': [0.00011301400000000156, 0.00011281999999999959, 0.00011286099999999882, 0.00011284699999999925, 0.00011280600000000002, 0.00011283299999999968, 0.00011280500000000054, 0.0001128050000...</msg>
<status status="PASS" starttime="20201110 08:37:25.368" endtime="20201110 08:37:25.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.384" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.383" endtime="20201110 08:37:25.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.387" level="INFO">VALUE: [0.00011301400000000156, 0.00011281999999999959, 0.00011286099999999882, 0.00011284699999999925, 0.00011280600000000002, 0.00011283299999999968, 0.00011280500000000054, 0.00011280500000000054, 0.00011283299999999968, 0.00011284699999999925, 0.00011283299999999968, 0.00011283399999999916, 0.00011280499999999707, 0.0001128619999999983, 0.00011284700000000272, 0.00011284699999999925, 0.00011284700000000272, 0.00011284700000000272, 0.00011281999999999959, 0.00011283299999999968, 0.0001128480000000022, 0.00011280500000000054, 0.00011286100000000229, 0.00011286100000000229, 0.00011279199999999698, 0.00011284699999999925, 0.00011290200000000153, 0.00011286099999999882, 0.00011284699999999925, 0.00011284699999999925, 0.00011284699999999925, 0.00011283399999999916, 0.00011286099999999882, 0.00011283299999999968, 0.00011283299999999968, 0.0001128480000000022, 0.00011279200000000045, 0.0001127770000000014, 0.00011279200000000045, 0.00011280600000000002, 0.00011286100000000229, 0.00011293100000000014, 0.00011284699999999925, 0.00011294499999999971, 0.00011286100000000229, 0.00011283399999999916, 0.00011283300000000315, 0.00011283300000000315, 0.00011284700000000272, 0.00011283299999999968]</msg>
<status status="PASS" starttime="20201110 08:37:25.386" endtime="20201110 08:37:25.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.381" endtime="20201110 08:37:25.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.391" endtime="20201110 08:37:25.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.394" endtime="20201110 08:37:25.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.393" endtime="20201110 08:37:25.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.389" endtime="20201110 08:37:25.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.021" endtime="20201110 08:37:25.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.021" endtime="20201110 08:37:25.415"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.424" endtime="20201110 08:37:25.443"></status>
</kw>
<msg timestamp="20201110 08:37:25.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.422" endtime="20201110 08:37:25.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.444" endtime="20201110 08:37:25.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.447" endtime="20201110 08:37:25.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.420" endtime="20201110 08:37:25.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.418" endtime="20201110 08:37:25.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.456" endtime="20201110 08:37:25.742"></status>
</kw>
<msg timestamp="20201110 08:37:25.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.454" endtime="20201110 08:37:25.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.747" endtime="20201110 08:37:25.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.755" endtime="20201110 08:37:25.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.451" endtime="20201110 08:37:25.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.450" endtime="20201110 08:37:25.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.761" level="INFO">${RESULT} = [{'time': 0.022057722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011299999999999852, 'source_diff': 0.00011299999999999852}, {'time': 0.022197458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:25.758" endtime="20201110 08:37:25.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.774" level="INFO">${ACCURACY} = {'source_diff': [0.00011299999999999852, 0.00011284699999999925, 0.00011284700000000272, 0.00011281999999999959, 0.00011284699999999925, 0.0001128619999999983, 0.00011279200000000045, 0.00011284799999...</msg>
<status status="PASS" starttime="20201110 08:37:25.762" endtime="20201110 08:37:25.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.779" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.778" endtime="20201110 08:37:25.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.781" level="INFO">VALUE: [0.00011299999999999852, 0.00011284699999999925, 0.00011284700000000272, 0.00011281999999999959, 0.00011284699999999925, 0.0001128619999999983, 0.00011279200000000045, 0.00011284799999999873, 0.00011288899999999796, 0.000112903000000001, 0.00011283299999999968, 0.00011281900000000011, 0.00011284699999999925, 0.00011283299999999968, 0.00011284700000000272, 0.00011286099999999882, 0.00011286099999999882, 0.00011283299999999968, 0.00011281999999999959, 0.00011284699999999925, 0.00011284699999999925, 0.00011284699999999925, 0.00011286100000000229, 0.00011283299999999968, 0.00011284699999999925, 0.00011283400000000263, 0.00011283399999999916, 0.00011283299999999968, 0.00011277800000000088, 0.00011279200000000045, 0.00011288899999999796, 0.00011286100000000229, 0.00011284699999999925, 0.00011283299999999968, 0.00011284699999999925, 0.00011283299999999968, 0.00011279100000000097, 0.00011284799999999873, 0.00011284699999999925, 0.00011283299999999968, 0.00011281999999999959, 0.00011283299999999968, 0.00011284699999999925, 0.00011280499999999707, 0.00011291700000000057, 0.00011275000000000174, 0.00011284799999999873, 0.00011283399999999916, 0.00011284699999999925, 0.00011284799999999873]</msg>
<status status="PASS" starttime="20201110 08:37:25.780" endtime="20201110 08:37:25.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.775" endtime="20201110 08:37:25.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.785" endtime="20201110 08:37:25.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.788" endtime="20201110 08:37:25.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.787" endtime="20201110 08:37:25.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.783" endtime="20201110 08:37:25.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.416" endtime="20201110 08:37:25.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.415" endtime="20201110 08:37:25.809"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.818" endtime="20201110 08:37:25.837"></status>
</kw>
<msg timestamp="20201110 08:37:25.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.817" endtime="20201110 08:37:25.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.838" endtime="20201110 08:37:25.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.841" endtime="20201110 08:37:25.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.814" endtime="20201110 08:37:25.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.812" endtime="20201110 08:37:25.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.850" endtime="20201110 08:37:26.138"></status>
</kw>
<msg timestamp="20201110 08:37:26.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:25.848" endtime="20201110 08:37:26.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:26.142" endtime="20201110 08:37:26.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.150" endtime="20201110 08:37:26.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.846" endtime="20201110 08:37:26.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.844" endtime="20201110 08:37:26.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.156" level="INFO">${RESULT} = [{'time': 0.022105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001130420000000007, 'source_diff': 0.0001130420000000007}, {'time': 0.022243792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:26.153" endtime="20201110 08:37:26.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.171" level="INFO">${ACCURACY} = {'source_diff': [0.0001130420000000007, 0.00011284799999999873, 0.00011279200000000045, 0.0001128480000000022, 0.00011286100000000229, 0.00011283399999999916, 0.00011279100000000097, 0.000112819999999...</msg>
<status status="PASS" starttime="20201110 08:37:26.157" endtime="20201110 08:37:26.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.176" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.175" endtime="20201110 08:37:26.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.178" level="INFO">VALUE: [0.0001130420000000007, 0.00011284799999999873, 0.00011279200000000045, 0.0001128480000000022, 0.00011286100000000229, 0.00011283399999999916, 0.00011279100000000097, 0.00011281999999999959, 0.00011279200000000045, 0.00011283300000000315, 0.0001128480000000022, 0.00011283399999999916, 0.00011284700000000272, 0.00011283399999999916, 0.00011284699999999925, 0.0001128480000000022, 0.00011286100000000229, 0.00011284700000000272, 0.00011281999999999959, 0.00011286099999999882, 0.00011280600000000002, 0.00011284699999999925, 0.00011283299999999968, 0.00011286100000000229, 0.0001128749999999984, 0.0001128480000000022, 0.00011284700000000272, 0.00011283299999999968, 0.0001128619999999983, 0.00011283299999999968, 0.00011283399999999916, 0.00011280600000000002, 0.000112903000000001, 0.00011281900000000011, 0.0001128480000000022, 0.00011283399999999916, 0.00011290200000000153, 0.0001128749999999984, 0.00011280600000000002, 0.00011283399999999916, 0.00011283399999999916, 0.00011283299999999968, 0.00011283299999999968, 0.00011283300000000315, 0.00011280600000000002, 0.00011284699999999925, 0.00011286099999999882, 0.00011286099999999882, 0.00011283299999999968, 0.00011284699999999925]</msg>
<status status="PASS" starttime="20201110 08:37:26.177" endtime="20201110 08:37:26.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.172" endtime="20201110 08:37:26.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.182" endtime="20201110 08:37:26.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.185" endtime="20201110 08:37:26.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.184" endtime="20201110 08:37:26.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.180" endtime="20201110 08:37:26.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.810" endtime="20201110 08:37:26.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.810" endtime="20201110 08:37:26.206"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.215" endtime="20201110 08:37:27.231"></status>
</kw>
<msg timestamp="20201110 08:37:27.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 32', 'msg': ['sleep_accuracy_timer_sleep 32\r\n', '{"cmd":"sleep_accuracy: timer_sleep(32)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201110 08:37:26.213" endtime="20201110 08:37:27.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy_timer_sleep 32', 'msg': ['sleep_accuracy_timer_sleep 32\r\n', '{"cmd":"sleep_accuracy: timer_sleep(32)"\n', 'Context before hardfault:\n'], 'result': 'Timeout'}</msg>
<status status="PASS" starttime="20201110 08:37:27.234" endtime="20201110 08:37:27.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.244" level="FAIL">'Timeout' does not contain 'Success'</msg>
<status status="FAIL" starttime="20201110 08:37:27.240" endtime="20201110 08:37:27.244"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:26.211" endtime="20201110 08:37:27.246"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:26.208" endtime="20201110 08:37:27.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.261" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:27.279" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:28.458" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:27.259" endtime="20201110 08:37:28.458"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.461" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:28.460" endtime="20201110 08:37:28.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.256" endtime="20201110 08:37:28.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.252" endtime="20201110 08:37:28.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.464" endtime="20201110 08:37:28.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.463" endtime="20201110 08:37:28.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.249" endtime="20201110 08:37:28.485"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:26.207" endtime="20201110 08:37:28.485"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:26.206" endtime="20201110 08:37:28.486"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:13.978" endtime="20201110 08:37:28.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.490" endtime="20201110 08:37:28.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.489" endtime="20201110 08:37:28.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.487" endtime="20201110 08:37:28.511"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="FAIL" starttime="20201110 08:37:13.911" endtime="20201110 08:37:28.511" critical="yes">'Timeout' does not contain 'Success'</status>
</test>
<status status="FAIL" starttime="20201110 08:36:32.595" endtime="20201110 08:37:28.515"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.570" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:28.578" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:29.811" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:28.569" endtime="20201110 08:37:29.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.815" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:29.813" endtime="20201110 08:37:29.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.567" endtime="20201110 08:37:29.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.818" endtime="20201110 08:37:30.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.816" endtime="20201110 08:37:30.004"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.021" endtime="20201110 08:37:30.033"></status>
</kw>
<msg timestamp="20201110 08:37:30.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.018" endtime="20201110 08:37:30.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.037" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.035" endtime="20201110 08:37:30.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.041" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:30.038" endtime="20201110 08:37:30.041"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.015" endtime="20201110 08:37:30.042"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.013" endtime="20201110 08:37:30.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.011" endtime="20201110 08:37:30.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:30.046" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:30.045" endtime="20201110 08:37:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.043" endtime="20201110 08:37:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.009" endtime="20201110 08:37:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.008" endtime="20201110 08:37:30.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.048" endtime="20201110 08:37:30.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.007" endtime="20201110 08:37:30.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.051" endtime="20201110 08:37:30.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.005" endtime="20201110 08:37:30.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.566" endtime="20201110 08:37:30.053"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.059" endtime="20201110 08:37:30.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.058" endtime="20201110 08:37:30.079"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.092" endtime="20201110 08:37:30.104"></status>
</kw>
<msg timestamp="20201110 08:37:30.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.091" endtime="20201110 08:37:30.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.106" endtime="20201110 08:37:30.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:30.109" endtime="20201110 08:37:30.111"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.088" endtime="20201110 08:37:30.112"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.086" endtime="20201110 08:37:30.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.084" endtime="20201110 08:37:30.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:30.118" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:30.116" endtime="20201110 08:37:30.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.114" endtime="20201110 08:37:30.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.084" endtime="20201110 08:37:30.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.083" endtime="20201110 08:37:30.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.119" endtime="20201110 08:37:30.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.082" endtime="20201110 08:37:30.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.080" endtime="20201110 08:37:30.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.056" endtime="20201110 08:37:30.122"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:30.125" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.133" endtime="20201110 08:37:32.241"></status>
</kw>
<msg timestamp="20201110 08:37:32.242" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 371985, 'start-iter': 1, 'wakeups': [382032, 392029, 402029, 412029, 4...</msg>
<status status="PASS" starttime="20201110 08:37:30.132" endtime="20201110 08:37:32.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.248" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 371985, 'start-iter': 1, 'wakeups': [382032, 392029, 402029, 412029, 4...</msg>
<status status="PASS" starttime="20201110 08:37:32.244" endtime="20201110 08:37:32.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.250" endtime="20201110 08:37:32.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.129" endtime="20201110 08:37:32.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.127" endtime="20201110 08:37:32.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.261" level="INFO">${RESULT} = {'timer-count': 1, 'start-iter': 1, 'start-time': 371985, 'timer-interval': 10000, 'wakeups': [382032, 392029, 402029, 412029, 422029, 432029, 442029, 452029, 462029, 472029, 482029, 492029, 502029, 5...</msg>
<status status="PASS" starttime="20201110 08:37:32.257" endtime="20201110 08:37:32.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.265" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:32.264" endtime="20201110 08:37:32.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.267" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:32.266" endtime="20201110 08:37:32.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.262" endtime="20201110 08:37:32.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.272" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:32.271" endtime="20201110 08:37:32.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.274" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:32.273" endtime="20201110 08:37:32.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.269" endtime="20201110 08:37:32.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.279" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:32.278" endtime="20201110 08:37:32.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.282" level="INFO">VALUE: 371985</msg>
<status status="PASS" starttime="20201110 08:37:32.281" endtime="20201110 08:37:32.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.276" endtime="20201110 08:37:32.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.287" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:32.286" endtime="20201110 08:37:32.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.289" level="INFO">VALUE: [382032, 392029, 402029, 412029, 422029, 432029, 442029, 452029, 462029, 472029, 482029, 492029, 502029, 512029, 522029, 532029, 542029, 552029, 562029, 572029, 582029, 592029, 602029, 612029, 622029, 632029, 642029, 652029, 662029, 672029, 682029, 692029, 702029, 712029, 722029, 732029, 742029, 752029, 762029, 772029, 782029, 792029, 802029, 812029, 822029, 832029, 842029, 852029, 862029, 872029, 882029, 892029, 902029, 912029, 922029, 932029, 942029, 952029, 962029, 972029, 982029, 992029, 1002029, 1012029, 1022029, 1032029, 1042029, 1052029, 1062029, 1072029, 1082029, 1092029, 1102029, 1112029, 1122029, 1132029, 1142029, 1152029, 1162029, 1172029, 1182029, 1192029, 1202029, 1212029, 1222029, 1232029, 1242029, 1252029, 1262029, 1272029, 1282029, 1292029, 1302029, 1312029, 1322029, 1332029, 1342029, 1352029, 1362029, 1372029]</msg>
<status status="PASS" starttime="20201110 08:37:32.288" endtime="20201110 08:37:32.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.283" endtime="20201110 08:37:32.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.297" endtime="20201110 08:37:32.594"></status>
</kw>
<msg timestamp="20201110 08:37:32.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065113625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075124986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.296" endtime="20201110 08:37:32.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065113625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075124986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.599" endtime="20201110 08:37:32.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.607" endtime="20201110 08:37:32.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.292" endtime="20201110 08:37:32.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.290" endtime="20201110 08:37:32.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.633" level="INFO">${RESULT} = {'source_diff': [0, 0.01001136100000001, 0.009961208, 0.009963917000000003, 0.009963874999999997, 0.009964069999999992, 0.009963791, 0.009964195000000009, 0.009964319, 0.009964153000000003, 0.00996366...</msg>
<status status="PASS" starttime="20201110 08:37:32.610" endtime="20201110 08:37:32.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.637" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:32.636" endtime="20201110 08:37:32.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.639" level="INFO">VALUE: 0.065113625</msg>
<status status="PASS" starttime="20201110 08:37:32.638" endtime="20201110 08:37:32.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.634" endtime="20201110 08:37:32.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.645" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:32.644" endtime="20201110 08:37:32.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.648" level="INFO">VALUE: [0.075124986, 0.085086194, 0.095050111, 0.105013986, 0.114978056, 0.124941847, 0.134906042, 0.144870361, 0.154834514, 0.164798181, 0.174762208, 0.184726264, 0.194690625, 0.204654528, 0.214617889, 0.224581139, 0.234544917, 0.244509097, 0.254472556, 0.264435681, 0.274399403, 0.284363236, 0.294326875, 0.304290611, 0.314253972, 0.324216861, 0.334180083, 0.344143542, 0.354107125, 0.364071014, 0.374034778, 0.383998125, 0.393961319, 0.403924556, 0.413888139, 0.423851806, 0.4338155, 0.443779333, 0.453742556, 0.463706194, 0.473670139, 0.4836345, 0.493598556, 0.503562597, 0.513526931, 0.523491736, 0.533456083, 0.543420306, 0.553384639, 0.563348361, 0.573311764, 0.583275514, 0.593239944, 0.603203208, 0.613165833, 0.623128681, 0.633091583, 0.643055056, 0.653018972, 0.662983153, 0.672947236, 0.682911236, 0.69287525, 0.702839486, 0.712803694, 0.722767625, 0.732731431, 0.742695208, 0.752659139, 0.762623028, 0.772587264, 0.782552417, 0.792516542, 0.802480681, 0.812444889, 0.822409167, 0.832374444, 0.842339319, 0.852303361, 0.862267972, 0.872232778, 0.882197069, 0.892160931, 0.902125569, 0.912089583, 0.922053639, 0.932017722, 0.941982222, 0.951946903, 0.961910972, 0.971874708, 0.981838542, 0.9918025, 1.001765389, 1.011727722, 1.021690403, 1.031653569, 1.041616528, 1.05158, 1.061542903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:32.646" endtime="20201110 08:37:32.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.641" endtime="20201110 08:37:32.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.655" endtime="20201110 08:37:32.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.661" endtime="20201110 08:37:32.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.659" endtime="20201110 08:37:32.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.652" endtime="20201110 08:37:32.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.126" endtime="20201110 08:37:32.685"></status>
</kw>
<msg timestamp="20201110 08:37:32.686" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.701" endtime="20201110 08:37:34.817"></status>
</kw>
<msg timestamp="20201110 08:37:34.817" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2951175, 'start-iter': 1, 'wakeups': [2961222, 2971219, 2981219, 29912...</msg>
<status status="PASS" starttime="20201110 08:37:32.699" endtime="20201110 08:37:34.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.820" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2951175, 'start-iter': 1, 'wakeups': [2961222, 2971219, 2981219, 29912...</msg>
<status status="PASS" starttime="20201110 08:37:34.818" endtime="20201110 08:37:34.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.821" endtime="20201110 08:37:34.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.694" endtime="20201110 08:37:34.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.689" endtime="20201110 08:37:34.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.826" level="INFO">${RESULT} = {'timer-count': 1, 'start-iter': 1, 'start-time': 2951175, 'timer-interval': 10000, 'wakeups': [2961222, 2971219, 2981219, 2991219, 3001219, 3011219, 3021219, 3031219, 3041219, 3051219, 3061219, 30712...</msg>
<status status="PASS" starttime="20201110 08:37:34.824" endtime="20201110 08:37:34.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.830" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:34.829" endtime="20201110 08:37:34.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.833" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:34.832" endtime="20201110 08:37:34.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.827" endtime="20201110 08:37:34.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.837" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:34.836" endtime="20201110 08:37:34.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.839" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:34.839" endtime="20201110 08:37:34.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.834" endtime="20201110 08:37:34.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.844" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:34.843" endtime="20201110 08:37:34.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.846" level="INFO">VALUE: 2951175</msg>
<status status="PASS" starttime="20201110 08:37:34.845" endtime="20201110 08:37:34.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.841" endtime="20201110 08:37:34.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.851" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:34.850" endtime="20201110 08:37:34.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.853" level="INFO">VALUE: [2961222, 2971219, 2981219, 2991219, 3001219, 3011219, 3021219, 3031219, 3041219, 3051219, 3061219, 3071219, 3081219, 3091219, 3101219, 3111219, 3121219, 3131219, 3141219, 3151219, 3161219, 3171219, 3181219, 3191219, 3201219, 3211219, 3221219, 3231219, 3241219, 3251219, 3261219, 3271219, 3281219, 3291219, 3301219, 3311219, 3321219, 3331219, 3341219, 3351219, 3361219, 3371219, 3381219, 3391219, 3401219, 3411219, 3421219, 3431219, 3441219, 3451219, 3461219, 3471219, 3481219, 3491219, 3501219, 3511219, 3521219, 3531219, 3541219, 3551219, 3561219, 3571219, 3581219, 3591219, 3601219, 3611219, 3621219, 3631219, 3641219, 3651219, 3661219, 3671219, 3681219, 3691219, 3701219, 3711219, 3721219, 3731219, 3741219, 3751219, 3761219, 3771219, 3781219, 3791219, 3801219, 3811219, 3821219, 3831219, 3841219, 3851219, 3861219, 3871219, 3881219, 3891219, 3901219, 3911219, 3921219, 3931219, 3941219, 3951219]</msg>
<status status="PASS" starttime="20201110 08:37:34.852" endtime="20201110 08:37:34.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.848" endtime="20201110 08:37:34.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.861" endtime="20201110 08:37:35.158"></status>
</kw>
<msg timestamp="20201110 08:37:35.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031815625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:34.860" endtime="20201110 08:37:35.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031815625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418255, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:35.162" endtime="20201110 08:37:35.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.170" endtime="20201110 08:37:35.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.857" endtime="20201110 08:37:35.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.855" endtime="20201110 08:37:35.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.196" level="INFO">${RESULT} = {'source_diff': [0, 0.010009875000000001, 0.009960263999999996, 0.009962278000000005, 0.009962125000000002, 0.009962138999999995, 0.009962569000000004, 0.009961999999999999, 0.009962221999999993, 0.00...</msg>
<status status="PASS" starttime="20201110 08:37:35.173" endtime="20201110 08:37:35.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.200" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:35.199" endtime="20201110 08:37:35.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.203" level="INFO">VALUE: 0.031815625</msg>
<status status="PASS" starttime="20201110 08:37:35.202" endtime="20201110 08:37:35.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.197" endtime="20201110 08:37:35.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.208" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:35.207" endtime="20201110 08:37:35.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.210" level="INFO">VALUE: [0.0418255, 0.051785764, 0.061748042, 0.071710167, 0.081672306, 0.091634875, 0.101596875, 0.111559097, 0.121521569, 0.131484319, 0.141446597, 0.151408722, 0.161371139, 0.171334, 0.18129675, 0.191259639, 0.201221847, 0.211184125, 0.221146347, 0.231109014, 0.2410715, 0.251033917, 0.260996389, 0.270958875, 0.280920736, 0.290882986, 0.300845778, 0.310808361, 0.320770583, 0.330732542, 0.340695125, 0.350657792, 0.360620806, 0.370583917, 0.380546667, 0.390509444, 0.400472917, 0.410436347, 0.420399819, 0.430362667, 0.440325861, 0.450288889, 0.460252333, 0.470215542, 0.480178681, 0.490142194, 0.500105083, 0.510067653, 0.52003, 0.529992639, 0.539955875, 0.549919125, 0.559882056, 0.569844875, 0.579807486, 0.589770028, 0.599732833, 0.609695167, 0.619656819, 0.629619389, 0.639582264, 0.64954525, 0.659508028, 0.669470403, 0.679432625, 0.689394167, 0.699355972, 0.709317986, 0.71927975, 0.729242139, 0.739204167, 0.749165875, 0.759128222, 0.769090125, 0.779052444, 0.789015056, 0.798977542, 0.808939792, 0.818901931, 0.828863903, 0.838825736, 0.848787778, 0.858750361, 0.868713306, 0.878675639, 0.888638042, 0.898600694, 0.908563292, 0.918526389, 0.928489333, 0.938451708, 0.948413875, 0.958376667, 0.968339833, 0.978302736, 0.988265597, 0.998228583, 1.008191667, 1.018154667, 1.028117861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:35.209" endtime="20201110 08:37:35.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.204" endtime="20201110 08:37:35.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.213" endtime="20201110 08:37:35.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.217" endtime="20201110 08:37:35.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.215" endtime="20201110 08:37:35.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.212" endtime="20201110 08:37:35.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.687" endtime="20201110 08:37:35.237"></status>
</kw>
<msg timestamp="20201110 08:37:35.238" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.246" endtime="20201110 08:37:37.386"></status>
</kw>
<msg timestamp="20201110 08:37:37.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5504101, 'start-iter': 1, 'wakeups': [5514148, 5524145, 5534145, 55441...</msg>
<status status="PASS" starttime="20201110 08:37:35.244" endtime="20201110 08:37:37.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5504101, 'start-iter': 1, 'wakeups': [5514148, 5524145, 5534145, 55441...</msg>
<status status="PASS" starttime="20201110 08:37:37.387" endtime="20201110 08:37:37.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.390" endtime="20201110 08:37:37.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.242" endtime="20201110 08:37:37.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.240" endtime="20201110 08:37:37.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.396" level="INFO">${RESULT} = {'timer-count': 1, 'start-iter': 1, 'start-time': 5504101, 'timer-interval': 10000, 'wakeups': [5514148, 5524145, 5534145, 5544145, 5554145, 5564145, 5574145, 5584145, 5594145, 5604145, 5614145, 56241...</msg>
<status status="PASS" starttime="20201110 08:37:37.394" endtime="20201110 08:37:37.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.401" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:37.400" endtime="20201110 08:37:37.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.403" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:37.402" endtime="20201110 08:37:37.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.397" endtime="20201110 08:37:37.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.408" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:37.407" endtime="20201110 08:37:37.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.410" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:37.409" endtime="20201110 08:37:37.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.404" endtime="20201110 08:37:37.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.415" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:37.414" endtime="20201110 08:37:37.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.417" level="INFO">VALUE: 5504101</msg>
<status status="PASS" starttime="20201110 08:37:37.416" endtime="20201110 08:37:37.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.411" endtime="20201110 08:37:37.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.422" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:37.421" endtime="20201110 08:37:37.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.424" level="INFO">VALUE: [5514148, 5524145, 5534145, 5544145, 5554145, 5564145, 5574145, 5584145, 5594145, 5604145, 5614145, 5624145, 5634145, 5644145, 5654145, 5664145, 5674145, 5684145, 5694145, 5704145, 5714145, 5724145, 5734145, 5744145, 5754145, 5764145, 5774145, 5784145, 5794145, 5804145, 5814145, 5824145, 5834145, 5844145, 5854145, 5864145, 5874145, 5884145, 5894145, 5904145, 5914145, 5924145, 5934145, 5944145, 5954145, 5964145, 5974145, 5984145, 5994145, 6004145, 6014145, 6024145, 6034145, 6044145, 6054145, 6064145, 6074145, 6084145, 6094145, 6104145, 6114145, 6124145, 6134145, 6144145, 6154145, 6164145, 6174145, 6184145, 6194145, 6204145, 6214145, 6224145, 6234145, 6244145, 6254145, 6264145, 6274145, 6284145, 6294145, 6304145, 6314145, 6324145, 6334145, 6344145, 6354145, 6364145, 6374145, 6384145, 6394145, 6404145, 6414145, 6424145, 6434145, 6444145, 6454145, 6464145, 6474145, 6484145, 6494145, 6504145]</msg>
<status status="PASS" starttime="20201110 08:37:37.423" endtime="20201110 08:37:37.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.418" endtime="20201110 08:37:37.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.431" endtime="20201110 08:37:37.724"></status>
</kw>
<msg timestamp="20201110 08:37:37.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.430" endtime="20201110 08:37:37.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030313069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.728" endtime="20201110 08:37:37.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.736" endtime="20201110 08:37:37.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.427" endtime="20201110 08:37:37.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.425" endtime="20201110 08:37:37.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.763" level="INFO">${RESULT} = {'source_diff': [0, 0.010009916, 0.009960638999999997, 0.009962889000000003, 0.009963291999999999, 0.009963194000000002, 0.009963, 0.009962847999999996, 0.009963097000000004, 0.0099635, 0.009963429999...</msg>
<status status="PASS" starttime="20201110 08:37:37.739" endtime="20201110 08:37:37.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.767" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:37:37.766" endtime="20201110 08:37:37.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.769" level="INFO">VALUE: 0.020303153</msg>
<status status="PASS" starttime="20201110 08:37:37.768" endtime="20201110 08:37:37.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.764" endtime="20201110 08:37:37.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.775" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:37.774" endtime="20201110 08:37:37.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.777" level="INFO">VALUE: [0.030313069, 0.040273708, 0.050236597, 0.060199889, 0.070163083, 0.080126083, 0.090088931, 0.100052028, 0.110015528, 0.119978958, 0.129942167, 0.139904917, 0.149867708, 0.159830556, 0.169793847, 0.179756472, 0.189718944, 0.199681431, 0.209643681, 0.219606361, 0.229569667, 0.239532639, 0.249495153, 0.259457778, 0.269420708, 0.279383694, 0.289346931, 0.299309847, 0.309272861, 0.319236333, 0.329199778, 0.339163819, 0.349127903, 0.359091389, 0.369054236, 0.3790175, 0.388980514, 0.398943361, 0.408906556, 0.418870264, 0.428833708, 0.438798097, 0.448762542, 0.458726292, 0.468689972, 0.478653722, 0.488616903, 0.498580653, 0.508544611, 0.5185085, 0.528472278, 0.538436208, 0.548399875, 0.558364111, 0.568328292, 0.578292903, 0.588257014, 0.598220806, 0.608184931, 0.618148917, 0.628112764, 0.638076333, 0.64804, 0.658004278, 0.667968389, 0.677932611, 0.687897625, 0.697862486, 0.707826472, 0.717790292, 0.727754361, 0.737718375, 0.747681736, 0.757645292, 0.767608903, 0.777572625, 0.787536361, 0.797500111, 0.807464222, 0.817428569, 0.827392389, 0.837356222, 0.847320097, 0.857283903, 0.867247333, 0.877210847, 0.887174347, 0.897137667, 0.907100875, 0.917064458, 0.927027792, 0.936991125, 0.946954056, 0.956917125, 0.966880431, 0.976844, 0.986807528, 0.996770514, 1.006733667, 1.016697] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:37.776" endtime="20201110 08:37:37.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.771" endtime="20201110 08:37:37.778"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.780" endtime="20201110 08:37:37.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.783" endtime="20201110 08:37:37.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.782" endtime="20201110 08:37:37.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.778" endtime="20201110 08:37:37.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.238" endtime="20201110 08:37:37.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.124" endtime="20201110 08:37:37.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.123" endtime="20201110 08:37:37.805"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:37.807" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.815" endtime="20201110 08:37:39.943"></status>
</kw>
<msg timestamp="20201110 08:37:39.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8082882, 'start-iter': 1, 'wakeups': [8092964, 8102958, 8112957, 81229...</msg>
<status status="PASS" starttime="20201110 08:37:37.814" endtime="20201110 08:37:39.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.946" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8082882, 'start-iter': 1, 'wakeups': [8092964, 8102958, 8112957, 81229...</msg>
<status status="PASS" starttime="20201110 08:37:39.944" endtime="20201110 08:37:39.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.952" endtime="20201110 08:37:39.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.811" endtime="20201110 08:37:39.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.809" endtime="20201110 08:37:39.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.957" level="INFO">${RESULT} = {'timer-count': 2, 'start-iter': 1, 'start-time': 8082882, 'timer-interval': 10000, 'wakeups': [8092964, 8102958, 8112957, 8122957, 8132957, 8142957, 8152957, 8162957, 8172957, 8182957, 8192957, 82029...</msg>
<status status="PASS" starttime="20201110 08:37:39.955" endtime="20201110 08:37:39.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.962" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:39.960" endtime="20201110 08:37:39.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:39.964" endtime="20201110 08:37:39.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.958" endtime="20201110 08:37:39.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.970" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:39.969" endtime="20201110 08:37:39.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.972" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:39.971" endtime="20201110 08:37:39.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.966" endtime="20201110 08:37:39.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.977" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:39.976" endtime="20201110 08:37:39.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.979" level="INFO">VALUE: 8082882</msg>
<status status="PASS" starttime="20201110 08:37:39.978" endtime="20201110 08:37:39.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.973" endtime="20201110 08:37:39.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.984" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:39.983" endtime="20201110 08:37:39.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.986" level="INFO">VALUE: [8092964, 8102958, 8112957, 8122957, 8132957, 8142957, 8152957, 8162957, 8172957, 8182957, 8192957, 8202957, 8212957, 8222957, 8232957, 8242957, 8252957, 8262957, 8272957, 8282957, 8292957, 8302957, 8312957, 8322957, 8332957, 8342957, 8352957, 8362957, 8372957, 8382957, 8392957, 8402957, 8412957, 8422957, 8432957, 8442957, 8452957, 8462957, 8472957, 8482957, 8492957, 8502957, 8512957, 8522957, 8532957, 8542957, 8552957, 8562957, 8572957, 8582957, 8592957, 8602957, 8612957, 8622957, 8632957, 8642957, 8652957, 8662957, 8672957, 8682957, 8692957, 8702957, 8712957, 8722957, 8732957, 8742957, 8752957, 8762957, 8772957, 8782957, 8792957, 8802957, 8812957, 8822957, 8832957, 8842957, 8852957, 8862957, 8872957, 8882957, 8892957, 8902957, 8912957, 8922957, 8932957, 8942957, 8952957, 8962957, 8972957, 8982957, 8992957, 9002957, 9012957, 9022957, 9032957, 9042957, 9052957, 9062957, 9072957, 9082957]</msg>
<status status="PASS" starttime="20201110 08:37:39.985" endtime="20201110 08:37:39.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.980" endtime="20201110 08:37:39.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.002" endtime="20201110 08:37:40.294"></status>
</kw>
<msg timestamp="20201110 08:37:40.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032856097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.000" endtime="20201110 08:37:40.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022812181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032856097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.297" endtime="20201110 08:37:40.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.305" endtime="20201110 08:37:40.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.997" endtime="20201110 08:37:40.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.988" endtime="20201110 08:37:40.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.333" level="INFO">${RESULT} = {'source_diff': [0, 0.010043916, 0.009958056, 0.009963318999999998, 0.009963541999999999, 0.009963846999999998, 0.009963361000000004, 0.009963653000000003, 0.009964, 0.009964277999999993, 0.0099637220...</msg>
<status status="PASS" starttime="20201110 08:37:40.309" endtime="20201110 08:37:40.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.337" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:40.336" endtime="20201110 08:37:40.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.339" level="INFO">VALUE: 0.022812181</msg>
<status status="PASS" starttime="20201110 08:37:40.338" endtime="20201110 08:37:40.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.334" endtime="20201110 08:37:40.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.344" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:40.343" endtime="20201110 08:37:40.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.347" level="INFO">VALUE: [0.032856097, 0.042814153, 0.052777472, 0.062741014, 0.072704861, 0.082668222, 0.092631875, 0.102595875, 0.112560153, 0.122523875, 0.132487444, 0.142450764, 0.152414472, 0.162378042, 0.172341597, 0.182305139, 0.192269125, 0.202232569, 0.212196806, 0.222160875, 0.232124681, 0.242088542, 0.252052167, 0.262015944, 0.271979444, 0.281943208, 0.291906375, 0.301870042, 0.311833431, 0.321796875, 0.331759458, 0.341722972, 0.351686569, 0.361649861, 0.371613792, 0.381577111, 0.391540667, 0.401504306, 0.411467819, 0.421430847, 0.431394764, 0.441358569, 0.451322458, 0.461286958, 0.471251278, 0.481214722, 0.491177736, 0.501141403, 0.511105194, 0.521068708, 0.531032139, 0.540995681, 0.550959597, 0.560923444, 0.570887306, 0.580851306, 0.59081475, 0.600778194, 0.610741778, 0.620706042, 0.630670292, 0.640635097, 0.650599667, 0.660563944, 0.6705285, 0.680492722, 0.690457319, 0.700421556, 0.710385514, 0.720349736, 0.730314028, 0.740278181, 0.750242403, 0.760206708, 0.770170528, 0.780134653, 0.790098944, 0.800063111, 0.810027431, 0.819991722, 0.829956153, 0.839920722, 0.849885194, 0.859849597, 0.869813694, 0.879777625, 0.889742097, 0.899706403, 0.909670611, 0.919634931, 0.929598639, 0.939562792, 0.949526778, 0.959491, 0.969455208, 0.979419431, 0.989383458, 0.999347611, 1.009311639, 1.019276194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:40.346" endtime="20201110 08:37:40.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.341" endtime="20201110 08:37:40.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.350" endtime="20201110 08:37:40.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.353" endtime="20201110 08:37:40.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.352" endtime="20201110 08:37:40.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.348" endtime="20201110 08:37:40.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.808" endtime="20201110 08:37:40.374"></status>
</kw>
<msg timestamp="20201110 08:37:40.374" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.382" endtime="20201110 08:37:42.488"></status>
</kw>
<msg timestamp="20201110 08:37:42.489" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10659221, 'start-iter': 1, 'wakeups': [10669303, 10679296, 10689296, 1...</msg>
<status status="PASS" starttime="20201110 08:37:40.381" endtime="20201110 08:37:42.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10659221, 'start-iter': 1, 'wakeups': [10669303, 10679296, 10689296, 1...</msg>
<status status="PASS" starttime="20201110 08:37:42.491" endtime="20201110 08:37:42.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.497" endtime="20201110 08:37:42.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.378" endtime="20201110 08:37:42.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.376" endtime="20201110 08:37:42.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.508" level="INFO">${RESULT} = {'timer-count': 2, 'start-iter': 1, 'start-time': 10659221, 'timer-interval': 10000, 'wakeups': [10669303, 10679296, 10689296, 10699296, 10709296, 10719296, 10729296, 10739296, 10749296, 10759296, 107...</msg>
<status status="PASS" starttime="20201110 08:37:42.504" endtime="20201110 08:37:42.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.517" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:42.514" endtime="20201110 08:37:42.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.521" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:42.519" endtime="20201110 08:37:42.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.510" endtime="20201110 08:37:42.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.532" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:42.530" endtime="20201110 08:37:42.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.536" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:42.534" endtime="20201110 08:37:42.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.524" endtime="20201110 08:37:42.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.548" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:42.544" endtime="20201110 08:37:42.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.552" level="INFO">VALUE: 10659221</msg>
<status status="PASS" starttime="20201110 08:37:42.550" endtime="20201110 08:37:42.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.539" endtime="20201110 08:37:42.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.562" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:42.560" endtime="20201110 08:37:42.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.567" level="INFO">VALUE: [10669303, 10679296, 10689296, 10699296, 10709296, 10719296, 10729296, 10739296, 10749296, 10759296, 10769296, 10779296, 10789296, 10799296, 10809296, 10819296, 10829296, 10839296, 10849296, 10859296, 10869296, 10879296, 10889296, 10899296, 10909296, 10919296, 10929296, 10939296, 10949296, 10959296, 10969296, 10979296, 10989296, 10999296, 11009296, 11019296, 11029296, 11039296, 11049296, 11059296, 11069296, 11079296, 11089296, 11099296, 11109296, 11119296, 11129296, 11139296, 11149296, 11159296, 11169296, 11179296, 11189296, 11199296, 11209296, 11219296, 11229296, 11239296, 11249296, 11259296, 11269296, 11279296, 11289296, 11299296, 11309296, 11319296, 11329296, 11339296, 11349296, 11359296, 11369296, 11379296, 11389296, 11399296, 11409296, 11419296, 11429296, 11439296, 11449296, 11459296, 11469296, 11479296, 11489296, 11499296, 11509296, 11519296, 11529296, 11539296, 11549296, 11559296, 11569296, 11579296, 11589296, 11599296, 11609296, 11619296, 11629296, 11639296, 11649296, 11659296]</msg>
<status status="PASS" starttime="20201110 08:37:42.565" endtime="20201110 08:37:42.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.555" endtime="20201110 08:37:42.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.582" endtime="20201110 08:37:42.880"></status>
</kw>
<msg timestamp="20201110 08:37:42.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029947556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.579" endtime="20201110 08:37:42.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019902819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029947556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.884" endtime="20201110 08:37:42.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.891" endtime="20201110 08:37:42.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.574" endtime="20201110 08:37:42.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.570" endtime="20201110 08:37:42.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.917" level="INFO">${RESULT} = {'source_diff': [0, 0.010044737000000001, 0.009957222000000002, 0.009963888999999997, 0.009963611000000004, 0.009963110999999997, 0.009963429999999995, 0.009963862000000004, 0.009963361000000004, 0.00...</msg>
<status status="PASS" starttime="20201110 08:37:42.894" endtime="20201110 08:37:42.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.922" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:42.921" endtime="20201110 08:37:42.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.924" level="INFO">VALUE: 0.019902819</msg>
<status status="PASS" starttime="20201110 08:37:42.923" endtime="20201110 08:37:42.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.918" endtime="20201110 08:37:42.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.930" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:42.929" endtime="20201110 08:37:42.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.933" level="INFO">VALUE: [0.029947556, 0.039904778, 0.049868667, 0.059832278, 0.069795389, 0.079758819, 0.089722681, 0.099686042, 0.109648986, 0.119611917, 0.129574264, 0.139536528, 0.149499708, 0.159462819, 0.169426111, 0.179389431, 0.189352444, 0.199315833, 0.209279306, 0.219242806, 0.229206097, 0.239169125, 0.24913225, 0.259095236, 0.26905825, 0.279021347, 0.288984708, 0.298947639, 0.308910139, 0.318872806, 0.328835792, 0.338798903, 0.348761819, 0.358724681, 0.368687583, 0.378650472, 0.388613333, 0.398576292, 0.408539389, 0.418502833, 0.428466444, 0.438430361, 0.448394083, 0.458357806, 0.468321417, 0.478285167, 0.488248403, 0.498211472, 0.508175264, 0.518138486, 0.528101708, 0.538065167, 0.548028806, 0.557993042, 0.567956889, 0.577920514, 0.587884181, 0.597847875, 0.607812208, 0.617776486, 0.627740722, 0.637705125, 0.647669042, 0.657632806, 0.667596278, 0.677560556, 0.687524833, 0.697488903, 0.707452653, 0.717416472, 0.727380347, 0.737344167, 0.747307639, 0.757271444, 0.767234639, 0.777197681, 0.787161181, 0.797124375, 0.807087806, 0.817051708, 0.827015083, 0.836978444, 0.846941458, 0.856904694, 0.866867444, 0.876830653, 0.886794167, 0.896757833, 0.90672075, 0.916683958, 0.926647819, 0.936611569, 0.946575264, 0.956538847, 0.966502528, 0.976467056, 0.986431833, 0.996396819, 1.006361875, 1.016326014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:42.932" endtime="20201110 08:37:42.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.926" endtime="20201110 08:37:42.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.936" endtime="20201110 08:37:42.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.939" endtime="20201110 08:37:42.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.938" endtime="20201110 08:37:42.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.934" endtime="20201110 08:37:42.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.375" endtime="20201110 08:37:42.960"></status>
</kw>
<msg timestamp="20201110 08:37:42.960" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.968" endtime="20201110 08:37:45.074"></status>
</kw>
<msg timestamp="20201110 08:37:45.075" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13254729, 'start-iter': 1, 'wakeups': [13264811, 13274804, 13284804, 1...</msg>
<status status="PASS" starttime="20201110 08:37:42.967" endtime="20201110 08:37:45.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13254729, 'start-iter': 1, 'wakeups': [13264811, 13274804, 13284804, 1...</msg>
<status status="PASS" starttime="20201110 08:37:45.077" endtime="20201110 08:37:45.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.083" endtime="20201110 08:37:45.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.964" endtime="20201110 08:37:45.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.962" endtime="20201110 08:37:45.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.095" level="INFO">${RESULT} = {'timer-count': 2, 'start-iter': 1, 'start-time': 13254729, 'timer-interval': 10000, 'wakeups': [13264811, 13274804, 13284804, 13294804, 13304804, 13314804, 13324804, 13334804, 13344804, 13354804, 133...</msg>
<status status="PASS" starttime="20201110 08:37:45.090" endtime="20201110 08:37:45.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.103" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:45.101" endtime="20201110 08:37:45.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.108" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:45.106" endtime="20201110 08:37:45.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.097" endtime="20201110 08:37:45.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.119" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:45.117" endtime="20201110 08:37:45.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.123" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:45.121" endtime="20201110 08:37:45.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.111" endtime="20201110 08:37:45.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.136" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:45.135" endtime="20201110 08:37:45.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.138" level="INFO">VALUE: 13254729</msg>
<status status="PASS" starttime="20201110 08:37:45.137" endtime="20201110 08:37:45.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.132" endtime="20201110 08:37:45.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.143" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:45.142" endtime="20201110 08:37:45.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.145" level="INFO">VALUE: [13264811, 13274804, 13284804, 13294804, 13304804, 13314804, 13324804, 13334804, 13344804, 13354804, 13364804, 13374804, 13384804, 13394804, 13404804, 13414804, 13424804, 13434804, 13444804, 13454804, 13464804, 13474804, 13484804, 13494804, 13504804, 13514804, 13524804, 13534804, 13544804, 13554804, 13564804, 13574804, 13584804, 13594804, 13604804, 13614804, 13624804, 13634804, 13644804, 13654804, 13664804, 13674804, 13684804, 13694804, 13704804, 13714804, 13724804, 13734804, 13744804, 13754804, 13764804, 13774804, 13784804, 13794804, 13804804, 13814804, 13824804, 13834804, 13844804, 13854804, 13864804, 13874804, 13884804, 13894804, 13904804, 13914804, 13924804, 13934804, 13944804, 13954804, 13964804, 13974804, 13984804, 13994804, 14004804, 14014804, 14024804, 14034804, 14044804, 14054804, 14064804, 14074804, 14084804, 14094804, 14104804, 14114804, 14124804, 14134804, 14144804, 14154804, 14164804, 14174804, 14184804, 14194804, 14204804, 14214804, 14224804, 14234804, 14244804, 14254804]</msg>
<status status="PASS" starttime="20201110 08:37:45.144" endtime="20201110 08:37:45.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.139" endtime="20201110 08:37:45.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.153" endtime="20201110 08:37:45.444"></status>
</kw>
<msg timestamp="20201110 08:37:45.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01982025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029866083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:45.152" endtime="20201110 08:37:45.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01982025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029866083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:45.448" endtime="20201110 08:37:45.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.455" endtime="20201110 08:37:45.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.148" endtime="20201110 08:37:45.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.147" endtime="20201110 08:37:45.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.482" level="INFO">${RESULT} = {'source_diff': [0, 0.010045833, 0.009957847999999998, 0.009964582999999999, 0.009964750000000001, 0.009964846999999999, 0.009964417000000003, 0.009964304999999993, 0.009964625000000005, 0.009964556, ...</msg>
<status status="PASS" starttime="20201110 08:37:45.459" endtime="20201110 08:37:45.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.487" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:37:45.486" endtime="20201110 08:37:45.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.489" level="INFO">VALUE: 0.01982025</msg>
<status status="PASS" starttime="20201110 08:37:45.488" endtime="20201110 08:37:45.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.483" endtime="20201110 08:37:45.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.494" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:45.493" endtime="20201110 08:37:45.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.496" level="INFO">VALUE: [0.029866083, 0.039823931, 0.049788514, 0.059753264, 0.069718111, 0.079682528, 0.089646833, 0.099611458, 0.109576014, 0.11954025, 0.12950475, 0.139469139, 0.149433167, 0.159397125, 0.169361194, 0.179325167, 0.189288958, 0.199252208, 0.209216236, 0.219180847, 0.229145361, 0.239109639, 0.249073625, 0.259037986, 0.269001736, 0.278966028, 0.288930625, 0.298895306, 0.308860153, 0.318824764, 0.328789722, 0.338754653, 0.348719778, 0.358684667, 0.368649667, 0.378614611, 0.388579375, 0.398543986, 0.408508736, 0.418473625, 0.428438667, 0.438404097, 0.448370167, 0.458335347, 0.468300819, 0.478266097, 0.488231597, 0.498195931, 0.508160681, 0.518125972, 0.528090903, 0.538055833, 0.548020833, 0.557985903, 0.567950333, 0.577914903, 0.587878972, 0.597843514, 0.607807917, 0.617772097, 0.627737375, 0.63770225, 0.647666931, 0.657631139, 0.667595472, 0.677559889, 0.687524208, 0.697488208, 0.707452083, 0.717416361, 0.727380319, 0.737343667, 0.747307472, 0.757271722, 0.767235861, 0.777200083, 0.787163639, 0.797127736, 0.807091819, 0.817056333, 0.827020514, 0.836984486, 0.846948708, 0.856912236, 0.866875958, 0.876839764, 0.886803694, 0.896767431, 0.906731514, 0.916695306, 0.926658847, 0.936622708, 0.946586694, 0.956550806, 0.966514847, 0.976478778, 0.986442319, 0.996405861, 1.006370042, 1.016334194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:45.495" endtime="20201110 08:37:45.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.490" endtime="20201110 08:37:45.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.500" endtime="20201110 08:37:45.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.503" endtime="20201110 08:37:45.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.502" endtime="20201110 08:37:45.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.498" endtime="20201110 08:37:45.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.961" endtime="20201110 08:37:45.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.806" endtime="20201110 08:37:45.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.805" endtime="20201110 08:37:45.524"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:45.527" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.536" endtime="20201110 08:37:47.642"></status>
</kw>
<msg timestamp="20201110 08:37:47.643" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15831862, 'start-iter': 1, 'wakeups': [15841981, 15851974, 15861974, 1...</msg>
<status status="PASS" starttime="20201110 08:37:45.534" endtime="20201110 08:37:47.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.649" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15831862, 'start-iter': 1, 'wakeups': [15841981, 15851974, 15861974, 1...</msg>
<status status="PASS" starttime="20201110 08:37:47.645" endtime="20201110 08:37:47.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.651" endtime="20201110 08:37:47.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.531" endtime="20201110 08:37:47.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.529" endtime="20201110 08:37:47.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.662" level="INFO">${RESULT} = {'timer-count': 3, 'start-iter': 1, 'start-time': 15831862, 'timer-interval': 10000, 'wakeups': [15841981, 15851974, 15861974, 15871974, 15881974, 15891974, 15901974, 15911974, 15921974, 15931974, 159...</msg>
<status status="PASS" starttime="20201110 08:37:47.658" endtime="20201110 08:37:47.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.670" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:47.668" endtime="20201110 08:37:47.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.675" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:47.673" endtime="20201110 08:37:47.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.664" endtime="20201110 08:37:47.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.685" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:47.683" endtime="20201110 08:37:47.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.689" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:47.687" endtime="20201110 08:37:47.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.678" endtime="20201110 08:37:47.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.695" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:47.694" endtime="20201110 08:37:47.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.697" level="INFO">VALUE: 15831862</msg>
<status status="PASS" starttime="20201110 08:37:47.696" endtime="20201110 08:37:47.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.691" endtime="20201110 08:37:47.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.702" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:47.701" endtime="20201110 08:37:47.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.704" level="INFO">VALUE: [15841981, 15851974, 15861974, 15871974, 15881974, 15891974, 15901974, 15911974, 15921974, 15931974, 15941974, 15951974, 15961974, 15971974, 15981974, 15991974, 16001974, 16011974, 16021974, 16031974, 16041974, 16051974, 16061974, 16071974, 16081974, 16091974, 16101974, 16111974, 16121974, 16131974, 16141974, 16151974, 16161974, 16171974, 16181974, 16191974, 16201974, 16211974, 16221974, 16231974, 16241974, 16251974, 16261974, 16271974, 16281974, 16291974, 16301974, 16311974, 16321974, 16331974, 16341974, 16351974, 16361974, 16371974, 16381974, 16391974, 16401974, 16411974, 16421974, 16431974, 16441974, 16451974, 16461974, 16471974, 16481974, 16491974, 16501974, 16511974, 16521974, 16531974, 16541974, 16551974, 16561974, 16571974, 16581974, 16591974, 16601974, 16611974, 16621974, 16631974, 16641974, 16651974, 16661974, 16671974, 16681974, 16691974, 16701974, 16711974, 16721974, 16731974, 16741974, 16751974, 16761974, 16771974, 16781974, 16791974, 16801974, 16811974, 16821974, 16831974]</msg>
<status status="PASS" starttime="20201110 08:37:47.703" endtime="20201110 08:37:47.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.698" endtime="20201110 08:37:47.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.712" endtime="20201110 08:37:48.002"></status>
</kw>
<msg timestamp="20201110 08:37:48.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033781583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:47.710" endtime="20201110 08:37:48.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023699, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033781583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:48.006" endtime="20201110 08:37:48.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.014" endtime="20201110 08:37:48.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.708" endtime="20201110 08:37:48.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.706" endtime="20201110 08:37:48.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.041" level="INFO">${RESULT} = {'source_diff': [0, 0.010082582999999996, 0.009958250000000002, 0.009963764, 0.009963971999999995, 0.009964264, 0.009964153000000003, 0.009964138999999997, 0.00996413900000001, 0.009963736, 0.00996383...</msg>
<status status="PASS" starttime="20201110 08:37:48.017" endtime="20201110 08:37:48.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.045" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:48.044" endtime="20201110 08:37:48.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.047" level="INFO">VALUE: 0.023699</msg>
<status status="PASS" starttime="20201110 08:37:48.046" endtime="20201110 08:37:48.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.042" endtime="20201110 08:37:48.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.052" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:48.051" endtime="20201110 08:37:48.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.054" level="INFO">VALUE: [0.033781583, 0.043739833, 0.053703597, 0.063667569, 0.073631833, 0.083595986, 0.093560125, 0.103524264, 0.113488, 0.123451833, 0.133415625, 0.143379056, 0.153343069, 0.163307444, 0.173271764, 0.183236403, 0.193201194, 0.203165639, 0.21313, 0.223093806, 0.233057472, 0.243021556, 0.252985542, 0.262949208, 0.272913153, 0.282876986, 0.292841028, 0.302805361, 0.312769486, 0.322733708, 0.332698014, 0.342663069, 0.352627653, 0.362592611, 0.372556944, 0.382521778, 0.392486819, 0.402451708, 0.412416556, 0.422381069, 0.432345042, 0.442308597, 0.452272444, 0.462236278, 0.472200375, 0.482164639, 0.492128431, 0.502091903, 0.512055958, 0.52202, 0.531983653, 0.541947528, 0.551912347, 0.561877458, 0.571841486, 0.581805653, 0.591769292, 0.601732667, 0.611695736, 0.621659514, 0.631623069, 0.641587194, 0.651550569, 0.661514111, 0.671477569, 0.681440861, 0.691404653, 0.701367792, 0.711331458, 0.721295292, 0.731259708, 0.741224472, 0.75118925, 0.761153833, 0.771118139, 0.78108275, 0.791047069, 0.801011306, 0.810974972, 0.820938681, 0.8309025, 0.840866819, 0.850831236, 0.860795597, 0.870760375, 0.880724722, 0.890688958, 0.900653542, 0.910617903, 0.920581958, 0.930546278, 0.940509917, 0.950473736, 0.960437944, 0.970401708, 0.980366153, 0.990330417, 1.000294875, 1.010259333, 1.020223431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:48.053" endtime="20201110 08:37:48.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.049" endtime="20201110 08:37:48.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.058" endtime="20201110 08:37:48.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.061" endtime="20201110 08:37:48.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.059" endtime="20201110 08:37:48.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.056" endtime="20201110 08:37:48.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.527" endtime="20201110 08:37:48.082"></status>
</kw>
<msg timestamp="20201110 08:37:48.082" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.090" endtime="20201110 08:37:50.196"></status>
</kw>
<msg timestamp="20201110 08:37:50.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18395991, 'start-iter': 1, 'wakeups': [18406109, 18416102, 18426103, 1...</msg>
<status status="PASS" starttime="20201110 08:37:48.089" endtime="20201110 08:37:50.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18395991, 'start-iter': 1, 'wakeups': [18406109, 18416102, 18426103, 1...</msg>
<status status="PASS" starttime="20201110 08:37:50.200" endtime="20201110 08:37:50.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.206" endtime="20201110 08:37:50.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.086" endtime="20201110 08:37:50.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.084" endtime="20201110 08:37:50.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.217" level="INFO">${RESULT} = {'timer-count': 3, 'start-iter': 1, 'start-time': 18395991, 'timer-interval': 10000, 'wakeups': [18406109, 18416102, 18426103, 18436103, 18446103, 18456103, 18466103, 18476103, 18486103, 18496103, 185...</msg>
<status status="PASS" starttime="20201110 08:37:50.212" endtime="20201110 08:37:50.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.227" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:50.223" endtime="20201110 08:37:50.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.232" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:50.230" endtime="20201110 08:37:50.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.218" endtime="20201110 08:37:50.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.243" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:50.240" endtime="20201110 08:37:50.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.247" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:50.245" endtime="20201110 08:37:50.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.235" endtime="20201110 08:37:50.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.258" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:50.256" endtime="20201110 08:37:50.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.262" level="INFO">VALUE: 18395991</msg>
<status status="PASS" starttime="20201110 08:37:50.260" endtime="20201110 08:37:50.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.251" endtime="20201110 08:37:50.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.272" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:50.270" endtime="20201110 08:37:50.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.277" level="INFO">VALUE: [18406109, 18416102, 18426103, 18436103, 18446103, 18456103, 18466103, 18476103, 18486103, 18496103, 18506103, 18516103, 18526103, 18536103, 18546103, 18556103, 18566103, 18576103, 18586103, 18596103, 18606103, 18616103, 18626103, 18636103, 18646103, 18656103, 18666103, 18676103, 18686103, 18696103, 18706103, 18716103, 18726103, 18736103, 18746103, 18756103, 18766103, 18776103, 18786103, 18796103, 18806103, 18816103, 18826103, 18836103, 18846103, 18856103, 18866103, 18876103, 18886103, 18896103, 18906103, 18916103, 18926103, 18936103, 18946103, 18956103, 18966103, 18976103, 18986103, 18996103, 19006103, 19016103, 19026103, 19036103, 19046103, 19056103, 19066103, 19076103, 19086103, 19096103, 19106103, 19116103, 19126103, 19136103, 19146103, 19156103, 19166103, 19176103, 19186103, 19196103, 19206103, 19216103, 19226103, 19236103, 19246103, 19256103, 19266103, 19276103, 19286103, 19296103, 19306103, 19316103, 19326103, 19336103, 19346103, 19356103, 19366103, 19376103, 19386103, 19396103]</msg>
<status status="PASS" starttime="20201110 08:37:50.274" endtime="20201110 08:37:50.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.265" endtime="20201110 08:37:50.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.297" endtime="20201110 08:37:50.588"></status>
</kw>
<msg timestamp="20201110 08:37:50.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:50.294" endtime="20201110 08:37:50.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020336, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030417181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:50.592" endtime="20201110 08:37:50.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.599" endtime="20201110 08:37:50.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.288" endtime="20201110 08:37:50.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.280" endtime="20201110 08:37:50.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.626" level="INFO">${RESULT} = {'source_diff': [0, 0.010081181000000002, 0.009956679999999996, 0.009965222000000003, 0.009964110999999998, 0.009963612000000004, 0.009963776999999993, 0.009964028, 0.009963597000000005, 0.00996355599...</msg>
<status status="PASS" starttime="20201110 08:37:50.603" endtime="20201110 08:37:50.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.631" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:50.630" endtime="20201110 08:37:50.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.633" level="INFO">VALUE: 0.020336</msg>
<status status="PASS" starttime="20201110 08:37:50.632" endtime="20201110 08:37:50.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.627" endtime="20201110 08:37:50.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.638" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:50.637" endtime="20201110 08:37:50.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.640" level="INFO">VALUE: [0.030417181, 0.040373861, 0.050339083, 0.060303194, 0.070266806, 0.080230583, 0.090194611, 0.100158208, 0.110121764, 0.120085528, 0.13004975, 0.140014194, 0.149977361, 0.159940875, 0.169904194, 0.179867139, 0.189830333, 0.199793333, 0.209756875, 0.219719569, 0.229682125, 0.239644653, 0.249607, 0.259569083, 0.269531514, 0.279494097, 0.289456681, 0.299419153, 0.309382069, 0.319344542, 0.329307417, 0.339270333, 0.349232861, 0.359195208, 0.369157431, 0.379119639, 0.389082083, 0.399045458, 0.409007806, 0.418970069, 0.428932653, 0.438895181, 0.448857722, 0.458820625, 0.468783486, 0.478746458, 0.488709681, 0.498672958, 0.508635972, 0.518599042, 0.528561917, 0.538525194, 0.548488389, 0.558451375, 0.568414417, 0.578377125, 0.588339917, 0.598302806, 0.608265847, 0.618228931, 0.628191764, 0.638155069, 0.648118208, 0.658081417, 0.668044514, 0.678007417, 0.687969708, 0.697932, 0.707894583, 0.717857708, 0.727820653, 0.737783708, 0.747746236, 0.757708792, 0.767671069, 0.777633028, 0.787595431, 0.797557556, 0.807520097, 0.817482361, 0.827444569, 0.837406611, 0.847368917, 0.857331694, 0.867294222, 0.877256653, 0.887219361, 0.897182181, 0.907145194, 0.917107986, 0.927071264, 0.937034139, 0.946997306, 0.95696, 0.966922653, 0.976885611, 0.986848681, 0.996811653, 1.006774778, 1.016737764] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:50.639" endtime="20201110 08:37:50.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.634" endtime="20201110 08:37:50.641"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.643" endtime="20201110 08:37:50.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.647" endtime="20201110 08:37:50.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.645" endtime="20201110 08:37:50.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.642" endtime="20201110 08:37:50.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.083" endtime="20201110 08:37:50.668"></status>
</kw>
<msg timestamp="20201110 08:37:50.668" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.676" endtime="20201110 08:37:52.781"></status>
</kw>
<msg timestamp="20201110 08:37:52.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20991180, 'start-iter': 1, 'wakeups': [21001299, 21011292, 21021292, 2...</msg>
<status status="PASS" starttime="20201110 08:37:50.674" endtime="20201110 08:37:52.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20991180, 'start-iter': 1, 'wakeups': [21001299, 21011292, 21021292, 2...</msg>
<status status="PASS" starttime="20201110 08:37:52.786" endtime="20201110 08:37:52.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.791" endtime="20201110 08:37:52.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.672" endtime="20201110 08:37:52.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.670" endtime="20201110 08:37:52.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.803" level="INFO">${RESULT} = {'timer-count': 3, 'start-iter': 1, 'start-time': 20991180, 'timer-interval': 10000, 'wakeups': [21001299, 21011292, 21021292, 21031292, 21041292, 21051292, 21061292, 21071292, 21081292, 21091292, 211...</msg>
<status status="PASS" starttime="20201110 08:37:52.799" endtime="20201110 08:37:52.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.811" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:52.809" endtime="20201110 08:37:52.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.815" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:52.813" endtime="20201110 08:37:52.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.804" endtime="20201110 08:37:52.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.825" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:52.823" endtime="20201110 08:37:52.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.829" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:52.828" endtime="20201110 08:37:52.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.818" endtime="20201110 08:37:52.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.842" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:52.840" endtime="20201110 08:37:52.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.846" level="INFO">VALUE: 20991180</msg>
<status status="PASS" starttime="20201110 08:37:52.844" endtime="20201110 08:37:52.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.832" endtime="20201110 08:37:52.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.853" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:52.852" endtime="20201110 08:37:52.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.856" level="INFO">VALUE: [21001299, 21011292, 21021292, 21031292, 21041292, 21051292, 21061292, 21071292, 21081292, 21091292, 21101292, 21111292, 21121292, 21131292, 21141292, 21151292, 21161292, 21171292, 21181292, 21191292, 21201292, 21211292, 21221292, 21231292, 21241292, 21251292, 21261292, 21271292, 21281292, 21291292, 21301292, 21311292, 21321292, 21331292, 21341292, 21351292, 21361292, 21371292, 21381292, 21391292, 21401292, 21411292, 21421292, 21431292, 21441292, 21451292, 21461292, 21471292, 21481292, 21491292, 21501292, 21511292, 21521292, 21531292, 21541292, 21551292, 21561292, 21571292, 21581292, 21591292, 21601292, 21611292, 21621292, 21631292, 21641292, 21651292, 21661292, 21671292, 21681292, 21691292, 21701292, 21711292, 21721292, 21731292, 21741292, 21751292, 21761292, 21771292, 21781292, 21791292, 21801292, 21811292, 21821292, 21831292, 21841292, 21851292, 21861292, 21871292, 21881292, 21891292, 21901292, 21911292, 21921292, 21931292, 21941292, 21951292, 21961292, 21971292, 21981292, 21991292]</msg>
<status status="PASS" starttime="20201110 08:37:52.854" endtime="20201110 08:37:52.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.849" endtime="20201110 08:37:52.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.863" endtime="20201110 08:37:53.154"></status>
</kw>
<msg timestamp="20201110 08:37:53.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029814903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.861" endtime="20201110 08:37:53.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019733125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029814903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.158" endtime="20201110 08:37:53.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.166" endtime="20201110 08:37:53.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.859" endtime="20201110 08:37:53.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.857" endtime="20201110 08:37:53.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.192" level="INFO">${RESULT} = {'source_diff': [0, 0.010081778, 0.009957389, 0.009963846999999998, 0.009963694000000002, 0.009963848000000004, 0.00996386099999999, 0.009963750000000007, 0.009963776999999993, 0.009963625000000004, 0...</msg>
<status status="PASS" starttime="20201110 08:37:53.169" endtime="20201110 08:37:53.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.196" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:37:53.195" endtime="20201110 08:37:53.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.198" level="INFO">VALUE: 0.019733125</msg>
<status status="PASS" starttime="20201110 08:37:53.197" endtime="20201110 08:37:53.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.193" endtime="20201110 08:37:53.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.205" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:53.203" endtime="20201110 08:37:53.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.207" level="INFO">VALUE: [0.029814903, 0.039772292, 0.049736139, 0.059699833, 0.069663681, 0.079627542, 0.089591292, 0.099555069, 0.109518694, 0.119482167, 0.129445694, 0.139409014, 0.149372875, 0.159336778, 0.169300847, 0.179264431, 0.189227917, 0.199191708, 0.209155681, 0.219119625, 0.229083333, 0.239047083, 0.249009778, 0.258972875, 0.268936278, 0.278899444, 0.288862972, 0.298826556, 0.308789958, 0.318753139, 0.328715347, 0.338677667, 0.348639736, 0.358602028, 0.368565319, 0.378528653, 0.388492236, 0.398455597, 0.408418653, 0.418381319, 0.428344153, 0.438306917, 0.448269875, 0.458233153, 0.46819575, 0.478158472, 0.488121194, 0.498083889, 0.508046375, 0.518009569, 0.527973528, 0.537937681, 0.547900625, 0.557863986, 0.567827319, 0.577790319, 0.587753653, 0.597716958, 0.607680194, 0.617643681, 0.627606625, 0.637570028, 0.647532931, 0.657495875, 0.667458569, 0.677421097, 0.687383931, 0.697346681, 0.707309319, 0.717272722, 0.727235639, 0.737198778, 0.747161764, 0.757124556, 0.767087431, 0.777050444, 0.787013681, 0.796976847, 0.806939556, 0.816902958, 0.826866111, 0.836829111, 0.846792014, 0.856755014, 0.866718153, 0.876681583, 0.886645, 0.896607875, 0.906570319, 0.916532556, 0.926495319, 0.936458167, 0.946420833, 0.956383736, 0.966346444, 0.976309236, 0.986271611, 0.996233944, 1.006196792, 1.016159667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:53.206" endtime="20201110 08:37:53.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.200" endtime="20201110 08:37:53.208"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.210" endtime="20201110 08:37:53.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.213" endtime="20201110 08:37:53.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.212" endtime="20201110 08:37:53.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.208" endtime="20201110 08:37:53.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.668" endtime="20201110 08:37:53.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.525" endtime="20201110 08:37:53.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.524" endtime="20201110 08:37:53.234"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:37:53.237" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.245" endtime="20201110 08:37:55.351"></status>
</kw>
<msg timestamp="20201110 08:37:55.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23569930, 'start-iter': 1, 'wakeups': [23580087, 23590081, 23600081, 2...</msg>
<status status="PASS" starttime="20201110 08:37:53.243" endtime="20201110 08:37:55.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23569930, 'start-iter': 1, 'wakeups': [23580087, 23590081, 23600081, 2...</msg>
<status status="PASS" starttime="20201110 08:37:55.354" endtime="20201110 08:37:55.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.360" endtime="20201110 08:37:55.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.241" endtime="20201110 08:37:55.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.239" endtime="20201110 08:37:55.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.373" level="INFO">${RESULT} = {'timer-count': 4, 'start-iter': 1, 'start-time': 23569930, 'timer-interval': 10000, 'wakeups': [23580087, 23590081, 23600081, 23610082, 23620082, 23630082, 23640082, 23650082, 23660082, 23670082, 236...</msg>
<status status="PASS" starttime="20201110 08:37:55.368" endtime="20201110 08:37:55.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.382" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:55.380" endtime="20201110 08:37:55.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.386" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:55.384" endtime="20201110 08:37:55.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.374" endtime="20201110 08:37:55.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.397" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:55.395" endtime="20201110 08:37:55.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.401" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:55.399" endtime="20201110 08:37:55.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.390" endtime="20201110 08:37:55.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.412" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:55.409" endtime="20201110 08:37:55.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.416" level="INFO">VALUE: 23569930</msg>
<status status="PASS" starttime="20201110 08:37:55.414" endtime="20201110 08:37:55.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.404" endtime="20201110 08:37:55.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.426" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:55.424" endtime="20201110 08:37:55.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.430" level="INFO">VALUE: [23580087, 23590081, 23600081, 23610082, 23620082, 23630082, 23640082, 23650082, 23660082, 23670082, 23680082, 23690082, 23700082, 23710082, 23720082, 23730082, 23740082, 23750082, 23760082, 23770082, 23780082, 23790082, 23800082, 23810082, 23820082, 23830082, 23840082, 23850082, 23860082, 23870082, 23880082, 23890082, 23900082, 23910082, 23920082, 23930082, 23940082, 23950082, 23960082, 23970082, 23980082, 23990082, 24000082, 24010082, 24020082, 24030082, 24040082, 24050082, 24060082, 24070082, 24080082, 24090082, 24100082, 24110082, 24120082, 24130082, 24140082, 24150082, 24160082, 24170082, 24180082, 24190082, 24200082, 24210082, 24220082, 24230082, 24240082, 24250082, 24260082, 24270082, 24280082, 24290082, 24300082, 24310082, 24320082, 24330082, 24340082, 24350082, 24360082, 24370082, 24380082, 24390082, 24400082, 24410082, 24420082, 24430082, 24440082, 24450082, 24460082, 24470082, 24480082, 24490082, 24500082, 24510082, 24520082, 24530082, 24540082, 24550082, 24560082, 24570082]</msg>
<status status="PASS" starttime="20201110 08:37:55.428" endtime="20201110 08:37:55.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.419" endtime="20201110 08:37:55.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.448" endtime="20201110 08:37:55.741"></status>
</kw>
<msg timestamp="20201110 08:37:55.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032587972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.444" endtime="20201110 08:37:55.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032587972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.744" endtime="20201110 08:37:55.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.752" endtime="20201110 08:37:55.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.439" endtime="20201110 08:37:55.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.433" endtime="20201110 08:37:55.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.779" level="INFO">${RESULT} = {'source_diff': [0, 0.010118388999999998, 0.009956931000000002, 0.009961708, 0.009963181000000002, 0.009962526999999992, 0.009962763999999999, 0.009963320000000012, 0.009962652999999988, 0.00996293000...</msg>
<status status="PASS" starttime="20201110 08:37:55.755" endtime="20201110 08:37:55.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.783" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:55.782" endtime="20201110 08:37:55.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.786" level="INFO">VALUE: 0.022469583</msg>
<status status="PASS" starttime="20201110 08:37:55.785" endtime="20201110 08:37:55.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.780" endtime="20201110 08:37:55.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.791" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:55.790" endtime="20201110 08:37:55.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.793" level="INFO">VALUE: [0.032587972, 0.042544903, 0.052506611, 0.062469792, 0.072432319, 0.082395083, 0.092358403, 0.102321056, 0.112283986, 0.122247667, 0.132210958, 0.142173903, 0.152137194, 0.162100333, 0.172064764, 0.182028694, 0.191992458, 0.201956389, 0.211919917, 0.221883375, 0.231846375, 0.241809528, 0.251772681, 0.261736153, 0.271699806, 0.281663375, 0.291626778, 0.301591014, 0.311554764, 0.321518278, 0.331481917, 0.341446042, 0.351409667, 0.361373375, 0.371336875, 0.381300806, 0.391264417, 0.401227972, 0.411191389, 0.421154542, 0.431117833, 0.441080667, 0.451043417, 0.461006264, 0.470969208, 0.480931681, 0.490893486, 0.500855958, 0.510818333, 0.520780264, 0.530741944, 0.540703431, 0.550665625, 0.560627875, 0.570590181, 0.580552444, 0.590514597, 0.600476542, 0.610438861, 0.620401347, 0.630363931, 0.640326903, 0.650289861, 0.660252944, 0.670216292, 0.680180153, 0.690143944, 0.700107847, 0.710071431, 0.720034764, 0.729997889, 0.739961167, 0.749924306, 0.759887625, 0.769850222, 0.779813208, 0.789775861, 0.799738375, 0.809701, 0.819663819, 0.829626986, 0.839590639, 0.849553917, 0.859516236, 0.869478708, 0.879441264, 0.88940425, 0.899366819, 0.909329278, 0.919291819, 0.929254931, 0.939218097, 0.949180806, 0.959144014, 0.969106861, 0.979070542, 0.989034139, 0.998997889, 1.008961458, 1.018924319] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:55.792" endtime="20201110 08:37:55.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.787" endtime="20201110 08:37:55.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.796" endtime="20201110 08:37:55.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.799" endtime="20201110 08:37:55.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.798" endtime="20201110 08:37:55.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.794" endtime="20201110 08:37:55.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.238" endtime="20201110 08:37:55.820"></status>
</kw>
<msg timestamp="20201110 08:37:55.820" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.829" endtime="20201110 08:37:57.935"></status>
</kw>
<msg timestamp="20201110 08:37:57.937" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26164148, 'start-iter': 1, 'wakeups': [26174305, 26184299, 26194299, 2...</msg>
<status status="PASS" starttime="20201110 08:37:55.828" endtime="20201110 08:37:57.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.942" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26164148, 'start-iter': 1, 'wakeups': [26174305, 26184299, 26194299, 2...</msg>
<status status="PASS" starttime="20201110 08:37:57.939" endtime="20201110 08:37:57.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.945" endtime="20201110 08:37:57.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.825" endtime="20201110 08:37:57.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.822" endtime="20201110 08:37:57.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.956" level="INFO">${RESULT} = {'timer-count': 4, 'start-iter': 1, 'start-time': 26164148, 'timer-interval': 10000, 'wakeups': [26174305, 26184299, 26194299, 26204300, 26214300, 26224300, 26234300, 26244300, 26254300, 26264300, 262...</msg>
<status status="PASS" starttime="20201110 08:37:57.952" endtime="20201110 08:37:57.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.964" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:37:57.962" endtime="20201110 08:37:57.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.969" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:37:57.967" endtime="20201110 08:37:57.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.957" endtime="20201110 08:37:57.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.979" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:37:57.977" endtime="20201110 08:37:57.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.983" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:37:57.981" endtime="20201110 08:37:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.972" endtime="20201110 08:37:57.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.993" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:57.991" endtime="20201110 08:37:57.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.998" level="INFO">VALUE: 26164148</msg>
<status status="PASS" starttime="20201110 08:37:57.996" endtime="20201110 08:37:57.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.986" endtime="20201110 08:37:57.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.008" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:58.006" endtime="20201110 08:37:58.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.013" level="INFO">VALUE: [26174305, 26184299, 26194299, 26204300, 26214300, 26224300, 26234300, 26244300, 26254300, 26264300, 26274300, 26284300, 26294300, 26304300, 26314300, 26324300, 26334300, 26344300, 26354300, 26364300, 26374300, 26384300, 26394300, 26404300, 26414300, 26424300, 26434300, 26444300, 26454300, 26464300, 26474300, 26484300, 26494300, 26504300, 26514300, 26524300, 26534300, 26544300, 26554300, 26564300, 26574300, 26584300, 26594300, 26604300, 26614300, 26624300, 26634300, 26644300, 26654300, 26664300, 26674300, 26684300, 26694300, 26704300, 26714300, 26724300, 26734300, 26744300, 26754300, 26764300, 26774300, 26784300, 26794300, 26804300, 26814300, 26824300, 26834300, 26844300, 26854300, 26864300, 26874300, 26884300, 26894300, 26904300, 26914300, 26924300, 26934300, 26944300, 26954300, 26964300, 26974300, 26984300, 26994300, 27004300, 27014300, 27024300, 27034300, 27044300, 27054300, 27064300, 27074300, 27084300, 27094300, 27104300, 27114300, 27124300, 27134300, 27144300, 27154300, 27164300]</msg>
<status status="PASS" starttime="20201110 08:37:58.010" endtime="20201110 08:37:58.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.001" endtime="20201110 08:37:58.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.028" endtime="20201110 08:37:58.323"></status>
</kw>
<msg timestamp="20201110 08:37:58.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030867014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.025" endtime="20201110 08:37:58.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030867014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.327" endtime="20201110 08:37:58.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.334" endtime="20201110 08:37:58.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.019" endtime="20201110 08:37:58.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.016" endtime="20201110 08:37:58.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.361" level="INFO">${RESULT} = {'source_diff': [0, 0.01011975, 0.009958263999999998, 0.009963722000000001, 0.009965166999999997, 0.009963486000000008, 0.009964068999999992, 0.009964346999999998, 0.009964055999999999, 0.009964, 0.00...</msg>
<status status="PASS" starttime="20201110 08:37:58.337" endtime="20201110 08:37:58.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.365" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:37:58.364" endtime="20201110 08:37:58.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.367" level="INFO">VALUE: 0.020747264</msg>
<status status="PASS" starttime="20201110 08:37:58.366" endtime="20201110 08:37:58.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.362" endtime="20201110 08:37:58.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.373" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:37:58.372" endtime="20201110 08:37:58.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.375" level="INFO">VALUE: [0.030867014, 0.040825278, 0.050789, 0.060754167, 0.070717653, 0.080681722, 0.090646069, 0.100610125, 0.110574125, 0.120538306, 0.130502306, 0.140466431, 0.150430167, 0.160394639, 0.1703595, 0.180324222, 0.190289069, 0.20025425, 0.210218472, 0.220183278, 0.230148111, 0.240112611, 0.250076597, 0.260040819, 0.270005042, 0.279969736, 0.289934083, 0.299898556, 0.309863097, 0.319827667, 0.329791833, 0.339756097, 0.349720347, 0.359684736, 0.369649444, 0.379614472, 0.389579347, 0.399544264, 0.409508819, 0.4194735, 0.429437806, 0.439401653, 0.449365472, 0.459329194, 0.469293431, 0.479257278, 0.489220958, 0.499184708, 0.509148583, 0.5191125, 0.529075861, 0.539039208, 0.549002597, 0.558966569, 0.568930931, 0.578895208, 0.5888595, 0.598823861, 0.608787792, 0.618752042, 0.628715333, 0.638678764, 0.648642444, 0.658606458, 0.668571153, 0.678535847, 0.688500833, 0.698465389, 0.708429972, 0.718394167, 0.728358361, 0.738322486, 0.748285931, 0.758249583, 0.768213167, 0.778177264, 0.788140972, 0.798105125, 0.808069069, 0.818032708, 0.827996056, 0.837959319, 0.847922694, 0.857886167, 0.867849667, 0.877813458, 0.887777319, 0.897741097, 0.907705, 0.917668931, 0.927633, 0.937596889, 0.947560347, 0.957524375, 0.967488208, 0.977452292, 0.987416153, 0.99737975, 1.007343444, 1.017307444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:37:58.374" endtime="20201110 08:37:58.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.369" endtime="20201110 08:37:58.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.378" endtime="20201110 08:37:58.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.382" endtime="20201110 08:37:58.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.380" endtime="20201110 08:37:58.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.377" endtime="20201110 08:37:58.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.821" endtime="20201110 08:37:58.402"></status>
</kw>
<msg timestamp="20201110 08:37:58.403" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.411" endtime="20201110 08:38:00.517"></status>
</kw>
<msg timestamp="20201110 08:38:00.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28755272, 'start-iter': 1, 'wakeups': [28765430, 28775423, 28785424, 2...</msg>
<status status="PASS" starttime="20201110 08:37:58.409" endtime="20201110 08:38:00.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.524" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28755272, 'start-iter': 1, 'wakeups': [28765430, 28775423, 28785424, 2...</msg>
<status status="PASS" starttime="20201110 08:38:00.520" endtime="20201110 08:38:00.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.527" endtime="20201110 08:38:00.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.407" endtime="20201110 08:38:00.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.405" endtime="20201110 08:38:00.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.538" level="INFO">${RESULT} = {'timer-count': 4, 'start-iter': 1, 'start-time': 28755272, 'timer-interval': 10000, 'wakeups': [28765430, 28775423, 28785424, 28795424, 28805424, 28815424, 28825424, 28835424, 28845424, 28855424, 288...</msg>
<status status="PASS" starttime="20201110 08:38:00.534" endtime="20201110 08:38:00.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.549" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:00.545" endtime="20201110 08:38:00.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.553" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:00.551" endtime="20201110 08:38:00.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.540" endtime="20201110 08:38:00.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.564" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:00.561" endtime="20201110 08:38:00.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.568" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:00.566" endtime="20201110 08:38:00.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.556" endtime="20201110 08:38:00.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.586" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:00.576" endtime="20201110 08:38:00.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.590" level="INFO">VALUE: 28755272</msg>
<status status="PASS" starttime="20201110 08:38:00.588" endtime="20201110 08:38:00.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.571" endtime="20201110 08:38:00.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.600" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:00.598" endtime="20201110 08:38:00.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.605" level="INFO">VALUE: [28765430, 28775423, 28785424, 28795424, 28805424, 28815424, 28825424, 28835424, 28845424, 28855424, 28865424, 28875424, 28885424, 28895424, 28905424, 28915424, 28925424, 28935424, 28945424, 28955424, 28965424, 28975424, 28985424, 28995424, 29005424, 29015424, 29025424, 29035424, 29045424, 29055424, 29065424, 29075424, 29085424, 29095424, 29105424, 29115424, 29125424, 29135424, 29145424, 29155424, 29165424, 29175424, 29185424, 29195424, 29205424, 29215424, 29225424, 29235424, 29245424, 29255424, 29265424, 29275424, 29285424, 29295424, 29305424, 29315424, 29325424, 29335424, 29345424, 29355424, 29365424, 29375424, 29385424, 29395424, 29405424, 29415424, 29425424, 29435424, 29445424, 29455424, 29465424, 29475424, 29485424, 29495424, 29505424, 29515424, 29525424, 29535424, 29545424, 29555424, 29565424, 29575424, 29585424, 29595424, 29605424, 29615424, 29625424, 29635424, 29645424, 29655424, 29665424, 29675424, 29685424, 29695424, 29705424, 29715424, 29725424, 29735424, 29745424, 29755424]</msg>
<status status="PASS" starttime="20201110 08:38:00.602" endtime="20201110 08:38:00.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.593" endtime="20201110 08:38:00.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.618" endtime="20201110 08:38:00.908"></status>
</kw>
<msg timestamp="20201110 08:38:00.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030167611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.616" endtime="20201110 08:38:00.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020045625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030167611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.911" endtime="20201110 08:38:00.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.919" endtime="20201110 08:38:00.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.611" endtime="20201110 08:38:00.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.608" endtime="20201110 08:38:00.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.946" level="INFO">${RESULT} = {'source_diff': [0, 0.010121986, 0.009957153, 0.009964916999999997, 0.009963930000000003, 0.009963971999999995, 0.009964098000000005, 0.009964361000000005, 0.009963708000000002, 0.009963264, 0.0099636...</msg>
<status status="PASS" starttime="20201110 08:38:00.922" endtime="20201110 08:38:00.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.950" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:38:00.949" endtime="20201110 08:38:00.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.952" level="INFO">VALUE: 0.020045625</msg>
<status status="PASS" starttime="20201110 08:38:00.951" endtime="20201110 08:38:00.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.947" endtime="20201110 08:38:00.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.958" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:00.957" endtime="20201110 08:38:00.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.960" level="INFO">VALUE: [0.030167611, 0.040124764, 0.050089681, 0.060053611, 0.070017583, 0.079981681, 0.089946042, 0.09990975, 0.109873014, 0.119836639, 0.129801, 0.139764556, 0.149728472, 0.15969225, 0.169655833, 0.179620028, 0.189584306, 0.199548625, 0.209512431, 0.219476556, 0.229440528, 0.239404083, 0.249368375, 0.259332556, 0.269296583, 0.279260806, 0.289224833, 0.299188972, 0.30915275, 0.319116819, 0.329081306, 0.339045778, 0.349010583, 0.358974847, 0.368939375, 0.378903417, 0.388867792, 0.398831444, 0.408795403, 0.418759472, 0.428723486, 0.438687042, 0.448650764, 0.458614111, 0.468578139, 0.478542264, 0.488505958, 0.498469639, 0.508432722, 0.518395667, 0.528359222, 0.538322403, 0.548286042, 0.558249625, 0.568213083, 0.578176639, 0.588140625, 0.598103792, 0.608067139, 0.618030833, 0.627995028, 0.637959069, 0.647922375, 0.657886014, 0.667850056, 0.677814139, 0.687778014, 0.697742333, 0.707705972, 0.717669236, 0.727633083, 0.737596861, 0.747560361, 0.757524139, 0.767487861, 0.777451528, 0.787414792, 0.797378931, 0.807342597, 0.817306722, 0.827270139, 0.837233611, 0.847197889, 0.857161681, 0.867125361, 0.877089264, 0.887053042, 0.897017097, 0.906981361, 0.916945153, 0.926909139, 0.936872778, 0.946836458, 0.956800306, 0.966764625, 0.976729056, 0.986693139, 0.996657042, 1.006620736, 1.016584889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:00.959" endtime="20201110 08:38:00.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.954" endtime="20201110 08:38:00.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.963" endtime="20201110 08:38:00.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.967" endtime="20201110 08:38:00.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.965" endtime="20201110 08:38:00.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.962" endtime="20201110 08:38:00.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.403" endtime="20201110 08:38:00.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.236" endtime="20201110 08:38:00.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.235" endtime="20201110 08:38:00.988"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:00.990" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.998" endtime="20201110 08:38:03.105"></status>
</kw>
<msg timestamp="20201110 08:38:03.107" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31352489, 'start-iter': 1, 'wakeups': [31362687, 31372682, 31382682, 3...</msg>
<status status="PASS" starttime="20201110 08:38:00.997" endtime="20201110 08:38:03.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31352489, 'start-iter': 1, 'wakeups': [31362687, 31372682, 31382682, 3...</msg>
<status status="PASS" starttime="20201110 08:38:03.109" endtime="20201110 08:38:03.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.114" endtime="20201110 08:38:03.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.994" endtime="20201110 08:38:03.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.992" endtime="20201110 08:38:03.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.126" level="INFO">${RESULT} = {'timer-count': 5, 'start-iter': 1, 'start-time': 31352489, 'timer-interval': 10000, 'wakeups': [31362687, 31372682, 31382682, 31392683, 31402683, 31412683, 31422683, 31432683, 31442683, 31452683, 314...</msg>
<status status="PASS" starttime="20201110 08:38:03.121" endtime="20201110 08:38:03.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.134" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:03.132" endtime="20201110 08:38:03.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.138" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:03.136" endtime="20201110 08:38:03.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.128" endtime="20201110 08:38:03.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.158" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:03.150" endtime="20201110 08:38:03.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.173" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:03.165" endtime="20201110 08:38:03.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.141" endtime="20201110 08:38:03.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.197" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:03.193" endtime="20201110 08:38:03.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.206" level="INFO">VALUE: 31352489</msg>
<status status="PASS" starttime="20201110 08:38:03.201" endtime="20201110 08:38:03.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.181" endtime="20201110 08:38:03.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.223" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:03.219" endtime="20201110 08:38:03.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.231" level="INFO">VALUE: [31362687, 31372682, 31382682, 31392683, 31402683, 31412683, 31422683, 31432683, 31442683, 31452683, 31462683, 31472683, 31482683, 31492683, 31502683, 31512683, 31522683, 31532683, 31542683, 31552683, 31562683, 31572683, 31582683, 31592683, 31602683, 31612683, 31622683, 31632683, 31642683, 31652683, 31662683, 31672683, 31682683, 31692683, 31702683, 31712683, 31722683, 31732683, 31742683, 31752683, 31762683, 31772683, 31782683, 31792683, 31802683, 31812683, 31822683, 31832683, 31842683, 31852683, 31862683, 31872683, 31882683, 31892683, 31902683, 31912683, 31922683, 31932683, 31942683, 31952683, 31962683, 31972683, 31982683, 31992683, 32002683, 32012683, 32022683, 32032683, 32042683, 32052683, 32062683, 32072683, 32082683, 32092683, 32102683, 32112683, 32122683, 32132683, 32142683, 32152683, 32162683, 32172683, 32182683, 32192683, 32202683, 32212683, 32222683, 32232683, 32242683, 32252683, 32262683, 32272683, 32282683, 32292683, 32302683, 32312683, 32322683, 32332683, 32342683, 32352683]</msg>
<status status="PASS" starttime="20201110 08:38:03.226" endtime="20201110 08:38:03.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.211" endtime="20201110 08:38:03.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.248" endtime="20201110 08:38:03.539"></status>
</kw>
<msg timestamp="20201110 08:38:03.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032589917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.246" endtime="20201110 08:38:03.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032589917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.543" endtime="20201110 08:38:03.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.551" endtime="20201110 08:38:03.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.242" endtime="20201110 08:38:03.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.237" endtime="20201110 08:38:03.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.577" level="INFO">${RESULT} = {'source_diff': [0, 0.010161820000000002, 0.009959263999999995, 0.009964596999999999, 0.009964889000000005, 0.009964, 0.009963764, 0.009963804999999992, 0.009963556000000012, 0.00996359699999999, 0.00...</msg>
<status status="PASS" starttime="20201110 08:38:03.554" endtime="20201110 08:38:03.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.581" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:03.580" endtime="20201110 08:38:03.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.584" level="INFO">VALUE: 0.022428097</msg>
<status status="PASS" starttime="20201110 08:38:03.583" endtime="20201110 08:38:03.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.577" endtime="20201110 08:38:03.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.589" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:03.588" endtime="20201110 08:38:03.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.591" level="INFO">VALUE: [0.032589917, 0.042549181, 0.052513778, 0.062478667, 0.072442667, 0.082406431, 0.092370236, 0.102333792, 0.112297389, 0.122260944, 0.132224528, 0.142188417, 0.152152389, 0.162116583, 0.172081208, 0.182045861, 0.192009806, 0.201974097, 0.211938139, 0.221902639, 0.231866694, 0.241830653, 0.251795167, 0.261758972, 0.271723097, 0.281687681, 0.291652111, 0.301616139, 0.311580306, 0.321544347, 0.33150875, 0.341473125, 0.351437139, 0.361400889, 0.371365194, 0.381329264, 0.391292889, 0.401256667, 0.411221444, 0.421186083, 0.431150417, 0.441114306, 0.451078681, 0.461042944, 0.471007764, 0.480972528, 0.490937292, 0.500901361, 0.510865514, 0.520830139, 0.530795194, 0.540760139, 0.550724764, 0.560689278, 0.570652611, 0.580616708, 0.590580333, 0.600543958, 0.610507486, 0.620471722, 0.630435375, 0.640399333, 0.650363875, 0.660328153, 0.670292708, 0.680257625, 0.690222667, 0.700187292, 0.710151653, 0.720115681, 0.730079681, 0.740043569, 0.750008028, 0.759972375, 0.769936333, 0.779900458, 0.789864486, 0.799828444, 0.809792264, 0.819756486, 0.829720097, 0.839684264, 0.849648069, 0.859611764, 0.869575222, 0.879538764, 0.8895025, 0.899466125, 0.909429569, 0.919392708, 0.929356181, 0.939319708, 0.949283208, 0.959246903, 0.969209833, 0.97917325, 0.989136972, 0.999101347, 1.009065931, 1.019030181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:03.590" endtime="20201110 08:38:03.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.585" endtime="20201110 08:38:03.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.595" endtime="20201110 08:38:03.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.599" endtime="20201110 08:38:03.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.597" endtime="20201110 08:38:03.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.593" endtime="20201110 08:38:03.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.991" endtime="20201110 08:38:03.620"></status>
</kw>
<msg timestamp="20201110 08:38:03.620" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.628" endtime="20201110 08:38:05.734"></status>
</kw>
<msg timestamp="20201110 08:38:05.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33992189, 'start-iter': 1, 'wakeups': [34002388, 34012382, 34022382, 3...</msg>
<status status="PASS" starttime="20201110 08:38:03.627" endtime="20201110 08:38:05.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33992189, 'start-iter': 1, 'wakeups': [34002388, 34012382, 34022382, 3...</msg>
<status status="PASS" starttime="20201110 08:38:05.738" endtime="20201110 08:38:05.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.744" endtime="20201110 08:38:05.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.624" endtime="20201110 08:38:05.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.622" endtime="20201110 08:38:05.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.754" level="INFO">${RESULT} = {'timer-count': 5, 'start-iter': 1, 'start-time': 33992189, 'timer-interval': 10000, 'wakeups': [34002388, 34012382, 34022382, 34032383, 34042383, 34052383, 34062383, 34072383, 34082383, 34092383, 341...</msg>
<status status="PASS" starttime="20201110 08:38:05.751" endtime="20201110 08:38:05.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.763" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:05.761" endtime="20201110 08:38:05.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.767" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:05.765" endtime="20201110 08:38:05.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.756" endtime="20201110 08:38:05.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.777" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:05.775" endtime="20201110 08:38:05.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.781" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:05.779" endtime="20201110 08:38:05.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.770" endtime="20201110 08:38:05.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.792" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:05.789" endtime="20201110 08:38:05.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.796" level="INFO">VALUE: 33992189</msg>
<status status="PASS" starttime="20201110 08:38:05.794" endtime="20201110 08:38:05.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.784" endtime="20201110 08:38:05.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.808" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:05.804" endtime="20201110 08:38:05.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.813" level="INFO">VALUE: [34002388, 34012382, 34022382, 34032383, 34042383, 34052383, 34062383, 34072383, 34082383, 34092383, 34102383, 34112383, 34122383, 34132383, 34142383, 34152383, 34162383, 34172383, 34182383, 34192383, 34202383, 34212383, 34222383, 34232383, 34242383, 34252383, 34262383, 34272383, 34282383, 34292383, 34302383, 34312383, 34322383, 34332383, 34342383, 34352383, 34362383, 34372383, 34382383, 34392383, 34402383, 34412383, 34422383, 34432383, 34442383, 34452383, 34462383, 34472383, 34482383, 34492383, 34502383, 34512383, 34522383, 34532383, 34542383, 34552383, 34562383, 34572383, 34582383, 34592383, 34602383, 34612383, 34622383, 34632383, 34642383, 34652383, 34662383, 34672383, 34682383, 34692383, 34702383, 34712383, 34722383, 34732383, 34742383, 34752383, 34762383, 34772383, 34782383, 34792383, 34802383, 34812383, 34822383, 34832383, 34842383, 34852383, 34862383, 34872383, 34882383, 34892383, 34902383, 34912383, 34922383, 34932383, 34942383, 34952383, 34962383, 34972383, 34982383, 34992383]</msg>
<status status="PASS" starttime="20201110 08:38:05.811" endtime="20201110 08:38:05.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.799" endtime="20201110 08:38:05.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.829" endtime="20201110 08:38:06.127"></status>
</kw>
<msg timestamp="20201110 08:38:06.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030588514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.826" endtime="20201110 08:38:06.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030588514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.131" endtime="20201110 08:38:06.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.138" endtime="20201110 08:38:06.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.820" endtime="20201110 08:38:06.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.816" endtime="20201110 08:38:06.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.211" level="INFO">${RESULT} = {'source_diff': [0, 0.010161445000000002, 0.00995768, 0.009963723, 0.009964429999999996, 0.009964055999999999, 0.009963361000000004, 0.009963374999999997, 0.009963444000000002, 0.009962834000000004, 0...</msg>
<status status="PASS" starttime="20201110 08:38:06.142" endtime="20201110 08:38:06.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.215" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:06.214" endtime="20201110 08:38:06.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.217" level="INFO">VALUE: 0.020427069</msg>
<status status="PASS" starttime="20201110 08:38:06.216" endtime="20201110 08:38:06.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.212" endtime="20201110 08:38:06.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.223" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:06.222" endtime="20201110 08:38:06.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.225" level="INFO">VALUE: [0.030588514, 0.040546194, 0.050509917, 0.060474347, 0.070438403, 0.080401764, 0.090365139, 0.100328583, 0.110291417, 0.120254403, 0.130217736, 0.140180708, 0.150143903, 0.160107667, 0.170071542, 0.180035431, 0.189998708, 0.199962306, 0.209925889, 0.219889042, 0.229852958, 0.239816542, 0.249780292, 0.259744028, 0.269708278, 0.279672222, 0.289635667, 0.299599444, 0.309563569, 0.319527639, 0.329491889, 0.339456167, 0.349420347, 0.359384708, 0.369348736, 0.379312111, 0.389276472, 0.399240583, 0.409204764, 0.419168528, 0.429132431, 0.439096806, 0.449061292, 0.459025153, 0.468989014, 0.478952056, 0.488915736, 0.498880069, 0.508844458, 0.518808542, 0.528772778, 0.538736764, 0.548701097, 0.558665569, 0.568629917, 0.578593708, 0.588557819, 0.598521736, 0.608485931, 0.618449556, 0.628413222, 0.638377222, 0.648341431, 0.658305681, 0.668269292, 0.678232653, 0.688196361, 0.698159944, 0.708123292, 0.718086694, 0.728050681, 0.738014319, 0.747978361, 0.757942514, 0.767906389, 0.777869611, 0.787833319, 0.797796764, 0.807760125, 0.817724208, 0.827688014, 0.837651597, 0.847615056, 0.857578319, 0.86754225, 0.877506222, 0.887470597, 0.897435125, 0.907399083, 0.917362625, 0.927326097, 0.93728925, 0.947251931, 0.957214347, 0.967177111, 0.977139625, 0.987101153, 0.997062819, 1.007025389, 1.016988181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:06.224" endtime="20201110 08:38:06.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.219" endtime="20201110 08:38:06.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.228" endtime="20201110 08:38:06.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.231" endtime="20201110 08:38:06.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.230" endtime="20201110 08:38:06.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.226" endtime="20201110 08:38:06.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.621" endtime="20201110 08:38:06.252"></status>
</kw>
<msg timestamp="20201110 08:38:06.252" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.260" endtime="20201110 08:38:08.366"></status>
</kw>
<msg timestamp="20201110 08:38:08.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36634100, 'start-iter': 1, 'wakeups': [36644299, 36654293, 36664293, 3...</msg>
<status status="PASS" starttime="20201110 08:38:06.259" endtime="20201110 08:38:08.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.373" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36634100, 'start-iter': 1, 'wakeups': [36644299, 36654293, 36664293, 3...</msg>
<status status="PASS" starttime="20201110 08:38:08.370" endtime="20201110 08:38:08.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.376" endtime="20201110 08:38:08.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.256" endtime="20201110 08:38:08.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.254" endtime="20201110 08:38:08.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.387" level="INFO">${RESULT} = {'timer-count': 5, 'start-iter': 1, 'start-time': 36634100, 'timer-interval': 10000, 'wakeups': [36644299, 36654293, 36664293, 36674294, 36684294, 36694294, 36704294, 36714294, 36724294, 36734294, 367...</msg>
<status status="PASS" starttime="20201110 08:38:08.383" endtime="20201110 08:38:08.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.395" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:08.393" endtime="20201110 08:38:08.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.401" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:08.399" endtime="20201110 08:38:08.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.389" endtime="20201110 08:38:08.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.411" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:08.409" endtime="20201110 08:38:08.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.415" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:08.413" endtime="20201110 08:38:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.404" endtime="20201110 08:38:08.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.425" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:08.423" endtime="20201110 08:38:08.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.429" level="INFO">VALUE: 36634100</msg>
<status status="PASS" starttime="20201110 08:38:08.428" endtime="20201110 08:38:08.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.418" endtime="20201110 08:38:08.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.439" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:08.437" endtime="20201110 08:38:08.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.444" level="INFO">VALUE: [36644299, 36654293, 36664293, 36674294, 36684294, 36694294, 36704294, 36714294, 36724294, 36734294, 36744294, 36754294, 36764294, 36774294, 36784294, 36794294, 36804294, 36814294, 36824294, 36834294, 36844294, 36854294, 36864294, 36874294, 36884294, 36894294, 36904294, 36914294, 36924294, 36934294, 36944294, 36954294, 36964294, 36974294, 36984294, 36994294, 37004294, 37014294, 37024294, 37034294, 37044294, 37054294, 37064294, 37074294, 37084294, 37094294, 37104294, 37114294, 37124294, 37134294, 37144294, 37154294, 37164294, 37174294, 37184294, 37194294, 37204294, 37214294, 37224294, 37234294, 37244294, 37254294, 37264294, 37274294, 37284294, 37294294, 37304294, 37314294, 37324294, 37334294, 37344294, 37354294, 37364294, 37374294, 37384294, 37394294, 37404294, 37414294, 37424294, 37434294, 37444294, 37454294, 37464294, 37474294, 37484294, 37494294, 37504294, 37514294, 37524294, 37534294, 37544294, 37554294, 37564294, 37574294, 37584294, 37594294, 37604294, 37614294, 37624294, 37634294]</msg>
<status status="PASS" starttime="20201110 08:38:08.442" endtime="20201110 08:38:08.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.432" endtime="20201110 08:38:08.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.459" endtime="20201110 08:38:08.754"></status>
</kw>
<msg timestamp="20201110 08:38:08.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030076611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.456" endtime="20201110 08:38:08.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019915778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030076611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.758" endtime="20201110 08:38:08.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.766" endtime="20201110 08:38:08.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.451" endtime="20201110 08:38:08.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.447" endtime="20201110 08:38:08.769"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.793" level="INFO">${RESULT} = {'source_diff': [0, 0.010160833000000001, 0.009956056000000001, 0.009962054999999997, 0.009963320000000005, 0.009962165999999995, 0.009962763999999999, 0.009962403000000009, 0.009962417000000001, 0.00...</msg>
<status status="PASS" starttime="20201110 08:38:08.770" endtime="20201110 08:38:08.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.797" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:38:08.796" endtime="20201110 08:38:08.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.799" level="INFO">VALUE: 0.019915778</msg>
<status status="PASS" starttime="20201110 08:38:08.798" endtime="20201110 08:38:08.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.794" endtime="20201110 08:38:08.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.805" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:08.804" endtime="20201110 08:38:08.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.807" level="INFO">VALUE: [0.030076611, 0.040032667, 0.049994722, 0.059958042, 0.069920208, 0.079882972, 0.089845375, 0.099807792, 0.109770194, 0.119732681, 0.129695319, 0.13965775, 0.149620528, 0.159582903, 0.169544931, 0.179507208, 0.189469625, 0.199431931, 0.209394431, 0.219357389, 0.229320583, 0.239283625, 0.24924675, 0.259210431, 0.269173486, 0.279136514, 0.289099514, 0.299061778, 0.309023847, 0.318986306, 0.328949278, 0.338912125, 0.348875736, 0.358839444, 0.368803222, 0.378766472, 0.388729472, 0.398693111, 0.408656986, 0.418620958, 0.428584444, 0.438547278, 0.448510931, 0.458474333, 0.468437458, 0.478400792, 0.488363903, 0.498327708, 0.508291542, 0.518254944, 0.528217819, 0.538181069, 0.548143931, 0.558106694, 0.568069861, 0.578033319, 0.587996417, 0.597959403, 0.607922472, 0.617885792, 0.627848778, 0.637811722, 0.647774278, 0.657736972, 0.667699306, 0.677662181, 0.687625042, 0.697588708, 0.707551931, 0.717514861, 0.727477611, 0.737439542, 0.747401597, 0.757363431, 0.767325778, 0.777288528, 0.787250986, 0.797213681, 0.807176639, 0.817139306, 0.827102597, 0.837066194, 0.847029556, 0.856992708, 0.866956097, 0.876919597, 0.886883042, 0.896846417, 0.906809861, 0.916772944, 0.926736028, 0.936698778, 0.946661875, 0.956624972, 0.966587917, 0.976550625, 0.986513431, 0.996476028, 1.006438958, 1.016402681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:08.806" endtime="20201110 08:38:08.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.801" endtime="20201110 08:38:08.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.810" endtime="20201110 08:38:08.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.813" endtime="20201110 08:38:08.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.812" endtime="20201110 08:38:08.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.808" endtime="20201110 08:38:08.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.253" endtime="20201110 08:38:08.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.989" endtime="20201110 08:38:08.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.988" endtime="20201110 08:38:08.835"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:08.837" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.845" endtime="20201110 08:38:10.952"></status>
</kw>
<msg timestamp="20201110 08:38:10.953" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39228942, 'start-iter': 1, 'wakeups': [39239187, 39249182, 39259181, 3...</msg>
<status status="PASS" starttime="20201110 08:38:08.844" endtime="20201110 08:38:10.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.959" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39228942, 'start-iter': 1, 'wakeups': [39239187, 39249182, 39259181, 3...</msg>
<status status="PASS" starttime="20201110 08:38:10.956" endtime="20201110 08:38:10.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.962" endtime="20201110 08:38:10.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.841" endtime="20201110 08:38:10.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.839" endtime="20201110 08:38:10.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.978" level="INFO">${RESULT} = {'timer-count': 6, 'start-iter': 1, 'start-time': 39228942, 'timer-interval': 10000, 'wakeups': [39239187, 39249182, 39259181, 39269181, 39279181, 39289181, 39299181, 39309181, 39319181, 39329181, 393...</msg>
<status status="PASS" starttime="20201110 08:38:10.973" endtime="20201110 08:38:10.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.986" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:10.984" endtime="20201110 08:38:10.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.990" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:10.988" endtime="20201110 08:38:10.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.979" endtime="20201110 08:38:10.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.003" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:11.001" endtime="20201110 08:38:11.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.007" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:11.005" endtime="20201110 08:38:11.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.993" endtime="20201110 08:38:11.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.017" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:11.015" endtime="20201110 08:38:11.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.022" level="INFO">VALUE: 39228942</msg>
<status status="PASS" starttime="20201110 08:38:11.020" endtime="20201110 08:38:11.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.010" endtime="20201110 08:38:11.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.032" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:11.030" endtime="20201110 08:38:11.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.036" level="INFO">VALUE: [39239187, 39249182, 39259181, 39269181, 39279181, 39289181, 39299181, 39309181, 39319181, 39329181, 39339181, 39349181, 39359181, 39369181, 39379181, 39389181, 39399181, 39409181, 39419181, 39429181, 39439181, 39449181, 39459181, 39469181, 39479181, 39489181, 39499181, 39509181, 39519181, 39529181, 39539181, 39549181, 39559181, 39569181, 39579181, 39589181, 39599181, 39609181, 39619181, 39629181, 39639181, 39649181, 39659181, 39669181, 39679181, 39689181, 39699181, 39709181, 39719181, 39729181, 39739181, 39749181, 39759181, 39769181, 39779181, 39789181, 39799181, 39809181, 39819181, 39829181, 39839181, 39849181, 39859181, 39869181, 39879181, 39889181, 39899181, 39909181, 39919181, 39929181, 39939181, 39949181, 39959181, 39969181, 39979181, 39989181, 39999181, 40009181, 40019181, 40029181, 40039181, 40049181, 40059181, 40069181, 40079181, 40089181, 40099181, 40109181, 40119181, 40129181, 40139181, 40149181, 40159181, 40169181, 40179181, 40189181, 40199181, 40209181, 40219181, 40229181]</msg>
<status status="PASS" starttime="20201110 08:38:11.034" endtime="20201110 08:38:11.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.025" endtime="20201110 08:38:11.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.052" endtime="20201110 08:38:11.347"></status>
</kw>
<msg timestamp="20201110 08:38:11.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032923028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.049" endtime="20201110 08:38:11.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032923028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.351" endtime="20201110 08:38:11.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.359" endtime="20201110 08:38:11.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.043" endtime="20201110 08:38:11.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.040" endtime="20201110 08:38:11.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.386" level="INFO">${RESULT} = {'source_diff': [0, 0.010207361000000002, 0.009958069, 0.009962291999999998, 0.009963124999999996, 0.009963250000000007, 0.009963429999999995, 0.009963306000000005, 0.009962693999999994, 0.00996223699...</msg>
<status status="PASS" starttime="20201110 08:38:11.362" endtime="20201110 08:38:11.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.391" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:11.390" endtime="20201110 08:38:11.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.393" level="INFO">VALUE: 0.022715667</msg>
<status status="PASS" starttime="20201110 08:38:11.392" endtime="20201110 08:38:11.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.387" endtime="20201110 08:38:11.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.398" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:11.397" endtime="20201110 08:38:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.400" level="INFO">VALUE: [0.032923028, 0.042881097, 0.052843389, 0.062806514, 0.072769764, 0.082733194, 0.0926965, 0.102659194, 0.112621431, 0.122583583, 0.132546611, 0.142509306, 0.152472431, 0.162435167, 0.172398042, 0.182360806, 0.192323736, 0.202286569, 0.212249708, 0.222212528, 0.232175444, 0.24213775, 0.252100083, 0.262062944, 0.272026042, 0.281989333, 0.291952389, 0.301916153, 0.311879986, 0.321843097, 0.331806, 0.341768486, 0.351731083, 0.361693833, 0.371656931, 0.381620722, 0.391583931, 0.401546833, 0.411509653, 0.421472694, 0.431435958, 0.441399306, 0.451362556, 0.461325806, 0.471288778, 0.481251556, 0.491214569, 0.501177292, 0.511140069, 0.521103486, 0.531066611, 0.541030347, 0.550994042, 0.560957458, 0.570920597, 0.580883472, 0.590846417, 0.600808972, 0.610772194, 0.620734917, 0.630697306, 0.640660014, 0.650622778, 0.660585569, 0.67054875, 0.680511847, 0.690475347, 0.700438806, 0.710402431, 0.720365986, 0.730329403, 0.740294, 0.750257806, 0.760221708, 0.770185639, 0.780149722, 0.790113667, 0.800077389, 0.810041125, 0.820004583, 0.829968181, 0.839932097, 0.849895833, 0.859859861, 0.869823889, 0.879787472, 0.889750486, 0.899714, 0.9096775, 0.919641028, 0.929604083, 0.939566972, 0.949530583, 0.959494083, 0.969457806, 0.979422, 0.989385486, 0.999349097, 1.009313278, 1.019277486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:11.399" endtime="20201110 08:38:11.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.394" endtime="20201110 08:38:11.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.403" endtime="20201110 08:38:11.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.407" endtime="20201110 08:38:11.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.405" endtime="20201110 08:38:11.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.402" endtime="20201110 08:38:11.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.838" endtime="20201110 08:38:11.427"></status>
</kw>
<msg timestamp="20201110 08:38:11.428" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.436" endtime="20201110 08:38:13.542"></status>
</kw>
<msg timestamp="20201110 08:38:13.544" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41829174, 'start-iter': 1, 'wakeups': [41839415, 41849413, 41859414, 4...</msg>
<status status="PASS" starttime="20201110 08:38:11.434" endtime="20201110 08:38:13.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.550" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41829174, 'start-iter': 1, 'wakeups': [41839415, 41849413, 41859414, 4...</msg>
<status status="PASS" starttime="20201110 08:38:13.546" endtime="20201110 08:38:13.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.552" endtime="20201110 08:38:13.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.431" endtime="20201110 08:38:13.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.430" endtime="20201110 08:38:13.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.563" level="INFO">${RESULT} = {'timer-count': 6, 'start-iter': 1, 'start-time': 41829174, 'timer-interval': 10000, 'wakeups': [41839415, 41849413, 41859414, 41869413, 41879413, 41889413, 41899413, 41909413, 41919413, 41929413, 419...</msg>
<status status="PASS" starttime="20201110 08:38:13.559" endtime="20201110 08:38:13.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.571" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:13.569" endtime="20201110 08:38:13.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.576" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:13.574" endtime="20201110 08:38:13.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.565" endtime="20201110 08:38:13.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.587" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:13.584" endtime="20201110 08:38:13.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.591" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:13.589" endtime="20201110 08:38:13.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.579" endtime="20201110 08:38:13.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.598" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:13.597" endtime="20201110 08:38:13.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.601" level="INFO">VALUE: 41829174</msg>
<status status="PASS" starttime="20201110 08:38:13.600" endtime="20201110 08:38:13.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.594" endtime="20201110 08:38:13.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.606" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:13.605" endtime="20201110 08:38:13.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.608" level="INFO">VALUE: [41839415, 41849413, 41859414, 41869413, 41879413, 41889413, 41899413, 41909413, 41919413, 41929413, 41939413, 41949413, 41959413, 41969413, 41979413, 41989413, 41999413, 42009413, 42019413, 42029413, 42039413, 42049413, 42059413, 42069413, 42079413, 42089413, 42099413, 42109413, 42119413, 42129413, 42139413, 42149413, 42159413, 42169413, 42179413, 42189413, 42199413, 42209413, 42219413, 42229413, 42239413, 42249413, 42259413, 42269413, 42279413, 42289413, 42299413, 42309413, 42319413, 42329413, 42339413, 42349413, 42359413, 42369413, 42379413, 42389413, 42399413, 42409413, 42419413, 42429413, 42439413, 42449413, 42459413, 42469413, 42479413, 42489413, 42499413, 42509413, 42519413, 42529413, 42539413, 42549413, 42559413, 42569413, 42579413, 42589413, 42599413, 42609413, 42619413, 42629413, 42639413, 42649413, 42659413, 42669413, 42679413, 42689413, 42699413, 42709413, 42719413, 42729413, 42739413, 42749413, 42759413, 42769413, 42779413, 42789413, 42799413, 42809413, 42819413, 42829413]</msg>
<status status="PASS" starttime="20201110 08:38:13.607" endtime="20201110 08:38:13.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.602" endtime="20201110 08:38:13.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.615" endtime="20201110 08:38:13.908"></status>
</kw>
<msg timestamp="20201110 08:38:13.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030083625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.614" endtime="20201110 08:38:13.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019880625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030083625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.912" endtime="20201110 08:38:13.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.919" endtime="20201110 08:38:13.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.611" endtime="20201110 08:38:13.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.609" endtime="20201110 08:38:13.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.946" level="INFO">${RESULT} = {'source_diff': [0, 0.010203, 0.009961986000000003, 0.009963874999999997, 0.009961903000000001, 0.009963417000000002, 0.009963457999999994, 0.009963917000000003, 0.009963137999999996, 0.00996293100000...</msg>
<status status="PASS" starttime="20201110 08:38:13.922" endtime="20201110 08:38:13.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.950" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:13.949" endtime="20201110 08:38:13.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.952" level="INFO">VALUE: 0.019880625</msg>
<status status="PASS" starttime="20201110 08:38:13.951" endtime="20201110 08:38:13.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.946" endtime="20201110 08:38:13.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.958" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:13.957" endtime="20201110 08:38:13.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.961" level="INFO">VALUE: [0.030083625, 0.040045611, 0.050009486, 0.059971389, 0.069934806, 0.079898264, 0.089862181, 0.099825319, 0.10978825, 0.119750708, 0.1297135, 0.139675861, 0.149638861, 0.159601486, 0.169564083, 0.179526792, 0.189489042, 0.199451556, 0.209414014, 0.219376694, 0.229339319, 0.239301375, 0.249264042, 0.2592265, 0.26918925, 0.279151681, 0.289113722, 0.299075875, 0.309037986, 0.318999958, 0.328961847, 0.338923653, 0.348885681, 0.358847778, 0.368810083, 0.378772417, 0.3887345, 0.398696708, 0.408658792, 0.418620819, 0.428583042, 0.438545417, 0.448507542, 0.458469694, 0.468431833, 0.478393847, 0.488356028, 0.498318639, 0.508280819, 0.518243042, 0.528205431, 0.538167514, 0.548129181, 0.558091153, 0.568053375, 0.578015569, 0.58797775, 0.597940264, 0.607902181, 0.617863958, 0.627825931, 0.637787847, 0.647750333, 0.65771275, 0.667675389, 0.677638472, 0.687601347, 0.697564208, 0.707527042, 0.717489694, 0.727452583, 0.737414778, 0.747377111, 0.757339972, 0.767302653, 0.777265597, 0.787228264, 0.797190542, 0.807152778, 0.817114472, 0.827076444, 0.837038819, 0.847000986, 0.856962583, 0.866924903, 0.876887139, 0.886849347, 0.896812125, 0.906774681, 0.916737653, 0.926700806, 0.936663597, 0.946626319, 0.956588444, 0.966550875, 0.976513389, 0.986476139, 0.996438556, 1.006400736, 1.016362417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:13.960" endtime="20201110 08:38:13.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.954" endtime="20201110 08:38:13.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.964" endtime="20201110 08:38:13.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.967" endtime="20201110 08:38:13.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.966" endtime="20201110 08:38:13.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.962" endtime="20201110 08:38:13.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.428" endtime="20201110 08:38:13.988"></status>
</kw>
<msg timestamp="20201110 08:38:13.988" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.996" endtime="20201110 08:38:16.102"></status>
</kw>
<msg timestamp="20201110 08:38:16.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44399888, 'start-iter': 1, 'wakeups': [44410132, 44420128, 44430127, 4...</msg>
<status status="PASS" starttime="20201110 08:38:13.995" endtime="20201110 08:38:16.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44399888, 'start-iter': 1, 'wakeups': [44410132, 44420128, 44430127, 4...</msg>
<status status="PASS" starttime="20201110 08:38:16.106" endtime="20201110 08:38:16.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.112" endtime="20201110 08:38:16.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.992" endtime="20201110 08:38:16.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.990" endtime="20201110 08:38:16.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.123" level="INFO">${RESULT} = {'timer-count': 6, 'start-iter': 1, 'start-time': 44399888, 'timer-interval': 10000, 'wakeups': [44410132, 44420128, 44430127, 44440127, 44450127, 44460127, 44470127, 44480127, 44490127, 44500127, 445...</msg>
<status status="PASS" starttime="20201110 08:38:16.119" endtime="20201110 08:38:16.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.133" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:16.131" endtime="20201110 08:38:16.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.137" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:16.135" endtime="20201110 08:38:16.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.125" endtime="20201110 08:38:16.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.147" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:16.145" endtime="20201110 08:38:16.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.152" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:16.150" endtime="20201110 08:38:16.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.140" endtime="20201110 08:38:16.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.167" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:16.164" endtime="20201110 08:38:16.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.171" level="INFO">VALUE: 44399888</msg>
<status status="PASS" starttime="20201110 08:38:16.169" endtime="20201110 08:38:16.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.159" endtime="20201110 08:38:16.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.181" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:16.179" endtime="20201110 08:38:16.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.186" level="INFO">VALUE: [44410132, 44420128, 44430127, 44440127, 44450127, 44460127, 44470127, 44480127, 44490127, 44500127, 44510127, 44520127, 44530127, 44540127, 44550127, 44560127, 44570127, 44580127, 44590127, 44600127, 44610127, 44620127, 44630127, 44640127, 44650127, 44660127, 44670127, 44680127, 44690127, 44700127, 44710127, 44720127, 44730127, 44740127, 44750127, 44760127, 44770127, 44780127, 44790127, 44800127, 44810127, 44820127, 44830127, 44840127, 44850127, 44860127, 44870127, 44880127, 44890127, 44900127, 44910127, 44920127, 44930127, 44940127, 44950127, 44960127, 44970127, 44980127, 44990127, 45000127, 45010127, 45020127, 45030127, 45040127, 45050127, 45060127, 45070127, 45080127, 45090127, 45100127, 45110127, 45120127, 45130127, 45140127, 45150127, 45160127, 45170127, 45180127, 45190127, 45200127, 45210127, 45220127, 45230127, 45240127, 45250127, 45260127, 45270127, 45280127, 45290127, 45300127, 45310127, 45320127, 45330127, 45340127, 45350127, 45360127, 45370127, 45380127, 45390127, 45400127]</msg>
<status status="PASS" starttime="20201110 08:38:16.183" endtime="20201110 08:38:16.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.174" endtime="20201110 08:38:16.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.201" endtime="20201110 08:38:16.493"></status>
</kw>
<msg timestamp="20201110 08:38:16.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030181903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:16.199" endtime="20201110 08:38:16.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0199755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030181903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:16.497" endtime="20201110 08:38:16.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.504" endtime="20201110 08:38:16.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.193" endtime="20201110 08:38:16.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.189" endtime="20201110 08:38:16.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.531" level="INFO">${RESULT} = {'source_diff': [0, 0.010206403, 0.009957583000000002, 0.009961596999999996, 0.009962848000000003, 0.009963012999999993, 0.009963264, 0.009963750000000007, 0.009962638999999995, 0.00996263900000001, 0...</msg>
<status status="PASS" starttime="20201110 08:38:16.508" endtime="20201110 08:38:16.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.536" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:38:16.535" endtime="20201110 08:38:16.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.538" level="INFO">VALUE: 0.0199755</msg>
<status status="PASS" starttime="20201110 08:38:16.537" endtime="20201110 08:38:16.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.532" endtime="20201110 08:38:16.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.543" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:16.542" endtime="20201110 08:38:16.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.545" level="INFO">VALUE: [0.030181903, 0.040139486, 0.050101083, 0.060063931, 0.070026944, 0.079990208, 0.089953958, 0.099916597, 0.109879236, 0.119841986, 0.129804819, 0.139767653, 0.149730417, 0.159693264, 0.169655694, 0.179618375, 0.189581097, 0.199543958, 0.209506722, 0.219469111, 0.229431639, 0.239394931, 0.249358306, 0.259321153, 0.269284417, 0.279248056, 0.289211153, 0.299173639, 0.309136556, 0.319099847, 0.329063569, 0.339027222, 0.348990931, 0.358954694, 0.368917764, 0.378881194, 0.388844583, 0.398808153, 0.408771583, 0.418735083, 0.428698444, 0.438661611, 0.448624347, 0.458586806, 0.468549014, 0.47851175, 0.488474986, 0.498438111, 0.508401083, 0.518363472, 0.52832575, 0.538288958, 0.548251597, 0.558214181, 0.568176375, 0.578138792, 0.588101139, 0.598063764, 0.608026347, 0.617988861, 0.627951181, 0.637913903, 0.647876875, 0.657839764, 0.667802458, 0.677764958, 0.687727611, 0.697690389, 0.707653292, 0.717616028, 0.727579056, 0.737540917, 0.747503569, 0.757466875, 0.767430417, 0.777394264, 0.787357458, 0.797320833, 0.807284417, 0.817248625, 0.827212361, 0.837175847, 0.847139722, 0.857103694, 0.867068083, 0.877031681, 0.886994417, 0.896957389, 0.906920486, 0.916883819, 0.926847056, 0.936810472, 0.946774139, 0.956737583, 0.966701194, 0.976664417, 0.986627444, 0.996590097, 1.006552931, 1.016515958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:16.544" endtime="20201110 08:38:16.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.539" endtime="20201110 08:38:16.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.549" endtime="20201110 08:38:16.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.552" endtime="20201110 08:38:16.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.551" endtime="20201110 08:38:16.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.547" endtime="20201110 08:38:16.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.989" endtime="20201110 08:38:16.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.836" endtime="20201110 08:38:16.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.835" endtime="20201110 08:38:16.573"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:16.576" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.585" endtime="20201110 08:38:18.691"></status>
</kw>
<msg timestamp="20201110 08:38:18.692" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46998223, 'start-iter': 1, 'wakeups': [47008514, 47018511, 47028511, 4...</msg>
<status status="PASS" starttime="20201110 08:38:16.583" endtime="20201110 08:38:18.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.698" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46998223, 'start-iter': 1, 'wakeups': [47008514, 47018511, 47028511, 4...</msg>
<status status="PASS" starttime="20201110 08:38:18.694" endtime="20201110 08:38:18.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.701" endtime="20201110 08:38:18.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.581" endtime="20201110 08:38:18.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.578" endtime="20201110 08:38:18.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.712" level="INFO">${RESULT} = {'timer-count': 7, 'start-iter': 1, 'start-time': 46998223, 'timer-interval': 10000, 'wakeups': [47008514, 47018511, 47028511, 47038511, 47048511, 47058511, 47068511, 47078511, 47088511, 47098511, 471...</msg>
<status status="PASS" starttime="20201110 08:38:18.708" endtime="20201110 08:38:18.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.720" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:18.718" endtime="20201110 08:38:18.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.724" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:18.722" endtime="20201110 08:38:18.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.713" endtime="20201110 08:38:18.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.735" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:18.733" endtime="20201110 08:38:18.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.739" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:18.737" endtime="20201110 08:38:18.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.728" endtime="20201110 08:38:18.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.749" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:18.747" endtime="20201110 08:38:18.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.753" level="INFO">VALUE: 46998223</msg>
<status status="PASS" starttime="20201110 08:38:18.751" endtime="20201110 08:38:18.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.742" endtime="20201110 08:38:18.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.764" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:18.762" endtime="20201110 08:38:18.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.769" level="INFO">VALUE: [47008514, 47018511, 47028511, 47038511, 47048511, 47058511, 47068511, 47078511, 47088511, 47098511, 47108511, 47118511, 47128511, 47138511, 47148511, 47158511, 47168511, 47178511, 47188511, 47198511, 47208511, 47218511, 47228511, 47238511, 47248511, 47258511, 47268511, 47278511, 47288511, 47298511, 47308511, 47318511, 47328511, 47338511, 47348511, 47358511, 47368511, 47378511, 47388511, 47398511, 47408511, 47418511, 47428511, 47438511, 47448511, 47458511, 47468511, 47478511, 47488511, 47498511, 47508511, 47518511, 47528511, 47538511, 47548511, 47558511, 47568511, 47578511, 47588511, 47598511, 47608511, 47618511, 47628511, 47638511, 47648511, 47658511, 47668511, 47678511, 47688511, 47698511, 47708511, 47718511, 47728511, 47738511, 47748511, 47758511, 47768511, 47778511, 47788511, 47798511, 47808511, 47818511, 47828511, 47838511, 47848511, 47858511, 47868511, 47878511, 47888511, 47898511, 47908511, 47918511, 47928511, 47938511, 47948511, 47958511, 47968511, 47978511, 47988511, 47998511]</msg>
<status status="PASS" starttime="20201110 08:38:18.766" endtime="20201110 08:38:18.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.757" endtime="20201110 08:38:18.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.784" endtime="20201110 08:38:19.079"></status>
</kw>
<msg timestamp="20201110 08:38:19.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033818833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.781" endtime="20201110 08:38:19.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023565722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033818833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.083" endtime="20201110 08:38:19.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.091" endtime="20201110 08:38:19.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.776" endtime="20201110 08:38:19.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.772" endtime="20201110 08:38:19.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.118" level="INFO">${RESULT} = {'source_diff': [0, 0.010253110999999999, 0.009960472999999997, 0.009963277, 0.0099635, 0.009963542000000006, 0.009964055999999999, 0.009963818999999999, 0.009964249999999994, 0.009964250000000008, 0....</msg>
<status status="PASS" starttime="20201110 08:38:19.094" endtime="20201110 08:38:19.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.122" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:19.121" endtime="20201110 08:38:19.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.124" level="INFO">VALUE: 0.023565722</msg>
<status status="PASS" starttime="20201110 08:38:19.123" endtime="20201110 08:38:19.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.119" endtime="20201110 08:38:19.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.130" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:19.129" endtime="20201110 08:38:19.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.132" level="INFO">VALUE: [0.033818833, 0.043779306, 0.053742583, 0.063706083, 0.073669625, 0.083633681, 0.0935975, 0.10356175, 0.113526, 0.123490014, 0.133453778, 0.143417819, 0.153382181, 0.163346181, 0.173310264, 0.183274653, 0.193239139, 0.203202875, 0.213166208, 0.223129375, 0.233092736, 0.243056097, 0.253019222, 0.262982194, 0.272945653, 0.282909181, 0.292872847, 0.302836264, 0.312800264, 0.322764389, 0.332728722, 0.342692903, 0.352657389, 0.362621431, 0.372585611, 0.382549653, 0.392513847, 0.402478569, 0.412442903, 0.422407486, 0.432372181, 0.442336653, 0.452301056, 0.462265181, 0.472229167, 0.482192958, 0.492157028, 0.502121097, 0.512085431, 0.522049528, 0.532013444, 0.541976694, 0.551940486, 0.561904417, 0.571869292, 0.581833958, 0.591798556, 0.601763083, 0.611727792, 0.621692542, 0.631657486, 0.641622569, 0.651586778, 0.661551278, 0.671516139, 0.681480528, 0.691445583, 0.701410319, 0.711375167, 0.721340097, 0.731305444, 0.741270917, 0.751236542, 0.761202042, 0.771167292, 0.781132528, 0.791097403, 0.801062611, 0.811026972, 0.820991139, 0.830955056, 0.840919611, 0.850883903, 0.860847792, 0.870811847, 0.88077625, 0.890740556, 0.900704181, 0.910668528, 0.920633375, 0.93059825, 0.940562569, 0.950526778, 0.960490833, 0.970455139, 0.980419625, 0.990384333, 1.000349028, 1.010313431, 1.020277236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:19.131" endtime="20201110 08:38:19.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.126" endtime="20201110 08:38:19.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.135" endtime="20201110 08:38:19.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.138" endtime="20201110 08:38:19.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.137" endtime="20201110 08:38:19.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.133" endtime="20201110 08:38:19.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.577" endtime="20201110 08:38:19.159"></status>
</kw>
<msg timestamp="20201110 08:38:19.160" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.168" endtime="20201110 08:38:21.274"></status>
</kw>
<msg timestamp="20201110 08:38:21.275" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49590562, 'start-iter': 1, 'wakeups': [49600853, 49610850, 49620850, 4...</msg>
<status status="PASS" starttime="20201110 08:38:19.166" endtime="20201110 08:38:21.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.281" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49590562, 'start-iter': 1, 'wakeups': [49600853, 49610850, 49620850, 4...</msg>
<status status="PASS" starttime="20201110 08:38:21.277" endtime="20201110 08:38:21.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.283" endtime="20201110 08:38:21.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.164" endtime="20201110 08:38:21.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.162" endtime="20201110 08:38:21.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.294" level="INFO">${RESULT} = {'timer-count': 7, 'start-iter': 1, 'start-time': 49590562, 'timer-interval': 10000, 'wakeups': [49600853, 49610850, 49620850, 49630850, 49640850, 49650850, 49660850, 49670850, 49680850, 49690850, 497...</msg>
<status status="PASS" starttime="20201110 08:38:21.290" endtime="20201110 08:38:21.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.305" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:21.301" endtime="20201110 08:38:21.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:21.307" endtime="20201110 08:38:21.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.296" endtime="20201110 08:38:21.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.320" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:21.317" endtime="20201110 08:38:21.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.324" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:21.322" endtime="20201110 08:38:21.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.312" endtime="20201110 08:38:21.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.334" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:21.332" endtime="20201110 08:38:21.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.338" level="INFO">VALUE: 49590562</msg>
<status status="PASS" starttime="20201110 08:38:21.336" endtime="20201110 08:38:21.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.327" endtime="20201110 08:38:21.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.348" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:21.346" endtime="20201110 08:38:21.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.353" level="INFO">VALUE: [49600853, 49610850, 49620850, 49630850, 49640850, 49650850, 49660850, 49670850, 49680850, 49690850, 49700850, 49710850, 49720850, 49730850, 49740850, 49750850, 49760850, 49770850, 49780850, 49790850, 49800850, 49810850, 49820850, 49830850, 49840850, 49850850, 49860850, 49870850, 49880850, 49890850, 49900850, 49910850, 49920850, 49930850, 49940850, 49950850, 49960850, 49970850, 49980850, 49990850, 50000850, 50010850, 50020850, 50030850, 50040850, 50050850, 50060850, 50070850, 50080850, 50090850, 50100850, 50110850, 50120850, 50130850, 50140850, 50150850, 50160850, 50170850, 50180850, 50190850, 50200850, 50210850, 50220850, 50230850, 50240850, 50250850, 50260850, 50270850, 50280850, 50290850, 50300850, 50310850, 50320850, 50330850, 50340850, 50350850, 50360850, 50370850, 50380850, 50390850, 50400850, 50410850, 50420850, 50430850, 50440850, 50450850, 50460850, 50470850, 50480850, 50490850, 50500850, 50510850, 50520850, 50530850, 50540850, 50550850, 50560850, 50570850, 50580850, 50590850]</msg>
<status status="PASS" starttime="20201110 08:38:21.351" endtime="20201110 08:38:21.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.341" endtime="20201110 08:38:21.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.375" endtime="20201110 08:38:21.671"></status>
</kw>
<msg timestamp="20201110 08:38:21.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030476444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.372" endtime="20201110 08:38:21.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020222333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030476444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.675" endtime="20201110 08:38:21.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.682" endtime="20201110 08:38:21.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.366" endtime="20201110 08:38:21.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.356" endtime="20201110 08:38:21.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.709" level="INFO">${RESULT} = {'source_diff': [0, 0.010254111, 0.009961306000000003, 0.009964278, 0.009963722000000001, 0.009963639000000003, 0.009964096999999991, 0.009963958000000009, 0.009963777999999993, 0.009963306000000005, ...</msg>
<status status="PASS" starttime="20201110 08:38:21.685" endtime="20201110 08:38:21.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.714" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:21.713" endtime="20201110 08:38:21.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.716" level="INFO">VALUE: 0.020222333</msg>
<status status="PASS" starttime="20201110 08:38:21.715" endtime="20201110 08:38:21.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.710" endtime="20201110 08:38:21.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.721" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:21.720" endtime="20201110 08:38:21.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.723" level="INFO">VALUE: [0.030476444, 0.04043775, 0.050402028, 0.06036575, 0.070329389, 0.080293486, 0.090257444, 0.100221222, 0.110184528, 0.120147889, 0.130112278, 0.140076333, 0.150040194, 0.160003917, 0.169967458, 0.179930806, 0.189894944, 0.199858611, 0.209821917, 0.2197855, 0.229749222, 0.239712764, 0.249676667, 0.259640375, 0.269603611, 0.279566736, 0.289529944, 0.299493333, 0.309456931, 0.319420528, 0.329383931, 0.339347361, 0.349311042, 0.359274667, 0.369238236, 0.379201903, 0.389165486, 0.399128917, 0.409092444, 0.419056486, 0.429020639, 0.4389845, 0.448948097, 0.458911514, 0.468875444, 0.478839111, 0.488802194, 0.498764361, 0.508726167, 0.518689097, 0.528651972, 0.538615069, 0.548578556, 0.558541597, 0.568504722, 0.578467458, 0.588430347, 0.598393681, 0.608356333, 0.618319097, 0.628281764, 0.63824475, 0.648207917, 0.658171194, 0.66813475, 0.6780985, 0.688062472, 0.698026097, 0.707990083, 0.717953708, 0.727917208, 0.737880819, 0.747844069, 0.757807139, 0.767770014, 0.777733222, 0.787696556, 0.797659958, 0.807624139, 0.817587917, 0.827551958, 0.837515278, 0.847478333, 0.857442278, 0.867405667, 0.877369653, 0.887333583, 0.897297514, 0.907261653, 0.917225792, 0.927189764, 0.937153528, 0.947117083, 0.957081028, 0.967044319, 0.977008208, 0.986971986, 0.996935819, 1.006899736, 1.016863528] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:21.722" endtime="20201110 08:38:21.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.717" endtime="20201110 08:38:21.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.726" endtime="20201110 08:38:21.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.730" endtime="20201110 08:38:21.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.728" endtime="20201110 08:38:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.725" endtime="20201110 08:38:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.160" endtime="20201110 08:38:21.751"></status>
</kw>
<msg timestamp="20201110 08:38:21.751" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.759" endtime="20201110 08:38:23.865"></status>
</kw>
<msg timestamp="20201110 08:38:23.866" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52191543, 'start-iter': 1, 'wakeups': [52201835, 52211831, 52221831, 5...</msg>
<status status="PASS" starttime="20201110 08:38:21.757" endtime="20201110 08:38:23.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52191543, 'start-iter': 1, 'wakeups': [52201835, 52211831, 52221831, 5...</msg>
<status status="PASS" starttime="20201110 08:38:23.869" endtime="20201110 08:38:23.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.875" endtime="20201110 08:38:23.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.755" endtime="20201110 08:38:23.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.753" endtime="20201110 08:38:23.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.886" level="INFO">${RESULT} = {'timer-count': 7, 'start-iter': 1, 'start-time': 52191543, 'timer-interval': 10000, 'wakeups': [52201835, 52211831, 52221831, 52231831, 52241831, 52251831, 52261831, 52271831, 52281831, 52291831, 523...</msg>
<status status="PASS" starttime="20201110 08:38:23.882" endtime="20201110 08:38:23.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.894" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:23.892" endtime="20201110 08:38:23.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.899" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:23.897" endtime="20201110 08:38:23.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.888" endtime="20201110 08:38:23.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.909" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:23.907" endtime="20201110 08:38:23.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.913" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:23.911" endtime="20201110 08:38:23.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.902" endtime="20201110 08:38:23.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.926" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:23.924" endtime="20201110 08:38:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.930" level="INFO">VALUE: 52191543</msg>
<status status="PASS" starttime="20201110 08:38:23.928" endtime="20201110 08:38:23.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.917" endtime="20201110 08:38:23.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.940" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:23.938" endtime="20201110 08:38:23.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.945" level="INFO">VALUE: [52201835, 52211831, 52221831, 52231831, 52241831, 52251831, 52261831, 52271831, 52281831, 52291831, 52301831, 52311831, 52321831, 52331831, 52341831, 52351831, 52361831, 52371831, 52381831, 52391831, 52401831, 52411831, 52421831, 52431831, 52441831, 52451831, 52461831, 52471831, 52481831, 52491831, 52501831, 52511831, 52521831, 52531831, 52541831, 52551831, 52561831, 52571831, 52581831, 52591831, 52601831, 52611831, 52621831, 52631831, 52641831, 52651831, 52661831, 52671831, 52681831, 52691831, 52701831, 52711831, 52721831, 52731831, 52741831, 52751831, 52761831, 52771831, 52781831, 52791831, 52801831, 52811831, 52821831, 52831831, 52841831, 52851831, 52861831, 52871831, 52881831, 52891831, 52901831, 52911831, 52921831, 52931831, 52941831, 52951831, 52961831, 52971831, 52981831, 52991831, 53001831, 53011831, 53021831, 53031831, 53041831, 53051831, 53061831, 53071831, 53081831, 53091831, 53101831, 53111831, 53121831, 53131831, 53141831, 53151831, 53161831, 53171831, 53181831, 53191831]</msg>
<status status="PASS" starttime="20201110 08:38:23.943" endtime="20201110 08:38:23.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.933" endtime="20201110 08:38:23.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.960" endtime="20201110 08:38:24.258"></status>
</kw>
<msg timestamp="20201110 08:38:24.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030183319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.957" endtime="20201110 08:38:24.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019931069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030183319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.262" endtime="20201110 08:38:24.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.270" endtime="20201110 08:38:24.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.952" endtime="20201110 08:38:24.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.948" endtime="20201110 08:38:24.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.296" level="INFO">${RESULT} = {'source_diff': [0, 0.010252250000000001, 0.009959194999999997, 0.009962875000000003, 0.009963264, 0.009963541000000006, 0.009962722999999993, 0.009963374999999997, 0.009962694000000008, 0.00996274999...</msg>
<status status="PASS" starttime="20201110 08:38:24.273" endtime="20201110 08:38:24.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.301" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:38:24.300" endtime="20201110 08:38:24.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.303" level="INFO">VALUE: 0.019931069</msg>
<status status="PASS" starttime="20201110 08:38:24.302" endtime="20201110 08:38:24.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.297" endtime="20201110 08:38:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.309" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:24.307" endtime="20201110 08:38:24.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.311" level="INFO">VALUE: [0.030183319, 0.040142514, 0.050105389, 0.060068653, 0.070032194, 0.079994917, 0.089958292, 0.099920986, 0.109883736, 0.119846875, 0.129809875, 0.139772764, 0.149735597, 0.159698167, 0.169660764, 0.179624125, 0.189587264, 0.199549944, 0.209512222, 0.219475167, 0.229438, 0.239400208, 0.249361917, 0.259324056, 0.269286583, 0.279248736, 0.289210597, 0.299173, 0.309135306, 0.319098028, 0.329060792, 0.3390235, 0.348986236, 0.358949125, 0.368912, 0.378874958, 0.388837306, 0.398799792, 0.408762333, 0.418725194, 0.428688472, 0.438651389, 0.448614014, 0.458576972, 0.468539764, 0.478502153, 0.488465028, 0.498427972, 0.508390653, 0.518353139, 0.528315736, 0.538278347, 0.548240958, 0.558204097, 0.568167167, 0.578130014, 0.588092917, 0.598055778, 0.608018556, 0.617981347, 0.627944236, 0.637907361, 0.647870069, 0.657833028, 0.667795875, 0.677759014, 0.687722083, 0.697685167, 0.707648181, 0.717610694, 0.727573722, 0.737536083, 0.747498139, 0.757459944, 0.767421875, 0.777384153, 0.787346153, 0.797308583, 0.807270917, 0.817233444, 0.827196333, 0.837158208, 0.847120125, 0.857082625, 0.867045514, 0.877008722, 0.886972014, 0.896935611, 0.906898958, 0.916861958, 0.926825264, 0.936788292, 0.94675125, 0.956713806, 0.966675833, 0.976638486, 0.986601444, 0.996564667, 1.006527986, 1.016491056] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:24.310" endtime="20201110 08:38:24.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.304" endtime="20201110 08:38:24.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.314" endtime="20201110 08:38:24.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.318" endtime="20201110 08:38:24.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.316" endtime="20201110 08:38:24.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.313" endtime="20201110 08:38:24.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.751" endtime="20201110 08:38:24.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.575" endtime="20201110 08:38:24.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.574" endtime="20201110 08:38:24.339"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:24.341" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.349" endtime="20201110 08:38:26.455"></status>
</kw>
<msg timestamp="20201110 08:38:26.457" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54791974, 'start-iter': 1, 'wakeups': [54802311, 54812313, 54822308, 5...</msg>
<status status="PASS" starttime="20201110 08:38:24.348" endtime="20201110 08:38:26.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.462" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54791974, 'start-iter': 1, 'wakeups': [54802311, 54812313, 54822308, 5...</msg>
<status status="PASS" starttime="20201110 08:38:26.459" endtime="20201110 08:38:26.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.465" endtime="20201110 08:38:26.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.345" endtime="20201110 08:38:26.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.343" endtime="20201110 08:38:26.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.483" level="INFO">${RESULT} = {'timer-count': 8, 'start-iter': 1, 'start-time': 54791974, 'timer-interval': 10000, 'wakeups': [54802311, 54812313, 54822308, 54832307, 54842307, 54852307, 54862307, 54872307, 54882307, 54892307, 549...</msg>
<status status="PASS" starttime="20201110 08:38:26.478" endtime="20201110 08:38:26.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.491" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:26.489" endtime="20201110 08:38:26.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.496" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:26.494" endtime="20201110 08:38:26.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.484" endtime="20201110 08:38:26.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.506" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:26.504" endtime="20201110 08:38:26.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.510" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:26.508" endtime="20201110 08:38:26.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.499" endtime="20201110 08:38:26.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.519" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:26.518" endtime="20201110 08:38:26.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.521" level="INFO">VALUE: 54791974</msg>
<status status="PASS" starttime="20201110 08:38:26.520" endtime="20201110 08:38:26.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.513" endtime="20201110 08:38:26.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.526" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:26.525" endtime="20201110 08:38:26.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.528" level="INFO">VALUE: [54802311, 54812313, 54822308, 54832307, 54842307, 54852307, 54862307, 54872307, 54882307, 54892307, 54902307, 54912307, 54922307, 54932307, 54942307, 54952307, 54962307, 54972307, 54982307, 54992307, 55002307, 55012307, 55022307, 55032307, 55042307, 55052307, 55062307, 55072307, 55082307, 55092307, 55102307, 55112307, 55122307, 55132307, 55142307, 55152307, 55162307, 55172307, 55182307, 55192307, 55202307, 55212307, 55222307, 55232307, 55242307, 55252307, 55262307, 55272307, 55282307, 55292307, 55302307, 55312307, 55322307, 55332307, 55342307, 55352307, 55362307, 55372307, 55382307, 55392307, 55402307, 55412307, 55422307, 55432307, 55442307, 55452307, 55462307, 55472307, 55482307, 55492307, 55502307, 55512307, 55522307, 55532307, 55542307, 55552307, 55562307, 55572307, 55582307, 55592307, 55602307, 55612307, 55622307, 55632307, 55642307, 55652307, 55662307, 55672307, 55682307, 55692307, 55702307, 55712307, 55722307, 55732307, 55742307, 55752307, 55762307, 55772307, 55782307, 55792307]</msg>
<status status="PASS" starttime="20201110 08:38:26.527" endtime="20201110 08:38:26.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.522" endtime="20201110 08:38:26.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.536" endtime="20201110 08:38:26.826"></status>
</kw>
<msg timestamp="20201110 08:38:26.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032909875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.535" endtime="20201110 08:38:26.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032909875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.830" endtime="20201110 08:38:26.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.838" endtime="20201110 08:38:26.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.531" endtime="20201110 08:38:26.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.529" endtime="20201110 08:38:26.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.864" level="INFO">${RESULT} = {'source_diff': [0, 0.010299514, 0.009964792, 0.009958861, 0.009962277999999998, 0.00996287500000001, 0.009962137999999995, 0.009962263999999998, 0.009962402999999995, 0.009962292000000011, 0.00996290...</msg>
<status status="PASS" starttime="20201110 08:38:26.841" endtime="20201110 08:38:26.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.869" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:26.868" endtime="20201110 08:38:26.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.871" level="INFO">VALUE: 0.022610361</msg>
<status status="PASS" starttime="20201110 08:38:26.870" endtime="20201110 08:38:26.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.865" endtime="20201110 08:38:26.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.876" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:26.875" endtime="20201110 08:38:26.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.878" level="INFO">VALUE: [0.032909875, 0.042874667, 0.052833528, 0.062795806, 0.072758681, 0.082720819, 0.092683083, 0.102645486, 0.112607778, 0.122570681, 0.132533403, 0.142495889, 0.152458458, 0.16242075, 0.172383306, 0.182345347, 0.19230775, 0.202270208, 0.212232347, 0.222194736, 0.232157764, 0.242120819, 0.252083542, 0.262045875, 0.272008222, 0.281970722, 0.291933403, 0.301895611, 0.311857833, 0.321820431, 0.331782917, 0.341745347, 0.351708347, 0.361671639, 0.371635111, 0.381598111, 0.391561375, 0.401524736, 0.411488139, 0.421451153, 0.431413361, 0.441375847, 0.451338583, 0.461301903, 0.471265292, 0.481228639, 0.491191833, 0.501154611, 0.511117069, 0.521079458, 0.531041597, 0.541003708, 0.550966, 0.560928542, 0.570891069, 0.580853653, 0.590815597, 0.600778264, 0.610740778, 0.620702514, 0.630664708, 0.640627333, 0.650589125, 0.660551194, 0.670513528, 0.680475583, 0.690437694, 0.700399139, 0.710361181, 0.720323042, 0.730284333, 0.740245833, 0.750207819, 0.760169472, 0.770130986, 0.780092431, 0.790053903, 0.800015181, 0.809976681, 0.819938181, 0.829899722, 0.839861236, 0.849822556, 0.859784278, 0.869746083, 0.879708139, 0.889670167, 0.899632042, 0.909593889, 0.919555653, 0.929516972, 0.939479444, 0.949441778, 0.959403625, 0.9693655, 0.979327042, 0.989289069, 0.999250708, 1.009212708, 1.019174236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:26.877" endtime="20201110 08:38:26.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.872" endtime="20201110 08:38:26.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.882" endtime="20201110 08:38:26.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.885" endtime="20201110 08:38:26.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.883" endtime="20201110 08:38:26.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.880" endtime="20201110 08:38:26.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.342" endtime="20201110 08:38:26.906"></status>
</kw>
<msg timestamp="20201110 08:38:26.906" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.916" endtime="20201110 08:38:29.021"></status>
</kw>
<msg timestamp="20201110 08:38:29.023" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57368226, 'start-iter': 1, 'wakeups': [57378565, 57388566, 57398560, 5...</msg>
<status status="PASS" starttime="20201110 08:38:26.914" endtime="20201110 08:38:29.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.029" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57368226, 'start-iter': 1, 'wakeups': [57378565, 57388566, 57398560, 5...</msg>
<status status="PASS" starttime="20201110 08:38:29.025" endtime="20201110 08:38:29.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.031" endtime="20201110 08:38:29.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.911" endtime="20201110 08:38:29.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.908" endtime="20201110 08:38:29.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.042" level="INFO">${RESULT} = {'timer-count': 8, 'start-iter': 1, 'start-time': 57368226, 'timer-interval': 10000, 'wakeups': [57378565, 57388566, 57398560, 57408559, 57418559, 57428559, 57438559, 57448559, 57458559, 57468559, 574...</msg>
<status status="PASS" starttime="20201110 08:38:29.038" endtime="20201110 08:38:29.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.051" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:29.049" endtime="20201110 08:38:29.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.055" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:29.053" endtime="20201110 08:38:29.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.044" endtime="20201110 08:38:29.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.066" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:29.064" endtime="20201110 08:38:29.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.070" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:29.068" endtime="20201110 08:38:29.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.059" endtime="20201110 08:38:29.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.081" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:29.079" endtime="20201110 08:38:29.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.085" level="INFO">VALUE: 57368226</msg>
<status status="PASS" starttime="20201110 08:38:29.083" endtime="20201110 08:38:29.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.073" endtime="20201110 08:38:29.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.095" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:29.093" endtime="20201110 08:38:29.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.100" level="INFO">VALUE: [57378565, 57388566, 57398560, 57408559, 57418559, 57428559, 57438559, 57448559, 57458559, 57468559, 57478559, 57488559, 57498559, 57508559, 57518559, 57528559, 57538559, 57548559, 57558559, 57568559, 57578559, 57588559, 57598559, 57608559, 57618559, 57628559, 57638559, 57648559, 57658559, 57668559, 57678559, 57688559, 57698559, 57708559, 57718559, 57728559, 57738559, 57748559, 57758559, 57768559, 57778559, 57788559, 57798559, 57808559, 57818559, 57828559, 57838559, 57848559, 57858559, 57868559, 57878559, 57888559, 57898559, 57908559, 57918559, 57928559, 57938559, 57948559, 57958559, 57968559, 57978559, 57988559, 57998559, 58008559, 58018559, 58028559, 58038559, 58048559, 58058559, 58068559, 58078559, 58088559, 58098559, 58108559, 58118559, 58128559, 58138559, 58148559, 58158559, 58168559, 58178559, 58188559, 58198559, 58208559, 58218559, 58228559, 58238559, 58248559, 58258559, 58268559, 58278559, 58288559, 58298559, 58308559, 58318559, 58328559, 58338559, 58348559, 58358559, 58368559]</msg>
<status status="PASS" starttime="20201110 08:38:29.097" endtime="20201110 08:38:29.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.088" endtime="20201110 08:38:29.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.115" endtime="20201110 08:38:29.409"></status>
</kw>
<msg timestamp="20201110 08:38:29.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031840458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.112" endtime="20201110 08:38:29.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021540625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031840458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.412" endtime="20201110 08:38:29.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.420" endtime="20201110 08:38:29.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.107" endtime="20201110 08:38:29.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.103" endtime="20201110 08:38:29.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.447" level="INFO">${RESULT} = {'source_diff': [0, 0.010299833000000001, 0.009962347999999996, 0.009956638000000004, 0.009960999999999998, 0.009962027999999998, 0.009962097000000003, 0.009961999999999999, 0.009961999999999999, 0.00...</msg>
<status status="PASS" starttime="20201110 08:38:29.423" endtime="20201110 08:38:29.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.451" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:29.450" endtime="20201110 08:38:29.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.453" level="INFO">VALUE: 0.021540625</msg>
<status status="PASS" starttime="20201110 08:38:29.452" endtime="20201110 08:38:29.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.448" endtime="20201110 08:38:29.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.459" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:29.458" endtime="20201110 08:38:29.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.461" level="INFO">VALUE: [0.031840458, 0.041802806, 0.051759444, 0.061720444, 0.071682472, 0.081644569, 0.091606569, 0.101568569, 0.11153075, 0.121492, 0.131454153, 0.141416028, 0.151378292, 0.161340542, 0.171303028, 0.181265333, 0.191227764, 0.201190278, 0.211152486, 0.221114694, 0.231077319, 0.241039292, 0.251001653, 0.260964069, 0.270926361, 0.280887708, 0.290849764, 0.300811861, 0.310773806, 0.320736514, 0.330698708, 0.340660361, 0.350621847, 0.360583639, 0.3705455, 0.380507681, 0.390470139, 0.400432222, 0.410393944, 0.420355319, 0.430317431, 0.440279514, 0.450241764, 0.460203681, 0.470165653, 0.480127931, 0.490090042, 0.500052736, 0.510015194, 0.5199775, 0.529939694, 0.539902403, 0.549865361, 0.559828028, 0.569791097, 0.579754792, 0.589717569, 0.599680042, 0.609642556, 0.619605194, 0.629567569, 0.639530653, 0.649493583, 0.659456833, 0.669420153, 0.679382944, 0.689346028, 0.699309153, 0.709272264, 0.719235125, 0.729197861, 0.739160639, 0.749122833, 0.759085611, 0.769048389, 0.779010708, 0.788973208, 0.798935486, 0.808897319, 0.818858708, 0.828820542, 0.838782306, 0.848744375, 0.858707014, 0.868669292, 0.878631417, 0.888593833, 0.898556306, 0.908519264, 0.918482153, 0.928445333, 0.93840825, 0.948371069, 0.958334014, 0.968296542, 0.978259361, 0.988222083, 0.998184944, 1.008148, 1.018110569] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:29.460" endtime="20201110 08:38:29.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.455" endtime="20201110 08:38:29.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.465" endtime="20201110 08:38:29.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.468" endtime="20201110 08:38:29.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.467" endtime="20201110 08:38:29.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.463" endtime="20201110 08:38:29.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.907" endtime="20201110 08:38:29.489"></status>
</kw>
<msg timestamp="20201110 08:38:29.489" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.497" endtime="20201110 08:38:31.603"></status>
</kw>
<msg timestamp="20201110 08:38:31.604" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59959632, 'start-iter': 1, 'wakeups': [59969972, 59979972, 59989966, 5...</msg>
<status status="PASS" starttime="20201110 08:38:29.495" endtime="20201110 08:38:31.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.610" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59959632, 'start-iter': 1, 'wakeups': [59969972, 59979972, 59989966, 5...</msg>
<status status="PASS" starttime="20201110 08:38:31.607" endtime="20201110 08:38:31.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.612" endtime="20201110 08:38:31.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.493" endtime="20201110 08:38:31.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.491" endtime="20201110 08:38:31.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.623" level="INFO">${RESULT} = {'timer-count': 8, 'start-iter': 1, 'start-time': 59959632, 'timer-interval': 10000, 'wakeups': [59969972, 59979972, 59989966, 59999965, 60009965, 60019965, 60029965, 60039965, 60049965, 60059965, 600...</msg>
<status status="PASS" starttime="20201110 08:38:31.619" endtime="20201110 08:38:31.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.634" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:31.632" endtime="20201110 08:38:31.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.639" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:31.637" endtime="20201110 08:38:31.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.625" endtime="20201110 08:38:31.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.649" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:31.647" endtime="20201110 08:38:31.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.653" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:31.651" endtime="20201110 08:38:31.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.642" endtime="20201110 08:38:31.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.670" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:31.661" endtime="20201110 08:38:31.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.675" level="INFO">VALUE: 59959632</msg>
<status status="PASS" starttime="20201110 08:38:31.673" endtime="20201110 08:38:31.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.656" endtime="20201110 08:38:31.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.685" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:31.683" endtime="20201110 08:38:31.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.690" level="INFO">VALUE: [59969972, 59979972, 59989966, 59999965, 60009965, 60019965, 60029965, 60039965, 60049965, 60059965, 60069965, 60079965, 60089965, 60099965, 60109965, 60119965, 60129965, 60139965, 60149965, 60159965, 60169965, 60179965, 60189965, 60199965, 60209965, 60219965, 60229965, 60239965, 60249965, 60259965, 60269965, 60279965, 60289965, 60299965, 60309965, 60319965, 60329965, 60339965, 60349965, 60359965, 60369965, 60379965, 60389965, 60399965, 60409965, 60419965, 60429965, 60439965, 60449965, 60459965, 60469965, 60479965, 60489965, 60499965, 60509965, 60519965, 60529965, 60539965, 60549965, 60559965, 60569965, 60579965, 60589965, 60599965, 60609965, 60619965, 60629965, 60639965, 60649965, 60659965, 60669965, 60679965, 60689965, 60699965, 60709965, 60719965, 60729965, 60739965, 60749965, 60759965, 60769965, 60779965, 60789965, 60799965, 60809965, 60819965, 60829965, 60839965, 60849965, 60859965, 60869965, 60879965, 60889965, 60899965, 60909965, 60919965, 60929965, 60939965, 60949965, 60959965]</msg>
<status status="PASS" starttime="20201110 08:38:31.687" endtime="20201110 08:38:31.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.678" endtime="20201110 08:38:31.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.705" endtime="20201110 08:38:32.000"></status>
</kw>
<msg timestamp="20201110 08:38:32.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01986675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030166083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:31.702" endtime="20201110 08:38:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01986675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030166083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:32.004" endtime="20201110 08:38:32.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.012" endtime="20201110 08:38:32.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.696" endtime="20201110 08:38:32.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.693" endtime="20201110 08:38:32.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.038" level="INFO">${RESULT} = {'source_diff': [0, 0.010299333, 0.009960819999999999, 0.009956180000000002, 0.009959944999999998, 0.009961290999999997, 0.009961167000000007, 0.009960957999999992, 0.009960723000000005, 0.00996045800...</msg>
<status status="PASS" starttime="20201110 08:38:32.015" endtime="20201110 08:38:32.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.043" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:38:32.042" endtime="20201110 08:38:32.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.045" level="INFO">VALUE: 0.01986675</msg>
<status status="PASS" starttime="20201110 08:38:32.044" endtime="20201110 08:38:32.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.039" endtime="20201110 08:38:32.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.050" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:32.049" endtime="20201110 08:38:32.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.052" level="INFO">VALUE: [0.030166083, 0.040126903, 0.050083083, 0.060043028, 0.070004319, 0.079965486, 0.089926444, 0.099887167, 0.109847625, 0.119808694, 0.129770042, 0.139731361, 0.149693458, 0.159654431, 0.169615681, 0.179576514, 0.189537236, 0.1994985, 0.209459111, 0.219419667, 0.229380514, 0.239340736, 0.249300597, 0.259261319, 0.269222, 0.279182833, 0.289143931, 0.299104917, 0.309065806, 0.319026736, 0.328988069, 0.338949944, 0.348911819, 0.358874056, 0.368836847, 0.378799069, 0.388761111, 0.398722819, 0.408684597, 0.418646347, 0.428607958, 0.438569583, 0.448531556, 0.458493667, 0.468455583, 0.478417611, 0.488379597, 0.498341417, 0.508303306, 0.518264875, 0.528226, 0.538187319, 0.548148847, 0.558110403, 0.568072042, 0.578033819, 0.587995194, 0.597957181, 0.607919417, 0.617881153, 0.627843208, 0.637805319, 0.647766792, 0.657728181, 0.667689764, 0.677651083, 0.687612986, 0.697574875, 0.707536361, 0.717497486, 0.727458375, 0.737419847, 0.747381278, 0.757342944, 0.767304972, 0.777266944, 0.787228542, 0.797190389, 0.807151806, 0.817113319, 0.827075361, 0.837037694, 0.847000069, 0.856961778, 0.866923611, 0.876885639, 0.886847569, 0.896808819, 0.906771, 0.916733208, 0.926695056, 0.936656806, 0.946618431, 0.95657975, 0.966541458, 0.976503278, 0.986465431, 0.996427083, 1.006388847, 1.016350736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:32.051" endtime="20201110 08:38:32.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.046" endtime="20201110 08:38:32.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.056" endtime="20201110 08:38:32.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.059" endtime="20201110 08:38:32.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.058" endtime="20201110 08:38:32.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.054" endtime="20201110 08:38:32.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.490" endtime="20201110 08:38:32.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.340" endtime="20201110 08:38:32.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.339" endtime="20201110 08:38:32.081"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:32.083" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.091" endtime="20201110 08:38:34.197"></status>
</kw>
<msg timestamp="20201110 08:38:34.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62563852, 'start-iter': 1, 'wakeups': [62574244, 62584245, 62594240, 6...</msg>
<status status="PASS" starttime="20201110 08:38:32.090" endtime="20201110 08:38:34.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.204" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62563852, 'start-iter': 1, 'wakeups': [62574244, 62584245, 62594240, 6...</msg>
<status status="PASS" starttime="20201110 08:38:34.200" endtime="20201110 08:38:34.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.206" endtime="20201110 08:38:34.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.087" endtime="20201110 08:38:34.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.085" endtime="20201110 08:38:34.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.217" level="INFO">${RESULT} = {'timer-count': 9, 'start-iter': 1, 'start-time': 62563852, 'timer-interval': 10000, 'wakeups': [62574244, 62584245, 62594240, 62604240, 62614240, 62624240, 62634240, 62644240, 62654240, 62664240, 626...</msg>
<status status="PASS" starttime="20201110 08:38:34.213" endtime="20201110 08:38:34.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.226" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:34.224" endtime="20201110 08:38:34.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.230" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:34.228" endtime="20201110 08:38:34.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.219" endtime="20201110 08:38:34.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.241" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:34.238" endtime="20201110 08:38:34.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.248" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:34.246" endtime="20201110 08:38:34.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.233" endtime="20201110 08:38:34.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.259" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:34.256" endtime="20201110 08:38:34.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.263" level="INFO">VALUE: 62563852</msg>
<status status="PASS" starttime="20201110 08:38:34.261" endtime="20201110 08:38:34.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.251" endtime="20201110 08:38:34.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.274" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:34.272" endtime="20201110 08:38:34.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.280" level="INFO">VALUE: [62574244, 62584245, 62594240, 62604240, 62614240, 62624240, 62634240, 62644240, 62654240, 62664240, 62674240, 62684240, 62694240, 62704240, 62714240, 62724240, 62734240, 62744240, 62754240, 62764240, 62774240, 62784240, 62794240, 62804240, 62814240, 62824240, 62834240, 62844240, 62854240, 62864240, 62874240, 62884240, 62894240, 62904240, 62914240, 62924240, 62934240, 62944240, 62954240, 62964240, 62974240, 62984240, 62994240, 63004240, 63014240, 63024240, 63034240, 63044240, 63054240, 63064240, 63074240, 63084240, 63094240, 63104240, 63114240, 63124240, 63134240, 63144240, 63154240, 63164240, 63174240, 63184240, 63194240, 63204240, 63214240, 63224240, 63234240, 63244240, 63254240, 63264240, 63274240, 63284240, 63294240, 63304240, 63314240, 63324240, 63334240, 63344240, 63354240, 63364240, 63374240, 63384240, 63394240, 63404240, 63414240, 63424240, 63434240, 63444240, 63454240, 63464240, 63474240, 63484240, 63494240, 63504240, 63514240, 63524240, 63534240, 63544240, 63554240, 63564240]</msg>
<status status="PASS" starttime="20201110 08:38:34.276" endtime="20201110 08:38:34.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.266" endtime="20201110 08:38:34.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.296" endtime="20201110 08:38:34.594"></status>
</kw>
<msg timestamp="20201110 08:38:34.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0329975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:34.293" endtime="20201110 08:38:34.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022645153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0329975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:34.597" endtime="20201110 08:38:34.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.605" endtime="20201110 08:38:34.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.287" endtime="20201110 08:38:34.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.283" endtime="20201110 08:38:34.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.631" level="INFO">${RESULT} = {'source_diff': [0, 0.010352346999999998, 0.009962333000000004, 0.009957458999999995, 0.009962152000000009, 0.009962638999999995, 0.009962973, 0.009963069000000005, 0.009963, 0.009963236, 0.0099628199...</msg>
<status status="PASS" starttime="20201110 08:38:34.608" endtime="20201110 08:38:34.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.636" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:34.635" endtime="20201110 08:38:34.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.639" level="INFO">VALUE: 0.022645153</msg>
<status status="PASS" starttime="20201110 08:38:34.638" endtime="20201110 08:38:34.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.632" endtime="20201110 08:38:34.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.644" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:34.643" endtime="20201110 08:38:34.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.646" level="INFO">VALUE: [0.0329975, 0.042959833, 0.052917292, 0.062879444, 0.072842083, 0.082805056, 0.092768125, 0.102731125, 0.112694361, 0.122657181, 0.13261925, 0.142581875, 0.15254425, 0.162506181, 0.17246825, 0.182430292, 0.192392472, 0.202354625, 0.212316986, 0.222279194, 0.232241389, 0.242203569, 0.252166167, 0.262128583, 0.272090875, 0.282053278, 0.292015861, 0.301977806, 0.311940181, 0.321902389, 0.331864111, 0.341826306, 0.351788083, 0.361750431, 0.371712583, 0.381674722, 0.391636625, 0.401599361, 0.41156225, 0.421524778, 0.431487139, 0.441449361, 0.451411764, 0.461374014, 0.471336694, 0.481299764, 0.491262472, 0.501225653, 0.511188486, 0.521151417, 0.531114153, 0.541076264, 0.551038, 0.561000194, 0.570962042, 0.580924389, 0.590886264, 0.60084875, 0.610811028, 0.620773278, 0.630735667, 0.640698014, 0.650660681, 0.660623056, 0.670585667, 0.680548514, 0.690511042, 0.700473319, 0.710435833, 0.720398764, 0.730361875, 0.740324486, 0.750287111, 0.760250431, 0.770213569, 0.780177042, 0.790139931, 0.800102417, 0.81006525, 0.820028236, 0.829990875, 0.839953139, 0.849916069, 0.859879278, 0.869842097, 0.879804903, 0.889767278, 0.899729917, 0.909693083, 0.919656306, 0.929619361, 0.939582403, 0.949545361, 0.959508278, 0.969471667, 0.979435264, 0.989398417, 0.999361375, 1.009324556, 1.019287306] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:34.645" endtime="20201110 08:38:34.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.640" endtime="20201110 08:38:34.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.649" endtime="20201110 08:38:34.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.653" endtime="20201110 08:38:34.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.651" endtime="20201110 08:38:34.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.648" endtime="20201110 08:38:34.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.084" endtime="20201110 08:38:34.674"></status>
</kw>
<msg timestamp="20201110 08:38:34.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.682" endtime="20201110 08:38:36.788"></status>
</kw>
<msg timestamp="20201110 08:38:36.789" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65164786, 'start-iter': 1, 'wakeups': [65175178, 65185179, 65195174, 6...</msg>
<status status="PASS" starttime="20201110 08:38:34.680" endtime="20201110 08:38:36.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.795" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65164786, 'start-iter': 1, 'wakeups': [65175178, 65185179, 65195174, 6...</msg>
<status status="PASS" starttime="20201110 08:38:36.792" endtime="20201110 08:38:36.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.797" endtime="20201110 08:38:36.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.678" endtime="20201110 08:38:36.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.676" endtime="20201110 08:38:36.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.809" level="INFO">${RESULT} = {'timer-count': 9, 'start-iter': 1, 'start-time': 65164786, 'timer-interval': 10000, 'wakeups': [65175178, 65185179, 65195174, 65205174, 65215174, 65225174, 65235174, 65245174, 65255174, 65265174, 652...</msg>
<status status="PASS" starttime="20201110 08:38:36.804" endtime="20201110 08:38:36.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.817" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:36.815" endtime="20201110 08:38:36.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.821" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:36.819" endtime="20201110 08:38:36.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.810" endtime="20201110 08:38:36.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.831" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:36.829" endtime="20201110 08:38:36.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.836" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:36.834" endtime="20201110 08:38:36.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.824" endtime="20201110 08:38:36.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.841" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:36.840" endtime="20201110 08:38:36.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.843" level="INFO">VALUE: 65164786</msg>
<status status="PASS" starttime="20201110 08:38:36.842" endtime="20201110 08:38:36.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.837" endtime="20201110 08:38:36.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.849" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:36.848" endtime="20201110 08:38:36.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.851" level="INFO">VALUE: [65175178, 65185179, 65195174, 65205174, 65215174, 65225174, 65235174, 65245174, 65255174, 65265174, 65275174, 65285174, 65295174, 65305174, 65315174, 65325174, 65335174, 65345174, 65355174, 65365174, 65375174, 65385174, 65395174, 65405174, 65415174, 65425174, 65435174, 65445174, 65455174, 65465174, 65475174, 65485174, 65495174, 65505174, 65515174, 65525174, 65535174, 65545174, 65555174, 65565174, 65575174, 65585174, 65595174, 65605174, 65615174, 65625174, 65635174, 65645174, 65655174, 65665174, 65675174, 65685174, 65695174, 65705174, 65715174, 65725174, 65735174, 65745174, 65755174, 65765174, 65775174, 65785174, 65795174, 65805174, 65815174, 65825174, 65835174, 65845174, 65855174, 65865174, 65875174, 65885174, 65895174, 65905174, 65915174, 65925174, 65935174, 65945174, 65955174, 65965174, 65975174, 65985174, 65995174, 66005174, 66015174, 66025174, 66035174, 66045174, 66055174, 66065174, 66075174, 66085174, 66095174, 66105174, 66115174, 66125174, 66135174, 66145174, 66155174, 66165174]</msg>
<status status="PASS" starttime="20201110 08:38:36.850" endtime="20201110 08:38:36.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.844" endtime="20201110 08:38:36.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.863" endtime="20201110 08:38:37.155"></status>
</kw>
<msg timestamp="20201110 08:38:37.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030690167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.862" endtime="20201110 08:38:37.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020337639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030690167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.158" endtime="20201110 08:38:37.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.166" endtime="20201110 08:38:37.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.859" endtime="20201110 08:38:37.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.852" endtime="20201110 08:38:37.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.192" level="INFO">${RESULT} = {'source_diff': [0, 0.010352528, 0.009962361, 0.009957194000000003, 0.009962277999999998, 0.009961944, 0.009961791999999997, 0.009962236, 0.009961653000000001, 0.009962333000000004, 0.0099626669999999...</msg>
<status status="PASS" starttime="20201110 08:38:37.169" endtime="20201110 08:38:37.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.197" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:37.195" endtime="20201110 08:38:37.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.199" level="INFO">VALUE: 0.020337639</msg>
<status status="PASS" starttime="20201110 08:38:37.198" endtime="20201110 08:38:37.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.193" endtime="20201110 08:38:37.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.204" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:37.203" endtime="20201110 08:38:37.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.206" level="INFO">VALUE: [0.030690167, 0.040652528, 0.050609722, 0.060572, 0.070533944, 0.080495736, 0.090457972, 0.100419625, 0.110381958, 0.120344625, 0.130307458, 0.140270083, 0.150232444, 0.160195, 0.170157806, 0.180120222, 0.190082903, 0.20004575, 0.210009139, 0.219972194, 0.229935361, 0.239898194, 0.249861292, 0.259823875, 0.269786028, 0.279748222, 0.289710819, 0.299673556, 0.309636097, 0.319599083, 0.329561722, 0.339524833, 0.349488278, 0.359451403, 0.369414694, 0.379377708, 0.389340903, 0.399303986, 0.409266889, 0.419229972, 0.429193069, 0.439156667, 0.449120528, 0.459084528, 0.469048125, 0.479011472, 0.488975083, 0.498938542, 0.508901708, 0.518864764, 0.528827819, 0.538790736, 0.548753597, 0.558716472, 0.568679403, 0.578642028, 0.588605, 0.598567681, 0.608530958, 0.618494083, 0.628456986, 0.638419722, 0.648383111, 0.658346417, 0.668309333, 0.678271847, 0.688234653, 0.698197597, 0.708159819, 0.718122431, 0.728085278, 0.738047847, 0.748010333, 0.757972514, 0.767935431, 0.777898125, 0.787860597, 0.797822833, 0.807785153, 0.817748181, 0.827710861, 0.837673306, 0.847635986, 0.857598764, 0.86756125, 0.8775235, 0.887485181, 0.897447153, 0.907409181, 0.917371861, 0.927334514, 0.937296736, 0.947258694, 0.957220181, 0.967181722, 0.977143972, 0.987105806, 0.997067486, 1.007028847, 1.016990944] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:37.205" endtime="20201110 08:38:37.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.200" endtime="20201110 08:38:37.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.209" endtime="20201110 08:38:37.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.213" endtime="20201110 08:38:37.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.211" endtime="20201110 08:38:37.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.208" endtime="20201110 08:38:37.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.675" endtime="20201110 08:38:37.234"></status>
</kw>
<msg timestamp="20201110 08:38:37.234" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.242" endtime="20201110 08:38:39.348"></status>
</kw>
<msg timestamp="20201110 08:38:39.350" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67735135, 'start-iter': 1, 'wakeups': [67745526, 67755523, 67765523, 6...</msg>
<status status="PASS" starttime="20201110 08:38:37.241" endtime="20201110 08:38:39.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.356" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67735135, 'start-iter': 1, 'wakeups': [67745526, 67755523, 67765523, 6...</msg>
<status status="PASS" starttime="20201110 08:38:39.352" endtime="20201110 08:38:39.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.359" endtime="20201110 08:38:39.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.238" endtime="20201110 08:38:39.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.236" endtime="20201110 08:38:39.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.370" level="INFO">${RESULT} = {'timer-count': 9, 'start-iter': 1, 'start-time': 67735135, 'timer-interval': 10000, 'wakeups': [67745526, 67755523, 67765523, 67775523, 67785523, 67795523, 67805523, 67815523, 67825523, 67835523, 678...</msg>
<status status="PASS" starttime="20201110 08:38:39.366" endtime="20201110 08:38:39.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.378" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:39.376" endtime="20201110 08:38:39.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.383" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:39.380" endtime="20201110 08:38:39.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.371" endtime="20201110 08:38:39.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.393" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:39.391" endtime="20201110 08:38:39.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.398" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:39.396" endtime="20201110 08:38:39.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.386" endtime="20201110 08:38:39.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.409" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:39.407" endtime="20201110 08:38:39.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.414" level="INFO">VALUE: 67735135</msg>
<status status="PASS" starttime="20201110 08:38:39.412" endtime="20201110 08:38:39.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.401" endtime="20201110 08:38:39.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.424" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:39.422" endtime="20201110 08:38:39.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.429" level="INFO">VALUE: [67745526, 67755523, 67765523, 67775523, 67785523, 67795523, 67805523, 67815523, 67825523, 67835523, 67845523, 67855523, 67865523, 67875523, 67885523, 67895523, 67905523, 67915523, 67925523, 67935523, 67945523, 67955523, 67965523, 67975523, 67985523, 67995523, 68005523, 68015523, 68025523, 68035523, 68045523, 68055523, 68065523, 68075523, 68085523, 68095523, 68105523, 68115523, 68125523, 68135523, 68145523, 68155523, 68165523, 68175523, 68185523, 68195523, 68205523, 68215523, 68225523, 68235523, 68245523, 68255523, 68265523, 68275523, 68285523, 68295523, 68305523, 68315523, 68325523, 68335523, 68345523, 68355523, 68365523, 68375523, 68385523, 68395523, 68405523, 68415523, 68425523, 68435523, 68445523, 68455523, 68465523, 68475523, 68485523, 68495523, 68505523, 68515523, 68525523, 68535523, 68545523, 68555523, 68565523, 68575523, 68585523, 68595523, 68605523, 68615523, 68625523, 68635523, 68645523, 68655523, 68665523, 68675523, 68685523, 68695523, 68705523, 68715523, 68725523, 68735523]</msg>
<status status="PASS" starttime="20201110 08:38:39.427" endtime="20201110 08:38:39.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.417" endtime="20201110 08:38:39.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.444" endtime="20201110 08:38:39.733"></status>
</kw>
<msg timestamp="20201110 08:38:39.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030355958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.441" endtime="20201110 08:38:39.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020004472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030355958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.737" endtime="20201110 08:38:39.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.745" endtime="20201110 08:38:39.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.436" endtime="20201110 08:38:39.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.432" endtime="20201110 08:38:39.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.771" level="INFO">${RESULT} = {'source_diff': [0, 0.010351486, 0.009959041999999998, 0.009961917, 0.009961694, 0.009962582999999997, 0.009962417000000001, 0.009962403000000009, 0.009962221999999993, 0.009962055999999997, 0.0099624...</msg>
<status status="PASS" starttime="20201110 08:38:39.748" endtime="20201110 08:38:39.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.776" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:38:39.775" endtime="20201110 08:38:39.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.778" level="INFO">VALUE: 0.020004472</msg>
<status status="PASS" starttime="20201110 08:38:39.777" endtime="20201110 08:38:39.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.772" endtime="20201110 08:38:39.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.783" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:39.782" endtime="20201110 08:38:39.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.785" level="INFO">VALUE: [0.030355958, 0.040315, 0.050276917, 0.060238611, 0.070201194, 0.080163611, 0.090126014, 0.100088236, 0.110050292, 0.120012708, 0.129974972, 0.139937194, 0.149899208, 0.159861319, 0.169823139, 0.179784986, 0.189747042, 0.199709208, 0.209671944, 0.219634639, 0.229597236, 0.239559333, 0.249521764, 0.259484139, 0.269446889, 0.279409361, 0.289371542, 0.299333625, 0.30929575, 0.319257736, 0.329220167, 0.339182625, 0.349144597, 0.359106444, 0.369067986, 0.379029833, 0.388992194, 0.398955167, 0.408917458, 0.41888, 0.428842653, 0.438805194, 0.448767389, 0.458729472, 0.468691139, 0.478653014, 0.488615042, 0.498577306, 0.508540028, 0.518501944, 0.528464, 0.538426347, 0.548388403, 0.558350847, 0.568314042, 0.578276361, 0.588238444, 0.598200986, 0.608163361, 0.618125528, 0.628087514, 0.638049778, 0.648012389, 0.657975444, 0.667938611, 0.677901847, 0.687864889, 0.697828083, 0.707791319, 0.717754542, 0.727718167, 0.737681111, 0.747644028, 0.757607167, 0.767570361, 0.777533583, 0.787496361, 0.797458639, 0.807421069, 0.817383431, 0.827346028, 0.837309153, 0.847271972, 0.857234708, 0.867197528, 0.87716025, 0.887122625, 0.897085153, 0.907048069, 0.917010972, 0.92697425, 0.936937194, 0.946900306, 0.95686325, 0.966826167, 0.976789417, 0.986753097, 0.996716375, 1.006679486, 1.016642625] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:39.784" endtime="20201110 08:38:39.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.779" endtime="20201110 08:38:39.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.788" endtime="20201110 08:38:39.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.792" endtime="20201110 08:38:39.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.790" endtime="20201110 08:38:39.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.787" endtime="20201110 08:38:39.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.235" endtime="20201110 08:38:39.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.082" endtime="20201110 08:38:39.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.081" endtime="20201110 08:38:39.813"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:39.815" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.824" endtime="20201110 08:38:41.931"></status>
</kw>
<msg timestamp="20201110 08:38:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70327181, 'start-iter': 1, 'wakeups': [70337620, 70347631, 70357627,...</msg>
<status status="PASS" starttime="20201110 08:38:39.823" endtime="20201110 08:38:41.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70327181, 'start-iter': 1, 'wakeups': [70337620, 70347631, 70357627,...</msg>
<status status="PASS" starttime="20201110 08:38:41.934" endtime="20201110 08:38:41.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.940" endtime="20201110 08:38:41.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.819" endtime="20201110 08:38:41.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.817" endtime="20201110 08:38:41.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.957" level="INFO">${RESULT} = {'timer-count': 10, 'start-iter': 1, 'start-time': 70327181, 'timer-interval': 10000, 'wakeups': [70337620, 70347631, 70357627, 70367632, 70377628, 70387632, 70397628, 70407632, 70417628, 70427632, 70...</msg>
<status status="PASS" starttime="20201110 08:38:41.952" endtime="20201110 08:38:41.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.965" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:41.963" endtime="20201110 08:38:41.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.969" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:41.967" endtime="20201110 08:38:41.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.958" endtime="20201110 08:38:41.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.980" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:41.977" endtime="20201110 08:38:41.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.984" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:41.982" endtime="20201110 08:38:41.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.972" endtime="20201110 08:38:41.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.994" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:41.992" endtime="20201110 08:38:41.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.998" level="INFO">VALUE: 70327181</msg>
<status status="PASS" starttime="20201110 08:38:41.996" endtime="20201110 08:38:41.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.987" endtime="20201110 08:38:42.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.009" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:42.007" endtime="20201110 08:38:42.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.013" level="INFO">VALUE: [70337620, 70347631, 70357627, 70367632, 70377628, 70387632, 70397628, 70407632, 70417628, 70427632, 70437628, 70447632, 70457628, 70467632, 70477628, 70487632, 70497628, 70507632, 70517628, 70527632, 70537628, 70547632, 70557628, 70567632, 70577628, 70587632, 70597628, 70607632, 70617628, 70627632, 70637628, 70647632, 70657628, 70667632, 70677628, 70687632, 70697628, 70707632, 70717628, 70727632, 70737628, 70747632, 70757628, 70767632, 70777628, 70787632, 70797628, 70807632, 70817628, 70827632, 70837628, 70847632, 70857628, 70867632, 70877628, 70887632, 70897628, 70907632, 70917628, 70927632, 70937628, 70947632, 70957628, 70967632, 70977628, 70987632, 70997628, 71007632, 71017628, 71027632, 71037628, 71047632, 71057628, 71067632, 71077628, 71087632, 71097628, 71107632, 71117628, 71127632, 71137628, 71147632, 71157628, 71167632, 71177628, 71187632, 71197628, 71207632, 71217628, 71227632, 71237628, 71247632, 71257628, 71267632, 71277628, 71287632, 71297628, 71307632, 71317628, 71327632]</msg>
<status status="PASS" starttime="20201110 08:38:42.011" endtime="20201110 08:38:42.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.002" endtime="20201110 08:38:42.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.029" endtime="20201110 08:38:42.321"></status>
</kw>
<msg timestamp="20201110 08:38:42.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034052708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.026" endtime="20201110 08:38:42.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023652528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034052708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.325" endtime="20201110 08:38:42.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.333" endtime="20201110 08:38:42.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.020" endtime="20201110 08:38:42.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.017" endtime="20201110 08:38:42.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.360" level="INFO">${RESULT} = {'source_diff': [0, 0.010400180000000002, 0.009972652999999998, 0.009957736000000002, 0.009967514000000004, 0.009958542, 0.009966443999999991, 0.00995847200000001, 0.009966124999999992, 0.009958292000...</msg>
<status status="PASS" starttime="20201110 08:38:42.336" endtime="20201110 08:38:42.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.364" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:42.363" endtime="20201110 08:38:42.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.367" level="INFO">VALUE: 0.023652528</msg>
<status status="PASS" starttime="20201110 08:38:42.366" endtime="20201110 08:38:42.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.361" endtime="20201110 08:38:42.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.372" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:42.371" endtime="20201110 08:38:42.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.374" level="INFO">VALUE: [0.034052708, 0.044025361, 0.053983097, 0.063950611, 0.073909153, 0.083875597, 0.093834069, 0.103800194, 0.113758486, 0.123724681, 0.133682931, 0.143648972, 0.153607486, 0.163573778, 0.173532472, 0.183499125, 0.193457972, 0.20342475, 0.213383653, 0.223350361, 0.233308056, 0.243273944, 0.253231972, 0.263198111, 0.273156097, 0.2831225, 0.293080625, 0.303046583, 0.313004694, 0.322970625, 0.332928903, 0.342895056, 0.352853597, 0.362819736, 0.372778125, 0.382744417, 0.392702875, 0.402669056, 0.412627194, 0.422593347, 0.432551681, 0.442518153, 0.452476569, 0.462442583, 0.472400764, 0.482366389, 0.492324194, 0.502289903, 0.512247556, 0.522213306, 0.532171236, 0.542136986, 0.552095431, 0.562061375, 0.572019222, 0.581984875, 0.591943667, 0.601910375, 0.611869056, 0.621835083, 0.631793361, 0.641759542, 0.651717847, 0.661683931, 0.671642431, 0.681608431, 0.691566792, 0.701533056, 0.711491681, 0.721458556, 0.731417458, 0.741383639, 0.751341597, 0.761307667, 0.771266181, 0.781232667, 0.791191278, 0.801157833, 0.811116875, 0.821083708, 0.831042111, 0.841008903, 0.850967403, 0.860933319, 0.870891708, 0.880857292, 0.890815097, 0.900781389, 0.910740167, 0.920706597, 0.930665278, 0.940632194, 0.950590944, 0.960557333, 0.970516806, 0.980483944, 0.990443667, 1.000410778, 1.010369347, 1.020336097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:42.373" endtime="20201110 08:38:42.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.368" endtime="20201110 08:38:42.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.377" endtime="20201110 08:38:42.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.381" endtime="20201110 08:38:42.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.379" endtime="20201110 08:38:42.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.376" endtime="20201110 08:38:42.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.816" endtime="20201110 08:38:42.401"></status>
</kw>
<msg timestamp="20201110 08:38:42.402" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.410" endtime="20201110 08:38:44.517"></status>
</kw>
<msg timestamp="20201110 08:38:44.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72922263, 'start-iter': 1, 'wakeups': [72932703, 72942713, 72952709,...</msg>
<status status="PASS" starttime="20201110 08:38:42.408" endtime="20201110 08:38:44.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.524" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72922263, 'start-iter': 1, 'wakeups': [72932703, 72942713, 72952709,...</msg>
<status status="PASS" starttime="20201110 08:38:44.520" endtime="20201110 08:38:44.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.527" endtime="20201110 08:38:44.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.406" endtime="20201110 08:38:44.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.404" endtime="20201110 08:38:44.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.540" level="INFO">${RESULT} = {'timer-count': 10, 'start-iter': 1, 'start-time': 72922263, 'timer-interval': 10000, 'wakeups': [72932703, 72942713, 72952709, 72962714, 72972710, 72982714, 72992710, 73002714, 73012710, 73022714, 73...</msg>
<status status="PASS" starttime="20201110 08:38:44.534" endtime="20201110 08:38:44.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.549" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:44.547" endtime="20201110 08:38:44.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.554" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:44.552" endtime="20201110 08:38:44.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.542" endtime="20201110 08:38:44.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.564" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:44.562" endtime="20201110 08:38:44.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.569" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:44.567" endtime="20201110 08:38:44.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.557" endtime="20201110 08:38:44.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.579" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:44.577" endtime="20201110 08:38:44.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.583" level="INFO">VALUE: 72922263</msg>
<status status="PASS" starttime="20201110 08:38:44.581" endtime="20201110 08:38:44.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.572" endtime="20201110 08:38:44.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.593" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:44.591" endtime="20201110 08:38:44.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.598" level="INFO">VALUE: [72932703, 72942713, 72952709, 72962714, 72972710, 72982714, 72992710, 73002714, 73012710, 73022714, 73032710, 73042714, 73052710, 73062714, 73072710, 73082714, 73092710, 73102714, 73112710, 73122714, 73132710, 73142714, 73152710, 73162714, 73172710, 73182714, 73192710, 73202714, 73212710, 73222714, 73232710, 73242714, 73252710, 73262714, 73272710, 73282714, 73292710, 73302714, 73312710, 73322714, 73332710, 73342714, 73352710, 73362714, 73372710, 73382714, 73392710, 73402714, 73412710, 73422714, 73432710, 73442714, 73452710, 73462714, 73472710, 73482714, 73492710, 73502714, 73512710, 73522714, 73532710, 73542714, 73552710, 73562714, 73572710, 73582714, 73592710, 73602714, 73612710, 73622714, 73632710, 73642714, 73652710, 73662714, 73672710, 73682714, 73692710, 73702714, 73712710, 73722714, 73732710, 73742714, 73752710, 73762714, 73772710, 73782714, 73792710, 73802714, 73812710, 73822714, 73832710, 73842714, 73852710, 73862714, 73872710, 73882714, 73892710, 73902714, 73912710, 73922714]</msg>
<status status="PASS" starttime="20201110 08:38:44.595" endtime="20201110 08:38:44.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.586" endtime="20201110 08:38:44.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.613" endtime="20201110 08:38:44.912"></status>
</kw>
<msg timestamp="20201110 08:38:44.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030388458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.610" endtime="20201110 08:38:44.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019987944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030388458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.916" endtime="20201110 08:38:44.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.924" endtime="20201110 08:38:44.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.605" endtime="20201110 08:38:44.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.601" endtime="20201110 08:38:44.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.951" level="INFO">${RESULT} = {'source_diff': [0, 0.010400514, 0.009971945000000003, 0.009957429999999996, 0.009966792000000002, 0.009958249999999995, 0.009966028000000002, 0.009957694000000003, 0.009965347, 0.009958014000000001, ...</msg>
<status status="PASS" starttime="20201110 08:38:44.927" endtime="20201110 08:38:44.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.956" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:44.955" endtime="20201110 08:38:44.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.958" level="INFO">VALUE: 0.019987944</msg>
<status status="PASS" starttime="20201110 08:38:44.957" endtime="20201110 08:38:44.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.952" endtime="20201110 08:38:44.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.963" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:44.962" endtime="20201110 08:38:44.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.966" level="INFO">VALUE: [0.030388458, 0.040360403, 0.050317833, 0.060284625, 0.070242875, 0.080208903, 0.090166597, 0.100131944, 0.110089958, 0.120055319, 0.130013389, 0.139979347, 0.149936736, 0.159901681, 0.169858569, 0.179823764, 0.189781, 0.199746361, 0.209703792, 0.219669028, 0.229626764, 0.239592375, 0.249550083, 0.259516278, 0.269474556, 0.279439903, 0.289397986, 0.299364222, 0.309322417, 0.31928775, 0.329244861, 0.339209986, 0.349167028, 0.359132167, 0.369089583, 0.379055167, 0.389012708, 0.398978222, 0.408935722, 0.418901042, 0.428858681, 0.438824042, 0.448782403, 0.458747708, 0.468705653, 0.478671681, 0.488629389, 0.498595056, 0.508552694, 0.518517986, 0.528475569, 0.538441097, 0.548398903, 0.558364528, 0.568321611, 0.578287333, 0.588245347, 0.598211569, 0.608169361, 0.618134847, 0.628092333, 0.638058389, 0.648015417, 0.657980361, 0.667937361, 0.677902333, 0.687859236, 0.697824181, 0.707781569, 0.717747056, 0.727705056, 0.737670833, 0.747628542, 0.757593861, 0.767551111, 0.777516181, 0.787473083, 0.797438833, 0.807396792, 0.817362333, 0.827319333, 0.837284181, 0.847241861, 0.857207306, 0.867164625, 0.877129722, 0.887087583, 0.897052875, 0.907010514, 0.916976194, 0.926934264, 0.936899986, 0.946857736, 0.956823056, 0.966780556, 0.976746403, 0.986704347, 0.996670306, 1.006628722, 1.016595264] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:44.964" endtime="20201110 08:38:44.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.959" endtime="20201110 08:38:44.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.969" endtime="20201110 08:38:44.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.972" endtime="20201110 08:38:44.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.970" endtime="20201110 08:38:44.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.967" endtime="20201110 08:38:44.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.402" endtime="20201110 08:38:44.993"></status>
</kw>
<msg timestamp="20201110 08:38:44.993" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.001" endtime="20201110 08:38:47.108"></status>
</kw>
<msg timestamp="20201110 08:38:47.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75523955, 'start-iter': 1, 'wakeups': [75534395, 75544405, 75554401,...</msg>
<status status="PASS" starttime="20201110 08:38:45.000" endtime="20201110 08:38:47.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.115" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75523955, 'start-iter': 1, 'wakeups': [75534395, 75544405, 75554401,...</msg>
<status status="PASS" starttime="20201110 08:38:47.112" endtime="20201110 08:38:47.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.118" endtime="20201110 08:38:47.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.997" endtime="20201110 08:38:47.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.995" endtime="20201110 08:38:47.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.129" level="INFO">${RESULT} = {'timer-count': 10, 'start-iter': 1, 'start-time': 75523955, 'timer-interval': 10000, 'wakeups': [75534395, 75544405, 75554401, 75564406, 75574402, 75584406, 75594402, 75604406, 75614402, 75624406, 75...</msg>
<status status="PASS" starttime="20201110 08:38:47.125" endtime="20201110 08:38:47.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.137" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:47.135" endtime="20201110 08:38:47.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.141" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:47.139" endtime="20201110 08:38:47.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.130" endtime="20201110 08:38:47.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.154" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:47.151" endtime="20201110 08:38:47.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.158" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:47.156" endtime="20201110 08:38:47.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.144" endtime="20201110 08:38:47.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.177" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:47.166" endtime="20201110 08:38:47.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.188" level="INFO">VALUE: 75523955</msg>
<status status="PASS" starttime="20201110 08:38:47.183" endtime="20201110 08:38:47.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.161" endtime="20201110 08:38:47.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.209" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:47.206" endtime="20201110 08:38:47.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.214" level="INFO">VALUE: [75534395, 75544405, 75554401, 75564406, 75574402, 75584406, 75594402, 75604406, 75614402, 75624406, 75634402, 75644406, 75654402, 75664406, 75674402, 75684406, 75694402, 75704406, 75714402, 75724406, 75734402, 75744406, 75754402, 75764406, 75774402, 75784406, 75794402, 75804406, 75814402, 75824406, 75834402, 75844406, 75854402, 75864406, 75874402, 75884406, 75894402, 75904406, 75914402, 75924406, 75934402, 75944406, 75954402, 75964406, 75974402, 75984406, 75994402, 76004406, 76014402, 76024406, 76034402, 76044406, 76054402, 76064406, 76074402, 76084406, 76094402, 76104406, 76114402, 76124406, 76134402, 76144406, 76154402, 76164406, 76174402, 76184406, 76194402, 76204406, 76214402, 76224406, 76234402, 76244406, 76254402, 76264406, 76274402, 76284406, 76294402, 76304406, 76314402, 76324406, 76334402, 76344406, 76354402, 76364406, 76374402, 76384406, 76394402, 76404406, 76414402, 76424406, 76434402, 76444406, 76454402, 76464406, 76474402, 76484406, 76494402, 76504406, 76514402, 76524406]</msg>
<status status="PASS" starttime="20201110 08:38:47.212" endtime="20201110 08:38:47.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.198" endtime="20201110 08:38:47.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.230" endtime="20201110 08:38:47.525"></status>
</kw>
<msg timestamp="20201110 08:38:47.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030725125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.226" endtime="20201110 08:38:47.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030725125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.529" endtime="20201110 08:38:47.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.536" endtime="20201110 08:38:47.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.221" endtime="20201110 08:38:47.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.217" endtime="20201110 08:38:47.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.563" level="INFO">${RESULT} = {'source_diff': [0, 0.010400318999999998, 0.009972486000000003, 0.009958042, 0.009967318999999995, 0.009958431000000004, 0.009966264000000002, 0.009958986000000003, 0.009966860999999994, 0.00995894399...</msg>
<status status="PASS" starttime="20201110 08:38:47.540" endtime="20201110 08:38:47.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.568" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:38:47.567" endtime="20201110 08:38:47.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.570" level="INFO">VALUE: 0.020324806</msg>
<status status="PASS" starttime="20201110 08:38:47.569" endtime="20201110 08:38:47.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.564" endtime="20201110 08:38:47.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.575" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:47.574" endtime="20201110 08:38:47.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.577" level="INFO">VALUE: [0.030725125, 0.040697611, 0.050655653, 0.060622972, 0.070581403, 0.080547667, 0.090506653, 0.100473514, 0.110432458, 0.120398417, 0.130356389, 0.140322736, 0.150281569, 0.160248097, 0.170206542, 0.180173528, 0.190131931, 0.200098319, 0.210056569, 0.220022597, 0.229980569, 0.239946014, 0.249903833, 0.2598695, 0.269827694, 0.279793681, 0.289752264, 0.299718528, 0.309676986, 0.31964375, 0.329602264, 0.339568083, 0.349525778, 0.359491903, 0.369449556, 0.379415597, 0.389373944, 0.399340431, 0.409298556, 0.419263736, 0.429221444, 0.439187264, 0.449145389, 0.459111861, 0.469070611, 0.479036861, 0.488995542, 0.498962, 0.508920417, 0.518887111, 0.528845792, 0.538812806, 0.548772208, 0.558739528, 0.568698931, 0.578666069, 0.588625222, 0.598591917, 0.608551167, 0.618518028, 0.628477153, 0.638444194, 0.64840325, 0.658370306, 0.668329292, 0.678296347, 0.688255569, 0.698223361, 0.708182375, 0.718149042, 0.728108819, 0.738076139, 0.748035278, 0.758002556, 0.767962431, 0.777929597, 0.78788875, 0.797855597, 0.807814, 0.817780167, 0.827739208, 0.837706097, 0.847665431, 0.857632889, 0.867592431, 0.877559569, 0.887518153, 0.897484611, 0.907443792, 0.917411333, 0.927370917, 0.937338208, 0.947297958, 0.957265292, 0.967223681, 0.977190389, 0.987149403, 0.997115958, 1.007074569, 1.017041] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:47.576" endtime="20201110 08:38:47.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.571" endtime="20201110 08:38:47.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.581" endtime="20201110 08:38:47.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.584" endtime="20201110 08:38:47.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.583" endtime="20201110 08:38:47.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.579" endtime="20201110 08:38:47.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.994" endtime="20201110 08:38:47.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.814" endtime="20201110 08:38:47.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.813" endtime="20201110 08:38:47.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.122" endtime="20201110 08:38:47.606"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:30.053" endtime="20201110 08:38:47.606" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:28.523" endtime="20201110 08:38:47.609"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="FAIL" starttime="20201110 08:36:08.195" endtime="20201110 08:38:47.624"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="1">Critical Tests</stat>
<stat pass="11" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="11" fail="1">APP_tests_ztimer_benchmarks</stat>
<stat pass="11" fail="1">BOARD_saml10-xpro</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="11" fail="1" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="1" fail="1" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
