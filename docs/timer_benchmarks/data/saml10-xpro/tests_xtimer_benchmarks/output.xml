<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:32:45.298" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.913" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:45.922" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:47.053" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:45.912" endtime="20201110 08:32:47.054"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.056" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:47.055" endtime="20201110 08:32:47.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.910" endtime="20201110 08:32:47.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:47.059" endtime="20201110 08:32:47.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.058" endtime="20201110 08:32:47.287"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.300" endtime="20201110 08:32:47.312"></status>
</kw>
<msg timestamp="20201110 08:32:47.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.298" endtime="20201110 08:32:47.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.314" endtime="20201110 08:32:47.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.318" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:47.316" endtime="20201110 08:32:47.319"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:47.296" endtime="20201110 08:32:47.319"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:47.293" endtime="20201110 08:32:47.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.292" endtime="20201110 08:32:47.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:47.324" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:47.323" endtime="20201110 08:32:47.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.321" endtime="20201110 08:32:47.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.291" endtime="20201110 08:32:47.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.291" endtime="20201110 08:32:47.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.326" endtime="20201110 08:32:47.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.289" endtime="20201110 08:32:47.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.329" endtime="20201110 08:32:47.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.288" endtime="20201110 08:32:47.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.908" endtime="20201110 08:32:47.331"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:47.337" endtime="20201110 08:32:47.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.336" endtime="20201110 08:32:47.357"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.371" endtime="20201110 08:32:47.383"></status>
</kw>
<msg timestamp="20201110 08:32:47.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.369" endtime="20201110 08:32:47.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.385" endtime="20201110 08:32:47.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:47.387" endtime="20201110 08:32:47.390"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:47.367" endtime="20201110 08:32:47.390"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:47.364" endtime="20201110 08:32:47.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.362" endtime="20201110 08:32:47.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:47.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:47.394" endtime="20201110 08:32:47.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.392" endtime="20201110 08:32:47.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.362" endtime="20201110 08:32:47.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.361" endtime="20201110 08:32:47.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.396" endtime="20201110 08:32:47.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.360" endtime="20201110 08:32:47.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.358" endtime="20201110 08:32:47.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.335" endtime="20201110 08:32:47.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.407" endtime="20201110 08:32:47.415"></status>
</kw>
<msg timestamp="20201110 08:32:47.416" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.404" endtime="20201110 08:32:47.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.418" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.417" endtime="20201110 08:32:47.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.419" endtime="20201110 08:32:47.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.401" endtime="20201110 08:32:47.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.400" endtime="20201110 08:32:47.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.425" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:32:47.424" endtime="20201110 08:32:47.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.427" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:32:47.426" endtime="20201110 08:32:47.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.422" endtime="20201110 08:32:47.428"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:47.332" endtime="20201110 08:32:47.429" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:45.439" endtime="20201110 08:32:47.431"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.481" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:47.490" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:48.684" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:47.480" endtime="20201110 08:32:48.686"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.691" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:32:48.688" endtime="20201110 08:32:48.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.479" endtime="20201110 08:32:48.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.697" endtime="20201110 08:32:48.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.694" endtime="20201110 08:32:48.919"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.931" endtime="20201110 08:32:48.943"></status>
</kw>
<msg timestamp="20201110 08:32:48.944" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.930" endtime="20201110 08:32:48.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.946" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.945" endtime="20201110 08:32:48.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:48.949" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:48.948" endtime="20201110 08:32:48.950"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.927" endtime="20201110 08:32:48.950"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.925" endtime="20201110 08:32:48.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.924" endtime="20201110 08:32:48.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:48.955" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:48.954" endtime="20201110 08:32:48.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.952" endtime="20201110 08:32:48.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.923" endtime="20201110 08:32:48.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.922" endtime="20201110 08:32:48.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.957" endtime="20201110 08:32:48.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.921" endtime="20201110 08:32:48.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:48.959" endtime="20201110 08:32:48.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.920" endtime="20201110 08:32:48.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.478" endtime="20201110 08:32:48.962"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:48.968" endtime="20201110 08:32:48.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.966" endtime="20201110 08:32:48.988"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.001" endtime="20201110 08:32:49.013"></status>
</kw>
<msg timestamp="20201110 08:32:49.013" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:48.999" endtime="20201110 08:32:49.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.015" endtime="20201110 08:32:49.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.019" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:49.017" endtime="20201110 08:32:49.020"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.997" endtime="20201110 08:32:49.020"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:48.994" endtime="20201110 08:32:49.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.993" endtime="20201110 08:32:49.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:49.025" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:49.024" endtime="20201110 08:32:49.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.022" endtime="20201110 08:32:49.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.992" endtime="20201110 08:32:49.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.992" endtime="20201110 08:32:49.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.026" endtime="20201110 08:32:49.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.990" endtime="20201110 08:32:49.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.989" endtime="20201110 08:32:49.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:48.964" endtime="20201110 08:32:49.029"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:49.031" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.039" endtime="20201110 08:32:49.049"></status>
</kw>
<msg timestamp="20201110 08:32:49.049" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.037" endtime="20201110 08:32:49.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.050" endtime="20201110 08:32:49.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.053" endtime="20201110 08:32:49.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.034" endtime="20201110 08:32:49.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.033" endtime="20201110 08:32:49.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.062" endtime="20201110 08:32:49.359"></status>
</kw>
<msg timestamp="20201110 08:32:49.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061664875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061666056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.060" endtime="20201110 08:32:49.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061664875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061666056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.364" endtime="20201110 08:32:49.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.374" endtime="20201110 08:32:49.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.058" endtime="20201110 08:32:49.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.056" endtime="20201110 08:32:49.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.383" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:49.381" endtime="20201110 08:32:49.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.390" level="INFO">VALUE: [{'time': 0.061664875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061666056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999959353e-06, 'source_diff': 1.1809999999959353e-06}, {'time': 0.061692458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6402000000001757e-05, 'source_diff': 2.6402000000001757e-05}, {'time': 0.061693403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.061712444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.904099999999742e-05, 'source_diff': 1.904099999999742e-05}, {'time': 0.061713389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.06173275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936100000000246e-05, 'source_diff': 1.936100000000246e-05}, {'time': 0.061733681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.061750583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6901999999999195e-05, 'source_diff': 1.6901999999999195e-05}, {'time': 0.061751486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000034843e-07, 'source_diff': 9.030000000034843e-07}, {'time': 0.061766486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.061767431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999952552e-07, 'source_diff': 9.449999999952552e-07}, {'time': 0.061796444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9013000000001343e-05, 'source_diff': 2.9013000000001343e-05}, {'time': 0.061797389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.061822667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5277999999996636e-05, 'source_diff': 2.5277999999996636e-05}, {'time': 0.061823597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.061834861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.061835792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.061866069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277000000002163e-05, 'source_diff': 3.0277000000002163e-05}, {'time': 0.061866986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999961154e-07, 'source_diff': 9.169999999961154e-07}, {'time': 0.061889778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.061890722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.061915056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4334000000000855e-05, 'source_diff': 2.4334000000000855e-05}, {'time': 0.061916, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.439999999957815e-07, 'source_diff': 9.439999999957815e-07}, {'time': 0.061944722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8722000000001857e-05, 'source_diff': 2.8722000000001857e-05}, {'time': 0.061945639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999961154e-07, 'source_diff': 9.169999999961154e-07}, {'time': 0.061960639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.061961569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.061980014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.844499999999888e-05, 'source_diff': 1.844499999999888e-05}, {'time': 0.061981028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.062010278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.062011208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062038667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.745900000000051e-05, 'source_diff': 2.745900000000051e-05}, {'time': 0.062039611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.062051819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2207999999999664e-05, 'source_diff': 1.2207999999999664e-05}, {'time': 0.062052736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999961154e-07, 'source_diff': 9.169999999961154e-07}, {'time': 0.062068375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5639000000004788e-05, 'source_diff': 1.5639000000004788e-05}, {'time': 0.062069306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062098347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9041000000000483e-05, 'source_diff': 2.9041000000000483e-05}, {'time': 0.062099264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.06211925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9985999999999615e-05, 'source_diff': 1.9985999999999615e-05}, {'time': 0.062120181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062143292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.311100000000621e-05, 'source_diff': 2.311100000000621e-05}, {'time': 0.062144236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.439999999957815e-07, 'source_diff': 9.439999999957815e-07}, {'time': 0.062155486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000004312e-05, 'source_diff': 1.1250000000004312e-05}, {'time': 0.062156431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999952552e-07, 'source_diff': 9.449999999952552e-07}, {'time': 0.062180778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.434700000000095e-05, 'source_diff': 2.434700000000095e-05}, {'time': 0.062181708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.062204514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2806000000000215e-05, 'source_diff': 2.2806000000000215e-05}, {'time': 0.062205444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062218569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.0622195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062230778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.062231708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062251097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.93890000000016e-05, 'source_diff': 1.93890000000016e-05}, {'time': 0.062252014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.062272347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.033299999999738e-05, 'source_diff': 2.033299999999738e-05}, {'time': 0.062273264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.062303819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.055500000000155e-05, 'source_diff': 3.055500000000155e-05}, {'time': 0.06230475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062330042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5292000000003145e-05, 'source_diff': 2.5292000000003145e-05}, {'time': 0.062330972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062344417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.062345375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.06237375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8374999999997152e-05, 'source_diff': 2.8374999999997152e-05}, {'time': 0.062374694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.062386264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1569999999995473e-05, 'source_diff': 1.1569999999995473e-05}, {'time': 0.062387208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.062415597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.838900000000366e-05, 'source_diff': 2.838900000000366e-05}, {'time': 0.062416583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999944913e-07, 'source_diff': 9.859999999944913e-07}, {'time': 0.062442444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.586100000000202e-05, 'source_diff': 2.586100000000202e-05}, {'time': 0.062443375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.062472708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.062473639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.0624905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.062491444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.062519542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8097999999997236e-05, 'source_diff': 2.8097999999997236e-05}, {'time': 0.062520472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062534833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000004398e-05, 'source_diff': 1.4361000000004398e-05}, {'time': 0.062535792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.590000000087029e-07, 'source_diff': 9.590000000087029e-07}, {'time': 0.062561681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5888999999987283e-05, 'source_diff': 2.5888999999987283e-05}, {'time': 0.062562611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000100894e-07, 'source_diff': 9.300000000100894e-07}, {'time': 0.062581361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.062582292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062598847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.655500000000143e-05, 'source_diff': 1.655500000000143e-05}, {'time': 0.062599792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.062623514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3722000000003796e-05, 'source_diff': 2.3722000000003796e-05}, {'time': 0.062624458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.439999999888427e-07, 'source_diff': 9.439999999888427e-07}, {'time': 0.062654097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.963900000001185e-05, 'source_diff': 2.963900000001185e-05}, {'time': 0.062655014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999891765e-07, 'source_diff': 9.169999999891765e-07}, {'time': 0.062682819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7805000000005742e-05, 'source_diff': 2.7805000000005742e-05}, {'time': 0.062683722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.029999999965455e-07, 'source_diff': 9.029999999965455e-07}, {'time': 0.062706514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000007584e-05, 'source_diff': 2.2792000000007584e-05}, {'time': 0.062707444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999962116e-07, 'source_diff': 9.299999999962116e-07}, {'time': 0.062725875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.062726806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}, {'time': 0.062746167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.93610000000094e-05, 'source_diff': 1.93610000000094e-05}, {'time': 0.062747125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.579999999953515e-07, 'source_diff': 9.579999999953515e-07}, {'time': 0.062767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05969999999972e-05, 'source_diff': 2.05969999999972e-05}, {'time': 0.062768653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999956853e-07, 'source_diff': 9.309999999956853e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:49.384" endtime="20201110 08:32:49.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.378" endtime="20201110 08:32:49.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:49.422" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:49.394" endtime="20201110 08:32:49.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.427" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:49.426" endtime="20201110 08:32:49.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.432" level="INFO">VALUE: {'sourcetime': [0.061664875, 0.061666056, 0.061692458, 0.061693403, 0.061712444, 0.061713389, 0.06173275, 0.061733681, 0.061750583, 0.061751486, 0.061766486, 0.061767431, 0.061796444, 0.061797389, 0.061822667, 0.061823597, 0.061834861, 0.061835792, 0.061866069, 0.061866986, 0.061889778, 0.061890722, 0.061915056, 0.061916, 0.061944722, 0.061945639, 0.061960639, 0.061961569, 0.061980014, 0.061981028, 0.062010278, 0.062011208, 0.062038667, 0.062039611, 0.062051819, 0.062052736, 0.062068375, 0.062069306, 0.062098347, 0.062099264, 0.06211925, 0.062120181, 0.062143292, 0.062144236, 0.062155486, 0.062156431, 0.062180778, 0.062181708, 0.062204514, 0.062205444, 0.062218569, 0.0622195, 0.062230778, 0.062231708, 0.062251097, 0.062252014, 0.062272347, 0.062273264, 0.062303819, 0.06230475, 0.062330042, 0.062330972, 0.062344417, 0.062345375, 0.06237375, 0.062374694, 0.062386264, 0.062387208, 0.062415597, 0.062416583, 0.062442444, 0.062443375, 0.062472708, 0.062473639, 0.0624905, 0.062491444, 0.062519542, 0.062520472, 0.062534833, 0.062535792, 0.062561681, 0.062562611, 0.062581361, 0.062582292, 0.062598847, 0.062599792, 0.062623514, 0.062624458, 0.062654097, 0.062655014, 0.062682819, 0.062683722, 0.062706514, 0.062707444, 0.062725875, 0.062726806, 0.062746167, 0.062747125, 0.062767722, 0.062768653], 'source_diff': [0, 1.1809999999959353e-06, 2.6402000000001757e-05, 9.450000000021941e-07, 1.904099999999742e-05, 9.450000000021941e-07, 1.936100000000246e-05, 9.309999999956853e-07, 1.6901999999999195e-05, 9.030000000034843e-07, 1.5000000000001124e-05, 9.449999999952552e-07, 2.9013000000001343e-05, 9.450000000021941e-07, 2.5277999999996636e-05, 9.300000000031505e-07, 1.1263999999996943e-05, 9.310000000026242e-07, 3.0277000000002163e-05, 9.169999999961154e-07, 2.2792000000000645e-05, 9.440000000027204e-07, 2.4334000000000855e-05, 9.439999999957815e-07, 2.8722000000001857e-05, 9.169999999961154e-07, 1.5000000000001124e-05, 9.300000000031505e-07, 1.844499999999888e-05, 1.01400000000057e-06, 2.9250000000001497e-05, 9.299999999962116e-07, 2.745900000000051e-05, 9.440000000027204e-07, 1.2207999999999664e-05, 9.169999999961154e-07, 1.5639000000004788e-05, 9.309999999956853e-07, 2.9041000000000483e-05, 9.170000000030543e-07, 1.9985999999999615e-05, 9.309999999956853e-07, 2.311100000000621e-05, 9.439999999957815e-07, 1.1250000000004312e-05, 9.449999999952552e-07, 2.434700000000095e-05, 9.300000000031505e-07, 2.2806000000000215e-05, 9.299999999962116e-07, 1.3125000000002718e-05, 9.309999999956853e-07, 1.1278000000003452e-05, 9.299999999962116e-07, 1.93890000000016e-05, 9.170000000030543e-07, 2.033299999999738e-05, 9.170000000030543e-07, 3.055500000000155e-05, 9.309999999956853e-07, 2.5292000000003145e-05, 9.299999999962116e-07, 1.3445000000000817e-05, 9.580000000022904e-07, 2.8374999999997152e-05, 9.440000000027204e-07, 1.1569999999995473e-05, 9.440000000027204e-07, 2.838900000000366e-05, 9.859999999944913e-07, 2.586100000000202e-05, 9.310000000026242e-07, 2.9332999999999443e-05, 9.309999999956853e-07, 1.686099999999996e-05, 9.440000000027204e-07, 2.8097999999997236e-05, 9.299999999962116e-07, 1.4361000000004398e-05, 9.590000000087029e-07, 2.5888999999987283e-05, 9.300000000100894e-07, 1.8749999999997935e-05, 9.309999999956853e-07, 1.655500000000143e-05, 9.450000000021941e-07, 2.3722000000003796e-05, 9.439999999888427e-07, 2.963900000001185e-05, 9.169999999891765e-07, 2.7805000000005742e-05, 9.029999999965455e-07, 2.2792000000007584e-05, 9.299999999962116e-07, 1.843099999999931e-05, 9.309999999956853e-07, 1.93610000000094e-05, 9.579999999953515e-07, 2.05969999999972e-05, 9.309999999956853e-07], 'eventdiff': [0, 1.1809999999959353e-06, 2.6402000000001757e-05, 9.450000000021941e-07, 1.904099999999742e-05, 9.450000000021941e-07, 1.936100000000246e-05, 9.309999999956853e-07, 1.6901999999999195e-05, 9.030000000034843e-07, 1.5000000000001124e-05, 9.449999999952552e-07, 2.9013000000001343e-05, 9.450000000021941e-07, 2.5277999999996636e-05, 9.300000000031505e-07, 1.1263999999996943e-05, 9.310000000026242e-07, 3.0277000000002163e-05, 9.169999999961154e-07, 2.2792000000000645e-05, 9.440000000027204e-07, 2.4334000000000855e-05, 9.439999999957815e-07, 2.8722000000001857e-05, 9.169999999961154e-07, 1.5000000000001124e-05, 9.300000000031505e-07, 1.844499999999888e-05, 1.01400000000057e-06, 2.9250000000001497e-05, 9.299999999962116e-07, 2.745900000000051e-05, 9.440000000027204e-07, 1.2207999999999664e-05, 9.169999999961154e-07, 1.5639000000004788e-05, 9.309999999956853e-07, 2.9041000000000483e-05, 9.170000000030543e-07, 1.9985999999999615e-05, 9.309999999956853e-07, 2.311100000000621e-05, 9.439999999957815e-07, 1.1250000000004312e-05, 9.449999999952552e-07, 2.434700000000095e-05, 9.300000000031505e-07, 2.2806000000000215e-05, 9.299999999962116e-07, 1.3125000000002718e-05, 9.309999999956853e-07, 1.1278000000003452e-05, 9.299999999962116e-07, 1.93890000000016e-05, 9.170000000030543e-07, 2.033299999999738e-05, 9.170000000030543e-07, 3.055500000000155e-05, 9.309999999956853e-07, 2.5292000000003145e-05, 9.299999999962116e-07, 1.3445000000000817e-05, 9.580000000022904e-07, 2.8374999999997152e-05, 9.440000000027204e-07, 1.1569999999995473e-05, 9.440000000027204e-07, 2.838900000000366e-05, 9.859999999944913e-07, 2.586100000000202e-05, 9.310000000026242e-07, 2.9332999999999443e-05, 9.309999999956853e-07, 1.686099999999996e-05, 9.440000000027204e-07, 2.8097999999997236e-05, 9.299999999962116e-07, 1.4361000000004398e-05, 9.590000000087029e-07, 2.5888999999987283e-05, 9.300000000100894e-07, 1.8749999999997935e-05, 9.309999999956853e-07, 1.655500000000143e-05, 9.450000000021941e-07, 2.3722000000003796e-05, 9.439999999888427e-07, 2.963900000001185e-05, 9.169999999891765e-07, 2.7805000000005742e-05, 9.029999999965455e-07, 2.2792000000007584e-05, 9.299999999962116e-07, 1.843099999999931e-05, 9.309999999956853e-07, 1.93610000000094e-05, 9.579999999953515e-07, 2.05969999999972e-05, 9.309999999956853e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:49.429" endtime="20201110 08:32:49.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.423" endtime="20201110 08:32:49.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:49.440" level="INFO">${RESULT} = [{'time': 0.061666056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999959353e-06, 'source_diff': 1.1809999999959353e-06}, {'time': 0.061693403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:49.435" endtime="20201110 08:32:49.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:49.459" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:49.442" endtime="20201110 08:32:49.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.465" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:49.464" endtime="20201110 08:32:49.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.468" level="INFO">VALUE: [1.1809999999959353e-06, 9.450000000021941e-07, 9.450000000021941e-07, 9.309999999956853e-07, 9.030000000034843e-07, 9.449999999952552e-07, 9.450000000021941e-07, 9.300000000031505e-07, 9.310000000026242e-07, 9.169999999961154e-07, 9.440000000027204e-07, 9.439999999957815e-07, 9.169999999961154e-07, 9.300000000031505e-07, 1.01400000000057e-06, 9.299999999962116e-07, 9.440000000027204e-07, 9.169999999961154e-07, 9.309999999956853e-07, 9.170000000030543e-07, 9.309999999956853e-07, 9.439999999957815e-07, 9.449999999952552e-07, 9.300000000031505e-07, 9.299999999962116e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.170000000030543e-07, 9.170000000030543e-07, 9.309999999956853e-07, 9.299999999962116e-07, 9.580000000022904e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.859999999944913e-07, 9.310000000026242e-07, 9.309999999956853e-07, 9.440000000027204e-07, 9.299999999962116e-07, 9.590000000087029e-07, 9.300000000100894e-07, 9.309999999956853e-07, 9.450000000021941e-07, 9.439999999888427e-07, 9.169999999891765e-07, 9.029999999965455e-07, 9.299999999962116e-07, 9.309999999956853e-07, 9.579999999953515e-07, 9.309999999956853e-07]</msg>
<status status="PASS" starttime="20201110 08:32:49.466" endtime="20201110 08:32:49.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.461" endtime="20201110 08:32:49.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.471" endtime="20201110 08:32:49.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:49.474" endtime="20201110 08:32:49.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.472" endtime="20201110 08:32:49.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.469" endtime="20201110 08:32:49.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.032" endtime="20201110 08:32:49.495"></status>
</kw>
<msg timestamp="20201110 08:32:49.495" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.503" endtime="20201110 08:32:49.512"></status>
</kw>
<msg timestamp="20201110 08:32:49.512" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.501" endtime="20201110 08:32:49.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.515" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.513" endtime="20201110 08:32:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.516" endtime="20201110 08:32:49.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.499" endtime="20201110 08:32:49.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.497" endtime="20201110 08:32:49.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.525" endtime="20201110 08:32:49.811"></status>
</kw>
<msg timestamp="20201110 08:32:49.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018588444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.523" endtime="20201110 08:32:49.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018588444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.815" endtime="20201110 08:32:49.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.824" endtime="20201110 08:32:49.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.520" endtime="20201110 08:32:49.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.519" endtime="20201110 08:32:49.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.830" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:49.829" endtime="20201110 08:32:49.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.836" level="INFO">VALUE: [{'time': 0.018587222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018588444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.018613875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.543099999999937e-05, 'source_diff': 2.543099999999937e-05}, {'time': 0.018614806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018642917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8110999999997333e-05, 'source_diff': 2.8110999999997333e-05}, {'time': 0.018643833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018655417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1584000000001982e-05, 'source_diff': 1.1584000000001982e-05}, {'time': 0.018656361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018682861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6499999999998747e-05, 'source_diff': 2.6499999999998747e-05}, {'time': 0.018683806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018698806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999997654e-05, 'source_diff': 1.4999999999997654e-05}, {'time': 0.018699764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.018711014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.018711958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018731333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.937499999999856e-05, 'source_diff': 1.937499999999856e-05}, {'time': 0.018732264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018744778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018745694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018763208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7513999999999724e-05, 'source_diff': 1.7513999999999724e-05}, {'time': 0.018764139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018794083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9944000000000498e-05, 'source_diff': 2.9944000000000498e-05}, {'time': 0.018795028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018809403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018810333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018832542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.22090000000022e-05, 'source_diff': 2.22090000000022e-05}, {'time': 0.018833458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018859042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5583999999998636e-05, 'source_diff': 2.5583999999998636e-05}, {'time': 0.018859958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018888361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.018889292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018915806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6514000000001786e-05, 'source_diff': 2.6514000000001786e-05}, {'time': 0.01891675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018931458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4708000000002164e-05, 'source_diff': 1.4708000000002164e-05}, {'time': 0.018932375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018957653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.018958611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018976403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7791999999999114e-05, 'source_diff': 1.7791999999999114e-05}, {'time': 0.018977347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018992667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5320000000002693e-05, 'source_diff': 1.5320000000002693e-05}, {'time': 0.018993583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019015764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.218099999999959e-05, 'source_diff': 2.218099999999959e-05}, {'time': 0.019016694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019042903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.620899999999926e-05, 'source_diff': 2.620899999999926e-05}, {'time': 0.019043833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019056361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019057292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019085097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7804999999998803e-05, 'source_diff': 2.7804999999998803e-05}, {'time': 0.019086014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019097597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583000000002508e-05, 'source_diff': 1.1583000000002508e-05}, {'time': 0.019098556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019129097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.054100000000198e-05, 'source_diff': 3.054100000000198e-05}, {'time': 0.019130028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019155611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.019156556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019168125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.019169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019181889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.019182833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019213083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0249999999999028e-05, 'source_diff': 3.0249999999999028e-05}, {'time': 0.019214028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019226222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019227167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019244056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.019244986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019272431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.744500000000094e-05, 'source_diff': 2.744500000000094e-05}, {'time': 0.019273361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019295222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186100000000149e-05, 'source_diff': 2.186100000000149e-05}, {'time': 0.019296153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019307056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.019308069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.019334458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.638899999999819e-05, 'source_diff': 2.638899999999819e-05}, {'time': 0.019335403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019348889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.019349778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019374417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.463899999999991e-05, 'source_diff': 2.463899999999991e-05}, {'time': 0.019375375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019405625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0249999999999028e-05, 'source_diff': 3.0249999999999028e-05}, {'time': 0.019406556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019435875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.019436819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019460597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3777999999998606e-05, 'source_diff': 2.3777999999998606e-05}, {'time': 0.019461472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.019480208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8735999999998365e-05, 'source_diff': 1.8735999999998365e-05}, {'time': 0.019481139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019493681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2541999999997333e-05, 'source_diff': 1.2541999999997333e-05}, {'time': 0.019494597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019518944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.434700000000095e-05, 'source_diff': 2.434700000000095e-05}, {'time': 0.019519889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019543306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.341700000000127e-05, 'source_diff': 2.341700000000127e-05}, {'time': 0.019544236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019569819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.019570764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019583583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.019584528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019613847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.019614792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019627917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3125000000002718e-05, 'source_diff': 1.3125000000002718e-05}, {'time': 0.019628875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019657944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9068999999999623e-05, 'source_diff': 2.9068999999999623e-05}, {'time': 0.019658833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:49.831" endtime="20201110 08:32:49.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.827" endtime="20201110 08:32:49.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:49.862" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:49.838" endtime="20201110 08:32:49.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.866" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:49.865" endtime="20201110 08:32:49.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.870" level="INFO">VALUE: {'sourcetime': [0.018587222, 0.018588444, 0.018613875, 0.018614806, 0.018642917, 0.018643833, 0.018655417, 0.018656361, 0.018682861, 0.018683806, 0.018698806, 0.018699764, 0.018711014, 0.018711958, 0.018731333, 0.018732264, 0.018744778, 0.018745694, 0.018763208, 0.018764139, 0.018794083, 0.018795028, 0.018809403, 0.018810333, 0.018832542, 0.018833458, 0.018859042, 0.018859958, 0.018888361, 0.018889292, 0.018915806, 0.01891675, 0.018931458, 0.018932375, 0.018957653, 0.018958611, 0.018976403, 0.018977347, 0.018992667, 0.018993583, 0.019015764, 0.019016694, 0.019042903, 0.019043833, 0.019056361, 0.019057292, 0.019085097, 0.019086014, 0.019097597, 0.019098556, 0.019129097, 0.019130028, 0.019155611, 0.019156556, 0.019168125, 0.019169069, 0.019181889, 0.019182833, 0.019213083, 0.019214028, 0.019226222, 0.019227167, 0.019244056, 0.019244986, 0.019272431, 0.019273361, 0.019295222, 0.019296153, 0.019307056, 0.019308069, 0.019334458, 0.019335403, 0.019348889, 0.019349778, 0.019374417, 0.019375375, 0.019405625, 0.019406556, 0.019435875, 0.019436819, 0.019460597, 0.019461472, 0.019480208, 0.019481139, 0.019493681, 0.019494597, 0.019518944, 0.019519889, 0.019543306, 0.019544236, 0.019569819, 0.019570764, 0.019583583, 0.019584528, 0.019613847, 0.019614792, 0.019627917, 0.019628875, 0.019657944, 0.019658833], 'source_diff': [0, 1.2219999999986408e-06, 2.543099999999937e-05, 9.310000000026242e-07, 2.8110999999997333e-05, 9.160000000001112e-07, 1.1584000000001982e-05, 9.43999999999251e-07, 2.6499999999998747e-05, 9.450000000021941e-07, 1.4999999999997654e-05, 9.580000000022904e-07, 1.1250000000000843e-05, 9.43999999999251e-07, 1.937499999999856e-05, 9.309999999991547e-07, 1.2514000000001663e-05, 9.160000000001112e-07, 1.7513999999999724e-05, 9.309999999991547e-07, 2.9944000000000498e-05, 9.449999999987246e-07, 1.4375000000000498e-05, 9.299999999996811e-07, 2.22090000000022e-05, 9.160000000001112e-07, 2.5583999999998636e-05, 9.160000000001112e-07, 2.8402999999999762e-05, 9.309999999991547e-07, 2.6514000000001786e-05, 9.43999999999251e-07, 1.4708000000002164e-05, 9.169999999995848e-07, 2.5278000000000106e-05, 9.57999999998821e-07, 1.7791999999999114e-05, 9.43999999999251e-07, 1.5320000000002693e-05, 9.160000000001112e-07, 2.218099999999959e-05, 9.299999999996811e-07, 2.620899999999926e-05, 9.299999999996811e-07, 1.2528000000001233e-05, 9.309999999991547e-07, 2.7804999999998803e-05, 9.169999999995848e-07, 1.1583000000002508e-05, 9.589999999982945e-07, 3.054100000000198e-05, 9.309999999991547e-07, 2.5582999999999162e-05, 9.450000000021941e-07, 1.1568999999999469e-05, 9.43999999999251e-07, 1.2820000000000192e-05, 9.43999999999251e-07, 3.0249999999999028e-05, 9.450000000021941e-07, 1.2194000000000094e-05, 9.449999999987246e-07, 1.68889999999991e-05, 9.299999999996811e-07, 2.744500000000094e-05, 9.299999999996811e-07, 2.186100000000149e-05, 9.309999999991547e-07, 1.0902999999999607e-05, 1.0130000000010964e-06, 2.638899999999819e-05, 9.450000000021941e-07, 1.3486000000000054e-05, 8.89000000000445e-07, 2.463899999999991e-05, 9.57999999998821e-07, 3.0249999999999028e-05, 9.309999999991547e-07, 2.9318999999999873e-05, 9.440000000027204e-07, 2.3777999999998606e-05, 8.750000000008751e-07, 1.8735999999998365e-05, 9.310000000026242e-07, 1.2541999999997333e-05, 9.160000000001112e-07, 2.434700000000095e-05, 9.449999999987246e-07, 2.341700000000127e-05, 9.299999999996811e-07, 2.5582999999999162e-05, 9.450000000021941e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.449999999987246e-07, 1.3125000000002718e-05, 9.57999999998821e-07, 2.9068999999999623e-05, 8.89000000000445e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 1.2219999999986408e-06, 2.543099999999937e-05, 9.310000000026242e-07, 2.8110999999997333e-05, 9.160000000001112e-07, 1.1584000000001982e-05, 9.43999999999251e-07, 2.6499999999998747e-05, 9.450000000021941e-07, 1.4999999999997654e-05, 9.580000000022904e-07, 1.1250000000000843e-05, 9.43999999999251e-07, 1.937499999999856e-05, 9.309999999991547e-07, 1.2514000000001663e-05, 9.160000000001112e-07, 1.7513999999999724e-05, 9.309999999991547e-07, 2.9944000000000498e-05, 9.449999999987246e-07, 1.4375000000000498e-05, 9.299999999996811e-07, 2.22090000000022e-05, 9.160000000001112e-07, 2.5583999999998636e-05, 9.160000000001112e-07, 2.8402999999999762e-05, 9.309999999991547e-07, 2.6514000000001786e-05, 9.43999999999251e-07, 1.4708000000002164e-05, 9.169999999995848e-07, 2.5278000000000106e-05, 9.57999999998821e-07, 1.7791999999999114e-05, 9.43999999999251e-07, 1.5320000000002693e-05, 9.160000000001112e-07, 2.218099999999959e-05, 9.299999999996811e-07, 2.620899999999926e-05, 9.299999999996811e-07, 1.2528000000001233e-05, 9.309999999991547e-07, 2.7804999999998803e-05, 9.169999999995848e-07, 1.1583000000002508e-05, 9.589999999982945e-07, 3.054100000000198e-05, 9.309999999991547e-07, 2.5582999999999162e-05, 9.450000000021941e-07, 1.1568999999999469e-05, 9.43999999999251e-07, 1.2820000000000192e-05, 9.43999999999251e-07, 3.0249999999999028e-05, 9.450000000021941e-07, 1.2194000000000094e-05, 9.449999999987246e-07, 1.68889999999991e-05, 9.299999999996811e-07, 2.744500000000094e-05, 9.299999999996811e-07, 2.186100000000149e-05, 9.309999999991547e-07, 1.0902999999999607e-05, 1.0130000000010964e-06, 2.638899999999819e-05, 9.450000000021941e-07, 1.3486000000000054e-05, 8.89000000000445e-07, 2.463899999999991e-05, 9.57999999998821e-07, 3.0249999999999028e-05, 9.309999999991547e-07, 2.9318999999999873e-05, 9.440000000027204e-07, 2.3777999999998606e-05, 8.750000000008751e-07, 1.8735999999998365e-05, 9.310000000026242e-07, 1.2541999999997333e-05, 9.160000000001112e-07, 2.434700000000095e-05, 9.449999999987246e-07, 2.341700000000127e-05, 9.299999999996811e-07, 2.5582999999999162e-05, 9.450000000021941e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.449999999987246e-07, 1.3125000000002718e-05, 9.57999999998821e-07, 2.9068999999999623e-05, 8.89000000000445e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:49.867" endtime="20201110 08:32:49.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.863" endtime="20201110 08:32:49.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:49.876" level="INFO">${RESULT} = [{'time': 0.018588444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2219999999986408e-06, 'source_diff': 1.2219999999986408e-06}, {'time': 0.018614806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:49.872" endtime="20201110 08:32:49.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:49.889" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:49.877" endtime="20201110 08:32:49.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.893" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:49.892" endtime="20201110 08:32:49.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.896" level="INFO">VALUE: [1.2219999999986408e-06, 9.310000000026242e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.580000000022904e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.57999999998821e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.589999999982945e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 1.0130000000010964e-06, 9.450000000021941e-07, 8.89000000000445e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.440000000027204e-07, 8.750000000008751e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.57999999998821e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201110 08:32:49.895" endtime="20201110 08:32:49.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.890" endtime="20201110 08:32:49.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.900" endtime="20201110 08:32:49.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:49.903" endtime="20201110 08:32:49.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.902" endtime="20201110 08:32:49.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.898" endtime="20201110 08:32:49.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.496" endtime="20201110 08:32:49.924"></status>
</kw>
<msg timestamp="20201110 08:32:49.925" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.932" endtime="20201110 08:32:49.941"></status>
</kw>
<msg timestamp="20201110 08:32:49.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.931" endtime="20201110 08:32:49.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:49.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:49.943" endtime="20201110 08:32:49.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.945" endtime="20201110 08:32:49.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.928" endtime="20201110 08:32:49.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.926" endtime="20201110 08:32:49.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:49.955" endtime="20201110 08:32:50.242"></status>
</kw>
<msg timestamp="20201110 08:32:50.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018599486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:49.953" endtime="20201110 08:32:50.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018599486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.246" endtime="20201110 08:32:50.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.255" endtime="20201110 08:32:50.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.951" endtime="20201110 08:32:50.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.949" endtime="20201110 08:32:50.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.261" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:50.260" endtime="20201110 08:32:50.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.267" level="INFO">VALUE: [{'time': 0.018598306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018599486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018623958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4472000000001076e-05, 'source_diff': 2.4472000000001076e-05}, {'time': 0.018624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018644236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936100000000246e-05, 'source_diff': 1.936100000000246e-05}, {'time': 0.018645181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018665778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.018666722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.0186895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2778000000001075e-05, 'source_diff': 2.2778000000001075e-05}, {'time': 0.018690444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018716986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6542000000000926e-05, 'source_diff': 2.6542000000000926e-05}, {'time': 0.018717903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018734514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.661099999999971e-05, 'source_diff': 1.661099999999971e-05}, {'time': 0.018735431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018761611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6180000000000647e-05, 'source_diff': 2.6180000000000647e-05}, {'time': 0.018762569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018773444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.018774389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018804583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0194000000000748e-05, 'source_diff': 3.0194000000000748e-05}, {'time': 0.018805528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018820208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4680000000003024e-05, 'source_diff': 1.4680000000003024e-05}, {'time': 0.018821139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018840514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.937499999999856e-05, 'source_diff': 1.937499999999856e-05}, {'time': 0.0188415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018869528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8027999999999387e-05, 'source_diff': 2.8027999999999387e-05}, {'time': 0.018870486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018890472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9985999999999615e-05, 'source_diff': 1.9985999999999615e-05}, {'time': 0.018891389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.01890675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.536099999999846e-05, 'source_diff': 1.536099999999846e-05}, {'time': 0.018907667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018933931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6264000000001536e-05, 'source_diff': 2.6264000000001536e-05}, {'time': 0.018934792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609999999978357e-07, 'source_diff': 8.609999999978357e-07}, {'time': 0.018949792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000001124e-05, 'source_diff': 1.5000000000001124e-05}, {'time': 0.01895075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018975083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.433300000000138e-05, 'source_diff': 2.433300000000138e-05}, {'time': 0.018976014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018989153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.018990097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.01901475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.019015694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019040972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.019041917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019065625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3708000000000756e-05, 'source_diff': 2.3708000000000756e-05}, {'time': 0.019066569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019087486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.091700000000224e-05, 'source_diff': 2.091700000000224e-05}, {'time': 0.019088417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019113708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5291000000000202e-05, 'source_diff': 2.5291000000000202e-05}, {'time': 0.019114653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019142097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7444000000001467e-05, 'source_diff': 2.7444000000001467e-05}, {'time': 0.019143042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019172361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.019173306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019194847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.154099999999992e-05, 'source_diff': 2.154099999999992e-05}, {'time': 0.019195778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019224792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.019225736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019243861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.812500000000078e-05, 'source_diff': 1.812500000000078e-05}, {'time': 0.019244778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019267569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2790999999997702e-05, 'source_diff': 2.2790999999997702e-05}, {'time': 0.019268528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019286319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.779099999999964e-05, 'source_diff': 1.779099999999964e-05}, {'time': 0.019287264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019316028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.019316903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.019339056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.215300000000045e-05, 'source_diff': 2.215300000000045e-05}, {'time': 0.019340056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019351889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1832999999999289e-05, 'source_diff': 1.1832999999999289e-05}, {'time': 0.019352833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019364097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019365056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019381597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.654100000000186e-05, 'source_diff': 1.654100000000186e-05}, {'time': 0.019382528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019405042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2514000000001255e-05, 'source_diff': 2.2514000000001255e-05}, {'time': 0.019405944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.019436222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.019437167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019463056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.588899999999769e-05, 'source_diff': 2.588899999999769e-05}, {'time': 0.019463986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019483667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.968100000000056e-05, 'source_diff': 1.968100000000056e-05}, {'time': 0.019484611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019507125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2514000000001255e-05, 'source_diff': 2.2514000000001255e-05}, {'time': 0.019508028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019531111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.308300000000013e-05, 'source_diff': 2.308300000000013e-05}, {'time': 0.019532042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019552056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0014000000002224e-05, 'source_diff': 2.0014000000002224e-05}, {'time': 0.019553, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019581361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8360999999997583e-05, 'source_diff': 2.8360999999997583e-05}, {'time': 0.019582306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019602917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019603847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019618847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999997654e-05, 'source_diff': 1.4999999999997654e-05}, {'time': 0.019619778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019636347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.656899999999753e-05, 'source_diff': 1.656899999999753e-05}, {'time': 0.019637278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019649792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019650736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019680694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9958000000000068e-05, 'source_diff': 2.9958000000000068e-05}, {'time': 0.019681611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.019700972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936099999999899e-05, 'source_diff': 1.936099999999899e-05}, {'time': 0.019701917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:50.263" endtime="20201110 08:32:50.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.258" endtime="20201110 08:32:50.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:50.292" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:50.269" endtime="20201110 08:32:50.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.296" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:50.295" endtime="20201110 08:32:50.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.301" level="INFO">VALUE: {'sourcetime': [0.018598306, 0.018599486, 0.018623958, 0.018624875, 0.018644236, 0.018645181, 0.018665778, 0.018666722, 0.0186895, 0.018690444, 0.018716986, 0.018717903, 0.018734514, 0.018735431, 0.018761611, 0.018762569, 0.018773444, 0.018774389, 0.018804583, 0.018805528, 0.018820208, 0.018821139, 0.018840514, 0.0188415, 0.018869528, 0.018870486, 0.018890472, 0.018891389, 0.01890675, 0.018907667, 0.018933931, 0.018934792, 0.018949792, 0.01895075, 0.018975083, 0.018976014, 0.018989153, 0.018990097, 0.01901475, 0.019015694, 0.019040972, 0.019041917, 0.019065625, 0.019066569, 0.019087486, 0.019088417, 0.019113708, 0.019114653, 0.019142097, 0.019143042, 0.019172361, 0.019173306, 0.019194847, 0.019195778, 0.019224792, 0.019225736, 0.019243861, 0.019244778, 0.019267569, 0.019268528, 0.019286319, 0.019287264, 0.019316028, 0.019316903, 0.019339056, 0.019340056, 0.019351889, 0.019352833, 0.019364097, 0.019365056, 0.019381597, 0.019382528, 0.019405042, 0.019405944, 0.019436222, 0.019437167, 0.019463056, 0.019463986, 0.019483667, 0.019484611, 0.019507125, 0.019508028, 0.019531111, 0.019532042, 0.019552056, 0.019553, 0.019581361, 0.019582306, 0.019602917, 0.019603847, 0.019618847, 0.019619778, 0.019636347, 0.019637278, 0.019649792, 0.019650736, 0.019680694, 0.019681611, 0.019700972, 0.019701917], 'source_diff': [0, 1.179999999999931e-06, 2.4472000000001076e-05, 9.169999999995848e-07, 1.936100000000246e-05, 9.449999999987246e-07, 2.059700000000067e-05, 9.43999999999251e-07, 2.2778000000001075e-05, 9.43999999999251e-07, 2.6542000000000926e-05, 9.169999999995848e-07, 1.661099999999971e-05, 9.169999999995848e-07, 2.6180000000000647e-05, 9.57999999998821e-07, 1.0875000000000468e-05, 9.449999999987246e-07, 3.0194000000000748e-05, 9.449999999987246e-07, 1.4680000000003024e-05, 9.309999999991547e-07, 1.937499999999856e-05, 9.860000000014302e-07, 2.8027999999999387e-05, 9.57999999998821e-07, 1.9985999999999615e-05, 9.170000000030543e-07, 1.536099999999846e-05, 9.169999999995848e-07, 2.6264000000001536e-05, 8.609999999978357e-07, 1.5000000000001124e-05, 9.57999999998821e-07, 2.433300000000138e-05, 9.309999999991547e-07, 1.3139000000002288e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.43999999999251e-07, 2.5278000000000106e-05, 9.449999999987246e-07, 2.3708000000000756e-05, 9.43999999999251e-07, 2.091700000000224e-05, 9.309999999991547e-07, 2.5291000000000202e-05, 9.449999999987246e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.450000000021941e-07, 2.154099999999992e-05, 9.309999999991547e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 1.812500000000078e-05, 9.169999999995848e-07, 2.2790999999997702e-05, 9.59000000001764e-07, 1.779099999999964e-05, 9.449999999987246e-07, 2.8764000000000567e-05, 8.750000000008751e-07, 2.215300000000045e-05, 1.000000000001e-06, 1.1832999999999289e-05, 9.43999999999251e-07, 1.1264000000000413e-05, 9.589999999982945e-07, 1.654100000000186e-05, 9.309999999991547e-07, 2.2514000000001255e-05, 9.020000000005413e-07, 3.0277999999998167e-05, 9.450000000021941e-07, 2.588899999999769e-05, 9.299999999996811e-07, 1.968100000000056e-05, 9.43999999999251e-07, 2.2514000000001255e-05, 9.030000000000149e-07, 2.308300000000013e-05, 9.309999999991547e-07, 2.0014000000002224e-05, 9.43999999999251e-07, 2.8360999999997583e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.299999999996811e-07, 1.4999999999997654e-05, 9.310000000026242e-07, 1.656899999999753e-05, 9.310000000026242e-07, 1.2513999999998193e-05, 9.43999999999251e-07, 2.9958000000000068e-05, 9.170000000030543e-07, 1.936099999999899e-05, 9.449999999987246e-07], 'eventdiff': [0, 1.179999999999931e-06, 2.4472000000001076e-05, 9.169999999995848e-07, 1.936100000000246e-05, 9.449999999987246e-07, 2.059700000000067e-05, 9.43999999999251e-07, 2.2778000000001075e-05, 9.43999999999251e-07, 2.6542000000000926e-05, 9.169999999995848e-07, 1.661099999999971e-05, 9.169999999995848e-07, 2.6180000000000647e-05, 9.57999999998821e-07, 1.0875000000000468e-05, 9.449999999987246e-07, 3.0194000000000748e-05, 9.449999999987246e-07, 1.4680000000003024e-05, 9.309999999991547e-07, 1.937499999999856e-05, 9.860000000014302e-07, 2.8027999999999387e-05, 9.57999999998821e-07, 1.9985999999999615e-05, 9.170000000030543e-07, 1.536099999999846e-05, 9.169999999995848e-07, 2.6264000000001536e-05, 8.609999999978357e-07, 1.5000000000001124e-05, 9.57999999998821e-07, 2.433300000000138e-05, 9.309999999991547e-07, 1.3139000000002288e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.43999999999251e-07, 2.5278000000000106e-05, 9.449999999987246e-07, 2.3708000000000756e-05, 9.43999999999251e-07, 2.091700000000224e-05, 9.309999999991547e-07, 2.5291000000000202e-05, 9.449999999987246e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.450000000021941e-07, 2.154099999999992e-05, 9.309999999991547e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 1.812500000000078e-05, 9.169999999995848e-07, 2.2790999999997702e-05, 9.59000000001764e-07, 1.779099999999964e-05, 9.449999999987246e-07, 2.8764000000000567e-05, 8.750000000008751e-07, 2.215300000000045e-05, 1.000000000001e-06, 1.1832999999999289e-05, 9.43999999999251e-07, 1.1264000000000413e-05, 9.589999999982945e-07, 1.654100000000186e-05, 9.309999999991547e-07, 2.2514000000001255e-05, 9.020000000005413e-07, 3.0277999999998167e-05, 9.450000000021941e-07, 2.588899999999769e-05, 9.299999999996811e-07, 1.968100000000056e-05, 9.43999999999251e-07, 2.2514000000001255e-05, 9.030000000000149e-07, 2.308300000000013e-05, 9.309999999991547e-07, 2.0014000000002224e-05, 9.43999999999251e-07, 2.8360999999997583e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.299999999996811e-07, 1.4999999999997654e-05, 9.310000000026242e-07, 1.656899999999753e-05, 9.310000000026242e-07, 1.2513999999998193e-05, 9.43999999999251e-07, 2.9958000000000068e-05, 9.170000000030543e-07, 1.936099999999899e-05, 9.449999999987246e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:50.297" endtime="20201110 08:32:50.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.293" endtime="20201110 08:32:50.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:50.306" level="INFO">${RESULT} = [{'time': 0.018599486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018624875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:50.303" endtime="20201110 08:32:50.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:50.320" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:50.307" endtime="20201110 08:32:50.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.324" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:50.323" endtime="20201110 08:32:50.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.326" level="INFO">VALUE: [1.179999999999931e-06, 9.169999999995848e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.57999999998821e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.860000000014302e-07, 9.57999999998821e-07, 9.170000000030543e-07, 9.169999999995848e-07, 8.609999999978357e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.59000000001764e-07, 9.449999999987246e-07, 8.750000000008751e-07, 1.000000000001e-06, 9.43999999999251e-07, 9.589999999982945e-07, 9.309999999991547e-07, 9.020000000005413e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.449999999987246e-07]</msg>
<status status="PASS" starttime="20201110 08:32:50.325" endtime="20201110 08:32:50.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.321" endtime="20201110 08:32:50.327"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.329" endtime="20201110 08:32:50.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:50.333" endtime="20201110 08:32:50.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.331" endtime="20201110 08:32:50.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.328" endtime="20201110 08:32:50.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.925" endtime="20201110 08:32:50.353"></status>
</kw>
<msg timestamp="20201110 08:32:50.354" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.361" endtime="20201110 08:32:50.370"></status>
</kw>
<msg timestamp="20201110 08:32:50.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.360" endtime="20201110 08:32:50.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.372" endtime="20201110 08:32:50.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.374" endtime="20201110 08:32:50.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.357" endtime="20201110 08:32:50.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.355" endtime="20201110 08:32:50.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.383" endtime="20201110 08:32:50.669"></status>
</kw>
<msg timestamp="20201110 08:32:50.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.382" endtime="20201110 08:32:50.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018530694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.673" endtime="20201110 08:32:50.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.682" endtime="20201110 08:32:50.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.379" endtime="20201110 08:32:50.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.377" endtime="20201110 08:32:50.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.688" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:50.687" endtime="20201110 08:32:50.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.693" level="INFO">VALUE: [{'time': 0.018530694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018531875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018553, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.112500000000031e-05, 'source_diff': 2.112500000000031e-05}, {'time': 0.018553917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.01856925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.533299999999932e-05, 'source_diff': 1.533299999999932e-05}, {'time': 0.018570167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018600139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9972000000003107e-05, 'source_diff': 2.9972000000003107e-05}, {'time': 0.018601069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018617625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6555999999997434e-05, 'source_diff': 1.6555999999997434e-05}, {'time': 0.018618569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018645389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6819999999996846e-05, 'source_diff': 2.6819999999996846e-05}, {'time': 0.018646333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018675361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.018676306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018696903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.018697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018728111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.018729042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018744361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.018745292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018766528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.018767458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018780597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.018781542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018812111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.056900000000112e-05, 'source_diff': 3.056900000000112e-05}, {'time': 0.018813056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018835847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2790999999997702e-05, 'source_diff': 2.2790999999997702e-05}, {'time': 0.018836778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.01885025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.018851181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018875528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4346999999997482e-05, 'source_diff': 2.4346999999997482e-05}, {'time': 0.018876444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018890208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.018891153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018917056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.018918, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.018949208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018972639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.343100000000084e-05, 'source_diff': 2.343100000000084e-05}, {'time': 0.018973542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4415999999999735e-05, 'source_diff': 1.4415999999999735e-05}, {'time': 0.018988861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019017958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9097000000002232e-05, 'source_diff': 2.9097000000002232e-05}, {'time': 0.019018833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.019042861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4028000000002325e-05, 'source_diff': 2.4028000000002325e-05}, {'time': 0.019043792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019072514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8721999999998388e-05, 'source_diff': 2.8721999999998388e-05}, {'time': 0.019073431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019099361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5930000000000397e-05, 'source_diff': 2.5930000000000397e-05}, {'time': 0.019100278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019120264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9986000000003085e-05, 'source_diff': 1.9986000000003085e-05}, {'time': 0.019121194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019134042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2847999999999332e-05, 'source_diff': 1.2847999999999332e-05}, {'time': 0.019134958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019146542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583999999998512e-05, 'source_diff': 1.1583999999998512e-05}, {'time': 0.019147486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019166542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9056000000003404e-05, 'source_diff': 1.9056000000003404e-05}, {'time': 0.019167472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019184972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000000154e-05, 'source_diff': 1.7500000000000154e-05}, {'time': 0.019185903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019202792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.019203722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019233361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9639000000001442e-05, 'source_diff': 2.9639000000001442e-05}, {'time': 0.019234292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019258028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.019258972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.01927025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.019271181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019285556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.0192865, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019301194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4693999999999124e-05, 'source_diff': 1.4693999999999124e-05}, {'time': 0.019302125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019329583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7458000000001037e-05, 'source_diff': 2.7458000000001037e-05}, {'time': 0.019330528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019359236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8707999999998818e-05, 'source_diff': 2.8707999999998818e-05}, {'time': 0.019360181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019380792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019381708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019395181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.019396111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.019421694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019444181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.248700000000159e-05, 'source_diff': 2.248700000000159e-05}, {'time': 0.019445111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019471972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6860999999999552e-05, 'source_diff': 2.6860999999999552e-05}, {'time': 0.019472903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019486972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4069000000001969e-05, 'source_diff': 1.4069000000001969e-05}, {'time': 0.019487917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019507583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9665999999998046e-05, 'source_diff': 1.9665999999998046e-05}, {'time': 0.019508597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.01953575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.715300000000198e-05, 'source_diff': 2.715300000000198e-05}, {'time': 0.019536611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609999999978357e-07, 'source_diff': 8.609999999978357e-07}, {'time': 0.019550389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3778000000002483e-05, 'source_diff': 1.3778000000002483e-05}, {'time': 0.019551319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019577847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6527999999997887e-05, 'source_diff': 2.6527999999997887e-05}, {'time': 0.019578778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019600944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2165999999997077e-05, 'source_diff': 2.2165999999997077e-05}, {'time': 0.019601958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019613806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1848000000001802e-05, 'source_diff': 1.1848000000001802e-05}, {'time': 0.019614722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:50.689" endtime="20201110 08:32:50.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.685" endtime="20201110 08:32:50.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:50.720" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:50.696" endtime="20201110 08:32:50.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.723" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:50.722" endtime="20201110 08:32:50.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.728" level="INFO">VALUE: {'sourcetime': [0.018530694, 0.018531875, 0.018553, 0.018553917, 0.01856925, 0.018570167, 0.018600139, 0.018601069, 0.018617625, 0.018618569, 0.018645389, 0.018646333, 0.018675361, 0.018676306, 0.018696903, 0.018697833, 0.018728111, 0.018729042, 0.018744361, 0.018745292, 0.018766528, 0.018767458, 0.018780597, 0.018781542, 0.018812111, 0.018813056, 0.018835847, 0.018836778, 0.01885025, 0.018851181, 0.018875528, 0.018876444, 0.018890208, 0.018891153, 0.018917056, 0.018918, 0.018948278, 0.018949208, 0.018972639, 0.018973542, 0.018987958, 0.018988861, 0.019017958, 0.019018833, 0.019042861, 0.019043792, 0.019072514, 0.019073431, 0.019099361, 0.019100278, 0.019120264, 0.019121194, 0.019134042, 0.019134958, 0.019146542, 0.019147486, 0.019166542, 0.019167472, 0.019184972, 0.019185903, 0.019202792, 0.019203722, 0.019233361, 0.019234292, 0.019258028, 0.019258972, 0.01927025, 0.019271181, 0.019285556, 0.0192865, 0.019301194, 0.019302125, 0.019329583, 0.019330528, 0.019359236, 0.019360181, 0.019380792, 0.019381708, 0.019395181, 0.019396111, 0.019420764, 0.019421694, 0.019444181, 0.019445111, 0.019471972, 0.019472903, 0.019486972, 0.019487917, 0.019507583, 0.019508597, 0.01953575, 0.019536611, 0.019550389, 0.019551319, 0.019577847, 0.019578778, 0.019600944, 0.019601958, 0.019613806, 0.019614722], 'source_diff': [0, 1.1809999999994047e-06, 2.112500000000031e-05, 9.169999999995848e-07, 1.533299999999932e-05, 9.169999999995848e-07, 2.9972000000003107e-05, 9.299999999996811e-07, 1.6555999999997434e-05, 9.440000000027204e-07, 2.6819999999996846e-05, 9.440000000027204e-07, 2.9028000000000387e-05, 9.449999999987246e-07, 2.059700000000067e-05, 9.299999999996811e-07, 3.0277999999998167e-05, 9.310000000026242e-07, 1.531899999999975e-05, 9.309999999991547e-07, 2.1236000000000865e-05, 9.299999999996811e-07, 1.3138999999998818e-05, 9.449999999987246e-07, 3.056900000000112e-05, 9.450000000021941e-07, 2.2790999999997702e-05, 9.309999999991547e-07, 1.3472000000000484e-05, 9.310000000026242e-07, 2.4346999999997482e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.450000000021941e-07, 2.590300000000073e-05, 9.43999999999251e-07, 3.0277999999998167e-05, 9.299999999996811e-07, 2.343100000000084e-05, 9.030000000000149e-07, 1.4415999999999735e-05, 9.030000000000149e-07, 2.9097000000002232e-05, 8.749999999974056e-07, 2.4028000000002325e-05, 9.309999999991547e-07, 2.8721999999998388e-05, 9.169999999995848e-07, 2.5930000000000397e-05, 9.169999999995848e-07, 1.9986000000003085e-05, 9.299999999996811e-07, 1.2847999999999332e-05, 9.160000000001112e-07, 1.1583999999998512e-05, 9.43999999999251e-07, 1.9056000000003404e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.309999999991547e-07, 1.68889999999991e-05, 9.299999999996811e-07, 2.9639000000001442e-05, 9.309999999991547e-07, 2.3735999999999896e-05, 9.43999999999251e-07, 1.1277999999999982e-05, 9.309999999991547e-07, 1.4375000000000498e-05, 9.440000000027204e-07, 1.4693999999999124e-05, 9.309999999991547e-07, 2.7458000000001037e-05, 9.449999999987246e-07, 2.8707999999998818e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.160000000001112e-07, 1.3472999999999957e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.299999999996811e-07, 2.248700000000159e-05, 9.299999999996811e-07, 2.6860999999999552e-05, 9.309999999991547e-07, 1.4069000000001969e-05, 9.449999999987246e-07, 1.9665999999998046e-05, 1.01400000000057e-06, 2.715300000000198e-05, 8.609999999978357e-07, 1.3778000000002483e-05, 9.299999999996811e-07, 2.6527999999997887e-05, 9.310000000026242e-07, 2.2165999999997077e-05, 1.01400000000057e-06, 1.1848000000001802e-05, 9.160000000001112e-07], 'eventdiff': [0, 1.1809999999994047e-06, 2.112500000000031e-05, 9.169999999995848e-07, 1.533299999999932e-05, 9.169999999995848e-07, 2.9972000000003107e-05, 9.299999999996811e-07, 1.6555999999997434e-05, 9.440000000027204e-07, 2.6819999999996846e-05, 9.440000000027204e-07, 2.9028000000000387e-05, 9.449999999987246e-07, 2.059700000000067e-05, 9.299999999996811e-07, 3.0277999999998167e-05, 9.310000000026242e-07, 1.531899999999975e-05, 9.309999999991547e-07, 2.1236000000000865e-05, 9.299999999996811e-07, 1.3138999999998818e-05, 9.449999999987246e-07, 3.056900000000112e-05, 9.450000000021941e-07, 2.2790999999997702e-05, 9.309999999991547e-07, 1.3472000000000484e-05, 9.310000000026242e-07, 2.4346999999997482e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.450000000021941e-07, 2.590300000000073e-05, 9.43999999999251e-07, 3.0277999999998167e-05, 9.299999999996811e-07, 2.343100000000084e-05, 9.030000000000149e-07, 1.4415999999999735e-05, 9.030000000000149e-07, 2.9097000000002232e-05, 8.749999999974056e-07, 2.4028000000002325e-05, 9.309999999991547e-07, 2.8721999999998388e-05, 9.169999999995848e-07, 2.5930000000000397e-05, 9.169999999995848e-07, 1.9986000000003085e-05, 9.299999999996811e-07, 1.2847999999999332e-05, 9.160000000001112e-07, 1.1583999999998512e-05, 9.43999999999251e-07, 1.9056000000003404e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.309999999991547e-07, 1.68889999999991e-05, 9.299999999996811e-07, 2.9639000000001442e-05, 9.309999999991547e-07, 2.3735999999999896e-05, 9.43999999999251e-07, 1.1277999999999982e-05, 9.309999999991547e-07, 1.4375000000000498e-05, 9.440000000027204e-07, 1.4693999999999124e-05, 9.309999999991547e-07, 2.7458000000001037e-05, 9.449999999987246e-07, 2.8707999999998818e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.160000000001112e-07, 1.3472999999999957e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.299999999996811e-07, 2.248700000000159e-05, 9.299999999996811e-07, 2.6860999999999552e-05, 9.309999999991547e-07, 1.4069000000001969e-05, 9.449999999987246e-07, 1.9665999999998046e-05, 1.01400000000057e-06, 2.715300000000198e-05, 8.609999999978357e-07, 1.3778000000002483e-05, 9.299999999996811e-07, 2.6527999999997887e-05, 9.310000000026242e-07, 2.2165999999997077e-05, 1.01400000000057e-06, 1.1848000000001802e-05, 9.160000000001112e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:50.724" endtime="20201110 08:32:50.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.720" endtime="20201110 08:32:50.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:50.733" level="INFO">${RESULT} = [{'time': 0.018531875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018553917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:50.730" endtime="20201110 08:32:50.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:50.747" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:50.734" endtime="20201110 08:32:50.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.751" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:50.750" endtime="20201110 08:32:50.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.753" level="INFO">VALUE: [1.1809999999994047e-06, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.160000000001112e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.030000000000149e-07, 8.749999999974056e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.449999999987246e-07, 1.01400000000057e-06, 8.609999999978357e-07, 9.299999999996811e-07, 9.310000000026242e-07, 1.01400000000057e-06, 9.160000000001112e-07]</msg>
<status status="PASS" starttime="20201110 08:32:50.752" endtime="20201110 08:32:50.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.748" endtime="20201110 08:32:50.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.756" endtime="20201110 08:32:50.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:50.760" endtime="20201110 08:32:50.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.758" endtime="20201110 08:32:50.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.755" endtime="20201110 08:32:50.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.354" endtime="20201110 08:32:50.780"></status>
</kw>
<msg timestamp="20201110 08:32:50.781" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.788" endtime="20201110 08:32:50.797"></status>
</kw>
<msg timestamp="20201110 08:32:50.798" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.787" endtime="20201110 08:32:50.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:50.800" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:50.799" endtime="20201110 08:32:50.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.801" endtime="20201110 08:32:50.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.784" endtime="20201110 08:32:50.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.782" endtime="20201110 08:32:50.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:50.811" endtime="20201110 08:32:51.097"></status>
</kw>
<msg timestamp="20201110 08:32:51.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:50.809" endtime="20201110 08:32:51.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.101" endtime="20201110 08:32:51.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.110" endtime="20201110 08:32:51.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.807" endtime="20201110 08:32:51.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.804" endtime="20201110 08:32:51.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.116" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:51.115" endtime="20201110 08:32:51.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.121" level="INFO">VALUE: [{'time': 0.018459889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018477222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.613900000000182e-05, 'source_diff': 1.613900000000182e-05}, {'time': 0.018478139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018497514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.937499999999856e-05, 'source_diff': 1.937499999999856e-05}, {'time': 0.018498444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018522486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4042000000001895e-05, 'source_diff': 2.4042000000001895e-05}, {'time': 0.018523417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018543083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9665999999998046e-05, 'source_diff': 1.9665999999998046e-05}, {'time': 0.018544042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.018573083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9041000000000483e-05, 'source_diff': 2.9041000000000483e-05}, {'time': 0.018574, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018597389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.338899999999866e-05, 'source_diff': 2.338899999999866e-05}, {'time': 0.018598333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018612708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4374999999997029e-05, 'source_diff': 1.4374999999997029e-05}, {'time': 0.018613639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018624917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.018625861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018652375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6513999999998317e-05, 'source_diff': 2.6513999999998317e-05}, {'time': 0.018653306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018666167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018667069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.018693292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.622299999999883e-05, 'source_diff': 2.622299999999883e-05}, {'time': 0.01869425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018718583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.433300000000138e-05, 'source_diff': 2.433300000000138e-05}, {'time': 0.018719514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018745431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.59170000000003e-05, 'source_diff': 2.59170000000003e-05}, {'time': 0.018746361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018764472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.018765431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.018783208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.777700000000007e-05, 'source_diff': 1.777700000000007e-05}, {'time': 0.018784153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018801014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.018801944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018824736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.018825736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018847292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1556000000002434e-05, 'source_diff': 2.1556000000002434e-05}, {'time': 0.018848153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.609999999978357e-07, 'source_diff': 8.609999999978357e-07}, {'time': 0.018875611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7458000000001037e-05, 'source_diff': 2.7458000000001037e-05}, {'time': 0.018876569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018890931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4362000000000402e-05, 'source_diff': 1.4362000000000402e-05}, {'time': 0.018891889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018916528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.463899999999991e-05, 'source_diff': 2.463899999999991e-05}, {'time': 0.018917458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.018932778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5319999999999223e-05, 'source_diff': 1.5319999999999223e-05}, {'time': 0.018933736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018951528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7791999999999114e-05, 'source_diff': 1.7791999999999114e-05}, {'time': 0.018952472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018968708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6235999999999334e-05, 'source_diff': 1.6235999999999334e-05}, {'time': 0.018969653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018982167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2514000000001663e-05, 'source_diff': 1.2514000000001663e-05}, {'time': 0.018983111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019009625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6513999999998317e-05, 'source_diff': 2.6513999999998317e-05}, {'time': 0.019010569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019031181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0611999999999714e-05, 'source_diff': 2.0611999999999714e-05}, {'time': 0.019032111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019052111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999999185e-05, 'source_diff': 1.9999999999999185e-05}, {'time': 0.019053056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019079583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6527000000001882e-05, 'source_diff': 2.6527000000001882e-05}, {'time': 0.019080514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019095917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540300000000064e-05, 'source_diff': 1.540300000000064e-05}, {'time': 0.019096764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.469999999982658e-07, 'source_diff': 8.469999999982658e-07}, {'time': 0.019124528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7763999999999567e-05, 'source_diff': 2.7763999999999567e-05}, {'time': 0.019125472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019146736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1264000000000005e-05, 'source_diff': 2.1264000000000005e-05}, {'time': 0.019147639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019163583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944000000000375e-05, 'source_diff': 1.5944000000000375e-05}, {'time': 0.019164528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019187625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.019188556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019216319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7763000000000093e-05, 'source_diff': 2.7763000000000093e-05}, {'time': 0.019217264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019247528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0263999999998598e-05, 'source_diff': 3.0263999999998598e-05}, {'time': 0.019248458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019265333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019266264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019289375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.311099999999927e-05, 'source_diff': 2.311099999999927e-05}, {'time': 0.019290319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019302819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2499999999998623e-05, 'source_diff': 1.2499999999998623e-05}, {'time': 0.019303764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019317833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.40689999999985e-05, 'source_diff': 1.40689999999985e-05}, {'time': 0.019318778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019333458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.019334403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019353764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936099999999899e-05, 'source_diff': 1.936099999999899e-05}, {'time': 0.019354722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019382472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7749999999999997e-05, 'source_diff': 2.7749999999999997e-05}, {'time': 0.019383403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019400944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.754099999999939e-05, 'source_diff': 1.754099999999939e-05}, {'time': 0.019401847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8070000000001566e-05, 'source_diff': 2.8070000000001566e-05}, {'time': 0.019430861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019454583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3722000000000326e-05, 'source_diff': 2.3722000000000326e-05}, {'time': 0.019455542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019468042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.019468986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019490208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1221999999997826e-05, 'source_diff': 2.1221999999997826e-05}, {'time': 0.019491153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019513625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.019514556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:51.117" endtime="20201110 08:32:51.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.113" endtime="20201110 08:32:51.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:51.147" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:51.124" endtime="20201110 08:32:51.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.151" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:51.150" endtime="20201110 08:32:51.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.155" level="INFO">VALUE: {'sourcetime': [0.018459889, 0.018461083, 0.018477222, 0.018478139, 0.018497514, 0.018498444, 0.018522486, 0.018523417, 0.018543083, 0.018544042, 0.018573083, 0.018574, 0.018597389, 0.018598333, 0.018612708, 0.018613639, 0.018624917, 0.018625861, 0.018652375, 0.018653306, 0.018666167, 0.018667069, 0.018693292, 0.01869425, 0.018718583, 0.018719514, 0.018745431, 0.018746361, 0.018764472, 0.018765431, 0.018783208, 0.018784153, 0.018801014, 0.018801944, 0.018824736, 0.018825736, 0.018847292, 0.018848153, 0.018875611, 0.018876569, 0.018890931, 0.018891889, 0.018916528, 0.018917458, 0.018932778, 0.018933736, 0.018951528, 0.018952472, 0.018968708, 0.018969653, 0.018982167, 0.018983111, 0.019009625, 0.019010569, 0.019031181, 0.019032111, 0.019052111, 0.019053056, 0.019079583, 0.019080514, 0.019095917, 0.019096764, 0.019124528, 0.019125472, 0.019146736, 0.019147639, 0.019163583, 0.019164528, 0.019187625, 0.019188556, 0.019216319, 0.019217264, 0.019247528, 0.019248458, 0.019265333, 0.019266264, 0.019289375, 0.019290319, 0.019302819, 0.019303764, 0.019317833, 0.019318778, 0.019333458, 0.019334403, 0.019353764, 0.019354722, 0.019382472, 0.019383403, 0.019400944, 0.019401847, 0.019429917, 0.019430861, 0.019454583, 0.019455542, 0.019468042, 0.019468986, 0.019490208, 0.019491153, 0.019513625, 0.019514556], 'source_diff': [0, 1.193999999999501e-06, 1.613900000000182e-05, 9.169999999995848e-07, 1.937499999999856e-05, 9.299999999996811e-07, 2.4042000000001895e-05, 9.309999999991547e-07, 1.9665999999998046e-05, 9.59000000001764e-07, 2.9041000000000483e-05, 9.169999999995848e-07, 2.338899999999866e-05, 9.440000000027204e-07, 1.4374999999997029e-05, 9.310000000026242e-07, 1.1277999999999982e-05, 9.43999999999251e-07, 2.6513999999998317e-05, 9.310000000026242e-07, 1.2860999999999428e-05, 9.020000000005413e-07, 2.622299999999883e-05, 9.57999999998821e-07, 2.433300000000138e-05, 9.309999999991547e-07, 2.59170000000003e-05, 9.299999999996811e-07, 1.811100000000121e-05, 9.589999999982945e-07, 1.777700000000007e-05, 9.450000000021941e-07, 1.686099999999996e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.999999999975306e-07, 2.1556000000002434e-05, 8.609999999978357e-07, 2.7458000000001037e-05, 9.57999999998821e-07, 1.4362000000000402e-05, 9.57999999998821e-07, 2.463899999999991e-05, 9.300000000031505e-07, 1.5319999999999223e-05, 9.57999999998821e-07, 1.7791999999999114e-05, 9.440000000027204e-07, 1.6235999999999334e-05, 9.449999999987246e-07, 1.2514000000001663e-05, 9.43999999999251e-07, 2.6513999999998317e-05, 9.440000000027204e-07, 2.0611999999999714e-05, 9.299999999996811e-07, 1.9999999999999185e-05, 9.449999999987246e-07, 2.6527000000001882e-05, 9.309999999991547e-07, 1.540300000000064e-05, 8.469999999982658e-07, 2.7763999999999567e-05, 9.440000000027204e-07, 2.1264000000000005e-05, 9.030000000000149e-07, 1.5944000000000375e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.309999999991547e-07, 2.7763000000000093e-05, 9.450000000021941e-07, 3.0263999999998598e-05, 9.299999999996811e-07, 1.687499999999953e-05, 9.310000000026242e-07, 2.311099999999927e-05, 9.43999999999251e-07, 1.2499999999998623e-05, 9.450000000021941e-07, 1.40689999999985e-05, 9.450000000021941e-07, 1.4679999999999555e-05, 9.449999999987246e-07, 1.936099999999899e-05, 9.580000000022904e-07, 2.7749999999999997e-05, 9.309999999991547e-07, 1.754099999999939e-05, 9.030000000000149e-07, 2.8070000000001566e-05, 9.43999999999251e-07, 2.3722000000000326e-05, 9.589999999982945e-07, 1.2500000000002093e-05, 9.43999999999251e-07, 2.1221999999997826e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.309999999991547e-07], 'eventdiff': [0, 1.193999999999501e-06, 1.613900000000182e-05, 9.169999999995848e-07, 1.937499999999856e-05, 9.299999999996811e-07, 2.4042000000001895e-05, 9.309999999991547e-07, 1.9665999999998046e-05, 9.59000000001764e-07, 2.9041000000000483e-05, 9.169999999995848e-07, 2.338899999999866e-05, 9.440000000027204e-07, 1.4374999999997029e-05, 9.310000000026242e-07, 1.1277999999999982e-05, 9.43999999999251e-07, 2.6513999999998317e-05, 9.310000000026242e-07, 1.2860999999999428e-05, 9.020000000005413e-07, 2.622299999999883e-05, 9.57999999998821e-07, 2.433300000000138e-05, 9.309999999991547e-07, 2.59170000000003e-05, 9.299999999996811e-07, 1.811100000000121e-05, 9.589999999982945e-07, 1.777700000000007e-05, 9.450000000021941e-07, 1.686099999999996e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.999999999975306e-07, 2.1556000000002434e-05, 8.609999999978357e-07, 2.7458000000001037e-05, 9.57999999998821e-07, 1.4362000000000402e-05, 9.57999999998821e-07, 2.463899999999991e-05, 9.300000000031505e-07, 1.5319999999999223e-05, 9.57999999998821e-07, 1.7791999999999114e-05, 9.440000000027204e-07, 1.6235999999999334e-05, 9.449999999987246e-07, 1.2514000000001663e-05, 9.43999999999251e-07, 2.6513999999998317e-05, 9.440000000027204e-07, 2.0611999999999714e-05, 9.299999999996811e-07, 1.9999999999999185e-05, 9.449999999987246e-07, 2.6527000000001882e-05, 9.309999999991547e-07, 1.540300000000064e-05, 8.469999999982658e-07, 2.7763999999999567e-05, 9.440000000027204e-07, 2.1264000000000005e-05, 9.030000000000149e-07, 1.5944000000000375e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.309999999991547e-07, 2.7763000000000093e-05, 9.450000000021941e-07, 3.0263999999998598e-05, 9.299999999996811e-07, 1.687499999999953e-05, 9.310000000026242e-07, 2.311099999999927e-05, 9.43999999999251e-07, 1.2499999999998623e-05, 9.450000000021941e-07, 1.40689999999985e-05, 9.450000000021941e-07, 1.4679999999999555e-05, 9.449999999987246e-07, 1.936099999999899e-05, 9.580000000022904e-07, 2.7749999999999997e-05, 9.309999999991547e-07, 1.754099999999939e-05, 9.030000000000149e-07, 2.8070000000001566e-05, 9.43999999999251e-07, 2.3722000000000326e-05, 9.589999999982945e-07, 1.2500000000002093e-05, 9.43999999999251e-07, 2.1221999999997826e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.309999999991547e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:51.152" endtime="20201110 08:32:51.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.148" endtime="20201110 08:32:51.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:51.161" level="INFO">${RESULT} = [{'time': 0.018461083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018478139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:51.157" endtime="20201110 08:32:51.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:51.174" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:51.162" endtime="20201110 08:32:51.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.179" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:51.177" endtime="20201110 08:32:51.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.181" level="INFO">VALUE: [1.193999999999501e-06, 9.169999999995848e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.59000000001764e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.020000000005413e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.589999999982945e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.999999999975306e-07, 8.609999999978357e-07, 9.57999999998821e-07, 9.57999999998821e-07, 9.300000000031505e-07, 9.57999999998821e-07, 9.440000000027204e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.309999999991547e-07, 8.469999999982658e-07, 9.440000000027204e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.580000000022904e-07, 9.309999999991547e-07, 9.030000000000149e-07, 9.43999999999251e-07, 9.589999999982945e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201110 08:32:51.180" endtime="20201110 08:32:51.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.175" endtime="20201110 08:32:51.183"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.186" endtime="20201110 08:32:51.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:51.191" endtime="20201110 08:32:51.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.189" endtime="20201110 08:32:51.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.184" endtime="20201110 08:32:51.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:50.781" endtime="20201110 08:32:51.214"></status>
</kw>
<msg timestamp="20201110 08:32:51.214" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.223" endtime="20201110 08:32:51.233"></status>
</kw>
<msg timestamp="20201110 08:32:51.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.221" endtime="20201110 08:32:51.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.234" endtime="20201110 08:32:51.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.237" endtime="20201110 08:32:51.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.217" endtime="20201110 08:32:51.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.216" endtime="20201110 08:32:51.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.246" endtime="20201110 08:32:51.532"></status>
</kw>
<msg timestamp="20201110 08:32:51.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.244" endtime="20201110 08:32:51.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.537" endtime="20201110 08:32:51.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.545" endtime="20201110 08:32:51.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.242" endtime="20201110 08:32:51.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.240" endtime="20201110 08:32:51.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.552" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:51.551" endtime="20201110 08:32:51.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.557" level="INFO">VALUE: [{'time': 0.022367667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.022382486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3624999999999748e-05, 'source_diff': 1.3624999999999748e-05}, {'time': 0.022383431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.022399986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.655500000000143e-05, 'source_diff': 1.655500000000143e-05}, {'time': 0.022400917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.022423403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2486000000002115e-05, 'source_diff': 2.2486000000002115e-05}, {'time': 0.022424375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.022437472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3097000000000109e-05, 'source_diff': 1.3097000000000109e-05}, {'time': 0.022438417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.022461514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.022462444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.022476528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4083999999997543e-05, 'source_diff': 1.4083999999997543e-05}, {'time': 0.022477458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.022489347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.022490278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.022504042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.022504972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.022525597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.022526528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.02255025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3722000000000326e-05, 'source_diff': 2.3722000000000326e-05}, {'time': 0.022551181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.022563403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2221999999999233e-05, 'source_diff': 1.2221999999999233e-05}, {'time': 0.022564319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.022584319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999999185e-05, 'source_diff': 1.9999999999999185e-05}, {'time': 0.022585306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870000000009038e-07, 'source_diff': 9.870000000009038e-07}, {'time': 0.022609917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.461100000000077e-05, 'source_diff': 2.461100000000077e-05}, {'time': 0.022610847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.0226355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.022636458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.022658958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999998216e-05, 'source_diff': 2.2499999999998216e-05}, {'time': 0.022659861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.022678917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9055999999999934e-05, 'source_diff': 1.9055999999999934e-05}, {'time': 0.022679847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.022706069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.022707014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.022735417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.022736333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.022752889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6555999999997434e-05, 'source_diff': 1.6555999999997434e-05}, {'time': 0.022753833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.022770458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.022771319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610000000013052e-07, 'source_diff': 8.610000000013052e-07}, {'time': 0.022799097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7777999999999137e-05, 'source_diff': 2.7777999999999137e-05}, {'time': 0.022800042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.022829069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9027000000000913e-05, 'source_diff': 2.9027000000000913e-05}, {'time': 0.022829986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.022859, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.022859944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.022890222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0278000000001637e-05, 'source_diff': 3.0278000000001637e-05}, {'time': 0.022891139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.022910514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.937499999999856e-05, 'source_diff': 1.937499999999856e-05}, {'time': 0.022911431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.022924903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.022925819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.022946125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0306000000001184e-05, 'source_diff': 2.0306000000001184e-05}, {'time': 0.022947056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.022972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5902000000001257e-05, 'source_diff': 2.5902000000001257e-05}, {'time': 0.022973903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.022985472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1568999999999469e-05, 'source_diff': 1.1568999999999469e-05}, {'time': 0.022986458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.023012042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5583999999998636e-05, 'source_diff': 2.5583999999998636e-05}, {'time': 0.023012944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.023032611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.966700000000099e-05, 'source_diff': 1.966700000000099e-05}, {'time': 0.023033542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.023059181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.563900000000091e-05, 'source_diff': 2.563900000000091e-05}, {'time': 0.023060097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.023089722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9624999999998403e-05, 'source_diff': 2.9624999999998403e-05}, {'time': 0.023090667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.023106639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5972000000002984e-05, 'source_diff': 1.5972000000002984e-05}, {'time': 0.023107528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889999999969755e-07, 'source_diff': 8.889999999969755e-07}, {'time': 0.023122875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.534700000000236e-05, 'source_diff': 1.534700000000236e-05}, {'time': 0.023123792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.023142528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8735999999998365e-05, 'source_diff': 1.8735999999998365e-05}, {'time': 0.023143472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.023172486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.023173444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.023195264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1819999999998785e-05, 'source_diff': 2.1819999999998785e-05}, {'time': 0.023196208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.023212764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6556000000000903e-05, 'source_diff': 1.6556000000000903e-05}, {'time': 0.023213708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.023242111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.023243056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.023254611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1554999999999899e-05, 'source_diff': 1.1554999999999899e-05}, {'time': 0.023255542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.02327275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7207999999997725e-05, 'source_diff': 1.7207999999997725e-05}, {'time': 0.023273681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.023294278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.023295208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.023307139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.023308042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.023321208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3165999999998484e-05, 'source_diff': 1.3165999999998484e-05}, {'time': 0.023322125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.023343667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1541999999999395e-05, 'source_diff': 2.1541999999999395e-05}, {'time': 0.023344611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.023367417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2806000000000215e-05, 'source_diff': 2.2806000000000215e-05}, {'time': 0.023368319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.019999999970718e-07, 'source_diff': 9.019999999970718e-07}, {'time': 0.023381153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833999999999762e-05, 'source_diff': 1.2833999999999762e-05}, {'time': 0.023382083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.023397708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.023398667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:51.553" endtime="20201110 08:32:51.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.548" endtime="20201110 08:32:51.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:51.583" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:51.559" endtime="20201110 08:32:51.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.587" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:51.586" endtime="20201110 08:32:51.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.591" level="INFO">VALUE: {'sourcetime': [0.022367667, 0.022368861, 0.022382486, 0.022383431, 0.022399986, 0.022400917, 0.022423403, 0.022424375, 0.022437472, 0.022438417, 0.022461514, 0.022462444, 0.022476528, 0.022477458, 0.022489347, 0.022490278, 0.022504042, 0.022504972, 0.022525597, 0.022526528, 0.02255025, 0.022551181, 0.022563403, 0.022564319, 0.022584319, 0.022585306, 0.022609917, 0.022610847, 0.0226355, 0.022636458, 0.022658958, 0.022659861, 0.022678917, 0.022679847, 0.022706069, 0.022707014, 0.022735417, 0.022736333, 0.022752889, 0.022753833, 0.022770458, 0.022771319, 0.022799097, 0.022800042, 0.022829069, 0.022829986, 0.022859, 0.022859944, 0.022890222, 0.022891139, 0.022910514, 0.022911431, 0.022924903, 0.022925819, 0.022946125, 0.022947056, 0.022972958, 0.022973903, 0.022985472, 0.022986458, 0.023012042, 0.023012944, 0.023032611, 0.023033542, 0.023059181, 0.023060097, 0.023089722, 0.023090667, 0.023106639, 0.023107528, 0.023122875, 0.023123792, 0.023142528, 0.023143472, 0.023172486, 0.023173444, 0.023195264, 0.023196208, 0.023212764, 0.023213708, 0.023242111, 0.023243056, 0.023254611, 0.023255542, 0.02327275, 0.023273681, 0.023294278, 0.023295208, 0.023307139, 0.023308042, 0.023321208, 0.023322125, 0.023343667, 0.023344611, 0.023367417, 0.023368319, 0.023381153, 0.023382083, 0.023397708, 0.023398667], 'source_diff': [0, 1.193999999999501e-06, 1.3624999999999748e-05, 9.449999999987246e-07, 1.655500000000143e-05, 9.309999999991547e-07, 2.2486000000002115e-05, 9.719999999983908e-07, 1.3097000000000109e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.300000000031505e-07, 1.4083999999997543e-05, 9.299999999996811e-07, 1.1889000000001038e-05, 9.309999999991547e-07, 1.3763999999999443e-05, 9.300000000031505e-07, 2.062499999999981e-05, 9.309999999991547e-07, 2.3722000000000326e-05, 9.309999999991547e-07, 1.2221999999999233e-05, 9.160000000001112e-07, 1.9999999999999185e-05, 9.870000000009038e-07, 2.461100000000077e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.580000000022904e-07, 2.2499999999998216e-05, 9.030000000000149e-07, 1.9055999999999934e-05, 9.299999999996811e-07, 2.6221999999999357e-05, 9.450000000021941e-07, 2.8402999999999762e-05, 9.160000000001112e-07, 1.6555999999997434e-05, 9.440000000027204e-07, 1.662499999999928e-05, 8.610000000013052e-07, 2.7777999999999137e-05, 9.449999999987246e-07, 2.9027000000000913e-05, 9.169999999995848e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 3.0278000000001637e-05, 9.169999999995848e-07, 1.937499999999856e-05, 9.169999999995848e-07, 1.3472000000000484e-05, 9.160000000001112e-07, 2.0306000000001184e-05, 9.309999999991547e-07, 2.5902000000001257e-05, 9.449999999987246e-07, 1.1568999999999469e-05, 9.860000000014302e-07, 2.5583999999998636e-05, 9.020000000005413e-07, 1.966700000000099e-05, 9.309999999991547e-07, 2.563900000000091e-05, 9.160000000001112e-07, 2.9624999999998403e-05, 9.449999999987246e-07, 1.5972000000002984e-05, 8.889999999969755e-07, 1.534700000000236e-05, 9.169999999995848e-07, 1.8735999999998365e-05, 9.43999999999251e-07, 2.9014000000000817e-05, 9.580000000022904e-07, 2.1819999999998785e-05, 9.43999999999251e-07, 1.6556000000000903e-05, 9.43999999999251e-07, 2.8402999999999762e-05, 9.450000000021941e-07, 1.1554999999999899e-05, 9.309999999991547e-07, 1.7207999999997725e-05, 9.310000000026242e-07, 2.059700000000067e-05, 9.299999999996811e-07, 1.1930999999999747e-05, 9.030000000000149e-07, 1.3165999999998484e-05, 9.169999999995848e-07, 2.1541999999999395e-05, 9.440000000027204e-07, 2.2806000000000215e-05, 9.019999999970718e-07, 1.2833999999999762e-05, 9.300000000031505e-07, 1.562499999999828e-05, 9.59000000001764e-07], 'eventdiff': [0, 1.193999999999501e-06, 1.3624999999999748e-05, 9.449999999987246e-07, 1.655500000000143e-05, 9.309999999991547e-07, 2.2486000000002115e-05, 9.719999999983908e-07, 1.3097000000000109e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.300000000031505e-07, 1.4083999999997543e-05, 9.299999999996811e-07, 1.1889000000001038e-05, 9.309999999991547e-07, 1.3763999999999443e-05, 9.300000000031505e-07, 2.062499999999981e-05, 9.309999999991547e-07, 2.3722000000000326e-05, 9.309999999991547e-07, 1.2221999999999233e-05, 9.160000000001112e-07, 1.9999999999999185e-05, 9.870000000009038e-07, 2.461100000000077e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.580000000022904e-07, 2.2499999999998216e-05, 9.030000000000149e-07, 1.9055999999999934e-05, 9.299999999996811e-07, 2.6221999999999357e-05, 9.450000000021941e-07, 2.8402999999999762e-05, 9.160000000001112e-07, 1.6555999999997434e-05, 9.440000000027204e-07, 1.662499999999928e-05, 8.610000000013052e-07, 2.7777999999999137e-05, 9.449999999987246e-07, 2.9027000000000913e-05, 9.169999999995848e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 3.0278000000001637e-05, 9.169999999995848e-07, 1.937499999999856e-05, 9.169999999995848e-07, 1.3472000000000484e-05, 9.160000000001112e-07, 2.0306000000001184e-05, 9.309999999991547e-07, 2.5902000000001257e-05, 9.449999999987246e-07, 1.1568999999999469e-05, 9.860000000014302e-07, 2.5583999999998636e-05, 9.020000000005413e-07, 1.966700000000099e-05, 9.309999999991547e-07, 2.563900000000091e-05, 9.160000000001112e-07, 2.9624999999998403e-05, 9.449999999987246e-07, 1.5972000000002984e-05, 8.889999999969755e-07, 1.534700000000236e-05, 9.169999999995848e-07, 1.8735999999998365e-05, 9.43999999999251e-07, 2.9014000000000817e-05, 9.580000000022904e-07, 2.1819999999998785e-05, 9.43999999999251e-07, 1.6556000000000903e-05, 9.43999999999251e-07, 2.8402999999999762e-05, 9.450000000021941e-07, 1.1554999999999899e-05, 9.309999999991547e-07, 1.7207999999997725e-05, 9.310000000026242e-07, 2.059700000000067e-05, 9.299999999996811e-07, 1.1930999999999747e-05, 9.030000000000149e-07, 1.3165999999998484e-05, 9.169999999995848e-07, 2.1541999999999395e-05, 9.440000000027204e-07, 2.2806000000000215e-05, 9.019999999970718e-07, 1.2833999999999762e-05, 9.300000000031505e-07, 1.562499999999828e-05, 9.59000000001764e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:51.588" endtime="20201110 08:32:51.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.584" endtime="20201110 08:32:51.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:51.596" level="INFO">${RESULT} = [{'time': 0.022368861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.022383431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:51.593" endtime="20201110 08:32:51.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:51.610" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:51.597" endtime="20201110 08:32:51.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.614" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:51.613" endtime="20201110 08:32:51.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.617" level="INFO">VALUE: [1.193999999999501e-06, 9.449999999987246e-07, 9.309999999991547e-07, 9.719999999983908e-07, 9.449999999987246e-07, 9.300000000031505e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.870000000009038e-07, 9.299999999996811e-07, 9.580000000022904e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.160000000001112e-07, 9.440000000027204e-07, 8.610000000013052e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.860000000014302e-07, 9.020000000005413e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.449999999987246e-07, 8.889999999969755e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.019999999970718e-07, 9.300000000031505e-07, 9.59000000001764e-07]</msg>
<status status="PASS" starttime="20201110 08:32:51.615" endtime="20201110 08:32:51.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.611" endtime="20201110 08:32:51.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.620" endtime="20201110 08:32:51.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:51.623" endtime="20201110 08:32:51.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.621" endtime="20201110 08:32:51.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.618" endtime="20201110 08:32:51.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.214" endtime="20201110 08:32:51.644"></status>
</kw>
<msg timestamp="20201110 08:32:51.644" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.651" endtime="20201110 08:32:51.661"></status>
</kw>
<msg timestamp="20201110 08:32:51.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.650" endtime="20201110 08:32:51.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.663" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:51.662" endtime="20201110 08:32:51.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.664" endtime="20201110 08:32:51.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.647" endtime="20201110 08:32:51.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.646" endtime="20201110 08:32:51.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.674" endtime="20201110 08:32:51.962"></status>
</kw>
<msg timestamp="20201110 08:32:51.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.673" endtime="20201110 08:32:51.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:51.966" endtime="20201110 08:32:51.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:51.975" endtime="20201110 08:32:51.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.669" endtime="20201110 08:32:51.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.668" endtime="20201110 08:32:51.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.981" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:51.980" endtime="20201110 08:32:51.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.987" level="INFO">VALUE: [{'time': 0.018545542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018546722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018577486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07639999999991e-05, 'source_diff': 3.07639999999991e-05}, {'time': 0.018578431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018597792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936099999999899e-05, 'source_diff': 1.936099999999899e-05}, {'time': 0.018598722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.018615611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.018616569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018641514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.494500000000191e-05, 'source_diff': 2.494500000000191e-05}, {'time': 0.018642444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018654042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1597999999998082e-05, 'source_diff': 1.1597999999998082e-05}, {'time': 0.018654958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018680236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.018681167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018703028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186100000000149e-05, 'source_diff': 2.186100000000149e-05}, {'time': 0.018703958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018728639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.468099999999862e-05, 'source_diff': 2.468099999999862e-05}, {'time': 0.018729569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.018751722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.215299999999698e-05, 'source_diff': 2.215299999999698e-05}, {'time': 0.018752653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018769569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6915999999998765e-05, 'source_diff': 1.6915999999998765e-05}, {'time': 0.018770472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018782056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583999999998512e-05, 'source_diff': 1.1583999999998512e-05}, {'time': 0.018783, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018797986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4985999999998084e-05, 'source_diff': 1.4985999999998084e-05}, {'time': 0.018798917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018817042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.812500000000078e-05, 'source_diff': 1.812500000000078e-05}, {'time': 0.018817972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018838611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.063900000000285e-05, 'source_diff': 2.063900000000285e-05}, {'time': 0.018839514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018861681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.216700000000002e-05, 'source_diff': 2.216700000000002e-05}, {'time': 0.018862625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018875444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018876389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.018902903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018928806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.01892975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018945389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.563900000000132e-05, 'source_diff': 1.563900000000132e-05}, {'time': 0.018946319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018976569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0249999999999028e-05, 'source_diff': 3.0249999999999028e-05}, {'time': 0.018977514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019006236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8721999999998388e-05, 'source_diff': 2.8721999999998388e-05}, {'time': 0.019007153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019030014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286100000000249e-05, 'source_diff': 2.286100000000249e-05}, {'time': 0.019030903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889999999969755e-07, 'source_diff': 8.889999999969755e-07}, {'time': 0.019058347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7444000000001467e-05, 'source_diff': 2.7444000000001467e-05}, {'time': 0.019059292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019081458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.019082375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019106111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.019107056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019136056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8999999999997778e-05, 'source_diff': 2.8999999999997778e-05}, {'time': 0.019136986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.019157347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.019158222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.019180097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.187500000000106e-05, 'source_diff': 2.187500000000106e-05}, {'time': 0.019181014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019194819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999868e-05, 'source_diff': 1.380499999999868e-05}, {'time': 0.019195722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019216028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0306000000001184e-05, 'source_diff': 2.0306000000001184e-05}, {'time': 0.019216958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019238181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.122300000000077e-05, 'source_diff': 2.122300000000077e-05}, {'time': 0.019239125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019265028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.019265972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019277542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1570000000002412e-05, 'source_diff': 1.1570000000002412e-05}, {'time': 0.019278486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019289389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.019290306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019312111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.180499999999974e-05, 'source_diff': 2.180499999999974e-05}, {'time': 0.019313097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019331181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8083999999998074e-05, 'source_diff': 1.8083999999998074e-05}, {'time': 0.019332097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019350861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8764000000000974e-05, 'source_diff': 1.8764000000000974e-05}, {'time': 0.019351778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019370833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.905500000000046e-05, 'source_diff': 1.905500000000046e-05}, {'time': 0.019371778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019396736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4958000000002006e-05, 'source_diff': 2.4958000000002006e-05}, {'time': 0.019397681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019418306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.019419236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019443889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.019444819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019465486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.066700000000199e-05, 'source_diff': 2.066700000000199e-05}, {'time': 0.019466375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019487292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.091699999999877e-05, 'source_diff': 2.091699999999877e-05}, {'time': 0.019488222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019510417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.219499999999916e-05, 'source_diff': 2.219499999999916e-05}, {'time': 0.019511319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.019522931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1612000000001121e-05, 'source_diff': 1.1612000000001121e-05}, {'time': 0.019523847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019544764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.091699999999877e-05, 'source_diff': 2.091699999999877e-05}, {'time': 0.019545694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019575333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9639000000001442e-05, 'source_diff': 2.9639000000001442e-05}, {'time': 0.019576278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019597819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.154099999999992e-05, 'source_diff': 2.154099999999992e-05}, {'time': 0.01959875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019625014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6263999999998067e-05, 'source_diff': 2.6263999999998067e-05}, {'time': 0.019625917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:51.982" endtime="20201110 08:32:51.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.978" endtime="20201110 08:32:51.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:52.012" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:51.989" endtime="20201110 08:32:52.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.016" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:52.015" endtime="20201110 08:32:52.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.020" level="INFO">VALUE: {'sourcetime': [0.018545542, 0.018546722, 0.018577486, 0.018578431, 0.018597792, 0.018598722, 0.018615611, 0.018616569, 0.018641514, 0.018642444, 0.018654042, 0.018654958, 0.018680236, 0.018681167, 0.018703028, 0.018703958, 0.018728639, 0.018729569, 0.018751722, 0.018752653, 0.018769569, 0.018770472, 0.018782056, 0.018783, 0.018797986, 0.018798917, 0.018817042, 0.018817972, 0.018838611, 0.018839514, 0.018861681, 0.018862625, 0.018875444, 0.018876389, 0.018901972, 0.018902903, 0.018928806, 0.01892975, 0.018945389, 0.018946319, 0.018976569, 0.018977514, 0.019006236, 0.019007153, 0.019030014, 0.019030903, 0.019058347, 0.019059292, 0.019081458, 0.019082375, 0.019106111, 0.019107056, 0.019136056, 0.019136986, 0.019157347, 0.019158222, 0.019180097, 0.019181014, 0.019194819, 0.019195722, 0.019216028, 0.019216958, 0.019238181, 0.019239125, 0.019265028, 0.019265972, 0.019277542, 0.019278486, 0.019289389, 0.019290306, 0.019312111, 0.019313097, 0.019331181, 0.019332097, 0.019350861, 0.019351778, 0.019370833, 0.019371778, 0.019396736, 0.019397681, 0.019418306, 0.019419236, 0.019443889, 0.019444819, 0.019465486, 0.019466375, 0.019487292, 0.019488222, 0.019510417, 0.019511319, 0.019522931, 0.019523847, 0.019544764, 0.019545694, 0.019575333, 0.019576278, 0.019597819, 0.01959875, 0.019625014, 0.019625917], 'source_diff': [0, 1.179999999999931e-06, 3.07639999999991e-05, 9.449999999987246e-07, 1.936099999999899e-05, 9.300000000031505e-07, 1.68889999999991e-05, 9.57999999998821e-07, 2.494500000000191e-05, 9.299999999996811e-07, 1.1597999999998082e-05, 9.160000000001112e-07, 2.5278000000000106e-05, 9.309999999991547e-07, 2.186100000000149e-05, 9.299999999996811e-07, 2.468099999999862e-05, 9.300000000031505e-07, 2.215299999999698e-05, 9.310000000026242e-07, 1.6915999999998765e-05, 9.030000000000149e-07, 1.1583999999998512e-05, 9.440000000027204e-07, 1.4985999999998084e-05, 9.309999999991547e-07, 1.812500000000078e-05, 9.299999999996811e-07, 2.063900000000285e-05, 9.030000000000149e-07, 2.216700000000002e-05, 9.43999999999251e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 2.5582999999999162e-05, 9.309999999991547e-07, 2.590300000000073e-05, 9.43999999999251e-07, 1.563900000000132e-05, 9.299999999996811e-07, 3.0249999999999028e-05, 9.450000000021941e-07, 2.8721999999998388e-05, 9.169999999995848e-07, 2.286100000000249e-05, 8.889999999969755e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.2166000000000546e-05, 9.169999999995848e-07, 2.3735999999999896e-05, 9.450000000021941e-07, 2.8999999999997778e-05, 9.300000000031505e-07, 2.036099999999999e-05, 8.749999999974056e-07, 2.187500000000106e-05, 9.169999999995848e-07, 1.380499999999868e-05, 9.030000000000149e-07, 2.0306000000001184e-05, 9.299999999996811e-07, 2.122300000000077e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.43999999999251e-07, 1.1570000000002412e-05, 9.43999999999251e-07, 1.0902999999999607e-05, 9.169999999995848e-07, 2.180499999999974e-05, 9.860000000014302e-07, 1.8083999999998074e-05, 9.160000000001112e-07, 1.8764000000000974e-05, 9.169999999995848e-07, 1.905500000000046e-05, 9.449999999987246e-07, 2.4958000000002006e-05, 9.449999999987246e-07, 2.062499999999981e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.299999999996811e-07, 2.066700000000199e-05, 8.89000000000445e-07, 2.091699999999877e-05, 9.299999999996811e-07, 2.219499999999916e-05, 9.020000000005413e-07, 1.1612000000001121e-05, 9.160000000001112e-07, 2.091699999999877e-05, 9.299999999996811e-07, 2.9639000000001442e-05, 9.449999999987246e-07, 2.154099999999992e-05, 9.310000000026242e-07, 2.6263999999998067e-05, 9.030000000000149e-07], 'eventdiff': [0, 1.179999999999931e-06, 3.07639999999991e-05, 9.449999999987246e-07, 1.936099999999899e-05, 9.300000000031505e-07, 1.68889999999991e-05, 9.57999999998821e-07, 2.494500000000191e-05, 9.299999999996811e-07, 1.1597999999998082e-05, 9.160000000001112e-07, 2.5278000000000106e-05, 9.309999999991547e-07, 2.186100000000149e-05, 9.299999999996811e-07, 2.468099999999862e-05, 9.300000000031505e-07, 2.215299999999698e-05, 9.310000000026242e-07, 1.6915999999998765e-05, 9.030000000000149e-07, 1.1583999999998512e-05, 9.440000000027204e-07, 1.4985999999998084e-05, 9.309999999991547e-07, 1.812500000000078e-05, 9.299999999996811e-07, 2.063900000000285e-05, 9.030000000000149e-07, 2.216700000000002e-05, 9.43999999999251e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 2.5582999999999162e-05, 9.309999999991547e-07, 2.590300000000073e-05, 9.43999999999251e-07, 1.563900000000132e-05, 9.299999999996811e-07, 3.0249999999999028e-05, 9.450000000021941e-07, 2.8721999999998388e-05, 9.169999999995848e-07, 2.286100000000249e-05, 8.889999999969755e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.2166000000000546e-05, 9.169999999995848e-07, 2.3735999999999896e-05, 9.450000000021941e-07, 2.8999999999997778e-05, 9.300000000031505e-07, 2.036099999999999e-05, 8.749999999974056e-07, 2.187500000000106e-05, 9.169999999995848e-07, 1.380499999999868e-05, 9.030000000000149e-07, 2.0306000000001184e-05, 9.299999999996811e-07, 2.122300000000077e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.43999999999251e-07, 1.1570000000002412e-05, 9.43999999999251e-07, 1.0902999999999607e-05, 9.169999999995848e-07, 2.180499999999974e-05, 9.860000000014302e-07, 1.8083999999998074e-05, 9.160000000001112e-07, 1.8764000000000974e-05, 9.169999999995848e-07, 1.905500000000046e-05, 9.449999999987246e-07, 2.4958000000002006e-05, 9.449999999987246e-07, 2.062499999999981e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.299999999996811e-07, 2.066700000000199e-05, 8.89000000000445e-07, 2.091699999999877e-05, 9.299999999996811e-07, 2.219499999999916e-05, 9.020000000005413e-07, 1.1612000000001121e-05, 9.160000000001112e-07, 2.091699999999877e-05, 9.299999999996811e-07, 2.9639000000001442e-05, 9.449999999987246e-07, 2.154099999999992e-05, 9.310000000026242e-07, 2.6263999999998067e-05, 9.030000000000149e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:52.017" endtime="20201110 08:32:52.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.013" endtime="20201110 08:32:52.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.026" level="INFO">${RESULT} = [{'time': 0.018546722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.018578431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:52.023" endtime="20201110 08:32:52.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:52.039" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:52.027" endtime="20201110 08:32:52.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.043" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:52.042" endtime="20201110 08:32:52.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.046" level="INFO">VALUE: [1.179999999999931e-06, 9.449999999987246e-07, 9.300000000031505e-07, 9.57999999998821e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.300000000031505e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.169999999995848e-07, 8.889999999969755e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.300000000031505e-07, 8.749999999974056e-07, 9.169999999995848e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.860000000014302e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.020000000005413e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.030000000000149e-07]</msg>
<status status="PASS" starttime="20201110 08:32:52.045" endtime="20201110 08:32:52.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.040" endtime="20201110 08:32:52.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.049" endtime="20201110 08:32:52.050"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.053" endtime="20201110 08:32:52.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.051" endtime="20201110 08:32:52.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.048" endtime="20201110 08:32:52.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.644" endtime="20201110 08:32:52.074"></status>
</kw>
<msg timestamp="20201110 08:32:52.074" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.082" endtime="20201110 08:32:52.091"></status>
</kw>
<msg timestamp="20201110 08:32:52.091" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.080" endtime="20201110 08:32:52.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.094" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.092" endtime="20201110 08:32:52.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.095" endtime="20201110 08:32:52.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.078" endtime="20201110 08:32:52.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.076" endtime="20201110 08:32:52.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.104" endtime="20201110 08:32:52.405"></status>
</kw>
<msg timestamp="20201110 08:32:52.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.102" endtime="20201110 08:32:52.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018506694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.409" endtime="20201110 08:32:52.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.418" endtime="20201110 08:32:52.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.100" endtime="20201110 08:32:52.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.098" endtime="20201110 08:32:52.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.424" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:52.423" endtime="20201110 08:32:52.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.430" level="INFO">VALUE: [{'time': 0.018506694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018507875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.0185265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.862500000000128e-05, 'source_diff': 1.862500000000128e-05}, {'time': 0.018527444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018547722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0277999999998575e-05, 'source_diff': 2.0277999999998575e-05}, {'time': 0.018548667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018579236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0568999999997654e-05, 'source_diff': 3.0568999999997654e-05}, {'time': 0.018580181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018598292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.811099999999774e-05, 'source_diff': 1.811099999999774e-05}, {'time': 0.018599222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018617653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843100000000278e-05, 'source_diff': 1.843100000000278e-05}, {'time': 0.018618597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018630486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.018631431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018654528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.018655472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018685403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9931000000000402e-05, 'source_diff': 2.9931000000000402e-05}, {'time': 0.018686347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018711, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.018711972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.018732236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0263999999999005e-05, 'source_diff': 2.0263999999999005e-05}, {'time': 0.018733194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.018758472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.018759389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018776583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7193999999998155e-05, 'source_diff': 1.7193999999998155e-05}, {'time': 0.018777514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018807778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0264000000002067e-05, 'source_diff': 3.0264000000002067e-05}, {'time': 0.018808736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018823403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.018824347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018837167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819999999996723e-05, 'source_diff': 1.2819999999996723e-05}, {'time': 0.018838111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018851556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3444999999997348e-05, 'source_diff': 1.3444999999997348e-05}, {'time': 0.0188525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018866903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402999999999638e-05, 'source_diff': 1.4402999999999638e-05}, {'time': 0.018867833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018883458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.018884389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018901278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.018902208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018921556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9347999999998894e-05, 'source_diff': 1.9347999999998894e-05}, {'time': 0.0189225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018951528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.018952458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018964347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.018965278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018984333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.905500000000046e-05, 'source_diff': 1.905500000000046e-05}, {'time': 0.018985264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019013667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.019014597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.01903925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.019040194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019066097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.019067028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019084208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7179999999998585e-05, 'source_diff': 1.7179999999998585e-05}, {'time': 0.019085167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019097042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019097986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019127625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9638999999997973e-05, 'source_diff': 2.9638999999997973e-05}, {'time': 0.019128556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019157569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9012999999997874e-05, 'source_diff': 2.9012999999997874e-05}, {'time': 0.019158514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019180986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.019181931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019198181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000002374e-05, 'source_diff': 1.6250000000002374e-05}, {'time': 0.019199125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019213181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4055999999998403e-05, 'source_diff': 1.4055999999998403e-05}, {'time': 0.019214139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019227889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.019228806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019251278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.019252236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019280639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.019281556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3444000000001344e-05, 'source_diff': 1.3444000000001344e-05}, {'time': 0.019295944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019322181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.623700000000187e-05, 'source_diff': 2.623700000000187e-05}, {'time': 0.019323083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.019352111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.019353042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019380222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7179999999998178e-05, 'source_diff': 2.7179999999998178e-05}, {'time': 0.019381139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019403625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2486000000002115e-05, 'source_diff': 2.2486000000002115e-05}, {'time': 0.019404556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019429514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4957999999998537e-05, 'source_diff': 2.4957999999998537e-05}, {'time': 0.019430444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.019445764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5319999999999223e-05, 'source_diff': 1.5319999999999223e-05}, {'time': 0.019446694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019467625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.093099999999834e-05, 'source_diff': 2.093099999999834e-05}, {'time': 0.019468556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019498194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.96379999999985e-05, 'source_diff': 2.96379999999985e-05}, {'time': 0.019499125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019517875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000001404e-05, 'source_diff': 1.8750000000001404e-05}, {'time': 0.019518806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019542528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3722000000000326e-05, 'source_diff': 2.3722000000000326e-05}, {'time': 0.019543486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019555667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180999999999997e-05, 'source_diff': 1.2180999999999997e-05}, {'time': 0.019556597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019585986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.019586875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:52.426" endtime="20201110 08:32:52.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.421" endtime="20201110 08:32:52.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:52.456" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:52.432" endtime="20201110 08:32:52.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.460" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:52.459" endtime="20201110 08:32:52.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.464" level="INFO">VALUE: {'sourcetime': [0.018506694, 0.018507875, 0.0185265, 0.018527444, 0.018547722, 0.018548667, 0.018579236, 0.018580181, 0.018598292, 0.018599222, 0.018617653, 0.018618597, 0.018630486, 0.018631431, 0.018654528, 0.018655472, 0.018685403, 0.018686347, 0.018711, 0.018711972, 0.018732236, 0.018733194, 0.018758472, 0.018759389, 0.018776583, 0.018777514, 0.018807778, 0.018808736, 0.018823403, 0.018824347, 0.018837167, 0.018838111, 0.018851556, 0.0188525, 0.018866903, 0.018867833, 0.018883458, 0.018884389, 0.018901278, 0.018902208, 0.018921556, 0.0189225, 0.018951528, 0.018952458, 0.018964347, 0.018965278, 0.018984333, 0.018985264, 0.019013667, 0.019014597, 0.01903925, 0.019040194, 0.019066097, 0.019067028, 0.019084208, 0.019085167, 0.019097042, 0.019097986, 0.019127625, 0.019128556, 0.019157569, 0.019158514, 0.019180986, 0.019181931, 0.019198181, 0.019199125, 0.019213181, 0.019214139, 0.019227889, 0.019228806, 0.019251278, 0.019252236, 0.019280639, 0.019281556, 0.019295, 0.019295944, 0.019322181, 0.019323083, 0.019352111, 0.019353042, 0.019380222, 0.019381139, 0.019403625, 0.019404556, 0.019429514, 0.019430444, 0.019445764, 0.019446694, 0.019467625, 0.019468556, 0.019498194, 0.019499125, 0.019517875, 0.019518806, 0.019542528, 0.019543486, 0.019555667, 0.019556597, 0.019585986, 0.019586875], 'source_diff': [0, 1.1809999999994047e-06, 1.862500000000128e-05, 9.43999999999251e-07, 2.0277999999998575e-05, 9.450000000021941e-07, 3.0568999999997654e-05, 9.450000000021941e-07, 1.811099999999774e-05, 9.299999999996811e-07, 1.843100000000278e-05, 9.43999999999251e-07, 1.1889000000001038e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.43999999999251e-07, 2.9931000000000402e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.720000000018603e-07, 2.0263999999999005e-05, 9.580000000022904e-07, 2.5278000000000106e-05, 9.169999999995848e-07, 1.7193999999998155e-05, 9.309999999991547e-07, 3.0264000000002067e-05, 9.57999999998821e-07, 1.4666999999999458e-05, 9.440000000027204e-07, 1.2819999999996723e-05, 9.440000000027204e-07, 1.3444999999997348e-05, 9.440000000027204e-07, 1.4402999999999638e-05, 9.299999999996811e-07, 1.562499999999828e-05, 9.310000000026242e-07, 1.68889999999991e-05, 9.299999999996811e-07, 1.9347999999998894e-05, 9.43999999999251e-07, 2.9028000000000387e-05, 9.299999999996811e-07, 1.1889000000001038e-05, 9.309999999991547e-07, 1.905500000000046e-05, 9.310000000026242e-07, 2.8402999999999762e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.309999999991547e-07, 1.7179999999998585e-05, 9.59000000001764e-07, 1.1875000000001468e-05, 9.43999999999251e-07, 2.9638999999997973e-05, 9.310000000026242e-07, 2.9012999999997874e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.449999999987246e-07, 1.6250000000002374e-05, 9.43999999999251e-07, 1.4055999999998403e-05, 9.580000000022904e-07, 1.3749999999999873e-05, 9.169999999995848e-07, 2.2471999999999076e-05, 9.57999999998821e-07, 2.8402999999999762e-05, 9.169999999995848e-07, 1.3444000000001344e-05, 9.43999999999251e-07, 2.623700000000187e-05, 9.020000000005413e-07, 2.9028000000000387e-05, 9.309999999991547e-07, 2.7179999999998178e-05, 9.169999999995848e-07, 2.2486000000002115e-05, 9.309999999991547e-07, 2.4957999999998537e-05, 9.300000000031505e-07, 1.5319999999999223e-05, 9.299999999996811e-07, 2.093099999999834e-05, 9.310000000026242e-07, 2.96379999999985e-05, 9.309999999991547e-07, 1.8750000000001404e-05, 9.309999999991547e-07, 2.3722000000000326e-05, 9.57999999998821e-07, 1.2180999999999997e-05, 9.299999999996811e-07, 2.9389000000001192e-05, 8.89000000000445e-07], 'eventdiff': [0, 1.1809999999994047e-06, 1.862500000000128e-05, 9.43999999999251e-07, 2.0277999999998575e-05, 9.450000000021941e-07, 3.0568999999997654e-05, 9.450000000021941e-07, 1.811099999999774e-05, 9.299999999996811e-07, 1.843100000000278e-05, 9.43999999999251e-07, 1.1889000000001038e-05, 9.449999999987246e-07, 2.30969999999997e-05, 9.43999999999251e-07, 2.9931000000000402e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.720000000018603e-07, 2.0263999999999005e-05, 9.580000000022904e-07, 2.5278000000000106e-05, 9.169999999995848e-07, 1.7193999999998155e-05, 9.309999999991547e-07, 3.0264000000002067e-05, 9.57999999998821e-07, 1.4666999999999458e-05, 9.440000000027204e-07, 1.2819999999996723e-05, 9.440000000027204e-07, 1.3444999999997348e-05, 9.440000000027204e-07, 1.4402999999999638e-05, 9.299999999996811e-07, 1.562499999999828e-05, 9.310000000026242e-07, 1.68889999999991e-05, 9.299999999996811e-07, 1.9347999999998894e-05, 9.43999999999251e-07, 2.9028000000000387e-05, 9.299999999996811e-07, 1.1889000000001038e-05, 9.309999999991547e-07, 1.905500000000046e-05, 9.310000000026242e-07, 2.8402999999999762e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.309999999991547e-07, 1.7179999999998585e-05, 9.59000000001764e-07, 1.1875000000001468e-05, 9.43999999999251e-07, 2.9638999999997973e-05, 9.310000000026242e-07, 2.9012999999997874e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.449999999987246e-07, 1.6250000000002374e-05, 9.43999999999251e-07, 1.4055999999998403e-05, 9.580000000022904e-07, 1.3749999999999873e-05, 9.169999999995848e-07, 2.2471999999999076e-05, 9.57999999998821e-07, 2.8402999999999762e-05, 9.169999999995848e-07, 1.3444000000001344e-05, 9.43999999999251e-07, 2.623700000000187e-05, 9.020000000005413e-07, 2.9028000000000387e-05, 9.309999999991547e-07, 2.7179999999998178e-05, 9.169999999995848e-07, 2.2486000000002115e-05, 9.309999999991547e-07, 2.4957999999998537e-05, 9.300000000031505e-07, 1.5319999999999223e-05, 9.299999999996811e-07, 2.093099999999834e-05, 9.310000000026242e-07, 2.96379999999985e-05, 9.309999999991547e-07, 1.8750000000001404e-05, 9.309999999991547e-07, 2.3722000000000326e-05, 9.57999999998821e-07, 1.2180999999999997e-05, 9.299999999996811e-07, 2.9389000000001192e-05, 8.89000000000445e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:52.461" endtime="20201110 08:32:52.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.457" endtime="20201110 08:32:52.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.470" level="INFO">${RESULT} = [{'time': 0.018507875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018527444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:52.467" endtime="20201110 08:32:52.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:52.483" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:52.471" endtime="20201110 08:32:52.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.487" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:52.486" endtime="20201110 08:32:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.490" level="INFO">VALUE: [1.1809999999994047e-06, 9.43999999999251e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.720000000018603e-07, 9.580000000022904e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.57999999998821e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.59000000001764e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.169999999995848e-07, 9.57999999998821e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.020000000005413e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.300000000031505e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.57999999998821e-07, 9.299999999996811e-07, 8.89000000000445e-07]</msg>
<status status="PASS" starttime="20201110 08:32:52.488" endtime="20201110 08:32:52.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.484" endtime="20201110 08:32:52.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.493" endtime="20201110 08:32:52.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.496" endtime="20201110 08:32:52.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.495" endtime="20201110 08:32:52.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.491" endtime="20201110 08:32:52.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.075" endtime="20201110 08:32:52.517"></status>
</kw>
<msg timestamp="20201110 08:32:52.517" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.526" endtime="20201110 08:32:52.535"></status>
</kw>
<msg timestamp="20201110 08:32:52.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.524" endtime="20201110 08:32:52.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.537" endtime="20201110 08:32:52.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.539" endtime="20201110 08:32:52.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.521" endtime="20201110 08:32:52.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.519" endtime="20201110 08:32:52.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.548" endtime="20201110 08:32:52.836"></status>
</kw>
<msg timestamp="20201110 08:32:52.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.546" endtime="20201110 08:32:52.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.841" endtime="20201110 08:32:52.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.849" endtime="20201110 08:32:52.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.544" endtime="20201110 08:32:52.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.542" endtime="20201110 08:32:52.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.856" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:52.855" endtime="20201110 08:32:52.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.861" level="INFO">VALUE: [{'time': 0.019597167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019598347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019609431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1084000000001482e-05, 'source_diff': 1.1084000000001482e-05}, {'time': 0.019610375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019640875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0499999999999278e-05, 'source_diff': 3.0499999999999278e-05}, {'time': 0.019641806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.01965775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944000000000375e-05, 'source_diff': 1.5944000000000375e-05}, {'time': 0.019658667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019683944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5276999999997163e-05, 'source_diff': 2.5276999999997163e-05}, {'time': 0.019684903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.01970675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.184699999999845e-05, 'source_diff': 2.184699999999845e-05}, {'time': 0.019707694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019727042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9347999999998894e-05, 'source_diff': 1.9347999999998894e-05}, {'time': 0.019727972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.01975575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7777999999999137e-05, 'source_diff': 2.7777999999999137e-05}, {'time': 0.019756681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019786014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.019786958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019814736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7777999999999137e-05, 'source_diff': 2.7777999999999137e-05}, {'time': 0.019815653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3458000000000914e-05, 'source_diff': 1.3458000000000914e-05}, {'time': 0.019830042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019844819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.477700000000054e-05, 'source_diff': 1.477700000000054e-05}, {'time': 0.019845667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.480000000012089e-07, 'source_diff': 8.480000000012089e-07}, {'time': 0.019866597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0929999999998866e-05, 'source_diff': 2.0929999999998866e-05}, {'time': 0.019867528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019881611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.019882528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019908125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5596999999998732e-05, 'source_diff': 2.5596999999998732e-05}, {'time': 0.019909056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019925931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019926861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019952764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.019953708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019979611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.019980542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019991833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291000000000079e-05, 'source_diff': 1.1291000000000079e-05}, {'time': 0.01999275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020016472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3722000000000326e-05, 'source_diff': 2.3722000000000326e-05}, {'time': 0.020017486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020042069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4582999999998162e-05, 'source_diff': 2.4582999999998162e-05}, {'time': 0.020043, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020056778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3778000000002483e-05, 'source_diff': 1.3778000000002483e-05}, {'time': 0.020057694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020071222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.020072097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.020085847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.020086833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.020104972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.020105861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.020124583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8722000000002265e-05, 'source_diff': 1.8722000000002265e-05}, {'time': 0.020125514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020141472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.020142389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020153292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.020154236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020181028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6792000000001176e-05, 'source_diff': 2.6792000000001176e-05}, {'time': 0.020181944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020194778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833999999999762e-05, 'source_diff': 1.2833999999999762e-05}, {'time': 0.020195694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020224708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.020225639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020252806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.716700000000155e-05, 'source_diff': 2.716700000000155e-05}, {'time': 0.020253736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020284306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.056999999999713e-05, 'source_diff': 3.056999999999713e-05}, {'time': 0.02028525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.020312708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7457999999997568e-05, 'source_diff': 2.7457999999997568e-05}, {'time': 0.020313639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.020343278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9638999999997973e-05, 'source_diff': 2.9638999999997973e-05}, {'time': 0.020344222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.020358597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020371431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833999999999762e-05, 'source_diff': 1.2833999999999762e-05}, {'time': 0.020372403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.020394833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2430000000000366e-05, 'source_diff': 2.2430000000000366e-05}, {'time': 0.020395792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.020408611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.020409556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020422056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.020422986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020438028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5041999999999833e-05, 'source_diff': 1.5041999999999833e-05}, {'time': 0.020438931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.020459625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0693999999998186e-05, 'source_diff': 2.0693999999998186e-05}, {'time': 0.020460486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610000000013052e-07, 'source_diff': 8.610000000013052e-07}, {'time': 0.020488569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8083000000001662e-05, 'source_diff': 2.8083000000001662e-05}, {'time': 0.0204895, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020507931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.020508875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.02052325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.020543556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0306000000001184e-05, 'source_diff': 2.0306000000001184e-05}, {'time': 0.020544514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.020561361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.020562375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020586028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.365299999999848e-05, 'source_diff': 2.365299999999848e-05}, {'time': 0.020586972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020608194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1222000000001295e-05, 'source_diff': 2.1222000000001295e-05}, {'time': 0.020609139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.020626944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:52.857" endtime="20201110 08:32:52.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.853" endtime="20201110 08:32:52.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:52.887" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:52.863" endtime="20201110 08:32:52.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.890" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:52.889" endtime="20201110 08:32:52.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.895" level="INFO">VALUE: {'sourcetime': [0.019597167, 0.019598347, 0.019609431, 0.019610375, 0.019640875, 0.019641806, 0.01965775, 0.019658667, 0.019683944, 0.019684903, 0.01970675, 0.019707694, 0.019727042, 0.019727972, 0.01975575, 0.019756681, 0.019786014, 0.019786958, 0.019814736, 0.019815653, 0.019829111, 0.019830042, 0.019844819, 0.019845667, 0.019866597, 0.019867528, 0.019881611, 0.019882528, 0.019908125, 0.019909056, 0.019925931, 0.019926861, 0.019952764, 0.019953708, 0.019979611, 0.019980542, 0.019991833, 0.01999275, 0.020016472, 0.020017486, 0.020042069, 0.020043, 0.020056778, 0.020057694, 0.020071222, 0.020072097, 0.020085847, 0.020086833, 0.020104972, 0.020105861, 0.020124583, 0.020125514, 0.020141472, 0.020142389, 0.020153292, 0.020154236, 0.020181028, 0.020181944, 0.020194778, 0.020195694, 0.020224708, 0.020225639, 0.020252806, 0.020253736, 0.020284306, 0.02028525, 0.020312708, 0.020313639, 0.020343278, 0.020344222, 0.020357667, 0.020358597, 0.020371431, 0.020372403, 0.020394833, 0.020395792, 0.020408611, 0.020409556, 0.020422056, 0.020422986, 0.020438028, 0.020438931, 0.020459625, 0.020460486, 0.020488569, 0.0204895, 0.020507931, 0.020508875, 0.020522375, 0.02052325, 0.020543556, 0.020544514, 0.020561361, 0.020562375, 0.020586028, 0.020586972, 0.020608194, 0.020609139, 0.020626, 0.020626944], 'source_diff': [0, 1.179999999999931e-06, 1.1084000000001482e-05, 9.43999999999251e-07, 3.0499999999999278e-05, 9.310000000026242e-07, 1.5944000000000375e-05, 9.169999999995848e-07, 2.5276999999997163e-05, 9.59000000001764e-07, 2.184699999999845e-05, 9.440000000027204e-07, 1.9347999999998894e-05, 9.299999999996811e-07, 2.7777999999999137e-05, 9.310000000026242e-07, 2.9332999999999443e-05, 9.43999999999251e-07, 2.7777999999999137e-05, 9.169999999995848e-07, 1.3458000000000914e-05, 9.309999999991547e-07, 1.477700000000054e-05, 8.480000000012089e-07, 2.0929999999998866e-05, 9.309999999991547e-07, 1.4083000000001539e-05, 9.169999999995848e-07, 2.5596999999998732e-05, 9.310000000026242e-07, 1.687499999999953e-05, 9.299999999996811e-07, 2.590300000000073e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.309999999991547e-07, 1.1291000000000079e-05, 9.169999999995848e-07, 2.3722000000000326e-05, 1.01400000000057e-06, 2.4582999999998162e-05, 9.309999999991547e-07, 1.3778000000002483e-05, 9.160000000001112e-07, 1.3527999999998763e-05, 8.750000000008751e-07, 1.3749999999999873e-05, 9.859999999979607e-07, 1.813900000000035e-05, 8.89000000000445e-07, 1.8722000000002265e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 1.0902999999999607e-05, 9.43999999999251e-07, 2.6792000000001176e-05, 9.160000000001112e-07, 1.2833999999999762e-05, 9.160000000001112e-07, 2.9014000000000817e-05, 9.309999999991547e-07, 2.716700000000155e-05, 9.299999999996811e-07, 3.056999999999713e-05, 9.440000000027204e-07, 2.7457999999997568e-05, 9.310000000026242e-07, 2.9638999999997973e-05, 9.43999999999251e-07, 1.3445000000000817e-05, 9.299999999996811e-07, 1.2833999999999762e-05, 9.720000000018603e-07, 2.2430000000000366e-05, 9.589999999982945e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 1.2500000000002093e-05, 9.299999999996811e-07, 1.5041999999999833e-05, 9.030000000000149e-07, 2.0693999999998186e-05, 8.610000000013052e-07, 2.8083000000001662e-05, 9.309999999991547e-07, 1.843099999999931e-05, 9.43999999999251e-07, 1.3499999999999623e-05, 8.750000000008751e-07, 2.0306000000001184e-05, 9.57999999998821e-07, 1.684700000000039e-05, 1.01400000000057e-06, 2.365299999999848e-05, 9.43999999999251e-07, 2.1222000000001295e-05, 9.449999999987246e-07, 1.686099999999996e-05, 9.440000000027204e-07], 'eventdiff': [0, 1.179999999999931e-06, 1.1084000000001482e-05, 9.43999999999251e-07, 3.0499999999999278e-05, 9.310000000026242e-07, 1.5944000000000375e-05, 9.169999999995848e-07, 2.5276999999997163e-05, 9.59000000001764e-07, 2.184699999999845e-05, 9.440000000027204e-07, 1.9347999999998894e-05, 9.299999999996811e-07, 2.7777999999999137e-05, 9.310000000026242e-07, 2.9332999999999443e-05, 9.43999999999251e-07, 2.7777999999999137e-05, 9.169999999995848e-07, 1.3458000000000914e-05, 9.309999999991547e-07, 1.477700000000054e-05, 8.480000000012089e-07, 2.0929999999998866e-05, 9.309999999991547e-07, 1.4083000000001539e-05, 9.169999999995848e-07, 2.5596999999998732e-05, 9.310000000026242e-07, 1.687499999999953e-05, 9.299999999996811e-07, 2.590300000000073e-05, 9.43999999999251e-07, 2.590300000000073e-05, 9.309999999991547e-07, 1.1291000000000079e-05, 9.169999999995848e-07, 2.3722000000000326e-05, 1.01400000000057e-06, 2.4582999999998162e-05, 9.309999999991547e-07, 1.3778000000002483e-05, 9.160000000001112e-07, 1.3527999999998763e-05, 8.750000000008751e-07, 1.3749999999999873e-05, 9.859999999979607e-07, 1.813900000000035e-05, 8.89000000000445e-07, 1.8722000000002265e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 1.0902999999999607e-05, 9.43999999999251e-07, 2.6792000000001176e-05, 9.160000000001112e-07, 1.2833999999999762e-05, 9.160000000001112e-07, 2.9014000000000817e-05, 9.309999999991547e-07, 2.716700000000155e-05, 9.299999999996811e-07, 3.056999999999713e-05, 9.440000000027204e-07, 2.7457999999997568e-05, 9.310000000026242e-07, 2.9638999999997973e-05, 9.43999999999251e-07, 1.3445000000000817e-05, 9.299999999996811e-07, 1.2833999999999762e-05, 9.720000000018603e-07, 2.2430000000000366e-05, 9.589999999982945e-07, 1.2819000000000719e-05, 9.449999999987246e-07, 1.2500000000002093e-05, 9.299999999996811e-07, 1.5041999999999833e-05, 9.030000000000149e-07, 2.0693999999998186e-05, 8.610000000013052e-07, 2.8083000000001662e-05, 9.309999999991547e-07, 1.843099999999931e-05, 9.43999999999251e-07, 1.3499999999999623e-05, 8.750000000008751e-07, 2.0306000000001184e-05, 9.57999999998821e-07, 1.684700000000039e-05, 1.01400000000057e-06, 2.365299999999848e-05, 9.43999999999251e-07, 2.1222000000001295e-05, 9.449999999987246e-07, 1.686099999999996e-05, 9.440000000027204e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:52.891" endtime="20201110 08:32:52.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.888" endtime="20201110 08:32:52.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.900" level="INFO">${RESULT} = [{'time': 0.019598347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.179999999999931e-06, 'source_diff': 1.179999999999931e-06}, {'time': 0.019610375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:52.897" endtime="20201110 08:32:52.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:52.914" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:52.901" endtime="20201110 08:32:52.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.918" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:52.917" endtime="20201110 08:32:52.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.920" level="INFO">VALUE: [1.179999999999931e-06, 9.43999999999251e-07, 9.310000000026242e-07, 9.169999999995848e-07, 9.59000000001764e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.309999999991547e-07, 8.480000000012089e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.169999999995848e-07, 1.01400000000057e-06, 9.309999999991547e-07, 9.160000000001112e-07, 8.750000000008751e-07, 9.859999999979607e-07, 8.89000000000445e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.720000000018603e-07, 9.589999999982945e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.030000000000149e-07, 8.610000000013052e-07, 9.309999999991547e-07, 9.43999999999251e-07, 8.750000000008751e-07, 9.57999999998821e-07, 1.01400000000057e-06, 9.43999999999251e-07, 9.449999999987246e-07, 9.440000000027204e-07]</msg>
<status status="PASS" starttime="20201110 08:32:52.919" endtime="20201110 08:32:52.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.914" endtime="20201110 08:32:52.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.924" endtime="20201110 08:32:52.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.928" endtime="20201110 08:32:52.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.926" endtime="20201110 08:32:52.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.922" endtime="20201110 08:32:52.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.518" endtime="20201110 08:32:52.950"></status>
</kw>
<msg timestamp="20201110 08:32:52.950" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.958" endtime="20201110 08:32:52.967"></status>
</kw>
<msg timestamp="20201110 08:32:52.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.956" endtime="20201110 08:32:52.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.970" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.969" endtime="20201110 08:32:52.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.971" endtime="20201110 08:32:52.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.954" endtime="20201110 08:32:52.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.952" endtime="20201110 08:32:52.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.980" endtime="20201110 08:32:53.267"></status>
</kw>
<msg timestamp="20201110 08:32:53.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018907236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018908431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.978" endtime="20201110 08:32:53.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018907236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018908431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.271" endtime="20201110 08:32:53.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.280" endtime="20201110 08:32:53.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.976" endtime="20201110 08:32:53.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.974" endtime="20201110 08:32:53.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.286" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:53.285" endtime="20201110 08:32:53.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.292" level="INFO">VALUE: [{'time': 0.018907236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018908431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018922375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3944000000001844e-05, 'source_diff': 1.3944000000001844e-05}, {'time': 0.018923319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018942361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9042000000000364e-05, 'source_diff': 1.9042000000000364e-05}, {'time': 0.018943306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.781899999999878e-05, 'source_diff': 1.781899999999878e-05}, {'time': 0.018962042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018981722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9680000000001086e-05, 'source_diff': 1.9680000000001086e-05}, {'time': 0.018982653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018995819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166000000001954e-05, 'source_diff': 1.3166000000001954e-05}, {'time': 0.018996736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019021389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.019022319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019039194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019040125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019061361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1235999999997396e-05, 'source_diff': 2.1235999999997396e-05}, {'time': 0.019062306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019084167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.019085097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019115681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0584000000000167e-05, 'source_diff': 3.0584000000000167e-05}, {'time': 0.019116611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019129431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.019130375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.215299999999698e-05, 'source_diff': 2.215299999999698e-05}, {'time': 0.019153472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019166611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.019167556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019188778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1222000000001295e-05, 'source_diff': 2.1222000000001295e-05}, {'time': 0.01918975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019200625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0875000000000468e-05, 'source_diff': 1.0875000000000468e-05}, {'time': 0.019201556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019218417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.019219292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.019234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.533300000000279e-05, 'source_diff': 1.533300000000279e-05}, {'time': 0.019235556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019254278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8721999999998795e-05, 'source_diff': 1.8721999999998795e-05}, {'time': 0.019255264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019275847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.058299999999763e-05, 'source_diff': 2.058299999999763e-05}, {'time': 0.019276778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019302361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5582999999999162e-05, 'source_diff': 2.5582999999999162e-05}, {'time': 0.019303319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019331694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8375000000000622e-05, 'source_diff': 2.8375000000000622e-05}, {'time': 0.019332639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019344833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194000000000094e-05, 'source_diff': 1.2194000000000094e-05}, {'time': 0.019345764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019372944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7179999999998178e-05, 'source_diff': 2.7179999999998178e-05}, {'time': 0.019373847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019396944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.019397875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019424417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6542000000000926e-05, 'source_diff': 2.6542000000000926e-05}, {'time': 0.019425333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019439097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.019440056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019455667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.561099999999871e-05, 'source_diff': 1.561099999999871e-05}, {'time': 0.019456681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019471292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4611000000001179e-05, 'source_diff': 1.4611000000001179e-05}, {'time': 0.019472222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019484125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.019485042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019504153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.911099999999874e-05, 'source_diff': 1.911099999999874e-05}, {'time': 0.019505042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019534375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.019535292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019551556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6264000000001944e-05, 'source_diff': 1.6264000000001944e-05}, {'time': 0.019552486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.0195675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5014000000000693e-05, 'source_diff': 1.5014000000000693e-05}, {'time': 0.019568444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019593083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.463899999999991e-05, 'source_diff': 2.463899999999991e-05}, {'time': 0.019594014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019620236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.019621167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019637792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662500000000275e-05, 'source_diff': 1.662500000000275e-05}, {'time': 0.019638667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.0196565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.783300000000182e-05, 'source_diff': 1.783300000000182e-05}, {'time': 0.019657403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019674306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.690299999999867e-05, 'source_diff': 1.690299999999867e-05}, {'time': 0.019675222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019705153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9931000000000402e-05, 'source_diff': 2.9931000000000402e-05}, {'time': 0.019706097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019733236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.713900000000241e-05, 'source_diff': 2.713900000000241e-05}, {'time': 0.019734181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019758208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4026999999999382e-05, 'source_diff': 2.4026999999999382e-05}, {'time': 0.019759153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019770056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.019771014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019781806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0791999999999052e-05, 'source_diff': 1.0791999999999052e-05}, {'time': 0.019782764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019807042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4277999999999106e-05, 'source_diff': 2.4277999999999106e-05}, {'time': 0.019807986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019836097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8111000000000802e-05, 'source_diff': 2.8111000000000802e-05}, {'time': 0.019837, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019864444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7443999999997998e-05, 'source_diff': 2.7443999999997998e-05}, {'time': 0.019865403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019888819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3415999999998327e-05, 'source_diff': 2.3415999999998327e-05}, {'time': 0.019889736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.019904736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999997654e-05, 'source_diff': 1.4999999999997654e-05}, {'time': 0.019905681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019927528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.184699999999845e-05, 'source_diff': 2.184699999999845e-05}, {'time': 0.019928472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:53.288" endtime="20201110 08:32:53.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.283" endtime="20201110 08:32:53.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:53.318" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:53.294" endtime="20201110 08:32:53.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.322" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:53.321" endtime="20201110 08:32:53.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.327" level="INFO">VALUE: {'sourcetime': [0.018907236, 0.018908431, 0.018922375, 0.018923319, 0.018942361, 0.018943306, 0.018961125, 0.018962042, 0.018981722, 0.018982653, 0.018995819, 0.018996736, 0.019021389, 0.019022319, 0.019039194, 0.019040125, 0.019061361, 0.019062306, 0.019084167, 0.019085097, 0.019115681, 0.019116611, 0.019129431, 0.019130375, 0.019152528, 0.019153472, 0.019166611, 0.019167556, 0.019188778, 0.01918975, 0.019200625, 0.019201556, 0.019218417, 0.019219292, 0.019234625, 0.019235556, 0.019254278, 0.019255264, 0.019275847, 0.019276778, 0.019302361, 0.019303319, 0.019331694, 0.019332639, 0.019344833, 0.019345764, 0.019372944, 0.019373847, 0.019396944, 0.019397875, 0.019424417, 0.019425333, 0.019439097, 0.019440056, 0.019455667, 0.019456681, 0.019471292, 0.019472222, 0.019484125, 0.019485042, 0.019504153, 0.019505042, 0.019534375, 0.019535292, 0.019551556, 0.019552486, 0.0195675, 0.019568444, 0.019593083, 0.019594014, 0.019620236, 0.019621167, 0.019637792, 0.019638667, 0.0196565, 0.019657403, 0.019674306, 0.019675222, 0.019705153, 0.019706097, 0.019733236, 0.019734181, 0.019758208, 0.019759153, 0.019770056, 0.019771014, 0.019781806, 0.019782764, 0.019807042, 0.019807986, 0.019836097, 0.019837, 0.019864444, 0.019865403, 0.019888819, 0.019889736, 0.019904736, 0.019905681, 0.019927528, 0.019928472], 'source_diff': [0, 1.1949999999989747e-06, 1.3944000000001844e-05, 9.43999999999251e-07, 1.9042000000000364e-05, 9.449999999987246e-07, 1.781899999999878e-05, 9.169999999995848e-07, 1.9680000000001086e-05, 9.309999999991547e-07, 1.3166000000001954e-05, 9.169999999995848e-07, 2.465299999999948e-05, 9.299999999996811e-07, 1.687499999999953e-05, 9.310000000026242e-07, 2.1235999999997396e-05, 9.450000000021941e-07, 2.186099999999802e-05, 9.299999999996811e-07, 3.0584000000000167e-05, 9.299999999996811e-07, 1.2820000000000192e-05, 9.440000000027204e-07, 2.215299999999698e-05, 9.440000000027204e-07, 1.3138999999998818e-05, 9.449999999987246e-07, 2.1222000000001295e-05, 9.719999999983908e-07, 1.0875000000000468e-05, 9.310000000026242e-07, 1.686099999999996e-05, 8.749999999974056e-07, 1.533300000000279e-05, 9.309999999991547e-07, 1.8721999999998795e-05, 9.860000000014302e-07, 2.058299999999763e-05, 9.310000000026242e-07, 2.5582999999999162e-05, 9.57999999998821e-07, 2.8375000000000622e-05, 9.449999999987246e-07, 1.2194000000000094e-05, 9.310000000026242e-07, 2.7179999999998178e-05, 9.030000000000149e-07, 2.30969999999997e-05, 9.309999999991547e-07, 2.6542000000000926e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.59000000001764e-07, 1.561099999999871e-05, 1.01400000000057e-06, 1.4611000000001179e-05, 9.299999999996811e-07, 1.1903000000000608e-05, 9.169999999995848e-07, 1.911099999999874e-05, 8.89000000000445e-07, 2.9332999999999443e-05, 9.169999999995848e-07, 1.6264000000001944e-05, 9.299999999996811e-07, 1.5014000000000693e-05, 9.43999999999251e-07, 2.463899999999991e-05, 9.309999999991547e-07, 2.6221999999999357e-05, 9.309999999991547e-07, 1.662500000000275e-05, 8.749999999974056e-07, 1.783300000000182e-05, 9.030000000000149e-07, 1.690299999999867e-05, 9.160000000001112e-07, 2.9931000000000402e-05, 9.43999999999251e-07, 2.713900000000241e-05, 9.449999999987246e-07, 2.4026999999999382e-05, 9.450000000021941e-07, 1.0902999999999607e-05, 9.57999999998821e-07, 1.0791999999999052e-05, 9.580000000022904e-07, 2.4277999999999106e-05, 9.43999999999251e-07, 2.8111000000000802e-05, 9.030000000000149e-07, 2.7443999999997998e-05, 9.59000000001764e-07, 2.3415999999998327e-05, 9.170000000030543e-07, 1.4999999999997654e-05, 9.450000000021941e-07, 2.184699999999845e-05, 9.43999999999251e-07], 'eventdiff': [0, 1.1949999999989747e-06, 1.3944000000001844e-05, 9.43999999999251e-07, 1.9042000000000364e-05, 9.449999999987246e-07, 1.781899999999878e-05, 9.169999999995848e-07, 1.9680000000001086e-05, 9.309999999991547e-07, 1.3166000000001954e-05, 9.169999999995848e-07, 2.465299999999948e-05, 9.299999999996811e-07, 1.687499999999953e-05, 9.310000000026242e-07, 2.1235999999997396e-05, 9.450000000021941e-07, 2.186099999999802e-05, 9.299999999996811e-07, 3.0584000000000167e-05, 9.299999999996811e-07, 1.2820000000000192e-05, 9.440000000027204e-07, 2.215299999999698e-05, 9.440000000027204e-07, 1.3138999999998818e-05, 9.449999999987246e-07, 2.1222000000001295e-05, 9.719999999983908e-07, 1.0875000000000468e-05, 9.310000000026242e-07, 1.686099999999996e-05, 8.749999999974056e-07, 1.533300000000279e-05, 9.309999999991547e-07, 1.8721999999998795e-05, 9.860000000014302e-07, 2.058299999999763e-05, 9.310000000026242e-07, 2.5582999999999162e-05, 9.57999999998821e-07, 2.8375000000000622e-05, 9.449999999987246e-07, 1.2194000000000094e-05, 9.310000000026242e-07, 2.7179999999998178e-05, 9.030000000000149e-07, 2.30969999999997e-05, 9.309999999991547e-07, 2.6542000000000926e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.59000000001764e-07, 1.561099999999871e-05, 1.01400000000057e-06, 1.4611000000001179e-05, 9.299999999996811e-07, 1.1903000000000608e-05, 9.169999999995848e-07, 1.911099999999874e-05, 8.89000000000445e-07, 2.9332999999999443e-05, 9.169999999995848e-07, 1.6264000000001944e-05, 9.299999999996811e-07, 1.5014000000000693e-05, 9.43999999999251e-07, 2.463899999999991e-05, 9.309999999991547e-07, 2.6221999999999357e-05, 9.309999999991547e-07, 1.662500000000275e-05, 8.749999999974056e-07, 1.783300000000182e-05, 9.030000000000149e-07, 1.690299999999867e-05, 9.160000000001112e-07, 2.9931000000000402e-05, 9.43999999999251e-07, 2.713900000000241e-05, 9.449999999987246e-07, 2.4026999999999382e-05, 9.450000000021941e-07, 1.0902999999999607e-05, 9.57999999998821e-07, 1.0791999999999052e-05, 9.580000000022904e-07, 2.4277999999999106e-05, 9.43999999999251e-07, 2.8111000000000802e-05, 9.030000000000149e-07, 2.7443999999997998e-05, 9.59000000001764e-07, 2.3415999999998327e-05, 9.170000000030543e-07, 1.4999999999997654e-05, 9.450000000021941e-07, 2.184699999999845e-05, 9.43999999999251e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:53.324" endtime="20201110 08:32:53.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.319" endtime="20201110 08:32:53.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:53.333" level="INFO">${RESULT} = [{'time': 0.018908431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018923319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:53.329" endtime="20201110 08:32:53.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:53.346" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:53.334" endtime="20201110 08:32:53.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.350" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:53.349" endtime="20201110 08:32:53.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.353" level="INFO">VALUE: [1.1949999999989747e-06, 9.43999999999251e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.449999999987246e-07, 9.719999999983908e-07, 9.310000000026242e-07, 8.749999999974056e-07, 9.309999999991547e-07, 9.860000000014302e-07, 9.310000000026242e-07, 9.57999999998821e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.59000000001764e-07, 1.01400000000057e-06, 9.299999999996811e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.309999999991547e-07, 8.749999999974056e-07, 9.030000000000149e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.57999999998821e-07, 9.580000000022904e-07, 9.43999999999251e-07, 9.030000000000149e-07, 9.59000000001764e-07, 9.170000000030543e-07, 9.450000000021941e-07, 9.43999999999251e-07]</msg>
<status status="PASS" starttime="20201110 08:32:53.351" endtime="20201110 08:32:53.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.347" endtime="20201110 08:32:53.353"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.356" endtime="20201110 08:32:53.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:53.359" endtime="20201110 08:32:53.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.357" endtime="20201110 08:32:53.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.354" endtime="20201110 08:32:53.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.951" endtime="20201110 08:32:53.380"></status>
</kw>
<msg timestamp="20201110 08:32:53.380" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.388" endtime="20201110 08:32:53.397"></status>
</kw>
<msg timestamp="20201110 08:32:53.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.386" endtime="20201110 08:32:53.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.400" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.398" endtime="20201110 08:32:53.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.401" endtime="20201110 08:32:53.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.383" endtime="20201110 08:32:53.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.382" endtime="20201110 08:32:53.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.410" endtime="20201110 08:32:53.697"></status>
</kw>
<msg timestamp="20201110 08:32:53.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0186845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:53.408" endtime="20201110 08:32:53.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0186845, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:53.701" endtime="20201110 08:32:53.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.710" endtime="20201110 08:32:53.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.406" endtime="20201110 08:32:53.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.404" endtime="20201110 08:32:53.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.717" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:53.715" endtime="20201110 08:32:53.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.722" level="INFO">VALUE: [{'time': 0.018683319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0186845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018712472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7972000000001107e-05, 'source_diff': 2.7972000000001107e-05}, {'time': 0.018713417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018736861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3444000000000936e-05, 'source_diff': 2.3444000000000936e-05}, {'time': 0.018737778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018752444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.018753375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018767458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.018768403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018786514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.018787458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018804944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7486000000000584e-05, 'source_diff': 1.7486000000000584e-05}, {'time': 0.018805875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018834014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.018834903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.018863306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8402999999999762e-05, 'source_diff': 2.8402999999999762e-05}, {'time': 0.018864236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018877694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3458000000000914e-05, 'source_diff': 1.3458000000000914e-05}, {'time': 0.018878639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018895806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.716700000000196e-05, 'source_diff': 1.716700000000196e-05}, {'time': 0.018896736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018918597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.018919542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018939222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9679999999997616e-05, 'source_diff': 1.9679999999997616e-05}, {'time': 0.018940153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018957333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7179999999998585e-05, 'source_diff': 1.7179999999998585e-05}, {'time': 0.018958264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018970167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.018971097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018984569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.018985486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019002361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019003306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019028903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5596999999998732e-05, 'source_diff': 2.5596999999998732e-05}, {'time': 0.019029917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019056667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6749999999998997e-05, 'source_diff': 2.6749999999998997e-05}, {'time': 0.019057611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019084444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6833000000000412e-05, 'source_diff': 2.6833000000000412e-05}, {'time': 0.019085389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019100069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.019101, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019117889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.019118819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019133236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4417000000002678e-05, 'source_diff': 1.4417000000002678e-05}, {'time': 0.019134139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019151333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7193999999998155e-05, 'source_diff': 1.7193999999998155e-05}, {'time': 0.019152278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019175389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.311100000000274e-05, 'source_diff': 2.311100000000274e-05}, {'time': 0.019176333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019194736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.840300000000017e-05, 'source_diff': 1.840300000000017e-05}, {'time': 0.019195667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.01922375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8083000000001662e-05, 'source_diff': 2.8083000000001662e-05}, {'time': 0.019224708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019237833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3124999999999248e-05, 'source_diff': 1.3124999999999248e-05}, {'time': 0.019238778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019269333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0554999999998084e-05, 'source_diff': 3.0554999999998084e-05}, {'time': 0.019270278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019298375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8097000000001232e-05, 'source_diff': 2.8097000000001232e-05}, {'time': 0.019299306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019317458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8152000000000446e-05, 'source_diff': 1.8152000000000446e-05}, {'time': 0.019318375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019336792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.019337722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.019364236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6513999999998317e-05, 'source_diff': 2.6513999999998317e-05}, {'time': 0.01936525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019376444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.019377389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019394583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7194000000001625e-05, 'source_diff': 1.7194000000001625e-05}, {'time': 0.019395514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.841699999999974e-05, 'source_diff': 1.841699999999974e-05}, {'time': 0.019414889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019425778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.019426708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019453208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6499999999998747e-05, 'source_diff': 2.6499999999998747e-05}, {'time': 0.019454097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019478764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.466699999999905e-05, 'source_diff': 2.466699999999905e-05}, {'time': 0.019479694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019493153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.019494083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.01952, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.59170000000003e-05, 'source_diff': 2.59170000000003e-05}, {'time': 0.019520944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019548083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.713900000000241e-05, 'source_diff': 2.713900000000241e-05}, {'time': 0.019549014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019572486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3472000000000076e-05, 'source_diff': 2.3472000000000076e-05}, {'time': 0.019573347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610000000013052e-07, 'source_diff': 8.610000000013052e-07}, {'time': 0.019585264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.019586181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019609597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3415999999998327e-05, 'source_diff': 2.3415999999998327e-05}, {'time': 0.019610528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019634569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.404100000000242e-05, 'source_diff': 2.404100000000242e-05}, {'time': 0.019635514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019665153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9639000000001442e-05, 'source_diff': 2.9639000000001442e-05}, {'time': 0.019666083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.01968575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.966699999999752e-05, 'source_diff': 1.966699999999752e-05}, {'time': 0.019686681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019704806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.812499999999731e-05, 'source_diff': 1.812499999999731e-05}, {'time': 0.019705778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.019725722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9944000000000905e-05, 'source_diff': 1.9944000000000905e-05}, {'time': 0.019726653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:53.718" endtime="20201110 08:32:53.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.713" endtime="20201110 08:32:53.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:53.749" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:53.725" endtime="20201110 08:32:53.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.753" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:53.752" endtime="20201110 08:32:53.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.757" level="INFO">VALUE: {'sourcetime': [0.018683319, 0.0186845, 0.018712472, 0.018713417, 0.018736861, 0.018737778, 0.018752444, 0.018753375, 0.018767458, 0.018768403, 0.018786514, 0.018787458, 0.018804944, 0.018805875, 0.018834014, 0.018834903, 0.018863306, 0.018864236, 0.018877694, 0.018878639, 0.018895806, 0.018896736, 0.018918597, 0.018919542, 0.018939222, 0.018940153, 0.018957333, 0.018958264, 0.018970167, 0.018971097, 0.018984569, 0.018985486, 0.019002361, 0.019003306, 0.019028903, 0.019029917, 0.019056667, 0.019057611, 0.019084444, 0.019085389, 0.019100069, 0.019101, 0.019117889, 0.019118819, 0.019133236, 0.019134139, 0.019151333, 0.019152278, 0.019175389, 0.019176333, 0.019194736, 0.019195667, 0.01922375, 0.019224708, 0.019237833, 0.019238778, 0.019269333, 0.019270278, 0.019298375, 0.019299306, 0.019317458, 0.019318375, 0.019336792, 0.019337722, 0.019364236, 0.01936525, 0.019376444, 0.019377389, 0.019394583, 0.019395514, 0.019413931, 0.019414889, 0.019425778, 0.019426708, 0.019453208, 0.019454097, 0.019478764, 0.019479694, 0.019493153, 0.019494083, 0.01952, 0.019520944, 0.019548083, 0.019549014, 0.019572486, 0.019573347, 0.019585264, 0.019586181, 0.019609597, 0.019610528, 0.019634569, 0.019635514, 0.019665153, 0.019666083, 0.01968575, 0.019686681, 0.019704806, 0.019705778, 0.019725722, 0.019726653], 'source_diff': [0, 1.1809999999994047e-06, 2.7972000000001107e-05, 9.449999999987246e-07, 2.3444000000000936e-05, 9.169999999995848e-07, 1.4665999999999985e-05, 9.309999999991547e-07, 1.4083000000001539e-05, 9.449999999987246e-07, 1.811100000000121e-05, 9.43999999999251e-07, 1.7486000000000584e-05, 9.309999999991547e-07, 2.8138999999999942e-05, 8.89000000000445e-07, 2.8402999999999762e-05, 9.299999999996811e-07, 1.3458000000000914e-05, 9.449999999987246e-07, 1.716700000000196e-05, 9.299999999996811e-07, 2.186099999999802e-05, 9.450000000021941e-07, 1.9679999999997616e-05, 9.310000000026242e-07, 1.7179999999998585e-05, 9.309999999991547e-07, 1.1903000000000608e-05, 9.299999999996811e-07, 1.3472000000000484e-05, 9.169999999995848e-07, 1.687499999999953e-05, 9.450000000021941e-07, 2.5596999999998732e-05, 1.01400000000057e-06, 2.6749999999998997e-05, 9.43999999999251e-07, 2.6833000000000412e-05, 9.450000000021941e-07, 1.4679999999999555e-05, 9.309999999991547e-07, 1.68889999999991e-05, 9.299999999996811e-07, 1.4417000000002678e-05, 9.030000000000149e-07, 1.7193999999998155e-05, 9.449999999987246e-07, 2.311100000000274e-05, 9.43999999999251e-07, 1.840300000000017e-05, 9.309999999991547e-07, 2.8083000000001662e-05, 9.57999999998821e-07, 1.3124999999999248e-05, 9.450000000021941e-07, 3.0554999999998084e-05, 9.449999999987246e-07, 2.8097000000001232e-05, 9.309999999991547e-07, 1.8152000000000446e-05, 9.169999999995848e-07, 1.841699999999974e-05, 9.300000000031505e-07, 2.6513999999998317e-05, 1.01400000000057e-06, 1.1193999999999094e-05, 9.449999999987246e-07, 1.7194000000001625e-05, 9.309999999991547e-07, 1.841699999999974e-05, 9.580000000022904e-07, 1.0889000000000038e-05, 9.299999999996811e-07, 2.6499999999998747e-05, 8.89000000000445e-07, 2.466699999999905e-05, 9.299999999996811e-07, 1.3459000000000387e-05, 9.299999999996811e-07, 2.59170000000003e-05, 9.43999999999251e-07, 2.713900000000241e-05, 9.309999999991547e-07, 2.3472000000000076e-05, 8.610000000013052e-07, 1.1917000000000177e-05, 9.169999999995848e-07, 2.3415999999998327e-05, 9.309999999991547e-07, 2.404100000000242e-05, 9.449999999987246e-07, 2.9639000000001442e-05, 9.299999999996811e-07, 1.966699999999752e-05, 9.310000000026242e-07, 1.812499999999731e-05, 9.720000000018603e-07, 1.9944000000000905e-05, 9.309999999991547e-07], 'eventdiff': [0, 1.1809999999994047e-06, 2.7972000000001107e-05, 9.449999999987246e-07, 2.3444000000000936e-05, 9.169999999995848e-07, 1.4665999999999985e-05, 9.309999999991547e-07, 1.4083000000001539e-05, 9.449999999987246e-07, 1.811100000000121e-05, 9.43999999999251e-07, 1.7486000000000584e-05, 9.309999999991547e-07, 2.8138999999999942e-05, 8.89000000000445e-07, 2.8402999999999762e-05, 9.299999999996811e-07, 1.3458000000000914e-05, 9.449999999987246e-07, 1.716700000000196e-05, 9.299999999996811e-07, 2.186099999999802e-05, 9.450000000021941e-07, 1.9679999999997616e-05, 9.310000000026242e-07, 1.7179999999998585e-05, 9.309999999991547e-07, 1.1903000000000608e-05, 9.299999999996811e-07, 1.3472000000000484e-05, 9.169999999995848e-07, 1.687499999999953e-05, 9.450000000021941e-07, 2.5596999999998732e-05, 1.01400000000057e-06, 2.6749999999998997e-05, 9.43999999999251e-07, 2.6833000000000412e-05, 9.450000000021941e-07, 1.4679999999999555e-05, 9.309999999991547e-07, 1.68889999999991e-05, 9.299999999996811e-07, 1.4417000000002678e-05, 9.030000000000149e-07, 1.7193999999998155e-05, 9.449999999987246e-07, 2.311100000000274e-05, 9.43999999999251e-07, 1.840300000000017e-05, 9.309999999991547e-07, 2.8083000000001662e-05, 9.57999999998821e-07, 1.3124999999999248e-05, 9.450000000021941e-07, 3.0554999999998084e-05, 9.449999999987246e-07, 2.8097000000001232e-05, 9.309999999991547e-07, 1.8152000000000446e-05, 9.169999999995848e-07, 1.841699999999974e-05, 9.300000000031505e-07, 2.6513999999998317e-05, 1.01400000000057e-06, 1.1193999999999094e-05, 9.449999999987246e-07, 1.7194000000001625e-05, 9.309999999991547e-07, 1.841699999999974e-05, 9.580000000022904e-07, 1.0889000000000038e-05, 9.299999999996811e-07, 2.6499999999998747e-05, 8.89000000000445e-07, 2.466699999999905e-05, 9.299999999996811e-07, 1.3459000000000387e-05, 9.299999999996811e-07, 2.59170000000003e-05, 9.43999999999251e-07, 2.713900000000241e-05, 9.309999999991547e-07, 2.3472000000000076e-05, 8.610000000013052e-07, 1.1917000000000177e-05, 9.169999999995848e-07, 2.3415999999998327e-05, 9.309999999991547e-07, 2.404100000000242e-05, 9.449999999987246e-07, 2.9639000000001442e-05, 9.299999999996811e-07, 1.966699999999752e-05, 9.310000000026242e-07, 1.812499999999731e-05, 9.720000000018603e-07, 1.9944000000000905e-05, 9.309999999991547e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:53.754" endtime="20201110 08:32:53.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.750" endtime="20201110 08:32:53.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:53.763" level="INFO">${RESULT} = [{'time': 0.0186845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018713417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:53.759" endtime="20201110 08:32:53.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:53.776" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:53.764" endtime="20201110 08:32:53.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:53.779" endtime="20201110 08:32:53.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.783" level="INFO">VALUE: [1.1809999999994047e-06, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.310000000026242e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.450000000021941e-07, 1.01400000000057e-06, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.57999999998821e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.300000000031505e-07, 1.01400000000057e-06, 9.449999999987246e-07, 9.309999999991547e-07, 9.580000000022904e-07, 9.299999999996811e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.309999999991547e-07, 8.610000000013052e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.720000000018603e-07, 9.309999999991547e-07]</msg>
<status status="PASS" starttime="20201110 08:32:53.781" endtime="20201110 08:32:53.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.777" endtime="20201110 08:32:53.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.786" endtime="20201110 08:32:53.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:53.789" endtime="20201110 08:32:53.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.788" endtime="20201110 08:32:53.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.784" endtime="20201110 08:32:53.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.380" endtime="20201110 08:32:53.810"></status>
</kw>
<msg timestamp="20201110 08:32:53.810" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.819" endtime="20201110 08:32:53.828"></status>
</kw>
<msg timestamp="20201110 08:32:53.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.817" endtime="20201110 08:32:53.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.829" endtime="20201110 08:32:53.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.832" endtime="20201110 08:32:53.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.814" endtime="20201110 08:32:53.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.812" endtime="20201110 08:32:53.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.841" endtime="20201110 08:32:54.126"></status>
</kw>
<msg timestamp="20201110 08:32:54.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.839" endtime="20201110 08:32:54.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019385444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.130" endtime="20201110 08:32:54.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.139" endtime="20201110 08:32:54.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.837" endtime="20201110 08:32:54.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.835" endtime="20201110 08:32:54.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.146" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:54.145" endtime="20201110 08:32:54.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.151" level="INFO">VALUE: [{'time': 0.019385444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019386708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639999999973506e-06, 'source_diff': 1.2639999999973506e-06}, {'time': 0.019410861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.415300000000245e-05, 'source_diff': 2.415300000000245e-05}, {'time': 0.019411792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019436153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436100000000052e-05, 'source_diff': 2.436100000000052e-05}, {'time': 0.019437083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019462667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5583999999998636e-05, 'source_diff': 2.5583999999998636e-05}, {'time': 0.019463611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019488597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4986000000001146e-05, 'source_diff': 2.4986000000001146e-05}, {'time': 0.019489514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019506389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019507306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019537903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.019538833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019559111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0278000000002044e-05, 'source_diff': 2.0278000000002044e-05}, {'time': 0.019560097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.019576611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6514000000002194e-05, 'source_diff': 1.6514000000002194e-05}, {'time': 0.019577542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019603458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5916000000000827e-05, 'source_diff': 2.5916000000000827e-05}, {'time': 0.019604375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019624986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019625931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019647819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1888000000001157e-05, 'source_diff': 2.1888000000001157e-05}, {'time': 0.019648736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019664972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6235999999999334e-05, 'source_diff': 1.6235999999999334e-05}, {'time': 0.019665903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019695847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9944000000000498e-05, 'source_diff': 2.9944000000000498e-05}, {'time': 0.019696792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019726111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.019727042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019754236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7194000000001217e-05, 'source_diff': 2.7194000000001217e-05}, {'time': 0.019755153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019772, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.684700000000039e-05, 'source_diff': 1.684700000000039e-05}, {'time': 0.019772972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019792611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.963900000000185e-05, 'source_diff': 1.963900000000185e-05}, {'time': 0.019793556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019806375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.019807319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019820486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166999999997958e-05, 'source_diff': 1.3166999999997958e-05}, {'time': 0.019821403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.019840125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8721999999998795e-05, 'source_diff': 1.8721999999998795e-05}, {'time': 0.019841056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019870389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.019871347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019885403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4055999999998403e-05, 'source_diff': 1.4055999999998403e-05}, {'time': 0.019886333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019910056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.37229999999998e-05, 'source_diff': 2.37229999999998e-05}, {'time': 0.019911, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019927875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.019928819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019945056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6236999999998808e-05, 'source_diff': 1.6236999999998808e-05}, {'time': 0.019946014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019968486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.019969403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019993139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.019994083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020009375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5292000000000083e-05, 'source_diff': 1.5292000000000083e-05}, {'time': 0.020010333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.020030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0013999999998755e-05, 'source_diff': 2.0013999999998755e-05}, {'time': 0.020031236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.020051542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0305999999997715e-05, 'source_diff': 2.0305999999997715e-05}, {'time': 0.020052514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.020070903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.83890000000006e-05, 'source_diff': 1.83890000000006e-05}, {'time': 0.020071847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020088097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.020089042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020102486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3443999999997874e-05, 'source_diff': 1.3443999999997874e-05}, {'time': 0.020103417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.02012, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.658300000000057e-05, 'source_diff': 1.658300000000057e-05}, {'time': 0.020120917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020145569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4652000000000007e-05, 'source_diff': 2.4652000000000007e-05}, {'time': 0.020146514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020170875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436100000000052e-05, 'source_diff': 2.436100000000052e-05}, {'time': 0.020171806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020193347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.154099999999992e-05, 'source_diff': 2.154099999999992e-05}, {'time': 0.020194264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020212097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.783299999999835e-05, 'source_diff': 1.783299999999835e-05}, {'time': 0.020213042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020241722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8679999999999678e-05, 'source_diff': 2.8679999999999678e-05}, {'time': 0.020242667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020262958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.029100000000214e-05, 'source_diff': 2.029100000000214e-05}, {'time': 0.020263944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.020282333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.83890000000006e-05, 'source_diff': 1.83890000000006e-05}, {'time': 0.020283264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020303861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.020304792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020321083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.629100000000161e-05, 'source_diff': 1.629100000000161e-05}, {'time': 0.020322, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.02035225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0249999999999028e-05, 'source_diff': 3.0249999999999028e-05}, {'time': 0.020353167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020383125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9958000000000068e-05, 'source_diff': 2.9958000000000068e-05}, {'time': 0.020384069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.020401542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7473000000000488e-05, 'source_diff': 1.7473000000000488e-05}, {'time': 0.020402486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020426847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436100000000052e-05, 'source_diff': 2.436100000000052e-05}, {'time': 0.020427764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020439056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291999999999552e-05, 'source_diff': 1.1291999999999552e-05}, {'time': 0.020439972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020453736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.020454681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:54.147" endtime="20201110 08:32:54.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.142" endtime="20201110 08:32:54.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:54.177" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:54.153" endtime="20201110 08:32:54.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.181" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:54.180" endtime="20201110 08:32:54.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.185" level="INFO">VALUE: {'sourcetime': [0.019385444, 0.019386708, 0.019410861, 0.019411792, 0.019436153, 0.019437083, 0.019462667, 0.019463611, 0.019488597, 0.019489514, 0.019506389, 0.019507306, 0.019537903, 0.019538833, 0.019559111, 0.019560097, 0.019576611, 0.019577542, 0.019603458, 0.019604375, 0.019624986, 0.019625931, 0.019647819, 0.019648736, 0.019664972, 0.019665903, 0.019695847, 0.019696792, 0.019726111, 0.019727042, 0.019754236, 0.019755153, 0.019772, 0.019772972, 0.019792611, 0.019793556, 0.019806375, 0.019807319, 0.019820486, 0.019821403, 0.019840125, 0.019841056, 0.019870389, 0.019871347, 0.019885403, 0.019886333, 0.019910056, 0.019911, 0.019927875, 0.019928819, 0.019945056, 0.019946014, 0.019968486, 0.019969403, 0.019993139, 0.019994083, 0.020009375, 0.020010333, 0.020030347, 0.020031236, 0.020051542, 0.020052514, 0.020070903, 0.020071847, 0.020088097, 0.020089042, 0.020102486, 0.020103417, 0.02012, 0.020120917, 0.020145569, 0.020146514, 0.020170875, 0.020171806, 0.020193347, 0.020194264, 0.020212097, 0.020213042, 0.020241722, 0.020242667, 0.020262958, 0.020263944, 0.020282333, 0.020283264, 0.020303861, 0.020304792, 0.020321083, 0.020322, 0.02035225, 0.020353167, 0.020383125, 0.020384069, 0.020401542, 0.020402486, 0.020426847, 0.020427764, 0.020439056, 0.020439972, 0.020453736, 0.020454681], 'source_diff': [0, 1.2639999999973506e-06, 2.415300000000245e-05, 9.309999999991547e-07, 2.436100000000052e-05, 9.299999999996811e-07, 2.5583999999998636e-05, 9.43999999999251e-07, 2.4986000000001146e-05, 9.169999999995848e-07, 1.687499999999953e-05, 9.169999999995848e-07, 3.059700000000026e-05, 9.299999999996811e-07, 2.0278000000002044e-05, 9.859999999979607e-07, 1.6514000000002194e-05, 9.309999999991547e-07, 2.5916000000000827e-05, 9.169999999995848e-07, 2.061100000000024e-05, 9.449999999987246e-07, 2.1888000000001157e-05, 9.169999999995848e-07, 1.6235999999999334e-05, 9.309999999991547e-07, 2.9944000000000498e-05, 9.450000000021941e-07, 2.9318999999999873e-05, 9.309999999991547e-07, 2.7194000000001217e-05, 9.169999999995848e-07, 1.684700000000039e-05, 9.719999999983908e-07, 1.963900000000185e-05, 9.449999999987246e-07, 1.2819000000000719e-05, 9.43999999999251e-07, 1.3166999999997958e-05, 9.170000000030543e-07, 1.8721999999998795e-05, 9.309999999991547e-07, 2.9332999999999443e-05, 9.580000000022904e-07, 1.4055999999998403e-05, 9.299999999996811e-07, 2.37229999999998e-05, 9.440000000027204e-07, 1.687499999999953e-05, 9.43999999999251e-07, 1.6236999999998808e-05, 9.580000000022904e-07, 2.2471999999999076e-05, 9.169999999995848e-07, 2.3735999999999896e-05, 9.43999999999251e-07, 1.5292000000000083e-05, 9.580000000022904e-07, 2.0013999999998755e-05, 8.89000000000445e-07, 2.0305999999997715e-05, 9.720000000018603e-07, 1.83890000000006e-05, 9.43999999999251e-07, 1.6249999999998904e-05, 9.450000000021941e-07, 1.3443999999997874e-05, 9.309999999991547e-07, 1.658300000000057e-05, 9.169999999995848e-07, 2.4652000000000007e-05, 9.450000000021941e-07, 2.436100000000052e-05, 9.309999999991547e-07, 2.154099999999992e-05, 9.169999999995848e-07, 1.783299999999835e-05, 9.450000000021941e-07, 2.8679999999999678e-05, 9.449999999987246e-07, 2.029100000000214e-05, 9.859999999979607e-07, 1.83890000000006e-05, 9.309999999991547e-07, 2.059700000000067e-05, 9.309999999991547e-07, 1.629100000000161e-05, 9.169999999995848e-07, 3.0249999999999028e-05, 9.169999999995848e-07, 2.9958000000000068e-05, 9.440000000027204e-07, 1.7473000000000488e-05, 9.43999999999251e-07, 2.436100000000052e-05, 9.169999999995848e-07, 1.1291999999999552e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.449999999987246e-07], 'eventdiff': [0, 1.2639999999973506e-06, 2.415300000000245e-05, 9.309999999991547e-07, 2.436100000000052e-05, 9.299999999996811e-07, 2.5583999999998636e-05, 9.43999999999251e-07, 2.4986000000001146e-05, 9.169999999995848e-07, 1.687499999999953e-05, 9.169999999995848e-07, 3.059700000000026e-05, 9.299999999996811e-07, 2.0278000000002044e-05, 9.859999999979607e-07, 1.6514000000002194e-05, 9.309999999991547e-07, 2.5916000000000827e-05, 9.169999999995848e-07, 2.061100000000024e-05, 9.449999999987246e-07, 2.1888000000001157e-05, 9.169999999995848e-07, 1.6235999999999334e-05, 9.309999999991547e-07, 2.9944000000000498e-05, 9.450000000021941e-07, 2.9318999999999873e-05, 9.309999999991547e-07, 2.7194000000001217e-05, 9.169999999995848e-07, 1.684700000000039e-05, 9.719999999983908e-07, 1.963900000000185e-05, 9.449999999987246e-07, 1.2819000000000719e-05, 9.43999999999251e-07, 1.3166999999997958e-05, 9.170000000030543e-07, 1.8721999999998795e-05, 9.309999999991547e-07, 2.9332999999999443e-05, 9.580000000022904e-07, 1.4055999999998403e-05, 9.299999999996811e-07, 2.37229999999998e-05, 9.440000000027204e-07, 1.687499999999953e-05, 9.43999999999251e-07, 1.6236999999998808e-05, 9.580000000022904e-07, 2.2471999999999076e-05, 9.169999999995848e-07, 2.3735999999999896e-05, 9.43999999999251e-07, 1.5292000000000083e-05, 9.580000000022904e-07, 2.0013999999998755e-05, 8.89000000000445e-07, 2.0305999999997715e-05, 9.720000000018603e-07, 1.83890000000006e-05, 9.43999999999251e-07, 1.6249999999998904e-05, 9.450000000021941e-07, 1.3443999999997874e-05, 9.309999999991547e-07, 1.658300000000057e-05, 9.169999999995848e-07, 2.4652000000000007e-05, 9.450000000021941e-07, 2.436100000000052e-05, 9.309999999991547e-07, 2.154099999999992e-05, 9.169999999995848e-07, 1.783299999999835e-05, 9.450000000021941e-07, 2.8679999999999678e-05, 9.449999999987246e-07, 2.029100000000214e-05, 9.859999999979607e-07, 1.83890000000006e-05, 9.309999999991547e-07, 2.059700000000067e-05, 9.309999999991547e-07, 1.629100000000161e-05, 9.169999999995848e-07, 3.0249999999999028e-05, 9.169999999995848e-07, 2.9958000000000068e-05, 9.440000000027204e-07, 1.7473000000000488e-05, 9.43999999999251e-07, 2.436100000000052e-05, 9.169999999995848e-07, 1.1291999999999552e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.449999999987246e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:54.182" endtime="20201110 08:32:54.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.178" endtime="20201110 08:32:54.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.191" level="INFO">${RESULT} = [{'time': 0.019386708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2639999999973506e-06, 'source_diff': 1.2639999999973506e-06}, {'time': 0.019411792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:54.187" endtime="20201110 08:32:54.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:54.206" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:54.192" endtime="20201110 08:32:54.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.210" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:54.209" endtime="20201110 08:32:54.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.212" level="INFO">VALUE: [1.2639999999973506e-06, 9.309999999991547e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.859999999979607e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.719999999983908e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.170000000030543e-07, 9.309999999991547e-07, 9.580000000022904e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.580000000022904e-07, 8.89000000000445e-07, 9.720000000018603e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.859999999979607e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.449999999987246e-07]</msg>
<status status="PASS" starttime="20201110 08:32:54.211" endtime="20201110 08:32:54.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.206" endtime="20201110 08:32:54.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.215" endtime="20201110 08:32:54.217"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.219" endtime="20201110 08:32:54.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.217" endtime="20201110 08:32:54.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.214" endtime="20201110 08:32:54.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.811" endtime="20201110 08:32:54.240"></status>
</kw>
<msg timestamp="20201110 08:32:54.240" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.248" endtime="20201110 08:32:54.257"></status>
</kw>
<msg timestamp="20201110 08:32:54.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.246" endtime="20201110 08:32:54.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.258" endtime="20201110 08:32:54.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.261" endtime="20201110 08:32:54.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.243" endtime="20201110 08:32:54.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.242" endtime="20201110 08:32:54.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.270" endtime="20201110 08:32:54.556"></status>
</kw>
<msg timestamp="20201110 08:32:54.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.268" endtime="20201110 08:32:54.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.561" endtime="20201110 08:32:54.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.569" endtime="20201110 08:32:54.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.266" endtime="20201110 08:32:54.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.264" endtime="20201110 08:32:54.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.577" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:54.575" endtime="20201110 08:32:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.582" level="INFO">VALUE: [{'time': 0.018571847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018573042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018586347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.330499999999818e-05, 'source_diff': 1.330499999999818e-05}, {'time': 0.018587306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.018608514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1207999999998256e-05, 'source_diff': 2.1207999999998256e-05}, {'time': 0.018609458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018623236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3778000000002483e-05, 'source_diff': 1.3778000000002483e-05}, {'time': 0.018624167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018645389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1221999999997826e-05, 'source_diff': 2.1221999999997826e-05}, {'time': 0.018646403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018675653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9250000000001497e-05, 'source_diff': 2.9250000000001497e-05}, {'time': 0.018676597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018694403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7805999999998684e-05, 'source_diff': 1.7805999999998684e-05}, {'time': 0.018695361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.018708181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.018709097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.018723792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018742528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.018743472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018765625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.215300000000045e-05, 'source_diff': 2.215300000000045e-05}, {'time': 0.018766611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018796889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0278000000001637e-05, 'source_diff': 3.0278000000001637e-05}, {'time': 0.018797764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.018819306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1541999999999395e-05, 'source_diff': 2.1541999999999395e-05}, {'time': 0.018820236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018833069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018834028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.018858042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4013999999999286e-05, 'source_diff': 2.4013999999999286e-05}, {'time': 0.018858986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018884875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.588899999999769e-05, 'source_diff': 2.588899999999769e-05}, {'time': 0.018885847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.018906125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0277999999998575e-05, 'source_diff': 2.0277999999998575e-05}, {'time': 0.018907069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018936056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.898700000000115e-05, 'source_diff': 2.898700000000115e-05}, {'time': 0.018937, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018961653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.018962597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018985375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2777999999997606e-05, 'source_diff': 2.2777999999997606e-05}, {'time': 0.018986319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019002889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6569999999997004e-05, 'source_diff': 1.6569999999997004e-05}, {'time': 0.019003819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.019024417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0597999999996675e-05, 'source_diff': 2.0597999999996675e-05}, {'time': 0.019025361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019042861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000000154e-05, 'source_diff': 1.7500000000000154e-05}, {'time': 0.019043792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019065958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.019066889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019086944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.005500000000146e-05, 'source_diff': 2.005500000000146e-05}, {'time': 0.019087833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889999999969755e-07, 'source_diff': 8.889999999969755e-07}, {'time': 0.019099389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1556000000002842e-05, 'source_diff': 1.1556000000002842e-05}, {'time': 0.019100333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019122514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.218099999999959e-05, 'source_diff': 2.218099999999959e-05}, {'time': 0.019123431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019137528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4097000000001109e-05, 'source_diff': 1.4097000000001109e-05}, {'time': 0.019138458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019152875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4416999999999208e-05, 'source_diff': 1.4416999999999208e-05}, {'time': 0.01915375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.019173431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.968100000000056e-05, 'source_diff': 1.968100000000056e-05}, {'time': 0.019174375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.01918875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.019189694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019213097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.340299999999823e-05, 'source_diff': 2.340299999999823e-05}, {'time': 0.019214042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019233722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9680000000001086e-05, 'source_diff': 1.9680000000001086e-05}, {'time': 0.019234653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019250597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944000000000375e-05, 'source_diff': 1.5944000000000375e-05}, {'time': 0.019251542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019280861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9318999999999873e-05, 'source_diff': 2.9318999999999873e-05}, {'time': 0.019281792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019308319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6527000000001882e-05, 'source_diff': 2.6527000000001882e-05}, {'time': 0.019309264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019329236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9972000000000045e-05, 'source_diff': 1.9972000000000045e-05}, {'time': 0.019330181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019358889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8708000000002287e-05, 'source_diff': 2.8708000000002287e-05}, {'time': 0.019359833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019381681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1848000000001394e-05, 'source_diff': 2.1848000000001394e-05}, {'time': 0.019382611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019408236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5624999999997872e-05, 'source_diff': 2.5624999999997872e-05}, {'time': 0.019409139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019438194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9055000000000053e-05, 'source_diff': 2.9055000000000053e-05}, {'time': 0.019439111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019457222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.811100000000121e-05, 'source_diff': 1.811100000000121e-05}, {'time': 0.019458153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019486861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8708000000002287e-05, 'source_diff': 2.8708000000002287e-05}, {'time': 0.019487806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019501556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.019502486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019527167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.468100000000209e-05, 'source_diff': 2.468100000000209e-05}, {'time': 0.019528083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019554306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.622299999999883e-05, 'source_diff': 2.622299999999883e-05}, {'time': 0.019555236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019568681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.019569625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019594583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4957999999998537e-05, 'source_diff': 2.4957999999998537e-05}, {'time': 0.019595542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019624222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8679999999999678e-05, 'source_diff': 2.8679999999999678e-05}, {'time': 0.019625167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019643597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8429999999999835e-05, 'source_diff': 1.8429999999999835e-05}, {'time': 0.019644542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:54.578" endtime="20201110 08:32:54.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.572" endtime="20201110 08:32:54.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:54.608" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:54.584" endtime="20201110 08:32:54.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.612" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:54.611" endtime="20201110 08:32:54.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.616" level="INFO">VALUE: {'sourcetime': [0.018571847, 0.018573042, 0.018586347, 0.018587306, 0.018608514, 0.018609458, 0.018623236, 0.018624167, 0.018645389, 0.018646403, 0.018675653, 0.018676597, 0.018694403, 0.018695361, 0.018708181, 0.018709097, 0.018722861, 0.018723792, 0.018742528, 0.018743472, 0.018765625, 0.018766611, 0.018796889, 0.018797764, 0.018819306, 0.018820236, 0.018833069, 0.018834028, 0.018858042, 0.018858986, 0.018884875, 0.018885847, 0.018906125, 0.018907069, 0.018936056, 0.018937, 0.018961653, 0.018962597, 0.018985375, 0.018986319, 0.019002889, 0.019003819, 0.019024417, 0.019025361, 0.019042861, 0.019043792, 0.019065958, 0.019066889, 0.019086944, 0.019087833, 0.019099389, 0.019100333, 0.019122514, 0.019123431, 0.019137528, 0.019138458, 0.019152875, 0.01915375, 0.019173431, 0.019174375, 0.01918875, 0.019189694, 0.019213097, 0.019214042, 0.019233722, 0.019234653, 0.019250597, 0.019251542, 0.019280861, 0.019281792, 0.019308319, 0.019309264, 0.019329236, 0.019330181, 0.019358889, 0.019359833, 0.019381681, 0.019382611, 0.019408236, 0.019409139, 0.019438194, 0.019439111, 0.019457222, 0.019458153, 0.019486861, 0.019487806, 0.019501556, 0.019502486, 0.019527167, 0.019528083, 0.019554306, 0.019555236, 0.019568681, 0.019569625, 0.019594583, 0.019595542, 0.019624222, 0.019625167, 0.019643597, 0.019644542], 'source_diff': [0, 1.1950000000024441e-06, 1.330499999999818e-05, 9.59000000001764e-07, 2.1207999999998256e-05, 9.43999999999251e-07, 1.3778000000002483e-05, 9.309999999991547e-07, 2.1221999999997826e-05, 1.01400000000057e-06, 2.9250000000001497e-05, 9.43999999999251e-07, 1.7805999999998684e-05, 9.580000000022904e-07, 1.2820000000000192e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.309999999991547e-07, 1.8736000000001835e-05, 9.43999999999251e-07, 2.215300000000045e-05, 9.859999999979607e-07, 3.0278000000001637e-05, 8.750000000008751e-07, 2.1541999999999395e-05, 9.299999999996811e-07, 1.2833000000000289e-05, 9.589999999982945e-07, 2.4013999999999286e-05, 9.440000000027204e-07, 2.588899999999769e-05, 9.720000000018603e-07, 2.0277999999998575e-05, 9.43999999999251e-07, 2.898700000000115e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.440000000027204e-07, 2.2777999999997606e-05, 9.440000000027204e-07, 1.6569999999997004e-05, 9.300000000031505e-07, 2.0597999999996675e-05, 9.440000000027204e-07, 1.7500000000000154e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.309999999991547e-07, 2.005500000000146e-05, 8.889999999969755e-07, 1.1556000000002842e-05, 9.43999999999251e-07, 2.218099999999959e-05, 9.169999999995848e-07, 1.4097000000001109e-05, 9.299999999996811e-07, 1.4416999999999208e-05, 8.750000000008751e-07, 1.968100000000056e-05, 9.43999999999251e-07, 1.4375000000000498e-05, 9.43999999999251e-07, 2.340299999999823e-05, 9.450000000021941e-07, 1.9680000000001086e-05, 9.309999999991547e-07, 1.5944000000000375e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.309999999991547e-07, 2.6527000000001882e-05, 9.449999999987246e-07, 1.9972000000000045e-05, 9.449999999987246e-07, 2.8708000000002287e-05, 9.43999999999251e-07, 2.1848000000001394e-05, 9.299999999996811e-07, 2.5624999999997872e-05, 9.030000000000149e-07, 2.9055000000000053e-05, 9.169999999995848e-07, 1.811100000000121e-05, 9.309999999991547e-07, 2.8708000000002287e-05, 9.449999999987246e-07, 1.3749999999999873e-05, 9.299999999996811e-07, 2.468100000000209e-05, 9.160000000001112e-07, 2.622299999999883e-05, 9.299999999996811e-07, 1.3445000000000817e-05, 9.43999999999251e-07, 2.4957999999998537e-05, 9.59000000001764e-07, 2.8679999999999678e-05, 9.449999999987246e-07, 1.8429999999999835e-05, 9.450000000021941e-07], 'eventdiff': [0, 1.1950000000024441e-06, 1.330499999999818e-05, 9.59000000001764e-07, 2.1207999999998256e-05, 9.43999999999251e-07, 1.3778000000002483e-05, 9.309999999991547e-07, 2.1221999999997826e-05, 1.01400000000057e-06, 2.9250000000001497e-05, 9.43999999999251e-07, 1.7805999999998684e-05, 9.580000000022904e-07, 1.2820000000000192e-05, 9.160000000001112e-07, 1.3763999999999443e-05, 9.309999999991547e-07, 1.8736000000001835e-05, 9.43999999999251e-07, 2.215300000000045e-05, 9.859999999979607e-07, 3.0278000000001637e-05, 8.750000000008751e-07, 2.1541999999999395e-05, 9.299999999996811e-07, 1.2833000000000289e-05, 9.589999999982945e-07, 2.4013999999999286e-05, 9.440000000027204e-07, 2.588899999999769e-05, 9.720000000018603e-07, 2.0277999999998575e-05, 9.43999999999251e-07, 2.898700000000115e-05, 9.43999999999251e-07, 2.465299999999948e-05, 9.440000000027204e-07, 2.2777999999997606e-05, 9.440000000027204e-07, 1.6569999999997004e-05, 9.300000000031505e-07, 2.0597999999996675e-05, 9.440000000027204e-07, 1.7500000000000154e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.309999999991547e-07, 2.005500000000146e-05, 8.889999999969755e-07, 1.1556000000002842e-05, 9.43999999999251e-07, 2.218099999999959e-05, 9.169999999995848e-07, 1.4097000000001109e-05, 9.299999999996811e-07, 1.4416999999999208e-05, 8.750000000008751e-07, 1.968100000000056e-05, 9.43999999999251e-07, 1.4375000000000498e-05, 9.43999999999251e-07, 2.340299999999823e-05, 9.450000000021941e-07, 1.9680000000001086e-05, 9.309999999991547e-07, 1.5944000000000375e-05, 9.449999999987246e-07, 2.9318999999999873e-05, 9.309999999991547e-07, 2.6527000000001882e-05, 9.449999999987246e-07, 1.9972000000000045e-05, 9.449999999987246e-07, 2.8708000000002287e-05, 9.43999999999251e-07, 2.1848000000001394e-05, 9.299999999996811e-07, 2.5624999999997872e-05, 9.030000000000149e-07, 2.9055000000000053e-05, 9.169999999995848e-07, 1.811100000000121e-05, 9.309999999991547e-07, 2.8708000000002287e-05, 9.449999999987246e-07, 1.3749999999999873e-05, 9.299999999996811e-07, 2.468100000000209e-05, 9.160000000001112e-07, 2.622299999999883e-05, 9.299999999996811e-07, 1.3445000000000817e-05, 9.43999999999251e-07, 2.4957999999998537e-05, 9.59000000001764e-07, 2.8679999999999678e-05, 9.449999999987246e-07, 1.8429999999999835e-05, 9.450000000021941e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:54.613" endtime="20201110 08:32:54.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.609" endtime="20201110 08:32:54.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.622" level="INFO">${RESULT} = [{'time': 0.018573042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018587306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:54.618" endtime="20201110 08:32:54.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:54.635" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:54.623" endtime="20201110 08:32:54.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.639" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:54.638" endtime="20201110 08:32:54.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.642" level="INFO">VALUE: [1.1950000000024441e-06, 9.59000000001764e-07, 9.43999999999251e-07, 9.309999999991547e-07, 1.01400000000057e-06, 9.43999999999251e-07, 9.580000000022904e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.859999999979607e-07, 8.750000000008751e-07, 9.299999999996811e-07, 9.589999999982945e-07, 9.440000000027204e-07, 9.720000000018603e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.440000000027204e-07, 9.440000000027204e-07, 9.300000000031505e-07, 9.440000000027204e-07, 9.309999999991547e-07, 9.309999999991547e-07, 8.889999999969755e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.299999999996811e-07, 8.750000000008751e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.59000000001764e-07, 9.449999999987246e-07, 9.450000000021941e-07]</msg>
<status status="PASS" starttime="20201110 08:32:54.640" endtime="20201110 08:32:54.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.636" endtime="20201110 08:32:54.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.645" endtime="20201110 08:32:54.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.648" endtime="20201110 08:32:54.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.647" endtime="20201110 08:32:54.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.643" endtime="20201110 08:32:54.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.240" endtime="20201110 08:32:54.669"></status>
</kw>
<msg timestamp="20201110 08:32:54.669" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.678" endtime="20201110 08:32:54.687"></status>
</kw>
<msg timestamp="20201110 08:32:54.687" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.675" endtime="20201110 08:32:54.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.690" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.688" endtime="20201110 08:32:54.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.691" endtime="20201110 08:32:54.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.673" endtime="20201110 08:32:54.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.671" endtime="20201110 08:32:54.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.705" endtime="20201110 08:32:54.993"></status>
</kw>
<msg timestamp="20201110 08:32:54.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019452333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019453514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.702" endtime="20201110 08:32:54.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019452333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019453514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.997" endtime="20201110 08:32:55.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.006" endtime="20201110 08:32:55.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.699" endtime="20201110 08:32:55.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.696" endtime="20201110 08:32:55.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.013" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:55.012" endtime="20201110 08:32:55.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.018" level="INFO">VALUE: [{'time': 0.019452333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019453514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.019479611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6096999999999232e-05, 'source_diff': 2.6096999999999232e-05}, {'time': 0.019480556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019499306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000001404e-05, 'source_diff': 1.8750000000001404e-05}, {'time': 0.019500222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2485999999998646e-05, 'source_diff': 2.2485999999998646e-05}, {'time': 0.019523639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019539583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944000000000375e-05, 'source_diff': 1.5944000000000375e-05}, {'time': 0.019540528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019570542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0013999999998348e-05, 'source_diff': 3.0013999999998348e-05}, {'time': 0.019571431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019595444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4012999999999812e-05, 'source_diff': 2.4012999999999812e-05}, {'time': 0.019596431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870000000009038e-07, 'source_diff': 9.870000000009038e-07}, {'time': 0.019621681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5249999999997497e-05, 'source_diff': 2.5249999999997497e-05}, {'time': 0.019622625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019636681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4055999999998403e-05, 'source_diff': 1.4055999999998403e-05}, {'time': 0.019637611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019653903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6292000000001083e-05, 'source_diff': 1.6292000000001083e-05}, {'time': 0.019654819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019681028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.620899999999926e-05, 'source_diff': 2.620899999999926e-05}, {'time': 0.019681958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019698236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6278000000001513e-05, 'source_diff': 1.6278000000001513e-05}, {'time': 0.019699153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.01971075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1596999999998608e-05, 'source_diff': 1.1596999999998608e-05}, {'time': 0.019711708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019741, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9292000000000207e-05, 'source_diff': 2.9292000000000207e-05}, {'time': 0.019741931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.01975725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.019758194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019788764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05700000000006e-05, 'source_diff': 3.05700000000006e-05}, {'time': 0.019789708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019820278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.05700000000006e-05, 'source_diff': 3.05700000000006e-05}, {'time': 0.019821208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019845875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.466699999999905e-05, 'source_diff': 2.466699999999905e-05}, {'time': 0.019846819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019866486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.966699999999752e-05, 'source_diff': 1.966699999999752e-05}, {'time': 0.019867431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019897708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0276999999998694e-05, 'source_diff': 3.0276999999998694e-05}, {'time': 0.019898625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019926708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8083000000001662e-05, 'source_diff': 2.8083000000001662e-05}, {'time': 0.019927667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019945764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.809700000000164e-05, 'source_diff': 1.809700000000164e-05}, {'time': 0.019946778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.019960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4014000000003163e-05, 'source_diff': 1.4014000000003163e-05}, {'time': 0.019961708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019977986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6277999999998044e-05, 'source_diff': 1.6277999999998044e-05}, {'time': 0.019978903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019989792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.019990736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020009111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.837500000000103e-05, 'source_diff': 1.837500000000103e-05}, {'time': 0.020010056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020021319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263000000000939e-05, 'source_diff': 1.1263000000000939e-05}, {'time': 0.02002225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.343100000000084e-05, 'source_diff': 2.343100000000084e-05}, {'time': 0.020046597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020069097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2500000000001685e-05, 'source_diff': 2.2500000000001685e-05}, {'time': 0.020070014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020094069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4054999999998522e-05, 'source_diff': 2.4054999999998522e-05}, {'time': 0.020094986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020123708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8722000000001857e-05, 'source_diff': 2.8722000000001857e-05}, {'time': 0.020124639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020145556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.091699999999877e-05, 'source_diff': 2.091699999999877e-05}, {'time': 0.020146486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}, {'time': 0.020163375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.68889999999991e-05, 'source_diff': 1.68889999999991e-05}, {'time': 0.020164306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020187111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.280500000000074e-05, 'source_diff': 2.280500000000074e-05}, {'time': 0.020188056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020216431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8375000000000622e-05, 'source_diff': 2.8375000000000622e-05}, {'time': 0.020217361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020235236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.020236111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.020261389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.020262319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020285111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.020286056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020312597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6541000000001452e-05, 'source_diff': 2.6541000000001452e-05}, {'time': 0.020313528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020332583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.905500000000046e-05, 'source_diff': 1.905500000000046e-05}, {'time': 0.0203335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020356917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.34169999999978e-05, 'source_diff': 2.34169999999978e-05}, {'time': 0.020357861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.020385028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.716699999999808e-05, 'source_diff': 2.716699999999808e-05}, {'time': 0.020385958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020416222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0264000000002067e-05, 'source_diff': 3.0264000000002067e-05}, {'time': 0.020417153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020435889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8735999999998365e-05, 'source_diff': 1.8735999999998365e-05}, {'time': 0.020436847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.020455306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.845899999999845e-05, 'source_diff': 1.845899999999845e-05}, {'time': 0.020456222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020486458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0235999999999458e-05, 'source_diff': 3.0235999999999458e-05}, {'time': 0.020487403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020514236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6833000000000412e-05, 'source_diff': 2.6833000000000412e-05}, {'time': 0.020515167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020531125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.020532139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.020552069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9929999999997866e-05, 'source_diff': 1.9929999999997866e-05}, {'time': 0.020552986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020581056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8070000000001566e-05, 'source_diff': 2.8070000000001566e-05}, {'time': 0.020581986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:55.014" endtime="20201110 08:32:55.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.009" endtime="20201110 08:32:55.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:55.044" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.020" endtime="20201110 08:32:55.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.048" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:55.047" endtime="20201110 08:32:55.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.052" level="INFO">VALUE: {'sourcetime': [0.019452333, 0.019453514, 0.019479611, 0.019480556, 0.019499306, 0.019500222, 0.019522708, 0.019523639, 0.019539583, 0.019540528, 0.019570542, 0.019571431, 0.019595444, 0.019596431, 0.019621681, 0.019622625, 0.019636681, 0.019637611, 0.019653903, 0.019654819, 0.019681028, 0.019681958, 0.019698236, 0.019699153, 0.01971075, 0.019711708, 0.019741, 0.019741931, 0.01975725, 0.019758194, 0.019788764, 0.019789708, 0.019820278, 0.019821208, 0.019845875, 0.019846819, 0.019866486, 0.019867431, 0.019897708, 0.019898625, 0.019926708, 0.019927667, 0.019945764, 0.019946778, 0.019960792, 0.019961708, 0.019977986, 0.019978903, 0.019989792, 0.019990736, 0.020009111, 0.020010056, 0.020021319, 0.02002225, 0.020045681, 0.020046597, 0.020069097, 0.020070014, 0.020094069, 0.020094986, 0.020123708, 0.020124639, 0.020145556, 0.020146486, 0.020163375, 0.020164306, 0.020187111, 0.020188056, 0.020216431, 0.020217361, 0.020235236, 0.020236111, 0.020261389, 0.020262319, 0.020285111, 0.020286056, 0.020312597, 0.020313528, 0.020332583, 0.0203335, 0.020356917, 0.020357861, 0.020385028, 0.020385958, 0.020416222, 0.020417153, 0.020435889, 0.020436847, 0.020455306, 0.020456222, 0.020486458, 0.020487403, 0.020514236, 0.020515167, 0.020531125, 0.020532139, 0.020552069, 0.020552986, 0.020581056, 0.020581986], 'source_diff': [0, 1.1810000000028742e-06, 2.6096999999999232e-05, 9.449999999987246e-07, 1.8750000000001404e-05, 9.160000000001112e-07, 2.2485999999998646e-05, 9.309999999991547e-07, 1.5944000000000375e-05, 9.450000000021941e-07, 3.0013999999998348e-05, 8.89000000000445e-07, 2.4012999999999812e-05, 9.870000000009038e-07, 2.5249999999997497e-05, 9.440000000027204e-07, 1.4055999999998403e-05, 9.299999999996811e-07, 1.6292000000001083e-05, 9.160000000001112e-07, 2.620899999999926e-05, 9.299999999996811e-07, 1.6278000000001513e-05, 9.169999999995848e-07, 1.1596999999998608e-05, 9.580000000022904e-07, 2.9292000000000207e-05, 9.309999999991547e-07, 1.531899999999975e-05, 9.43999999999251e-07, 3.05700000000006e-05, 9.43999999999251e-07, 3.05700000000006e-05, 9.299999999996811e-07, 2.466699999999905e-05, 9.440000000027204e-07, 1.966699999999752e-05, 9.450000000021941e-07, 3.0276999999998694e-05, 9.169999999995848e-07, 2.8083000000001662e-05, 9.589999999982945e-07, 1.809700000000164e-05, 1.0139999999971006e-06, 1.4014000000003163e-05, 9.160000000001112e-07, 1.6277999999998044e-05, 9.169999999995848e-07, 1.0889000000000038e-05, 9.43999999999251e-07, 1.837500000000103e-05, 9.449999999987246e-07, 1.1263000000000939e-05, 9.309999999991547e-07, 2.343100000000084e-05, 9.160000000001112e-07, 2.2500000000001685e-05, 9.169999999995848e-07, 2.4054999999998522e-05, 9.169999999995848e-07, 2.8722000000001857e-05, 9.309999999991547e-07, 2.091699999999877e-05, 9.300000000031505e-07, 1.68889999999991e-05, 9.309999999991547e-07, 2.280500000000074e-05, 9.449999999987246e-07, 2.8375000000000622e-05, 9.299999999996811e-07, 1.787500000000053e-05, 8.750000000008751e-07, 2.5278000000000106e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.449999999987246e-07, 2.6541000000001452e-05, 9.309999999991547e-07, 1.905500000000046e-05, 9.169999999995848e-07, 2.34169999999978e-05, 9.440000000027204e-07, 2.716699999999808e-05, 9.299999999996811e-07, 3.0264000000002067e-05, 9.309999999991547e-07, 1.8735999999998365e-05, 9.580000000022904e-07, 1.845899999999845e-05, 9.160000000001112e-07, 3.0235999999999458e-05, 9.450000000021941e-07, 2.6833000000000412e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 1.01400000000057e-06, 1.9929999999997866e-05, 9.169999999995848e-07, 2.8070000000001566e-05, 9.299999999996811e-07], 'eventdiff': [0, 1.1810000000028742e-06, 2.6096999999999232e-05, 9.449999999987246e-07, 1.8750000000001404e-05, 9.160000000001112e-07, 2.2485999999998646e-05, 9.309999999991547e-07, 1.5944000000000375e-05, 9.450000000021941e-07, 3.0013999999998348e-05, 8.89000000000445e-07, 2.4012999999999812e-05, 9.870000000009038e-07, 2.5249999999997497e-05, 9.440000000027204e-07, 1.4055999999998403e-05, 9.299999999996811e-07, 1.6292000000001083e-05, 9.160000000001112e-07, 2.620899999999926e-05, 9.299999999996811e-07, 1.6278000000001513e-05, 9.169999999995848e-07, 1.1596999999998608e-05, 9.580000000022904e-07, 2.9292000000000207e-05, 9.309999999991547e-07, 1.531899999999975e-05, 9.43999999999251e-07, 3.05700000000006e-05, 9.43999999999251e-07, 3.05700000000006e-05, 9.299999999996811e-07, 2.466699999999905e-05, 9.440000000027204e-07, 1.966699999999752e-05, 9.450000000021941e-07, 3.0276999999998694e-05, 9.169999999995848e-07, 2.8083000000001662e-05, 9.589999999982945e-07, 1.809700000000164e-05, 1.0139999999971006e-06, 1.4014000000003163e-05, 9.160000000001112e-07, 1.6277999999998044e-05, 9.169999999995848e-07, 1.0889000000000038e-05, 9.43999999999251e-07, 1.837500000000103e-05, 9.449999999987246e-07, 1.1263000000000939e-05, 9.309999999991547e-07, 2.343100000000084e-05, 9.160000000001112e-07, 2.2500000000001685e-05, 9.169999999995848e-07, 2.4054999999998522e-05, 9.169999999995848e-07, 2.8722000000001857e-05, 9.309999999991547e-07, 2.091699999999877e-05, 9.300000000031505e-07, 1.68889999999991e-05, 9.309999999991547e-07, 2.280500000000074e-05, 9.449999999987246e-07, 2.8375000000000622e-05, 9.299999999996811e-07, 1.787500000000053e-05, 8.750000000008751e-07, 2.5278000000000106e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.449999999987246e-07, 2.6541000000001452e-05, 9.309999999991547e-07, 1.905500000000046e-05, 9.169999999995848e-07, 2.34169999999978e-05, 9.440000000027204e-07, 2.716699999999808e-05, 9.299999999996811e-07, 3.0264000000002067e-05, 9.309999999991547e-07, 1.8735999999998365e-05, 9.580000000022904e-07, 1.845899999999845e-05, 9.160000000001112e-07, 3.0235999999999458e-05, 9.450000000021941e-07, 2.6833000000000412e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 1.01400000000057e-06, 1.9929999999997866e-05, 9.169999999995848e-07, 2.8070000000001566e-05, 9.299999999996811e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:55.049" endtime="20201110 08:32:55.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.045" endtime="20201110 08:32:55.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.057" level="INFO">${RESULT} = [{'time': 0.019453514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1810000000028742e-06, 'source_diff': 1.1810000000028742e-06}, {'time': 0.019480556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:55.054" endtime="20201110 08:32:55.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:55.071" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.058" endtime="20201110 08:32:55.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.075" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:55.074" endtime="20201110 08:32:55.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.078" level="INFO">VALUE: [1.1810000000028742e-06, 9.449999999987246e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.450000000021941e-07, 8.89000000000445e-07, 9.870000000009038e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.580000000022904e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.450000000021941e-07, 9.169999999995848e-07, 9.589999999982945e-07, 1.0139999999971006e-06, 9.160000000001112e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.300000000031505e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.299999999996811e-07, 8.750000000008751e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.440000000027204e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.580000000022904e-07, 9.160000000001112e-07, 9.450000000021941e-07, 9.309999999991547e-07, 1.01400000000057e-06, 9.169999999995848e-07, 9.299999999996811e-07]</msg>
<status status="PASS" starttime="20201110 08:32:55.077" endtime="20201110 08:32:55.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.072" endtime="20201110 08:32:55.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.081" endtime="20201110 08:32:55.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.084" endtime="20201110 08:32:55.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.083" endtime="20201110 08:32:55.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.079" endtime="20201110 08:32:55.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.670" endtime="20201110 08:32:55.105"></status>
</kw>
<msg timestamp="20201110 08:32:55.105" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.113" endtime="20201110 08:32:55.122"></status>
</kw>
<msg timestamp="20201110 08:32:55.122" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.111" endtime="20201110 08:32:55.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.123" endtime="20201110 08:32:55.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.126" endtime="20201110 08:32:55.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.109" endtime="20201110 08:32:55.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.107" endtime="20201110 08:32:55.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.135" endtime="20201110 08:32:55.436"></status>
</kw>
<msg timestamp="20201110 08:32:55.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018428625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018429736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.133" endtime="20201110 08:32:55.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018428625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018429736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.440" endtime="20201110 08:32:55.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.449" endtime="20201110 08:32:55.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.131" endtime="20201110 08:32:55.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.129" endtime="20201110 08:32:55.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.455" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:55.454" endtime="20201110 08:32:55.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.460" level="INFO">VALUE: [{'time': 0.018428625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018429736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018446181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6445000000000348e-05, 'source_diff': 1.6445000000000348e-05}, {'time': 0.018447111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018470208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.018471139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018489889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.018490819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018503958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.018504903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018518986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.018519903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018537708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.780499999999921e-05, 'source_diff': 1.780499999999921e-05}, {'time': 0.018538708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018559889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.118099999999859e-05, 'source_diff': 2.118099999999859e-05}, {'time': 0.018560861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.018591097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0235999999999458e-05, 'source_diff': 3.0235999999999458e-05}, {'time': 0.018592028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018606708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.018607653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018637597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9944000000000498e-05, 'source_diff': 2.9944000000000498e-05}, {'time': 0.018638542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2776999999998132e-05, 'source_diff': 2.2776999999998132e-05}, {'time': 0.018662264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018684736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2471999999999076e-05, 'source_diff': 2.2471999999999076e-05}, {'time': 0.018685667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018707222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.155499999999949e-05, 'source_diff': 2.155499999999949e-05}, {'time': 0.018708153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018730958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2804999999997272e-05, 'source_diff': 2.2804999999997272e-05}, {'time': 0.018731903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.01875125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.934699999999942e-05, 'source_diff': 1.934699999999942e-05}, {'time': 0.018752181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018773431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1250000000000435e-05, 'source_diff': 2.1250000000000435e-05}, {'time': 0.018774347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018802431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8084000000001136e-05, 'source_diff': 2.8084000000001136e-05}, {'time': 0.018803375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018828333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4957999999998537e-05, 'source_diff': 2.4957999999998537e-05}, {'time': 0.018829278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018852056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2777999999997606e-05, 'source_diff': 2.2777999999997606e-05}, {'time': 0.018853, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018882069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9068999999999623e-05, 'source_diff': 2.9068999999999623e-05}, {'time': 0.018882958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889999999969755e-07, 'source_diff': 8.889999999969755e-07}, {'time': 0.018902014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9056000000003404e-05, 'source_diff': 1.9056000000003404e-05}, {'time': 0.018902931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018915764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018916694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018947264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.056999999999713e-05, 'source_diff': 3.056999999999713e-05}, {'time': 0.018948208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.018961028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.018961986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018990042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8055999999998527e-05, 'source_diff': 2.8055999999998527e-05}, {'time': 0.018990986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.440000000027204e-07, 'source_diff': 9.440000000027204e-07}, {'time': 0.019011611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.019012528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019025375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.019026319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019039431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3111999999999152e-05, 'source_diff': 1.3111999999999152e-05}, {'time': 0.019040361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019067528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.716700000000155e-05, 'source_diff': 2.716700000000155e-05}, {'time': 0.019068472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019085944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7472000000001014e-05, 'source_diff': 1.7472000000001014e-05}, {'time': 0.019086889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.01911125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.436100000000052e-05, 'source_diff': 2.436100000000052e-05}, {'time': 0.019112167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019140583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8415999999999858e-05, 'source_diff': 2.8415999999999858e-05}, {'time': 0.019141528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019171139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9610999999998833e-05, 'source_diff': 2.9610999999998833e-05}, {'time': 0.019172097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019200458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8361000000001052e-05, 'source_diff': 2.8361000000001052e-05}, {'time': 0.019201417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019212667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.019213597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019231097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000000154e-05, 'source_diff': 1.7500000000000154e-05}, {'time': 0.019232056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019255153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30969999999997e-05, 'source_diff': 2.30969999999997e-05}, {'time': 0.019256083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019274236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.815299999999992e-05, 'source_diff': 1.815299999999992e-05}, {'time': 0.019275139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019297292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.215300000000045e-05, 'source_diff': 2.215300000000045e-05}, {'time': 0.019298222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019325069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6846999999999982e-05, 'source_diff': 2.6846999999999982e-05}, {'time': 0.019326028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019354708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8680000000003147e-05, 'source_diff': 2.8680000000003147e-05}, {'time': 0.019355653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019385306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9653000000001012e-05, 'source_diff': 2.9653000000001012e-05}, {'time': 0.019386236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019401847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.561099999999871e-05, 'source_diff': 1.561099999999871e-05}, {'time': 0.019402792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019418125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.533300000000279e-05, 'source_diff': 1.533300000000279e-05}, {'time': 0.019419042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.280500000000074e-05, 'source_diff': 2.280500000000074e-05}, {'time': 0.019442778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019466181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.340299999999823e-05, 'source_diff': 2.340299999999823e-05}, {'time': 0.019467125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019478708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583000000002508e-05, 'source_diff': 1.1583000000002508e-05}, {'time': 0.019479653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019500569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0915999999999296e-05, 'source_diff': 2.0915999999999296e-05}, {'time': 0.0195015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019527389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.588899999999769e-05, 'source_diff': 2.588899999999769e-05}, {'time': 0.019528347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:55.456" endtime="20201110 08:32:55.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.452" endtime="20201110 08:32:55.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:55.487" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.463" endtime="20201110 08:32:55.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.491" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:55.490" endtime="20201110 08:32:55.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.495" level="INFO">VALUE: {'sourcetime': [0.018428625, 0.018429736, 0.018446181, 0.018447111, 0.018470208, 0.018471139, 0.018489889, 0.018490819, 0.018503958, 0.018504903, 0.018518986, 0.018519903, 0.018537708, 0.018538708, 0.018559889, 0.018560861, 0.018591097, 0.018592028, 0.018606708, 0.018607653, 0.018637597, 0.018638542, 0.018661319, 0.018662264, 0.018684736, 0.018685667, 0.018707222, 0.018708153, 0.018730958, 0.018731903, 0.01875125, 0.018752181, 0.018773431, 0.018774347, 0.018802431, 0.018803375, 0.018828333, 0.018829278, 0.018852056, 0.018853, 0.018882069, 0.018882958, 0.018902014, 0.018902931, 0.018915764, 0.018916694, 0.018947264, 0.018948208, 0.018961028, 0.018961986, 0.018990042, 0.018990986, 0.019011611, 0.019012528, 0.019025375, 0.019026319, 0.019039431, 0.019040361, 0.019067528, 0.019068472, 0.019085944, 0.019086889, 0.01911125, 0.019112167, 0.019140583, 0.019141528, 0.019171139, 0.019172097, 0.019200458, 0.019201417, 0.019212667, 0.019213597, 0.019231097, 0.019232056, 0.019255153, 0.019256083, 0.019274236, 0.019275139, 0.019297292, 0.019298222, 0.019325069, 0.019326028, 0.019354708, 0.019355653, 0.019385306, 0.019386236, 0.019401847, 0.019402792, 0.019418125, 0.019419042, 0.019441847, 0.019442778, 0.019466181, 0.019467125, 0.019478708, 0.019479653, 0.019500569, 0.0195015, 0.019527389, 0.019528347], 'source_diff': [0, 1.1109999999980857e-06, 1.6445000000000348e-05, 9.299999999996811e-07, 2.30969999999997e-05, 9.310000000026242e-07, 1.8749999999997935e-05, 9.299999999996811e-07, 1.3139000000002288e-05, 9.449999999987246e-07, 1.4083000000001539e-05, 9.169999999995848e-07, 1.780499999999921e-05, 1.000000000001e-06, 2.118099999999859e-05, 9.720000000018603e-07, 3.0235999999999458e-05, 9.309999999991547e-07, 1.4679999999999555e-05, 9.449999999987246e-07, 2.9944000000000498e-05, 9.450000000021941e-07, 2.2776999999998132e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.309999999991547e-07, 2.155499999999949e-05, 9.310000000026242e-07, 2.2804999999997272e-05, 9.450000000021941e-07, 1.934699999999942e-05, 9.309999999991547e-07, 2.1250000000000435e-05, 9.160000000001112e-07, 2.8084000000001136e-05, 9.43999999999251e-07, 2.4957999999998537e-05, 9.450000000021941e-07, 2.2777999999997606e-05, 9.440000000027204e-07, 2.9068999999999623e-05, 8.889999999969755e-07, 1.9056000000003404e-05, 9.169999999995848e-07, 1.2833000000000289e-05, 9.299999999996811e-07, 3.056999999999713e-05, 9.440000000027204e-07, 1.2820000000000192e-05, 9.57999999998821e-07, 2.8055999999998527e-05, 9.440000000027204e-07, 2.062499999999981e-05, 9.169999999995848e-07, 1.2846999999999859e-05, 9.43999999999251e-07, 1.3111999999999152e-05, 9.299999999996811e-07, 2.716700000000155e-05, 9.43999999999251e-07, 1.7472000000001014e-05, 9.449999999987246e-07, 2.436100000000052e-05, 9.169999999995848e-07, 2.8415999999999858e-05, 9.450000000021941e-07, 2.9610999999998833e-05, 9.57999999998821e-07, 2.8361000000001052e-05, 9.589999999982945e-07, 1.1250000000000843e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.59000000001764e-07, 2.30969999999997e-05, 9.299999999996811e-07, 1.815299999999992e-05, 9.030000000000149e-07, 2.215300000000045e-05, 9.299999999996811e-07, 2.6846999999999982e-05, 9.589999999982945e-07, 2.8680000000003147e-05, 9.449999999987246e-07, 2.9653000000001012e-05, 9.299999999996811e-07, 1.561099999999871e-05, 9.449999999987246e-07, 1.533300000000279e-05, 9.169999999995848e-07, 2.280500000000074e-05, 9.309999999991547e-07, 2.340299999999823e-05, 9.43999999999251e-07, 1.1583000000002508e-05, 9.449999999987246e-07, 2.0915999999999296e-05, 9.310000000026242e-07, 2.588899999999769e-05, 9.580000000022904e-07], 'eventdiff': [0, 1.1109999999980857e-06, 1.6445000000000348e-05, 9.299999999996811e-07, 2.30969999999997e-05, 9.310000000026242e-07, 1.8749999999997935e-05, 9.299999999996811e-07, 1.3139000000002288e-05, 9.449999999987246e-07, 1.4083000000001539e-05, 9.169999999995848e-07, 1.780499999999921e-05, 1.000000000001e-06, 2.118099999999859e-05, 9.720000000018603e-07, 3.0235999999999458e-05, 9.309999999991547e-07, 1.4679999999999555e-05, 9.449999999987246e-07, 2.9944000000000498e-05, 9.450000000021941e-07, 2.2776999999998132e-05, 9.450000000021941e-07, 2.2471999999999076e-05, 9.309999999991547e-07, 2.155499999999949e-05, 9.310000000026242e-07, 2.2804999999997272e-05, 9.450000000021941e-07, 1.934699999999942e-05, 9.309999999991547e-07, 2.1250000000000435e-05, 9.160000000001112e-07, 2.8084000000001136e-05, 9.43999999999251e-07, 2.4957999999998537e-05, 9.450000000021941e-07, 2.2777999999997606e-05, 9.440000000027204e-07, 2.9068999999999623e-05, 8.889999999969755e-07, 1.9056000000003404e-05, 9.169999999995848e-07, 1.2833000000000289e-05, 9.299999999996811e-07, 3.056999999999713e-05, 9.440000000027204e-07, 1.2820000000000192e-05, 9.57999999998821e-07, 2.8055999999998527e-05, 9.440000000027204e-07, 2.062499999999981e-05, 9.169999999995848e-07, 1.2846999999999859e-05, 9.43999999999251e-07, 1.3111999999999152e-05, 9.299999999996811e-07, 2.716700000000155e-05, 9.43999999999251e-07, 1.7472000000001014e-05, 9.449999999987246e-07, 2.436100000000052e-05, 9.169999999995848e-07, 2.8415999999999858e-05, 9.450000000021941e-07, 2.9610999999998833e-05, 9.57999999998821e-07, 2.8361000000001052e-05, 9.589999999982945e-07, 1.1250000000000843e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.59000000001764e-07, 2.30969999999997e-05, 9.299999999996811e-07, 1.815299999999992e-05, 9.030000000000149e-07, 2.215300000000045e-05, 9.299999999996811e-07, 2.6846999999999982e-05, 9.589999999982945e-07, 2.8680000000003147e-05, 9.449999999987246e-07, 2.9653000000001012e-05, 9.299999999996811e-07, 1.561099999999871e-05, 9.449999999987246e-07, 1.533300000000279e-05, 9.169999999995848e-07, 2.280500000000074e-05, 9.309999999991547e-07, 2.340299999999823e-05, 9.43999999999251e-07, 1.1583000000002508e-05, 9.449999999987246e-07, 2.0915999999999296e-05, 9.310000000026242e-07, 2.588899999999769e-05, 9.580000000022904e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:55.492" endtime="20201110 08:32:55.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.488" endtime="20201110 08:32:55.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.500" level="INFO">${RESULT} = [{'time': 0.018429736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018447111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:55.497" endtime="20201110 08:32:55.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:55.513" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.501" endtime="20201110 08:32:55.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.518" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:55.517" endtime="20201110 08:32:55.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.520" level="INFO">VALUE: [1.1109999999980857e-06, 9.299999999996811e-07, 9.310000000026242e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.169999999995848e-07, 1.000000000001e-06, 9.720000000018603e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.43999999999251e-07, 9.450000000021941e-07, 9.440000000027204e-07, 8.889999999969755e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.440000000027204e-07, 9.57999999998821e-07, 9.440000000027204e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.57999999998821e-07, 9.589999999982945e-07, 9.299999999996811e-07, 9.59000000001764e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.589999999982945e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.310000000026242e-07, 9.580000000022904e-07]</msg>
<status status="PASS" starttime="20201110 08:32:55.519" endtime="20201110 08:32:55.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.514" endtime="20201110 08:32:55.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.523" endtime="20201110 08:32:55.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.527" endtime="20201110 08:32:55.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.525" endtime="20201110 08:32:55.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.522" endtime="20201110 08:32:55.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.106" endtime="20201110 08:32:55.547"></status>
</kw>
<msg timestamp="20201110 08:32:55.548" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.555" endtime="20201110 08:32:55.564"></status>
</kw>
<msg timestamp="20201110 08:32:55.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.554" endtime="20201110 08:32:55.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.566" endtime="20201110 08:32:55.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.568" endtime="20201110 08:32:55.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.551" endtime="20201110 08:32:55.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.549" endtime="20201110 08:32:55.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.578" endtime="20201110 08:32:55.863"></status>
</kw>
<msg timestamp="20201110 08:32:55.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018552014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.576" endtime="20201110 08:32:55.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018552014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.868" endtime="20201110 08:32:55.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.882" endtime="20201110 08:32:55.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.574" endtime="20201110 08:32:55.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.572" endtime="20201110 08:32:55.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.889" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:55.888" endtime="20201110 08:32:55.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.894" level="INFO">VALUE: [{'time': 0.018552014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018553208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1940000000029705e-06, 'source_diff': 1.1940000000029705e-06}, {'time': 0.018565597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2388999999998068e-05, 'source_diff': 1.2388999999998068e-05}, {'time': 0.018566528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018587819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.129099999999967e-05, 'source_diff': 2.129099999999967e-05}, {'time': 0.018588694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.018615889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.719500000000069e-05, 'source_diff': 2.719500000000069e-05}, {'time': 0.018616792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018643, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6207999999999787e-05, 'source_diff': 2.6207999999999787e-05}, {'time': 0.018643931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018663292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.936100000000246e-05, 'source_diff': 1.936100000000246e-05}, {'time': 0.018664236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018688264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4027999999998856e-05, 'source_diff': 2.4027999999998856e-05}, {'time': 0.018689194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018710431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.123700000000034e-05, 'source_diff': 2.123700000000034e-05}, {'time': 0.018711361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.341700000000127e-05, 'source_diff': 2.341700000000127e-05}, {'time': 0.018735722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018765347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9625000000001872e-05, 'source_diff': 2.9625000000001872e-05}, {'time': 0.018766319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.018782222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.590300000000114e-05, 'source_diff': 1.590300000000114e-05}, {'time': 0.018783167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.155499999999949e-05, 'source_diff': 2.155499999999949e-05}, {'time': 0.018805653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018819097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3444000000001344e-05, 'source_diff': 1.3444000000001344e-05}, {'time': 0.018820028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018835986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.018836903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.01885725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.018858139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.018871903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.018872833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018884125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1292000000003022e-05, 'source_diff': 1.1292000000003022e-05}, {'time': 0.018885042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018901, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5957999999999944e-05, 'source_diff': 1.5957999999999944e-05}, {'time': 0.018901917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018919153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236000000000334e-05, 'source_diff': 1.7236000000000334e-05}, {'time': 0.018920069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018937861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7791999999999114e-05, 'source_diff': 1.7791999999999114e-05}, {'time': 0.018938792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018957222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8429999999999835e-05, 'source_diff': 1.8429999999999835e-05}, {'time': 0.018958167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018977833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9665999999998046e-05, 'source_diff': 1.9665999999998046e-05}, {'time': 0.018978764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018995042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6278000000001513e-05, 'source_diff': 1.6278000000001513e-05}, {'time': 0.018995958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019026236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.019027153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.019038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0902999999999607e-05, 'source_diff': 1.0902999999999607e-05}, {'time': 0.019039, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019060778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1778000000000075e-05, 'source_diff': 2.1778000000000075e-05}, {'time': 0.019061708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019090736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9028000000000387e-05, 'source_diff': 2.9028000000000387e-05}, {'time': 0.019091708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.019115083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.337500000000256e-05, 'source_diff': 2.337500000000256e-05}, {'time': 0.019116028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019142292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6264000000001536e-05, 'source_diff': 2.6264000000001536e-05}, {'time': 0.019143181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.889999999969755e-07, 'source_diff': 8.889999999969755e-07}, {'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.937500000000203e-05, 'source_diff': 1.937500000000203e-05}, {'time': 0.019163472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.691699999999824e-05, 'source_diff': 1.691699999999824e-05}, {'time': 0.019181278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.019194111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.019195042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019224069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9027000000000913e-05, 'source_diff': 2.9027000000000913e-05}, {'time': 0.019225014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019241583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6569000000001e-05, 'source_diff': 1.6569000000001e-05}, {'time': 0.019242528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019265917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.338900000000213e-05, 'source_diff': 2.338900000000213e-05}, {'time': 0.019266861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019288708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.184700000000192e-05, 'source_diff': 2.184700000000192e-05}, {'time': 0.019289639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.01931025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019311236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.01933025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9014000000001224e-05, 'source_diff': 1.9014000000001224e-05}, {'time': 0.019331181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019356153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4972000000001576e-05, 'source_diff': 2.4972000000001576e-05}, {'time': 0.019357083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019381431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4348000000000425e-05, 'source_diff': 2.4348000000000425e-05}, {'time': 0.019382389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019400486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.809700000000164e-05, 'source_diff': 1.809700000000164e-05}, {'time': 0.019401444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.01941925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7805999999998684e-05, 'source_diff': 1.7805999999998684e-05}, {'time': 0.019420181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019439569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9387999999998656e-05, 'source_diff': 1.9387999999998656e-05}, {'time': 0.019440472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019455167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4694999999998598e-05, 'source_diff': 1.4694999999998598e-05}, {'time': 0.019456125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019485431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9305999999999777e-05, 'source_diff': 2.9305999999999777e-05}, {'time': 0.019486375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019510458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.019511333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.019539417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8084000000001136e-05, 'source_diff': 2.8084000000001136e-05}, {'time': 0.019540361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019559417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9055999999999934e-05, 'source_diff': 1.9055999999999934e-05}, {'time': 0.019560361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019577847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7486000000000584e-05, 'source_diff': 1.7486000000000584e-05}, {'time': 0.019578792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019603444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4652000000000007e-05, 'source_diff': 2.4652000000000007e-05}, {'time': 0.019604458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:55.890" endtime="20201110 08:32:55.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.885" endtime="20201110 08:32:55.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:55.920" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.896" endtime="20201110 08:32:55.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.924" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:55.923" endtime="20201110 08:32:55.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.928" level="INFO">VALUE: {'sourcetime': [0.018552014, 0.018553208, 0.018565597, 0.018566528, 0.018587819, 0.018588694, 0.018615889, 0.018616792, 0.018643, 0.018643931, 0.018663292, 0.018664236, 0.018688264, 0.018689194, 0.018710431, 0.018711361, 0.018734778, 0.018735722, 0.018765347, 0.018766319, 0.018782222, 0.018783167, 0.018804722, 0.018805653, 0.018819097, 0.018820028, 0.018835986, 0.018836903, 0.01885725, 0.018858139, 0.018871903, 0.018872833, 0.018884125, 0.018885042, 0.018901, 0.018901917, 0.018919153, 0.018920069, 0.018937861, 0.018938792, 0.018957222, 0.018958167, 0.018977833, 0.018978764, 0.018995042, 0.018995958, 0.019026236, 0.019027153, 0.019038056, 0.019039, 0.019060778, 0.019061708, 0.019090736, 0.019091708, 0.019115083, 0.019116028, 0.019142292, 0.019143181, 0.019162556, 0.019163472, 0.019180389, 0.019181278, 0.019194111, 0.019195042, 0.019224069, 0.019225014, 0.019241583, 0.019242528, 0.019265917, 0.019266861, 0.019288708, 0.019289639, 0.01931025, 0.019311236, 0.01933025, 0.019331181, 0.019356153, 0.019357083, 0.019381431, 0.019382389, 0.019400486, 0.019401444, 0.01941925, 0.019420181, 0.019439569, 0.019440472, 0.019455167, 0.019456125, 0.019485431, 0.019486375, 0.019510458, 0.019511333, 0.019539417, 0.019540361, 0.019559417, 0.019560361, 0.019577847, 0.019578792, 0.019603444, 0.019604458], 'source_diff': [0, 1.1940000000029705e-06, 1.2388999999998068e-05, 9.309999999991547e-07, 2.129099999999967e-05, 8.750000000008751e-07, 2.719500000000069e-05, 9.030000000000149e-07, 2.6207999999999787e-05, 9.309999999991547e-07, 1.936100000000246e-05, 9.43999999999251e-07, 2.4027999999998856e-05, 9.299999999996811e-07, 2.123700000000034e-05, 9.299999999996811e-07, 2.341700000000127e-05, 9.43999999999251e-07, 2.9625000000001872e-05, 9.719999999983908e-07, 1.590300000000114e-05, 9.449999999987246e-07, 2.155499999999949e-05, 9.309999999991547e-07, 1.3444000000001344e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 2.034700000000042e-05, 8.89000000000445e-07, 1.3763999999999443e-05, 9.299999999996811e-07, 1.1292000000003022e-05, 9.169999999995848e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 1.7236000000000334e-05, 9.160000000001112e-07, 1.7791999999999114e-05, 9.309999999991547e-07, 1.8429999999999835e-05, 9.450000000021941e-07, 1.9665999999998046e-05, 9.309999999991547e-07, 1.6278000000001513e-05, 9.160000000001112e-07, 3.0277999999998167e-05, 9.170000000030543e-07, 1.0902999999999607e-05, 9.43999999999251e-07, 2.1778000000000075e-05, 9.299999999996811e-07, 2.9028000000000387e-05, 9.719999999983908e-07, 2.337500000000256e-05, 9.449999999987246e-07, 2.6264000000001536e-05, 8.889999999969755e-07, 1.937500000000203e-05, 9.160000000001112e-07, 1.691699999999824e-05, 8.89000000000445e-07, 1.2833000000000289e-05, 9.309999999991547e-07, 2.9027000000000913e-05, 9.449999999987246e-07, 1.6569000000001e-05, 9.449999999987246e-07, 2.338900000000213e-05, 9.43999999999251e-07, 2.184700000000192e-05, 9.309999999991547e-07, 2.061100000000024e-05, 9.859999999979607e-07, 1.9014000000001224e-05, 9.309999999991547e-07, 2.4972000000001576e-05, 9.299999999996811e-07, 2.4348000000000425e-05, 9.57999999998821e-07, 1.809700000000164e-05, 9.57999999998821e-07, 1.7805999999998684e-05, 9.310000000026242e-07, 1.9387999999998656e-05, 9.030000000000149e-07, 1.4694999999998598e-05, 9.580000000022904e-07, 2.9305999999999777e-05, 9.43999999999251e-07, 2.408300000000113e-05, 8.749999999974056e-07, 2.8084000000001136e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.43999999999251e-07, 1.7486000000000584e-05, 9.450000000021941e-07, 2.4652000000000007e-05, 1.01400000000057e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 1.1940000000029705e-06, 1.2388999999998068e-05, 9.309999999991547e-07, 2.129099999999967e-05, 8.750000000008751e-07, 2.719500000000069e-05, 9.030000000000149e-07, 2.6207999999999787e-05, 9.309999999991547e-07, 1.936100000000246e-05, 9.43999999999251e-07, 2.4027999999998856e-05, 9.299999999996811e-07, 2.123700000000034e-05, 9.299999999996811e-07, 2.341700000000127e-05, 9.43999999999251e-07, 2.9625000000001872e-05, 9.719999999983908e-07, 1.590300000000114e-05, 9.449999999987246e-07, 2.155499999999949e-05, 9.309999999991547e-07, 1.3444000000001344e-05, 9.309999999991547e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 2.034700000000042e-05, 8.89000000000445e-07, 1.3763999999999443e-05, 9.299999999996811e-07, 1.1292000000003022e-05, 9.169999999995848e-07, 1.5957999999999944e-05, 9.169999999995848e-07, 1.7236000000000334e-05, 9.160000000001112e-07, 1.7791999999999114e-05, 9.309999999991547e-07, 1.8429999999999835e-05, 9.450000000021941e-07, 1.9665999999998046e-05, 9.309999999991547e-07, 1.6278000000001513e-05, 9.160000000001112e-07, 3.0277999999998167e-05, 9.170000000030543e-07, 1.0902999999999607e-05, 9.43999999999251e-07, 2.1778000000000075e-05, 9.299999999996811e-07, 2.9028000000000387e-05, 9.719999999983908e-07, 2.337500000000256e-05, 9.449999999987246e-07, 2.6264000000001536e-05, 8.889999999969755e-07, 1.937500000000203e-05, 9.160000000001112e-07, 1.691699999999824e-05, 8.89000000000445e-07, 1.2833000000000289e-05, 9.309999999991547e-07, 2.9027000000000913e-05, 9.449999999987246e-07, 1.6569000000001e-05, 9.449999999987246e-07, 2.338900000000213e-05, 9.43999999999251e-07, 2.184700000000192e-05, 9.309999999991547e-07, 2.061100000000024e-05, 9.859999999979607e-07, 1.9014000000001224e-05, 9.309999999991547e-07, 2.4972000000001576e-05, 9.299999999996811e-07, 2.4348000000000425e-05, 9.57999999998821e-07, 1.809700000000164e-05, 9.57999999998821e-07, 1.7805999999998684e-05, 9.310000000026242e-07, 1.9387999999998656e-05, 9.030000000000149e-07, 1.4694999999998598e-05, 9.580000000022904e-07, 2.9305999999999777e-05, 9.43999999999251e-07, 2.408300000000113e-05, 8.749999999974056e-07, 2.8084000000001136e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.43999999999251e-07, 1.7486000000000584e-05, 9.450000000021941e-07, 2.4652000000000007e-05, 1.01400000000057e-06]}</msg>
<status status="PASS" starttime="20201110 08:32:55.925" endtime="20201110 08:32:55.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.921" endtime="20201110 08:32:55.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.933" level="INFO">${RESULT} = [{'time': 0.018553208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1940000000029705e-06, 'source_diff': 1.1940000000029705e-06}, {'time': 0.018566528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:55.930" endtime="20201110 08:32:55.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:55.947" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:55.934" endtime="20201110 08:32:55.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.951" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:55.950" endtime="20201110 08:32:55.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.954" level="INFO">VALUE: [1.1940000000029705e-06, 9.309999999991547e-07, 8.750000000008751e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.719999999983908e-07, 9.449999999987246e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.169999999995848e-07, 8.89000000000445e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.170000000030543e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.719999999983908e-07, 9.449999999987246e-07, 8.889999999969755e-07, 9.160000000001112e-07, 8.89000000000445e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.859999999979607e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.57999999998821e-07, 9.57999999998821e-07, 9.310000000026242e-07, 9.030000000000149e-07, 9.580000000022904e-07, 9.43999999999251e-07, 8.749999999974056e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.450000000021941e-07, 1.01400000000057e-06]</msg>
<status status="PASS" starttime="20201110 08:32:55.952" endtime="20201110 08:32:55.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.948" endtime="20201110 08:32:55.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.957" endtime="20201110 08:32:55.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.960" endtime="20201110 08:32:55.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.959" endtime="20201110 08:32:55.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.955" endtime="20201110 08:32:55.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.548" endtime="20201110 08:32:55.981"></status>
</kw>
<msg timestamp="20201110 08:32:55.981" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.990" endtime="20201110 08:32:55.999"></status>
</kw>
<msg timestamp="20201110 08:32:55.999" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.988" endtime="20201110 08:32:56.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.001" endtime="20201110 08:32:56.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.003" endtime="20201110 08:32:56.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.985" endtime="20201110 08:32:56.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.983" endtime="20201110 08:32:56.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.012" endtime="20201110 08:32:56.299"></status>
</kw>
<msg timestamp="20201110 08:32:56.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.010" endtime="20201110 08:32:56.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019791125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.303" endtime="20201110 08:32:56.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.312" endtime="20201110 08:32:56.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.008" endtime="20201110 08:32:56.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.006" endtime="20201110 08:32:56.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.319" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:56.318" endtime="20201110 08:32:56.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.324" level="INFO">VALUE: [{'time': 0.019791125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.27800000000039e-06, 'source_diff': 1.27800000000039e-06}, {'time': 0.019812208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.980500000000121e-05, 'source_diff': 1.980500000000121e-05}, {'time': 0.019813111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019843056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.994499999999997e-05, 'source_diff': 2.994499999999997e-05}, {'time': 0.019844, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019864639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.063899999999938e-05, 'source_diff': 2.063899999999938e-05}, {'time': 0.019865556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019885542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9985999999999615e-05, 'source_diff': 1.9985999999999615e-05}, {'time': 0.019886458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019912361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.590300000000073e-05, 'source_diff': 2.590300000000073e-05}, {'time': 0.019913306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019927708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402000000000165e-05, 'source_diff': 1.4402000000000165e-05}, {'time': 0.019928611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019952958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.434700000000095e-05, 'source_diff': 2.434700000000095e-05}, {'time': 0.019953889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019971708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.781900000000225e-05, 'source_diff': 1.781900000000225e-05}, {'time': 0.019972639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019985472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.019986403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020005444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.904100000000089e-05, 'source_diff': 1.904100000000089e-05}, {'time': 0.020006403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.020033847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7444000000001467e-05, 'source_diff': 2.7444000000001467e-05}, {'time': 0.020034792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020058181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.338900000000213e-05, 'source_diff': 2.338900000000213e-05}, {'time': 0.020059125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020078181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9055999999999934e-05, 'source_diff': 1.9055999999999934e-05}, {'time': 0.020079111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020097542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.020098486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020117208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8722000000002265e-05, 'source_diff': 1.8722000000002265e-05}, {'time': 0.020118153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020147194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9041000000000483e-05, 'source_diff': 2.9041000000000483e-05}, {'time': 0.020148111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020167778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.966700000000099e-05, 'source_diff': 1.966700000000099e-05}, {'time': 0.020168722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020198681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.995899999999954e-05, 'source_diff': 2.995899999999954e-05}, {'time': 0.020199611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020221486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.187500000000106e-05, 'source_diff': 2.187500000000106e-05}, {'time': 0.020222403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020246431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4027999999998856e-05, 'source_diff': 2.4027999999998856e-05}, {'time': 0.020247361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020275444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8083000000001662e-05, 'source_diff': 2.8083000000001662e-05}, {'time': 0.020276375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020290139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.020291069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020308569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000000154e-05, 'source_diff': 1.7500000000000154e-05}, {'time': 0.020309514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020338208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8693999999999248e-05, 'source_diff': 2.8693999999999248e-05}, {'time': 0.020339153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020355417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6264000000001944e-05, 'source_diff': 1.6264000000001944e-05}, {'time': 0.020356333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.020367917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1583999999998512e-05, 'source_diff': 1.1583999999998512e-05}, {'time': 0.020368847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.020392583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3735999999999896e-05, 'source_diff': 2.3735999999999896e-05}, {'time': 0.020393514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.020417222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3707999999997287e-05, 'source_diff': 2.3707999999997287e-05}, {'time': 0.020418167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020438778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.020439708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.0204625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.020463444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020480625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.718099999999806e-05, 'source_diff': 1.718099999999806e-05}, {'time': 0.020481583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.020506833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5249999999997497e-05, 'source_diff': 2.5249999999997497e-05}, {'time': 0.020507764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.020524639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.687499999999953e-05, 'source_diff': 1.687499999999953e-05}, {'time': 0.020525583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020537486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1903000000000608e-05, 'source_diff': 1.1903000000000608e-05}, {'time': 0.020538403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4040999999998952e-05, 'source_diff': 2.4040999999998952e-05}, {'time': 0.020563389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.020588694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5304999999999772e-05, 'source_diff': 2.5304999999999772e-05}, {'time': 0.020589611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.020613625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4013999999999286e-05, 'source_diff': 2.4013999999999286e-05}, {'time': 0.020614556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020636722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.020637681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.020656403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8721999999998795e-05, 'source_diff': 1.8721999999998795e-05}, {'time': 0.020657361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.020671722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.020672653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020684569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1916000000000704e-05, 'source_diff': 1.1916000000000704e-05}, {'time': 0.020685514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020711694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6180000000000647e-05, 'source_diff': 2.6180000000000647e-05}, {'time': 0.020712653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.020735153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999998216e-05, 'source_diff': 2.2499999999998216e-05}, {'time': 0.020736056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.020751986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5930000000000805e-05, 'source_diff': 1.5930000000000805e-05}, {'time': 0.020752931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020770111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7180000000002055e-05, 'source_diff': 1.7180000000002055e-05}, {'time': 0.020771056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.020784806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.02078575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.020815375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9625000000001872e-05, 'source_diff': 2.9625000000001872e-05}, {'time': 0.020816306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.020841278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4972000000001576e-05, 'source_diff': 2.4972000000001576e-05}, {'time': 0.02084225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.719999999983908e-07, 'source_diff': 9.719999999983908e-07}, {'time': 0.020856292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4041999999998833e-05, 'source_diff': 1.4041999999998833e-05}, {'time': 0.020857222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.300000000031505e-07, 'source_diff': 9.300000000031505e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:56.320" endtime="20201110 08:32:56.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.315" endtime="20201110 08:32:56.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:56.350" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:56.326" endtime="20201110 08:32:56.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.354" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:56.353" endtime="20201110 08:32:56.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.358" level="INFO">VALUE: {'sourcetime': [0.019791125, 0.019792403, 0.019812208, 0.019813111, 0.019843056, 0.019844, 0.019864639, 0.019865556, 0.019885542, 0.019886458, 0.019912361, 0.019913306, 0.019927708, 0.019928611, 0.019952958, 0.019953889, 0.019971708, 0.019972639, 0.019985472, 0.019986403, 0.020005444, 0.020006403, 0.020033847, 0.020034792, 0.020058181, 0.020059125, 0.020078181, 0.020079111, 0.020097542, 0.020098486, 0.020117208, 0.020118153, 0.020147194, 0.020148111, 0.020167778, 0.020168722, 0.020198681, 0.020199611, 0.020221486, 0.020222403, 0.020246431, 0.020247361, 0.020275444, 0.020276375, 0.020290139, 0.020291069, 0.020308569, 0.020309514, 0.020338208, 0.020339153, 0.020355417, 0.020356333, 0.020367917, 0.020368847, 0.020392583, 0.020393514, 0.020417222, 0.020418167, 0.020438778, 0.020439708, 0.0204625, 0.020463444, 0.020480625, 0.020481583, 0.020506833, 0.020507764, 0.020524639, 0.020525583, 0.020537486, 0.020538403, 0.020562444, 0.020563389, 0.020588694, 0.020589611, 0.020613625, 0.020614556, 0.020636722, 0.020637681, 0.020656403, 0.020657361, 0.020671722, 0.020672653, 0.020684569, 0.020685514, 0.020711694, 0.020712653, 0.020735153, 0.020736056, 0.020751986, 0.020752931, 0.020770111, 0.020771056, 0.020784806, 0.02078575, 0.020815375, 0.020816306, 0.020841278, 0.02084225, 0.020856292, 0.020857222], 'source_diff': [0, 1.27800000000039e-06, 1.980500000000121e-05, 9.030000000000149e-07, 2.994499999999997e-05, 9.43999999999251e-07, 2.063899999999938e-05, 9.169999999995848e-07, 1.9985999999999615e-05, 9.160000000001112e-07, 2.590300000000073e-05, 9.449999999987246e-07, 1.4402000000000165e-05, 9.030000000000149e-07, 2.434700000000095e-05, 9.309999999991547e-07, 1.781900000000225e-05, 9.309999999991547e-07, 1.2833000000000289e-05, 9.309999999991547e-07, 1.904100000000089e-05, 9.589999999982945e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.338900000000213e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.299999999996811e-07, 1.843099999999931e-05, 9.43999999999251e-07, 1.8722000000002265e-05, 9.449999999987246e-07, 2.9041000000000483e-05, 9.169999999995848e-07, 1.966700000000099e-05, 9.43999999999251e-07, 2.995899999999954e-05, 9.299999999996811e-07, 2.187500000000106e-05, 9.169999999995848e-07, 2.4027999999998856e-05, 9.299999999996811e-07, 2.8083000000001662e-05, 9.309999999991547e-07, 1.3763999999999443e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.450000000021941e-07, 2.8693999999999248e-05, 9.449999999987246e-07, 1.6264000000001944e-05, 9.160000000001112e-07, 1.1583999999998512e-05, 9.299999999996811e-07, 2.3735999999999896e-05, 9.310000000026242e-07, 2.3707999999997287e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.43999999999251e-07, 1.718099999999806e-05, 9.580000000022904e-07, 2.5249999999997497e-05, 9.310000000026242e-07, 1.687499999999953e-05, 9.43999999999251e-07, 1.1903000000000608e-05, 9.169999999995848e-07, 2.4040999999998952e-05, 9.450000000021941e-07, 2.5304999999999772e-05, 9.169999999995848e-07, 2.4013999999999286e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.59000000001764e-07, 1.8721999999998795e-05, 9.57999999998821e-07, 1.4361000000000929e-05, 9.309999999991547e-07, 1.1916000000000704e-05, 9.449999999987246e-07, 2.6180000000000647e-05, 9.59000000001764e-07, 2.2499999999998216e-05, 9.030000000000149e-07, 1.5930000000000805e-05, 9.449999999987246e-07, 1.7180000000002055e-05, 9.449999999987246e-07, 1.3749999999999873e-05, 9.43999999999251e-07, 2.9625000000001872e-05, 9.309999999991547e-07, 2.4972000000001576e-05, 9.719999999983908e-07, 1.4041999999998833e-05, 9.300000000031505e-07], 'eventdiff': [0, 1.27800000000039e-06, 1.980500000000121e-05, 9.030000000000149e-07, 2.994499999999997e-05, 9.43999999999251e-07, 2.063899999999938e-05, 9.169999999995848e-07, 1.9985999999999615e-05, 9.160000000001112e-07, 2.590300000000073e-05, 9.449999999987246e-07, 1.4402000000000165e-05, 9.030000000000149e-07, 2.434700000000095e-05, 9.309999999991547e-07, 1.781900000000225e-05, 9.309999999991547e-07, 1.2833000000000289e-05, 9.309999999991547e-07, 1.904100000000089e-05, 9.589999999982945e-07, 2.7444000000001467e-05, 9.449999999987246e-07, 2.338900000000213e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.299999999996811e-07, 1.843099999999931e-05, 9.43999999999251e-07, 1.8722000000002265e-05, 9.449999999987246e-07, 2.9041000000000483e-05, 9.169999999995848e-07, 1.966700000000099e-05, 9.43999999999251e-07, 2.995899999999954e-05, 9.299999999996811e-07, 2.187500000000106e-05, 9.169999999995848e-07, 2.4027999999998856e-05, 9.299999999996811e-07, 2.8083000000001662e-05, 9.309999999991547e-07, 1.3763999999999443e-05, 9.299999999996811e-07, 1.7500000000000154e-05, 9.450000000021941e-07, 2.8693999999999248e-05, 9.449999999987246e-07, 1.6264000000001944e-05, 9.160000000001112e-07, 1.1583999999998512e-05, 9.299999999996811e-07, 2.3735999999999896e-05, 9.310000000026242e-07, 2.3707999999997287e-05, 9.450000000021941e-07, 2.061100000000024e-05, 9.299999999996811e-07, 2.2792000000000645e-05, 9.43999999999251e-07, 1.718099999999806e-05, 9.580000000022904e-07, 2.5249999999997497e-05, 9.310000000026242e-07, 1.687499999999953e-05, 9.43999999999251e-07, 1.1903000000000608e-05, 9.169999999995848e-07, 2.4040999999998952e-05, 9.450000000021941e-07, 2.5304999999999772e-05, 9.169999999995848e-07, 2.4013999999999286e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.59000000001764e-07, 1.8721999999998795e-05, 9.57999999998821e-07, 1.4361000000000929e-05, 9.309999999991547e-07, 1.1916000000000704e-05, 9.449999999987246e-07, 2.6180000000000647e-05, 9.59000000001764e-07, 2.2499999999998216e-05, 9.030000000000149e-07, 1.5930000000000805e-05, 9.449999999987246e-07, 1.7180000000002055e-05, 9.449999999987246e-07, 1.3749999999999873e-05, 9.43999999999251e-07, 2.9625000000001872e-05, 9.309999999991547e-07, 2.4972000000001576e-05, 9.719999999983908e-07, 1.4041999999998833e-05, 9.300000000031505e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:56.355" endtime="20201110 08:32:56.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.351" endtime="20201110 08:32:56.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:56.364" level="INFO">${RESULT} = [{'time': 0.019792403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.27800000000039e-06, 'source_diff': 1.27800000000039e-06}, {'time': 0.019813111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:56.360" endtime="20201110 08:32:56.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:56.377" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:56.364" endtime="20201110 08:32:56.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:56.380" endtime="20201110 08:32:56.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.383" level="INFO">VALUE: [1.27800000000039e-06, 9.030000000000149e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.030000000000149e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.589999999982945e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.169999999995848e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.450000000021941e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.310000000026242e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.59000000001764e-07, 9.57999999998821e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.59000000001764e-07, 9.030000000000149e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.719999999983908e-07, 9.300000000031505e-07]</msg>
<status status="PASS" starttime="20201110 08:32:56.382" endtime="20201110 08:32:56.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.378" endtime="20201110 08:32:56.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.386" endtime="20201110 08:32:56.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.390" endtime="20201110 08:32:56.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.388" endtime="20201110 08:32:56.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.385" endtime="20201110 08:32:56.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.982" endtime="20201110 08:32:56.410"></status>
</kw>
<msg timestamp="20201110 08:32:56.411" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.418" endtime="20201110 08:32:56.427"></status>
</kw>
<msg timestamp="20201110 08:32:56.428" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.417" endtime="20201110 08:32:56.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.429" endtime="20201110 08:32:56.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.431" endtime="20201110 08:32:56.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.414" endtime="20201110 08:32:56.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.412" endtime="20201110 08:32:56.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.441" endtime="20201110 08:32:56.725"></status>
</kw>
<msg timestamp="20201110 08:32:56.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.440" endtime="20201110 08:32:56.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.730" endtime="20201110 08:32:56.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.738" endtime="20201110 08:32:56.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.437" endtime="20201110 08:32:56.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.436" endtime="20201110 08:32:56.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.745" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:56.744" endtime="20201110 08:32:56.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.750" level="INFO">VALUE: [{'time': 0.018493417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018494583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1659999999968917e-06, 'source_diff': 1.1659999999968917e-06}, {'time': 0.018512889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8306000000002653e-05, 'source_diff': 1.8306000000002653e-05}, {'time': 0.018513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018535361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1541999999999395e-05, 'source_diff': 2.1541999999999395e-05}, {'time': 0.018536306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.01856375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7444000000001467e-05, 'source_diff': 2.7444000000001467e-05}, {'time': 0.018564694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018584361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.966700000000099e-05, 'source_diff': 1.966700000000099e-05}, {'time': 0.018585347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018614306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.895900000000201e-05, 'source_diff': 2.895900000000201e-05}, {'time': 0.01861525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018635847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.018636778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018657708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0929999999998866e-05, 'source_diff': 2.0929999999998866e-05}, {'time': 0.018658639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018673014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018673958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018693639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.968100000000056e-05, 'source_diff': 1.968100000000056e-05}, {'time': 0.018694569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018717972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.340299999999823e-05, 'source_diff': 2.340299999999823e-05}, {'time': 0.018718903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018734222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.531899999999975e-05, 'source_diff': 1.531899999999975e-05}, {'time': 0.018735167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018755764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.018756708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018777944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.018778861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018794486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.018795431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018818264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.018819167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018831347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2179999999997054e-05, 'source_diff': 1.2179999999997054e-05}, {'time': 0.018832292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018852583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.029099999999867e-05, 'source_diff': 2.029099999999867e-05}, {'time': 0.018853528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018880708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7179999999998178e-05, 'source_diff': 2.7179999999998178e-05}, {'time': 0.018881597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.018907819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.018908806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870000000009038e-07, 'source_diff': 9.870000000009038e-07}, {'time': 0.018933417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.461100000000077e-05, 'source_diff': 2.461100000000077e-05}, {'time': 0.018934333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018954944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.018955889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018983681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7791999999998707e-05, 'source_diff': 2.7791999999998707e-05}, {'time': 0.018984597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019004903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0306000000001184e-05, 'source_diff': 2.0306000000001184e-05}, {'time': 0.019005819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019021764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944999999999848e-05, 'source_diff': 1.5944999999999848e-05}, {'time': 0.019022722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019040569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.784700000000139e-05, 'source_diff': 1.784700000000139e-05}, {'time': 0.019041444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.01905675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5305999999999653e-05, 'source_diff': 1.5305999999999653e-05}, {'time': 0.019057708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.019082653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.494500000000191e-05, 'source_diff': 2.494500000000191e-05}, {'time': 0.019083597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019102028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.019102958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019117333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.019118264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019129542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.019130542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.01915575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5207999999998787e-05, 'source_diff': 2.5207999999998787e-05}, {'time': 0.019156694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019177611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.091700000000224e-05, 'source_diff': 2.091700000000224e-05}, {'time': 0.019178542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019205764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.019206625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610000000013052e-07, 'source_diff': 8.610000000013052e-07}, {'time': 0.019231903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.019232847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019253444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.059700000000067e-05, 'source_diff': 2.059700000000067e-05}, {'time': 0.019254389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019266264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019267208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019286264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9055999999999934e-05, 'source_diff': 1.9055999999999934e-05}, {'time': 0.019287181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019317764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.058300000000069e-05, 'source_diff': 3.058300000000069e-05}, {'time': 0.019318694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019334625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5931000000000278e-05, 'source_diff': 1.5931000000000278e-05}, {'time': 0.019335542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019347472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930000000000274e-05, 'source_diff': 1.1930000000000274e-05}, {'time': 0.019348389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019359347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.019360222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.019379222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9000000000001654e-05, 'source_diff': 1.9000000000001654e-05}, {'time': 0.019380139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019405111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4971999999998107e-05, 'source_diff': 2.4971999999998107e-05}, {'time': 0.019406056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019427931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.187499999999759e-05, 'source_diff': 2.187499999999759e-05}, {'time': 0.019428833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020000000005413e-07, 'source_diff': 9.020000000005413e-07}, {'time': 0.019440083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.019441042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.589999999982945e-07, 'source_diff': 9.589999999982945e-07}, {'time': 0.019452917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1875000000001468e-05, 'source_diff': 1.1875000000001468e-05}, {'time': 0.019453903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019480986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7082999999997193e-05, 'source_diff': 2.7082999999997193e-05}, {'time': 0.019481931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019495681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.019496611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019522833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6221999999999357e-05, 'source_diff': 2.6221999999999357e-05}, {'time': 0.019523792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:56.746" endtime="20201110 08:32:56.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.742" endtime="20201110 08:32:56.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:56.775" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:56.752" endtime="20201110 08:32:56.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.779" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:56.778" endtime="20201110 08:32:56.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.783" level="INFO">VALUE: {'sourcetime': [0.018493417, 0.018494583, 0.018512889, 0.018513819, 0.018535361, 0.018536306, 0.01856375, 0.018564694, 0.018584361, 0.018585347, 0.018614306, 0.01861525, 0.018635847, 0.018636778, 0.018657708, 0.018658639, 0.018673014, 0.018673958, 0.018693639, 0.018694569, 0.018717972, 0.018718903, 0.018734222, 0.018735167, 0.018755764, 0.018756708, 0.018777944, 0.018778861, 0.018794486, 0.018795431, 0.018818264, 0.018819167, 0.018831347, 0.018832292, 0.018852583, 0.018853528, 0.018880708, 0.018881597, 0.018907819, 0.018908806, 0.018933417, 0.018934333, 0.018954944, 0.018955889, 0.018983681, 0.018984597, 0.019004903, 0.019005819, 0.019021764, 0.019022722, 0.019040569, 0.019041444, 0.01905675, 0.019057708, 0.019082653, 0.019083597, 0.019102028, 0.019102958, 0.019117333, 0.019118264, 0.019129542, 0.019130542, 0.01915575, 0.019156694, 0.019177611, 0.019178542, 0.019205764, 0.019206625, 0.019231903, 0.019232847, 0.019253444, 0.019254389, 0.019266264, 0.019267208, 0.019286264, 0.019287181, 0.019317764, 0.019318694, 0.019334625, 0.019335542, 0.019347472, 0.019348389, 0.019359347, 0.019360222, 0.019379222, 0.019380139, 0.019405111, 0.019406056, 0.019427931, 0.019428833, 0.019440083, 0.019441042, 0.019452917, 0.019453903, 0.019480986, 0.019481931, 0.019495681, 0.019496611, 0.019522833, 0.019523792], 'source_diff': [0, 1.1659999999968917e-06, 1.8306000000002653e-05, 9.299999999996811e-07, 2.1541999999999395e-05, 9.449999999987246e-07, 2.7444000000001467e-05, 9.43999999999251e-07, 1.966700000000099e-05, 9.859999999979607e-07, 2.895900000000201e-05, 9.43999999999251e-07, 2.059700000000067e-05, 9.309999999991547e-07, 2.0929999999998866e-05, 9.310000000026242e-07, 1.4375000000000498e-05, 9.43999999999251e-07, 1.968100000000056e-05, 9.299999999996811e-07, 2.340299999999823e-05, 9.309999999991547e-07, 1.531899999999975e-05, 9.450000000021941e-07, 2.059700000000067e-05, 9.43999999999251e-07, 2.1236000000000865e-05, 9.169999999995848e-07, 1.562499999999828e-05, 9.450000000021941e-07, 2.283299999999988e-05, 9.030000000000149e-07, 1.2179999999997054e-05, 9.450000000021941e-07, 2.029099999999867e-05, 9.450000000021941e-07, 2.7179999999998178e-05, 8.89000000000445e-07, 2.6221999999999357e-05, 9.870000000009038e-07, 2.461100000000077e-05, 9.160000000001112e-07, 2.061100000000024e-05, 9.449999999987246e-07, 2.7791999999998707e-05, 9.160000000001112e-07, 2.0306000000001184e-05, 9.160000000001112e-07, 1.5944999999999848e-05, 9.57999999998821e-07, 1.784700000000139e-05, 8.750000000008751e-07, 1.5305999999999653e-05, 9.57999999998821e-07, 2.494500000000191e-05, 9.43999999999251e-07, 1.843099999999931e-05, 9.299999999996811e-07, 1.4375000000000498e-05, 9.309999999991547e-07, 1.1277999999999982e-05, 1.000000000001e-06, 2.5207999999998787e-05, 9.43999999999251e-07, 2.091700000000224e-05, 9.309999999991547e-07, 2.7222000000000357e-05, 8.610000000013052e-07, 2.5278000000000106e-05, 9.43999999999251e-07, 2.059700000000067e-05, 9.449999999987246e-07, 1.1875000000001468e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.169999999995848e-07, 3.058300000000069e-05, 9.299999999996811e-07, 1.5931000000000278e-05, 9.169999999995848e-07, 1.1930000000000274e-05, 9.169999999995848e-07, 1.0957999999998413e-05, 8.750000000008751e-07, 1.9000000000001654e-05, 9.169999999995848e-07, 2.4971999999998107e-05, 9.450000000021941e-07, 2.187499999999759e-05, 9.020000000005413e-07, 1.1250000000000843e-05, 9.589999999982945e-07, 1.1875000000001468e-05, 9.860000000014302e-07, 2.7082999999997193e-05, 9.450000000021941e-07, 1.3749999999999873e-05, 9.299999999996811e-07, 2.6221999999999357e-05, 9.59000000001764e-07], 'eventdiff': [0, 1.1659999999968917e-06, 1.8306000000002653e-05, 9.299999999996811e-07, 2.1541999999999395e-05, 9.449999999987246e-07, 2.7444000000001467e-05, 9.43999999999251e-07, 1.966700000000099e-05, 9.859999999979607e-07, 2.895900000000201e-05, 9.43999999999251e-07, 2.059700000000067e-05, 9.309999999991547e-07, 2.0929999999998866e-05, 9.310000000026242e-07, 1.4375000000000498e-05, 9.43999999999251e-07, 1.968100000000056e-05, 9.299999999996811e-07, 2.340299999999823e-05, 9.309999999991547e-07, 1.531899999999975e-05, 9.450000000021941e-07, 2.059700000000067e-05, 9.43999999999251e-07, 2.1236000000000865e-05, 9.169999999995848e-07, 1.562499999999828e-05, 9.450000000021941e-07, 2.283299999999988e-05, 9.030000000000149e-07, 1.2179999999997054e-05, 9.450000000021941e-07, 2.029099999999867e-05, 9.450000000021941e-07, 2.7179999999998178e-05, 8.89000000000445e-07, 2.6221999999999357e-05, 9.870000000009038e-07, 2.461100000000077e-05, 9.160000000001112e-07, 2.061100000000024e-05, 9.449999999987246e-07, 2.7791999999998707e-05, 9.160000000001112e-07, 2.0306000000001184e-05, 9.160000000001112e-07, 1.5944999999999848e-05, 9.57999999998821e-07, 1.784700000000139e-05, 8.750000000008751e-07, 1.5305999999999653e-05, 9.57999999998821e-07, 2.494500000000191e-05, 9.43999999999251e-07, 1.843099999999931e-05, 9.299999999996811e-07, 1.4375000000000498e-05, 9.309999999991547e-07, 1.1277999999999982e-05, 1.000000000001e-06, 2.5207999999998787e-05, 9.43999999999251e-07, 2.091700000000224e-05, 9.309999999991547e-07, 2.7222000000000357e-05, 8.610000000013052e-07, 2.5278000000000106e-05, 9.43999999999251e-07, 2.059700000000067e-05, 9.449999999987246e-07, 1.1875000000001468e-05, 9.43999999999251e-07, 1.9055999999999934e-05, 9.169999999995848e-07, 3.058300000000069e-05, 9.299999999996811e-07, 1.5931000000000278e-05, 9.169999999995848e-07, 1.1930000000000274e-05, 9.169999999995848e-07, 1.0957999999998413e-05, 8.750000000008751e-07, 1.9000000000001654e-05, 9.169999999995848e-07, 2.4971999999998107e-05, 9.450000000021941e-07, 2.187499999999759e-05, 9.020000000005413e-07, 1.1250000000000843e-05, 9.589999999982945e-07, 1.1875000000001468e-05, 9.860000000014302e-07, 2.7082999999997193e-05, 9.450000000021941e-07, 1.3749999999999873e-05, 9.299999999996811e-07, 2.6221999999999357e-05, 9.59000000001764e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:56.780" endtime="20201110 08:32:56.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.776" endtime="20201110 08:32:56.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:56.789" level="INFO">${RESULT} = [{'time': 0.018494583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1659999999968917e-06, 'source_diff': 1.1659999999968917e-06}, {'time': 0.018513819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:56.786" endtime="20201110 08:32:56.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:56.803" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:56.790" endtime="20201110 08:32:56.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.807" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:56.806" endtime="20201110 08:32:56.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.809" level="INFO">VALUE: [1.1659999999968917e-06, 9.299999999996811e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.859999999979607e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.030000000000149e-07, 9.450000000021941e-07, 9.450000000021941e-07, 8.89000000000445e-07, 9.870000000009038e-07, 9.160000000001112e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.160000000001112e-07, 9.57999999998821e-07, 8.750000000008751e-07, 9.57999999998821e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 1.000000000001e-06, 9.43999999999251e-07, 9.309999999991547e-07, 8.610000000013052e-07, 9.43999999999251e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.169999999995848e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.450000000021941e-07, 9.020000000005413e-07, 9.589999999982945e-07, 9.860000000014302e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.59000000001764e-07]</msg>
<status status="PASS" starttime="20201110 08:32:56.808" endtime="20201110 08:32:56.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.803" endtime="20201110 08:32:56.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.812" endtime="20201110 08:32:56.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.816" endtime="20201110 08:32:56.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.814" endtime="20201110 08:32:56.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.811" endtime="20201110 08:32:56.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.411" endtime="20201110 08:32:56.836"></status>
</kw>
<msg timestamp="20201110 08:32:56.837" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.844" endtime="20201110 08:32:56.853"></status>
</kw>
<msg timestamp="20201110 08:32:56.854" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.843" endtime="20201110 08:32:56.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.856" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.855" endtime="20201110 08:32:56.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.857" endtime="20201110 08:32:56.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.840" endtime="20201110 08:32:56.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.838" endtime="20201110 08:32:56.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.866" endtime="20201110 08:32:57.151"></status>
</kw>
<msg timestamp="20201110 08:32:57.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018380153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.865" endtime="20201110 08:32:57.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018380153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.155" endtime="20201110 08:32:57.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.163" endtime="20201110 08:32:57.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.862" endtime="20201110 08:32:57.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.860" endtime="20201110 08:32:57.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.170" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:57.169" endtime="20201110 08:32:57.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.175" level="INFO">VALUE: [{'time': 0.018378986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018380153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018410292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139000000001942e-05, 'source_diff': 3.0139000000001942e-05}, {'time': 0.018411278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018435903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.018436819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018467417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0597999999999737e-05, 'source_diff': 3.0597999999999737e-05}, {'time': 0.018468347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018489875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1527999999999825e-05, 'source_diff': 2.1527999999999825e-05}, {'time': 0.018490806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018511125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.031900000000128e-05, 'source_diff': 2.031900000000128e-05}, {'time': 0.018512056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018542319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0263000000002593e-05, 'source_diff': 3.0263000000002593e-05}, {'time': 0.01854325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018565111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186099999999802e-05, 'source_diff': 2.186099999999802e-05}, {'time': 0.018566056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.018581681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.562499999999828e-05, 'source_diff': 1.562499999999828e-05}, {'time': 0.018582611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018594181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1570000000002412e-05, 'source_diff': 1.1570000000002412e-05}, {'time': 0.018595125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018615417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0291999999998145e-05, 'source_diff': 2.0291999999998145e-05}, {'time': 0.018616375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.018637278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.09029999999992e-05, 'source_diff': 2.09029999999992e-05}, {'time': 0.018638236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018652611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4375000000000498e-05, 'source_diff': 1.4375000000000498e-05}, {'time': 0.018653528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018677278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3749999999999466e-05, 'source_diff': 2.3749999999999466e-05}, {'time': 0.018678194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018705347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.715300000000198e-05, 'source_diff': 2.715300000000198e-05}, {'time': 0.018706278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018719111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018720111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018743764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.365299999999848e-05, 'source_diff': 2.365299999999848e-05}, {'time': 0.018744708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018763444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.018764444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018792778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8333999999997916e-05, 'source_diff': 2.8333999999997916e-05}, {'time': 0.018793708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018823972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0264000000002067e-05, 'source_diff': 3.0264000000002067e-05}, {'time': 0.018824903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.0188555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.059700000000026e-05, 'source_diff': 3.059700000000026e-05}, {'time': 0.018856417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018886681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0263999999998598e-05, 'source_diff': 3.0263999999998598e-05}, {'time': 0.018887611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018914764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.715300000000198e-05, 'source_diff': 2.715300000000198e-05}, {'time': 0.018915694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018935389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.969500000000013e-05, 'source_diff': 1.969500000000013e-05}, {'time': 0.018936319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018956014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.969500000000013e-05, 'source_diff': 1.969500000000013e-05}, {'time': 0.018956931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018984708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7776999999999663e-05, 'source_diff': 2.7776999999999663e-05}, {'time': 0.018985653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019011903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999998497e-05, 'source_diff': 2.6249999999998497e-05}, {'time': 0.019012778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000008751e-07, 'source_diff': 8.750000000008751e-07}, {'time': 0.019037458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4679999999999147e-05, 'source_diff': 2.4679999999999147e-05}, {'time': 0.019038375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019066167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7791999999998707e-05, 'source_diff': 2.7791999999998707e-05}, {'time': 0.019067083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019088319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1236000000000865e-05, 'source_diff': 2.1236000000000865e-05}, {'time': 0.019089278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019107097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.781899999999878e-05, 'source_diff': 1.781899999999878e-05}, {'time': 0.019108014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.019124875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.019125806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019150153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.434700000000095e-05, 'source_diff': 2.434700000000095e-05}, {'time': 0.019151083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019171694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019172653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59000000001764e-07, 'source_diff': 9.59000000001764e-07}, {'time': 0.019193861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1207999999998256e-05, 'source_diff': 2.1207999999998256e-05}, {'time': 0.019194806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019205694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0888000000000564e-05, 'source_diff': 1.0888000000000564e-05}, {'time': 0.019206639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019218153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1514000000000663e-05, 'source_diff': 1.1514000000000663e-05}, {'time': 0.019219097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019231292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.019232222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019246611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4389000000000068e-05, 'source_diff': 1.4389000000000068e-05}, {'time': 0.019247542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019276556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.0192775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019295306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7806000000002153e-05, 'source_diff': 1.7806000000002153e-05}, {'time': 0.019296236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019307528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291999999999552e-05, 'source_diff': 1.1291999999999552e-05}, {'time': 0.019308444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.019336236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7791999999998707e-05, 'source_diff': 2.7791999999998707e-05}, {'time': 0.019337167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019359333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.019360278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019371528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1249999999997373e-05, 'source_diff': 1.1249999999997373e-05}, {'time': 0.019372458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019383361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0903000000003077e-05, 'source_diff': 1.0903000000003077e-05}, {'time': 0.019384292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019412958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8666000000000108e-05, 'source_diff': 2.8666000000000108e-05}, {'time': 0.019413889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.019441347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7458000000001037e-05, 'source_diff': 2.7458000000001037e-05}, {'time': 0.019442292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019462903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.061100000000024e-05, 'source_diff': 2.061100000000024e-05}, {'time': 0.019463819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.01948225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.019483194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:57.171" endtime="20201110 08:32:57.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.167" endtime="20201110 08:32:57.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:57.201" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.178" endtime="20201110 08:32:57.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.205" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:57.204" endtime="20201110 08:32:57.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.209" level="INFO">VALUE: {'sourcetime': [0.018378986, 0.018380153, 0.018410292, 0.018411278, 0.018435903, 0.018436819, 0.018467417, 0.018468347, 0.018489875, 0.018490806, 0.018511125, 0.018512056, 0.018542319, 0.01854325, 0.018565111, 0.018566056, 0.018581681, 0.018582611, 0.018594181, 0.018595125, 0.018615417, 0.018616375, 0.018637278, 0.018638236, 0.018652611, 0.018653528, 0.018677278, 0.018678194, 0.018705347, 0.018706278, 0.018719111, 0.018720111, 0.018743764, 0.018744708, 0.018763444, 0.018764444, 0.018792778, 0.018793708, 0.018823972, 0.018824903, 0.0188555, 0.018856417, 0.018886681, 0.018887611, 0.018914764, 0.018915694, 0.018935389, 0.018936319, 0.018956014, 0.018956931, 0.018984708, 0.018985653, 0.019011903, 0.019012778, 0.019037458, 0.019038375, 0.019066167, 0.019067083, 0.019088319, 0.019089278, 0.019107097, 0.019108014, 0.019124875, 0.019125806, 0.019150153, 0.019151083, 0.019171694, 0.019172653, 0.019193861, 0.019194806, 0.019205694, 0.019206639, 0.019218153, 0.019219097, 0.019231292, 0.019232222, 0.019246611, 0.019247542, 0.019276556, 0.0192775, 0.019295306, 0.019296236, 0.019307528, 0.019308444, 0.019336236, 0.019337167, 0.019359333, 0.019360278, 0.019371528, 0.019372458, 0.019383361, 0.019384292, 0.019412958, 0.019413889, 0.019441347, 0.019442292, 0.019462903, 0.019463819, 0.01948225, 0.019483194], 'source_diff': [0, 1.1669999999998348e-06, 3.0139000000001942e-05, 9.859999999979607e-07, 2.462500000000034e-05, 9.160000000001112e-07, 3.0597999999999737e-05, 9.299999999996811e-07, 2.1527999999999825e-05, 9.309999999991547e-07, 2.031900000000128e-05, 9.309999999991547e-07, 3.0263000000002593e-05, 9.309999999991547e-07, 2.186099999999802e-05, 9.450000000021941e-07, 1.562499999999828e-05, 9.299999999996811e-07, 1.1570000000002412e-05, 9.43999999999251e-07, 2.0291999999998145e-05, 9.580000000022904e-07, 2.09029999999992e-05, 9.57999999998821e-07, 1.4375000000000498e-05, 9.169999999995848e-07, 2.3749999999999466e-05, 9.160000000001112e-07, 2.715300000000198e-05, 9.309999999991547e-07, 1.2833000000000289e-05, 1.000000000001e-06, 2.365299999999848e-05, 9.43999999999251e-07, 1.8736000000001835e-05, 1.000000000001e-06, 2.8333999999997916e-05, 9.299999999996811e-07, 3.0264000000002067e-05, 9.309999999991547e-07, 3.059700000000026e-05, 9.169999999995848e-07, 3.0263999999998598e-05, 9.299999999996811e-07, 2.715300000000198e-05, 9.299999999996811e-07, 1.969500000000013e-05, 9.299999999996811e-07, 1.969500000000013e-05, 9.169999999995848e-07, 2.7776999999999663e-05, 9.450000000021941e-07, 2.6249999999998497e-05, 8.750000000008751e-07, 2.4679999999999147e-05, 9.169999999995848e-07, 2.7791999999998707e-05, 9.160000000001112e-07, 2.1236000000000865e-05, 9.59000000001764e-07, 1.781899999999878e-05, 9.169999999995848e-07, 1.686099999999996e-05, 9.309999999991547e-07, 2.434700000000095e-05, 9.299999999996811e-07, 2.061100000000024e-05, 9.59000000001764e-07, 2.1207999999998256e-05, 9.449999999987246e-07, 1.0888000000000564e-05, 9.450000000021941e-07, 1.1514000000000663e-05, 9.43999999999251e-07, 1.2194999999999567e-05, 9.299999999996811e-07, 1.4389000000000068e-05, 9.309999999991547e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 1.7806000000002153e-05, 9.299999999996811e-07, 1.1291999999999552e-05, 9.160000000001112e-07, 2.7791999999998707e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.450000000021941e-07, 1.1249999999997373e-05, 9.299999999996811e-07, 1.0903000000003077e-05, 9.309999999991547e-07, 2.8666000000000108e-05, 9.309999999991547e-07, 2.7458000000001037e-05, 9.449999999987246e-07, 2.061100000000024e-05, 9.160000000001112e-07, 1.843099999999931e-05, 9.43999999999251e-07], 'eventdiff': [0, 1.1669999999998348e-06, 3.0139000000001942e-05, 9.859999999979607e-07, 2.462500000000034e-05, 9.160000000001112e-07, 3.0597999999999737e-05, 9.299999999996811e-07, 2.1527999999999825e-05, 9.309999999991547e-07, 2.031900000000128e-05, 9.309999999991547e-07, 3.0263000000002593e-05, 9.309999999991547e-07, 2.186099999999802e-05, 9.450000000021941e-07, 1.562499999999828e-05, 9.299999999996811e-07, 1.1570000000002412e-05, 9.43999999999251e-07, 2.0291999999998145e-05, 9.580000000022904e-07, 2.09029999999992e-05, 9.57999999998821e-07, 1.4375000000000498e-05, 9.169999999995848e-07, 2.3749999999999466e-05, 9.160000000001112e-07, 2.715300000000198e-05, 9.309999999991547e-07, 1.2833000000000289e-05, 1.000000000001e-06, 2.365299999999848e-05, 9.43999999999251e-07, 1.8736000000001835e-05, 1.000000000001e-06, 2.8333999999997916e-05, 9.299999999996811e-07, 3.0264000000002067e-05, 9.309999999991547e-07, 3.059700000000026e-05, 9.169999999995848e-07, 3.0263999999998598e-05, 9.299999999996811e-07, 2.715300000000198e-05, 9.299999999996811e-07, 1.969500000000013e-05, 9.299999999996811e-07, 1.969500000000013e-05, 9.169999999995848e-07, 2.7776999999999663e-05, 9.450000000021941e-07, 2.6249999999998497e-05, 8.750000000008751e-07, 2.4679999999999147e-05, 9.169999999995848e-07, 2.7791999999998707e-05, 9.160000000001112e-07, 2.1236000000000865e-05, 9.59000000001764e-07, 1.781899999999878e-05, 9.169999999995848e-07, 1.686099999999996e-05, 9.309999999991547e-07, 2.434700000000095e-05, 9.299999999996811e-07, 2.061100000000024e-05, 9.59000000001764e-07, 2.1207999999998256e-05, 9.449999999987246e-07, 1.0888000000000564e-05, 9.450000000021941e-07, 1.1514000000000663e-05, 9.43999999999251e-07, 1.2194999999999567e-05, 9.299999999996811e-07, 1.4389000000000068e-05, 9.309999999991547e-07, 2.9014000000000817e-05, 9.43999999999251e-07, 1.7806000000002153e-05, 9.299999999996811e-07, 1.1291999999999552e-05, 9.160000000001112e-07, 2.7791999999998707e-05, 9.309999999991547e-07, 2.2166000000000546e-05, 9.450000000021941e-07, 1.1249999999997373e-05, 9.299999999996811e-07, 1.0903000000003077e-05, 9.309999999991547e-07, 2.8666000000000108e-05, 9.309999999991547e-07, 2.7458000000001037e-05, 9.449999999987246e-07, 2.061100000000024e-05, 9.160000000001112e-07, 1.843099999999931e-05, 9.43999999999251e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:57.206" endtime="20201110 08:32:57.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.202" endtime="20201110 08:32:57.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.215" level="INFO">${RESULT} = [{'time': 0.018380153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1669999999998348e-06, 'source_diff': 1.1669999999998348e-06}, {'time': 0.018411278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:57.212" endtime="20201110 08:32:57.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.228" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.216" endtime="20201110 08:32:57.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.232" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:57.231" endtime="20201110 08:32:57.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.235" level="INFO">VALUE: [1.1669999999998348e-06, 9.859999999979607e-07, 9.160000000001112e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.57999999998821e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.309999999991547e-07, 1.000000000001e-06, 9.43999999999251e-07, 1.000000000001e-06, 9.299999999996811e-07, 9.309999999991547e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.450000000021941e-07, 8.750000000008751e-07, 9.169999999995848e-07, 9.160000000001112e-07, 9.59000000001764e-07, 9.169999999995848e-07, 9.309999999991547e-07, 9.299999999996811e-07, 9.59000000001764e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.299999999996811e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.450000000021941e-07, 9.299999999996811e-07, 9.309999999991547e-07, 9.309999999991547e-07, 9.449999999987246e-07, 9.160000000001112e-07, 9.43999999999251e-07]</msg>
<status status="PASS" starttime="20201110 08:32:57.233" endtime="20201110 08:32:57.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.229" endtime="20201110 08:32:57.236"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.238" endtime="20201110 08:32:57.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.241" endtime="20201110 08:32:57.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.240" endtime="20201110 08:32:57.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.236" endtime="20201110 08:32:57.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.837" endtime="20201110 08:32:57.262"></status>
</kw>
<msg timestamp="20201110 08:32:57.262" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.270" endtime="20201110 08:32:57.279"></status>
</kw>
<msg timestamp="20201110 08:32:57.279" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.268" endtime="20201110 08:32:57.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.282" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.280" endtime="20201110 08:32:57.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.283" endtime="20201110 08:32:57.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.266" endtime="20201110 08:32:57.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.264" endtime="20201110 08:32:57.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.293" endtime="20201110 08:32:57.577"></status>
</kw>
<msg timestamp="20201110 08:32:57.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018496139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.291" endtime="20201110 08:32:57.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018494944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018496139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.582" endtime="20201110 08:32:57.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.590" endtime="20201110 08:32:57.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.289" endtime="20201110 08:32:57.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.287" endtime="20201110 08:32:57.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.597" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:57.596" endtime="20201110 08:32:57.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.602" level="INFO">VALUE: [{'time': 0.018494944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018496139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018519764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.362499999999934e-05, 'source_diff': 2.362499999999934e-05}, {'time': 0.018520667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.018549056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8389000000000192e-05, 'source_diff': 2.8389000000000192e-05}, {'time': 0.018549986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018574639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.465299999999948e-05, 'source_diff': 2.465299999999948e-05}, {'time': 0.018575597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018596222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.062499999999981e-05, 'source_diff': 2.062499999999981e-05}, {'time': 0.018597111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89000000000445e-07, 'source_diff': 8.89000000000445e-07}, {'time': 0.018613056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944999999999848e-05, 'source_diff': 1.5944999999999848e-05}, {'time': 0.018614, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018643, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9000000000001247e-05, 'source_diff': 2.9000000000001247e-05}, {'time': 0.018643972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.720000000018603e-07, 'source_diff': 9.720000000018603e-07}, {'time': 0.018673875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9902999999997792e-05, 'source_diff': 2.9902999999997792e-05}, {'time': 0.018674889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018689819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4929999999999805e-05, 'source_diff': 1.4929999999999805e-05}, {'time': 0.018690764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018702333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1569000000002938e-05, 'source_diff': 1.1569000000002938e-05}, {'time': 0.018703264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018717667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402999999999638e-05, 'source_diff': 1.4402999999999638e-05}, {'time': 0.018718583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.160000000001112e-07, 'source_diff': 9.160000000001112e-07}, {'time': 0.018747597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.018748528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018765083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.655499999999796e-05, 'source_diff': 1.655499999999796e-05}, {'time': 0.018766014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.018792847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6833000000000412e-05, 'source_diff': 2.6833000000000412e-05}, {'time': 0.018793792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018813139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.934699999999942e-05, 'source_diff': 1.934699999999942e-05}, {'time': 0.018814069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.01882975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.018830667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.018845028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018845958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.018857222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.018858167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.018876903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8736000000001835e-05, 'source_diff': 1.8736000000001835e-05}, {'time': 0.018877847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018898125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0278000000002044e-05, 'source_diff': 2.0278000000002044e-05}, {'time': 0.018899069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.01891625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.718099999999806e-05, 'source_diff': 1.718099999999806e-05}, {'time': 0.018917194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018947444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0250000000002497e-05, 'source_diff': 3.0250000000002497e-05}, {'time': 0.018948375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.309999999991547e-07, 'source_diff': 9.309999999991547e-07}, {'time': 0.018959264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.018960208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.018983569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.336099999999952e-05, 'source_diff': 2.336099999999952e-05}, {'time': 0.018984486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.169999999995848e-07, 'source_diff': 9.169999999995848e-07}, {'time': 0.01899575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.018996681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019025069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.838799999999725e-05, 'source_diff': 2.838799999999725e-05}, {'time': 0.019026, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019038514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019039458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.01906475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5291999999999676e-05, 'source_diff': 2.5291999999999676e-05}, {'time': 0.019065681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019080972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.529100000000061e-05, 'source_diff': 1.529100000000061e-05}, {'time': 0.019081917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019093806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.019094736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019123736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8999999999997778e-05, 'source_diff': 2.8999999999997778e-05}, {'time': 0.019124681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.01913725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019138125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.749999999974056e-07, 'source_diff': 8.749999999974056e-07}, {'time': 0.019158417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0292000000001614e-05, 'source_diff': 2.0292000000001614e-05}, {'time': 0.019159361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019183069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3708000000000756e-05, 'source_diff': 2.3708000000000756e-05}, {'time': 0.019184042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.729999999978645e-07, 'source_diff': 9.729999999978645e-07}, {'time': 0.019196569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2527000000001759e-05, 'source_diff': 1.2527000000001759e-05}, {'time': 0.019197472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019209986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019210903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.170000000030543e-07, 'source_diff': 9.170000000030543e-07}, {'time': 0.019238056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.715299999999851e-05, 'source_diff': 2.715299999999851e-05}, {'time': 0.019238986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019251222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2235999999998803e-05, 'source_diff': 1.2235999999998803e-05}, {'time': 0.019252125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.030000000000149e-07, 'source_diff': 9.030000000000149e-07}, {'time': 0.019274917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2792000000000645e-05, 'source_diff': 2.2792000000000645e-05}, {'time': 0.019275847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.299999999996811e-07, 'source_diff': 9.299999999996811e-07}, {'time': 0.019304542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.869500000000219e-05, 'source_diff': 2.869500000000219e-05}, {'time': 0.019305486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019321736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.019322667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019344208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.154099999999992e-05, 'source_diff': 2.154099999999992e-05}, {'time': 0.019345153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019365111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.019366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019383542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7486000000000584e-05, 'source_diff': 1.7486000000000584e-05}, {'time': 0.019384486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}, {'time': 0.019402278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7791999999999114e-05, 'source_diff': 1.7791999999999114e-05}, {'time': 0.019403236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.580000000022904e-07, 'source_diff': 9.580000000022904e-07}, {'time': 0.019423194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9958000000000475e-05, 'source_diff': 1.9958000000000475e-05}, {'time': 0.019424139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.449999999987246e-07, 'source_diff': 9.449999999987246e-07}, {'time': 0.019442583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8443999999999405e-05, 'source_diff': 1.8443999999999405e-05}, {'time': 0.019443528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.450000000021941e-07, 'source_diff': 9.450000000021941e-07}, {'time': 0.019469722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6193999999996748e-05, 'source_diff': 2.6193999999996748e-05}, {'time': 0.019470653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.310000000026242e-07, 'source_diff': 9.310000000026242e-07}, {'time': 0.019489139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8485999999998115e-05, 'source_diff': 1.8485999999998115e-05}, {'time': 0.01949, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610000000013052e-07, 'source_diff': 8.610000000013052e-07}, {'time': 0.01950625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.019507194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43999999999251e-07, 'source_diff': 9.43999999999251e-07}]</msg>
<status status="PASS" starttime="20201110 08:32:57.598" endtime="20201110 08:32:57.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.593" endtime="20201110 08:32:57.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:57.627" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.604" endtime="20201110 08:32:57.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.633" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:57.631" endtime="20201110 08:32:57.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.638" level="INFO">VALUE: {'sourcetime': [0.018494944, 0.018496139, 0.018519764, 0.018520667, 0.018549056, 0.018549986, 0.018574639, 0.018575597, 0.018596222, 0.018597111, 0.018613056, 0.018614, 0.018643, 0.018643972, 0.018673875, 0.018674889, 0.018689819, 0.018690764, 0.018702333, 0.018703264, 0.018717667, 0.018718583, 0.018747597, 0.018748528, 0.018765083, 0.018766014, 0.018792847, 0.018793792, 0.018813139, 0.018814069, 0.01882975, 0.018830667, 0.018845028, 0.018845958, 0.018857222, 0.018858167, 0.018876903, 0.018877847, 0.018898125, 0.018899069, 0.01891625, 0.018917194, 0.018947444, 0.018948375, 0.018959264, 0.018960208, 0.018983569, 0.018984486, 0.01899575, 0.018996681, 0.019025069, 0.019026, 0.019038514, 0.019039458, 0.01906475, 0.019065681, 0.019080972, 0.019081917, 0.019093806, 0.019094736, 0.019123736, 0.019124681, 0.01913725, 0.019138125, 0.019158417, 0.019159361, 0.019183069, 0.019184042, 0.019196569, 0.019197472, 0.019209986, 0.019210903, 0.019238056, 0.019238986, 0.019251222, 0.019252125, 0.019274917, 0.019275847, 0.019304542, 0.019305486, 0.019321736, 0.019322667, 0.019344208, 0.019345153, 0.019365111, 0.019366056, 0.019383542, 0.019384486, 0.019402278, 0.019403236, 0.019423194, 0.019424139, 0.019442583, 0.019443528, 0.019469722, 0.019470653, 0.019489139, 0.01949, 0.01950625, 0.019507194], 'source_diff': [0, 1.1950000000024441e-06, 2.362499999999934e-05, 9.030000000000149e-07, 2.8389000000000192e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.57999999998821e-07, 2.062499999999981e-05, 8.89000000000445e-07, 1.5944999999999848e-05, 9.43999999999251e-07, 2.9000000000001247e-05, 9.720000000018603e-07, 2.9902999999997792e-05, 1.01400000000057e-06, 1.4929999999999805e-05, 9.449999999987246e-07, 1.1569000000002938e-05, 9.309999999991547e-07, 1.4402999999999638e-05, 9.160000000001112e-07, 2.9014000000000817e-05, 9.309999999991547e-07, 1.655499999999796e-05, 9.310000000026242e-07, 2.6833000000000412e-05, 9.449999999987246e-07, 1.934699999999942e-05, 9.299999999996811e-07, 1.5681000000000028e-05, 9.169999999995848e-07, 1.4361000000000929e-05, 9.299999999996811e-07, 1.1264000000000413e-05, 9.449999999987246e-07, 1.8736000000001835e-05, 9.43999999999251e-07, 2.0278000000002044e-05, 9.43999999999251e-07, 1.718099999999806e-05, 9.43999999999251e-07, 3.0250000000002497e-05, 9.309999999991547e-07, 1.0889000000000038e-05, 9.43999999999251e-07, 2.336099999999952e-05, 9.169999999995848e-07, 1.1264000000000413e-05, 9.310000000026242e-07, 2.838799999999725e-05, 9.310000000026242e-07, 1.2513999999998193e-05, 9.43999999999251e-07, 2.5291999999999676e-05, 9.310000000026242e-07, 1.529100000000061e-05, 9.449999999987246e-07, 1.1889000000001038e-05, 9.299999999996811e-07, 2.8999999999997778e-05, 9.450000000021941e-07, 1.2569000000000469e-05, 8.749999999974056e-07, 2.0292000000001614e-05, 9.43999999999251e-07, 2.3708000000000756e-05, 9.729999999978645e-07, 1.2527000000001759e-05, 9.030000000000149e-07, 1.2513999999998193e-05, 9.170000000030543e-07, 2.715299999999851e-05, 9.299999999996811e-07, 1.2235999999998803e-05, 9.030000000000149e-07, 2.2792000000000645e-05, 9.299999999996811e-07, 2.869500000000219e-05, 9.43999999999251e-07, 1.6249999999998904e-05, 9.310000000026242e-07, 2.154099999999992e-05, 9.449999999987246e-07, 1.9958000000000475e-05, 9.449999999987246e-07, 1.7486000000000584e-05, 9.43999999999251e-07, 1.7791999999999114e-05, 9.580000000022904e-07, 1.9958000000000475e-05, 9.449999999987246e-07, 1.8443999999999405e-05, 9.450000000021941e-07, 2.6193999999996748e-05, 9.310000000026242e-07, 1.8485999999998115e-05, 8.610000000013052e-07, 1.6249999999998904e-05, 9.43999999999251e-07], 'eventdiff': [0, 1.1950000000024441e-06, 2.362499999999934e-05, 9.030000000000149e-07, 2.8389000000000192e-05, 9.299999999996811e-07, 2.465299999999948e-05, 9.57999999998821e-07, 2.062499999999981e-05, 8.89000000000445e-07, 1.5944999999999848e-05, 9.43999999999251e-07, 2.9000000000001247e-05, 9.720000000018603e-07, 2.9902999999997792e-05, 1.01400000000057e-06, 1.4929999999999805e-05, 9.449999999987246e-07, 1.1569000000002938e-05, 9.309999999991547e-07, 1.4402999999999638e-05, 9.160000000001112e-07, 2.9014000000000817e-05, 9.309999999991547e-07, 1.655499999999796e-05, 9.310000000026242e-07, 2.6833000000000412e-05, 9.449999999987246e-07, 1.934699999999942e-05, 9.299999999996811e-07, 1.5681000000000028e-05, 9.169999999995848e-07, 1.4361000000000929e-05, 9.299999999996811e-07, 1.1264000000000413e-05, 9.449999999987246e-07, 1.8736000000001835e-05, 9.43999999999251e-07, 2.0278000000002044e-05, 9.43999999999251e-07, 1.718099999999806e-05, 9.43999999999251e-07, 3.0250000000002497e-05, 9.309999999991547e-07, 1.0889000000000038e-05, 9.43999999999251e-07, 2.336099999999952e-05, 9.169999999995848e-07, 1.1264000000000413e-05, 9.310000000026242e-07, 2.838799999999725e-05, 9.310000000026242e-07, 1.2513999999998193e-05, 9.43999999999251e-07, 2.5291999999999676e-05, 9.310000000026242e-07, 1.529100000000061e-05, 9.449999999987246e-07, 1.1889000000001038e-05, 9.299999999996811e-07, 2.8999999999997778e-05, 9.450000000021941e-07, 1.2569000000000469e-05, 8.749999999974056e-07, 2.0292000000001614e-05, 9.43999999999251e-07, 2.3708000000000756e-05, 9.729999999978645e-07, 1.2527000000001759e-05, 9.030000000000149e-07, 1.2513999999998193e-05, 9.170000000030543e-07, 2.715299999999851e-05, 9.299999999996811e-07, 1.2235999999998803e-05, 9.030000000000149e-07, 2.2792000000000645e-05, 9.299999999996811e-07, 2.869500000000219e-05, 9.43999999999251e-07, 1.6249999999998904e-05, 9.310000000026242e-07, 2.154099999999992e-05, 9.449999999987246e-07, 1.9958000000000475e-05, 9.449999999987246e-07, 1.7486000000000584e-05, 9.43999999999251e-07, 1.7791999999999114e-05, 9.580000000022904e-07, 1.9958000000000475e-05, 9.449999999987246e-07, 1.8443999999999405e-05, 9.450000000021941e-07, 2.6193999999996748e-05, 9.310000000026242e-07, 1.8485999999998115e-05, 8.610000000013052e-07, 1.6249999999998904e-05, 9.43999999999251e-07]}</msg>
<status status="PASS" starttime="20201110 08:32:57.634" endtime="20201110 08:32:57.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.628" endtime="20201110 08:32:57.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.649" level="INFO">${RESULT} = [{'time': 0.018496139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018520667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:57.644" endtime="20201110 08:32:57.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:57.669" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:57.652" endtime="20201110 08:32:57.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.675" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:57.673" endtime="20201110 08:32:57.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.678" level="INFO">VALUE: [1.1950000000024441e-06, 9.030000000000149e-07, 9.299999999996811e-07, 9.57999999998821e-07, 8.89000000000445e-07, 9.43999999999251e-07, 9.720000000018603e-07, 1.01400000000057e-06, 9.449999999987246e-07, 9.309999999991547e-07, 9.160000000001112e-07, 9.309999999991547e-07, 9.310000000026242e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.169999999995848e-07, 9.299999999996811e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.43999999999251e-07, 9.309999999991547e-07, 9.43999999999251e-07, 9.169999999995848e-07, 9.310000000026242e-07, 9.310000000026242e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.449999999987246e-07, 9.299999999996811e-07, 9.450000000021941e-07, 8.749999999974056e-07, 9.43999999999251e-07, 9.729999999978645e-07, 9.030000000000149e-07, 9.170000000030543e-07, 9.299999999996811e-07, 9.030000000000149e-07, 9.299999999996811e-07, 9.43999999999251e-07, 9.310000000026242e-07, 9.449999999987246e-07, 9.449999999987246e-07, 9.43999999999251e-07, 9.580000000022904e-07, 9.449999999987246e-07, 9.450000000021941e-07, 9.310000000026242e-07, 8.610000000013052e-07, 9.43999999999251e-07]</msg>
<status status="PASS" starttime="20201110 08:32:57.676" endtime="20201110 08:32:57.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.670" endtime="20201110 08:32:57.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.681" endtime="20201110 08:32:57.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.684" endtime="20201110 08:32:57.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.683" endtime="20201110 08:32:57.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.680" endtime="20201110 08:32:57.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.263" endtime="20201110 08:32:57.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:49.030" endtime="20201110 08:32:57.706"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.709" endtime="20201110 08:32:57.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.708" endtime="20201110 08:32:57.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.707" endtime="20201110 08:32:57.731"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:48.962" endtime="20201110 08:32:57.732" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.743" endtime="20201110 08:32:57.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.740" endtime="20201110 08:32:57.765"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.792" endtime="20201110 08:32:57.807"></status>
</kw>
<msg timestamp="20201110 08:32:57.808" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.789" endtime="20201110 08:32:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.811" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.809" endtime="20201110 08:32:57.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.815" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:57.812" endtime="20201110 08:32:57.815"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:57.784" endtime="20201110 08:32:57.816"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:57.779" endtime="20201110 08:32:57.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.775" endtime="20201110 08:32:57.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:57.824" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:57.823" endtime="20201110 08:32:57.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.819" endtime="20201110 08:32:57.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.774" endtime="20201110 08:32:57.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.773" endtime="20201110 08:32:57.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.826" endtime="20201110 08:32:57.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.770" endtime="20201110 08:32:57.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.767" endtime="20201110 08:32:57.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.738" endtime="20201110 08:32:57.829"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:57.831" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.838" endtime="20201110 08:32:57.849"></status>
</kw>
<msg timestamp="20201110 08:32:57.850" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.837" endtime="20201110 08:32:57.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.851" endtime="20201110 08:32:57.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.853" endtime="20201110 08:32:57.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.834" endtime="20201110 08:32:57.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.832" endtime="20201110 08:32:57.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.862" endtime="20201110 08:32:58.147"></status>
</kw>
<msg timestamp="20201110 08:32:58.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084846, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084858597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:57.860" endtime="20201110 08:32:58.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084846, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084858597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:58.152" endtime="20201110 08:32:58.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.160" endtime="20201110 08:32:58.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.858" endtime="20201110 08:32:58.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.856" endtime="20201110 08:32:58.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.167" level="INFO">${RESULT} = [{'time': 0.084858597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.25969999999892e-05, 'source_diff': 1.25969999999892e-05}, {'time': 0.084883806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:58.164" endtime="20201110 08:32:58.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.182" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.168" endtime="20201110 08:32:58.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.186" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:58.185" endtime="20201110 08:32:58.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.189" level="INFO">VALUE: [1.25969999999892e-05, 1.1889000000001038e-05, 1.183299999998888e-05, 1.1834000000002232e-05, 1.1834000000002232e-05, 1.1833999999988354e-05, 1.183299999998888e-05, 1.181899999999625e-05, 1.1833000000002758e-05, 1.1847000000009267e-05, 1.183299999998888e-05, 1.1874999999994529e-05, 1.1861000000001898e-05, 1.1847000000009267e-05, 1.1846999999995389e-05, 1.1806000000003092e-05, 1.1846999999995389e-05, 1.1861000000001898e-05, 1.1833000000002758e-05, 1.1819999999995723e-05, 1.1847000000009267e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.183299999998888e-05, 1.1806000000003092e-05, 1.184800000000874e-05, 1.1846999999995389e-05, 1.1834000000002232e-05, 1.18200000000096e-05, 1.181899999999625e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.18200000000096e-05, 1.1819999999995723e-05, 1.1903000000007546e-05, 1.1819000000010127e-05, 1.1833000000002758e-05, 1.1846999999995389e-05, 1.1846999999995389e-05, 1.1847999999994863e-05, 1.1833000000002758e-05, 1.181899999999625e-05, 1.184800000000874e-05, 1.1819999999995723e-05, 1.1861000000001898e-05, 1.179099999999711e-05, 1.18200000000096e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1833000000002758e-05]</msg>
<status status="PASS" starttime="20201110 08:32:58.187" endtime="20201110 08:32:58.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.183" endtime="20201110 08:32:58.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.192" endtime="20201110 08:32:58.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.196" endtime="20201110 08:32:58.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.194" endtime="20201110 08:32:58.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.190" endtime="20201110 08:32:58.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.831" endtime="20201110 08:32:58.217"></status>
</kw>
<msg timestamp="20201110 08:32:58.217" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.225" endtime="20201110 08:32:58.236"></status>
</kw>
<msg timestamp="20201110 08:32:58.236" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.223" endtime="20201110 08:32:58.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.237" endtime="20201110 08:32:58.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.240" endtime="20201110 08:32:58.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.221" endtime="20201110 08:32:58.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.219" endtime="20201110 08:32:58.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.249" endtime="20201110 08:32:58.535"></status>
</kw>
<msg timestamp="20201110 08:32:58.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019446069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.247" endtime="20201110 08:32:58.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019446069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019458694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.539" endtime="20201110 08:32:58.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.548" endtime="20201110 08:32:58.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.244" endtime="20201110 08:32:58.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.243" endtime="20201110 08:32:58.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.555" level="INFO">${RESULT} = [{'time': 0.019458694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2624999999998748e-05, 'source_diff': 1.2624999999998748e-05}, {'time': 0.019497514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:58.552" endtime="20201110 08:32:58.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.570" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.557" endtime="20201110 08:32:58.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.574" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:58.573" endtime="20201110 08:32:58.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.577" level="INFO">VALUE: [1.2624999999998748e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1848000000001802e-05, 1.1777000000001009e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1777000000001009e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1833000000002758e-05, 1.1889000000001038e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1916000000000704e-05, 1.1819999999999192e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1860999999998428e-05, 1.1833999999998762e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1847999999998332e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1888999999997568e-05, 1.1846999999998858e-05, 1.1875000000001468e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1846999999998858e-05]</msg>
<status status="PASS" starttime="20201110 08:32:58.575" endtime="20201110 08:32:58.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.571" endtime="20201110 08:32:58.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.580" endtime="20201110 08:32:58.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.584" endtime="20201110 08:32:58.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.582" endtime="20201110 08:32:58.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.578" endtime="20201110 08:32:58.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.218" endtime="20201110 08:32:58.605"></status>
</kw>
<msg timestamp="20201110 08:32:58.605" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.613" endtime="20201110 08:32:58.624"></status>
</kw>
<msg timestamp="20201110 08:32:58.624" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.611" endtime="20201110 08:32:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.625" endtime="20201110 08:32:58.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.628" endtime="20201110 08:32:58.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.609" endtime="20201110 08:32:58.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.607" endtime="20201110 08:32:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.637" endtime="20201110 08:32:58.941"></status>
</kw>
<msg timestamp="20201110 08:32:58.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.635" endtime="20201110 08:32:58.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019271681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.945" endtime="20201110 08:32:58.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.954" endtime="20201110 08:32:58.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.632" endtime="20201110 08:32:58.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.631" endtime="20201110 08:32:58.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.961" level="INFO">${RESULT} = [{'time': 0.019271681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.019314556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:58.958" endtime="20201110 08:32:58.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:58.974" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:58.962" endtime="20201110 08:32:58.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.979" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:58.978" endtime="20201110 08:32:58.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.981" level="INFO">VALUE: [1.2638999999998318e-05, 1.1862000000001371e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1819999999999192e-05, 1.1888999999997568e-05, 1.1805000000000149e-05, 1.1805999999999622e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1818999999999719e-05, 1.1777000000001009e-05, 1.1834000000002232e-05, 1.1847000000002328e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1805999999999622e-05, 1.1848000000001802e-05, 1.1820000000002662e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1792000000000052e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1833000000002758e-05, 1.1819999999999192e-05, 1.1848000000001802e-05, 1.1832999999999289e-05, 1.180499999999668e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1777999999997013e-05, 1.1832999999999289e-05]</msg>
<status status="PASS" starttime="20201110 08:32:58.980" endtime="20201110 08:32:58.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.975" endtime="20201110 08:32:58.982"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.984" endtime="20201110 08:32:58.985"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.988" endtime="20201110 08:32:59.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.986" endtime="20201110 08:32:59.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.983" endtime="20201110 08:32:59.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.606" endtime="20201110 08:32:59.009"></status>
</kw>
<msg timestamp="20201110 08:32:59.009" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.017" endtime="20201110 08:32:59.028"></status>
</kw>
<msg timestamp="20201110 08:32:59.029" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.015" endtime="20201110 08:32:59.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.030" endtime="20201110 08:32:59.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.032" endtime="20201110 08:32:59.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.013" endtime="20201110 08:32:59.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.011" endtime="20201110 08:32:59.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.042" endtime="20201110 08:32:59.328"></status>
</kw>
<msg timestamp="20201110 08:32:59.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:59.041" endtime="20201110 08:32:59.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019416611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:59.333" endtime="20201110 08:32:59.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.341" endtime="20201110 08:32:59.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.038" endtime="20201110 08:32:59.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.036" endtime="20201110 08:32:59.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.348" level="INFO">${RESULT} = [{'time': 0.019416611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2610999999999178e-05, 'source_diff': 1.2610999999999178e-05}, {'time': 0.019440833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:59.345" endtime="20201110 08:32:59.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:59.362" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.349" endtime="20201110 08:32:59.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.366" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:59.365" endtime="20201110 08:32:59.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.368" level="INFO">VALUE: [1.2610999999999178e-05, 1.1861000000001898e-05, 1.1847999999998332e-05, 1.1818999999999719e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1847000000002328e-05, 1.1805999999999622e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1889000000001038e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1777000000001009e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1847000000002328e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1848000000001802e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1764000000000913e-05, 1.1832999999999289e-05, 1.1875000000001468e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1805000000000149e-05, 1.1847000000002328e-05, 1.1834000000002232e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1832999999999289e-05]</msg>
<status status="PASS" starttime="20201110 08:32:59.367" endtime="20201110 08:32:59.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.363" endtime="20201110 08:32:59.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.371" endtime="20201110 08:32:59.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.376" endtime="20201110 08:32:59.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.373" endtime="20201110 08:32:59.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.370" endtime="20201110 08:32:59.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.010" endtime="20201110 08:32:59.396"></status>
</kw>
<msg timestamp="20201110 08:32:59.397" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.405" endtime="20201110 08:32:59.416"></status>
</kw>
<msg timestamp="20201110 08:32:59.417" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.404" endtime="20201110 08:32:59.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.419" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.418" endtime="20201110 08:32:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.420" endtime="20201110 08:32:59.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.400" endtime="20201110 08:32:59.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.398" endtime="20201110 08:32:59.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.429" endtime="20201110 08:32:59.717"></status>
</kw>
<msg timestamp="20201110 08:32:59.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.428" endtime="20201110 08:32:59.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020452361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.721" endtime="20201110 08:32:59.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.729" endtime="20201110 08:32:59.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.425" endtime="20201110 08:32:59.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.423" endtime="20201110 08:32:59.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.736" level="INFO">${RESULT} = [{'time': 0.020452361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.020483125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:59.733" endtime="20201110 08:32:59.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:59.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:32:59.737" endtime="20201110 08:32:59.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.754" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:59.753" endtime="20201110 08:32:59.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.757" level="INFO">VALUE: [1.2569000000000469e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1889000000001038e-05, 1.1805999999999622e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1763999999997443e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1834000000002232e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1847999999998332e-05, 1.1847000000002328e-05, 1.1777999999997013e-05, 1.1860999999998428e-05, 1.1847000000002328e-05, 1.1792000000000052e-05, 1.1847999999998332e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.179099999999711e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1861000000001898e-05, 1.1875000000001468e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1819000000003188e-05, 1.1805999999999622e-05, 1.1889000000001038e-05, 1.1805999999999622e-05, 1.1832999999999289e-05, 1.1805999999999622e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05]</msg>
<status status="PASS" starttime="20201110 08:32:59.756" endtime="20201110 08:32:59.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.751" endtime="20201110 08:32:59.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.760" endtime="20201110 08:32:59.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.764" endtime="20201110 08:32:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.762" endtime="20201110 08:32:59.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.758" endtime="20201110 08:32:59.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.397" endtime="20201110 08:32:59.785"></status>
</kw>
<msg timestamp="20201110 08:32:59.785" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.793" endtime="20201110 08:32:59.804"></status>
</kw>
<msg timestamp="20201110 08:32:59.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.791" endtime="20201110 08:32:59.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.805" endtime="20201110 08:32:59.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.808" endtime="20201110 08:32:59.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.789" endtime="20201110 08:32:59.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.787" endtime="20201110 08:32:59.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.820" endtime="20201110 08:33:00.107"></status>
</kw>
<msg timestamp="20201110 08:33:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.818" endtime="20201110 08:33:00.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019248556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019261125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.112" endtime="20201110 08:33:00.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.120" endtime="20201110 08:33:00.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.814" endtime="20201110 08:33:00.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.811" endtime="20201110 08:33:00.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.127" level="INFO">${RESULT} = [{'time': 0.019261125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019301, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:00.123" endtime="20201110 08:33:00.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.140" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.128" endtime="20201110 08:33:00.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.144" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:00.143" endtime="20201110 08:33:00.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.147" level="INFO">VALUE: [1.2569000000000469e-05, 1.1917000000000177e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1833999999998762e-05, 1.1792000000000052e-05, 1.1833999999998762e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1819000000003188e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1805999999999622e-05, 1.1792000000000052e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1820000000002662e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1875000000001468e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1847999999998332e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1903000000000608e-05, 1.1792000000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.146" endtime="20201110 08:33:00.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.141" endtime="20201110 08:33:00.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.150" endtime="20201110 08:33:00.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.154" endtime="20201110 08:33:00.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.152" endtime="20201110 08:33:00.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.148" endtime="20201110 08:33:00.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.786" endtime="20201110 08:33:00.176"></status>
</kw>
<msg timestamp="20201110 08:33:00.176" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.187" endtime="20201110 08:33:00.198"></status>
</kw>
<msg timestamp="20201110 08:33:00.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.185" endtime="20201110 08:33:00.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.200" endtime="20201110 08:33:00.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.203" endtime="20201110 08:33:00.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.181" endtime="20201110 08:33:00.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.179" endtime="20201110 08:33:00.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.213" endtime="20201110 08:33:00.497"></status>
</kw>
<msg timestamp="20201110 08:33:00.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023244222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.211" endtime="20201110 08:33:00.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023244222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.502" endtime="20201110 08:33:00.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.510" endtime="20201110 08:33:00.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.208" endtime="20201110 08:33:00.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.207" endtime="20201110 08:33:00.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.517" level="INFO">${RESULT} = [{'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.023281264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.513" endtime="20201110 08:33:00.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.530" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.518" endtime="20201110 08:33:00.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.534" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:00.533" endtime="20201110 08:33:00.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.537" level="INFO">VALUE: [1.2486000000002523e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1820000000002662e-05, 1.1847000000002328e-05, 1.1875000000001468e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1818999999999719e-05, 1.1889000000001038e-05, 1.1819999999999192e-05, 1.1874999999997998e-05, 1.1819000000003188e-05, 1.1750000000001343e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1805999999999622e-05, 1.1861000000001898e-05, 1.1833000000002758e-05, 1.1847999999998332e-05, 1.1847000000002328e-05, 1.1833999999998762e-05, 1.1792000000000052e-05, 1.1818999999999719e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1903000000000608e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.535" endtime="20201110 08:33:00.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.531" endtime="20201110 08:33:00.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.540" endtime="20201110 08:33:00.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.544" endtime="20201110 08:33:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.542" endtime="20201110 08:33:00.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.538" endtime="20201110 08:33:00.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.177" endtime="20201110 08:33:00.566"></status>
</kw>
<msg timestamp="20201110 08:33:00.566" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.577" endtime="20201110 08:33:00.589"></status>
</kw>
<msg timestamp="20201110 08:33:00.590" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.575" endtime="20201110 08:33:00.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.593" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.591" endtime="20201110 08:33:00.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.594" endtime="20201110 08:33:00.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.571" endtime="20201110 08:33:00.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.568" endtime="20201110 08:33:00.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.604" endtime="20201110 08:33:00.890"></status>
</kw>
<msg timestamp="20201110 08:33:00.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.602" endtime="20201110 08:33:00.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024788667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.894" endtime="20201110 08:33:00.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.903" endtime="20201110 08:33:00.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.599" endtime="20201110 08:33:00.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.597" endtime="20201110 08:33:00.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.909" level="INFO">${RESULT} = [{'time': 0.024788667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.024814125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.906" endtime="20201110 08:33:00.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:00.923" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:00.910" endtime="20201110 08:33:00.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.927" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:00.926" endtime="20201110 08:33:00.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.930" level="INFO">VALUE: [1.2528000000001233e-05, 1.1832999999999289e-05, 1.1805000000000149e-05, 1.1805999999999622e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1862000000001371e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1777999999997013e-05, 1.1819999999999192e-05, 1.1848000000001802e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1875000000001468e-05, 1.1819999999999192e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1778000000000483e-05, 1.1805999999999622e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1763999999997443e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1847000000002328e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1888999999997568e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1888999999997568e-05, 1.1846999999998858e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.928" endtime="20201110 08:33:00.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.924" endtime="20201110 08:33:00.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.933" endtime="20201110 08:33:00.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.937" endtime="20201110 08:33:00.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.934" endtime="20201110 08:33:00.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.931" endtime="20201110 08:33:00.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.566" endtime="20201110 08:33:00.958"></status>
</kw>
<msg timestamp="20201110 08:33:00.958" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.978" endtime="20201110 08:33:00.989"></status>
</kw>
<msg timestamp="20201110 08:33:00.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.976" endtime="20201110 08:33:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.991" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.990" endtime="20201110 08:33:00.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.992" endtime="20201110 08:33:00.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.973" endtime="20201110 08:33:00.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.960" endtime="20201110 08:33:00.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.003" endtime="20201110 08:33:01.289"></status>
</kw>
<msg timestamp="20201110 08:33:01.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031607111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.000" endtime="20201110 08:33:01.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031607111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.293" endtime="20201110 08:33:01.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.301" endtime="20201110 08:33:01.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.997" endtime="20201110 08:33:01.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.996" endtime="20201110 08:33:01.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.308" level="INFO">${RESULT} = [{'time': 0.031619708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2597000000003078e-05, 'source_diff': 1.2597000000003078e-05}, {'time': 0.031649208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:01.304" endtime="20201110 08:33:01.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:01.322" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.309" endtime="20201110 08:33:01.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.327" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:01.326" endtime="20201110 08:33:01.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.329" level="INFO">VALUE: [1.2597000000003078e-05, 1.1832999999995819e-05, 1.1832999999995819e-05, 1.1832999999995819e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1806000000003092e-05, 1.1832999999995819e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.1833999999995293e-05, 1.1833000000002758e-05, 1.1846999999995389e-05, 1.1847000000002328e-05, 1.1820000000002662e-05, 1.1888999999994099e-05, 1.1833000000002758e-05, 1.1862000000001371e-05, 1.1846999999995389e-05, 1.1846999999995389e-05, 1.1874999999994529e-05, 1.1833000000002758e-05, 1.181899999999625e-05, 1.179099999999711e-05, 1.1819000000003188e-05, 1.1917000000000177e-05, 1.1834000000002232e-05, 1.1832999999995819e-05, 1.1861000000001898e-05, 1.1848000000001802e-05, 1.1861000000001898e-05, 1.181899999999625e-05, 1.181899999999625e-05, 1.1819000000003188e-05, 1.1832999999995819e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1833000000002758e-05, 1.1833000000002758e-05, 1.1875000000001468e-05, 1.181899999999625e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1834000000002232e-05, 1.1846999999995389e-05, 1.1847000000002328e-05, 1.180499999999668e-05, 1.1834000000002232e-05, 1.1834000000002232e-05]</msg>
<status status="PASS" starttime="20201110 08:33:01.328" endtime="20201110 08:33:01.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.323" endtime="20201110 08:33:01.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.332" endtime="20201110 08:33:01.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.336" endtime="20201110 08:33:01.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.334" endtime="20201110 08:33:01.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.330" endtime="20201110 08:33:01.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.958" endtime="20201110 08:33:01.357"></status>
</kw>
<msg timestamp="20201110 08:33:01.358" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.365" endtime="20201110 08:33:01.376"></status>
</kw>
<msg timestamp="20201110 08:33:01.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.364" endtime="20201110 08:33:01.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.378" endtime="20201110 08:33:01.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.380" endtime="20201110 08:33:01.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.361" endtime="20201110 08:33:01.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.359" endtime="20201110 08:33:01.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.389" endtime="20201110 08:33:01.679"></status>
</kw>
<msg timestamp="20201110 08:33:01.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.388" endtime="20201110 08:33:01.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.683" endtime="20201110 08:33:01.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.692" endtime="20201110 08:33:01.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.385" endtime="20201110 08:33:01.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.383" endtime="20201110 08:33:01.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.699" level="INFO">${RESULT} = [{'time': 0.019415958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.019442361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:01.695" endtime="20201110 08:33:01.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:01.712" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:01.700" endtime="20201110 08:33:01.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.717" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:01.716" endtime="20201110 08:33:01.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.719" level="INFO">VALUE: [1.2596999999999609e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1805999999999622e-05, 1.1833999999998762e-05, 1.1847999999998332e-05, 1.1818999999999719e-05, 1.179099999999711e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1861000000001898e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1819999999999192e-05, 1.1833999999998762e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1791000000000579e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1791000000000579e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1874999999997998e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1833000000002758e-05, 1.1819999999999192e-05, 1.1847999999998332e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1764000000000913e-05, 1.1833999999998762e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1889000000001038e-05, 1.1791000000000579e-05, 1.1833999999998762e-05, 1.1791000000000579e-05, 1.1832999999999289e-05, 1.1834000000002232e-05]</msg>
<status status="PASS" starttime="20201110 08:33:01.718" endtime="20201110 08:33:01.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.713" endtime="20201110 08:33:01.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.723" endtime="20201110 08:33:01.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.729" endtime="20201110 08:33:01.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.725" endtime="20201110 08:33:01.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.721" endtime="20201110 08:33:01.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.358" endtime="20201110 08:33:01.754"></status>
</kw>
<msg timestamp="20201110 08:33:01.754" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.770" endtime="20201110 08:33:01.787"></status>
</kw>
<msg timestamp="20201110 08:33:01.788" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.767" endtime="20201110 08:33:01.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.790" endtime="20201110 08:33:01.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.795" endtime="20201110 08:33:01.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.761" endtime="20201110 08:33:01.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.758" endtime="20201110 08:33:01.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.814" endtime="20201110 08:33:02.101"></status>
</kw>
<msg timestamp="20201110 08:33:02.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033125639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.811" endtime="20201110 08:33:02.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033113069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033125639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.105" endtime="20201110 08:33:02.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.113" endtime="20201110 08:33:02.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.806" endtime="20201110 08:33:02.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.802" endtime="20201110 08:33:02.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.120" level="INFO">${RESULT} = [{'time': 0.033125639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569999999996473e-05, 'source_diff': 1.2569999999996473e-05}, {'time': 0.033156389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:02.117" endtime="20201110 08:33:02.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.134" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.121" endtime="20201110 08:33:02.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.138" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:02.137" endtime="20201110 08:33:02.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.140" level="INFO">VALUE: [1.2569999999996473e-05, 1.1820000000002662e-05, 1.1833999999995293e-05, 1.1833999999995293e-05, 1.1832999999995819e-05, 1.1764000000004382e-05, 1.1819999999995723e-05, 1.1847000000002328e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1874999999994529e-05, 1.1847000000002328e-05, 1.177699999999754e-05, 1.1833999999995293e-05, 1.1819000000003188e-05, 1.1806000000003092e-05, 1.181899999999625e-05, 1.1819999999995723e-05, 1.1832999999995819e-05, 1.1847000000002328e-05, 1.1860999999994959e-05, 1.1834000000002232e-05, 1.1833999999995293e-05, 1.1833000000002758e-05, 1.1806000000003092e-05, 1.1847000000002328e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1848000000001802e-05, 1.1847999999994863e-05, 1.1778000000003952e-05, 1.1833999999995293e-05, 1.1792000000003522e-05, 1.1847999999994863e-05, 1.1820000000002662e-05, 1.1832999999995819e-05, 1.1848000000001802e-05, 1.1874999999994529e-05, 1.1847000000002328e-05, 1.1861000000001898e-05, 1.180499999999668e-05, 1.1847000000002328e-05, 1.1820000000002662e-05, 1.181899999999625e-05, 1.1832999999995819e-05, 1.1847000000002328e-05, 1.1889000000001038e-05, 1.1792000000003522e-05, 1.1833000000002758e-05, 1.1833000000002758e-05]</msg>
<status status="PASS" starttime="20201110 08:33:02.139" endtime="20201110 08:33:02.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.134" endtime="20201110 08:33:02.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.144" endtime="20201110 08:33:02.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.148" endtime="20201110 08:33:02.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.146" endtime="20201110 08:33:02.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.142" endtime="20201110 08:33:02.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.755" endtime="20201110 08:33:02.169"></status>
</kw>
<msg timestamp="20201110 08:33:02.169" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.177" endtime="20201110 08:33:02.188"></status>
</kw>
<msg timestamp="20201110 08:33:02.188" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.175" endtime="20201110 08:33:02.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.191" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.189" endtime="20201110 08:33:02.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.192" endtime="20201110 08:33:02.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.172" endtime="20201110 08:33:02.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.171" endtime="20201110 08:33:02.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.200" endtime="20201110 08:33:02.488"></status>
</kw>
<msg timestamp="20201110 08:33:02.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.199" endtime="20201110 08:33:02.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019349889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.493" endtime="20201110 08:33:02.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.501" endtime="20201110 08:33:02.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.196" endtime="20201110 08:33:02.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.195" endtime="20201110 08:33:02.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.508" level="INFO">${RESULT} = [{'time': 0.019362486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2597000000003078e-05, 'source_diff': 1.2597000000003078e-05}, {'time': 0.019400736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:02.504" endtime="20201110 08:33:02.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.521" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.509" endtime="20201110 08:33:02.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.525" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:02.524" endtime="20201110 08:33:02.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.528" level="INFO">VALUE: [1.2597000000003078e-05, 1.1846999999998858e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1820000000002662e-05, 1.1764000000000913e-05, 1.1889000000001038e-05, 1.1862000000001371e-05, 1.1847999999998332e-05, 1.1833999999998762e-05, 1.1833999999998762e-05, 1.1833999999998762e-05, 1.1847000000002328e-05, 1.1750000000001343e-05, 1.1818999999999719e-05, 1.1860999999998428e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1834000000002232e-05, 1.1847000000002328e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1875000000001468e-05, 1.1832999999999289e-05, 1.1861999999997902e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1833000000002758e-05, 1.1792000000000052e-05, 1.1820000000002662e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1917000000000177e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1820000000002662e-05]</msg>
<status status="PASS" starttime="20201110 08:33:02.526" endtime="20201110 08:33:02.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.522" endtime="20201110 08:33:02.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.531" endtime="20201110 08:33:02.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.536" endtime="20201110 08:33:02.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.533" endtime="20201110 08:33:02.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.530" endtime="20201110 08:33:02.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.170" endtime="20201110 08:33:02.560"></status>
</kw>
<msg timestamp="20201110 08:33:02.560" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.576" endtime="20201110 08:33:02.591"></status>
</kw>
<msg timestamp="20201110 08:33:02.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.573" endtime="20201110 08:33:02.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.597" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.595" endtime="20201110 08:33:02.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.600" endtime="20201110 08:33:02.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.567" endtime="20201110 08:33:02.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.564" endtime="20201110 08:33:02.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.620" endtime="20201110 08:33:02.910"></status>
</kw>
<msg timestamp="20201110 08:33:02.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032660653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032673236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.616" endtime="20201110 08:33:02.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032660653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032673236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.914" endtime="20201110 08:33:02.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.923" endtime="20201110 08:33:02.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.611" endtime="20201110 08:33:02.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.607" endtime="20201110 08:33:02.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.929" level="INFO">${RESULT} = [{'time': 0.032673236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000003508e-05, 'source_diff': 1.2583000000003508e-05}, {'time': 0.032700292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:02.926" endtime="20201110 08:33:02.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:02.944" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:02.930" endtime="20201110 08:33:02.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.948" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:02.947" endtime="20201110 08:33:02.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.950" level="INFO">VALUE: [1.2583000000003508e-05, 1.1861000000001898e-05, 1.1819999999995723e-05, 1.1832999999995819e-05, 1.1833000000002758e-05, 1.1846999999995389e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1834000000002232e-05, 1.1861000000001898e-05, 1.1833000000002758e-05, 1.1819000000003188e-05, 1.1819999999995723e-05, 1.1861000000001898e-05, 1.1860999999994959e-05, 1.1819000000003188e-05, 1.1820000000002662e-05, 1.1848000000001802e-05, 1.1820000000002662e-05, 1.1889000000001038e-05, 1.1805000000003618e-05, 1.1832999999995819e-05, 1.1832999999995819e-05, 1.1833000000002758e-05, 1.1819000000003188e-05, 1.1847000000002328e-05, 1.1833000000002758e-05, 1.1832999999995819e-05, 1.1847000000002328e-05, 1.1791999999996583e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1833000000002758e-05, 1.1875000000001468e-05, 1.1847000000002328e-05, 1.1820000000002662e-05, 1.1833000000002758e-05, 1.1805000000003618e-05, 1.1847000000002328e-05, 1.1833000000002758e-05, 1.1833000000002758e-05, 1.1833000000002758e-05, 1.1860999999994959e-05, 1.1819000000003188e-05, 1.179099999999711e-05, 1.1862000000001371e-05, 1.1819000000003188e-05, 1.1848000000001802e-05, 1.1846999999995389e-05, 1.1847999999994863e-05]</msg>
<status status="PASS" starttime="20201110 08:33:02.949" endtime="20201110 08:33:02.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.945" endtime="20201110 08:33:02.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.954" endtime="20201110 08:33:02.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.958" endtime="20201110 08:33:02.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.956" endtime="20201110 08:33:02.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.952" endtime="20201110 08:33:02.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.561" endtime="20201110 08:33:02.979"></status>
</kw>
<msg timestamp="20201110 08:33:02.979" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.987" endtime="20201110 08:33:02.998"></status>
</kw>
<msg timestamp="20201110 08:33:02.998" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.985" endtime="20201110 08:33:02.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.999" endtime="20201110 08:33:03.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.003" endtime="20201110 08:33:03.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.983" endtime="20201110 08:33:03.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.981" endtime="20201110 08:33:03.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.012" endtime="20201110 08:33:03.298"></status>
</kw>
<msg timestamp="20201110 08:33:03.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.010" endtime="20201110 08:33:03.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019330944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.302" endtime="20201110 08:33:03.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.310" endtime="20201110 08:33:03.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.008" endtime="20201110 08:33:03.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.006" endtime="20201110 08:33:03.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.317" level="INFO">${RESULT} = [{'time': 0.019343528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583999999999512e-05, 'source_diff': 1.2583999999999512e-05}, {'time': 0.01936775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:03.314" endtime="20201110 08:33:03.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:03.331" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.318" endtime="20201110 08:33:03.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.335" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:03.334" endtime="20201110 08:33:03.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.337" level="INFO">VALUE: [1.2583999999999512e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1818999999999719e-05, 1.1834000000002232e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1847000000002328e-05, 1.1860999999998428e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1818999999999719e-05, 1.1847000000002328e-05, 1.1833999999998762e-05, 1.1875000000001468e-05, 1.1889000000001038e-05, 1.1834000000002232e-05, 1.1833999999998762e-05, 1.1847000000002328e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1847999999998332e-05, 1.1888000000001564e-05, 1.1792000000000052e-05, 1.1862000000001371e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1819000000003188e-05, 1.1902000000001134e-05, 1.1819999999999192e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1848000000001802e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1861999999997902e-05, 1.1833999999998762e-05, 1.1834000000002232e-05, 1.1819999999999192e-05]</msg>
<status status="PASS" starttime="20201110 08:33:03.336" endtime="20201110 08:33:03.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.332" endtime="20201110 08:33:03.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.341" endtime="20201110 08:33:03.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.345" endtime="20201110 08:33:03.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.343" endtime="20201110 08:33:03.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.339" endtime="20201110 08:33:03.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.980" endtime="20201110 08:33:03.366"></status>
</kw>
<msg timestamp="20201110 08:33:03.366" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.374" endtime="20201110 08:33:03.385"></status>
</kw>
<msg timestamp="20201110 08:33:03.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.372" endtime="20201110 08:33:03.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.388" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.386" endtime="20201110 08:33:03.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.389" endtime="20201110 08:33:03.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.370" endtime="20201110 08:33:03.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.368" endtime="20201110 08:33:03.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.398" endtime="20201110 08:33:03.683"></status>
</kw>
<msg timestamp="20201110 08:33:03.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.396" endtime="20201110 08:33:03.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019359806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.688" endtime="20201110 08:33:03.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.696" endtime="20201110 08:33:03.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.394" endtime="20201110 08:33:03.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.392" endtime="20201110 08:33:03.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.702" level="INFO">${RESULT} = [{'time': 0.019372375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019410917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:03.699" endtime="20201110 08:33:03.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:03.716" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:03.703" endtime="20201110 08:33:03.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.720" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:03.719" endtime="20201110 08:33:03.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.723" level="INFO">VALUE: [1.2569000000000469e-05, 1.1805999999999622e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1763999999997443e-05, 1.1832999999999289e-05, 1.1903000000000608e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1903000000000608e-05, 1.1847999999998332e-05, 1.1848000000001802e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1819999999999192e-05, 1.1777999999997013e-05, 1.1833999999998762e-05, 1.1847999999998332e-05, 1.1805000000000149e-05, 1.1847999999998332e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1875000000001468e-05, 1.1887999999998095e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1846999999998858e-05, 1.1805000000000149e-05, 1.1834000000002232e-05, 1.1846999999998858e-05, 1.1874999999997998e-05, 1.1834000000002232e-05]</msg>
<status status="PASS" starttime="20201110 08:33:03.721" endtime="20201110 08:33:03.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.717" endtime="20201110 08:33:03.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.726" endtime="20201110 08:33:03.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.730" endtime="20201110 08:33:03.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.728" endtime="20201110 08:33:03.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.725" endtime="20201110 08:33:03.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.367" endtime="20201110 08:33:03.751"></status>
</kw>
<msg timestamp="20201110 08:33:03.751" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.759" endtime="20201110 08:33:03.770"></status>
</kw>
<msg timestamp="20201110 08:33:03.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.757" endtime="20201110 08:33:03.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.771" endtime="20201110 08:33:03.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.774" endtime="20201110 08:33:03.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.755" endtime="20201110 08:33:03.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.753" endtime="20201110 08:33:03.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.783" endtime="20201110 08:33:04.071"></status>
</kw>
<msg timestamp="20201110 08:33:04.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.781" endtime="20201110 08:33:04.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019331278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019343847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.075" endtime="20201110 08:33:04.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.083" endtime="20201110 08:33:04.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.779" endtime="20201110 08:33:04.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.777" endtime="20201110 08:33:04.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.090" level="INFO">${RESULT} = [{'time': 0.019343847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019375861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:04.086" endtime="20201110 08:33:04.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.103" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.091" endtime="20201110 08:33:04.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.108" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:04.107" endtime="20201110 08:33:04.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.111" level="INFO">VALUE: [1.2569000000000469e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1888999999997568e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1834000000002232e-05, 1.1889000000001038e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1805000000000149e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1848000000001802e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1834000000002232e-05, 1.1833999999998762e-05, 1.1834000000002232e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1806000000003092e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1887999999998095e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1819000000003188e-05, 1.1792000000000052e-05, 1.1860999999998428e-05, 1.1805999999999622e-05, 1.1847999999998332e-05, 1.1833999999998762e-05, 1.1820000000002662e-05, 1.1832999999999289e-05, 1.1820000000002662e-05, 1.1818999999999719e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.109" endtime="20201110 08:33:04.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.104" endtime="20201110 08:33:04.112"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.115" endtime="20201110 08:33:04.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.119" endtime="20201110 08:33:04.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.117" endtime="20201110 08:33:04.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.113" endtime="20201110 08:33:04.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.752" endtime="20201110 08:33:04.140"></status>
</kw>
<msg timestamp="20201110 08:33:04.140" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.148" endtime="20201110 08:33:04.159"></status>
</kw>
<msg timestamp="20201110 08:33:04.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.146" endtime="20201110 08:33:04.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.162" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.160" endtime="20201110 08:33:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.163" endtime="20201110 08:33:04.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.144" endtime="20201110 08:33:04.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.142" endtime="20201110 08:33:04.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.172" endtime="20201110 08:33:04.458"></status>
</kw>
<msg timestamp="20201110 08:33:04.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.170" endtime="20201110 08:33:04.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.462" endtime="20201110 08:33:04.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.470" endtime="20201110 08:33:04.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.168" endtime="20201110 08:33:04.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.166" endtime="20201110 08:33:04.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.477" level="INFO">${RESULT} = [{'time': 0.019403472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.019430486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:04.474" endtime="20201110 08:33:04.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.492" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.478" endtime="20201110 08:33:04.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.496" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:04.495" endtime="20201110 08:33:04.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.499" level="INFO">VALUE: [1.2583000000000039e-05, 1.1818999999999719e-05, 1.1819999999999192e-05, 1.1874999999997998e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1833000000002758e-05, 1.1860999999998428e-05, 1.1860999999998428e-05, 1.1833999999998762e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1820000000002662e-05, 1.1832999999999289e-05, 1.1889000000001038e-05, 1.1764000000000913e-05, 1.1818999999999719e-05, 1.1820000000002662e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1834000000002232e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1819999999999192e-05, 1.1818999999999719e-05, 1.1860999999998428e-05, 1.1792000000000052e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1833000000002758e-05, 1.1875000000001468e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.180499999999668e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1749999999997873e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.497" endtime="20201110 08:33:04.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.493" endtime="20201110 08:33:04.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.502" endtime="20201110 08:33:04.503"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.506" endtime="20201110 08:33:04.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.504" endtime="20201110 08:33:04.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.501" endtime="20201110 08:33:04.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.141" endtime="20201110 08:33:04.527"></status>
</kw>
<msg timestamp="20201110 08:33:04.528" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.535" endtime="20201110 08:33:04.546"></status>
</kw>
<msg timestamp="20201110 08:33:04.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.534" endtime="20201110 08:33:04.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.549" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.548" endtime="20201110 08:33:04.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.550" endtime="20201110 08:33:04.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.531" endtime="20201110 08:33:04.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.529" endtime="20201110 08:33:04.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.559" endtime="20201110 08:33:04.845"></status>
</kw>
<msg timestamp="20201110 08:33:04.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.557" endtime="20201110 08:33:04.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019297833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.849" endtime="20201110 08:33:04.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.857" endtime="20201110 08:33:04.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.555" endtime="20201110 08:33:04.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.553" endtime="20201110 08:33:04.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.864" level="INFO">${RESULT} = [{'time': 0.019310403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.019342111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:04.861" endtime="20201110 08:33:04.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:04.878" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:04.865" endtime="20201110 08:33:04.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.882" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:04.881" endtime="20201110 08:33:04.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.884" level="INFO">VALUE: [1.2569999999999942e-05, 1.1818999999999719e-05, 1.1806000000003092e-05, 1.1792000000000052e-05, 1.1847000000002328e-05, 1.1834000000002232e-05, 1.1903000000000608e-05, 1.1833000000002758e-05, 1.1791000000000579e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1819999999999192e-05, 1.1791000000000579e-05, 1.1832999999999289e-05, 1.1792000000000052e-05, 1.1833999999998762e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1833999999998762e-05, 1.1833000000002758e-05, 1.1846999999998858e-05, 1.1861000000001898e-05, 1.1889000000001038e-05, 1.1860999999998428e-05, 1.1763999999997443e-05, 1.1847000000002328e-05, 1.1860999999998428e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1764000000000913e-05, 1.1847000000002328e-05, 1.1833999999998762e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1764000000000913e-05, 1.1832999999999289e-05, 1.1819999999999192e-05, 1.1889000000001038e-05, 1.1860999999998428e-05, 1.1833999999998762e-05, 1.1764000000000913e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1832999999999289e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.883" endtime="20201110 08:33:04.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.879" endtime="20201110 08:33:04.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.888" endtime="20201110 08:33:04.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.892" endtime="20201110 08:33:04.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.890" endtime="20201110 08:33:04.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.886" endtime="20201110 08:33:04.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.528" endtime="20201110 08:33:04.913"></status>
</kw>
<msg timestamp="20201110 08:33:04.913" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.921" endtime="20201110 08:33:04.932"></status>
</kw>
<msg timestamp="20201110 08:33:04.932" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.919" endtime="20201110 08:33:04.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.933" endtime="20201110 08:33:04.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.936" endtime="20201110 08:33:04.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.917" endtime="20201110 08:33:04.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.915" endtime="20201110 08:33:04.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.945" endtime="20201110 08:33:05.231"></status>
</kw>
<msg timestamp="20201110 08:33:05.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.943" endtime="20201110 08:33:05.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019530333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019542903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.235" endtime="20201110 08:33:05.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.244" endtime="20201110 08:33:05.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.941" endtime="20201110 08:33:05.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.939" endtime="20201110 08:33:05.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.250" level="INFO">${RESULT} = [{'time': 0.019542903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.019575861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:05.247" endtime="20201110 08:33:05.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:05.264" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.251" endtime="20201110 08:33:05.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.268" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:05.267" endtime="20201110 08:33:05.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.271" level="INFO">VALUE: [1.2569999999999942e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1874999999997998e-05, 1.1833999999998762e-05, 1.1805000000000149e-05, 1.1847000000002328e-05, 1.1818999999999719e-05, 1.1820000000002662e-05, 1.1861000000001898e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1833000000002758e-05, 1.1805000000000149e-05, 1.1832999999999289e-05, 1.1848000000001802e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1846999999998858e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1792000000000052e-05, 1.1889000000001038e-05, 1.1832999999999289e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1818999999999719e-05, 1.1861000000001898e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1847999999998332e-05, 1.1834000000002232e-05, 1.1832999999999289e-05, 1.1820000000002662e-05, 1.1833999999998762e-05, 1.1792000000000052e-05, 1.1833999999998762e-05, 1.1805000000000149e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1847000000002328e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.1860999999998428e-05]</msg>
<status status="PASS" starttime="20201110 08:33:05.269" endtime="20201110 08:33:05.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.265" endtime="20201110 08:33:05.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.274" endtime="20201110 08:33:05.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.278" endtime="20201110 08:33:05.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.276" endtime="20201110 08:33:05.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.273" endtime="20201110 08:33:05.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.914" endtime="20201110 08:33:05.299"></status>
</kw>
<msg timestamp="20201110 08:33:05.300" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.307" endtime="20201110 08:33:05.318"></status>
</kw>
<msg timestamp="20201110 08:33:05.319" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.306" endtime="20201110 08:33:05.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.321" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.320" endtime="20201110 08:33:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.322" endtime="20201110 08:33:05.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.303" endtime="20201110 08:33:05.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.301" endtime="20201110 08:33:05.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.331" endtime="20201110 08:33:05.617"></status>
</kw>
<msg timestamp="20201110 08:33:05.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.329" endtime="20201110 08:33:05.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019319653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019332236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.621" endtime="20201110 08:33:05.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.629" endtime="20201110 08:33:05.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.327" endtime="20201110 08:33:05.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.325" endtime="20201110 08:33:05.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.636" level="INFO">${RESULT} = [{'time': 0.019332236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.019367694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:05.633" endtime="20201110 08:33:05.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:05.650" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:05.637" endtime="20201110 08:33:05.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.654" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:33:05.653" endtime="20201110 08:33:05.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.656" level="INFO">VALUE: [1.2583000000000039e-05, 1.1861000000001898e-05, 1.1805999999999622e-05, 1.1846999999998858e-05, 1.1846999999998858e-05, 1.1860999999998428e-05, 1.1818999999999719e-05, 1.1819999999999192e-05, 1.1847999999998332e-05, 1.1805999999999622e-05, 1.1860999999998428e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1847999999998332e-05, 1.1861000000001898e-05, 1.1847000000002328e-05, 1.1833999999998762e-05, 1.1820000000002662e-05, 1.1819999999999192e-05, 1.1833000000002758e-05, 1.1847000000002328e-05, 1.1888000000001564e-05, 1.1818999999999719e-05, 1.1834000000002232e-05, 1.1903000000000608e-05, 1.1834000000002232e-05, 1.1847000000002328e-05, 1.1818999999999719e-05, 1.1806000000003092e-05, 1.1889000000001038e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1818999999999719e-05, 1.1833000000002758e-05, 1.1833999999998762e-05, 1.1833999999998762e-05, 1.1846999999998858e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1832999999999289e-05, 1.1846999999998858e-05, 1.1834000000002232e-05, 1.1833999999998762e-05, 1.1861000000001898e-05, 1.1832999999999289e-05]</msg>
<status status="PASS" starttime="20201110 08:33:05.655" endtime="20201110 08:33:05.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.651" endtime="20201110 08:33:05.658"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.660" endtime="20201110 08:33:05.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.664" endtime="20201110 08:33:05.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.662" endtime="20201110 08:33:05.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.658" endtime="20201110 08:33:05.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.300" endtime="20201110 08:33:05.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.830" endtime="20201110 08:33:05.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.689" endtime="20201110 08:33:05.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.687" endtime="20201110 08:33:05.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.686" endtime="20201110 08:33:05.709"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:57.734" endtime="20201110 08:33:05.709" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.716" endtime="20201110 08:33:05.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.715" endtime="20201110 08:33:05.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.749" endtime="20201110 08:33:05.761"></status>
</kw>
<msg timestamp="20201110 08:33:05.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.747" endtime="20201110 08:33:05.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.763" endtime="20201110 08:33:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.767" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:05.765" endtime="20201110 08:33:05.768"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:05.745" endtime="20201110 08:33:05.768"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:05.743" endtime="20201110 08:33:05.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.741" endtime="20201110 08:33:05.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:05.773" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:05.772" endtime="20201110 08:33:05.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.770" endtime="20201110 08:33:05.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.741" endtime="20201110 08:33:05.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.740" endtime="20201110 08:33:05.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.774" endtime="20201110 08:33:05.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.739" endtime="20201110 08:33:05.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.737" endtime="20201110 08:33:05.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.713" endtime="20201110 08:33:05.777"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.787" endtime="20201110 08:33:05.808"></status>
</kw>
<msg timestamp="20201110 08:33:05.808" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.786" endtime="20201110 08:33:05.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.811" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.809" endtime="20201110 08:33:05.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.812" endtime="20201110 08:33:05.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.783" endtime="20201110 08:33:05.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.779" endtime="20201110 08:33:05.814"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.817" endtime="20201110 08:33:05.818"></status>
</kw>
<msg timestamp="20201110 08:33:05.819" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:05.815" endtime="20201110 08:33:05.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.823" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:05.822" endtime="20201110 08:33:05.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.825" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:05.824" endtime="20201110 08:33:05.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.819" endtime="20201110 08:33:05.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.829" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:05.828" endtime="20201110 08:33:05.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.831" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:05.830" endtime="20201110 08:33:05.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.826" endtime="20201110 08:33:05.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.838" endtime="20201110 08:33:06.123"></status>
</kw>
<msg timestamp="20201110 08:33:06.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064204833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064237278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.837" endtime="20201110 08:33:06.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064204833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064237278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.127" endtime="20201110 08:33:06.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.136" endtime="20201110 08:33:06.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.834" endtime="20201110 08:33:06.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.833" endtime="20201110 08:33:06.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:06.143" level="INFO">${RESULT} = [{'time': 0.064237278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2444999999992064e-05, 'source_diff': 3.2444999999992064e-05}, {'time': 0.064299125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:06.139" endtime="20201110 08:33:06.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:06.157" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:06.144" endtime="20201110 08:33:06.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.162" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:06.161" endtime="20201110 08:33:06.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.171" level="INFO">VALUE: [3.2444999999992064e-05, 3.19579999999986e-05, 3.1916999999992424e-05, 3.19579999999986e-05, 3.194400000000597e-05, 3.19579999999986e-05, 3.193099999999893e-05, 3.197300000000458e-05, 3.202799999998951e-05, 3.195899999999807e-05, 3.197200000000511e-05, 3.200000000000425e-05, 3.194500000000544e-05, 3.195899999999807e-05, 3.19729999999907e-05, 3.199999999999037e-05, 3.193099999999893e-05, 3.194400000000597e-05, 3.194400000000597e-05, 3.1944999999991563e-05, 3.195899999999807e-05, 3.194400000000597e-05, 3.198599999999774e-05, 3.194400000000597e-05, 3.197199999999123e-05, 3.197200000000511e-05, 3.19579999999986e-05, 3.195900000001195e-05, 3.192999999999946e-05, 3.19579999999986e-05, 3.1958000000012476e-05, 3.19579999999986e-05, 3.1944999999991563e-05, 3.1958000000012476e-05, 3.197199999999123e-05, 3.19579999999986e-05, 3.1944999999991563e-05, 3.194400000000597e-05, 3.19579999999986e-05, 3.200000000000425e-05, 3.188900000000716e-05, 3.195899999999807e-05, 3.197200000000511e-05, 3.19579999999986e-05, 3.194399999999209e-05, 3.194399999999209e-05, 3.197300000000458e-05, 3.195899999999807e-05, 3.197199999999123e-05, 3.187500000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:33:06.170" endtime="20201110 08:33:06.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.158" endtime="20201110 08:33:06.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.175" endtime="20201110 08:33:06.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.178" endtime="20201110 08:33:06.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.177" endtime="20201110 08:33:06.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.173" endtime="20201110 08:33:06.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.778" endtime="20201110 08:33:06.199"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:05.711" endtime="20201110 08:33:06.199" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.207" endtime="20201110 08:33:06.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.206" endtime="20201110 08:33:06.227"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.240" endtime="20201110 08:33:06.252"></status>
</kw>
<msg timestamp="20201110 08:33:06.253" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.238" endtime="20201110 08:33:06.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.254" endtime="20201110 08:33:06.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.258" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:06.256" endtime="20201110 08:33:06.258"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:06.236" endtime="20201110 08:33:06.259"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:06.233" endtime="20201110 08:33:06.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.232" endtime="20201110 08:33:06.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:06.263" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:06.263" endtime="20201110 08:33:06.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.261" endtime="20201110 08:33:06.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.231" endtime="20201110 08:33:06.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.231" endtime="20201110 08:33:06.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.266" endtime="20201110 08:33:06.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.230" endtime="20201110 08:33:06.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.228" endtime="20201110 08:33:06.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.204" endtime="20201110 08:33:06.269"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.278" endtime="20201110 08:33:06.520"></status>
</kw>
<msg timestamp="20201110 08:33:06.520" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.276" endtime="20201110 08:33:06.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.523" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.521" endtime="20201110 08:33:06.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.524" endtime="20201110 08:33:06.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.274" endtime="20201110 08:33:06.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.271" endtime="20201110 08:33:06.527"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.529" endtime="20201110 08:33:06.530"></status>
</kw>
<msg timestamp="20201110 08:33:06.531" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:06.527" endtime="20201110 08:33:06.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.535" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:06.534" endtime="20201110 08:33:06.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.537" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:06.536" endtime="20201110 08:33:06.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.531" endtime="20201110 08:33:06.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.541" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:06.540" endtime="20201110 08:33:06.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.543" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:06.542" endtime="20201110 08:33:06.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.538" endtime="20201110 08:33:06.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.551" endtime="20201110 08:33:06.846"></status>
</kw>
<msg timestamp="20201110 08:33:06.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067490111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.549" endtime="20201110 08:33:06.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067490111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.855" endtime="20201110 08:33:06.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.871" endtime="20201110 08:33:06.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.547" endtime="20201110 08:33:06.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.545" endtime="20201110 08:33:06.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:06.881" level="INFO">${RESULT} = [{'time': 0.067490111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014448599999999923, 'source_diff': 0.00014448599999999923}, {'time': 0.071980361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:06.875" endtime="20201110 08:33:06.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:06.913" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:06.883" endtime="20201110 08:33:06.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.923" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:06.921" endtime="20201110 08:33:06.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.929" level="INFO">VALUE: [0.00014448599999999923, 0.00014318000000000664, 0.00014320900000000525, 0.00014317999999999276, 0.00014317999999999276, 0.00014319399999999927, 0.00014320800000000578, 0.0001432219999999984, 0.00014323599999999104, 0.00014320800000000578, 0.00014320899999999137, 0.00014318000000000664, 0.00014319499999999874, 0.00014319400000001314, 0.00014312499999999395, 0.00014320800000000578, 0.00014318099999999223, 0.0001432219999999984, 0.00014317999999999276, 0.00014317999999999276, 0.00014316600000000013, 0.0001431939999999854, 0.00014318099999999223, 0.00014326300000000458, 0.0001432219999999984, 0.00014320799999997802, 0.00014326400000000405, 0.00014323599999999104, 0.0001431939999999854, 0.00014320800000000578, 0.00014318100000002, 0.00014320900000000525, 0.00014318099999999223, 0.0001432219999999984, 0.00014320800000000578, 0.00014318099999999223, 0.00014325000000001142, 0.00014319500000001262, 0.0001431669999999996, 0.00014318099999999223, 0.00014318099999999223, 0.00014323599999999104, 0.00014319499999998486, 0.00014319499999998486, 0.00014319400000001314, 0.00014319499999998486, 0.0001431669999999996, 0.00014315300000000697, 0.00014319400000001314, 0.0001432219999999984]</msg>
<status status="PASS" starttime="20201110 08:33:06.925" endtime="20201110 08:33:06.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.915" endtime="20201110 08:33:06.931"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.936" endtime="20201110 08:33:06.939"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.943" endtime="20201110 08:33:06.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.940" endtime="20201110 08:33:06.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.932" endtime="20201110 08:33:06.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.270" endtime="20201110 08:33:06.968"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:06.201" endtime="20201110 08:33:06.969" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.980" endtime="20201110 08:33:07.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.979" endtime="20201110 08:33:07.000"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.014" endtime="20201110 08:33:07.028"></status>
</kw>
<msg timestamp="20201110 08:33:07.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.012" endtime="20201110 08:33:07.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.033" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.031" endtime="20201110 08:33:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.039" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:07.035" endtime="20201110 08:33:07.040"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.009" endtime="20201110 08:33:07.041"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:07.007" endtime="20201110 08:33:07.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.005" endtime="20201110 08:33:07.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:07.047" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:07.046" endtime="20201110 08:33:07.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.044" endtime="20201110 08:33:07.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.004" endtime="20201110 08:33:07.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.004" endtime="20201110 08:33:07.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.049" endtime="20201110 08:33:07.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.003" endtime="20201110 08:33:07.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.001" endtime="20201110 08:33:07.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.977" endtime="20201110 08:33:07.052"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.060" endtime="20201110 08:33:07.899"></status>
</kw>
<msg timestamp="20201110 08:33:07.900" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.059" endtime="20201110 08:33:07.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.905" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.902" endtime="20201110 08:33:07.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.907" endtime="20201110 08:33:07.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.056" endtime="20201110 08:33:07.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.054" endtime="20201110 08:33:07.912"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.917" endtime="20201110 08:33:07.920"></status>
</kw>
<msg timestamp="20201110 08:33:07.921" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:07.914" endtime="20201110 08:33:07.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.929" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:07.927" endtime="20201110 08:33:07.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.933" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:07.931" endtime="20201110 08:33:07.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.922" endtime="20201110 08:33:07.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.943" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:07.941" endtime="20201110 08:33:07.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.947" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:07.945" endtime="20201110 08:33:07.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.936" endtime="20201110 08:33:07.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.962" endtime="20201110 08:33:08.259"></status>
</kw>
<msg timestamp="20201110 08:33:08.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086623944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086892944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.959" endtime="20201110 08:33:08.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.086623944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.086892944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.263" endtime="20201110 08:33:08.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.271" endtime="20201110 08:33:08.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.953" endtime="20201110 08:33:08.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.950" endtime="20201110 08:33:08.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.277" level="INFO">${RESULT} = [{'time': 0.086892944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00026900000000000535, 'source_diff': 0.00026900000000000535}, {'time': 0.103232597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:08.274" endtime="20201110 08:33:08.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:08.291" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:08.279" endtime="20201110 08:33:08.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.295" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:08.294" endtime="20201110 08:33:08.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.298" level="INFO">VALUE: [0.00026900000000000535, 0.00026211099999999543, 0.00026212500000000194, 0.0002620970000000167, 0.00026211099999998155, 0.0002620970000000167, 0.0002620979999999884, 0.0002620829999999963, 0.00026212500000000194, 0.0002621110000000093, 0.0002621529999999872, 0.00026213899999999457, 0.00026213899999999457, 0.0002620689999999759, 0.00026208399999999576, 0.0002621110000000093, 0.00026213899999999457, 0.0002621109999999538, 0.0002620970000000167, 0.0002621529999999872, 0.0002620840000000513, 0.00026208299999996854, 0.0002620140000000326, 0.00026208399999999576, 0.00026209699999996117, 0.0002620970000000167, 0.0002621110000000648, 0.0002620970000000167, 0.00026212500000000194, 0.0002621110000000648, 0.0002621109999999538, 0.0002621109999999538, 0.0002621109999999538, 0.0002620979999999884, 0.00026208299999996854, 0.000262056000000066, 0.00026204200000001787, 0.0002621110000000648, 0.00026207000000000313, 0.0002620970000000167, 0.00026208300000007956, 0.00026208299999996854, 0.00026208399999994025, 0.00026208299999996854, 0.0002621109999999538, 0.00026208399999994025, 0.00026208399999994025, 0.0002620979999999884, 0.00026213899999993906, 0.00026208300000007956]</msg>
<status status="PASS" starttime="20201110 08:33:08.296" endtime="20201110 08:33:08.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.292" endtime="20201110 08:33:08.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.301" endtime="20201110 08:33:08.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.304" endtime="20201110 08:33:08.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.303" endtime="20201110 08:33:08.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.299" endtime="20201110 08:33:08.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.052" endtime="20201110 08:33:08.325"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:06.972" endtime="20201110 08:33:08.325" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.332" endtime="20201110 08:33:08.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.331" endtime="20201110 08:33:08.352"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.367" endtime="20201110 08:33:08.380"></status>
</kw>
<msg timestamp="20201110 08:33:08.380" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.364" endtime="20201110 08:33:08.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.383" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.381" endtime="20201110 08:33:08.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.386" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:08.384" endtime="20201110 08:33:08.386"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:08.361" endtime="20201110 08:33:08.387"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:08.359" endtime="20201110 08:33:08.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.358" endtime="20201110 08:33:08.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:08.391" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:08.390" endtime="20201110 08:33:08.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.388" endtime="20201110 08:33:08.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.357" endtime="20201110 08:33:08.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.356" endtime="20201110 08:33:08.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.393" endtime="20201110 08:33:08.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.355" endtime="20201110 08:33:08.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.353" endtime="20201110 08:33:08.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.329" endtime="20201110 08:33:08.396"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.404" endtime="20201110 08:33:08.425"></status>
</kw>
<msg timestamp="20201110 08:33:08.425" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.402" endtime="20201110 08:33:08.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.428" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.426" endtime="20201110 08:33:08.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.429" endtime="20201110 08:33:08.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.400" endtime="20201110 08:33:08.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.398" endtime="20201110 08:33:08.431"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.433" endtime="20201110 08:33:08.435"></status>
</kw>
<msg timestamp="20201110 08:33:08.435" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:08.432" endtime="20201110 08:33:08.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.439" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:08.438" endtime="20201110 08:33:08.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.441" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:08.440" endtime="20201110 08:33:08.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.436" endtime="20201110 08:33:08.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.446" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:08.445" endtime="20201110 08:33:08.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.448" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:08.447" endtime="20201110 08:33:08.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.443" endtime="20201110 08:33:08.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.455" endtime="20201110 08:33:08.742"></status>
</kw>
<msg timestamp="20201110 08:33:08.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064461361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0644675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:08.453" endtime="20201110 08:33:08.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064461361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0644675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:08.747" endtime="20201110 08:33:08.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.755" endtime="20201110 08:33:08.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.451" endtime="20201110 08:33:08.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.449" endtime="20201110 08:33:08.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.762" level="INFO">${RESULT} = [{'time': 0.0644675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.064522306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:08.758" endtime="20201110 08:33:08.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:08.775" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:08.763" endtime="20201110 08:33:08.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.780" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:33:08.779" endtime="20201110 08:33:08.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.782" level="INFO">VALUE: [6.139000000002226e-06, 5.973000000006334e-06, 5.973000000006334e-06, 6.014000000012509e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.916999999994177e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.973000000006334e-06, 5.972000000006861e-06, 5.985999999999492e-06, 5.972000000006861e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.972000000006861e-06, 5.985999999999492e-06, 5.973000000006334e-06, 5.985999999999492e-06, 5.972000000006861e-06, 5.972000000006861e-06, 5.9589999999998255e-06, 5.987000000012843e-06, 6.0000000000060005e-06, 5.999999999992123e-06, 6.040999999998298e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.973000000006334e-06, 5.985999999999492e-06, 5.985999999999492e-06, 5.986999999998965e-06, 5.985999999999492e-06, 5.9729999999924566e-06, 5.971999999992983e-06, 6.02800000000514e-06, 5.9729999999924566e-06, 6.0000000000060005e-06, 5.944999999993317e-06, 5.9589999999998255e-06, 5.972000000006861e-06, 5.985999999999492e-06, 5.930000000001212e-06, 5.972000000006861e-06, 5.999999999992123e-06, 5.971999999992983e-06]</msg>
<status status="PASS" starttime="20201110 08:33:08.781" endtime="20201110 08:33:08.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.776" endtime="20201110 08:33:08.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.785" endtime="20201110 08:33:08.787"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.789" endtime="20201110 08:33:08.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.787" endtime="20201110 08:33:08.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.784" endtime="20201110 08:33:08.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.396" endtime="20201110 08:33:08.811"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:08.327" endtime="20201110 08:33:08.811" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.819" endtime="20201110 08:33:08.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.818" endtime="20201110 08:33:08.841"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.855" endtime="20201110 08:33:08.868"></status>
</kw>
<msg timestamp="20201110 08:33:08.869" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.854" endtime="20201110 08:33:08.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.870" endtime="20201110 08:33:08.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.874" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:08.872" endtime="20201110 08:33:08.875"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:08.851" endtime="20201110 08:33:08.875"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:08.849" endtime="20201110 08:33:08.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.848" endtime="20201110 08:33:08.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:08.880" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:08.880" endtime="20201110 08:33:08.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.878" endtime="20201110 08:33:08.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.847" endtime="20201110 08:33:08.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.846" endtime="20201110 08:33:08.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.882" endtime="20201110 08:33:08.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.845" endtime="20201110 08:33:08.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.842" endtime="20201110 08:33:08.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.816" endtime="20201110 08:33:08.885"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.893" endtime="20201110 08:33:09.138"></status>
</kw>
<msg timestamp="20201110 08:33:09.138" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.891" endtime="20201110 08:33:09.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.141" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.139" endtime="20201110 08:33:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.142" endtime="20201110 08:33:09.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.889" endtime="20201110 08:33:09.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.887" endtime="20201110 08:33:09.144"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.146" endtime="20201110 08:33:09.148"></status>
</kw>
<msg timestamp="20201110 08:33:09.148" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:09.145" endtime="20201110 08:33:09.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.152" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:09.151" endtime="20201110 08:33:09.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.154" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:09.153" endtime="20201110 08:33:09.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.149" endtime="20201110 08:33:09.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.159" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:09.158" endtime="20201110 08:33:09.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.161" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:09.160" endtime="20201110 08:33:09.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.156" endtime="20201110 08:33:09.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.168" endtime="20201110 08:33:09.479"></status>
</kw>
<msg timestamp="20201110 08:33:09.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070194542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070228125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.166" endtime="20201110 08:33:09.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070194542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070228125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.488" endtime="20201110 08:33:09.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.506" endtime="20201110 08:33:09.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.164" endtime="20201110 08:33:09.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.162" endtime="20201110 08:33:09.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.514" level="INFO">${RESULT} = [{'time': 0.070228125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.358300000000369e-05, 'source_diff': 3.358300000000369e-05}, {'time': 0.074753056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:09.510" endtime="20201110 08:33:09.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:09.527" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:09.515" endtime="20201110 08:33:09.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.532" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:33:09.531" endtime="20201110 08:33:09.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.534" level="INFO">VALUE: [3.358300000000369e-05, 3.351399999999838e-05, 3.3555000000004553e-05, 3.350000000000575e-05, 3.350000000000575e-05, 3.349999999999187e-05, 3.347200000000661e-05, 3.349999999999187e-05, 3.347199999999273e-05, 3.348599999999924e-05, 3.349999999999187e-05, 3.351399999999838e-05, 3.350000000000575e-05, 3.349999999999187e-05, 3.352799999997713e-05, 3.349999999999187e-05, 3.349999999999187e-05, 3.347200000000661e-05, 3.3458000000013977e-05, 3.348599999999924e-05, 3.352799999997713e-05, 3.349999999999187e-05, 3.354199999999752e-05, 3.3458000000013977e-05, 3.355500000001843e-05, 3.351300000001278e-05, 3.356999999998278e-05, 3.349999999999187e-05, 3.3458999999985695e-05, 3.354199999999752e-05, 3.3527000000005414e-05, 3.355500000001843e-05, 3.3444999999993064e-05, 3.3486000000026994e-05, 3.349999999999187e-05, 3.35139999999845e-05, 3.3514000000012256e-05, 3.348699999999871e-05, 3.351299999998503e-05, 3.358400000000317e-05, 3.3500000000019625e-05, 3.35410000000258e-05, 3.3499999999964114e-05, 3.345799999998622e-05, 3.3500000000019625e-05, 3.3500000000019625e-05, 3.3499999999964114e-05, 3.3500000000019625e-05, 3.3500000000019625e-05, 3.3499999999964114e-05]</msg>
<status status="PASS" starttime="20201110 08:33:09.533" endtime="20201110 08:33:09.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.528" endtime="20201110 08:33:09.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.537" endtime="20201110 08:33:09.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.541" endtime="20201110 08:33:09.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.539" endtime="20201110 08:33:09.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.536" endtime="20201110 08:33:09.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.885" endtime="20201110 08:33:09.561"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:08.813" endtime="20201110 08:33:09.562" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.568" endtime="20201110 08:33:09.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.567" endtime="20201110 08:33:09.588"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.602" endtime="20201110 08:33:09.614"></status>
</kw>
<msg timestamp="20201110 08:33:09.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.600" endtime="20201110 08:33:09.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.616" endtime="20201110 08:33:09.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.621" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:09.618" endtime="20201110 08:33:09.621"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:09.597" endtime="20201110 08:33:09.621"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:09.595" endtime="20201110 08:33:09.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.593" endtime="20201110 08:33:09.622"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:09.626" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:09.625" endtime="20201110 08:33:09.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.623" endtime="20201110 08:33:09.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.593" endtime="20201110 08:33:09.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.592" endtime="20201110 08:33:09.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.628" endtime="20201110 08:33:09.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.591" endtime="20201110 08:33:09.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.589" endtime="20201110 08:33:09.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.566" endtime="20201110 08:33:09.630"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.639" endtime="20201110 08:33:10.483"></status>
</kw>
<msg timestamp="20201110 08:33:10.484" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.637" endtime="20201110 08:33:10.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.492" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.488" endtime="20201110 08:33:10.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.495" endtime="20201110 08:33:10.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.635" endtime="20201110 08:33:10.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.633" endtime="20201110 08:33:10.503"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.509" endtime="20201110 08:33:10.512"></status>
</kw>
<msg timestamp="20201110 08:33:10.513" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:33:10.505" endtime="20201110 08:33:10.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.521" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:33:10.519" endtime="20201110 08:33:10.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.526" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:33:10.524" endtime="20201110 08:33:10.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.515" endtime="20201110 08:33:10.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.534" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:33:10.533" endtime="20201110 08:33:10.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.536" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:33:10.535" endtime="20201110 08:33:10.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.529" endtime="20201110 08:33:10.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.544" endtime="20201110 08:33:10.836"></status>
</kw>
<msg timestamp="20201110 08:33:10.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077679472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.542" endtime="20201110 08:33:10.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077679472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.840" endtime="20201110 08:33:10.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.848" endtime="20201110 08:33:10.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.539" endtime="20201110 08:33:10.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.537" endtime="20201110 08:33:10.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.854" level="INFO">${RESULT} = [{'time': 0.077679472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.162499999999571e-05, 'source_diff': 6.162499999999571e-05}, {'time': 0.094086861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:10.851" endtime="20201110 08:33:10.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:33:10.868" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:10.855" endtime="20201110 08:33:10.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.873" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:33:10.871" endtime="20201110 08:33:10.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.876" level="INFO">VALUE: [6.162499999999571e-05, 6.149999999999212e-05, 6.159799999999604e-05, 6.150000000001987e-05, 6.151399999998475e-05, 6.148599999999949e-05, 6.149999999999212e-05, 6.152800000000513e-05, 6.148599999999949e-05, 6.15140000000125e-05, 6.154199999999777e-05, 6.154099999999829e-05, 6.151299999995752e-05, 6.152700000000566e-05, 6.152800000003289e-05, 6.152799999997738e-05, 6.149999999999212e-05, 6.154199999997001e-05, 6.151399999998475e-05, 6.151399999998475e-05, 6.152700000000566e-05, 6.152800000003289e-05, 6.152800000003289e-05, 6.154099999999829e-05, 6.158299999997618e-05, 6.154200000002552e-05, 6.150000000004763e-05, 6.14999999999366e-05, 6.145800000001422e-05, 6.152799999992187e-05, 6.147200000006237e-05, 6.152799999992187e-05, 6.158400000000341e-05, 6.151399999998475e-05, 6.152800000003289e-05, 6.151399999998475e-05, 6.152800000003289e-05, 6.151399999998475e-05, 6.14869999999712e-05, 6.154199999997001e-05, 6.151399999998475e-05, 6.143000000002896e-05, 6.152800000003289e-05, 6.151399999998475e-05, 6.152800000003289e-05, 6.151399999998475e-05, 6.156899999998355e-05, 6.151399999998475e-05, 6.152799999992187e-05, 6.147200000006237e-05]</msg>
<status status="PASS" starttime="20201110 08:33:10.874" endtime="20201110 08:33:10.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.869" endtime="20201110 08:33:10.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.881" endtime="20201110 08:33:10.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.885" endtime="20201110 08:33:10.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.883" endtime="20201110 08:33:10.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.879" endtime="20201110 08:33:10.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.631" endtime="20201110 08:33:10.907"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:09.563" endtime="20201110 08:33:10.908" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:47.435" endtime="20201110 08:33:10.922"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.991" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:33:10.999" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:33:12.343" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:33:10.989" endtime="20201110 08:33:12.344"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.346" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:33:12.345" endtime="20201110 08:33:12.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.988" endtime="20201110 08:33:12.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.349" endtime="20201110 08:33:12.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.348" endtime="20201110 08:33:12.538"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.551" endtime="20201110 08:33:12.563"></status>
</kw>
<msg timestamp="20201110 08:33:12.564" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.549" endtime="20201110 08:33:12.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.566" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.565" endtime="20201110 08:33:12.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.570" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:12.567" endtime="20201110 08:33:12.571"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:12.547" endtime="20201110 08:33:12.571"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:12.544" endtime="20201110 08:33:12.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.543" endtime="20201110 08:33:12.572"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:12.576" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:12.575" endtime="20201110 08:33:12.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.573" endtime="20201110 08:33:12.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.542" endtime="20201110 08:33:12.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.541" endtime="20201110 08:33:12.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.578" endtime="20201110 08:33:12.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.540" endtime="20201110 08:33:12.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.580" endtime="20201110 08:33:12.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.539" endtime="20201110 08:33:12.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.987" endtime="20201110 08:33:12.583"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.589" endtime="20201110 08:33:12.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.587" endtime="20201110 08:33:12.609"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.621" endtime="20201110 08:33:12.633"></status>
</kw>
<msg timestamp="20201110 08:33:12.634" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.620" endtime="20201110 08:33:12.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.635" endtime="20201110 08:33:12.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.639" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:12.638" endtime="20201110 08:33:12.640"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:12.617" endtime="20201110 08:33:12.640"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:12.615" endtime="20201110 08:33:12.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.614" endtime="20201110 08:33:12.641"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:12.645" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:12.644" endtime="20201110 08:33:12.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.642" endtime="20201110 08:33:12.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.613" endtime="20201110 08:33:12.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.612" endtime="20201110 08:33:12.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.647" endtime="20201110 08:33:12.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.611" endtime="20201110 08:33:12.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.609" endtime="20201110 08:33:12.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.586" endtime="20201110 08:33:12.650"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.660" endtime="20201110 08:33:12.674"></status>
</kw>
<msg timestamp="20201110 08:33:12.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.659" endtime="20201110 08:33:12.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.676" endtime="20201110 08:33:12.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.678" endtime="20201110 08:33:12.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.656" endtime="20201110 08:33:12.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.654" endtime="20201110 08:33:12.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.687" endtime="20201110 08:33:12.977"></status>
</kw>
<msg timestamp="20201110 08:33:12.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063886375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.685" endtime="20201110 08:33:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063886375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063905375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.981" endtime="20201110 08:33:12.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.989" endtime="20201110 08:33:12.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.683" endtime="20201110 08:33:12.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.681" endtime="20201110 08:33:12.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.996" level="INFO">${RESULT} = [{'time': 0.063905375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9000000000005124e-05, 'source_diff': 1.9000000000005124e-05}, {'time': 0.063953556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:12.993" endtime="20201110 08:33:12.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.010" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:12.997" endtime="20201110 08:33:13.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.014" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.013" endtime="20201110 08:33:13.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.017" level="INFO">VALUE: [1.9000000000005124e-05, 1.8348000000001363e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8402000000000696e-05, 1.837499999998715e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8362000000007872e-05, 1.838899999999366e-05, 1.837500000000103e-05, 1.836099999999452e-05, 1.8443999999992466e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837499999998715e-05, 1.837500000000103e-05, 1.8416000000007204e-05, 1.837500000000103e-05, 1.844499999999194e-05, 1.836099999999452e-05, 1.838899999999366e-05, 1.84169999999928e-05, 1.833300000000926e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.83610000000084e-05, 1.8457999999998975e-05, 1.8361999999993994e-05, 1.83610000000084e-05, 1.83610000000084e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.8402000000000696e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8361999999993994e-05, 1.838899999999366e-05, 1.836099999999452e-05, 1.840300000000017e-05, 1.8320000000002223e-05, 1.8443999999992466e-05, 1.833300000000926e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.015" endtime="20201110 08:33:13.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.011" endtime="20201110 08:33:13.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.020" endtime="20201110 08:33:13.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.024" endtime="20201110 08:33:13.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.022" endtime="20201110 08:33:13.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.019" endtime="20201110 08:33:13.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.651" endtime="20201110 08:33:13.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.651" endtime="20201110 08:33:13.044"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.054" endtime="20201110 08:33:13.068"></status>
</kw>
<msg timestamp="20201110 08:33:13.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.052" endtime="20201110 08:33:13.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.069" endtime="20201110 08:33:13.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.072" endtime="20201110 08:33:13.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.050" endtime="20201110 08:33:13.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.047" endtime="20201110 08:33:13.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.080" endtime="20201110 08:33:13.367"></status>
</kw>
<msg timestamp="20201110 08:33:13.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.079" endtime="20201110 08:33:13.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022396736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.371" endtime="20201110 08:33:13.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.380" endtime="20201110 08:33:13.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.076" endtime="20201110 08:33:13.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.075" endtime="20201110 08:33:13.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.386" level="INFO">${RESULT} = [{'time': 0.022415708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8971999999999045e-05, 'source_diff': 1.8971999999999045e-05}, {'time': 0.022462944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:13.383" endtime="20201110 08:33:13.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.400" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:13.387" endtime="20201110 08:33:13.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.404" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.403" endtime="20201110 08:33:13.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.407" level="INFO">VALUE: [1.8971999999999045e-05, 1.837499999999756e-05, 1.8306000000002653e-05, 1.8347999999997894e-05, 1.841699999999974e-05, 1.836100000000146e-05, 1.836099999999799e-05, 1.8415999999996796e-05, 1.838899999999713e-05, 1.8348000000001363e-05, 1.837499999999756e-05, 1.834700000000189e-05, 1.836099999999799e-05, 1.8361999999997464e-05, 1.8362000000000933e-05, 1.8362000000000933e-05, 1.831899999999928e-05, 1.837499999999756e-05, 1.8416000000000265e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837499999999756e-05, 1.838899999999713e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.836099999999799e-05, 1.834699999999842e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.831899999999928e-05, 1.836100000000146e-05, 1.836099999999799e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.8291999999999614e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.836100000000146e-05, 1.831899999999928e-05, 1.840300000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.406" endtime="20201110 08:33:13.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.401" endtime="20201110 08:33:13.408"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.410" endtime="20201110 08:33:13.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.414" endtime="20201110 08:33:13.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.412" endtime="20201110 08:33:13.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.409" endtime="20201110 08:33:13.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.045" endtime="20201110 08:33:13.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.045" endtime="20201110 08:33:13.435"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.443" endtime="20201110 08:33:13.458"></status>
</kw>
<msg timestamp="20201110 08:33:13.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.442" endtime="20201110 08:33:13.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.459" endtime="20201110 08:33:13.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.462" endtime="20201110 08:33:13.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.439" endtime="20201110 08:33:13.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.437" endtime="20201110 08:33:13.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.471" endtime="20201110 08:33:13.756"></status>
</kw>
<msg timestamp="20201110 08:33:13.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.469" endtime="20201110 08:33:13.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022538222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.761" endtime="20201110 08:33:13.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.769" endtime="20201110 08:33:13.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.467" endtime="20201110 08:33:13.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.465" endtime="20201110 08:33:13.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.776" level="INFO">${RESULT} = [{'time': 0.022557222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8999999999998185e-05, 'source_diff': 1.8999999999998185e-05}, {'time': 0.022603486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:13.772" endtime="20201110 08:33:13.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.789" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:13.776" endtime="20201110 08:33:13.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.793" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.792" endtime="20201110 08:33:13.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.796" level="INFO">VALUE: [1.8999999999998185e-05, 1.834699999999842e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.8402000000000696e-05, 1.83890000000006e-05, 1.838899999999713e-05, 1.837500000000103e-05, 1.8443999999999405e-05, 1.83890000000006e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.841699999999974e-05, 1.836100000000146e-05, 1.8388000000001126e-05, 1.8319999999998754e-05, 1.845900000000192e-05, 1.836099999999799e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837499999999756e-05, 1.834700000000189e-05, 1.840300000000017e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.834700000000189e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.836099999999799e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.83890000000006e-05, 1.831899999999928e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.837499999999756e-05, 1.841699999999974e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.794" endtime="20201110 08:33:13.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.790" endtime="20201110 08:33:13.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.799" endtime="20201110 08:33:13.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.803" endtime="20201110 08:33:13.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.801" endtime="20201110 08:33:13.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.798" endtime="20201110 08:33:13.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.436" endtime="20201110 08:33:13.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.435" endtime="20201110 08:33:13.824"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.832" endtime="20201110 08:33:13.846"></status>
</kw>
<msg timestamp="20201110 08:33:13.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.831" endtime="20201110 08:33:13.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.847" endtime="20201110 08:33:13.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.850" endtime="20201110 08:33:13.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.828" endtime="20201110 08:33:13.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.826" endtime="20201110 08:33:13.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.861" endtime="20201110 08:33:14.147"></status>
</kw>
<msg timestamp="20201110 08:33:14.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.859" endtime="20201110 08:33:14.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021401819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.151" endtime="20201110 08:33:14.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.159" endtime="20201110 08:33:14.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.857" endtime="20201110 08:33:14.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.855" endtime="20201110 08:33:14.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.166" level="INFO">${RESULT} = [{'time': 0.021420819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9000000000001654e-05, 'source_diff': 1.9000000000001654e-05}, {'time': 0.021463694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:14.162" endtime="20201110 08:33:14.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.179" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:14.167" endtime="20201110 08:33:14.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.183" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.182" endtime="20201110 08:33:14.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.186" level="INFO">VALUE: [1.9000000000001654e-05, 1.8387999999997656e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.8292000000003084e-05, 1.841699999999974e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.836099999999799e-05, 1.833299999999885e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.8388000000001126e-05, 1.833299999999885e-05, 1.837500000000103e-05, 1.840300000000017e-05, 1.8291999999999614e-05, 1.8416000000000265e-05, 1.838899999999713e-05, 1.8333999999998324e-05, 1.830500000000318e-05, 1.837500000000103e-05, 1.83890000000006e-05, 1.837500000000103e-05, 1.836099999999799e-05, 1.837499999999756e-05, 1.8361999999997464e-05, 1.8388000000001126e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.840300000000017e-05, 1.837500000000103e-05, 1.8361999999997464e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.83890000000006e-05, 1.836100000000146e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.184" endtime="20201110 08:33:14.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.180" endtime="20201110 08:33:14.187"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.190" endtime="20201110 08:33:14.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.193" endtime="20201110 08:33:14.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.192" endtime="20201110 08:33:14.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.188" endtime="20201110 08:33:14.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.825" endtime="20201110 08:33:14.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.824" endtime="20201110 08:33:14.214"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.222" endtime="20201110 08:33:14.237"></status>
</kw>
<msg timestamp="20201110 08:33:14.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.221" endtime="20201110 08:33:14.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.239" endtime="20201110 08:33:14.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.242" endtime="20201110 08:33:14.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.218" endtime="20201110 08:33:14.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.216" endtime="20201110 08:33:14.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.252" endtime="20201110 08:33:14.540"></status>
</kw>
<msg timestamp="20201110 08:33:14.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021422153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.250" endtime="20201110 08:33:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021422153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021441139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.544" endtime="20201110 08:33:14.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.552" endtime="20201110 08:33:14.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.248" endtime="20201110 08:33:14.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.246" endtime="20201110 08:33:14.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.559" level="INFO">${RESULT} = [{'time': 0.021441139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8986000000002085e-05, 'source_diff': 1.8986000000002085e-05}, {'time': 0.021479083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:14.555" endtime="20201110 08:33:14.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.572" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:14.560" endtime="20201110 08:33:14.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.577" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.576" endtime="20201110 08:33:14.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.579" level="INFO">VALUE: [1.8986000000002085e-05, 1.83890000000006e-05, 1.8319999999998754e-05, 1.8334000000001793e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.840300000000017e-05, 1.83890000000006e-05, 1.833299999999885e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.836099999999799e-05, 1.834699999999842e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.829099999999667e-05, 1.837500000000103e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.830499999999971e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.837500000000103e-05, 1.836100000000146e-05, 1.837500000000103e-05, 1.8348000000001363e-05, 1.834699999999842e-05, 1.834700000000189e-05, 1.837500000000103e-05, 1.834700000000189e-05, 1.837499999999756e-05, 1.837500000000103e-05, 1.831899999999928e-05, 1.83890000000006e-05, 1.8402000000000696e-05, 1.8348000000001363e-05, 1.83890000000006e-05, 1.837499999999756e-05, 1.838899999999713e-05, 1.837500000000103e-05, 1.838899999999713e-05, 1.836100000000146e-05, 1.836100000000146e-05, 1.837499999999756e-05, 1.833300000000232e-05, 1.840300000000017e-05, 1.834699999999842e-05, 1.836100000000146e-05, 1.837500000000103e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.578" endtime="20201110 08:33:14.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.573" endtime="20201110 08:33:14.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.583" endtime="20201110 08:33:14.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.586" endtime="20201110 08:33:14.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.585" endtime="20201110 08:33:14.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.581" endtime="20201110 08:33:14.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.215" endtime="20201110 08:33:14.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.214" endtime="20201110 08:33:14.607"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.616" endtime="20201110 08:33:14.629"></status>
</kw>
<msg timestamp="20201110 08:33:14.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.614" endtime="20201110 08:33:14.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.631" endtime="20201110 08:33:14.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.633" endtime="20201110 08:33:14.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.611" endtime="20201110 08:33:14.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.609" endtime="20201110 08:33:14.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.643" endtime="20201110 08:33:14.929"></status>
</kw>
<msg timestamp="20201110 08:33:14.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.642" endtime="20201110 08:33:14.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021420097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021444014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.933" endtime="20201110 08:33:14.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.943" endtime="20201110 08:33:14.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.639" endtime="20201110 08:33:14.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.638" endtime="20201110 08:33:14.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.953" level="INFO">${RESULT} = [{'time': 0.021444014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.391700000000177e-05, 'source_diff': 2.391700000000177e-05}, {'time': 0.021484361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:14.947" endtime="20201110 08:33:14.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:14.954" endtime="20201110 08:33:14.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.974" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.973" endtime="20201110 08:33:14.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.977" level="INFO">VALUE: [2.391700000000177e-05, 2.3249999999998966e-05, 2.3290999999998202e-05, 2.3304999999997772e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3250000000002435e-05, 2.323699999999887e-05, 2.329100000000167e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.3235999999999396e-05, 2.330500000000124e-05, 2.3304999999997772e-05, 2.3320000000000285e-05, 2.3291999999997676e-05, 2.3291999999997676e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.330500000000124e-05, 2.330500000000124e-05, 2.3249999999998966e-05, 2.3235999999999396e-05, 2.3290999999998202e-05, 2.3263999999998536e-05, 2.329100000000167e-05, 2.3262999999999062e-05, 2.3347999999999425e-05, 2.3263999999998536e-05, 2.331900000000081e-05, 2.329100000000167e-05, 2.336099999999952e-05, 2.3249999999998966e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3263999999998536e-05, 2.3306000000000715e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3290999999998202e-05, 2.3306000000000715e-05, 2.3291999999997676e-05, 2.334699999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.975" endtime="20201110 08:33:14.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.970" endtime="20201110 08:33:14.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.980" endtime="20201110 08:33:14.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.984" endtime="20201110 08:33:15.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.982" endtime="20201110 08:33:15.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.979" endtime="20201110 08:33:15.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.608" endtime="20201110 08:33:15.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.607" endtime="20201110 08:33:15.004"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.013" endtime="20201110 08:33:15.027"></status>
</kw>
<msg timestamp="20201110 08:33:15.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.012" endtime="20201110 08:33:15.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.029" endtime="20201110 08:33:15.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.031" endtime="20201110 08:33:15.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.009" endtime="20201110 08:33:15.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.007" endtime="20201110 08:33:15.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.041" endtime="20201110 08:33:15.327"></status>
</kw>
<msg timestamp="20201110 08:33:15.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.039" endtime="20201110 08:33:15.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021565792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.331" endtime="20201110 08:33:15.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.340" endtime="20201110 08:33:15.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.037" endtime="20201110 08:33:15.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.035" endtime="20201110 08:33:15.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.347" level="INFO">${RESULT} = [{'time': 0.021589722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3929999999998397e-05, 'source_diff': 2.3929999999998397e-05}, {'time': 0.021647194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:15.343" endtime="20201110 08:33:15.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:15.360" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:15.348" endtime="20201110 08:33:15.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.364" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.363" endtime="20201110 08:33:15.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.367" level="INFO">VALUE: [2.3929999999998397e-05, 2.32770000000021e-05, 2.330500000000124e-05, 2.3305999999997246e-05, 2.3263999999998536e-05, 2.3277999999998106e-05, 2.3278000000001575e-05, 2.329100000000167e-05, 2.333300000000038e-05, 2.3278000000001575e-05, 2.3235999999999396e-05, 2.337499999999909e-05, 2.3306000000000715e-05, 2.3290999999998202e-05, 2.331900000000081e-05, 2.3291999999997676e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.329100000000167e-05, 2.3292000000001145e-05, 2.330500000000124e-05, 2.330500000000124e-05, 2.3291999999997676e-05, 2.3306000000000715e-05, 2.3304999999997772e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.3291999999997676e-05, 2.3292000000001145e-05, 2.336100000000299e-05, 2.330500000000124e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3332999999996912e-05, 2.3292000000001145e-05, 2.336099999999952e-05, 2.3305999999997246e-05, 2.334700000000342e-05, 2.3277999999998106e-05, 2.3262999999999062e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.330500000000124e-05, 2.3263999999998536e-05, 2.330500000000124e-05, 2.3290999999998202e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.366" endtime="20201110 08:33:15.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.361" endtime="20201110 08:33:15.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.371" endtime="20201110 08:33:15.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.374" endtime="20201110 08:33:15.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.372" endtime="20201110 08:33:15.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.369" endtime="20201110 08:33:15.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.005" endtime="20201110 08:33:15.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.005" endtime="20201110 08:33:15.395"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.403" endtime="20201110 08:33:15.417"></status>
</kw>
<msg timestamp="20201110 08:33:15.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.402" endtime="20201110 08:33:15.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.419" endtime="20201110 08:33:15.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.421" endtime="20201110 08:33:15.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.399" endtime="20201110 08:33:15.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.397" endtime="20201110 08:33:15.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.432" endtime="20201110 08:33:15.718"></status>
</kw>
<msg timestamp="20201110 08:33:15.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021426319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02145025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:15.430" endtime="20201110 08:33:15.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021426319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02145025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:15.723" endtime="20201110 08:33:15.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.731" endtime="20201110 08:33:15.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.428" endtime="20201110 08:33:15.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.426" endtime="20201110 08:33:15.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.737" level="INFO">${RESULT} = [{'time': 0.02145025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.393100000000134e-05, 'source_diff': 2.393100000000134e-05}, {'time': 0.021495569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:15.734" endtime="20201110 08:33:15.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:15.751" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:15.738" endtime="20201110 08:33:15.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.755" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.754" endtime="20201110 08:33:15.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.758" level="INFO">VALUE: [2.393100000000134e-05, 2.3276999999998632e-05, 2.3291999999997676e-05, 2.3306000000000715e-05, 2.3318999999997342e-05, 2.3333999999999855e-05, 2.330500000000124e-05, 2.336099999999952e-05, 2.3262999999999062e-05, 2.3306000000000715e-05, 2.3304999999997772e-05, 2.3264000000002005e-05, 2.3250000000002435e-05, 2.3278000000001575e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.3304999999997772e-05, 2.334699999999995e-05, 2.3292000000001145e-05, 2.3290999999998202e-05, 2.3304999999997772e-05, 2.3292000000001145e-05, 2.334699999999995e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.3277999999998106e-05, 2.329100000000167e-05, 2.3292000000001145e-05, 2.3264000000002005e-05, 2.3292000000001145e-05, 2.3208000000000256e-05, 2.3304999999997772e-05, 2.3320000000000285e-05, 2.3290999999998202e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3290999999998202e-05, 2.3291999999997676e-05, 2.3263999999998536e-05, 2.330500000000124e-05, 2.3305999999997246e-05, 2.3277999999998106e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.330500000000124e-05, 2.3278000000001575e-05, 2.3332999999996912e-05, 2.330500000000124e-05, 2.3291999999997676e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.757" endtime="20201110 08:33:15.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.752" endtime="20201110 08:33:15.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.761" endtime="20201110 08:33:15.763"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.765" endtime="20201110 08:33:15.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.763" endtime="20201110 08:33:15.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.760" endtime="20201110 08:33:15.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.396" endtime="20201110 08:33:15.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.395" endtime="20201110 08:33:15.786"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.794" endtime="20201110 08:33:15.808"></status>
</kw>
<msg timestamp="20201110 08:33:15.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.793" endtime="20201110 08:33:15.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.810" endtime="20201110 08:33:15.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.812" endtime="20201110 08:33:15.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.790" endtime="20201110 08:33:15.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.788" endtime="20201110 08:33:15.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.822" endtime="20201110 08:33:16.107"></status>
</kw>
<msg timestamp="20201110 08:33:16.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.821" endtime="20201110 08:33:16.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021673889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.112" endtime="20201110 08:33:16.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.120" endtime="20201110 08:33:16.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.818" endtime="20201110 08:33:16.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.816" endtime="20201110 08:33:16.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.127" level="INFO">${RESULT} = [{'time': 0.021697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3944000000001436e-05, 'source_diff': 2.3944000000001436e-05}, {'time': 0.021735611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:16.124" endtime="20201110 08:33:16.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.140" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:16.128" endtime="20201110 08:33:16.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.145" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.144" endtime="20201110 08:33:16.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.147" level="INFO">VALUE: [2.3944000000001436e-05, 2.3277999999998106e-05, 2.3291999999997676e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3208000000000256e-05, 2.3290999999998202e-05, 2.330500000000124e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3320000000000285e-05, 2.3290999999998202e-05, 2.3320000000000285e-05, 2.3290999999998202e-05, 2.3250000000002435e-05, 2.334699999999995e-05, 2.329100000000167e-05, 2.3320000000000285e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.329100000000167e-05, 2.329100000000167e-05, 2.330500000000124e-05, 2.3306000000000715e-05, 2.3249999999998966e-05, 2.3292000000001145e-05, 2.3278000000001575e-05, 2.3292000000001145e-05, 2.3305999999997246e-05, 2.3306000000000715e-05, 2.330500000000124e-05, 2.329100000000167e-05, 2.3292000000001145e-05, 2.330500000000124e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.3263999999998536e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3277999999998106e-05, 2.3292000000001145e-05, 2.337499999999909e-05, 2.333300000000038e-05, 2.331900000000081e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.146" endtime="20201110 08:33:16.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.141" endtime="20201110 08:33:16.149"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.151" endtime="20201110 08:33:16.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.154" endtime="20201110 08:33:16.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.153" endtime="20201110 08:33:16.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.149" endtime="20201110 08:33:16.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.787" endtime="20201110 08:33:16.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.786" endtime="20201110 08:33:16.175"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.184" endtime="20201110 08:33:16.198"></status>
</kw>
<msg timestamp="20201110 08:33:16.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.182" endtime="20201110 08:33:16.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.199" endtime="20201110 08:33:16.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.202" endtime="20201110 08:33:16.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.180" endtime="20201110 08:33:16.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.178" endtime="20201110 08:33:16.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.211" endtime="20201110 08:33:16.498"></status>
</kw>
<msg timestamp="20201110 08:33:16.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.210" endtime="20201110 08:33:16.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021476375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.502" endtime="20201110 08:33:16.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.511" endtime="20201110 08:33:16.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.207" endtime="20201110 08:33:16.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.206" endtime="20201110 08:33:16.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.517" level="INFO">${RESULT} = [{'time': 0.021500292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.391700000000177e-05, 'source_diff': 2.391700000000177e-05}, {'time': 0.021540972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:16.514" endtime="20201110 08:33:16.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.531" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:16.518" endtime="20201110 08:33:16.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.535" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.534" endtime="20201110 08:33:16.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.538" level="INFO">VALUE: [2.391700000000177e-05, 2.3304999999997772e-05, 2.3264000000002005e-05, 2.3292000000001145e-05, 2.329100000000167e-05, 2.3278000000001575e-05, 2.3278000000001575e-05, 2.3320000000000285e-05, 2.3320000000000285e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.3306000000000715e-05, 2.334699999999995e-05, 2.3306000000000715e-05, 2.3306000000000715e-05, 2.330500000000124e-05, 2.3290999999998202e-05, 2.336099999999952e-05, 2.330500000000124e-05, 2.3290999999998202e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3347999999999425e-05, 2.3291999999997676e-05, 2.3292000000001145e-05, 2.3304999999997772e-05, 2.3221999999999826e-05, 2.3306000000000715e-05, 2.331900000000081e-05, 2.3292000000001145e-05, 2.3278000000001575e-05, 2.331900000000081e-05, 2.334699999999995e-05, 2.3292000000001145e-05, 2.3264000000002005e-05, 2.3292000000001145e-05, 2.3292000000001145e-05, 2.3291999999997676e-05, 2.3278000000001575e-05, 2.329100000000167e-05, 2.3278000000001575e-05, 2.3249999999998966e-05, 2.3276999999998632e-05, 2.3291999999997676e-05, 2.3292000000001145e-05, 2.3306000000000715e-05, 2.329100000000167e-05, 2.3291999999997676e-05, 2.3306000000000715e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.536" endtime="20201110 08:33:16.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.532" endtime="20201110 08:33:16.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.546" endtime="20201110 08:33:16.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.554" endtime="20201110 08:33:16.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.550" endtime="20201110 08:33:16.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.541" endtime="20201110 08:33:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.176" endtime="20201110 08:33:16.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.175" endtime="20201110 08:33:16.584"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.611" endtime="20201110 08:33:16.626"></status>
</kw>
<msg timestamp="20201110 08:33:16.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.608" endtime="20201110 08:33:16.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.628" endtime="20201110 08:33:16.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.631" endtime="20201110 08:33:16.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.599" endtime="20201110 08:33:16.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.592" endtime="20201110 08:33:16.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.643" endtime="20201110 08:33:16.929"></status>
</kw>
<msg timestamp="20201110 08:33:16.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048394722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048418556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.641" endtime="20201110 08:33:16.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048394722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048418556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.934" endtime="20201110 08:33:16.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.942" endtime="20201110 08:33:16.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.638" endtime="20201110 08:33:16.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.636" endtime="20201110 08:33:16.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.949" level="INFO">${RESULT} = [{'time': 0.048418556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3834000000000355e-05, 'source_diff': 2.3834000000000355e-05}, {'time': 0.048478139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:16.945" endtime="20201110 08:33:16.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.962" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:16.950" endtime="20201110 08:33:16.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.967" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.966" endtime="20201110 08:33:16.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.970" level="INFO">VALUE: [2.3834000000000355e-05, 2.8208000000001787e-05, 2.8208000000001787e-05, 2.8250000000000497e-05, 2.8208999999994322e-05, 2.8207999999994848e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.8194999999994752e-05, 2.8208999999994322e-05, 2.8208000000001787e-05, 2.8221999999994418e-05, 2.8207999999994848e-05, 2.8290999999999733e-05, 2.8194000000002217e-05, 2.8194000000002217e-05, 2.8138999999996472e-05, 2.8222000000001357e-05, 2.8208000000001787e-05, 2.819500000000169e-05, 2.822300000000083e-05, 2.8194000000002217e-05, 2.8138999999996472e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.819399999999528e-05, 2.8222000000001357e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.822300000000083e-05, 2.816599999999614e-05, 2.8222000000001357e-05, 2.8194999999994752e-05, 2.8208000000001787e-05, 2.8208999999994322e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.822300000000083e-05, 2.819399999999528e-05, 2.818100000000212e-05, 2.8194000000002217e-05, 2.8180000000002647e-05, 2.8166000000003077e-05, 2.8180999999995182e-05, 2.822300000000083e-05, 2.818100000000212e-05, 2.8222000000001357e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.968" endtime="20201110 08:33:16.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.963" endtime="20201110 08:33:16.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.973" endtime="20201110 08:33:16.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.977" endtime="20201110 08:33:16.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.975" endtime="20201110 08:33:16.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.971" endtime="20201110 08:33:16.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.587" endtime="20201110 08:33:16.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.585" endtime="20201110 08:33:16.998"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.007" endtime="20201110 08:33:17.021"></status>
</kw>
<msg timestamp="20201110 08:33:17.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.005" endtime="20201110 08:33:17.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.022" endtime="20201110 08:33:17.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.025" endtime="20201110 08:33:17.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.002" endtime="20201110 08:33:17.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.000" endtime="20201110 08:33:17.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.036" endtime="20201110 08:33:17.323"></status>
</kw>
<msg timestamp="20201110 08:33:17.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:17.035" endtime="20201110 08:33:17.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:17.330" endtime="20201110 08:33:17.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.345" endtime="20201110 08:33:17.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.032" endtime="20201110 08:33:17.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.030" endtime="20201110 08:33:17.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.352" level="INFO">${RESULT} = [{'time': 0.022019819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8818999999999373e-05, 'source_diff': 2.8818999999999373e-05}, {'time': 0.022075736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:17.349" endtime="20201110 08:33:17.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:17.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:17.353" endtime="20201110 08:33:17.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.370" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:17.369" endtime="20201110 08:33:17.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.373" level="INFO">VALUE: [2.8818999999999373e-05, 2.8235999999997458e-05, 2.8221999999997888e-05, 2.822299999999736e-05, 2.8207999999998318e-05, 2.819499999999822e-05, 2.8207999999998318e-05, 2.8193999999998748e-05, 2.8222000000001357e-05, 2.8194000000002217e-05, 2.822299999999736e-05, 2.8221999999997888e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.815300000000298e-05, 2.8236000000000927e-05, 2.8235999999997458e-05, 2.8277999999999637e-05, 2.8263000000000593e-05, 2.8180000000002647e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8207999999998318e-05, 2.819500000000169e-05, 2.8221999999997888e-05, 2.8207999999998318e-05, 2.8221999999997888e-05, 2.8236000000000927e-05, 2.8221999999997888e-05, 2.820900000000126e-05, 2.822300000000083e-05, 2.819500000000169e-05, 2.8207999999998318e-05, 2.820900000000126e-05, 2.822300000000083e-05, 2.8236000000000927e-05, 2.8236000000000927e-05, 2.8221999999997888e-05, 2.8235999999997458e-05, 2.8208000000001787e-05, 2.8221999999997888e-05, 2.820900000000126e-05, 2.8193999999998748e-05, 2.8207999999998318e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.819499999999822e-05, 2.820900000000126e-05, 2.8235999999997458e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.371" endtime="20201110 08:33:17.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.367" endtime="20201110 08:33:17.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.376" endtime="20201110 08:33:17.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.380" endtime="20201110 08:33:17.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.378" endtime="20201110 08:33:17.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.375" endtime="20201110 08:33:17.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.999" endtime="20201110 08:33:17.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.998" endtime="20201110 08:33:17.401"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.410" endtime="20201110 08:33:17.424"></status>
</kw>
<msg timestamp="20201110 08:33:17.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.408" endtime="20201110 08:33:17.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.426" endtime="20201110 08:33:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.428" endtime="20201110 08:33:17.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.405" endtime="20201110 08:33:17.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.403" endtime="20201110 08:33:17.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.438" endtime="20201110 08:33:17.723"></status>
</kw>
<msg timestamp="20201110 08:33:17.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.437" endtime="20201110 08:33:17.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021989486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022018333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.728" endtime="20201110 08:33:17.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.736" endtime="20201110 08:33:17.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.434" endtime="20201110 08:33:17.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.432" endtime="20201110 08:33:17.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.743" level="INFO">${RESULT} = [{'time': 0.022018333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8847000000001982e-05, 'source_diff': 2.8847000000001982e-05}, {'time': 0.022063333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:17.739" endtime="20201110 08:33:17.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:17.756" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:17.744" endtime="20201110 08:33:17.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.761" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:17.760" endtime="20201110 08:33:17.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.763" level="INFO">VALUE: [2.8847000000001982e-05, 2.8277000000000163e-05, 2.8222000000001357e-05, 2.8235999999997458e-05, 2.8222000000001357e-05, 2.822299999999736e-05, 2.822300000000083e-05, 2.8207999999998318e-05, 2.8221999999997888e-05, 2.8250000000000497e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8193999999998748e-05, 2.8221999999997888e-05, 2.8193999999998748e-05, 2.8236000000000927e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.819500000000169e-05, 2.816699999999908e-05, 2.8264000000000067e-05, 2.8235999999997458e-05, 2.8222000000001357e-05, 2.820900000000126e-05, 2.8207999999998318e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.8179999999999178e-05, 2.8222000000001357e-05, 2.820899999999779e-05, 2.820900000000126e-05, 2.8165999999999608e-05, 2.8221999999997888e-05, 2.8221999999997888e-05, 2.8221999999997888e-05, 2.8179999999999178e-05, 2.820900000000126e-05, 2.8277999999999637e-05, 2.819499999999822e-05, 2.820900000000126e-05, 2.8222000000001357e-05, 2.8194000000002217e-05, 2.8264000000000067e-05, 2.8222000000001357e-05, 2.8207999999998318e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.762" endtime="20201110 08:33:17.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.757" endtime="20201110 08:33:17.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.767" endtime="20201110 08:33:17.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.770" endtime="20201110 08:33:17.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.769" endtime="20201110 08:33:17.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.765" endtime="20201110 08:33:17.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.402" endtime="20201110 08:33:17.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.401" endtime="20201110 08:33:17.791"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.800" endtime="20201110 08:33:17.815"></status>
</kw>
<msg timestamp="20201110 08:33:17.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.799" endtime="20201110 08:33:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.816" endtime="20201110 08:33:17.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.819" endtime="20201110 08:33:17.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.796" endtime="20201110 08:33:17.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.794" endtime="20201110 08:33:17.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.829" endtime="20201110 08:33:18.114"></status>
</kw>
<msg timestamp="20201110 08:33:18.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.827" endtime="20201110 08:33:18.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.119" endtime="20201110 08:33:18.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.127" endtime="20201110 08:33:18.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.825" endtime="20201110 08:33:18.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.823" endtime="20201110 08:33:18.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.134" level="INFO">${RESULT} = [{'time': 0.021938847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8861000000001552e-05, 'source_diff': 2.8861000000001552e-05}, {'time': 0.021996569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:18.131" endtime="20201110 08:33:18.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:18.135" endtime="20201110 08:33:18.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.152" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.151" endtime="20201110 08:33:18.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.155" level="INFO">VALUE: [2.8861000000001552e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.816699999999908e-05, 2.822300000000083e-05, 2.822300000000083e-05, 2.820899999999779e-05, 2.8207999999998318e-05, 2.819499999999822e-05, 2.8207999999998318e-05, 2.8264000000000067e-05, 2.820900000000126e-05, 2.8221999999997888e-05, 2.8264000000000067e-05, 2.8291999999999207e-05, 2.8222000000001357e-05, 2.8207999999998318e-05, 2.8277999999999637e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.8235999999997458e-05, 2.8221999999997888e-05, 2.8249999999997027e-05, 2.8236000000000927e-05, 2.82370000000004e-05, 2.8222000000001357e-05, 2.8250000000000497e-05, 2.8194000000002217e-05, 2.8208000000001787e-05, 2.820900000000126e-05, 2.822300000000083e-05, 2.8221999999997888e-05, 2.8179999999999178e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.8207999999998318e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.8193999999998748e-05, 2.816699999999908e-05, 2.8221999999997888e-05, 2.8235999999997458e-05, 2.820899999999779e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.820899999999779e-05, 2.8222000000001357e-05, 2.819500000000169e-05, 2.8208000000001787e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.153" endtime="20201110 08:33:18.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.148" endtime="20201110 08:33:18.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.158" endtime="20201110 08:33:18.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.162" endtime="20201110 08:33:18.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.160" endtime="20201110 08:33:18.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.157" endtime="20201110 08:33:18.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.792" endtime="20201110 08:33:18.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.792" endtime="20201110 08:33:18.183"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.192" endtime="20201110 08:33:18.206"></status>
</kw>
<msg timestamp="20201110 08:33:18.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.190" endtime="20201110 08:33:18.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.208" endtime="20201110 08:33:18.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.210" endtime="20201110 08:33:18.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.188" endtime="20201110 08:33:18.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.185" endtime="20201110 08:33:18.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.220" endtime="20201110 08:33:18.508"></status>
</kw>
<msg timestamp="20201110 08:33:18.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.219" endtime="20201110 08:33:18.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022092514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.512" endtime="20201110 08:33:18.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.521" endtime="20201110 08:33:18.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.216" endtime="20201110 08:33:18.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.214" endtime="20201110 08:33:18.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.528" level="INFO">${RESULT} = [{'time': 0.022121347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8832999999998943e-05, 'source_diff': 2.8832999999998943e-05}, {'time': 0.022169431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:18.525" endtime="20201110 08:33:18.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.542" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:18.529" endtime="20201110 08:33:18.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.546" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.545" endtime="20201110 08:33:18.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.549" level="INFO">VALUE: [2.8832999999998943e-05, 2.820900000000126e-05, 2.8290999999999733e-05, 2.8222000000001357e-05, 2.820900000000126e-05, 2.8208000000001787e-05, 2.8179999999999178e-05, 3.313900000000147e-05, 2.820900000000126e-05, 2.820899999999779e-05, 2.8152000000000038e-05, 2.8222000000001357e-05, 2.8208000000001787e-05, 2.8236000000000927e-05, 2.8222000000001357e-05, 3.320899999999932e-05, 2.819500000000169e-05, 2.8194000000002217e-05, 2.8222000000001357e-05, 2.816699999999908e-05, 2.8222000000001357e-05, 2.8222000000001357e-05, 2.819499999999822e-05, 2.8222000000001357e-05, 2.8193999999998748e-05, 2.8221999999997888e-05, 2.8277999999999637e-05, 2.8222000000001357e-05, 2.8208000000001787e-05, 2.822300000000083e-05, 3.3138999999998e-05, 2.8221999999997888e-05, 2.8222000000001357e-05, 2.820900000000126e-05, 2.820899999999779e-05, 2.8194000000002217e-05, 2.8193999999998748e-05, 2.8208000000001787e-05, 2.818099999999865e-05, 2.8221999999997888e-05, 2.8208000000001787e-05, 2.8208000000001787e-05, 2.8222000000001357e-05, 2.822300000000083e-05, 2.8207999999998318e-05, 2.8222000000001357e-05, 2.8194000000002217e-05, 3.3124999999998433e-05, 2.8221999999997888e-05, 2.8222000000001357e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.548" endtime="20201110 08:33:18.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.543" endtime="20201110 08:33:18.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.553" endtime="20201110 08:33:18.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.556" endtime="20201110 08:33:18.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.554" endtime="20201110 08:33:18.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.551" endtime="20201110 08:33:18.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.184" endtime="20201110 08:33:18.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.183" endtime="20201110 08:33:18.577"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.586" endtime="20201110 08:33:18.600"></status>
</kw>
<msg timestamp="20201110 08:33:18.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.584" endtime="20201110 08:33:18.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.602" endtime="20201110 08:33:18.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.604" endtime="20201110 08:33:18.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.581" endtime="20201110 08:33:18.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.579" endtime="20201110 08:33:18.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.615" endtime="20201110 08:33:18.901"></status>
</kw>
<msg timestamp="20201110 08:33:18.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.614" endtime="20201110 08:33:18.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.905" endtime="20201110 08:33:18.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.913" endtime="20201110 08:33:18.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.611" endtime="20201110 08:33:18.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.610" endtime="20201110 08:33:18.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.920" level="INFO">${RESULT} = [{'time': 0.021877472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.376399999999863e-05, 'source_diff': 3.376399999999863e-05}, {'time': 0.021926403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:18.917" endtime="20201110 08:33:18.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.934" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:18.921" endtime="20201110 08:33:18.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.938" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.937" endtime="20201110 08:33:18.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.941" level="INFO">VALUE: [3.376399999999863e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.316600000000114e-05, 3.313900000000147e-05, 3.315299999999757e-05, 3.3124999999998433e-05, 3.318000000000071e-05, 3.3124999999998433e-05, 3.315299999999757e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3110999999998864e-05, 3.3138000000002e-05, 3.315300000000104e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.306999999999963e-05, 3.31250000000019e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.315300000000104e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.311199999999834e-05, 3.315200000000157e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.320799999999985e-05, 3.3069000000000154e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.3138999999998e-05, 3.315300000000104e-05, 3.3138999999998e-05, 3.3110999999998864e-05, 3.313900000000147e-05, 3.315200000000157e-05, 3.316699999999714e-05, 3.3124999999998433e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3082999999999724e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.939" endtime="20201110 08:33:18.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.935" endtime="20201110 08:33:18.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.944" endtime="20201110 08:33:18.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.948" endtime="20201110 08:33:18.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.946" endtime="20201110 08:33:18.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.943" endtime="20201110 08:33:18.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.578" endtime="20201110 08:33:18.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.577" endtime="20201110 08:33:18.969"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.978" endtime="20201110 08:33:18.992"></status>
</kw>
<msg timestamp="20201110 08:33:18.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.976" endtime="20201110 08:33:18.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.994" endtime="20201110 08:33:18.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.996" endtime="20201110 08:33:18.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.973" endtime="20201110 08:33:18.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.971" endtime="20201110 08:33:19.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.007" endtime="20201110 08:33:19.292"></status>
</kw>
<msg timestamp="20201110 08:33:19.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.005" endtime="20201110 08:33:19.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021850111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.296" endtime="20201110 08:33:19.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.305" endtime="20201110 08:33:19.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.002" endtime="20201110 08:33:19.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.001" endtime="20201110 08:33:19.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.312" level="INFO">${RESULT} = [{'time': 0.021850111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-05, 'source_diff': 3.374999999999906e-05}, {'time': 0.021906542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:19.308" endtime="20201110 08:33:19.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.325" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:19.313" endtime="20201110 08:33:19.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.340" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.339" endtime="20201110 08:33:19.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.343" level="INFO">VALUE: [3.374999999999906e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.3138000000002e-05, 3.3138999999998e-05, 3.316700000000061e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.308400000000267e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.316700000000061e-05, 3.315200000000157e-05, 3.306999999999963e-05, 3.322199999999942e-05, 3.31519999999981e-05, 3.316599999999767e-05, 3.313900000000147e-05, 3.315299999999757e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.313799999999853e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.3082999999999724e-05, 3.3138999999998e-05, 3.316600000000114e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.3138999999998e-05, 3.315200000000157e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.315299999999757e-05, 3.311200000000181e-05, 3.3138000000002e-05, 3.316700000000061e-05, 3.3082999999999724e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.3110999999998864e-05, 3.309799999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.341" endtime="20201110 08:33:19.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.337" endtime="20201110 08:33:19.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.346" endtime="20201110 08:33:19.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.350" endtime="20201110 08:33:19.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.349" endtime="20201110 08:33:19.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.345" endtime="20201110 08:33:19.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.970" endtime="20201110 08:33:19.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.969" endtime="20201110 08:33:19.371"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.380" endtime="20201110 08:33:19.395"></status>
</kw>
<msg timestamp="20201110 08:33:19.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.379" endtime="20201110 08:33:19.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.396" endtime="20201110 08:33:19.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.399" endtime="20201110 08:33:19.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.376" endtime="20201110 08:33:19.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.374" endtime="20201110 08:33:19.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.409" endtime="20201110 08:33:19.694"></status>
</kw>
<msg timestamp="20201110 08:33:19.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.407" endtime="20201110 08:33:19.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021825097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.698" endtime="20201110 08:33:19.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.707" endtime="20201110 08:33:19.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.405" endtime="20201110 08:33:19.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.403" endtime="20201110 08:33:19.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.713" level="INFO">${RESULT} = [{'time': 0.021858861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.376399999999863e-05, 'source_diff': 3.376399999999863e-05}, {'time': 0.021913736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:19.710" endtime="20201110 08:33:19.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.727" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:19.714" endtime="20201110 08:33:19.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.731" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.730" endtime="20201110 08:33:19.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.734" level="INFO">VALUE: [3.376399999999863e-05, 3.3110999999998864e-05, 3.31250000000019e-05, 3.319499999999975e-05, 3.3138999999998e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.3138999999998e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.3124999999998433e-05, 3.3110999999998864e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.319400000000028e-05, 3.3138999999998e-05, 3.3096999999999294e-05, 3.313900000000147e-05, 3.3138999999998e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.3138999999998e-05, 3.313799999999853e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.315299999999757e-05, 3.311100000000233e-05, 3.313900000000147e-05, 3.3138999999998e-05, 3.3138999999998e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.3082999999999724e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.3096999999999294e-05, 3.319499999999975e-05, 3.3124999999998433e-05, 3.316699999999714e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.3138999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.732" endtime="20201110 08:33:19.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.728" endtime="20201110 08:33:19.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.737" endtime="20201110 08:33:19.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.741" endtime="20201110 08:33:19.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.739" endtime="20201110 08:33:19.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.736" endtime="20201110 08:33:19.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.372" endtime="20201110 08:33:19.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.372" endtime="20201110 08:33:19.763"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.776" endtime="20201110 08:33:19.794"></status>
</kw>
<msg timestamp="20201110 08:33:19.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.774" endtime="20201110 08:33:19.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.796" endtime="20201110 08:33:19.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.798" endtime="20201110 08:33:19.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.771" endtime="20201110 08:33:19.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.766" endtime="20201110 08:33:19.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.808" endtime="20201110 08:33:20.094"></status>
</kw>
<msg timestamp="20201110 08:33:20.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030455875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030489625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.807" endtime="20201110 08:33:20.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030455875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030489625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.099" endtime="20201110 08:33:20.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.107" endtime="20201110 08:33:20.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.804" endtime="20201110 08:33:20.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.802" endtime="20201110 08:33:20.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.114" level="INFO">${RESULT} = [{'time': 0.030489625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-05, 'source_diff': 3.374999999999906e-05}, {'time': 0.030556347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.111" endtime="20201110 08:33:20.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.115" endtime="20201110 08:33:20.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.132" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.131" endtime="20201110 08:33:20.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.134" level="INFO">VALUE: [3.374999999999906e-05, 3.315300000000104e-05, 3.318100000000018e-05, 3.316600000000114e-05, 3.315300000000104e-05, 3.3138999999998e-05, 3.3124999999998433e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.3124999999998433e-05, 3.309799999999877e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.3138999999994534e-05, 3.313900000000147e-05, 3.3138000000002e-05, 3.3110999999995394e-05, 3.313900000000147e-05, 3.3096999999995824e-05, 3.313900000000147e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.313900000000147e-05, 3.3110999999995394e-05, 3.316700000000061e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.3124999999994964e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.316700000000061e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.3138999999994534e-05, 3.31250000000019e-05, 3.3110999999995394e-05, 3.309800000000224e-05, 3.316700000000061e-05, 3.313900000000147e-05, 3.3138999999994534e-05, 3.31250000000019e-05, 3.3138999999994534e-05, 3.31250000000019e-05, 3.3040999999997545e-05, 3.311100000000233e-05, 3.31250000000019e-05, 3.31250000000019e-05, 3.313900000000147e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.133" endtime="20201110 08:33:20.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.128" endtime="20201110 08:33:20.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.138" endtime="20201110 08:33:20.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.141" endtime="20201110 08:33:20.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.140" endtime="20201110 08:33:20.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.136" endtime="20201110 08:33:20.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.764" endtime="20201110 08:33:20.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.763" endtime="20201110 08:33:20.162"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.171" endtime="20201110 08:33:20.186"></status>
</kw>
<msg timestamp="20201110 08:33:20.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.169" endtime="20201110 08:33:20.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.187" endtime="20201110 08:33:20.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.190" endtime="20201110 08:33:20.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.167" endtime="20201110 08:33:20.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.165" endtime="20201110 08:33:20.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.201" endtime="20201110 08:33:20.486"></status>
</kw>
<msg timestamp="20201110 08:33:20.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.199" endtime="20201110 08:33:20.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.491" endtime="20201110 08:33:20.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.499" endtime="20201110 08:33:20.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.196" endtime="20201110 08:33:20.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.195" endtime="20201110 08:33:20.502"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.506" level="INFO">${RESULT} = [{'time': 0.021866653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.368100000000068e-05, 'source_diff': 3.368100000000068e-05}, {'time': 0.021926819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.502" endtime="20201110 08:33:20.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.519" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.507" endtime="20201110 08:33:20.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.524" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.523" endtime="20201110 08:33:20.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.527" level="INFO">VALUE: [3.368100000000068e-05, 3.313799999999853e-05, 3.322299999999889e-05, 3.805600000000159e-05, 3.3138999999998e-05, 3.31250000000019e-05, 3.805600000000159e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.8054999999998645e-05, 3.3096999999999294e-05, 3.804199999999855e-05, 3.315300000000104e-05, 3.8068999999998215e-05, 3.316700000000061e-05, 3.31250000000019e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.3138999999998e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.3124999999998433e-05, 3.31250000000019e-05, 3.313900000000147e-05, 3.3110999999998864e-05, 3.313900000000147e-05, 3.804200000000202e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.315300000000104e-05, 3.31519999999981e-05, 3.313900000000147e-05, 3.313900000000147e-05, 3.3096999999999294e-05, 3.313799999999853e-05, 3.315300000000104e-05, 3.3124999999998433e-05, 3.30839999999992e-05, 3.311100000000233e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.3138999999998e-05, 3.313900000000147e-05, 3.3124999999998433e-05, 3.805600000000159e-05, 3.3138999999998e-05, 3.3124999999998433e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.525" endtime="20201110 08:33:20.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.520" endtime="20201110 08:33:20.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.530" endtime="20201110 08:33:20.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.533" endtime="20201110 08:33:20.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.532" endtime="20201110 08:33:20.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.528" endtime="20201110 08:33:20.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.163" endtime="20201110 08:33:20.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.163" endtime="20201110 08:33:20.554"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.563" endtime="20201110 08:33:20.578"></status>
</kw>
<msg timestamp="20201110 08:33:20.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.562" endtime="20201110 08:33:20.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.580" endtime="20201110 08:33:20.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.582" endtime="20201110 08:33:20.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.559" endtime="20201110 08:33:20.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.557" endtime="20201110 08:33:20.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.592" endtime="20201110 08:33:20.878"></status>
</kw>
<msg timestamp="20201110 08:33:20.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.591" endtime="20201110 08:33:20.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021826875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.882" endtime="20201110 08:33:20.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.891" endtime="20201110 08:33:20.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.588" endtime="20201110 08:33:20.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.586" endtime="20201110 08:33:20.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.898" level="INFO">${RESULT} = [{'time': 0.021826875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.872199999999798e-05, 'source_diff': 3.872199999999798e-05}, {'time': 0.021880722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.894" endtime="20201110 08:33:20.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:20.899" endtime="20201110 08:33:20.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.916" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.915" endtime="20201110 08:33:20.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.918" level="INFO">VALUE: [3.872199999999798e-05, 3.8040999999999076e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.807000000000116e-05, 3.805600000000159e-05, 3.805599999999812e-05, 3.802800000000245e-05, 3.8097000000000825e-05, 3.8083000000001255e-05, 3.804200000000202e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 3.807000000000116e-05, 3.804200000000202e-05, 3.8054999999998645e-05, 3.8054999999998645e-05, 3.805600000000159e-05, 3.805599999999812e-05, 3.8054999999998645e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 3.804199999999855e-05, 3.807000000000116e-05, 3.802800000000245e-05, 3.8054999999998645e-05, 3.8040999999999076e-05, 3.806999999999769e-05, 3.805600000000159e-05, 3.804200000000202e-05, 3.8040999999999076e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.807000000000116e-05, 3.8026999999999506e-05, 3.805600000000159e-05, 3.797300000000017e-05, 3.804199999999855e-05, 3.802799999999898e-05, 3.804199999999855e-05, 3.805599999999812e-05, 3.805600000000159e-05, 3.804199999999855e-05, 3.8055000000002115e-05, 3.8054999999998645e-05, 3.804199999999855e-05, 3.804199999999855e-05, 3.8054999999998645e-05, 3.805599999999812e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.917" endtime="20201110 08:33:20.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.912" endtime="20201110 08:33:20.920"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.922" endtime="20201110 08:33:20.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.925" endtime="20201110 08:33:20.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.924" endtime="20201110 08:33:20.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.920" endtime="20201110 08:33:20.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.555" endtime="20201110 08:33:20.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.555" endtime="20201110 08:33:20.946"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.955" endtime="20201110 08:33:20.970"></status>
</kw>
<msg timestamp="20201110 08:33:20.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.953" endtime="20201110 08:33:20.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.971" endtime="20201110 08:33:20.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.974" endtime="20201110 08:33:20.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.951" endtime="20201110 08:33:20.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.949" endtime="20201110 08:33:20.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.984" endtime="20201110 08:33:21.270"></status>
</kw>
<msg timestamp="20201110 08:33:21.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.982" endtime="20201110 08:33:21.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021942278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.275" endtime="20201110 08:33:21.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.283" endtime="20201110 08:33:21.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.980" endtime="20201110 08:33:21.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.978" endtime="20201110 08:33:21.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.290" level="INFO">${RESULT} = [{'time': 0.021980944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86659999999997e-05, 'source_diff': 3.86659999999997e-05}, {'time': 0.022048528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:21.287" endtime="20201110 08:33:21.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.304" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:21.291" endtime="20201110 08:33:21.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.308" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.307" endtime="20201110 08:33:21.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.311" level="INFO">VALUE: [3.86659999999997e-05, 3.804200000000202e-05, 3.804200000000202e-05, 3.8054999999998645e-05, 3.8055000000002115e-05, 3.805599999999812e-05, 3.805599999999812e-05, 3.807000000000116e-05, 3.8097000000000825e-05, 3.8026999999999506e-05, 3.8124999999999964e-05, 3.804199999999855e-05, 3.805600000000159e-05, 3.80980000000003e-05, 3.805599999999812e-05, 3.8069000000001685e-05, 3.8097000000000825e-05, 3.8069000000001685e-05, 3.804200000000202e-05, 3.805599999999812e-05, 3.8054999999998645e-05, 3.804199999999855e-05, 3.8055000000002115e-05, 3.8041000000002545e-05, 3.8055000000002115e-05, 3.8026999999999506e-05, 3.805599999999812e-05, 3.8068999999998215e-05, 3.805599999999812e-05, 3.8069000000001685e-05, 3.802799999999898e-05, 3.807000000000116e-05, 3.8055000000002115e-05, 3.799999999999984e-05, 3.805600000000159e-05, 3.804199999999855e-05, 3.806999999999769e-05, 3.8054999999998645e-05, 3.804200000000202e-05, 3.805600000000159e-05, 3.805600000000159e-05, 3.8040999999999076e-05, 3.8040999999999076e-05, 3.804199999999855e-05, 3.805599999999812e-05, 3.805600000000159e-05, 3.8040999999999076e-05, 3.804200000000202e-05, 3.804199999999855e-05, 3.804200000000202e-05]</msg>
<status status="PASS" starttime="20201110 08:33:21.309" endtime="20201110 08:33:21.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.305" endtime="20201110 08:33:21.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.314" endtime="20201110 08:33:21.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.318" endtime="20201110 08:33:21.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.316" endtime="20201110 08:33:21.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.313" endtime="20201110 08:33:21.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.947" endtime="20201110 08:33:21.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.947" endtime="20201110 08:33:21.339"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.351" endtime="20201110 08:33:21.370"></status>
</kw>
<msg timestamp="20201110 08:33:21.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.349" endtime="20201110 08:33:21.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.371" endtime="20201110 08:33:21.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.377" endtime="20201110 08:33:21.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.344" endtime="20201110 08:33:21.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.341" endtime="20201110 08:33:21.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.388" endtime="20201110 08:33:21.675"></status>
</kw>
<msg timestamp="20201110 08:33:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028790403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028829069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.386" endtime="20201110 08:33:21.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028790403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028829069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.679" endtime="20201110 08:33:21.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.687" endtime="20201110 08:33:21.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.384" endtime="20201110 08:33:21.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.382" endtime="20201110 08:33:21.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.694" level="INFO">${RESULT} = [{'time': 0.028829069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.86659999999997e-05, 'source_diff': 3.86659999999997e-05}, {'time': 0.028900694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:21.691" endtime="20201110 08:33:21.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.708" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:21.695" endtime="20201110 08:33:21.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.712" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.711" endtime="20201110 08:33:21.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.715" level="INFO">VALUE: [3.86659999999997e-05, 3.8041000000002545e-05, 3.808400000000073e-05, 3.807000000000116e-05, 3.8068999999998215e-05, 3.8068999999998215e-05, 3.805599999999812e-05, 3.8138999999999534e-05, 3.8055000000002115e-05, 3.807000000000116e-05, 3.8069000000001685e-05, 3.8054999999998645e-05, 3.8041000000002545e-05, 3.8040999999999076e-05, 3.805600000000159e-05, 3.8040999999999076e-05, 3.8097000000000825e-05, 3.8054999999998645e-05, 3.8138999999999534e-05, 3.805600000000159e-05, 3.8040999999999076e-05, 3.804199999999855e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 3.799999999999984e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.804199999999855e-05, 3.804200000000202e-05, 3.805600000000159e-05, 3.804200000000202e-05, 3.8041000000002545e-05, 3.8069000000001685e-05, 3.799999999999984e-05, 3.804200000000202e-05, 3.8040999999999076e-05, 3.799999999999984e-05, 3.802799999999898e-05, 3.805600000000159e-05, 3.805599999999812e-05, 3.802799999999551e-05, 3.802799999999551e-05, 3.804200000000202e-05, 3.805600000000159e-05, 3.813800000000006e-05, 3.807000000000116e-05, 3.802800000000245e-05, 3.804199999999508e-05, 3.8069000000001685e-05, 3.802800000000245e-05]</msg>
<status status="PASS" starttime="20201110 08:33:21.713" endtime="20201110 08:33:21.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.709" endtime="20201110 08:33:21.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.718" endtime="20201110 08:33:21.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.722" endtime="20201110 08:33:21.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.720" endtime="20201110 08:33:21.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.717" endtime="20201110 08:33:21.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.340" endtime="20201110 08:33:21.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.339" endtime="20201110 08:33:21.743"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.752" endtime="20201110 08:33:21.767"></status>
</kw>
<msg timestamp="20201110 08:33:21.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.750" endtime="20201110 08:33:21.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.768" endtime="20201110 08:33:21.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.771" endtime="20201110 08:33:21.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.747" endtime="20201110 08:33:21.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.745" endtime="20201110 08:33:21.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.781" endtime="20201110 08:33:22.067"></status>
</kw>
<msg timestamp="20201110 08:33:22.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.780" endtime="20201110 08:33:22.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021904653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021943333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.071" endtime="20201110 08:33:22.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.080" endtime="20201110 08:33:22.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.777" endtime="20201110 08:33:22.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.776" endtime="20201110 08:33:22.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.087" level="INFO">${RESULT} = [{'time': 0.021943333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.867999999999927e-05, 'source_diff': 3.867999999999927e-05}, {'time': 0.021996278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.083" endtime="20201110 08:33:22.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.100" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:22.088" endtime="20201110 08:33:22.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.105" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.104" endtime="20201110 08:33:22.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.107" level="INFO">VALUE: [3.867999999999927e-05, 3.807000000000116e-05, 3.8069000000001685e-05, 3.8054999999998645e-05, 3.8082999999997785e-05, 3.804199999999855e-05, 3.806999999999769e-05, 3.8097000000000825e-05, 3.804199999999855e-05, 3.8054999999998645e-05, 3.804199999999855e-05, 3.8055000000002115e-05, 3.8138999999999534e-05, 3.801400000000288e-05, 3.804199999999855e-05, 3.804199999999855e-05, 3.8083000000001255e-05, 3.8068999999998215e-05, 3.806999999999769e-05, 3.804199999999855e-05, 3.8055000000002115e-05, 3.799999999999984e-05, 3.805600000000159e-05, 3.8054999999998645e-05, 3.8054999999998645e-05, 3.8055000000002115e-05, 3.8027000000002975e-05, 3.802799999999898e-05, 3.8026999999999506e-05, 3.804199999999855e-05, 3.807000000000116e-05, 3.8054999999998645e-05, 3.8055000000002115e-05, 3.8054999999998645e-05, 3.805600000000159e-05, 3.8040999999999076e-05, 3.8096999999997355e-05, 3.8055000000002115e-05, 3.8055000000002115e-05, 3.8054999999998645e-05, 3.8068999999998215e-05, 3.8040999999999076e-05, 3.8012999999999936e-05, 3.8082999999997785e-05, 3.805600000000159e-05, 3.806999999999769e-05, 3.805599999999812e-05, 3.8069000000001685e-05, 3.8054999999998645e-05, 3.805599999999812e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.106" endtime="20201110 08:33:22.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.101" endtime="20201110 08:33:22.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.111" endtime="20201110 08:33:22.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.114" endtime="20201110 08:33:22.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.113" endtime="20201110 08:33:22.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.109" endtime="20201110 08:33:22.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.744" endtime="20201110 08:33:22.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.743" endtime="20201110 08:33:22.135"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.144" endtime="20201110 08:33:22.159"></status>
</kw>
<msg timestamp="20201110 08:33:22.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.142" endtime="20201110 08:33:22.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.160" endtime="20201110 08:33:22.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.163" endtime="20201110 08:33:22.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.140" endtime="20201110 08:33:22.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.138" endtime="20201110 08:33:22.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.173" endtime="20201110 08:33:22.459"></status>
</kw>
<msg timestamp="20201110 08:33:22.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:22.171" endtime="20201110 08:33:22.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021781833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218205, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:22.463" endtime="20201110 08:33:22.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.472" endtime="20201110 08:33:22.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.169" endtime="20201110 08:33:22.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.167" endtime="20201110 08:33:22.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.479" level="INFO">${RESULT} = [{'time': 0.0218205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8666999999999174e-05, 'source_diff': 3.8666999999999174e-05}, {'time': 0.021879986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.475" endtime="20201110 08:33:22.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:22.480" endtime="20201110 08:33:22.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.497" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.496" endtime="20201110 08:33:22.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.499" level="INFO">VALUE: [3.8666999999999174e-05, 3.799999999999984e-05, 3.805600000000159e-05, 4.2916999999999955e-05, 4.301400000000094e-05, 4.302800000000051e-05, 3.8054999999998645e-05, 3.805600000000159e-05, 3.799999999999984e-05, 3.804200000000202e-05, 3.8054999999998645e-05, 3.8040999999999076e-05, 3.804199999999855e-05, 3.804200000000202e-05, 3.8055000000002115e-05, 3.805599999999812e-05, 3.8040999999999076e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 4.301400000000094e-05, 3.8054999999998645e-05, 3.805599999999812e-05, 3.804200000000202e-05, 4.298599999999833e-05, 4.297199999999876e-05, 3.8054999999998645e-05, 3.8054999999998645e-05, 3.8026999999999506e-05, 3.805599999999812e-05, 3.8054999999998645e-05, 3.8068999999998215e-05, 4.297199999999876e-05, 3.8054999999998645e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.804200000000202e-05, 3.805600000000159e-05, 3.799999999999984e-05, 3.804199999999855e-05, 3.806999999999769e-05, 3.805599999999812e-05, 4.297200000000223e-05, 3.801399999999941e-05, 3.805600000000159e-05, 3.804199999999855e-05, 3.8138999999999534e-05, 3.805600000000159e-05, 3.8055000000002115e-05, 3.805600000000159e-05, 3.799999999999984e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.498" endtime="20201110 08:33:22.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.493" endtime="20201110 08:33:22.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.503" endtime="20201110 08:33:22.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.507" endtime="20201110 08:33:22.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.505" endtime="20201110 08:33:22.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.501" endtime="20201110 08:33:22.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.136" endtime="20201110 08:33:22.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.136" endtime="20201110 08:33:22.527"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.536" endtime="20201110 08:33:22.551"></status>
</kw>
<msg timestamp="20201110 08:33:22.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.534" endtime="20201110 08:33:22.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.553" endtime="20201110 08:33:22.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.555" endtime="20201110 08:33:22.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.532" endtime="20201110 08:33:22.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.530" endtime="20201110 08:33:22.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.566" endtime="20201110 08:33:22.850"></status>
</kw>
<msg timestamp="20201110 08:33:22.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.564" endtime="20201110 08:33:22.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021788389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.855" endtime="20201110 08:33:22.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.863" endtime="20201110 08:33:22.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.561" endtime="20201110 08:33:22.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.560" endtime="20201110 08:33:22.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.870" level="INFO">${RESULT} = [{'time': 0.021831986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3597000000002856e-05, 'source_diff': 4.3597000000002856e-05}, {'time': 0.021905431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:22.866" endtime="20201110 08:33:22.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.883" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:22.871" endtime="20201110 08:33:22.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.888" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.887" endtime="20201110 08:33:22.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.891" level="INFO">VALUE: [4.3597000000002856e-05, 4.29999999999979e-05, 4.29860000000018e-05, 4.297200000000223e-05, 4.2973000000001704e-05, 4.297199999999876e-05, 4.3041000000000607e-05, 4.304200000000008e-05, 4.2973000000001704e-05, 4.29860000000018e-05, 4.295800000000266e-05, 4.301399999999747e-05, 4.2972999999998235e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.298599999999833e-05, 4.300000000000137e-05, 4.29860000000018e-05, 4.301400000000094e-05, 4.298599999999833e-05, 4.300000000000137e-05, 4.297199999999876e-05, 4.294399999999962e-05, 4.297199999999876e-05, 4.297199999999876e-05, 4.2972999999998235e-05, 4.29860000000018e-05, 4.298599999999833e-05, 4.295800000000266e-05, 4.301400000000094e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.297199999999876e-05, 4.2959000000002134e-05, 4.300000000000137e-05, 4.2973000000001704e-05, 4.2973000000001704e-05, 4.3041000000000607e-05, 4.2930999999999525e-05, 4.298599999999833e-05, 4.29860000000018e-05, 4.293000000000005e-05, 4.29999999999979e-05, 4.2959000000002134e-05, 4.2958999999998665e-05, 4.301400000000094e-05, 4.2916999999999955e-05, 4.2973000000001704e-05, 4.2972999999998235e-05, 4.301400000000094e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.889" endtime="20201110 08:33:22.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.884" endtime="20201110 08:33:22.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.894" endtime="20201110 08:33:22.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.898" endtime="20201110 08:33:22.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.896" endtime="20201110 08:33:22.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.892" endtime="20201110 08:33:22.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.528" endtime="20201110 08:33:22.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.528" endtime="20201110 08:33:22.919"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.927" endtime="20201110 08:33:22.943"></status>
</kw>
<msg timestamp="20201110 08:33:22.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.926" endtime="20201110 08:33:22.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.944" endtime="20201110 08:33:22.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.947" endtime="20201110 08:33:22.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.923" endtime="20201110 08:33:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.921" endtime="20201110 08:33:22.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.957" endtime="20201110 08:33:23.245"></status>
</kw>
<msg timestamp="20201110 08:33:23.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:22.955" endtime="20201110 08:33:23.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0218825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:23.252" endtime="20201110 08:33:23.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.266" endtime="20201110 08:33:23.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.953" endtime="20201110 08:33:23.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.951" endtime="20201110 08:33:23.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.273" level="INFO">${RESULT} = [{'time': 0.021926097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3596999999999386e-05, 'source_diff': 4.3596999999999386e-05}, {'time': 0.021984264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:23.269" endtime="20201110 08:33:23.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.286" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:23.274" endtime="20201110 08:33:23.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.291" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.290" endtime="20201110 08:33:23.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.293" level="INFO">VALUE: [4.3596999999999386e-05, 4.297199999999876e-05, 4.295800000000266e-05, 4.302800000000051e-05, 4.297199999999876e-05, 4.2958999999998665e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.2959000000002134e-05, 4.293000000000005e-05, 4.298599999999833e-05, 4.295799999999919e-05, 4.301400000000094e-05, 4.294399999999962e-05, 4.298599999999833e-05, 4.2958999999998665e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.295799999999919e-05, 4.297200000000223e-05, 4.2973000000001704e-05, 4.29860000000018e-05, 4.29860000000018e-05, 4.297199999999876e-05, 4.297200000000223e-05, 4.2973000000001704e-05, 4.29860000000018e-05, 4.29999999999979e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.297200000000223e-05, 4.297199999999876e-05, 4.295800000000266e-05, 4.2959000000002134e-05, 4.298599999999833e-05, 4.300000000000137e-05, 4.2973000000001704e-05, 4.2973000000001704e-05, 4.2973000000001704e-05, 4.297199999999876e-05, 4.29860000000018e-05, 4.2958999999998665e-05, 4.295799999999919e-05, 4.2972999999998235e-05, 4.297199999999876e-05, 4.2959000000002134e-05, 4.297199999999876e-05, 4.298599999999833e-05, 4.2972999999998235e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.292" endtime="20201110 08:33:23.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.287" endtime="20201110 08:33:23.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.297" endtime="20201110 08:33:23.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.301" endtime="20201110 08:33:23.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.299" endtime="20201110 08:33:23.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.295" endtime="20201110 08:33:23.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.919" endtime="20201110 08:33:23.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.919" endtime="20201110 08:33:23.322"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.330" endtime="20201110 08:33:23.346"></status>
</kw>
<msg timestamp="20201110 08:33:23.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.329" endtime="20201110 08:33:23.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.347" endtime="20201110 08:33:23.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.350" endtime="20201110 08:33:23.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.326" endtime="20201110 08:33:23.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.324" endtime="20201110 08:33:23.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.361" endtime="20201110 08:33:23.646"></status>
</kw>
<msg timestamp="20201110 08:33:23.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.359" endtime="20201110 08:33:23.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022114111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022157722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.650" endtime="20201110 08:33:23.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.659" endtime="20201110 08:33:23.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.357" endtime="20201110 08:33:23.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.355" endtime="20201110 08:33:23.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.666" level="INFO">${RESULT} = [{'time': 0.022157722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3611000000002426e-05, 'source_diff': 4.3611000000002426e-05}, {'time': 0.022216778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:23.662" endtime="20201110 08:33:23.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.679" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:23.667" endtime="20201110 08:33:23.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.684" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.683" endtime="20201110 08:33:23.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.686" level="INFO">VALUE: [4.3611000000002426e-05, 4.2958999999998665e-05, 4.295799999999919e-05, 4.2958999999998665e-05, 4.29860000000018e-05, 4.2958999999998665e-05, 4.2973000000001704e-05, 4.297200000000223e-05, 4.295799999999919e-05, 4.2973000000001704e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.295799999999919e-05, 4.29860000000018e-05, 4.2944999999999095e-05, 4.2959000000002134e-05, 4.297200000000223e-05, 4.294399999999962e-05, 4.295799999999919e-05, 4.2972999999998235e-05, 4.295799999999919e-05, 4.2959000000002134e-05, 4.301400000000094e-05, 4.2944999999999095e-05, 4.297199999999876e-05, 4.302800000000051e-05, 4.295799999999919e-05, 4.297199999999876e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.2973000000001704e-05, 4.297200000000223e-05, 4.294399999999962e-05, 4.2959000000002134e-05, 4.295799999999919e-05, 4.2972999999998235e-05, 4.293000000000005e-05, 4.297199999999876e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.29860000000018e-05, 4.297200000000223e-05, 4.2959000000002134e-05, 4.297199999999876e-05, 4.2958999999998665e-05, 4.2916999999999955e-05, 4.295800000000266e-05, 4.29860000000018e-05, 4.295799999999919e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.685" endtime="20201110 08:33:23.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.680" endtime="20201110 08:33:23.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.690" endtime="20201110 08:33:23.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.693" endtime="20201110 08:33:23.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.692" endtime="20201110 08:33:23.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.688" endtime="20201110 08:33:23.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.322" endtime="20201110 08:33:23.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.322" endtime="20201110 08:33:23.714"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.723" endtime="20201110 08:33:23.738"></status>
</kw>
<msg timestamp="20201110 08:33:23.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.722" endtime="20201110 08:33:23.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.740" endtime="20201110 08:33:23.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.742" endtime="20201110 08:33:23.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.719" endtime="20201110 08:33:23.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.717" endtime="20201110 08:33:23.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.753" endtime="20201110 08:33:24.040"></status>
</kw>
<msg timestamp="20201110 08:33:24.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:23.751" endtime="20201110 08:33:24.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061097, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:24.045" endtime="20201110 08:33:24.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.053" endtime="20201110 08:33:24.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.748" endtime="20201110 08:33:24.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.747" endtime="20201110 08:33:24.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.060" level="INFO">${RESULT} = [{'time': 0.022061097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3597000000002856e-05, 'source_diff': 4.3597000000002856e-05}, {'time': 0.022124236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:24.057" endtime="20201110 08:33:24.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.074" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:24.061" endtime="20201110 08:33:24.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.078" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.077" endtime="20201110 08:33:24.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.081" level="INFO">VALUE: [4.3597000000002856e-05, 4.297199999999876e-05, 4.297200000000223e-05, 4.2973000000001704e-05, 4.2958999999998665e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.298599999999833e-05, 4.297200000000223e-05, 4.295800000000266e-05, 4.2972999999998235e-05, 4.2973000000001704e-05, 4.297199999999876e-05, 4.294399999999962e-05, 4.29999999999979e-05, 4.2958999999998665e-05, 4.295799999999919e-05, 4.298599999999833e-05, 4.301400000000094e-05, 4.295799999999919e-05, 4.297200000000223e-05, 4.29860000000018e-05, 4.29860000000018e-05, 4.297199999999876e-05, 4.297200000000223e-05, 4.2916999999999955e-05, 4.302800000000051e-05, 4.295799999999919e-05, 4.304099999999714e-05, 4.29860000000018e-05, 4.302800000000051e-05, 4.295799999999919e-05, 4.2916999999999955e-05, 4.2930999999999525e-05, 4.297199999999876e-05, 4.2888999999997346e-05, 4.297199999999876e-05, 4.295799999999919e-05, 4.2972999999998235e-05, 4.300000000000137e-05, 4.2973000000001704e-05, 4.291600000000048e-05, 4.29860000000018e-05, 4.29999999999979e-05, 4.298599999999833e-05, 4.297199999999876e-05, 4.298599999999833e-05, 4.297200000000223e-05, 4.297199999999876e-05, 4.297199999999876e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.079" endtime="20201110 08:33:24.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.074" endtime="20201110 08:33:24.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.084" endtime="20201110 08:33:24.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.088" endtime="20201110 08:33:24.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.086" endtime="20201110 08:33:24.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.083" endtime="20201110 08:33:24.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.715" endtime="20201110 08:33:24.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.715" endtime="20201110 08:33:24.109"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.118" endtime="20201110 08:33:24.133"></status>
</kw>
<msg timestamp="20201110 08:33:24.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.116" endtime="20201110 08:33:24.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.134" endtime="20201110 08:33:24.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.137" endtime="20201110 08:33:24.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.113" endtime="20201110 08:33:24.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.111" endtime="20201110 08:33:24.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.147" endtime="20201110 08:33:24.433"></status>
</kw>
<msg timestamp="20201110 08:33:24.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.146" endtime="20201110 08:33:24.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021870417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.437" endtime="20201110 08:33:24.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.446" endtime="20201110 08:33:24.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.143" endtime="20201110 08:33:24.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.141" endtime="20201110 08:33:24.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.452" level="INFO">${RESULT} = [{'time': 0.021870417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.355600000000015e-05, 'source_diff': 4.355600000000015e-05}, {'time': 0.021935361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:24.449" endtime="20201110 08:33:24.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:24.453" endtime="20201110 08:33:24.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.472" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.471" endtime="20201110 08:33:24.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.475" level="INFO">VALUE: [4.355600000000015e-05, 4.787499999999931e-05, 4.301400000000094e-05, 4.2972999999998235e-05, 4.2959000000002134e-05, 4.786099999999974e-05, 4.2903000000000385e-05, 4.2958999999998665e-05, 4.2972999999998235e-05, 4.297199999999876e-05, 4.297200000000223e-05, 4.297199999999876e-05, 4.790299999999845e-05, 4.788899999999888e-05, 4.2958999999998665e-05, 4.295799999999919e-05, 4.7903000000001916e-05, 4.302800000000051e-05, 4.78879999999994e-05, 4.295799999999919e-05, 4.295799999999919e-05, 4.295799999999919e-05, 4.788899999999888e-05, 4.298599999999833e-05, 4.788899999999888e-05, 4.291600000000048e-05, 4.298599999999833e-05, 4.297199999999876e-05, 4.297199999999876e-05, 4.2958999999998665e-05, 4.300000000000137e-05, 4.297200000000223e-05, 4.298599999999833e-05, 4.297199999999876e-05, 4.301300000000147e-05, 4.2958999999998665e-05, 4.2959000000002134e-05, 4.295800000000266e-05, 4.788899999999888e-05, 4.290199999999744e-05, 4.295799999999919e-05, 4.7875000000002776e-05, 4.7903000000001916e-05, 4.2958999999998665e-05, 4.793000000000158e-05, 4.786099999999974e-05, 4.300000000000137e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.295799999999919e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.474" endtime="20201110 08:33:24.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.468" endtime="20201110 08:33:24.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.480" endtime="20201110 08:33:24.481"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.484" endtime="20201110 08:33:24.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.482" endtime="20201110 08:33:24.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.478" endtime="20201110 08:33:24.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.110" endtime="20201110 08:33:24.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.109" endtime="20201110 08:33:24.505"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.513" endtime="20201110 08:33:24.529"></status>
</kw>
<msg timestamp="20201110 08:33:24.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.512" endtime="20201110 08:33:24.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.530" endtime="20201110 08:33:24.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.533" endtime="20201110 08:33:24.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.509" endtime="20201110 08:33:24.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.507" endtime="20201110 08:33:24.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.543" endtime="20201110 08:33:24.829"></status>
</kw>
<msg timestamp="20201110 08:33:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.541" endtime="20201110 08:33:24.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.834" endtime="20201110 08:33:24.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.842" endtime="20201110 08:33:24.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.539" endtime="20201110 08:33:24.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.537" endtime="20201110 08:33:24.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.849" level="INFO">${RESULT} = [{'time': 0.021761861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.848600000000036e-05, 'source_diff': 4.848600000000036e-05}, {'time': 0.021831153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:24.845" endtime="20201110 08:33:24.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:24.850" endtime="20201110 08:33:24.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.867" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.866" endtime="20201110 08:33:24.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.870" level="INFO">VALUE: [4.848600000000036e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.788899999999888e-05, 4.78200000000005e-05, 4.7875000000002776e-05, 4.787499999999931e-05, 4.790299999999845e-05, 4.786099999999974e-05, 4.786199999999921e-05, 4.790200000000244e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.784799999999964e-05, 4.7889000000002346e-05, 4.784700000000017e-05, 4.793099999999759e-05, 4.788899999999888e-05, 4.7917000000001486e-05, 4.791600000000201e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.790199999999897e-05, 4.788899999999888e-05, 4.7875000000002776e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.78330000000006e-05, 4.7889000000002346e-05, 4.787499999999931e-05, 4.791600000000201e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.7889000000002346e-05, 4.784700000000017e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.7861000000003207e-05, 4.7875000000002776e-05, 4.7875000000002776e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.7889000000002346e-05, 4.7875000000002776e-05, 4.7889000000002346e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.786099999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.868" endtime="20201110 08:33:24.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.863" endtime="20201110 08:33:24.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.874" endtime="20201110 08:33:24.875"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.877" endtime="20201110 08:33:24.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.876" endtime="20201110 08:33:24.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.872" endtime="20201110 08:33:24.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.506" endtime="20201110 08:33:24.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.505" endtime="20201110 08:33:24.898"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.907" endtime="20201110 08:33:24.923"></status>
</kw>
<msg timestamp="20201110 08:33:24.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.905" endtime="20201110 08:33:24.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.924" endtime="20201110 08:33:24.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.927" endtime="20201110 08:33:24.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.903" endtime="20201110 08:33:24.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.901" endtime="20201110 08:33:24.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.938" endtime="20201110 08:33:25.238"></status>
</kw>
<msg timestamp="20201110 08:33:25.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.936" endtime="20201110 08:33:25.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022010639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.243" endtime="20201110 08:33:25.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.251" endtime="20201110 08:33:25.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.933" endtime="20201110 08:33:25.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.932" endtime="20201110 08:33:25.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.258" level="INFO">${RESULT} = [{'time': 0.022010639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.85139999999995e-05, 'source_diff': 4.85139999999995e-05}, {'time': 0.022087486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:25.254" endtime="20201110 08:33:25.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.271" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:25.259" endtime="20201110 08:33:25.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.275" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.274" endtime="20201110 08:33:25.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.278" level="INFO">VALUE: [4.85139999999995e-05, 4.795800000000072e-05, 4.7931000000001056e-05, 4.7903000000001916e-05, 4.780600000000093e-05, 4.784700000000017e-05, 4.787499999999931e-05, 4.791599999999854e-05, 4.7861000000003207e-05, 4.790199999999897e-05, 4.787499999999931e-05, 4.7917000000001486e-05, 4.78879999999994e-05, 4.787499999999931e-05, 4.791699999999802e-05, 4.7889000000002346e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.795800000000072e-05, 4.790299999999845e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.7903000000001916e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.791699999999802e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.78330000000006e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.790299999999845e-05, 4.790299999999845e-05, 4.7861000000003207e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.7903000000001916e-05, 4.793000000000158e-05, 4.787499999999931e-05, 4.790299999999845e-05, 4.788899999999888e-05, 4.781900000000103e-05, 4.787499999999931e-05, 4.790199999999897e-05, 4.7917000000001486e-05, 4.788899999999888e-05, 4.787499999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:33:25.277" endtime="20201110 08:33:25.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.272" endtime="20201110 08:33:25.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.281" endtime="20201110 08:33:25.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.285" endtime="20201110 08:33:25.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.283" endtime="20201110 08:33:25.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.280" endtime="20201110 08:33:25.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.899" endtime="20201110 08:33:25.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.899" endtime="20201110 08:33:25.306"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.314" endtime="20201110 08:33:25.330"></status>
</kw>
<msg timestamp="20201110 08:33:25.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.313" endtime="20201110 08:33:25.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.331" endtime="20201110 08:33:25.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.334" endtime="20201110 08:33:25.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.310" endtime="20201110 08:33:25.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.308" endtime="20201110 08:33:25.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.344" endtime="20201110 08:33:25.629"></status>
</kw>
<msg timestamp="20201110 08:33:25.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.342" endtime="20201110 08:33:25.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021708278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.634" endtime="20201110 08:33:25.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.642" endtime="20201110 08:33:25.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.340" endtime="20201110 08:33:25.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.338" endtime="20201110 08:33:25.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.649" level="INFO">${RESULT} = [{'time': 0.021708278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.85139999999995e-05, 'source_diff': 4.85139999999995e-05}, {'time': 0.021773875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:25.645" endtime="20201110 08:33:25.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.662" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:25.650" endtime="20201110 08:33:25.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.667" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.666" endtime="20201110 08:33:25.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.669" level="INFO">VALUE: [4.85139999999995e-05, 4.7931000000001056e-05, 4.7903000000001916e-05, 4.7917000000001486e-05, 4.786099999999974e-05, 4.790199999999897e-05, 4.790299999999845e-05, 4.790299999999845e-05, 4.790299999999845e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.790299999999845e-05, 4.791599999999854e-05, 4.7875000000002776e-05, 4.790299999999845e-05, 4.788899999999888e-05, 4.7903000000001916e-05, 4.790299999999845e-05, 4.791600000000201e-05, 4.7889000000002346e-05, 4.797200000000029e-05, 4.7917000000001486e-05, 4.788899999999888e-05, 4.7889000000002346e-05, 4.78879999999994e-05, 4.78330000000006e-05, 4.787499999999931e-05, 4.790299999999845e-05, 4.7889000000002346e-05, 4.7917000000001486e-05, 4.7889000000002346e-05, 4.791600000000201e-05, 4.788800000000287e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.7889000000002346e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.78879999999994e-05, 4.788899999999888e-05, 4.790200000000244e-05, 4.790299999999845e-05, 4.784700000000017e-05, 4.788899999999888e-05, 4.784700000000017e-05, 4.786099999999974e-05, 4.790299999999845e-05, 4.7889000000002346e-05, 4.790299999999845e-05]</msg>
<status status="PASS" starttime="20201110 08:33:25.668" endtime="20201110 08:33:25.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.663" endtime="20201110 08:33:25.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.673" endtime="20201110 08:33:25.674"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.676" endtime="20201110 08:33:25.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.674" endtime="20201110 08:33:25.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.671" endtime="20201110 08:33:25.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.307" endtime="20201110 08:33:25.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.306" endtime="20201110 08:33:25.697"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.706" endtime="20201110 08:33:25.721"></status>
</kw>
<msg timestamp="20201110 08:33:25.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.704" endtime="20201110 08:33:25.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.722" endtime="20201110 08:33:25.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.725" endtime="20201110 08:33:25.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.701" endtime="20201110 08:33:25.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.699" endtime="20201110 08:33:25.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.735" endtime="20201110 08:33:26.034"></status>
</kw>
<msg timestamp="20201110 08:33:26.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.733" endtime="20201110 08:33:26.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021652125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.039" endtime="20201110 08:33:26.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.047" endtime="20201110 08:33:26.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.731" endtime="20201110 08:33:26.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.729" endtime="20201110 08:33:26.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.054" level="INFO">${RESULT} = [{'time': 0.021652125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.85139999999995e-05, 'source_diff': 4.85139999999995e-05}, {'time': 0.021714903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:26.050" endtime="20201110 08:33:26.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.067" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:26.055" endtime="20201110 08:33:26.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.072" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.071" endtime="20201110 08:33:26.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.074" level="INFO">VALUE: [4.85139999999995e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.780600000000093e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.7889000000002346e-05, 4.7889000000002346e-05, 4.7875000000002776e-05, 4.7903000000001916e-05, 4.783400000000007e-05, 4.788899999999888e-05, 4.78200000000005e-05, 4.788899999999888e-05, 4.7903000000001916e-05, 4.784700000000017e-05, 4.788899999999888e-05, 4.787499999999931e-05, 4.791600000000201e-05, 4.784700000000017e-05, 4.787499999999931e-05, 4.787499999999931e-05, 4.78879999999994e-05, 4.791699999999802e-05, 4.788899999999888e-05, 4.788899999999888e-05, 4.792999999999811e-05, 4.7889000000002346e-05, 4.786099999999974e-05, 4.787499999999931e-05, 4.7903000000001916e-05, 4.7875000000002776e-05, 4.790199999999897e-05, 4.793000000000158e-05, 4.787499999999931e-05, 4.78879999999994e-05, 4.7889000000002346e-05, 4.7903000000001916e-05, 4.788899999999888e-05, 4.790199999999897e-05, 4.7903000000001916e-05, 4.788899999999888e-05, 4.7889000000002346e-05, 4.790199999999897e-05, 4.791699999999802e-05, 4.7875000000002776e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.073" endtime="20201110 08:33:26.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.068" endtime="20201110 08:33:26.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.078" endtime="20201110 08:33:26.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.081" endtime="20201110 08:33:26.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.079" endtime="20201110 08:33:26.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.076" endtime="20201110 08:33:26.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.698" endtime="20201110 08:33:26.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.697" endtime="20201110 08:33:26.102"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.111" endtime="20201110 08:33:26.127"></status>
</kw>
<msg timestamp="20201110 08:33:26.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.109" endtime="20201110 08:33:26.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.128" endtime="20201110 08:33:26.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.131" endtime="20201110 08:33:26.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.106" endtime="20201110 08:33:26.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.104" endtime="20201110 08:33:26.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.141" endtime="20201110 08:33:26.426"></status>
</kw>
<msg timestamp="20201110 08:33:26.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.139" endtime="20201110 08:33:26.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.430" endtime="20201110 08:33:26.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.438" endtime="20201110 08:33:26.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.137" endtime="20201110 08:33:26.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.135" endtime="20201110 08:33:26.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.452" level="INFO">${RESULT} = [{'time': 0.022595847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.85139999999995e-05, 'source_diff': 4.85139999999995e-05}, {'time': 0.022672944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:26.448" endtime="20201110 08:33:26.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.466" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:26.453" endtime="20201110 08:33:26.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.470" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.469" endtime="20201110 08:33:26.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.473" level="INFO">VALUE: [4.85139999999995e-05, 4.78879999999994e-05, 4.791600000000201e-05, 4.7889000000002346e-05, 4.7875000000002776e-05, 4.786099999999974e-05, 4.7959000000000196e-05, 4.790299999999845e-05, 4.787499999999931e-05, 4.7917000000001486e-05, 4.795800000000072e-05, 4.797200000000029e-05, 5.280499999999952e-05, 4.787499999999931e-05, 5.280499999999952e-05, 5.281900000000256e-05, 4.788899999999888e-05, 5.280499999999952e-05, 4.786099999999974e-05, 4.791699999999802e-05, 4.78330000000006e-05, 4.7903000000001916e-05, 5.280600000000246e-05, 4.7875000000002776e-05, 5.28609999999978e-05, 5.281899999999909e-05, 4.788899999999888e-05, 5.279199999999942e-05, 4.786199999999921e-05, 4.788899999999888e-05, 4.790299999999845e-05, 4.788899999999888e-05, 4.784700000000017e-05, 4.790299999999845e-05, 4.791699999999802e-05, 4.787499999999931e-05, 5.280499999999952e-05, 5.280499999999952e-05, 4.7903000000001916e-05, 4.788899999999888e-05, 4.788899999999888e-05, 5.280500000000299e-05, 4.787499999999931e-05, 4.790299999999845e-05, 5.280499999999952e-05, 4.7903000000001916e-05, 5.280600000000246e-05, 4.790299999999845e-05, 4.7875000000002776e-05, 4.7889000000002346e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.471" endtime="20201110 08:33:26.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.467" endtime="20201110 08:33:26.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.477" endtime="20201110 08:33:26.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.480" endtime="20201110 08:33:26.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.479" endtime="20201110 08:33:26.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.475" endtime="20201110 08:33:26.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.103" endtime="20201110 08:33:26.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.102" endtime="20201110 08:33:26.501"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.510" endtime="20201110 08:33:26.526"></status>
</kw>
<msg timestamp="20201110 08:33:26.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.508" endtime="20201110 08:33:26.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.527" endtime="20201110 08:33:26.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.530" endtime="20201110 08:33:26.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.506" endtime="20201110 08:33:26.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.504" endtime="20201110 08:33:26.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.541" endtime="20201110 08:33:26.844"></status>
</kw>
<msg timestamp="20201110 08:33:26.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.539" endtime="20201110 08:33:26.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.848" endtime="20201110 08:33:26.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.856" endtime="20201110 08:33:26.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.537" endtime="20201110 08:33:26.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.535" endtime="20201110 08:33:26.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.863" level="INFO">${RESULT} = [{'time': 0.022097944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3402000000001004e-05, 'source_diff': 5.3402000000001004e-05}, {'time': 0.022173417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:26.860" endtime="20201110 08:33:26.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.877" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:26.864" endtime="20201110 08:33:26.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.881" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.880" endtime="20201110 08:33:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.884" level="INFO">VALUE: [5.3402000000001004e-05, 5.279199999999942e-05, 5.276400000000028e-05, 5.280599999999899e-05, 5.277799999999985e-05, 5.277800000000332e-05, 5.280599999999899e-05, 5.273600000000114e-05, 5.281900000000256e-05, 5.281899999999909e-05, 5.280499999999952e-05, 5.281899999999909e-05, 5.287500000000084e-05, 5.281999999999856e-05, 5.277799999999985e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.276400000000028e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.276400000000028e-05, 5.277799999999985e-05, 5.280499999999952e-05, 5.280600000000246e-05, 5.277799999999985e-05, 5.280599999999899e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.286100000000127e-05, 5.275000000000071e-05, 5.280599999999899e-05, 5.279200000000289e-05, 5.281899999999909e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.276300000000081e-05, 5.283300000000213e-05, 5.279099999999995e-05, 5.277700000000038e-05, 5.277799999999985e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.281999999999856e-05, 5.28609999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.882" endtime="20201110 08:33:26.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.878" endtime="20201110 08:33:26.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.893" endtime="20201110 08:33:26.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.896" endtime="20201110 08:33:26.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.895" endtime="20201110 08:33:26.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.891" endtime="20201110 08:33:26.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.502" endtime="20201110 08:33:26.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.501" endtime="20201110 08:33:26.917"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.926" endtime="20201110 08:33:26.942"></status>
</kw>
<msg timestamp="20201110 08:33:26.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.924" endtime="20201110 08:33:26.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.943" endtime="20201110 08:33:26.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.946" endtime="20201110 08:33:26.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.922" endtime="20201110 08:33:26.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.920" endtime="20201110 08:33:26.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.956" endtime="20201110 08:33:27.241"></status>
</kw>
<msg timestamp="20201110 08:33:27.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.954" endtime="20201110 08:33:27.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.245" endtime="20201110 08:33:27.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.254" endtime="20201110 08:33:27.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.952" endtime="20201110 08:33:27.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.950" endtime="20201110 08:33:27.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.260" level="INFO">${RESULT} = [{'time': 0.021895472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.338899999999744e-05, 'source_diff': 5.338899999999744e-05}, {'time': 0.021965958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.257" endtime="20201110 08:33:27.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.274" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:27.261" endtime="20201110 08:33:27.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.278" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.277" endtime="20201110 08:33:27.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.281" level="INFO">VALUE: [5.338899999999744e-05, 5.275000000000071e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.280499999999952e-05, 5.279199999999942e-05, 5.277700000000038e-05, 5.281900000000256e-05, 5.272200000000157e-05, 5.281899999999909e-05, 5.280499999999952e-05, 5.277700000000038e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.279099999999995e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.280499999999952e-05, 5.280499999999952e-05, 5.279199999999942e-05, 5.276400000000028e-05, 5.281999999999856e-05, 5.279199999999942e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.281899999999909e-05, 5.279099999999995e-05, 5.280499999999952e-05, 5.280499999999952e-05, 5.275000000000071e-05, 5.280600000000246e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.284800000000117e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.280600000000246e-05, 5.277799999999985e-05, 5.283399999999813e-05, 5.280599999999899e-05, 5.277799999999985e-05, 5.281899999999909e-05, 5.281899999999909e-05, 5.277799999999985e-05, 5.279199999999942e-05, 5.279099999999995e-05, 5.279099999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.280" endtime="20201110 08:33:27.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.275" endtime="20201110 08:33:27.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.285" endtime="20201110 08:33:27.286"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.288" endtime="20201110 08:33:27.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.286" endtime="20201110 08:33:27.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.283" endtime="20201110 08:33:27.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.918" endtime="20201110 08:33:27.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.918" endtime="20201110 08:33:27.309"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.319" endtime="20201110 08:33:27.334"></status>
</kw>
<msg timestamp="20201110 08:33:27.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.317" endtime="20201110 08:33:27.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.336" endtime="20201110 08:33:27.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.338" endtime="20201110 08:33:27.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.314" endtime="20201110 08:33:27.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.311" endtime="20201110 08:33:27.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.348" endtime="20201110 08:33:27.652"></status>
</kw>
<msg timestamp="20201110 08:33:27.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:27.347" endtime="20201110 08:33:27.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022660083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227135, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:27.656" endtime="20201110 08:33:27.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.664" endtime="20201110 08:33:27.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.344" endtime="20201110 08:33:27.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.342" endtime="20201110 08:33:27.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.671" level="INFO">${RESULT} = [{'time': 0.0227135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.341700000000005e-05, 'source_diff': 5.341700000000005e-05}, {'time': 0.022788667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:27.667" endtime="20201110 08:33:27.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.684" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:27.672" endtime="20201110 08:33:27.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.689" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.688" endtime="20201110 08:33:27.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.691" level="INFO">VALUE: [5.341700000000005e-05, 5.280599999999899e-05, 5.279200000000289e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.281900000000256e-05, 5.281999999999856e-05, 5.281900000000256e-05, 5.281999999999856e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.286200000000074e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.279099999999995e-05, 5.279099999999995e-05, 5.279199999999942e-05, 5.277799999999985e-05, 5.280599999999899e-05, 5.279099999999995e-05, 5.276400000000028e-05, 5.2735999999997674e-05, 5.288900000000041e-05, 5.28340000000016e-05, 5.280599999999899e-05, 5.287500000000084e-05, 5.282000000000203e-05, 5.2749999999997244e-05, 5.280600000000246e-05, 5.280600000000246e-05, 5.2749999999997244e-05, 5.280499999999952e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.281899999999909e-05, 5.280500000000299e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.276400000000028e-05, 5.279199999999942e-05, 5.280499999999952e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.280599999999899e-05, 5.281999999999856e-05, 5.280599999999899e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.690" endtime="20201110 08:33:27.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.685" endtime="20201110 08:33:27.692"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.695" endtime="20201110 08:33:27.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.698" endtime="20201110 08:33:27.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.697" endtime="20201110 08:33:27.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.693" endtime="20201110 08:33:27.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.310" endtime="20201110 08:33:27.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.309" endtime="20201110 08:33:27.719"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.727" endtime="20201110 08:33:27.743"></status>
</kw>
<msg timestamp="20201110 08:33:27.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.726" endtime="20201110 08:33:27.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.745" endtime="20201110 08:33:27.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.747" endtime="20201110 08:33:27.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.723" endtime="20201110 08:33:27.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.721" endtime="20201110 08:33:27.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.757" endtime="20201110 08:33:28.042"></status>
</kw>
<msg timestamp="20201110 08:33:28.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.756" endtime="20201110 08:33:28.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021622722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.046" endtime="20201110 08:33:28.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.055" endtime="20201110 08:33:28.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.753" endtime="20201110 08:33:28.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.751" endtime="20201110 08:33:28.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.061" level="INFO">${RESULT} = [{'time': 0.021676167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.344499999999919e-05, 'source_diff': 5.344499999999919e-05}, {'time': 0.021752569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.058" endtime="20201110 08:33:28.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:28.062" endtime="20201110 08:33:28.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.079" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.078" endtime="20201110 08:33:28.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.081" level="INFO">VALUE: [5.344499999999919e-05, 5.281899999999909e-05, 5.281999999999856e-05, 5.279200000000289e-05, 5.286100000000127e-05, 5.280599999999899e-05, 5.280499999999952e-05, 5.279200000000289e-05, 5.279199999999942e-05, 5.279099999999995e-05, 5.279199999999942e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.280499999999952e-05, 5.280600000000246e-05, 5.280599999999899e-05, 5.280499999999952e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.277799999999985e-05, 5.280600000000246e-05, 5.280499999999952e-05, 5.279199999999942e-05, 5.281899999999909e-05, 5.279099999999995e-05, 5.280600000000246e-05, 5.277700000000038e-05, 5.280599999999899e-05, 5.279200000000289e-05, 5.279199999999942e-05, 5.280599999999899e-05, 5.277799999999985e-05, 5.280600000000246e-05, 5.281899999999909e-05, 5.280599999999899e-05, 5.280600000000246e-05, 5.279199999999942e-05, 5.277700000000038e-05, 5.284699999999823e-05, 5.280599999999899e-05, 5.280599999999899e-05, 5.277799999999985e-05, 5.279099999999995e-05, 5.277799999999985e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.279199999999942e-05, 5.280499999999952e-05, 5.280599999999899e-05, 5.280599999999899e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.080" endtime="20201110 08:33:28.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.075" endtime="20201110 08:33:28.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.085" endtime="20201110 08:33:28.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.088" endtime="20201110 08:33:28.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.087" endtime="20201110 08:33:28.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.083" endtime="20201110 08:33:28.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.720" endtime="20201110 08:33:28.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.719" endtime="20201110 08:33:28.109"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.118" endtime="20201110 08:33:28.136"></status>
</kw>
<msg timestamp="20201110 08:33:28.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.116" endtime="20201110 08:33:28.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.138" endtime="20201110 08:33:28.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.140" endtime="20201110 08:33:28.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.114" endtime="20201110 08:33:28.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.112" endtime="20201110 08:33:28.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.151" endtime="20201110 08:33:28.439"></status>
</kw>
<msg timestamp="20201110 08:33:28.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:28.149" endtime="20201110 08:33:28.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021746083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:28.443" endtime="20201110 08:33:28.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.452" endtime="20201110 08:33:28.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.147" endtime="20201110 08:33:28.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.145" endtime="20201110 08:33:28.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.459" level="INFO">${RESULT} = [{'time': 0.021746083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.158300000000006e-05, 'source_diff': 7.158300000000006e-05}, {'time': 0.021875403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.455" endtime="20201110 08:33:28.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.472" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:28.460" endtime="20201110 08:33:28.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.477" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.476" endtime="20201110 08:33:28.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.479" level="INFO">VALUE: [7.158300000000006e-05, 7.15970000000031e-05, 7.155499999999745e-05, 7.215300000000188e-05, 7.166600000000148e-05, 7.131900000000024e-05, 7.202699999999881e-05, 7.184699999999988e-05, 7.168100000000052e-05, 7.208400000000004e-05, 7.165200000000191e-05, 7.21109999999997e-05, 7.159699999999963e-05, 7.163900000000181e-05, 7.122200000000273e-05, 7.134699999999938e-05, 7.168100000000052e-05, 7.186100000000292e-05, 7.177800000000151e-05, 7.154100000000135e-05, 7.17499999999989e-05, 7.130600000000015e-05, 7.134699999999938e-05, 7.222299999999973e-05, 7.156999999999997e-05, 7.134699999999938e-05, 7.22499999999994e-05, 7.134699999999938e-05, 7.216700000000145e-05, 7.149999999999865e-05, 7.182000000000022e-05, 7.170800000000019e-05, 7.222200000000026e-05, 7.215300000000188e-05, 7.200000000000262e-05, 7.22499999999994e-05, 7.179199999999761e-05, 7.144400000000037e-05, 7.148599999999908e-05, 7.168100000000052e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.143100000000027e-05, 7.134799999999886e-05, 7.216700000000145e-05, 7.133400000000276e-05, 7.129200000000058e-05, 7.188899999999859e-05, 7.156999999999997e-05, 7.218100000000102e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.478" endtime="20201110 08:33:28.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.473" endtime="20201110 08:33:28.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.483" endtime="20201110 08:33:28.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.486" endtime="20201110 08:33:28.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.485" endtime="20201110 08:33:28.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.481" endtime="20201110 08:33:28.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.110" endtime="20201110 08:33:28.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.110" endtime="20201110 08:33:28.507"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.516" endtime="20201110 08:33:28.534"></status>
</kw>
<msg timestamp="20201110 08:33:28.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.514" endtime="20201110 08:33:28.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.536" endtime="20201110 08:33:28.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.538" endtime="20201110 08:33:28.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.512" endtime="20201110 08:33:28.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.510" endtime="20201110 08:33:28.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.548" endtime="20201110 08:33:28.834"></status>
</kw>
<msg timestamp="20201110 08:33:28.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.547" endtime="20201110 08:33:28.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022123292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.838" endtime="20201110 08:33:28.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.847" endtime="20201110 08:33:28.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.544" endtime="20201110 08:33:28.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.543" endtime="20201110 08:33:28.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.853" level="INFO">${RESULT} = [{'time': 0.022123292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.291699999999873e-05, 'source_diff': 7.291699999999873e-05}, {'time': 0.022258611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.850" endtime="20201110 08:33:28.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.867" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:28.854" endtime="20201110 08:33:28.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.871" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.870" endtime="20201110 08:33:28.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.874" level="INFO">VALUE: [7.291699999999873e-05, 7.255500000000192e-05, 7.247200000000051e-05, 7.323600000000083e-05, 7.229200000000158e-05, 7.284700000000088e-05, 7.322299999999726e-05, 7.279199999999861e-05, 7.298600000000058e-05, 7.262499999999977e-05, 7.236099999999995e-05, 7.254100000000235e-05, 7.291699999999873e-05, 7.319499999999812e-05, 7.247199999999704e-05, 7.320800000000169e-05, 7.251399999999922e-05, 7.27499999999999e-05, 7.259699999999716e-05, 7.266699999999848e-05, 7.273600000000033e-05, 7.315299999999941e-05, 7.284700000000088e-05, 7.28049999999987e-05, 7.323599999999736e-05, 7.26110000000002e-05, 7.309800000000061e-05, 7.262499999999977e-05, 7.291599999999926e-05, 7.241599999999876e-05, 7.295800000000144e-05, 7.304199999999886e-05, 7.279099999999913e-05, 7.322200000000126e-05, 7.322199999999779e-05, 7.30560000000019e-05, 7.309699999999766e-05, 7.304199999999886e-05, 7.322200000000126e-05, 7.236099999999995e-05, 7.254200000000183e-05, 7.312500000000027e-05, 7.284700000000088e-05, 7.261199999999968e-05, 7.276399999999947e-05, 7.304200000000233e-05, 7.320799999999822e-05, 7.306899999999852e-05, 7.272200000000076e-05, 7.241600000000223e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.872" endtime="20201110 08:33:28.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.868" endtime="20201110 08:33:28.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.878" endtime="20201110 08:33:28.879"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.881" endtime="20201110 08:33:28.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.879" endtime="20201110 08:33:28.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.876" endtime="20201110 08:33:28.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.508" endtime="20201110 08:33:28.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.508" endtime="20201110 08:33:28.902"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.911" endtime="20201110 08:33:28.929"></status>
</kw>
<msg timestamp="20201110 08:33:28.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.909" endtime="20201110 08:33:28.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.930" endtime="20201110 08:33:28.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.933" endtime="20201110 08:33:28.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.906" endtime="20201110 08:33:28.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.904" endtime="20201110 08:33:28.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.943" endtime="20201110 08:33:29.229"></status>
</kw>
<msg timestamp="20201110 08:33:29.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.941" endtime="20201110 08:33:29.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.234" endtime="20201110 08:33:29.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.242" endtime="20201110 08:33:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.939" endtime="20201110 08:33:29.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.937" endtime="20201110 08:33:29.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.249" level="INFO">${RESULT} = [{'time': 0.021959278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.411099999999823e-05, 'source_diff': 7.411099999999823e-05}, {'time': 0.022095569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.245" endtime="20201110 08:33:29.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:29.250" endtime="20201110 08:33:29.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.269" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.267" endtime="20201110 08:33:29.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.271" level="INFO">VALUE: [7.411099999999823e-05, 7.404100000000038e-05, 7.416700000000345e-05, 7.334800000000086e-05, 7.398599999999811e-05, 7.341699999999923e-05, 7.399999999999768e-05, 7.334700000000138e-05, 7.36110000000012e-05, 7.327799999999954e-05, 7.416699999999998e-05, 7.416699999999998e-05, 7.355499999999945e-05, 7.416699999999998e-05, 7.34309999999988e-05, 7.402800000000029e-05, 7.395800000000244e-05, 7.379199999999961e-05, 7.420799999999922e-05, 7.330599999999868e-05, 7.372200000000176e-05, 7.409699999999866e-05, 7.342999999999933e-05, 7.383300000000231e-05, 7.401300000000124e-05, 7.379199999999961e-05, 7.400000000000115e-05, 7.397300000000148e-05, 7.337500000000052e-05, 7.390300000000016e-05, 7.345799999999847e-05, 7.40829999999991e-05, 7.377800000000004e-05, 7.341699999999923e-05, 7.400000000000115e-05, 7.372300000000123e-05, 7.347300000000098e-05, 7.331899999999877e-05, 7.427800000000054e-05, 7.365299999999991e-05, 7.348600000000108e-05, 7.336100000000095e-05, 7.336100000000095e-05, 7.372199999999829e-05, 7.347199999999804e-05, 7.354099999999988e-05, 7.368099999999905e-05, 7.359700000000163e-05, 7.386099999999798e-05, 7.366600000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.270" endtime="20201110 08:33:29.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.264" endtime="20201110 08:33:29.273"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.275" endtime="20201110 08:33:29.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.279" endtime="20201110 08:33:29.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.277" endtime="20201110 08:33:29.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.273" endtime="20201110 08:33:29.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.903" endtime="20201110 08:33:29.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.902" endtime="20201110 08:33:29.300"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.308" endtime="20201110 08:33:29.327"></status>
</kw>
<msg timestamp="20201110 08:33:29.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.307" endtime="20201110 08:33:29.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.328" endtime="20201110 08:33:29.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.331" endtime="20201110 08:33:29.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.304" endtime="20201110 08:33:29.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.302" endtime="20201110 08:33:29.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.341" endtime="20201110 08:33:29.626"></status>
</kw>
<msg timestamp="20201110 08:33:29.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:29.339" endtime="20201110 08:33:29.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022035542, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:29.630" endtime="20201110 08:33:29.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.638" endtime="20201110 08:33:29.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.337" endtime="20201110 08:33:29.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.335" endtime="20201110 08:33:29.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.645" level="INFO">${RESULT} = [{'time': 0.022035542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.479200000000061e-05, 'source_diff': 7.479200000000061e-05}, {'time': 0.022157903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.642" endtime="20201110 08:33:29.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.658" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:29.646" endtime="20201110 08:33:29.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.663" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.662" endtime="20201110 08:33:29.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.665" level="INFO">VALUE: [7.479200000000061e-05, 7.455599999999993e-05, 7.499999999999868e-05, 7.440300000000066e-05, 7.422199999999879e-05, 7.45829999999996e-05, 7.436099999999848e-05, 7.477800000000104e-05, 7.479200000000061e-05, 7.51249999999988e-05, 7.493000000000083e-05, 7.50830000000001e-05, 7.502800000000129e-05, 7.474999999999843e-05, 7.46110000000022e-05, 7.51249999999988e-05, 7.495799999999997e-05, 7.469400000000015e-05, 7.434699999999891e-05, 7.522299999999926e-05, 7.515300000000141e-05, 7.509699999999966e-05, 7.498600000000258e-05, 7.465300000000091e-05, 7.504199999999739e-05, 7.498599999999911e-05, 7.42639999999975e-05, 7.49310000000003e-05, 7.447199999999904e-05, 7.490300000000116e-05, 7.522199999999979e-05, 7.459699999999916e-05, 7.444499999999937e-05, 7.480600000000018e-05, 7.447300000000198e-05, 7.50830000000001e-05, 7.501400000000172e-05, 7.472199999999929e-05, 7.461099999999873e-05, 7.497199999999954e-05, 7.441700000000023e-05, 7.491700000000073e-05, 7.484699999999941e-05, 7.509699999999966e-05, 7.430599999999968e-05, 7.497199999999954e-05, 7.484799999999889e-05, 7.500000000000215e-05, 7.491599999999779e-05, 7.490300000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.664" endtime="20201110 08:33:29.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.659" endtime="20201110 08:33:29.667"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.669" endtime="20201110 08:33:29.670"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.673" endtime="20201110 08:33:29.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.671" endtime="20201110 08:33:29.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.667" endtime="20201110 08:33:29.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.300" endtime="20201110 08:33:29.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.300" endtime="20201110 08:33:29.693"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.702" endtime="20201110 08:33:29.721"></status>
</kw>
<msg timestamp="20201110 08:33:29.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.701" endtime="20201110 08:33:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.722" endtime="20201110 08:33:29.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.725" endtime="20201110 08:33:29.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.698" endtime="20201110 08:33:29.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.696" endtime="20201110 08:33:29.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.736" endtime="20201110 08:33:30.020"></status>
</kw>
<msg timestamp="20201110 08:33:30.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.734" endtime="20201110 08:33:30.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.025" endtime="20201110 08:33:30.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.033" endtime="20201110 08:33:30.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.731" endtime="20201110 08:33:30.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.730" endtime="20201110 08:33:30.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.040" level="INFO">${RESULT} = [{'time': 0.021994278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.572200000000029e-05, 'source_diff': 7.572200000000029e-05}, {'time': 0.022120583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.036" endtime="20201110 08:33:30.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.053" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:30.041" endtime="20201110 08:33:30.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.058" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.057" endtime="20201110 08:33:30.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.061" level="INFO">VALUE: [7.572200000000029e-05, 7.538899999999862e-05, 7.554099999999841e-05, 7.52639999999985e-05, 7.620800000000122e-05, 7.573599999999986e-05, 7.597199999999707e-05, 7.577700000000256e-05, 7.615199999999947e-05, 7.583400000000032e-05, 7.595899999999697e-05, 7.541700000000123e-05, 7.565299999999844e-05, 7.601399999999925e-05, 7.58890000000026e-05, 7.545800000000047e-05, 7.584700000000041e-05, 7.613899999999937e-05, 7.566599999999854e-05, 7.541599999999829e-05, 7.551400000000222e-05, 7.547200000000004e-05, 7.582000000000075e-05, 7.52639999999985e-05, 7.565300000000191e-05, 7.572200000000029e-05, 7.540200000000219e-05, 7.588899999999912e-05, 7.602800000000229e-05, 7.619499999999765e-05, 7.611100000000023e-05, 7.591700000000173e-05, 7.566699999999801e-05, 7.584799999999989e-05, 7.569399999999768e-05, 7.615199999999947e-05, 7.582000000000075e-05, 7.59579999999975e-05, 7.584700000000041e-05, 7.53189999999973e-05, 7.613899999999937e-05, 7.526400000000197e-05, 7.582000000000075e-05, 7.599999999999968e-05, 7.615299999999894e-05, 7.552800000000179e-05, 7.55830000000006e-05, 7.590199999999922e-05, 7.577800000000204e-05, 7.586099999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:33:30.059" endtime="20201110 08:33:30.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.054" endtime="20201110 08:33:30.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.064" endtime="20201110 08:33:30.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.068" endtime="20201110 08:33:30.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.066" endtime="20201110 08:33:30.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.063" endtime="20201110 08:33:30.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.694" endtime="20201110 08:33:30.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.694" endtime="20201110 08:33:30.089"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.097" endtime="20201110 08:33:30.116"></status>
</kw>
<msg timestamp="20201110 08:33:30.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.096" endtime="20201110 08:33:30.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.117" endtime="20201110 08:33:30.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.120" endtime="20201110 08:33:30.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.093" endtime="20201110 08:33:30.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.091" endtime="20201110 08:33:30.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.130" endtime="20201110 08:33:30.415"></status>
</kw>
<msg timestamp="20201110 08:33:30.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.128" endtime="20201110 08:33:30.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021808236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.419" endtime="20201110 08:33:30.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.428" endtime="20201110 08:33:30.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.126" endtime="20201110 08:33:30.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.124" endtime="20201110 08:33:30.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.435" level="INFO">${RESULT} = [{'time': 0.021884944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.670799999999825e-05, 'source_diff': 7.670799999999825e-05}, {'time': 0.022010333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.431" endtime="20201110 08:33:30.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.448" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:30.436" endtime="20201110 08:33:30.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.453" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.452" endtime="20201110 08:33:30.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.455" level="INFO">VALUE: [7.670799999999825e-05, 7.638899999999962e-05, 7.65830000000016e-05, 7.66250000000003e-05, 7.679199999999914e-05, 7.683299999999837e-05, 7.702799999999982e-05, 7.673599999999739e-05, 7.645900000000094e-05, 7.659700000000116e-05, 7.670800000000172e-05, 7.629200000000211e-05, 7.677799999999957e-05, 7.69449999999984e-05, 7.62639999999995e-05, 7.701400000000025e-05, 7.640199999999972e-05, 7.659800000000064e-05, 7.655499999999898e-05, 7.706999999999853e-05, 7.624999999999993e-05, 7.658400000000107e-05, 7.706900000000252e-05, 7.659800000000064e-05, 7.634700000000091e-05, 7.627799999999907e-05, 7.677799999999957e-05, 7.656899999999855e-05, 7.627799999999907e-05, 7.684699999999794e-05, 7.645900000000094e-05, 7.702800000000329e-05, 7.705600000000243e-05, 7.675000000000043e-05, 7.691700000000273e-05, 7.705599999999896e-05, 7.665300000000291e-05, 7.641600000000276e-05, 7.620799999999775e-05, 7.637500000000005e-05, 7.633300000000134e-05, 7.713900000000037e-05, 7.713900000000037e-05, 7.658299999999812e-05, 7.644399999999843e-05, 7.713900000000037e-05, 7.677799999999957e-05, 7.652799999999932e-05, 7.702799999999982e-05, 7.691599999999979e-05]</msg>
<status status="PASS" starttime="20201110 08:33:30.454" endtime="20201110 08:33:30.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.449" endtime="20201110 08:33:30.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.459" endtime="20201110 08:33:30.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.462" endtime="20201110 08:33:30.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.461" endtime="20201110 08:33:30.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.457" endtime="20201110 08:33:30.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.090" endtime="20201110 08:33:30.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.089" endtime="20201110 08:33:30.483"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.492" endtime="20201110 08:33:30.510"></status>
</kw>
<msg timestamp="20201110 08:33:30.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.490" endtime="20201110 08:33:30.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.512" endtime="20201110 08:33:30.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.514" endtime="20201110 08:33:30.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.488" endtime="20201110 08:33:30.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.486" endtime="20201110 08:33:30.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.526" endtime="20201110 08:33:30.811"></status>
</kw>
<msg timestamp="20201110 08:33:30.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.524" endtime="20201110 08:33:30.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022057875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.815" endtime="20201110 08:33:30.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.824" endtime="20201110 08:33:30.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.521" endtime="20201110 08:33:30.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.519" endtime="20201110 08:33:30.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.831" level="INFO">${RESULT} = [{'time': 0.022057875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.801400000000125e-05, 'source_diff': 7.801400000000125e-05}, {'time': 0.022187222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.827" endtime="20201110 08:33:30.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:30.832" endtime="20201110 08:33:30.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.849" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.848" endtime="20201110 08:33:30.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.851" level="INFO">VALUE: [7.801400000000125e-05, 7.765300000000044e-05, 7.730599999999921e-05, 7.822199999999932e-05, 7.791700000000026e-05, 7.748600000000161e-05, 7.822199999999932e-05, 7.784699999999894e-05, 7.745800000000247e-05, 7.797199999999907e-05, 7.765300000000044e-05, 7.787500000000155e-05, 7.809799999999867e-05, 7.755600000000293e-05, 7.820799999999975e-05, 7.795800000000297e-05, 7.775000000000143e-05, 7.751399999999728e-05, 7.733299999999887e-05, 7.772199999999882e-05, 7.741600000000029e-05, 7.770799999999925e-05, 7.779200000000014e-05, 7.804199999999692e-05, 7.776399999999753e-05, 7.765300000000044e-05, 7.761099999999826e-05, 7.822199999999932e-05, 7.758299999999912e-05, 7.732000000000225e-05, 7.79030000000007e-05, 7.783299999999937e-05, 7.79579999999995e-05, 7.815299999999747e-05, 7.733300000000234e-05, 7.748599999999814e-05, 7.82229999999988e-05, 7.783299999999937e-05, 7.777800000000057e-05, 7.772300000000176e-05, 7.754199999999989e-05, 7.769399999999968e-05, 7.777800000000057e-05, 7.752800000000032e-05, 7.724999999999746e-05, 7.791700000000026e-05, 7.766700000000001e-05, 7.787499999999808e-05, 7.737500000000105e-05, 7.779100000000067e-05]</msg>
<status status="PASS" starttime="20201110 08:33:30.850" endtime="20201110 08:33:30.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.845" endtime="20201110 08:33:30.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.855" endtime="20201110 08:33:30.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.858" endtime="20201110 08:33:30.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.857" endtime="20201110 08:33:30.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.853" endtime="20201110 08:33:30.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.484" endtime="20201110 08:33:30.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.483" endtime="20201110 08:33:30.879"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.888" endtime="20201110 08:33:30.907"></status>
</kw>
<msg timestamp="20201110 08:33:30.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.886" endtime="20201110 08:33:30.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.908" endtime="20201110 08:33:30.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.910" endtime="20201110 08:33:30.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.884" endtime="20201110 08:33:30.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.882" endtime="20201110 08:33:30.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.921" endtime="20201110 08:33:31.205"></status>
</kw>
<msg timestamp="20201110 08:33:31.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.919" endtime="20201110 08:33:31.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021909194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021988194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.209" endtime="20201110 08:33:31.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.217" endtime="20201110 08:33:31.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.916" endtime="20201110 08:33:31.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.915" endtime="20201110 08:33:31.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.224" level="INFO">${RESULT} = [{'time': 0.021988194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.899999999999921e-05, 'source_diff': 7.899999999999921e-05}, {'time': 0.022122514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.221" endtime="20201110 08:33:31.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:31.225" endtime="20201110 08:33:31.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.242" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.241" endtime="20201110 08:33:31.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.244" level="INFO">VALUE: [7.899999999999921e-05, 7.85969999999997e-05, 7.901400000000225e-05, 7.843100000000033e-05, 7.912499999999933e-05, 7.869500000000015e-05, 7.927800000000207e-05, 7.887499999999908e-05, 7.880600000000071e-05, 7.849999999999871e-05, 7.824999999999846e-05, 7.9151999999999e-05, 7.874999999999896e-05, 7.908299999999716e-05, 7.888899999999865e-05, 7.831999999999978e-05, 7.906999999999706e-05, 7.887499999999908e-05, 7.902800000000182e-05, 7.92229999999998e-05, 7.902700000000235e-05, 7.83190000000003e-05, 7.86389999999984e-05, 7.869500000000015e-05, 7.865300000000144e-05, 7.902799999999835e-05, 7.845899999999947e-05, 7.874999999999896e-05, 7.827800000000107e-05, 7.866700000000101e-05, 7.869500000000015e-05, 7.901399999999878e-05, 7.898599999999964e-05, 7.890299999999822e-05, 7.919400000000118e-05, 7.897200000000007e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.891700000000126e-05, 7.920800000000075e-05, 7.912499999999933e-05, 7.85839999999996e-05, 7.895899999999997e-05, 7.8764000000002e-05, 7.905599999999749e-05, 7.852800000000132e-05, 7.85839999999996e-05, 7.897200000000007e-05, 7.870800000000025e-05, 7.90840000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.243" endtime="20201110 08:33:31.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.238" endtime="20201110 08:33:31.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.248" endtime="20201110 08:33:31.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.251" endtime="20201110 08:33:31.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.250" endtime="20201110 08:33:31.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.246" endtime="20201110 08:33:31.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.880" endtime="20201110 08:33:31.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.880" endtime="20201110 08:33:31.272"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.281" endtime="20201110 08:33:31.300"></status>
</kw>
<msg timestamp="20201110 08:33:31.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.279" endtime="20201110 08:33:31.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.301" endtime="20201110 08:33:31.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.304" endtime="20201110 08:33:31.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.277" endtime="20201110 08:33:31.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.275" endtime="20201110 08:33:31.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.315" endtime="20201110 08:33:31.601"></status>
</kw>
<msg timestamp="20201110 08:33:31.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.313" endtime="20201110 08:33:31.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.605" endtime="20201110 08:33:31.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.613" endtime="20201110 08:33:31.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.310" endtime="20201110 08:33:31.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.309" endtime="20201110 08:33:31.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.620" level="INFO">${RESULT} = [{'time': 0.021879319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.990199999999975e-05, 'source_diff': 7.990199999999975e-05}, {'time': 0.022020611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.616" endtime="20201110 08:33:31.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.679" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:31.621" endtime="20201110 08:33:31.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.684" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.682" endtime="20201110 08:33:31.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.687" level="INFO">VALUE: [7.990199999999975e-05, 7.965299999999897e-05, 7.981899999999834e-05, 7.963799999999993e-05, 8.01389999999999e-05, 8.004100000000292e-05, 7.945900000000047e-05, 8.0152e-05, 8.026400000000003e-05, 7.995900000000097e-05, 7.938899999999915e-05, 7.930600000000121e-05, 7.93190000000013e-05, 7.962499999999983e-05, 7.974999999999996e-05, 7.95129999999998e-05, 7.987500000000008e-05, 8.02230000000008e-05, 8.018099999999861e-05, 8.008300000000163e-05, 7.994499999999793e-05, 7.96389999999994e-05, 7.99030000000027e-05, 7.966699999999854e-05, 7.927800000000207e-05, 7.9458000000001e-05, 7.98329999999979e-05, 7.945799999999753e-05, 7.947200000000057e-05, 7.973600000000039e-05, 8.018099999999861e-05, 7.966599999999907e-05, 7.972200000000082e-05, 8.01389999999999e-05, 7.96389999999994e-05, 7.974999999999996e-05, 7.933400000000035e-05, 7.972199999999735e-05, 8.02779999999996e-05, 7.998600000000064e-05, 7.966700000000201e-05, 7.919500000000065e-05, 7.99450000000014e-05, 7.926399999999903e-05, 7.97779999999991e-05, 7.976399999999953e-05, 7.972200000000082e-05, 7.993099999999836e-05, 8.008300000000163e-05, 8.001399999999978e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.685" endtime="20201110 08:33:31.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.680" endtime="20201110 08:33:31.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.690" endtime="20201110 08:33:31.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.694" endtime="20201110 08:33:31.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.692" endtime="20201110 08:33:31.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.689" endtime="20201110 08:33:31.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.273" endtime="20201110 08:33:31.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.273" endtime="20201110 08:33:31.714"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.723" endtime="20201110 08:33:31.742"></status>
</kw>
<msg timestamp="20201110 08:33:31.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.722" endtime="20201110 08:33:31.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.743" endtime="20201110 08:33:31.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.746" endtime="20201110 08:33:31.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.719" endtime="20201110 08:33:31.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.717" endtime="20201110 08:33:31.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.755" endtime="20201110 08:33:32.041"></status>
</kw>
<msg timestamp="20201110 08:33:32.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.753" endtime="20201110 08:33:32.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.046" endtime="20201110 08:33:32.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.054" endtime="20201110 08:33:32.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.751" endtime="20201110 08:33:32.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.749" endtime="20201110 08:33:32.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.061" level="INFO">${RESULT} = [{'time': 0.021958306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.119499999999918e-05, 'source_diff': 8.119499999999918e-05}, {'time': 0.022097583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.057" endtime="20201110 08:33:32.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.075" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:32.062" endtime="20201110 08:33:32.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.079" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.078" endtime="20201110 08:33:32.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.082" level="INFO">VALUE: [8.119499999999918e-05, 8.105500000000002e-05, 8.099999999999774e-05, 8.055499999999952e-05, 8.06390000000004e-05, 8.07780000000001e-05, 8.036100000000101e-05, 8.055599999999899e-05, 8.067999999999964e-05, 8.069499999999868e-05, 8.038900000000015e-05, 8.025000000000046e-05, 8.070800000000225e-05, 8.029200000000264e-05, 8.056899999999909e-05, 8.106899999999959e-05, 8.075000000000096e-05, 8.045799999999853e-05, 8.062500000000083e-05, 8.027800000000307e-05, 8.10979999999982e-05, 8.056999999999856e-05, 8.025000000000046e-05, 8.026400000000003e-05, 8.066700000000301e-05, 8.075000000000096e-05, 8.080599999999924e-05, 8.037500000000058e-05, 8.099999999999774e-05, 8.108299999999916e-05, 8.050000000000071e-05, 8.02779999999996e-05, 8.075000000000096e-05, 8.034699999999798e-05, 8.025000000000046e-05, 8.080499999999977e-05, 8.026300000000056e-05, 8.097200000000207e-05, 8.083399999999838e-05, 8.112499999999787e-05, 8.090199999999728e-05, 8.07780000000001e-05, 8.101400000000078e-05, 8.081999999999881e-05, 8.072299999999782e-05, 8.08329999999989e-05, 8.048600000000114e-05, 8.069499999999868e-05, 8.055499999999952e-05, 8.112500000000133e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.080" endtime="20201110 08:33:32.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.076" endtime="20201110 08:33:32.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.089" endtime="20201110 08:33:32.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.093" endtime="20201110 08:33:32.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.091" endtime="20201110 08:33:32.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.088" endtime="20201110 08:33:32.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.715" endtime="20201110 08:33:32.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.715" endtime="20201110 08:33:32.114"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.122" endtime="20201110 08:33:32.141"></status>
</kw>
<msg timestamp="20201110 08:33:32.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.121" endtime="20201110 08:33:32.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.143" endtime="20201110 08:33:32.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.145" endtime="20201110 08:33:32.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.118" endtime="20201110 08:33:32.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.116" endtime="20201110 08:33:32.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.154" endtime="20201110 08:33:32.441"></status>
</kw>
<msg timestamp="20201110 08:33:32.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.153" endtime="20201110 08:33:32.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.446" endtime="20201110 08:33:32.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.454" endtime="20201110 08:33:32.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.150" endtime="20201110 08:33:32.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.148" endtime="20201110 08:33:32.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.461" level="INFO">${RESULT} = [{'time': 0.021867361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18329999999999e-05, 'source_diff': 8.18329999999999e-05}, {'time': 0.022012625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:32.458" endtime="20201110 08:33:32.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:32.462" endtime="20201110 08:33:32.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.479" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.478" endtime="20201110 08:33:32.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.481" level="INFO">VALUE: [8.18329999999999e-05, 8.176400000000153e-05, 8.204200000000092e-05, 8.145799999999953e-05, 8.188900000000165e-05, 8.138900000000115e-05, 8.205500000000102e-05, 8.21109999999993e-05, 8.172199999999935e-05, 8.209699999999973e-05, 8.187499999999862e-05, 8.138899999999769e-05, 8.181999999999981e-05, 8.188900000000165e-05, 8.151400000000128e-05, 8.206899999999712e-05, 8.21109999999993e-05, 8.217999999999767e-05, 8.156999999999956e-05, 8.194400000000046e-05, 8.188900000000165e-05, 8.151400000000128e-05, 8.158299999999966e-05, 8.213899999999844e-05, 8.169499999999968e-05, 8.126400000000103e-05, 8.21109999999993e-05, 8.209699999999973e-05, 8.138900000000115e-05, 8.205500000000102e-05, 8.131899999999984e-05, 8.222199999999985e-05, 8.170799999999978e-05, 8.17919999999972e-05, 8.169400000000021e-05, 8.13329999999994e-05, 8.169400000000021e-05, 8.158299999999966e-05, 8.16390000000014e-05, 8.130599999999974e-05, 8.188899999999819e-05, 8.170799999999978e-05, 8.169400000000021e-05, 8.131899999999984e-05, 8.162499999999837e-05, 8.179200000000067e-05, 8.129200000000017e-05, 8.218100000000061e-05, 8.162499999999837e-05, 8.165300000000097e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.480" endtime="20201110 08:33:32.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.475" endtime="20201110 08:33:32.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.485" endtime="20201110 08:33:32.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.489" endtime="20201110 08:33:32.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.487" endtime="20201110 08:33:32.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.483" endtime="20201110 08:33:32.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.114" endtime="20201110 08:33:32.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.114" endtime="20201110 08:33:32.509"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.518" endtime="20201110 08:33:32.537"></status>
</kw>
<msg timestamp="20201110 08:33:32.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.517" endtime="20201110 08:33:32.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.538" endtime="20201110 08:33:32.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.541" endtime="20201110 08:33:32.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.514" endtime="20201110 08:33:32.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.512" endtime="20201110 08:33:32.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.550" endtime="20201110 08:33:32.837"></status>
</kw>
<msg timestamp="20201110 08:33:32.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.549" endtime="20201110 08:33:32.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021693083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.842" endtime="20201110 08:33:32.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.850" endtime="20201110 08:33:32.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.546" endtime="20201110 08:33:32.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.544" endtime="20201110 08:33:32.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.857" level="INFO">${RESULT} = [{'time': 0.021775875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.279200000000167e-05, 'source_diff': 8.279200000000167e-05}, {'time': 0.021923083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.853" endtime="20201110 08:33:32.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.870" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:32.858" endtime="20201110 08:33:32.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.875" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.874" endtime="20201110 08:33:32.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.878" level="INFO">VALUE: [8.279200000000167e-05, 8.313899999999944e-05, 8.222299999999932e-05, 8.2459e-05, 8.287500000000309e-05, 8.305499999999855e-05, 8.26109999999998e-05, 8.299999999999974e-05, 8.299999999999974e-05, 8.230600000000074e-05, 8.23330000000004e-05, 8.243000000000139e-05, 8.255600000000099e-05, 8.312499999999987e-05, 8.307000000000106e-05, 8.251399999999881e-05, 8.244400000000096e-05, 8.274999999999949e-05, 8.319400000000171e-05, 8.231900000000084e-05, 8.238899999999869e-05, 8.269400000000121e-05, 8.2459e-05, 8.262499999999937e-05, 8.263899999999894e-05, 8.224999999999899e-05, 8.320800000000128e-05, 8.251400000000228e-05, 8.268100000000111e-05, 8.274999999999949e-05, 8.280500000000177e-05, 8.244400000000096e-05, 8.298600000000017e-05, 8.223700000000236e-05, 8.225000000000246e-05, 8.301399999999931e-05, 8.255599999999752e-05, 8.3152999999999e-05, 8.286100000000005e-05, 8.287499999999962e-05, 8.230600000000074e-05, 8.299999999999974e-05, 8.251400000000228e-05, 8.284700000000048e-05, 8.292999999999842e-05, 8.295800000000103e-05, 8.230600000000074e-05, 8.293000000000189e-05, 8.230600000000074e-05, 8.287499999999962e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.876" endtime="20201110 08:33:32.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.871" endtime="20201110 08:33:32.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.881" endtime="20201110 08:33:32.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.884" endtime="20201110 08:33:32.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.883" endtime="20201110 08:33:32.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.879" endtime="20201110 08:33:32.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.510" endtime="20201110 08:33:32.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.510" endtime="20201110 08:33:32.905"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.914" endtime="20201110 08:33:32.933"></status>
</kw>
<msg timestamp="20201110 08:33:32.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.912" endtime="20201110 08:33:32.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.934" endtime="20201110 08:33:32.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.937" endtime="20201110 08:33:32.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.910" endtime="20201110 08:33:32.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.908" endtime="20201110 08:33:32.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.946" endtime="20201110 08:33:33.236"></status>
</kw>
<msg timestamp="20201110 08:33:33.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:32.944" endtime="20201110 08:33:33.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:33.241" endtime="20201110 08:33:33.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.249" endtime="20201110 08:33:33.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.942" endtime="20201110 08:33:33.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.940" endtime="20201110 08:33:33.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.256" level="INFO">${RESULT} = [{'time': 0.02180025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.394399999999899e-05, 'source_diff': 8.394399999999899e-05}, {'time': 0.021948514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:33.252" endtime="20201110 08:33:33.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.269" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:33.257" endtime="20201110 08:33:33.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.274" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.273" endtime="20201110 08:33:33.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.276" level="INFO">VALUE: [8.394399999999899e-05, 8.351399999999981e-05, 8.388900000000019e-05, 8.411099999999783e-05, 8.408300000000216e-05, 8.375000000000049e-05, 8.337500000000012e-05, 8.409699999999826e-05, 8.374999999999702e-05, 8.41110000000013e-05, 8.39309999999989e-05, 8.38049999999993e-05, 8.356900000000209e-05, 8.319500000000118e-05, 8.337500000000012e-05, 8.351399999999981e-05, 8.400000000000074e-05, 8.370899999999779e-05, 8.356999999999809e-05, 8.386099999999758e-05, 8.355599999999852e-05, 8.324999999999999e-05, 8.401400000000031e-05, 8.330599999999827e-05, 8.326399999999956e-05, 8.326399999999956e-05, 8.41249999999974e-05, 8.344499999999797e-05, 8.351399999999981e-05, 8.398600000000117e-05, 8.375000000000049e-05, 8.370900000000125e-05, 8.412500000000087e-05, 8.362500000000037e-05, 8.373600000000092e-05, 8.416699999999958e-05, 8.358400000000113e-05, 8.350000000000024e-05, 8.331900000000184e-05, 8.362500000000037e-05, 8.376400000000006e-05, 8.388900000000019e-05, 8.41110000000013e-05, 8.350000000000024e-05, 8.418099999999915e-05, 8.348600000000067e-05, 8.332000000000131e-05, 8.350000000000024e-05, 8.33049999999988e-05, 8.340299999999926e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.275" endtime="20201110 08:33:33.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.270" endtime="20201110 08:33:33.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.280" endtime="20201110 08:33:33.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.283" endtime="20201110 08:33:33.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.282" endtime="20201110 08:33:33.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.278" endtime="20201110 08:33:33.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.906" endtime="20201110 08:33:33.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.906" endtime="20201110 08:33:33.305"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.314" endtime="20201110 08:33:33.332"></status>
</kw>
<msg timestamp="20201110 08:33:33.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.312" endtime="20201110 08:33:33.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.334" endtime="20201110 08:33:33.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.337" endtime="20201110 08:33:33.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.309" endtime="20201110 08:33:33.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.307" endtime="20201110 08:33:33.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.346" endtime="20201110 08:33:33.634"></status>
</kw>
<msg timestamp="20201110 08:33:33.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.345" endtime="20201110 08:33:33.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022393889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.638" endtime="20201110 08:33:33.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.647" endtime="20201110 08:33:33.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.342" endtime="20201110 08:33:33.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.340" endtime="20201110 08:33:33.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.654" level="INFO">${RESULT} = [{'time': 0.022478833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.494399999999999e-05, 'source_diff': 8.494399999999999e-05}, {'time': 0.022612153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.650" endtime="20201110 08:33:33.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.667" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:33.655" endtime="20201110 08:33:33.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.672" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.671" endtime="20201110 08:33:33.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.674" level="INFO">VALUE: [8.494399999999999e-05, 8.504200000000045e-05, 8.448600000000167e-05, 8.444399999999949e-05, 8.437500000000112e-05, 8.476400000000106e-05, 8.470900000000225e-05, 8.500000000000174e-05, 8.487500000000162e-05, 8.499999999999827e-05, 8.462500000000137e-05, 8.475000000000149e-05, 8.444400000000296e-05, 8.505500000000055e-05, 8.445799999999906e-05, 8.501399999999784e-05, 8.495899999999904e-05, 8.436099999999808e-05, 8.481899999999987e-05, 8.508299999999969e-05, 8.487499999999815e-05, 8.455500000000005e-05, 8.444499999999897e-05, 8.495799999999956e-05, 8.463900000000094e-05, 8.441699999999983e-05, 8.506900000000012e-05, 8.473599999999845e-05, 8.473600000000192e-05, 8.472199999999888e-05, 8.463899999999747e-05, 8.451399999999734e-05, 8.483299999999944e-05, 8.508299999999969e-05, 8.495799999999956e-05, 8.487500000000162e-05, 8.519499999999972e-05, 8.519400000000024e-05, 8.450000000000124e-05, 8.488900000000119e-05, 8.444500000000243e-05, 8.477799999999716e-05, 8.441699999999983e-05, 8.431999999999884e-05, 8.524999999999852e-05, 8.500000000000174e-05, 8.426400000000056e-05, 8.473600000000192e-05, 8.470800000000278e-05, 8.51249999999984e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.673" endtime="20201110 08:33:33.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.668" endtime="20201110 08:33:33.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.678" endtime="20201110 08:33:33.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.681" endtime="20201110 08:33:33.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.680" endtime="20201110 08:33:33.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.676" endtime="20201110 08:33:33.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.306" endtime="20201110 08:33:33.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.305" endtime="20201110 08:33:33.702"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.711" endtime="20201110 08:33:33.730"></status>
</kw>
<msg timestamp="20201110 08:33:33.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.709" endtime="20201110 08:33:33.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.731" endtime="20201110 08:33:33.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.734" endtime="20201110 08:33:33.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.707" endtime="20201110 08:33:33.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.705" endtime="20201110 08:33:33.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.743" endtime="20201110 08:33:34.029"></status>
</kw>
<msg timestamp="20201110 08:33:34.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.741" endtime="20201110 08:33:34.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021915528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.033" endtime="20201110 08:33:34.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.042" endtime="20201110 08:33:34.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.739" endtime="20201110 08:33:34.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.737" endtime="20201110 08:33:34.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.048" level="INFO">${RESULT} = [{'time': 0.022001458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.593000000000142e-05, 'source_diff': 8.593000000000142e-05}, {'time': 0.022145736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.045" endtime="20201110 08:33:34.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.062" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:34.049" endtime="20201110 08:33:34.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.066" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.065" endtime="20201110 08:33:34.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.069" level="INFO">VALUE: [8.593000000000142e-05, 8.606899999999765e-05, 8.556899999999715e-05, 8.590299999999829e-05, 8.588899999999872e-05, 8.54310000000004e-05, 8.550000000000224e-05, 8.580499999999783e-05, 8.583300000000044e-05, 8.61249999999994e-05, 8.61249999999994e-05, 8.605500000000155e-05, 8.583300000000044e-05, 8.53050000000008e-05, 8.605600000000102e-05, 8.533299999999994e-05, 8.568100000000065e-05, 8.56249999999989e-05, 8.558399999999966e-05, 8.586099999999958e-05, 8.537499999999865e-05, 8.569500000000022e-05, 8.524999999999852e-05, 8.555500000000105e-05, 8.568000000000117e-05, 8.599999999999927e-05, 8.568000000000117e-05, 8.555499999999758e-05, 8.598699999999918e-05, 8.590299999999829e-05, 8.576399999999859e-05, 8.531900000000037e-05, 8.543000000000092e-05, 8.61249999999994e-05, 8.59859999999997e-05, 8.557000000000009e-05, 8.53050000000008e-05, 8.601399999999884e-05, 8.547199999999963e-05, 8.56119999999988e-05, 8.523599999999895e-05, 8.588900000000219e-05, 8.598600000000317e-05, 8.576400000000206e-05, 8.542999999999745e-05, 8.582000000000034e-05, 8.52920000000007e-05, 8.608400000000016e-05, 8.6153000000002e-05, 8.523599999999895e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.068" endtime="20201110 08:33:34.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.063" endtime="20201110 08:33:34.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.073" endtime="20201110 08:33:34.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.076" endtime="20201110 08:33:34.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.074" endtime="20201110 08:33:34.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.071" endtime="20201110 08:33:34.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.703" endtime="20201110 08:33:34.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.702" endtime="20201110 08:33:34.097"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.106" endtime="20201110 08:33:34.125"></status>
</kw>
<msg timestamp="20201110 08:33:34.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.104" endtime="20201110 08:33:34.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.126" endtime="20201110 08:33:34.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.129" endtime="20201110 08:33:34.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.102" endtime="20201110 08:33:34.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.099" endtime="20201110 08:33:34.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.138" endtime="20201110 08:33:34.424"></status>
</kw>
<msg timestamp="20201110 08:33:34.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.136" endtime="20201110 08:33:34.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.428" endtime="20201110 08:33:34.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.437" endtime="20201110 08:33:34.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.134" endtime="20201110 08:33:34.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.132" endtime="20201110 08:33:34.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.443" level="INFO">${RESULT} = [{'time': 0.021927917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.711100000000083e-05, 'source_diff': 8.711100000000083e-05}, {'time': 0.022074292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.440" endtime="20201110 08:33:34.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:34.444" endtime="20201110 08:33:34.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.461" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.460" endtime="20201110 08:33:34.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.464" level="INFO">VALUE: [8.711100000000083e-05, 8.658399999999719e-05, 8.626400000000256e-05, 8.715299999999954e-05, 8.688899999999972e-05, 8.718100000000215e-05, 8.66249999999999e-05, 8.63059999999978e-05, 8.695800000000156e-05, 8.69310000000019e-05, 8.624999999999952e-05, 8.632000000000084e-05, 8.718100000000215e-05, 8.686099999999711e-05, 8.697199999999766e-05, 8.700000000000027e-05, 8.679199999999873e-05, 8.693099999999843e-05, 8.673599999999698e-05, 8.676399999999959e-05, 8.720800000000181e-05, 8.71660000000031e-05, 8.679099999999926e-05, 8.718099999999868e-05, 8.626399999999909e-05, 8.675000000000002e-05, 8.64310000000014e-05, 8.69860000000007e-05, 8.682000000000134e-05, 8.637499999999965e-05, 8.683300000000144e-05, 8.631900000000137e-05, 8.6847000000001e-05, 8.649999999999977e-05, 8.661100000000033e-05, 8.702699999999994e-05, 8.643099999999793e-05, 8.711099999999736e-05, 8.625000000000299e-05, 8.706899999999865e-05, 8.640199999999931e-05, 8.716700000000258e-05, 8.683399999999744e-05, 8.63059999999978e-05, 8.68050000000023e-05, 8.67920000000022e-05, 8.654099999999901e-05, 8.691700000000233e-05, 8.66249999999999e-05, 8.659800000000023e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.463" endtime="20201110 08:33:34.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.458" endtime="20201110 08:33:34.465"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.468" endtime="20201110 08:33:34.469"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.471" endtime="20201110 08:33:34.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.469" endtime="20201110 08:33:34.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.466" endtime="20201110 08:33:34.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.098" endtime="20201110 08:33:34.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.097" endtime="20201110 08:33:34.492"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.501" endtime="20201110 08:33:34.519"></status>
</kw>
<msg timestamp="20201110 08:33:34.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.499" endtime="20201110 08:33:34.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.521" endtime="20201110 08:33:34.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.524" endtime="20201110 08:33:34.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.496" endtime="20201110 08:33:34.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.494" endtime="20201110 08:33:34.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.533" endtime="20201110 08:33:34.821"></status>
</kw>
<msg timestamp="20201110 08:33:34.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.531" endtime="20201110 08:33:34.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.825" endtime="20201110 08:33:34.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.834" endtime="20201110 08:33:34.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.529" endtime="20201110 08:33:34.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.527" endtime="20201110 08:33:34.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.840" level="INFO">${RESULT} = [{'time': 0.021833583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.797199999999866e-05, 'source_diff': 8.797199999999866e-05}, {'time': 0.021977889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.837" endtime="20201110 08:33:34.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.854" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:34.841" endtime="20201110 08:33:34.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.858" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.857" endtime="20201110 08:33:34.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.861" level="INFO">VALUE: [8.797199999999866e-05, 8.73059999999988e-05, 8.815200000000106e-05, 8.756999999999862e-05, 8.768099999999918e-05, 8.74310000000024e-05, 8.740299999999979e-05, 8.737499999999718e-05, 8.791600000000038e-05, 8.765300000000004e-05, 8.775000000000102e-05, 8.76669999999996e-05, 8.730499999999933e-05, 8.770900000000179e-05, 8.743099999999893e-05, 8.802700000000094e-05, 8.770900000000179e-05, 8.745799999999859e-05, 8.768099999999918e-05, 8.768099999999918e-05, 8.736100000000108e-05, 8.736100000000108e-05, 8.787499999999768e-05, 8.811100000000183e-05, 8.763900000000047e-05, 8.797299999999814e-05, 8.790299999999682e-05, 8.742999999999945e-05, 8.741599999999988e-05, 8.729199999999923e-05, 8.816600000000063e-05, 8.72920000000027e-05, 8.725000000000052e-05, 8.733399999999794e-05, 8.759799999999776e-05, 8.786099999999811e-05, 8.752700000000044e-05, 8.797200000000213e-05, 8.73050000000028e-05, 8.732000000000184e-05, 8.755499999999958e-05, 8.76669999999996e-05, 8.793099999999943e-05, 8.797199999999866e-05, 8.759700000000176e-05, 8.798599999999823e-05, 8.761100000000133e-05, 8.779100000000026e-05, 8.813900000000097e-05, 8.808299999999922e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.859" endtime="20201110 08:33:34.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.855" endtime="20201110 08:33:34.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.864" endtime="20201110 08:33:34.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.868" endtime="20201110 08:33:34.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.866" endtime="20201110 08:33:34.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.863" endtime="20201110 08:33:34.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.493" endtime="20201110 08:33:34.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.492" endtime="20201110 08:33:34.889"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.898" endtime="20201110 08:33:34.917"></status>
</kw>
<msg timestamp="20201110 08:33:34.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.896" endtime="20201110 08:33:34.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.918" endtime="20201110 08:33:34.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.921" endtime="20201110 08:33:34.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.893" endtime="20201110 08:33:34.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.891" endtime="20201110 08:33:34.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.930" endtime="20201110 08:33:35.217"></status>
</kw>
<msg timestamp="20201110 08:33:35.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.928" endtime="20201110 08:33:35.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021902431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.222" endtime="20201110 08:33:35.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.230" endtime="20201110 08:33:35.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.926" endtime="20201110 08:33:35.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.924" endtime="20201110 08:33:35.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.237" level="INFO">${RESULT} = [{'time': 0.021902431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.870899999999932e-05, 'source_diff': 8.870899999999932e-05}, {'time': 0.022056667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.233" endtime="20201110 08:33:35.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.250" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:35.238" endtime="20201110 08:33:35.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.255" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.254" endtime="20201110 08:33:35.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.257" level="INFO">VALUE: [8.870899999999932e-05, 8.915299999999807e-05, 8.829200000000023e-05, 8.83059999999998e-05, 8.827800000000066e-05, 8.884699999999954e-05, 8.854200000000048e-05, 8.81389999999975e-05, 8.851399999999787e-05, 8.836099999999861e-05, 8.831999999999937e-05, 8.892999999999748e-05, 8.886100000000258e-05, 8.858299999999972e-05, 8.834700000000251e-05, 8.859699999999929e-05, 8.834700000000251e-05, 8.854200000000048e-05, 8.856999999999962e-05, 8.836099999999861e-05, 8.830500000000033e-05, 8.861199999999833e-05, 8.841600000000088e-05, 8.858300000000319e-05, 8.827800000000066e-05, 8.911099999999936e-05, 8.908300000000022e-05, 8.897299999999914e-05, 8.847299999999864e-05, 8.848599999999873e-05, 8.852800000000091e-05, 8.902800000000141e-05, 8.905499999999761e-05, 8.870799999999984e-05, 8.886099999999911e-05, 8.823600000000195e-05, 8.840299999999732e-05, 8.884699999999954e-05, 8.859699999999929e-05, 8.911199999999883e-05, 8.847199999999916e-05, 8.902799999999794e-05, 8.877700000000169e-05, 8.893100000000043e-05, 8.830499999999686e-05, 8.916599999999816e-05, 8.895800000000009e-05, 8.879100000000126e-05, 8.915200000000206e-05, 8.877800000000116e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.256" endtime="20201110 08:33:35.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.251" endtime="20201110 08:33:35.259"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.261" endtime="20201110 08:33:35.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.264" endtime="20201110 08:33:35.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.263" endtime="20201110 08:33:35.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.259" endtime="20201110 08:33:35.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.890" endtime="20201110 08:33:35.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.889" endtime="20201110 08:33:35.285"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.294" endtime="20201110 08:33:35.313"></status>
</kw>
<msg timestamp="20201110 08:33:35.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.293" endtime="20201110 08:33:35.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.315" endtime="20201110 08:33:35.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.317" endtime="20201110 08:33:35.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.290" endtime="20201110 08:33:35.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.288" endtime="20201110 08:33:35.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.326" endtime="20201110 08:33:35.613"></status>
</kw>
<msg timestamp="20201110 08:33:35.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.325" endtime="20201110 08:33:35.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022066389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022156667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.618" endtime="20201110 08:33:35.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.626" endtime="20201110 08:33:35.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.322" endtime="20201110 08:33:35.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.321" endtime="20201110 08:33:35.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.633" level="INFO">${RESULT} = [{'time': 0.022156667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027800000000266e-05, 'source_diff': 9.027800000000266e-05}, {'time': 0.022306972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.630" endtime="20201110 08:33:35.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.647" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:35.634" endtime="20201110 08:33:35.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.651" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.650" endtime="20201110 08:33:35.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.654" level="INFO">VALUE: [9.027800000000266e-05, 8.956900000000115e-05, 8.929200000000123e-05, 8.94999999999993e-05, 8.98329999999975e-05, 9.005600000000155e-05, 8.948599999999973e-05, 8.961099999999986e-05, 8.986100000000011e-05, 9.012499999999993e-05, 8.940299999999832e-05, 8.977799999999869e-05, 8.988899999999925e-05, 9.005499999999861e-05, 8.959700000000029e-05, 8.970800000000084e-05, 8.958300000000072e-05, 8.984699999999707e-05, 8.988899999999925e-05, 8.984700000000054e-05, 9.013900000000297e-05, 8.992999999999848e-05, 8.920800000000034e-05, 8.976399999999912e-05, 8.96670000000016e-05, 8.987500000000315e-05, 8.945800000000059e-05, 8.966600000000213e-05, 8.954200000000148e-05, 8.984699999999707e-05, 8.936099999999961e-05, 8.934700000000004e-05, 8.973599999999998e-05, 8.958300000000072e-05, 8.972200000000041e-05, 8.973599999999998e-05, 8.990299999999882e-05, 8.987499999999968e-05, 8.954200000000148e-05, 9.004200000000198e-05, 8.955499999999811e-05, 8.919400000000077e-05, 8.948599999999973e-05, 9.004099999999904e-05, 8.990299999999882e-05, 8.968100000000118e-05, 8.927799999999819e-05, 8.938900000000222e-05, 8.954100000000201e-05, 8.959700000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.652" endtime="20201110 08:33:35.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.648" endtime="20201110 08:33:35.655"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.657" endtime="20201110 08:33:35.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.661" endtime="20201110 08:33:35.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.659" endtime="20201110 08:33:35.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.656" endtime="20201110 08:33:35.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.286" endtime="20201110 08:33:35.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.286" endtime="20201110 08:33:35.682"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.690" endtime="20201110 08:33:35.710"></status>
</kw>
<msg timestamp="20201110 08:33:35.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.689" endtime="20201110 08:33:35.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.711" endtime="20201110 08:33:35.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.714" endtime="20201110 08:33:35.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.686" endtime="20201110 08:33:35.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.684" endtime="20201110 08:33:35.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.723" endtime="20201110 08:33:36.009"></status>
</kw>
<msg timestamp="20201110 08:33:36.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.721" endtime="20201110 08:33:36.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021854278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021945486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.013" endtime="20201110 08:33:36.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.021" endtime="20201110 08:33:36.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.719" endtime="20201110 08:33:36.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.717" endtime="20201110 08:33:36.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.028" level="INFO">${RESULT} = [{'time': 0.021945486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.120799999999887e-05, 'source_diff': 9.120799999999887e-05}, {'time': 0.02208775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:36.025" endtime="20201110 08:33:36.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:36.029" endtime="20201110 08:33:36.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.046" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.045" endtime="20201110 08:33:36.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.049" level="INFO">VALUE: [9.120799999999887e-05, 9.031899999999843e-05, 9.083300000000197e-05, 9.022200000000091e-05, 9.086100000000111e-05, 9.044400000000202e-05, 9.095799999999862e-05, 9.065299999999957e-05, 9.088900000000025e-05, 9.090299999999982e-05, 9.097300000000114e-05, 9.027799999999919e-05, 9.031899999999843e-05, 9.052799999999944e-05, 9.031899999999843e-05, 9.072200000000141e-05, 9.059699999999782e-05, 9.052799999999944e-05, 9.047199999999769e-05, 9.026399999999962e-05, 9.044400000000202e-05, 9.088900000000025e-05, 9.022200000000091e-05, 9.11520000000006e-05, 9.020899999999735e-05, 9.047200000000116e-05, 9.045900000000107e-05, 9.057000000000162e-05, 9.051400000000334e-05, 9.052800000000291e-05, 9.079199999999926e-05, 9.027800000000266e-05, 9.033300000000147e-05, 9.0639e-05, 9.019400000000177e-05, 9.108299999999875e-05, 9.068099999999871e-05, 9.08190000000024e-05, 9.020899999999735e-05, 9.075000000000055e-05, 9.027799999999919e-05, 9.083400000000144e-05, 9.076400000000012e-05, 9.045900000000107e-05, 9.090299999999982e-05, 9.066599999999966e-05, 9.088900000000025e-05, 9.108400000000169e-05, 9.051399999999987e-05, 9.05000000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.047" endtime="20201110 08:33:36.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.043" endtime="20201110 08:33:36.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.052" endtime="20201110 08:33:36.054"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.056" endtime="20201110 08:33:36.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.054" endtime="20201110 08:33:36.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.051" endtime="20201110 08:33:36.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.683" endtime="20201110 08:33:36.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.682" endtime="20201110 08:33:36.077"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.085" endtime="20201110 08:33:36.105"></status>
</kw>
<msg timestamp="20201110 08:33:36.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.084" endtime="20201110 08:33:36.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.106" endtime="20201110 08:33:36.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.109" endtime="20201110 08:33:36.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.081" endtime="20201110 08:33:36.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.079" endtime="20201110 08:33:36.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.118" endtime="20201110 08:33:36.405"></status>
</kw>
<msg timestamp="20201110 08:33:36.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.116" endtime="20201110 08:33:36.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.409" endtime="20201110 08:33:36.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.418" endtime="20201110 08:33:36.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.114" endtime="20201110 08:33:36.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.112" endtime="20201110 08:33:36.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.425" level="INFO">${RESULT} = [{'time': 0.021887028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.220899999999935e-05, 'source_diff': 9.220899999999935e-05}, {'time': 0.022028319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.421" endtime="20201110 08:33:36.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.438" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:36.426" endtime="20201110 08:33:36.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.443" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.442" endtime="20201110 08:33:36.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.445" level="INFO">VALUE: [9.220899999999935e-05, 9.129100000000029e-05, 9.14719999999987e-05, 9.204100000000104e-05, 9.131899999999943e-05, 9.14719999999987e-05, 9.15000000000013e-05, 9.21390000000015e-05, 9.184699999999907e-05, 9.155500000000011e-05, 9.156999999999915e-05, 9.198600000000223e-05, 9.184699999999907e-05, 9.194499999999953e-05, 9.190200000000134e-05, 9.152800000000044e-05, 9.212500000000193e-05, 9.120800000000234e-05, 9.169400000000327e-05, 9.14870000000012e-05, 9.149999999999783e-05, 9.166699999999667e-05, 9.16939999999998e-05, 9.136199999999761e-05, 9.126400000000062e-05, 9.141699999999989e-05, 9.206999999999965e-05, 9.194499999999953e-05, 9.127800000000019e-05, 9.159699999999882e-05, 9.215300000000107e-05, 9.120799999999887e-05, 9.198599999999876e-05, 9.186099999999864e-05, 9.148600000000173e-05, 9.122199999999844e-05, 9.122199999999844e-05, 9.14719999999987e-05, 9.136099999999814e-05, 9.211200000000183e-05, 9.133300000000247e-05, 9.152700000000097e-05, 9.205600000000008e-05, 9.190200000000134e-05, 9.212499999999846e-05, 9.20000000000018e-05, 9.209699999999932e-05, 9.127800000000019e-05, 9.170799999999937e-05, 9.204100000000104e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.444" endtime="20201110 08:33:36.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.439" endtime="20201110 08:33:36.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.449" endtime="20201110 08:33:36.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.452" endtime="20201110 08:33:36.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.451" endtime="20201110 08:33:36.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.447" endtime="20201110 08:33:36.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.078" endtime="20201110 08:33:36.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.077" endtime="20201110 08:33:36.473"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.482" endtime="20201110 08:33:36.501"></status>
</kw>
<msg timestamp="20201110 08:33:36.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.480" endtime="20201110 08:33:36.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.502" endtime="20201110 08:33:36.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.505" endtime="20201110 08:33:36.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.478" endtime="20201110 08:33:36.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.475" endtime="20201110 08:33:36.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.514" endtime="20201110 08:33:36.799"></status>
</kw>
<msg timestamp="20201110 08:33:36.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.512" endtime="20201110 08:33:36.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021816319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.804" endtime="20201110 08:33:36.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.812" endtime="20201110 08:33:36.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.510" endtime="20201110 08:33:36.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.508" endtime="20201110 08:33:36.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.819" level="INFO">${RESULT} = [{'time': 0.021908958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.263899999999853e-05, 'source_diff': 9.263899999999853e-05}, {'time': 0.022049264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.816" endtime="20201110 08:33:36.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.832" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:36.820" endtime="20201110 08:33:36.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.837" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.836" endtime="20201110 08:33:36.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.839" level="INFO">VALUE: [9.263899999999853e-05, 9.236099999999914e-05, 9.244500000000003e-05, 9.276399999999865e-05, 9.262499999999896e-05, 9.2333e-05, 9.245800000000012e-05, 9.298599999999976e-05, 9.215300000000107e-05, 9.248599999999926e-05, 9.226299999999868e-05, 9.231900000000043e-05, 9.31529999999986e-05, 9.270800000000037e-05, 9.302799999999847e-05, 9.266700000000114e-05, 9.304099999999857e-05, 9.240299999999785e-05, 9.294400000000105e-05, 9.261099999999939e-05, 9.306899999999771e-05, 9.234699999999957e-05, 9.223600000000248e-05, 9.233399999999947e-05, 9.252799999999797e-05, 9.252800000000144e-05, 9.311099999999989e-05, 9.243100000000046e-05, 9.283399999999997e-05, 9.220799999999987e-05, 9.226400000000162e-05, 9.298599999999976e-05, 9.227800000000119e-05, 9.295800000000062e-05, 9.311199999999936e-05, 9.243000000000098e-05, 9.220799999999987e-05, 9.308300000000075e-05, 9.259699999999982e-05, 9.295800000000062e-05, 9.25139999999984e-05, 9.304100000000204e-05, 9.252799999999797e-05, 9.229200000000076e-05, 9.237499999999871e-05, 9.265300000000157e-05, 9.227799999999772e-05, 9.230600000000033e-05, 9.256900000000068e-05, 9.315300000000207e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.838" endtime="20201110 08:33:36.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.833" endtime="20201110 08:33:36.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.843" endtime="20201110 08:33:36.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.847" endtime="20201110 08:33:36.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.845" endtime="20201110 08:33:36.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.841" endtime="20201110 08:33:36.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.474" endtime="20201110 08:33:36.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.473" endtime="20201110 08:33:36.867"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.876" endtime="20201110 08:33:36.896"></status>
</kw>
<msg timestamp="20201110 08:33:36.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.875" endtime="20201110 08:33:36.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.897" endtime="20201110 08:33:36.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.899" endtime="20201110 08:33:36.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.872" endtime="20201110 08:33:36.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.870" endtime="20201110 08:33:36.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.909" endtime="20201110 08:33:37.195"></status>
</kw>
<msg timestamp="20201110 08:33:37.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.907" endtime="20201110 08:33:37.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.199" endtime="20201110 08:33:37.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.207" endtime="20201110 08:33:37.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.904" endtime="20201110 08:33:37.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.903" endtime="20201110 08:33:37.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.214" level="INFO">${RESULT} = [{'time': 0.021907264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.41529999999996e-05, 'source_diff': 9.41529999999996e-05}, {'time': 0.022049569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:37.211" endtime="20201110 08:33:37.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.228" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:37.215" endtime="20201110 08:33:37.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.232" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.231" endtime="20201110 08:33:37.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.235" level="INFO">VALUE: [9.41529999999996e-05, 9.373600000000051e-05, 9.341699999999842e-05, 9.322299999999992e-05, 9.376399999999965e-05, 9.358300000000125e-05, 9.416699999999917e-05, 9.411099999999742e-05, 9.354199999999854e-05, 9.381900000000193e-05, 9.397199999999772e-05, 9.38339999999975e-05, 9.334700000000057e-05, 9.391700000000239e-05, 9.373600000000051e-05, 9.368100000000171e-05, 9.361100000000039e-05, 9.402799999999947e-05, 9.386100000000064e-05, 9.395800000000162e-05, 9.38200000000014e-05, 9.36529999999991e-05, 9.356899999999821e-05, 9.322200000000044e-05, 9.322299999999992e-05, 9.416699999999917e-05, 9.370899999999738e-05, 9.408299999999828e-05, 9.336100000000014e-05, 9.322299999999992e-05, 9.401300000000043e-05, 9.327800000000219e-05, 9.409699999999785e-05, 9.347300000000017e-05, 9.356900000000168e-05, 9.322200000000044e-05, 9.361100000000039e-05, 9.363899999999953e-05, 9.390199999999987e-05, 9.352800000000244e-05, 9.35139999999994e-05, 9.320900000000035e-05, 9.358400000000072e-05, 9.386099999999717e-05, 9.355600000000158e-05, 9.334700000000057e-05, 9.343000000000198e-05, 9.344500000000103e-05, 9.33200000000009e-05, 9.330599999999786e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.233" endtime="20201110 08:33:37.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.229" endtime="20201110 08:33:37.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.244" endtime="20201110 08:33:37.245"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.247" endtime="20201110 08:33:37.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.246" endtime="20201110 08:33:37.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.242" endtime="20201110 08:33:37.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.868" endtime="20201110 08:33:37.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.868" endtime="20201110 08:33:37.268"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.277" endtime="20201110 08:33:37.296"></status>
</kw>
<msg timestamp="20201110 08:33:37.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.275" endtime="20201110 08:33:37.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.298" endtime="20201110 08:33:37.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.300" endtime="20201110 08:33:37.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.273" endtime="20201110 08:33:37.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.271" endtime="20201110 08:33:37.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.309" endtime="20201110 08:33:37.597"></status>
</kw>
<msg timestamp="20201110 08:33:37.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.308" endtime="20201110 08:33:37.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.601" endtime="20201110 08:33:37.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.610" endtime="20201110 08:33:37.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.305" endtime="20201110 08:33:37.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.303" endtime="20201110 08:33:37.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.616" level="INFO">${RESULT} = [{'time': 0.021926236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.490300000000035e-05, 'source_diff': 9.490300000000035e-05}, {'time': 0.022067514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.613" endtime="20201110 08:33:37.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.630" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:37.617" endtime="20201110 08:33:37.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.635" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.634" endtime="20201110 08:33:37.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.638" level="INFO">VALUE: [9.490300000000035e-05, 9.426400000000015e-05, 9.431899999999896e-05, 9.437499999999724e-05, 9.433299999999853e-05, 9.51530000000006e-05, 9.509700000000232e-05, 9.42079999999984e-05, 9.469399999999933e-05, 9.483299999999903e-05, 9.51530000000006e-05, 9.487500000000121e-05, 9.42079999999984e-05, 9.500000000000133e-05, 9.45270000000005e-05, 9.48339999999985e-05, 9.502800000000047e-05, 9.473600000000151e-05, 9.433400000000147e-05, 9.454100000000007e-05, 9.470800000000237e-05, 9.473599999999804e-05, 9.457000000000215e-05, 9.48469999999986e-05, 9.476400000000065e-05, 9.51660000000007e-05, 9.480499999999989e-05, 9.426400000000015e-05, 9.43469999999981e-05, 9.429099999999982e-05, 9.502800000000047e-05, 9.46530000000001e-05, 9.498600000000176e-05, 9.501399999999743e-05, 9.420800000000187e-05, 9.494500000000253e-05, 9.427700000000025e-05, 9.511199999999789e-05, 9.463900000000053e-05, 9.45140000000004e-05, 9.444399999999908e-05, 9.466699999999967e-05, 9.484799999999807e-05, 9.500000000000133e-05, 9.494499999999906e-05, 9.456899999999921e-05, 9.513900000000103e-05, 9.456899999999921e-05, 9.506999999999918e-05, 9.419500000000178e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.636" endtime="20201110 08:33:37.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.631" endtime="20201110 08:33:37.639"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.641" endtime="20201110 08:33:37.642"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.645" endtime="20201110 08:33:37.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.643" endtime="20201110 08:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.640" endtime="20201110 08:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.269" endtime="20201110 08:33:37.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.268" endtime="20201110 08:33:37.666"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.674" endtime="20201110 08:33:37.694"></status>
</kw>
<msg timestamp="20201110 08:33:37.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.673" endtime="20201110 08:33:37.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.695" endtime="20201110 08:33:37.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.698" endtime="20201110 08:33:37.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.670" endtime="20201110 08:33:37.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.668" endtime="20201110 08:33:37.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.707" endtime="20201110 08:33:37.995"></status>
</kw>
<msg timestamp="20201110 08:33:37.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.705" endtime="20201110 08:33:37.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.999" endtime="20201110 08:33:38.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.008" endtime="20201110 08:33:38.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.703" endtime="20201110 08:33:38.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.701" endtime="20201110 08:33:38.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.015" level="INFO">${RESULT} = [{'time': 0.021998319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.59019999999984e-05, 'source_diff': 9.59019999999984e-05}, {'time': 0.022143569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:38.011" endtime="20201110 08:33:38.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.028" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:38.016" endtime="20201110 08:33:38.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.033" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.032" endtime="20201110 08:33:38.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.035" level="INFO">VALUE: [9.59019999999984e-05, 9.609699999999985e-05, 9.545799999999965e-05, 9.534799999999857e-05, 9.613899999999856e-05, 9.5333999999999e-05, 9.595800000000015e-05, 9.552800000000097e-05, 9.520899999999888e-05, 9.572199999999947e-05, 9.615199999999866e-05, 9.531899999999996e-05, 9.604199999999757e-05, 9.53469999999991e-05, 9.5333999999999e-05, 9.558299999999978e-05, 9.531899999999996e-05, 9.569499999999981e-05, 9.520800000000287e-05, 9.558299999999978e-05, 9.519499999999931e-05, 9.55140000000014e-05, 9.540300000000085e-05, 9.594400000000058e-05, 9.556999999999968e-05, 9.601399999999843e-05, 9.612499999999899e-05, 9.558299999999978e-05, 9.613799999999909e-05, 9.531899999999996e-05, 9.550000000000183e-05, 9.540300000000085e-05, 9.538900000000128e-05, 9.558299999999978e-05, 9.53880000000018e-05, 9.566700000000067e-05, 9.519399999999983e-05, 9.595800000000015e-05, 9.53469999999991e-05, 9.613900000000203e-05, 9.55279999999975e-05, 9.608300000000028e-05, 9.536099999999867e-05, 9.58339999999995e-05, 9.543099999999999e-05, 9.569400000000033e-05, 9.586100000000264e-05, 9.591599999999798e-05, 9.559799999999882e-05, 9.548600000000226e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.034" endtime="20201110 08:33:38.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.029" endtime="20201110 08:33:38.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.039" endtime="20201110 08:33:38.040"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.042" endtime="20201110 08:33:38.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.041" endtime="20201110 08:33:38.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.037" endtime="20201110 08:33:38.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.667" endtime="20201110 08:33:38.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.666" endtime="20201110 08:33:38.063"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.072" endtime="20201110 08:33:38.091"></status>
</kw>
<msg timestamp="20201110 08:33:38.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.070" endtime="20201110 08:33:38.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.093" endtime="20201110 08:33:38.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.095" endtime="20201110 08:33:38.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.068" endtime="20201110 08:33:38.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.066" endtime="20201110 08:33:38.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.110" endtime="20201110 08:33:38.398"></status>
</kw>
<msg timestamp="20201110 08:33:38.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.108" endtime="20201110 08:33:38.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.403" endtime="20201110 08:33:38.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.411" endtime="20201110 08:33:38.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.103" endtime="20201110 08:33:38.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.100" endtime="20201110 08:33:38.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.418" level="INFO">${RESULT} = [{'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.7027999999999e-05, 'source_diff': 9.7027999999999e-05}, {'time': 0.021998847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201110 08:33:38.414" endtime="20201110 08:33:38.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.432" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:38.419" endtime="20201110 08:33:38.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.437" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.436" endtime="20201110 08:33:38.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.439" level="INFO">VALUE: [9.7027999999999e-05, 9.688899999999931e-05, 9.7027000000003e-05, 9.707000000000118e-05, 9.63470000000001e-05, 9.665299999999863e-05, 9.641599999999848e-05, 9.677800000000222e-05, 9.676400000000265e-05, 9.659700000000035e-05, 9.706899999999824e-05, 9.656900000000121e-05, 9.661099999999992e-05, 9.641700000000142e-05, 9.622199999999997e-05, 9.633300000000053e-05, 9.672200000000047e-05, 9.683300000000103e-05, 9.652699999999903e-05, 9.652800000000197e-05, 9.651399999999893e-05, 9.662499999999949e-05, 9.641699999999795e-05, 9.627699999999878e-05, 9.69860000000003e-05, 9.640299999999838e-05, 9.622199999999997e-05, 9.651399999999893e-05, 9.629199999999782e-05, 9.715299999999913e-05, 9.677799999999875e-05, 9.665299999999863e-05, 9.670899999999691e-05, 9.71530000000026e-05, 9.636099999999967e-05, 9.665299999999863e-05, 9.623599999999954e-05, 9.684800000000007e-05, 9.644500000000056e-05, 9.672200000000047e-05, 9.63470000000001e-05, 9.650000000000283e-05, 9.713899999999956e-05, 9.619400000000083e-05, 9.66530000000021e-05, 9.622199999999997e-05, 9.619400000000083e-05, 9.712499999999999e-05, 9.641600000000194e-05, 9.701399999999943e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.438" endtime="20201110 08:33:38.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.433" endtime="20201110 08:33:38.441"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.443" endtime="20201110 08:33:38.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.447" endtime="20201110 08:33:38.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.445" endtime="20201110 08:33:38.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.441" endtime="20201110 08:33:38.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.064" endtime="20201110 08:33:38.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.064" endtime="20201110 08:33:38.467"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.476" endtime="20201110 08:33:38.496"></status>
</kw>
<msg timestamp="20201110 08:33:38.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.475" endtime="20201110 08:33:38.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.497" endtime="20201110 08:33:38.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.500" endtime="20201110 08:33:38.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.472" endtime="20201110 08:33:38.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.470" endtime="20201110 08:33:38.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.509" endtime="20201110 08:33:38.796"></status>
</kw>
<msg timestamp="20201110 08:33:38.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:33:38.507" endtime="20201110 08:33:38.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172, 'source': 'DUT_IC', 'event': 'FALLING'...</msg>
<status status="PASS" starttime="20201110 08:33:38.800" endtime="20201110 08:33:38.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.808" endtime="20201110 08:33:38.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.505" endtime="20201110 08:33:38.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.503" endtime="20201110 08:33:38.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.815" level="INFO">${RESULT} = [{'time': 0.022172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.750000000000036e-05, 'source_diff': 9.750000000000036e-05}, {'time': 0.022319236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:38.812" endtime="20201110 08:33:38.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.829" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:38.816" endtime="20201110 08:33:38.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.834" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.833" endtime="20201110 08:33:38.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.837" level="INFO">VALUE: [9.750000000000036e-05, 9.777799999999975e-05, 9.794400000000258e-05, 9.72080000000014e-05, 9.780600000000236e-05, 9.744499999999809e-05, 9.737500000000024e-05, 9.812499999999752e-05, 9.773700000000052e-05, 9.795799999999869e-05, 9.720900000000088e-05, 9.75279999999995e-05, 9.770899999999791e-05, 9.743100000000199e-05, 9.74860000000008e-05, 9.8028e-05, 9.744400000000208e-05, 9.765299999999963e-05, 9.776400000000018e-05, 9.800000000000086e-05, 9.787499999999727e-05, 9.790299999999988e-05, 9.8028e-05, 9.768100000000224e-05, 9.775000000000061e-05, 9.788899999999684e-05, 9.794399999999912e-05, 9.726399999999968e-05, 9.737500000000024e-05, 9.727799999999925e-05, 9.768100000000224e-05, 9.788900000000031e-05, 9.725000000000011e-05, 9.733300000000153e-05, 9.71799999999988e-05, 9.763900000000006e-05, 9.744399999999862e-05, 9.812500000000099e-05, 9.750000000000036e-05, 9.75279999999995e-05, 9.8028e-05, 9.794499999999859e-05, 9.777700000000028e-05, 9.758300000000178e-05, 9.800000000000086e-05, 9.794399999999912e-05, 9.765299999999963e-05, 9.775000000000061e-05, 9.801400000000043e-05, 9.731999999999796e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.835" endtime="20201110 08:33:38.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.830" endtime="20201110 08:33:38.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.840" endtime="20201110 08:33:38.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.843" endtime="20201110 08:33:38.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.842" endtime="20201110 08:33:38.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.838" endtime="20201110 08:33:38.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.468" endtime="20201110 08:33:38.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.468" endtime="20201110 08:33:38.864"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.873" endtime="20201110 08:33:38.893"></status>
</kw>
<msg timestamp="20201110 08:33:38.893" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.871" endtime="20201110 08:33:38.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.894" endtime="20201110 08:33:38.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.897" endtime="20201110 08:33:38.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.869" endtime="20201110 08:33:38.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.867" endtime="20201110 08:33:38.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.906" endtime="20201110 08:33:39.193"></status>
</kw>
<msg timestamp="20201110 08:33:39.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.904" endtime="20201110 08:33:39.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.197" endtime="20201110 08:33:39.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.206" endtime="20201110 08:33:39.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.902" endtime="20201110 08:33:39.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.900" endtime="20201110 08:33:39.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.212" level="INFO">${RESULT} = [{'time': 0.021849028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.869499999999934e-05, 'source_diff': 9.869499999999934e-05}, {'time': 0.02201225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:39.209" endtime="20201110 08:33:39.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.227" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:39.213" endtime="20201110 08:33:39.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.231" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.230" endtime="20201110 08:33:39.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.234" level="INFO">VALUE: [9.869499999999934e-05, 9.904200000000057e-05, 9.881999999999946e-05, 9.837500000000124e-05, 9.838900000000081e-05, 9.88470000000026e-05, 9.823600000000154e-05, 9.845799999999919e-05, 9.869399999999987e-05, 9.874999999999814e-05, 9.862500000000149e-05, 9.887500000000174e-05, 9.856899999999974e-05, 9.865300000000063e-05, 9.913900000000156e-05, 9.843099999999952e-05, 9.894400000000012e-05, 9.906900000000024e-05, 9.920799999999994e-05, 9.826400000000068e-05, 9.845799999999919e-05, 9.874999999999814e-05, 9.88470000000026e-05, 9.91670000000007e-05, 9.901400000000143e-05, 9.856899999999974e-05, 9.837499999999777e-05, 9.883399999999903e-05, 9.894400000000012e-05, 9.870899999999891e-05, 9.868099999999977e-05, 9.854200000000007e-05, 9.83059999999994e-05, 9.855500000000017e-05, 9.873599999999857e-05, 9.838799999999787e-05, 9.898599999999882e-05, 9.81669999999997e-05, 9.863899999999759e-05, 9.843099999999952e-05, 9.843000000000005e-05, 9.891700000000045e-05, 9.856999999999921e-05, 9.89999999999984e-05, 9.89860000000023e-05, 9.83059999999994e-05, 9.909699999999938e-05, 9.819399999999937e-05, 9.85280000000005e-05, 9.812500000000099e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.232" endtime="20201110 08:33:39.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.228" endtime="20201110 08:33:39.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.238" endtime="20201110 08:33:39.239"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.241" endtime="20201110 08:33:39.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.239" endtime="20201110 08:33:39.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.236" endtime="20201110 08:33:39.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.865" endtime="20201110 08:33:39.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.865" endtime="20201110 08:33:39.262"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.270" endtime="20201110 08:33:39.290"></status>
</kw>
<msg timestamp="20201110 08:33:39.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.269" endtime="20201110 08:33:39.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.292" endtime="20201110 08:33:39.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.294" endtime="20201110 08:33:39.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.266" endtime="20201110 08:33:39.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.264" endtime="20201110 08:33:39.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.303" endtime="20201110 08:33:39.591"></status>
</kw>
<msg timestamp="20201110 08:33:39.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.301" endtime="20201110 08:33:39.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021677736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.595" endtime="20201110 08:33:39.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.603" endtime="20201110 08:33:39.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.299" endtime="20201110 08:33:39.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.297" endtime="20201110 08:33:39.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.610" level="INFO">${RESULT} = [{'time': 0.021777597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.98609999999997e-05, 'source_diff': 9.98609999999997e-05}, {'time': 0.021939806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:39.607" endtime="20201110 08:33:39.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.624" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:39.611" endtime="20201110 08:33:39.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.629" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.628" endtime="20201110 08:33:39.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.631" level="INFO">VALUE: [9.98609999999997e-05, 9.93060000000004e-05, 9.947199999999976e-05, 9.950000000000236e-05, 9.974999999999914e-05, 9.992999999999808e-05, 0.00010001399999999896, 9.925000000000211e-05, 9.942999999999758e-05, 9.973599999999957e-05, 9.969500000000034e-05, 9.977799999999828e-05, 9.976399999999871e-05, 9.955600000000064e-05, 9.943100000000052e-05, 9.96800000000013e-05, 0.00010001299999999949, 9.965299999999816e-05, 9.925000000000211e-05, 9.924999999999864e-05, 9.963899999999859e-05, 9.96800000000013e-05, 9.988899999999884e-05, 0.00010006900000000124, 9.988900000000231e-05, 9.988900000000231e-05, 9.931900000000049e-05, 9.987499999999927e-05, 9.981900000000099e-05, 9.969499999999687e-05, 9.955600000000064e-05, 0.00010007000000000071, 0.00010006900000000124, 9.925000000000211e-05, 9.99999999999994e-05, 9.997299999999973e-05, 0.00010009700000000038, 9.974999999999914e-05, 9.969400000000087e-05, 9.951399999999846e-05, 9.945899999999966e-05, 9.956899999999727e-05, 9.93609999999992e-05, 9.944400000000062e-05, 0.00010005599999999767, 9.941600000000148e-05, 9.979100000000185e-05, 9.966599999999826e-05, 9.963899999999859e-05, 9.934800000000257e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.630" endtime="20201110 08:33:39.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.625" endtime="20201110 08:33:39.633"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.635" endtime="20201110 08:33:39.637"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.639" endtime="20201110 08:33:39.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.637" endtime="20201110 08:33:39.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.633" endtime="20201110 08:33:39.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.263" endtime="20201110 08:33:39.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.262" endtime="20201110 08:33:39.660"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.669" endtime="20201110 08:33:39.689"></status>
</kw>
<msg timestamp="20201110 08:33:39.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.667" endtime="20201110 08:33:39.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.690" endtime="20201110 08:33:39.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.693" endtime="20201110 08:33:39.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.665" endtime="20201110 08:33:39.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.662" endtime="20201110 08:33:39.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.702" endtime="20201110 08:33:39.988"></status>
</kw>
<msg timestamp="20201110 08:33:39.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.700" endtime="20201110 08:33:39.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022599861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.992" endtime="20201110 08:33:39.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.000" endtime="20201110 08:33:40.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.698" endtime="20201110 08:33:40.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.696" endtime="20201110 08:33:40.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.007" level="INFO">${RESULT} = [{'time': 0.022599861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001010419999999991, 'source_diff': 0.0001010419999999991}, {'time': 0.022760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:40.003" endtime="20201110 08:33:40.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.021" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:40.008" endtime="20201110 08:33:40.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.025" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.024" endtime="20201110 08:33:40.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.028" level="INFO">VALUE: [0.0001010419999999991, 0.0001010549999999992, 0.00010020800000000094, 0.00010044500000000109, 0.00010031899999999802, 0.00010047200000000076, 0.00010070799999999797, 0.0001006939999999984, 0.0001008060000000019, 0.00010066699999999873, 0.00010016699999999823, 0.0001005419999999986, 0.00010052799999999903, 0.0001010549999999992, 0.00010067999999999883, 0.00010112500000000052, 0.00010108299999999834, 0.00010090299999999941, 0.00010045800000000119, 0.00010048600000000033, 0.00010051299999999999, 0.00010042999999999858, 0.00010084700000000113, 0.00010045799999999772, 0.00010079099999999938, 0.00010023600000000008, 0.00010092999999999908, 0.00010106899999999877, 0.00010106899999999877, 0.00010026399999999921, 0.0001008749999999968, 0.00010065299999999916, 0.00010105599999999867, 0.00010051399999999946, 0.00010106900000000224, 0.00010019400000000137, 0.00010111099999999748, 0.0001004999999999999, 0.00010076400000000318, 0.00010031900000000149, 0.00010088899999999984, 0.00010070800000000144, 0.00010075000000000014, 0.00010032000000000096, 0.0001005549999999987, 0.00010093099999999855, 0.0001003610000000002, 0.00010112500000000052, 0.00010061100000000045, 0.00010059699999999741]</msg>
<status status="PASS" starttime="20201110 08:33:40.026" endtime="20201110 08:33:40.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.022" endtime="20201110 08:33:40.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.031" endtime="20201110 08:33:40.033"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.035" endtime="20201110 08:33:40.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.033" endtime="20201110 08:33:40.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.030" endtime="20201110 08:33:40.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.661" endtime="20201110 08:33:40.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.660" endtime="20201110 08:33:40.056"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.064" endtime="20201110 08:33:40.084"></status>
</kw>
<msg timestamp="20201110 08:33:40.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.063" endtime="20201110 08:33:40.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.085" endtime="20201110 08:33:40.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.088" endtime="20201110 08:33:40.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.060" endtime="20201110 08:33:40.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.058" endtime="20201110 08:33:40.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.097" endtime="20201110 08:33:40.384"></status>
</kw>
<msg timestamp="20201110 08:33:40.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.095" endtime="20201110 08:33:40.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021694069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.389" endtime="20201110 08:33:40.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.397" endtime="20201110 08:33:40.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.093" endtime="20201110 08:33:40.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.091" endtime="20201110 08:33:40.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.403" level="INFO">${RESULT} = [{'time': 0.021795667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010159800000000135, 'source_diff': 0.00010159800000000135}, {'time': 0.021952847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.400" endtime="20201110 08:33:40.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.416" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:40.404" endtime="20201110 08:33:40.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.422" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.421" endtime="20201110 08:33:40.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.424" level="INFO">VALUE: [0.00010159800000000135, 0.00010163900000000059, 0.00010211099999999848, 0.0001013749999999973, 0.0001015549999999997, 0.00010125000000000065, 0.0001015419999999996, 0.0001011809999999988, 0.00010170799999999897, 0.00010180499999999995, 0.00010186099999999823, 0.00010212500000000152, 0.00010194399999999965, 0.00010149999999999743, 0.000101819999999999, 0.00010155599999999917, 0.00010169500000000234, 0.00010159700000000188, 0.00010120799999999847, 0.00010182000000000246, 0.00010167999999999983, 0.00010174999999999768, 0.00010183299999999909, 0.00010211099999999848, 0.0001015419999999996, 0.00010156900000000274, 0.0001020550000000002, 0.00010175000000000115, 0.0001017359999999981, 0.00010145900000000166, 0.0001020550000000002, 0.00010159699999999841, 0.00010127700000000031, 0.00010144400000000262, 0.00010193000000000008, 0.00010161099999999798, 0.00010176400000000071, 0.0001020420000000001, 0.00010162500000000102, 0.00010166699999999973, 0.00010215299999999719, 0.0001013749999999973, 0.00010211099999999848, 0.0001011809999999988, 0.00010188900000000084, 0.00010161100000000145, 0.00010144400000000262, 0.0001015000000000009, 0.00010202700000000106, 0.00010191699999999998]</msg>
<status status="PASS" starttime="20201110 08:33:40.423" endtime="20201110 08:33:40.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.417" endtime="20201110 08:33:40.426"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.428" endtime="20201110 08:33:40.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.431" endtime="20201110 08:33:40.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.430" endtime="20201110 08:33:40.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.426" endtime="20201110 08:33:40.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.057" endtime="20201110 08:33:40.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.056" endtime="20201110 08:33:40.452"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.461" endtime="20201110 08:33:40.481"></status>
</kw>
<msg timestamp="20201110 08:33:40.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.459" endtime="20201110 08:33:40.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.482" endtime="20201110 08:33:40.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.485" endtime="20201110 08:33:40.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.457" endtime="20201110 08:33:40.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.455" endtime="20201110 08:33:40.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.494" endtime="20201110 08:33:40.781"></status>
</kw>
<msg timestamp="20201110 08:33:40.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.492" endtime="20201110 08:33:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021668028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.785" endtime="20201110 08:33:40.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.793" endtime="20201110 08:33:40.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.490" endtime="20201110 08:33:40.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.488" endtime="20201110 08:33:40.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.800" level="INFO">${RESULT} = [{'time': 0.021771208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010318000000000133, 'source_diff': 0.00010318000000000133}, {'time': 0.021926431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:40.797" endtime="20201110 08:33:40.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:40.801" endtime="20201110 08:33:40.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.818" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.817" endtime="20201110 08:33:40.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.821" level="INFO">VALUE: [0.00010318000000000133, 0.00010280600000000042, 0.00010298600000000283, 0.0001026940000000004, 0.00010311099999999948, 0.00010224999999999818, 0.0001023610000000022, 0.0001030559999999972, 0.0001026810000000003, 0.0001023749999999983, 0.00010281900000000052, 0.00010279200000000085, 0.00010283399999999956, 0.00010234699999999916, 0.00010248600000000233, 0.00010219499999999937, 0.00010262499999999855, 0.00010311099999999948, 0.00010299999999999893, 0.00010305600000000067, 0.0001030420000000011, 0.00010248599999999886, 0.0001030550000000012, 0.00010220800000000294, 0.00010261099999999898, 0.00010283399999999956, 0.00010238899999999787, 0.00010256999999999974, 0.0001021939999999999, 0.00010255600000000017, 0.00010225000000000165, 0.00010245899999999919, 0.00010248600000000233, 0.00010233299999999959, 0.00010280600000000042, 0.00010288899999999837, 0.00010244400000000015, 0.00010243100000000005, 0.00010263900000000159, 0.00010230500000000045, 0.00010234799999999863, 0.00010281900000000052, 0.00010256900000000027, 0.00010226400000000122, 0.00010266700000000073, 0.00010270799999999997, 0.00010249999999999843, 0.00010270799999999997, 0.00010291699999999751, 0.00010248600000000233]</msg>
<status status="PASS" starttime="20201110 08:33:40.819" endtime="20201110 08:33:40.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.814" endtime="20201110 08:33:40.822"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.825" endtime="20201110 08:33:40.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.828" endtime="20201110 08:33:40.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.827" endtime="20201110 08:33:40.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.823" endtime="20201110 08:33:40.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.453" endtime="20201110 08:33:40.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.453" endtime="20201110 08:33:40.849"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.858" endtime="20201110 08:33:40.877"></status>
</kw>
<msg timestamp="20201110 08:33:40.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.856" endtime="20201110 08:33:40.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.879" endtime="20201110 08:33:40.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.881" endtime="20201110 08:33:40.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.853" endtime="20201110 08:33:40.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.851" endtime="20201110 08:33:40.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.890" endtime="20201110 08:33:41.182"></status>
</kw>
<msg timestamp="20201110 08:33:41.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.889" endtime="20201110 08:33:41.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021695292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021799486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.187" endtime="20201110 08:33:41.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.195" endtime="20201110 08:33:41.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.886" endtime="20201110 08:33:41.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.884" endtime="20201110 08:33:41.198"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.202" level="INFO">${RESULT} = [{'time': 0.021799486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010419399999999843, 'source_diff': 0.00010419399999999843}, {'time': 0.021964722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.198" endtime="20201110 08:33:41.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.215" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.202" endtime="20201110 08:33:41.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.219" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.218" endtime="20201110 08:33:41.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.223" level="INFO">VALUE: [0.00010419399999999843, 0.00010359700000000041, 0.00010361099999999998, 0.0001036810000000013, 0.00010388900000000284, 0.00010398600000000036, 0.00010388899999999937, 0.00010349999999999943, 0.00010380599999999796, 0.00010368000000000183, 0.00010348599999999986, 0.00010379099999999891, 0.00010363899999999912, 0.00010394499999999765, 0.00010399999999999993, 0.00010409700000000091, 0.00010399999999999993, 0.0001040139999999995, 0.00010394400000000165, 0.00010404199999999864, 0.00010338900000000234, 0.0001033749999999993, 0.00010394400000000165, 0.00010384700000000066, 0.00010349999999999943, 0.00010330600000000092, 0.00010399999999999993, 0.00010349999999999943, 0.00010331900000000102, 0.0001038749999999998, 0.00010331900000000102, 0.00010412500000000005, 0.00010356900000000127, 0.00010374999999999968, 0.00010404199999999864, 0.00010380600000000142, 0.00010411199999999995, 0.00010348599999999986, 0.00010361099999999998, 0.0001032359999999996, 0.00010404199999999864, 0.00010398699999999983, 0.00010354099999999866, 0.00010379199999999839, 0.00010361099999999998, 0.00010366599999999879, 0.00010404199999999864, 0.00010384800000000013, 0.00010407000000000124, 0.00010348599999999986]</msg>
<status status="PASS" starttime="20201110 08:33:41.221" endtime="20201110 08:33:41.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.215" endtime="20201110 08:33:41.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.226" endtime="20201110 08:33:41.227"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.230" endtime="20201110 08:33:41.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.228" endtime="20201110 08:33:41.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.224" endtime="20201110 08:33:41.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.850" endtime="20201110 08:33:41.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.849" endtime="20201110 08:33:41.250"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.259" endtime="20201110 08:33:41.279"></status>
</kw>
<msg timestamp="20201110 08:33:41.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.258" endtime="20201110 08:33:41.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.280" endtime="20201110 08:33:41.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.283" endtime="20201110 08:33:41.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.255" endtime="20201110 08:33:41.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.253" endtime="20201110 08:33:41.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.294" endtime="20201110 08:33:41.581"></status>
</kw>
<msg timestamp="20201110 08:33:41.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02165525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.292" endtime="20201110 08:33:41.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02165525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:41.585" endtime="20201110 08:33:41.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.593" endtime="20201110 08:33:41.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.289" endtime="20201110 08:33:41.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.287" endtime="20201110 08:33:41.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.600" level="INFO">${RESULT} = [{'time': 0.021760403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010515300000000019, 'source_diff': 0.00010515300000000019}, {'time': 0.021916611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.596" endtime="20201110 08:33:41.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.613" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.601" endtime="20201110 08:33:41.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.617" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.616" endtime="20201110 08:33:41.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.621" level="INFO">VALUE: [0.00010515300000000019, 0.000104207999999998, 0.0001047360000000011, 0.00010509799999999792, 0.00010434800000000063, 0.0001047360000000011, 0.00010473700000000058, 0.000104514, 0.00010447300000000076, 0.00010447200000000129, 0.00010506999999999878, 0.00010513800000000115, 0.00010459699999999794, 0.00010438899999999987, 0.00010477799999999982, 0.00010422200000000104, 0.00010448600000000086, 0.0001047360000000011, 0.00010463900000000012, 0.00010511099999999801, 0.00010486099999999776, 0.00010470900000000144, 0.00010477799999999982, 0.00010491699999999951, 0.0001042360000000006, 0.00010461100000000098, 0.00010434699999999769, 0.00010438899999999987, 0.00010504100000000016, 0.00010415299999999919, 0.00010454099999999966, 0.00010466599999999979, 0.0001046810000000023, 0.00010441699999999901, 0.00010491699999999951, 0.00010448600000000086, 0.00010486100000000123, 0.00010454099999999966, 0.00010458400000000131, 0.0001048750000000008, 0.00010498599999999789, 0.00010448700000000033, 0.00010466699999999926, 0.000104820000000002, 0.00010425000000000018, 0.00010447300000000076, 0.00010498599999999789, 0.00010436100000000073, 0.00010425000000000018, 0.00010472200000000154]</msg>
<status status="PASS" starttime="20201110 08:33:41.618" endtime="20201110 08:33:41.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.614" endtime="20201110 08:33:41.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.624" endtime="20201110 08:33:41.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.628" endtime="20201110 08:33:41.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.626" endtime="20201110 08:33:41.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.623" endtime="20201110 08:33:41.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.251" endtime="20201110 08:33:41.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.251" endtime="20201110 08:33:41.649"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.657" endtime="20201110 08:33:41.677"></status>
</kw>
<msg timestamp="20201110 08:33:41.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.656" endtime="20201110 08:33:41.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.679" endtime="20201110 08:33:41.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.681" endtime="20201110 08:33:41.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.653" endtime="20201110 08:33:41.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.651" endtime="20201110 08:33:41.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.692" endtime="20201110 08:33:41.979"></status>
</kw>
<msg timestamp="20201110 08:33:41.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.690" endtime="20201110 08:33:41.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021703208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.983" endtime="20201110 08:33:41.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.991" endtime="20201110 08:33:41.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.687" endtime="20201110 08:33:41.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.685" endtime="20201110 08:33:41.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.998" level="INFO">${RESULT} = [{'time': 0.021809028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010581999999999953, 'source_diff': 0.00010581999999999953}, {'time': 0.021980181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:41.995" endtime="20201110 08:33:41.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.011" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:41.999" endtime="20201110 08:33:42.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.016" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.015" endtime="20201110 08:33:42.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.018" level="INFO">VALUE: [0.00010581999999999953, 0.00010608400000000281, 0.00010555600000000318, 0.0001053750000000013, 0.000105514000000001, 0.00010604200000000064, 0.00010581900000000005, 0.00010576400000000125, 0.0001051810000000028, 0.00010573599999999864, 0.00010568000000000036, 0.00010538900000000087, 0.00010543099999999958, 0.00010565199999999775, 0.00010531999999999903, 0.00010563900000000112, 0.00010593100000000008, 0.00010527700000000084, 0.00010555500000000023, 0.00010595799999999975, 0.00010598599999999889, 0.00010590300000000094, 0.00010611100000000248, 0.00010569399999999993, 0.00010579200000000039, 0.00010572299999999854, 0.00010536100000000173, 0.00010598599999999889, 0.00010526399999999728, 0.00010609799999999892, 0.00010581900000000005, 0.00010547200000000229, 0.0001052360000000016, 0.00010547199999999882, 0.00010548600000000186, 0.0001053620000000012, 0.00010584699999999919, 0.00010579200000000039, 0.00010593000000000061, 0.00010543099999999958, 0.00010579200000000039, 0.00010523599999999814, 0.00010594499999999965, 0.00010568099999999983, 0.00010517999999999986, 0.00010573599999999864, 0.00010566700000000026, 0.0001055559999999997, 0.00010527699999999737, 0.00010543000000000011]</msg>
<status status="PASS" starttime="20201110 08:33:42.017" endtime="20201110 08:33:42.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.012" endtime="20201110 08:33:42.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.023" endtime="20201110 08:33:42.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.026" endtime="20201110 08:33:42.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.025" endtime="20201110 08:33:42.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.021" endtime="20201110 08:33:42.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.650" endtime="20201110 08:33:42.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.649" endtime="20201110 08:33:42.047"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.056" endtime="20201110 08:33:42.076"></status>
</kw>
<msg timestamp="20201110 08:33:42.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.054" endtime="20201110 08:33:42.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.077" endtime="20201110 08:33:42.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.080" endtime="20201110 08:33:42.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.052" endtime="20201110 08:33:42.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.050" endtime="20201110 08:33:42.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.089" endtime="20201110 08:33:42.376"></status>
</kw>
<msg timestamp="20201110 08:33:42.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.087" endtime="20201110 08:33:42.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.380" endtime="20201110 08:33:42.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.388" endtime="20201110 08:33:42.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.084" endtime="20201110 08:33:42.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.083" endtime="20201110 08:33:42.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.395" level="INFO">${RESULT} = [{'time': 0.021857236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001065279999999981, 'source_diff': 0.0001065279999999981}, {'time': 0.022015444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.392" endtime="20201110 08:33:42.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.408" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:42.396" endtime="20201110 08:33:42.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.413" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.412" endtime="20201110 08:33:42.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.415" level="INFO">VALUE: [0.0001065279999999981, 0.00010697200000000032, 0.00010677800000000182, 0.00010684700000000019, 0.0001067499999999992, 0.00010711100000000001, 0.00010684799999999967, 0.00010691700000000151, 0.00010618000000000086, 0.00010632000000000003, 0.00010679199999999792, 0.00010622299999999904, 0.00010672200000000007, 0.00010708300000000087, 0.00010659700000000341, 0.00010668000000000136, 0.00010619399999999696, 0.00010658300000000037, 0.00010691700000000151, 0.00010679200000000139, 0.00010663899999999865, 0.00010673599999999964, 0.00010704200000000164, 0.0001062499999999987, 0.00010693000000000161, 0.0001070560000000012, 0.00010641700000000101, 0.00010691600000000204, 0.00010666600000000179, 0.00010693099999999761, 0.00010705500000000173, 0.00010625000000000218, 0.00010681900000000105, 0.0001063620000000022, 0.00010619400000000043, 0.00010679199999999792, 0.00010686099999999976, 0.00010654099999999819, 0.00010623599999999914, 0.00010704099999999869, 0.00010686099999999976, 0.00010669499999999693, 0.00010622199999999957, 0.00010673599999999964, 0.00010641700000000101, 0.00010680499999999801, 0.0001066950000000004, 0.00010677800000000182, 0.00010625000000000218, 0.00010616599999999782]</msg>
<status status="PASS" starttime="20201110 08:33:42.414" endtime="20201110 08:33:42.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.409" endtime="20201110 08:33:42.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.424" endtime="20201110 08:33:42.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.428" endtime="20201110 08:33:42.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.426" endtime="20201110 08:33:42.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.423" endtime="20201110 08:33:42.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.048" endtime="20201110 08:33:42.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.048" endtime="20201110 08:33:42.449"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.457" endtime="20201110 08:33:42.477"></status>
</kw>
<msg timestamp="20201110 08:33:42.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.456" endtime="20201110 08:33:42.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.479" endtime="20201110 08:33:42.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.481" endtime="20201110 08:33:42.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.453" endtime="20201110 08:33:42.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.451" endtime="20201110 08:33:42.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.490" endtime="20201110 08:33:42.779"></status>
</kw>
<msg timestamp="20201110 08:33:42.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.489" endtime="20201110 08:33:42.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.783" endtime="20201110 08:33:42.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.791" endtime="20201110 08:33:42.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.486" endtime="20201110 08:33:42.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.484" endtime="20201110 08:33:42.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.798" level="INFO">${RESULT} = [{'time': 0.021845958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001078889999999999, 'source_diff': 0.0001078889999999999}, {'time': 0.022004181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.795" endtime="20201110 08:33:42.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.811" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:42.799" endtime="20201110 08:33:42.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.816" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.815" endtime="20201110 08:33:42.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.818" level="INFO">VALUE: [0.0001078889999999999, 0.00010744500000000115, 0.00010759699999999747, 0.00010767999999999889, 0.00010749999999999996, 0.0001077080000000015, 0.0001078889999999999, 0.000107208000000001, 0.00010766699999999879, 0.0001072499999999997, 0.00010716700000000176, 0.00010777800000000282, 0.00010763899999999965, 0.00010736100000000026, 0.00010730499999999851, 0.00010805599999999874, 0.00010723600000000014, 0.00010791699999999904, 0.0001080829999999984, 0.00010773600000000064, 0.00010755599999999824, 0.00010748600000000039, 0.0001075560000000017, 0.00010779200000000239, 0.00010798600000000089, 0.00010748699999999986, 0.00010811099999999754, 0.00010773600000000064, 0.00010747200000000082, 0.00010777699999999987, 0.00010734800000000017, 0.0001073889999999994, 0.0001073340000000006, 0.00010766700000000226, 0.00010766599999999932, 0.00010809700000000144, 0.00010733300000000112, 0.00010741699999999854, 0.00010730600000000146, 0.00010798600000000089, 0.00010791700000000251, 0.0001077219999999976, 0.00010717999999999839, 0.0001077080000000015, 0.00010731999999999756, 0.00010811200000000049, 0.00010740200000000297, 0.00010784800000000067, 0.0001077500000000002, 0.00010755499999999876]</msg>
<status status="PASS" starttime="20201110 08:33:42.817" endtime="20201110 08:33:42.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.812" endtime="20201110 08:33:42.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.823" endtime="20201110 08:33:42.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.826" endtime="20201110 08:33:42.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.825" endtime="20201110 08:33:42.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.821" endtime="20201110 08:33:42.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.450" endtime="20201110 08:33:42.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.449" endtime="20201110 08:33:42.847"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.856" endtime="20201110 08:33:42.876"></status>
</kw>
<msg timestamp="20201110 08:33:42.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.854" endtime="20201110 08:33:42.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.877" endtime="20201110 08:33:42.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.880" endtime="20201110 08:33:42.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.852" endtime="20201110 08:33:42.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.850" endtime="20201110 08:33:42.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.889" endtime="20201110 08:33:43.176"></status>
</kw>
<msg timestamp="20201110 08:33:43.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:42.887" endtime="20201110 08:33:43.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021745097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218535, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:43.180" endtime="20201110 08:33:43.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.188" endtime="20201110 08:33:43.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.885" endtime="20201110 08:33:43.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.883" endtime="20201110 08:33:43.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.195" level="INFO">${RESULT} = [{'time': 0.0218535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010840299999999997, 'source_diff': 0.00010840299999999997}, {'time': 0.022017736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:43.191" endtime="20201110 08:33:43.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.208" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.196" endtime="20201110 08:33:43.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.213" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.212" endtime="20201110 08:33:43.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.215" level="INFO">VALUE: [0.00010840299999999997, 0.00010894399999999971, 0.00010865200000000075, 0.0001087219999999986, 0.00010833299999999865, 0.00010893099999999961, 0.0001090829999999994, 0.00010901400000000103, 0.00010886099999999829, 0.00010819399999999896, 0.00010891700000000004, 0.00010875000000000121, 0.00010886099999999829, 0.00010862500000000108, 0.00010863799999999771, 0.00010897199999999885, 0.00010826400000000028, 0.00010827799999999985, 0.00010834699999999822, 0.0001090699999999993, 0.00010873600000000164, 0.0001088890000000009, 0.00010906899999999983, 0.00010822200000000157, 0.0001090829999999994, 0.00010851400000000053, 0.00010856899999999933, 0.00010901400000000103, 0.0001088890000000009, 0.00010902700000000112, 0.00010834800000000117, 0.00010850000000000096, 0.00010883299999999915, 0.0001085829999999989, 0.00010893099999999961, 0.00010884699999999872, 0.00010901400000000103, 0.00010873600000000164, 0.00010837500000000083, 0.00010848600000000139, 0.00010827799999999985, 0.00010891600000000057, 0.00010840299999999997, 0.000108902999999997, 0.00010859700000000194, 0.00010854199999999967, 0.00010894499999999918, 0.00010873599999999817, 0.00010845799999999878, 0.00010895799999999928]</msg>
<status status="PASS" starttime="20201110 08:33:43.214" endtime="20201110 08:33:43.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.209" endtime="20201110 08:33:43.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.219" endtime="20201110 08:33:43.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.222" endtime="20201110 08:33:43.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.221" endtime="20201110 08:33:43.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.217" endtime="20201110 08:33:43.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.848" endtime="20201110 08:33:43.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.848" endtime="20201110 08:33:43.243"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.252" endtime="20201110 08:33:43.272"></status>
</kw>
<msg timestamp="20201110 08:33:43.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.250" endtime="20201110 08:33:43.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.274" endtime="20201110 08:33:43.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.276" endtime="20201110 08:33:43.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.248" endtime="20201110 08:33:43.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.246" endtime="20201110 08:33:43.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.285" endtime="20201110 08:33:43.571"></status>
</kw>
<msg timestamp="20201110 08:33:43.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.284" endtime="20201110 08:33:43.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021832194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.575" endtime="20201110 08:33:43.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.584" endtime="20201110 08:33:43.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.281" endtime="20201110 08:33:43.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.279" endtime="20201110 08:33:43.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.590" level="INFO">${RESULT} = [{'time': 0.021942472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011027800000000185, 'source_diff': 0.00011027800000000185}, {'time': 0.022110653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.587" endtime="20201110 08:33:43.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.604" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.591" endtime="20201110 08:33:43.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.608" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.607" endtime="20201110 08:33:43.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.611" level="INFO">VALUE: [0.00011027800000000185, 0.00010915300000000072, 0.00011015299999999825, 0.00010972299999999907, 0.0001092219999999991, 0.00010977799999999788, 0.00010983399999999963, 0.00010998599999999942, 0.00010940300000000097, 0.00010983300000000015, 0.00010941700000000054, 0.00010934699999999922, 0.00010988899999999843, 0.0001100830000000004, 0.00010916700000000029, 0.00010991600000000157, 0.00011004099999999822, 0.00010918099999999986, 0.00010958399999999938, 0.00010926400000000128, 0.00010923699999999814, 0.00010962499999999861, 0.00010955500000000076, 0.00010941700000000054, 0.00010984699999999972, 0.00010997199999999985, 0.00010941699999999707, 0.00010981900000000058, 0.00011015299999999825, 0.00010948600000000239, 0.00010997199999999985, 0.00010929100000000094, 0.00010963900000000165, 0.0001095280000000011, 0.000109208999999999, 0.00011011100000000301, 0.00010969399999999699, 0.00010963900000000165, 0.00010998599999999942, 0.00010916600000000082, 0.00010951400000000153, 0.00010979200000000092, 0.0001092219999999991, 0.00010940300000000097, 0.00010977800000000135, 0.00010920900000000247, 0.00010979200000000092, 0.00010984800000000267, 0.00010997199999999985, 0.00010959799999999895]</msg>
<status status="PASS" starttime="20201110 08:33:43.609" endtime="20201110 08:33:43.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.605" endtime="20201110 08:33:43.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.614" endtime="20201110 08:33:43.616"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.618" endtime="20201110 08:33:43.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.616" endtime="20201110 08:33:43.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.613" endtime="20201110 08:33:43.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.244" endtime="20201110 08:33:43.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.243" endtime="20201110 08:33:43.639"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.647" endtime="20201110 08:33:43.668"></status>
</kw>
<msg timestamp="20201110 08:33:43.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.646" endtime="20201110 08:33:43.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.669" endtime="20201110 08:33:43.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.672" endtime="20201110 08:33:43.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.643" endtime="20201110 08:33:43.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.641" endtime="20201110 08:33:43.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.681" endtime="20201110 08:33:43.968"></status>
</kw>
<msg timestamp="20201110 08:33:43.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.679" endtime="20201110 08:33:43.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.972" endtime="20201110 08:33:43.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.980" endtime="20201110 08:33:43.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.677" endtime="20201110 08:33:43.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.675" endtime="20201110 08:33:43.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.987" level="INFO">${RESULT} = [{'time': 0.022032403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011088899999999943, 'source_diff': 0.00011088899999999943}, {'time': 0.022194597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:43.983" endtime="20201110 08:33:43.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.000" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:43.988" endtime="20201110 08:33:44.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.004" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.003" endtime="20201110 08:33:44.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.007" level="INFO">VALUE: [0.00011088899999999943, 0.00011062499999999961, 0.00011026399999999881, 0.0001105830000000009, 0.00011069499999999746, 0.00011065299999999875, 0.00011102799999999913, 0.00011038899999999893, 0.00011101399999999956, 0.0001110830000000014, 0.00011094400000000171, 0.00011012499999999911, 0.00011098600000000042, 0.00011040300000000197, 0.00011038899999999893, 0.00011045800000000078, 0.00011052700000000262, 0.00011087499999999986, 0.00011094500000000118, 0.00011081999999999759, 0.00011013900000000215, 0.00011016700000000129, 0.00011108299999999793, 0.00011023599999999967, 0.00011098699999999989, 0.00011070800000000103, 0.00011019400000000096, 0.00011099999999999999, 0.00011019399999999749, 0.00011037499999999936, 0.00011111100000000054, 0.00011063899999999918, 0.00011069500000000093, 0.00011065299999999875, 0.00011097199999999738, 0.0001110830000000014, 0.00011041700000000154, 0.0001107090000000005, 0.00011109800000000045, 0.00011026400000000228, 0.00011059799999999995, 0.00011065299999999875, 0.0001100830000000004, 0.0001102220000000001, 0.00011059700000000047, 0.00011044400000000121, 0.00011101400000000303, 0.00011091699999999857, 0.00011079199999999845, 0.00011083400000000063]</msg>
<status status="PASS" starttime="20201110 08:33:44.006" endtime="20201110 08:33:44.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.001" endtime="20201110 08:33:44.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.011" endtime="20201110 08:33:44.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.014" endtime="20201110 08:33:44.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.012" endtime="20201110 08:33:44.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.009" endtime="20201110 08:33:44.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.640" endtime="20201110 08:33:44.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.639" endtime="20201110 08:33:44.035"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.044" endtime="20201110 08:33:44.064"></status>
</kw>
<msg timestamp="20201110 08:33:44.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.042" endtime="20201110 08:33:44.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.065" endtime="20201110 08:33:44.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.068" endtime="20201110 08:33:44.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.040" endtime="20201110 08:33:44.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.037" endtime="20201110 08:33:44.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.077" endtime="20201110 08:33:44.366"></status>
</kw>
<msg timestamp="20201110 08:33:44.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.075" endtime="20201110 08:33:44.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021903153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.370" endtime="20201110 08:33:44.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.378" endtime="20201110 08:33:44.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.073" endtime="20201110 08:33:44.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.071" endtime="20201110 08:33:44.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.385" level="INFO">${RESULT} = [{'time': 0.022015431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011227799999999691, 'source_diff': 0.00011227799999999691}, {'time': 0.022186597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:44.381" endtime="20201110 08:33:44.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.398" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:44.386" endtime="20201110 08:33:44.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.402" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.401" endtime="20201110 08:33:44.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.405" level="INFO">VALUE: [0.00011227799999999691, 0.00011170799999999856, 0.00011118099999999839, 0.00011177799999999988, 0.00011119399999999849, 0.00011159799999999748, 0.00011183300000000215, 0.00011195800000000228, 0.00011120800000000153, 0.00011116700000000229, 0.0001113480000000007, 0.00011179099999999997, 0.00011197200000000185, 0.00011208399999999841, 0.00011195899999999828, 0.00011163900000000018, 0.00011202800000000013, 0.00011190199999999706, 0.00011177699999999693, 0.00011166699999999932, 0.00011202700000000065, 0.00011181899999999911, 0.00011120899999999753, 0.00011184700000000172, 0.00011180599999999902, 0.00011156999999999834, 0.00011166699999999932, 0.00011165200000000028, 0.00011130599999999852, 0.00011177799999999988, 0.00011133300000000165, 0.00011188900000000043, 0.00011126399999999981, 0.00011122199999999763, 0.00011194399999999924, 0.00011184700000000172, 0.00011136100000000079, 0.00011177800000000335, 0.00011166599999999985, 0.00011127800000000285, 0.00011183299999999868, 0.00011144499999999821, 0.00011129099999999947, 0.0001117090000000015, 0.00011112500000000011, 0.00011186099999999782, 0.00011163900000000018, 0.00011133300000000165, 0.00011159700000000147, 0.00011127799999999938]</msg>
<status status="PASS" starttime="20201110 08:33:44.404" endtime="20201110 08:33:44.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.399" endtime="20201110 08:33:44.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.409" endtime="20201110 08:33:44.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.412" endtime="20201110 08:33:44.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.410" endtime="20201110 08:33:44.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.407" endtime="20201110 08:33:44.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.036" endtime="20201110 08:33:44.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.035" endtime="20201110 08:33:44.433"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.442" endtime="20201110 08:33:44.462"></status>
</kw>
<msg timestamp="20201110 08:33:44.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.440" endtime="20201110 08:33:44.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.463" endtime="20201110 08:33:44.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.466" endtime="20201110 08:33:44.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.438" endtime="20201110 08:33:44.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.435" endtime="20201110 08:33:44.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.475" endtime="20201110 08:33:44.762"></status>
</kw>
<msg timestamp="20201110 08:33:44.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.473" endtime="20201110 08:33:44.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021866236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.767" endtime="20201110 08:33:44.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.775" endtime="20201110 08:33:44.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.471" endtime="20201110 08:33:44.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.469" endtime="20201110 08:33:44.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.782" level="INFO">${RESULT} = [{'time': 0.021979153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011291700000000057, 'source_diff': 0.00011291700000000057}, {'time': 0.022147347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:44.778" endtime="20201110 08:33:44.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.795" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:44.783" endtime="20201110 08:33:44.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.800" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.798" endtime="20201110 08:33:44.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.802" level="INFO">VALUE: [0.00011291700000000057, 0.00011309700000000297, 0.00011270799999999956, 0.00011263900000000118, 0.00011297199999999938, 0.00011298600000000242, 0.00011270799999999956, 0.00011238800000000146, 0.00011290200000000153, 0.00011243099999999964, 0.00011245800000000278, 0.00011270799999999956, 0.00011270799999999956, 0.00011233300000000265, 0.00011302799999999766, 0.0001130969999999995, 0.00011270799999999956, 0.0001123749999999979, 0.00011272199999999913, 0.00011215300000000025, 0.00011234699999999875, 0.00011277799999999741, 0.00011247299999999835, 0.00011213900000000068, 0.000112596999999999, 0.00011220800000000253, 0.00011225000000000124, 0.00011277699999999793, 0.00011226400000000081, 0.00011252800000000063, 0.0001127770000000014, 0.000112596999999999, 0.00011254100000000072, 0.00011266600000000085, 0.00011297199999999938, 0.0001122770000000009, 0.00011261099999999857, 0.00011254099999999725, 0.00011297199999999938, 0.00011276399999999784, 0.0001130550000000008, 0.00011315300000000125, 0.00011270799999999956, 0.00011227800000000038, 0.00011297200000000285, 0.00011216699999999982, 0.00011294499999999971, 0.00011273600000000217, 0.00011237500000000136, 0.00011222199999999863]</msg>
<status status="PASS" starttime="20201110 08:33:44.801" endtime="20201110 08:33:44.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.796" endtime="20201110 08:33:44.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.806" endtime="20201110 08:33:44.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.809" endtime="20201110 08:33:44.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.807" endtime="20201110 08:33:44.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.804" endtime="20201110 08:33:44.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.434" endtime="20201110 08:33:44.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.433" endtime="20201110 08:33:44.830"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.839" endtime="20201110 08:33:44.860"></status>
</kw>
<msg timestamp="20201110 08:33:44.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.838" endtime="20201110 08:33:44.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.861" endtime="20201110 08:33:44.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.864" endtime="20201110 08:33:44.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.835" endtime="20201110 08:33:44.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.832" endtime="20201110 08:33:44.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.873" endtime="20201110 08:33:45.160"></status>
</kw>
<msg timestamp="20201110 08:33:45.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022785958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.871" endtime="20201110 08:33:45.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022671819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022785958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.164" endtime="20201110 08:33:45.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.173" endtime="20201110 08:33:45.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.869" endtime="20201110 08:33:45.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.867" endtime="20201110 08:33:45.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.180" level="INFO">${RESULT} = [{'time': 0.022785958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011413899999999921, 'source_diff': 0.00011413899999999921}, {'time': 0.022960097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:45.176" endtime="20201110 08:33:45.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.193" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.181" endtime="20201110 08:33:45.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.197" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.196" endtime="20201110 08:33:45.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.200" level="INFO">VALUE: [0.00011413899999999921, 0.0001134299999999977, 0.00011406900000000136, 0.00011319499999999996, 0.00011333300000000018, 0.00011318100000000039, 0.00011345800000000031, 0.0001137359999999997, 0.00011332000000000009, 0.00011406900000000136, 0.0001135420000000012, 0.0001137359999999997, 0.00011401399999999909, 0.00011345800000000031, 0.00011326400000000181, 0.00011408299999999746, 0.00011330499999999757, 0.00011368099999999742, 0.00011388799999999949, 0.00011320800000000006, 0.00011362500000000261, 0.00011377800000000188, 0.0001140689999999979, 0.00011312500000000211, 0.0001133749999999989, 0.00011368000000000142, 0.00011320799999999659, 0.00011395799999999734, 0.00011408400000000041, 0.00011355499999999782, 0.00011388899999999896, 0.00011369399999999752, 0.00011338899999999846, 0.00011350000000000249, 0.0001139299999999982, 0.00011388899999999896, 0.000113597, 0.00011394399999999777, 0.00011332000000000009, 0.00011361099999999957, 0.00011345800000000031, 0.00011332000000000009, 0.00011406900000000136, 0.00011324999999999877, 0.00011319499999999996, 0.00011401400000000256, 0.0001138749999999994, 0.00011320800000000006, 0.00011363899999999871, 0.00011347199999999988]</msg>
<status status="PASS" starttime="20201110 08:33:45.199" endtime="20201110 08:33:45.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.194" endtime="20201110 08:33:45.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.203" endtime="20201110 08:33:45.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.207" endtime="20201110 08:33:45.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.205" endtime="20201110 08:33:45.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.202" endtime="20201110 08:33:45.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.831" endtime="20201110 08:33:45.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.830" endtime="20201110 08:33:45.228"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.237" endtime="20201110 08:33:45.257"></status>
</kw>
<msg timestamp="20201110 08:33:45.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.235" endtime="20201110 08:33:45.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.258" endtime="20201110 08:33:45.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.261" endtime="20201110 08:33:45.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.232" endtime="20201110 08:33:45.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.230" endtime="20201110 08:33:45.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.270" endtime="20201110 08:33:45.557"></status>
</kw>
<msg timestamp="20201110 08:33:45.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.268" endtime="20201110 08:33:45.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021904556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.561" endtime="20201110 08:33:45.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.569" endtime="20201110 08:33:45.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.266" endtime="20201110 08:33:45.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.264" endtime="20201110 08:33:45.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.576" level="INFO">${RESULT} = [{'time': 0.021904556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011456999999999787, 'source_diff': 0.00011456999999999787}, {'time': 0.022075722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:45.572" endtime="20201110 08:33:45.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.589" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.577" endtime="20201110 08:33:45.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.594" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.593" endtime="20201110 08:33:45.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.596" level="INFO">VALUE: [0.00011456999999999787, 0.00011477799999999941, 0.00011411100000000007, 0.00011488899999999996, 0.00011458400000000091, 0.00011429200000000195, 0.00011466700000000232, 0.0001148750000000004, 0.00011438899999999946, 0.0001143749999999999, 0.00011426400000000281, 0.00011420799999999759, 0.00011419500000000096, 0.00011432000000000109, 0.00011469500000000146, 0.00011502800000000313, 0.00011483400000000116, 0.00011419499999999749, 0.00011482000000000159, 0.00011480599999999855, 0.00011457000000000134, 0.00011436100000000032, 0.0001144169999999986, 0.00011416699999999835, 0.00011467999999999895, 0.00011424999999999977, 0.00011426399999999934, 0.00011436100000000032, 0.00011438900000000293, 0.00011480499999999907, 0.00011475000000000027, 0.00011418100000000139, 0.00011436100000000032, 0.00011473599999999723, 0.00011454199999999873, 0.00011450000000000002, 0.00011438799999999999, 0.00011481900000000211, 0.00011424999999999977, 0.00011494399999999877, 0.00011493099999999867, 0.00011488899999999996, 0.00011430499999999857, 0.00011481999999999812, 0.00011488899999999996, 0.0001143749999999999, 0.00011482000000000159, 0.00011450000000000002, 0.00011458299999999796, 0.00011506999999999837]</msg>
<status status="PASS" starttime="20201110 08:33:45.595" endtime="20201110 08:33:45.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.590" endtime="20201110 08:33:45.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.600" endtime="20201110 08:33:45.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.603" endtime="20201110 08:33:45.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.602" endtime="20201110 08:33:45.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.598" endtime="20201110 08:33:45.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.229" endtime="20201110 08:33:45.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.228" endtime="20201110 08:33:45.624"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.633" endtime="20201110 08:33:45.653"></status>
</kw>
<msg timestamp="20201110 08:33:45.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.631" endtime="20201110 08:33:45.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.655" endtime="20201110 08:33:45.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.657" endtime="20201110 08:33:45.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.629" endtime="20201110 08:33:45.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.627" endtime="20201110 08:33:45.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.666" endtime="20201110 08:33:45.954"></status>
</kw>
<msg timestamp="20201110 08:33:45.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.665" endtime="20201110 08:33:45.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021946958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.959" endtime="20201110 08:33:45.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.967" endtime="20201110 08:33:45.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.662" endtime="20201110 08:33:45.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.660" endtime="20201110 08:33:45.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.974" level="INFO">${RESULT} = [{'time': 0.021946958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011576399999999737, 'source_diff': 0.00011576399999999737}, {'time': 0.022126111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:45.970" endtime="20201110 08:33:45.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.987" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:45.975" endtime="20201110 08:33:45.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.991" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.990" endtime="20201110 08:33:45.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.994" level="INFO">VALUE: [0.00011576399999999737, 0.00011562500000000114, 0.00011576300000000136, 0.00011593099999999967, 0.0001158889999999975, 0.00011556999999999887, 0.00011604200000000023, 0.00011587499999999792, 0.00011607000000000284, 0.00011533300000000218, 0.00011533299999999871, 0.00011551399999999712, 0.00011558299999999896, 0.00011588900000000096, 0.00011563900000000071, 0.0001153750000000009, 0.00011563900000000071, 0.00011538900000000046, 0.0001152360000000012, 0.00011595799999999934, 0.0001151109999999976, 0.00011577800000000041, 0.00011575000000000127, 0.00011608399999999894, 0.00011566700000000332, 0.00011565300000000028, 0.00011540200000000056, 0.00011531999999999862, 0.00011583299999999921, 0.00011533400000000166, 0.00011526400000000034, 0.00011509800000000098, 0.00011595899999999881, 0.00011569499999999899, 0.00011565300000000028, 0.00011520900000000153, 0.00011519500000000196, 0.0001160689999999999, 0.00011569399999999952, 0.00011531899999999914, 0.0001155689999999994, 0.00011549999999999755, 0.00011601400000000109, 0.00011595900000000228, 0.00011520799999999859, 0.00011565200000000081, 0.0001160689999999999, 0.00011545799999999884, 0.00011566600000000038, 0.00011566700000000332]</msg>
<status status="PASS" starttime="20201110 08:33:45.992" endtime="20201110 08:33:45.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.988" endtime="20201110 08:33:45.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.997" endtime="20201110 08:33:45.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.001" endtime="20201110 08:33:46.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.999" endtime="20201110 08:33:46.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.996" endtime="20201110 08:33:46.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.625" endtime="20201110 08:33:46.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.624" endtime="20201110 08:33:46.022"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.031" endtime="20201110 08:33:46.051"></status>
</kw>
<msg timestamp="20201110 08:33:46.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.029" endtime="20201110 08:33:46.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.053" endtime="20201110 08:33:46.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.055" endtime="20201110 08:33:46.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.027" endtime="20201110 08:33:46.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.024" endtime="20201110 08:33:46.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.064" endtime="20201110 08:33:46.351"></status>
</kw>
<msg timestamp="20201110 08:33:46.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:46.063" endtime="20201110 08:33:46.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:46.355" endtime="20201110 08:33:46.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.363" endtime="20201110 08:33:46.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.060" endtime="20201110 08:33:46.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.058" endtime="20201110 08:33:46.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.370" level="INFO">${RESULT} = [{'time': 0.022034, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001168750000000024, 'source_diff': 0.0001168750000000024}, {'time': 0.022213167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:46.366" endtime="20201110 08:33:46.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.383" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:46.371" endtime="20201110 08:33:46.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.388" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.387" endtime="20201110 08:33:46.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.390" level="INFO">VALUE: [0.0001168750000000024, 0.00011647299999999888, 0.00011658299999999996, 0.00011669399999999705, 0.00011652799999999769, 0.0001168889999999985, 0.00011695899999999981, 0.0001163750000000019, 0.00011684799999999926, 0.00011619400000000002, 0.00011658399999999944, 0.0001165690000000004, 0.00011667999999999748, 0.00011681900000000064, 0.00011699999999999905, 0.00011656999999999987, 0.00011629200000000048, 0.000116388999999998, 0.00011682000000000012, 0.00011704200000000123, 0.00011619400000000002, 0.00011681900000000064, 0.00011656999999999987, 0.00011613900000000121, 0.00011645799999999984, 0.00011676300000000236, 0.00011627799999999744, 0.00011712499999999917, 0.0001163750000000019, 0.0001162499999999983, 0.00011633399999999919, 0.00011613900000000121, 0.00011616600000000088, 0.00011684699999999978, 0.00011629200000000048, 0.00011662500000000214, 0.00011673599999999923, 0.00011651299999999865, 0.00011663900000000171, 0.00011662499999999867, 0.0001166109999999991, 0.0001168889999999985, 0.00011701399999999862, 0.00011682000000000012, 0.00011651399999999812, 0.00011662499999999867, 0.00011687499999999892, 0.00011668000000000095, 0.00011669400000000052, 0.00011704200000000123]</msg>
<status status="PASS" starttime="20201110 08:33:46.389" endtime="20201110 08:33:46.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.384" endtime="20201110 08:33:46.391"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.394" endtime="20201110 08:33:46.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.397" endtime="20201110 08:33:46.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.396" endtime="20201110 08:33:46.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.392" endtime="20201110 08:33:46.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.023" endtime="20201110 08:33:46.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.022" endtime="20201110 08:33:46.418"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.427" endtime="20201110 08:33:46.447"></status>
</kw>
<msg timestamp="20201110 08:33:46.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.425" endtime="20201110 08:33:46.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.449" endtime="20201110 08:33:46.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.451" endtime="20201110 08:33:46.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.423" endtime="20201110 08:33:46.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.421" endtime="20201110 08:33:46.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.461" endtime="20201110 08:33:46.747"></status>
</kw>
<msg timestamp="20201110 08:33:46.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:46.459" endtime="20201110 08:33:46.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022014375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022132, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:46.751" endtime="20201110 08:33:46.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.760" endtime="20201110 08:33:46.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.456" endtime="20201110 08:33:46.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.455" endtime="20201110 08:33:46.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.767" level="INFO">${RESULT} = [{'time': 0.022132, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011762499999999967, 'source_diff': 0.00011762499999999967}, {'time': 0.022307167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:46.764" endtime="20201110 08:33:46.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.781" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:46.768" endtime="20201110 08:33:46.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.785" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.784" endtime="20201110 08:33:46.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.788" level="INFO">VALUE: [0.00011762499999999967, 0.00011757000000000087, 0.0001172499999999993, 0.00011738900000000246, 0.00011719500000000049, 0.0001175829999999975, 0.00011758400000000044, 0.00011751399999999912, 0.00011790299999999906, 0.00011733300000000071, 0.00011780600000000155, 0.00011762499999999967, 0.00011766700000000185, 0.00011737499999999942, 0.00011779199999999851, 0.0001179309999999982, 0.00011802800000000266, 0.00011786100000000035, 0.00011769399999999805, 0.00011737499999999942, 0.00011794499999999777, 0.00011801399999999962, 0.00011751299999999965, 0.00011726399999999887, 0.00011755599999999783, 0.00011781900000000164, 0.00011733299999999725, 0.0001172369999999992, 0.0001179300000000022, 0.00011744400000000127, 0.00011781899999999818, 0.00011805500000000232, 0.00011711199999999908, 0.0001180560000000018, 0.00011730600000000105, 0.00011749999999999955, 0.0001176110000000001, 0.00011723599999999973, 0.00011808399999999747, 0.00011745900000000031, 0.00011731999999999715, 0.00011729200000000148, 0.00011765199999999934, 0.00011762499999999967, 0.00011805500000000232, 0.00011718000000000145, 0.0001172499999999993, 0.00011768100000000142, 0.00011793100000000167, 0.00011768000000000195]</msg>
<status status="PASS" starttime="20201110 08:33:46.786" endtime="20201110 08:33:46.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.782" endtime="20201110 08:33:46.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.791" endtime="20201110 08:33:46.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.795" endtime="20201110 08:33:46.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.793" endtime="20201110 08:33:46.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.790" endtime="20201110 08:33:46.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.419" endtime="20201110 08:33:46.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.418" endtime="20201110 08:33:46.816"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.825" endtime="20201110 08:33:46.845"></status>
</kw>
<msg timestamp="20201110 08:33:46.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.823" endtime="20201110 08:33:46.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.847" endtime="20201110 08:33:46.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.849" endtime="20201110 08:33:46.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.820" endtime="20201110 08:33:46.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.818" endtime="20201110 08:33:46.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.858" endtime="20201110 08:33:47.146"></status>
</kw>
<msg timestamp="20201110 08:33:47.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.857" endtime="20201110 08:33:47.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.150" endtime="20201110 08:33:47.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.158" endtime="20201110 08:33:47.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.854" endtime="20201110 08:33:47.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.852" endtime="20201110 08:33:47.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.165" level="INFO">${RESULT} = [{'time': 0.022130056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011861199999999711, 'source_diff': 0.00011861199999999711}, {'time': 0.022299222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:47.161" endtime="20201110 08:33:47.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.178" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.166" endtime="20201110 08:33:47.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.183" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.182" endtime="20201110 08:33:47.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.185" level="INFO">VALUE: [0.00011861199999999711, 0.00011904100000000029, 0.0001186249999999972, 0.00011894500000000224, 0.0001182500000000003, 0.00011879199999999951, 0.00011908400000000194, 0.00011866699999999938, 0.00011887500000000092, 0.00011826399999999987, 0.00011872199999999819, 0.00011900000000000105, 0.00011850000000000055, 0.00011827799999999944, 0.00011848599999999751, 0.00011823600000000073, 0.00011831899999999868, 0.00011898600000000148, 0.00011879199999999951, 0.00011874999999999733, 0.0001186110000000011, 0.000119082999999999, 0.00011855500000000282, 0.00011826399999999987, 0.0001184309999999987, 0.00011855499999999936, 0.00011815299999999931, 0.000118389, 0.0001185699999999984, 0.0001188049999999996, 0.0001184309999999987, 0.00011822199999999769, 0.00011820800000000159, 0.00011844499999999827, 0.00011866599999999991, 0.0001183049999999991, 0.00011836100000000085, 0.00011890300000000006, 0.0001190699999999989, 0.00011865299999999981, 0.0001184309999999987, 0.00011816599999999941, 0.00011904100000000029, 0.00011819399999999855, 0.00011873600000000123, 0.00011827799999999944, 0.00011873600000000123, 0.00011836100000000085, 0.00011822200000000116, 0.00011848600000000098]</msg>
<status status="PASS" starttime="20201110 08:33:47.184" endtime="20201110 08:33:47.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.179" endtime="20201110 08:33:47.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.189" endtime="20201110 08:33:47.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.192" endtime="20201110 08:33:47.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.191" endtime="20201110 08:33:47.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.187" endtime="20201110 08:33:47.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.817" endtime="20201110 08:33:47.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.816" endtime="20201110 08:33:47.213"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.222" endtime="20201110 08:33:47.242"></status>
</kw>
<msg timestamp="20201110 08:33:47.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.220" endtime="20201110 08:33:47.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.244" endtime="20201110 08:33:47.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.247" endtime="20201110 08:33:47.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.218" endtime="20201110 08:33:47.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.216" endtime="20201110 08:33:47.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.256" endtime="20201110 08:33:47.544"></status>
</kw>
<msg timestamp="20201110 08:33:47.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.254" endtime="20201110 08:33:47.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.548" endtime="20201110 08:33:47.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.556" endtime="20201110 08:33:47.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.251" endtime="20201110 08:33:47.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.250" endtime="20201110 08:33:47.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.563" level="INFO">${RESULT} = [{'time': 0.022045542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001202500000000023, 'source_diff': 0.0001202500000000023}, {'time': 0.022212722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:47.559" endtime="20201110 08:33:47.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.576" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.564" endtime="20201110 08:33:47.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.580" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.579" endtime="20201110 08:33:47.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.583" level="INFO">VALUE: [0.0001202500000000023, 0.00011962500000000167, 0.0001198890000000015, 0.00011968000000000048, 0.00011973600000000223, 0.00011986099999999889, 0.00011937499999999795, 0.00011994500000000324, 0.00011961099999999864, 0.0001190690000000029, 0.00011966700000000038, 0.00012000000000000205, 0.0001196249999999982, 0.00011943000000000023, 0.00011990300000000106, 0.0001195699999999994, 0.00011945799999999937, 0.000119389000000001, 0.00011937499999999795, 0.00011948599999999851, 0.00011945800000000284, 0.0001194439999999998, 0.00011954100000000079, 0.00011956899999999993, 0.00011995799999999987, 0.00011991700000000063, 0.00011987500000000192, 0.0001194439999999998, 0.00011999999999999858, 0.00011987499999999846, 0.00011944500000000274, 0.00011988899999999802, 0.000120083, 0.00011931899999999968, 0.00011968099999999995, 0.00011977700000000147, 0.00011991700000000063, 0.00011976400000000137, 0.00011979199999999704, 0.00011933399999999872, 0.000120083, 0.00011912500000000117, 0.00011954100000000079, 0.00011998600000000248, 0.0001191110000000016, 0.00011966599999999744, 0.00011954200000000026, 0.00011941700000000013, 0.00011950000000000155, 0.00011999999999999858]</msg>
<status status="PASS" starttime="20201110 08:33:47.581" endtime="20201110 08:33:47.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.577" endtime="20201110 08:33:47.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.591" endtime="20201110 08:33:47.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.594" endtime="20201110 08:33:47.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.593" endtime="20201110 08:33:47.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.589" endtime="20201110 08:33:47.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.214" endtime="20201110 08:33:47.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.213" endtime="20201110 08:33:47.615"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.624" endtime="20201110 08:33:47.645"></status>
</kw>
<msg timestamp="20201110 08:33:47.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.622" endtime="20201110 08:33:47.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.646" endtime="20201110 08:33:47.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.649" endtime="20201110 08:33:47.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.620" endtime="20201110 08:33:47.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.618" endtime="20201110 08:33:47.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.658" endtime="20201110 08:33:47.945"></status>
</kw>
<msg timestamp="20201110 08:33:47.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.656" endtime="20201110 08:33:47.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.949" endtime="20201110 08:33:47.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.958" endtime="20201110 08:33:47.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.654" endtime="20201110 08:33:47.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.652" endtime="20201110 08:33:47.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.965" level="INFO">${RESULT} = [{'time': 0.022125167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012099999999999958, 'source_diff': 0.00012099999999999958}, {'time': 0.022298361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:47.962" endtime="20201110 08:33:47.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.978" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:47.966" endtime="20201110 08:33:47.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.983" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.982" endtime="20201110 08:33:47.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.985" level="INFO">VALUE: [0.00012099999999999958, 0.0001202639999999984, 0.0001207639999999989, 0.0001207090000000001, 0.00012070800000000062, 0.0001202500000000023, 0.00012105499999999839, 0.00012041700000000113, 0.00012054200000000126, 0.00012076400000000237, 0.00012063899999999877, 0.00012086099999999989, 0.00012056899999999746, 0.00012079099999999857, 0.00012019500000000002, 0.000120389000000002, 0.00012027800000000144, 0.00012049999999999908, 0.0001209310000000012, 0.00012086099999999989, 0.00012058399999999997, 0.00012049999999999908, 0.00012102699999999925, 0.00012037500000000242, 0.0001205700000000004, 0.00012026400000000187, 0.00012074999999999933, 0.00012100000000000305, 0.00012077700000000247, 0.0001210700000000009, 0.00012049999999999908, 0.00012108299999999753, 0.0001201249999999987, 0.00012052800000000169, 0.0001203189999999972, 0.00012106900000000143, 0.00012026299999999893, 0.00012050000000000255, 0.00012069500000000052, 0.00012015299999999784, 0.00012016600000000141, 0.00012106900000000143, 0.00012040300000000156, 0.0001209440000000013, 0.00012013900000000174, 0.00012097200000000044, 0.00012038899999999852, 0.00012030600000000058, 0.00012022199999999969, 0.00012054200000000126]</msg>
<status status="PASS" starttime="20201110 08:33:47.984" endtime="20201110 08:33:47.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.979" endtime="20201110 08:33:47.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.989" endtime="20201110 08:33:47.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.992" endtime="20201110 08:33:48.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.991" endtime="20201110 08:33:48.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.987" endtime="20201110 08:33:48.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.616" endtime="20201110 08:33:48.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.616" endtime="20201110 08:33:48.013"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.022" endtime="20201110 08:33:48.043"></status>
</kw>
<msg timestamp="20201110 08:33:48.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.021" endtime="20201110 08:33:48.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.044" endtime="20201110 08:33:48.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.047" endtime="20201110 08:33:48.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.018" endtime="20201110 08:33:48.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.016" endtime="20201110 08:33:48.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.056" endtime="20201110 08:33:48.343"></status>
</kw>
<msg timestamp="20201110 08:33:48.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.054" endtime="20201110 08:33:48.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.347" endtime="20201110 08:33:48.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.355" endtime="20201110 08:33:48.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.052" endtime="20201110 08:33:48.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.050" endtime="20201110 08:33:48.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.362" level="INFO">${RESULT} = [{'time': 0.022155083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012141599999999919, 'source_diff': 0.00012141599999999919}, {'time': 0.02233225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:48.358" endtime="20201110 08:33:48.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.375" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:48.363" endtime="20201110 08:33:48.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.379" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.378" endtime="20201110 08:33:48.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.382" level="INFO">VALUE: [0.00012141599999999919, 0.00012205600000000233, 0.00012119400000000155, 0.00012186099999999742, 0.00012136100000000039, 0.00012202799999999972, 0.00012150000000000008, 0.00012198600000000101, 0.00012137499999999996, 0.00012186100000000089, 0.00012106900000000143, 0.0001211249999999997, 0.00012161100000000064, 0.00012112500000000317, 0.00012144399999999833, 0.00012161100000000064, 0.00012156900000000193, 0.0001213050000000021, 0.00012198600000000101, 0.00012184700000000132, 0.00012106899999999796, 0.00012143000000000223, 0.00012142999999999876, 0.00012142999999999876, 0.00012186100000000089, 0.00012136100000000039, 0.00012136100000000039, 0.0001219029999999996, 0.00012130599999999811, 0.00012109700000000057, 0.0001214310000000017, 0.00012150000000000008, 0.0001215830000000015, 0.00012205499999999939, 0.000121083000000001, 0.0001214440000000018, 0.00012133300000000125, 0.00012123600000000026, 0.00012124999999999983, 0.00012155499999999889, 0.0001216250000000002, 0.00012167999999999901, 0.00012136100000000039, 0.00012148600000000051, 0.00012141700000000213, 0.00012191600000000316, 0.00012161100000000064, 0.00012148600000000051, 0.00012184699999999785, 0.00012154099999999932]</msg>
<status status="PASS" starttime="20201110 08:33:48.381" endtime="20201110 08:33:48.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.376" endtime="20201110 08:33:48.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.386" endtime="20201110 08:33:48.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.389" endtime="20201110 08:33:48.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.387" endtime="20201110 08:33:48.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.384" endtime="20201110 08:33:48.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.014" endtime="20201110 08:33:48.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.014" endtime="20201110 08:33:48.410"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.419" endtime="20201110 08:33:48.439"></status>
</kw>
<msg timestamp="20201110 08:33:48.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.417" endtime="20201110 08:33:48.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.441" endtime="20201110 08:33:48.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.443" endtime="20201110 08:33:48.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.414" endtime="20201110 08:33:48.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.412" endtime="20201110 08:33:48.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.452" endtime="20201110 08:33:48.739"></status>
</kw>
<msg timestamp="20201110 08:33:48.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.451" endtime="20201110 08:33:48.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.743" endtime="20201110 08:33:48.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.751" endtime="20201110 08:33:48.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.448" endtime="20201110 08:33:48.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.447" endtime="20201110 08:33:48.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.758" level="INFO">${RESULT} = [{'time': 0.022016403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012241699999999966, 'source_diff': 0.00012241699999999966}, {'time': 0.022192569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:48.755" endtime="20201110 08:33:48.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.771" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:48.759" endtime="20201110 08:33:48.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.776" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.775" endtime="20201110 08:33:48.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.778" level="INFO">VALUE: [0.00012241699999999966, 0.00012208299999999853, 0.00012219399999999908, 0.00012202799999999972, 0.00012219499999999855, 0.0001224999999999976, 0.0001230969999999991, 0.00012229199999999954, 0.0001227220000000022, 0.00012225000000000083, 0.00012274999999999786, 0.00012255599999999936, 0.00012219500000000202, 0.00012234699999999835, 0.000122986000000002, 0.00012256999999999893, 0.00012288900000000103, 0.0001221250000000007, 0.0001228480000000018, 0.0001222359999999978, 0.0001221250000000007, 0.00012263900000000078, 0.00012243099999999923, 0.00012231999999999868, 0.00012293099999999973, 0.00012242999999999976, 0.00012293000000000026, 0.00012276399999999743, 0.00012305500000000039, 0.00012261099999999817, 0.00012293000000000026, 0.00012236100000000139, 0.00012302799999999725, 0.0001226250000000012, 0.00012255499999999989, 0.0001221120000000006, 0.00012211099999999767, 0.00012270799999999915, 0.00012266600000000044, 0.0001226389999999973, 0.00012216699999999941, 0.00012291700000000017, 0.00012215299999999985, 0.00012211099999999767, 0.00012302699999999778, 0.00012300000000000158, 0.00012251400000000065, 0.00012234700000000182, 0.00012241699999999966, 0.00012255499999999989]</msg>
<status status="PASS" starttime="20201110 08:33:48.777" endtime="20201110 08:33:48.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.772" endtime="20201110 08:33:48.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.782" endtime="20201110 08:33:48.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.786" endtime="20201110 08:33:48.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.784" endtime="20201110 08:33:48.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.780" endtime="20201110 08:33:48.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.411" endtime="20201110 08:33:48.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.410" endtime="20201110 08:33:48.807"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.816" endtime="20201110 08:33:48.837"></status>
</kw>
<msg timestamp="20201110 08:33:48.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.814" endtime="20201110 08:33:48.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.838" endtime="20201110 08:33:48.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.841" endtime="20201110 08:33:48.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.812" endtime="20201110 08:33:48.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.810" endtime="20201110 08:33:48.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.850" endtime="20201110 08:33:49.138"></status>
</kw>
<msg timestamp="20201110 08:33:49.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.848" endtime="20201110 08:33:49.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021948111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.143" endtime="20201110 08:33:49.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.151" endtime="20201110 08:33:49.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.846" endtime="20201110 08:33:49.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.844" endtime="20201110 08:33:49.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.158" level="INFO">${RESULT} = [{'time': 0.022072125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012401400000000215, 'source_diff': 0.00012401400000000215}, {'time': 0.022253236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.154" endtime="20201110 08:33:49.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.171" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.159" endtime="20201110 08:33:49.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.176" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.175" endtime="20201110 08:33:49.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.178" level="INFO">VALUE: [0.00012401400000000215, 0.00012369400000000058, 0.0001230969999999991, 0.00012347199999999947, 0.00012393000000000126, 0.00012359799999999907, 0.00012370899999999962, 0.00012384699999999985, 0.00012315300000000085, 0.00012384699999999985, 0.00012393100000000074, 0.0001234999999999986, 0.00012359700000000307, 0.0001240420000000013, 0.0001231250000000017, 0.00012355500000000089, 0.0001239030000000016, 0.0001234160000000012, 0.00012320799999999965, 0.0001235969999999996, 0.00012336200000000186, 0.00012324999999999836, 0.00012393100000000074, 0.00012356999999999993, 0.0001237909999999981, 0.00012343100000000023, 0.00012361099999999917, 0.00012338899999999806, 0.00012336100000000239, 0.0001239030000000016, 0.00012376399999999843, 0.0001235420000000008, 0.00012352799999999775, 0.00012397199999999997, 0.000123083999999999, 0.00012401400000000215, 0.00012340199999999815, 0.00012343100000000023, 0.0001234579999999999, 0.00012345899999999937, 0.00012401399999999868, 0.00012336099999999892, 0.00012394400000000083, 0.00012343100000000023, 0.00012365200000000187, 0.00012372199999999972, 0.0001237359999999993, 0.00012318099999999998, 0.00012308299999999953, 0.000123777999999998]</msg>
<status status="PASS" starttime="20201110 08:33:49.177" endtime="20201110 08:33:49.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.172" endtime="20201110 08:33:49.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.182" endtime="20201110 08:33:49.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.185" endtime="20201110 08:33:49.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.184" endtime="20201110 08:33:49.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.180" endtime="20201110 08:33:49.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.808" endtime="20201110 08:33:49.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.808" endtime="20201110 08:33:49.206"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.215" endtime="20201110 08:33:49.236"></status>
</kw>
<msg timestamp="20201110 08:33:49.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.213" endtime="20201110 08:33:49.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.237" endtime="20201110 08:33:49.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.240" endtime="20201110 08:33:49.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.211" endtime="20201110 08:33:49.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.209" endtime="20201110 08:33:49.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.249" endtime="20201110 08:33:49.536"></status>
</kw>
<msg timestamp="20201110 08:33:49.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.247" endtime="20201110 08:33:49.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.540" endtime="20201110 08:33:49.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.548" endtime="20201110 08:33:49.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.245" endtime="20201110 08:33:49.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.243" endtime="20201110 08:33:49.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.555" level="INFO">${RESULT} = [{'time': 0.021974431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012498700000000001, 'source_diff': 0.00012498700000000001}, {'time': 0.022161514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.552" endtime="20201110 08:33:49.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.556" endtime="20201110 08:33:49.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.573" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.572" endtime="20201110 08:33:49.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.575" level="INFO">VALUE: [0.00012498700000000001, 0.00012441700000000167, 0.00012501400000000315, 0.00012488899999999956, 0.00012493099999999827, 0.00012462499999999974, 0.000124777999999999, 0.00012440299999999863, 0.00012486100000000042, 0.00012420800000000065, 0.00012411099999999967, 0.00012430599999999764, 0.00012459699999999713, 0.000124568999999998, 0.00012491599999999922, 0.00012438899999999906, 0.00012408299999999706, 0.00012456900000000146, 0.00012420799999999718, 0.0001242229999999997, 0.00012482000000000118, 0.00012456900000000146, 0.00012465299999999888, 0.00012411099999999967, 0.00012491700000000217, 0.00012504099999999935, 0.00012454199999999832, 0.00012424999999999936, 0.0001242779999999985, 0.0001246389999999993, 0.00012419400000000108, 0.00012441599999999872, 0.0001242779999999985, 0.00012502799999999925, 0.00012495900000000087, 0.00012437499999999949, 0.00012466699999999845, 0.00012433300000000078, 0.00012465200000000287, 0.00012488899999999956, 0.0001247360000000003, 0.000124471999999997, 0.00012459699999999713, 0.00012490299999999913, 0.0001249169999999987, 0.00012416699999999795, 0.00012409799999999957, 0.00012448600000000004, 0.00012502799999999925, 0.00012412499999999924]</msg>
<status status="PASS" starttime="20201110 08:33:49.574" endtime="20201110 08:33:49.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.569" endtime="20201110 08:33:49.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.579" endtime="20201110 08:33:49.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.582" endtime="20201110 08:33:49.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.581" endtime="20201110 08:33:49.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.577" endtime="20201110 08:33:49.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.207" endtime="20201110 08:33:49.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.207" endtime="20201110 08:33:49.603"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.612" endtime="20201110 08:33:49.633"></status>
</kw>
<msg timestamp="20201110 08:33:49.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.610" endtime="20201110 08:33:49.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.634" endtime="20201110 08:33:49.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.637" endtime="20201110 08:33:49.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.608" endtime="20201110 08:33:49.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.606" endtime="20201110 08:33:49.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.646" endtime="20201110 08:33:49.933"></status>
</kw>
<msg timestamp="20201110 08:33:49.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.644" endtime="20201110 08:33:49.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021894278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.938" endtime="20201110 08:33:49.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.946" endtime="20201110 08:33:49.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.642" endtime="20201110 08:33:49.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.640" endtime="20201110 08:33:49.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.953" level="INFO">${RESULT} = [{'time': 0.022019903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012562500000000074, 'source_diff': 0.00012562500000000074}, {'time': 0.022199028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:49.949" endtime="20201110 08:33:49.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:49.954" endtime="20201110 08:33:49.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.971" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.970" endtime="20201110 08:33:49.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.973" level="INFO">VALUE: [0.00012562500000000074, 0.00012558399999999803, 0.00012540299999999963, 0.00012554199999999932, 0.00012529199999999907, 0.00012531899999999874, 0.0001254450000000018, 0.00012579199999999957, 0.00012544399999999886, 0.0001259299999999998, 0.00012587500000000099, 0.00012590300000000013, 0.00012568099999999902, 0.00012558399999999803, 0.00012606999999999896, 0.00012559800000000107, 0.00012595799999999893, 0.0001258199999999987, 0.00012562500000000074, 0.00012595799999999893, 0.00012515299999999938, 0.0001250970000000011, 0.00012576400000000043, 0.0001255840000000015, 0.00012561100000000117, 0.00012508299999999806, 0.0001252360000000008, 0.000125568999999999, 0.0001256390000000003, 0.00012548600000000104, 0.00012509800000000057, 0.00012511100000000067, 0.00012569499999999859, 0.00012544399999999886, 0.00012522200000000122, 0.0001259719999999985, 0.00012554199999999932, 0.00012534799999999735, 0.00012545799999999843, 0.0001260559999999994, 0.00012533400000000125, 0.000125778, 0.00012540200000000015, 0.00012530599999999864, 0.00012513800000000033, 0.00012509800000000057, 0.00012545799999999843, 0.00012594499999999884, 0.00012583400000000175, 0.0001258889999999971]</msg>
<status status="PASS" starttime="20201110 08:33:49.972" endtime="20201110 08:33:49.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.967" endtime="20201110 08:33:49.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.977" endtime="20201110 08:33:49.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.980" endtime="20201110 08:33:50.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.979" endtime="20201110 08:33:50.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.975" endtime="20201110 08:33:50.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.604" endtime="20201110 08:33:50.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.604" endtime="20201110 08:33:50.001"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.010" endtime="20201110 08:33:50.031"></status>
</kw>
<msg timestamp="20201110 08:33:50.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.008" endtime="20201110 08:33:50.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.032" endtime="20201110 08:33:50.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.035" endtime="20201110 08:33:50.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.006" endtime="20201110 08:33:50.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.004" endtime="20201110 08:33:50.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.044" endtime="20201110 08:33:50.337"></status>
</kw>
<msg timestamp="20201110 08:33:50.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.042" endtime="20201110 08:33:50.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022018514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.342" endtime="20201110 08:33:50.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.350" endtime="20201110 08:33:50.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.040" endtime="20201110 08:33:50.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.038" endtime="20201110 08:33:50.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.357" level="INFO">${RESULT} = [{'time': 0.022145111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012659699999999913, 'source_diff': 0.00012659699999999913}, {'time': 0.022331292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:50.353" endtime="20201110 08:33:50.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.370" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:50.358" endtime="20201110 08:33:50.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.374" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.373" endtime="20201110 08:33:50.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.377" level="INFO">VALUE: [0.00012659699999999913, 0.0001263889999999976, 0.0001267910000000011, 0.00012684699999999938, 0.00012633399999999878, 0.00012684699999999938, 0.00012704200000000082, 0.00012611100000000167, 0.0001267230000000022, 0.0001261390000000008, 0.000126471999999999, 0.00012618099999999952, 0.00012622199999999875, 0.00012630599999999964, 0.0001266109999999987, 0.00012623599999999832, 0.0001266940000000001, 0.00012622200000000222, 0.00012684700000000285, 0.00012605499999999992, 0.00012698600000000254, 0.00012643099999999977, 0.0001266109999999987, 0.0001269439999999969, 0.00012679200000000057, 0.00012684699999999938, 0.00012686099999999895, 0.00012680600000000014, 0.00012629200000000007, 0.0001266940000000001, 0.00012686100000000242, 0.00012647200000000247, 0.00012644499999999934, 0.00012687499999999852, 0.00012702800000000125, 0.00012699999999999864, 0.0001265559999999999, 0.0001269719999999995, 0.00012634699999999888, 0.00012694499999999984, 0.0001262360000000018, 0.00012666600000000097, 0.00012688900000000156, 0.00012649999999999814, 0.00012633400000000225, 0.00012666700000000045, 0.0001262910000000006, 0.0001265139999999977, 0.00012616699999999995, 0.0001261109999999982]</msg>
<status status="PASS" starttime="20201110 08:33:50.376" endtime="20201110 08:33:50.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.371" endtime="20201110 08:33:50.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.381" endtime="20201110 08:33:50.382"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.384" endtime="20201110 08:33:50.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.382" endtime="20201110 08:33:50.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.379" endtime="20201110 08:33:50.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.002" endtime="20201110 08:33:50.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.002" endtime="20201110 08:33:50.405"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.414" endtime="20201110 08:33:50.435"></status>
</kw>
<msg timestamp="20201110 08:33:50.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.412" endtime="20201110 08:33:50.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.436" endtime="20201110 08:33:50.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.439" endtime="20201110 08:33:50.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.410" endtime="20201110 08:33:50.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.407" endtime="20201110 08:33:50.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.448" endtime="20201110 08:33:50.735"></status>
</kw>
<msg timestamp="20201110 08:33:50.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.446" endtime="20201110 08:33:50.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.740" endtime="20201110 08:33:50.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.748" endtime="20201110 08:33:50.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.444" endtime="20201110 08:33:50.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.442" endtime="20201110 08:33:50.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.754" level="INFO">${RESULT} = [{'time': 0.021977208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001281520000000029, 'source_diff': 0.0001281520000000029}, {'time': 0.022150417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.751" endtime="20201110 08:33:50.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.768" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:50.755" endtime="20201110 08:33:50.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.772" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.771" endtime="20201110 08:33:50.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.774" level="INFO">VALUE: [0.0001281520000000029, 0.00012749999999999914, 0.00012702800000000125, 0.00012798600000000007, 0.00012719500000000009, 0.0001274309999999973, 0.00012773599999999982, 0.000127472, 0.0001280269999999993, 0.00012718100000000052, 0.00012795800000000093, 0.00012709699999999963, 0.0001280139999999992, 0.0001277910000000021, 0.00012768100000000102, 0.00012759700000000013, 0.00012712499999999877, 0.00012722299999999923, 0.00012772200000000025, 0.00012720800000000018, 0.00012717999999999757, 0.00012737499999999902, 0.00012787499999999952, 0.00012740299999999816, 0.00012780500000000167, 0.00012734699999999988, 0.00012802799999999878, 0.0001273200000000002, 0.00012730600000000064, 0.00012766600000000197, 0.00012726399999999846, 0.0001274170000000012, 0.00012740300000000163, 0.00012805500000000192, 0.00012772200000000025, 0.00012740199999999868, 0.00012727799999999803, 0.00012772200000000025, 0.00012794500000000084, 0.00012722199999999975, 0.00012758300000000056, 0.00012772200000000025, 0.0001272230000000027, 0.00012712499999999877, 0.00012709699999999963, 0.00012740299999999816, 0.00012786099999999995, 0.00012768000000000154, 0.00012799999999999964, 0.00012736099999999945]</msg>
<status status="PASS" starttime="20201110 08:33:50.773" endtime="20201110 08:33:50.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.769" endtime="20201110 08:33:50.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.778" endtime="20201110 08:33:50.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.782" endtime="20201110 08:33:50.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.780" endtime="20201110 08:33:50.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.777" endtime="20201110 08:33:50.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.406" endtime="20201110 08:33:50.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.405" endtime="20201110 08:33:50.802"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.812" endtime="20201110 08:33:50.833"></status>
</kw>
<msg timestamp="20201110 08:33:50.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.810" endtime="20201110 08:33:50.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.834" endtime="20201110 08:33:50.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.837" endtime="20201110 08:33:50.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.807" endtime="20201110 08:33:50.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.805" endtime="20201110 08:33:50.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.846" endtime="20201110 08:33:51.134"></status>
</kw>
<msg timestamp="20201110 08:33:51.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.845" endtime="20201110 08:33:51.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022465625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.138" endtime="20201110 08:33:51.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.146" endtime="20201110 08:33:51.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.842" endtime="20201110 08:33:51.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.840" endtime="20201110 08:33:51.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.153" level="INFO">${RESULT} = [{'time': 0.022465625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012936099999999798, 'source_diff': 0.00012936099999999798}, {'time': 0.022654667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.149" endtime="20201110 08:33:51.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.154" endtime="20201110 08:33:51.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.170" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.169" endtime="20201110 08:33:51.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.173" level="INFO">VALUE: [0.00012936099999999798, 0.00012822300000000023, 0.00012816699999999848, 0.00012854099999999938, 0.00012827799999999903, 0.00012904199999999935, 0.00012852799999999928, 0.00012841599999999925, 0.0001285829999999981, 0.0001289720000000015, 0.00012890200000000018, 0.00012884799999999738, 0.00012816699999999848, 0.00012840199999999968, 0.00012836199999999992, 0.00012844500000000134, 0.0001287630000000005, 0.0001285980000000006, 0.0001283330000000013, 0.0001286940000000021, 0.00012872300000000073, 0.00012895799999999846, 0.00012827700000000303, 0.00012902800000000325, 0.0001285829999999981, 0.00012865300000000288, 0.00012897199999999803, 0.00012822200000000075, 0.00012891699999999923, 0.0001290140000000002, 0.000128472000000001, 0.0001289590000000014, 0.00012872300000000073, 0.0001281529999999989, 0.0001281390000000028, 0.00012848600000000057, 0.00012840299999999916, 0.00012840300000000263, 0.0001286110000000007, 0.00012840300000000263, 0.00012809699999999716, 0.00012834700000000088, 0.0001285139999999997, 0.0001280980000000001, 0.0001282780000000025, 0.0001281529999999989, 0.00012812499999999977, 0.0001288890000000001, 0.00012865199999999993, 0.00012834800000000035]</msg>
<status status="PASS" starttime="20201110 08:33:51.172" endtime="20201110 08:33:51.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.167" endtime="20201110 08:33:51.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.177" endtime="20201110 08:33:51.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.180" endtime="20201110 08:33:51.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.178" endtime="20201110 08:33:51.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.175" endtime="20201110 08:33:51.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.803" endtime="20201110 08:33:51.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.803" endtime="20201110 08:33:51.201"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.210" endtime="20201110 08:33:51.231"></status>
</kw>
<msg timestamp="20201110 08:33:51.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.208" endtime="20201110 08:33:51.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.232" endtime="20201110 08:33:51.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.235" endtime="20201110 08:33:51.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.205" endtime="20201110 08:33:51.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.203" endtime="20201110 08:33:51.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.244" endtime="20201110 08:33:51.531"></status>
</kw>
<msg timestamp="20201110 08:33:51.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.242" endtime="20201110 08:33:51.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.535" endtime="20201110 08:33:51.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.544" endtime="20201110 08:33:51.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.240" endtime="20201110 08:33:51.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.238" endtime="20201110 08:33:51.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.550" level="INFO">${RESULT} = [{'time': 0.022053583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013027700000000156, 'source_diff': 0.00013027700000000156}, {'time': 0.022245681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:51.547" endtime="20201110 08:33:51.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.564" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.551" endtime="20201110 08:33:51.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.568" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.567" endtime="20201110 08:33:51.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.571" level="INFO">VALUE: [0.00013027700000000156, 0.00012908399999999806, 0.0001295829999999991, 0.0001293469999999984, 0.00012981999999999924, 0.00012987499999999805, 0.00012976400000000096, 0.00012958300000000256, 0.00012931999999999874, 0.0001296249999999978, 0.00012983299999999934, 0.00012927800000000003, 0.00012922199999999828, 0.0001291529999999999, 0.00012920899999999819, 0.00012981899999999977, 0.00012954199999999985, 0.00012952800000000028, 0.0001291249999999973, 0.00012988899999999762, 0.0001299439999999999, 0.00012940300000000016, 0.0001291940000000026, 0.00012977800000000053, 0.00012919500000000209, 0.00012933299999999884, 0.00012940300000000016, 0.00012942999999999982, 0.0001297920000000001, 0.0001297079999999992, 0.00012969500000000259, 0.00012983299999999934, 0.00012919399999999914, 0.00013000000000000164, 0.00012942999999999982, 0.00013002800000000078, 0.00013001399999999774, 0.00012981899999999977, 0.00012900000000000064, 0.00012922300000000123, 0.00012919399999999914, 0.00012916699999999948, 0.0001295140000000007, 0.00012940199999999721, 0.0001294859999999981, 0.00012931900000000274, 0.00012961099999999823, 0.00012955499999999995, 0.00012944400000000286, 0.00012987500000000152]</msg>
<status status="PASS" starttime="20201110 08:33:51.569" endtime="20201110 08:33:51.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.565" endtime="20201110 08:33:51.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.574" endtime="20201110 08:33:51.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.578" endtime="20201110 08:33:51.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.576" endtime="20201110 08:33:51.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.573" endtime="20201110 08:33:51.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.202" endtime="20201110 08:33:51.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.201" endtime="20201110 08:33:51.599"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.607" endtime="20201110 08:33:51.629"></status>
</kw>
<msg timestamp="20201110 08:33:51.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.606" endtime="20201110 08:33:51.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.630" endtime="20201110 08:33:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.633" endtime="20201110 08:33:51.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.603" endtime="20201110 08:33:51.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.601" endtime="20201110 08:33:51.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.642" endtime="20201110 08:33:51.930"></status>
</kw>
<msg timestamp="20201110 08:33:51.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.640" endtime="20201110 08:33:51.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.934" endtime="20201110 08:33:51.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.942" endtime="20201110 08:33:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.638" endtime="20201110 08:33:51.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.636" endtime="20201110 08:33:51.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.949" level="INFO">${RESULT} = [{'time': 0.022022014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013057, 'source_diff': 0.00013057}, {'time': 0.022214111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013094400000000...</msg>
<status status="PASS" starttime="20201110 08:33:51.945" endtime="20201110 08:33:51.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.962" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:51.950" endtime="20201110 08:33:51.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.966" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.965" endtime="20201110 08:33:51.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.969" level="INFO">VALUE: [0.00013057, 0.0001309440000000009, 0.00013013899999999787, 0.0001301249999999983, 0.00013076400000000196, 0.00013049999999999867, 0.0001307920000000011, 0.0001307080000000002, 0.00013030600000000017, 0.00013101399999999874, 0.00013086099999999948, 0.0001304590000000029, 0.00013040300000000116, 0.00013101299999999927, 0.0001302920000000006, 0.0001300829999999996, 0.00013081900000000077, 0.00013044499999999987, 0.00013099999999999917, 0.00013027799999999756, 0.00013002800000000078, 0.00013005599999999992, 0.00013037499999999855, 0.0001303469999999994, 0.00013043000000000082, 0.00013037500000000202, 0.00013083300000000034, 0.00013094399999999742, 0.0001303339999999993, 0.00013050000000000214, 0.0001304590000000029, 0.0001305830000000001, 0.00013091600000000175, 0.00013026400000000146, 0.0001302089999999992, 0.00013040200000000168, 0.00013080600000000067, 0.00013043000000000082, 0.0001301249999999983, 0.0001306669999999975, 0.00013005599999999992, 0.0001305830000000001, 0.0001308339999999998, 0.0001308059999999972, 0.0001308189999999973, 0.00013019499999999962, 0.00013101399999999874, 0.00013069400000000064, 0.0001301799999999971, 0.0001307920000000011]</msg>
<status status="PASS" starttime="20201110 08:33:51.967" endtime="20201110 08:33:51.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.963" endtime="20201110 08:33:51.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.972" endtime="20201110 08:33:51.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.976" endtime="20201110 08:33:51.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.974" endtime="20201110 08:33:51.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.971" endtime="20201110 08:33:51.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.600" endtime="20201110 08:33:51.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.599" endtime="20201110 08:33:51.997"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.006" endtime="20201110 08:33:52.027"></status>
</kw>
<msg timestamp="20201110 08:33:52.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.004" endtime="20201110 08:33:52.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.029" endtime="20201110 08:33:52.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.031" endtime="20201110 08:33:52.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.001" endtime="20201110 08:33:52.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.999" endtime="20201110 08:33:52.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.040" endtime="20201110 08:33:52.327"></status>
</kw>
<msg timestamp="20201110 08:33:52.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.039" endtime="20201110 08:33:52.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022211139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.331" endtime="20201110 08:33:52.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.339" endtime="20201110 08:33:52.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.036" endtime="20201110 08:33:52.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.034" endtime="20201110 08:33:52.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.346" level="INFO">${RESULT} = [{'time': 0.022211139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001316249999999998, 'source_diff': 0.0001316249999999998}, {'time': 0.022408139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:52.343" endtime="20201110 08:33:52.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:52.347" endtime="20201110 08:33:52.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.364" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.363" endtime="20201110 08:33:52.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.366" level="INFO">VALUE: [0.0001316249999999998, 0.0001319860000000006, 0.00013136099999999998, 0.00013191700000000223, 0.00013129199999999813, 0.0001316669999999985, 0.000131166000000002, 0.00013123599999999985, 0.00013197200000000103, 0.0001314449999999974, 0.00013174999999999992, 0.0001318059999999982, 0.00013143000000000182, 0.00013127799999999856, 0.00013127799999999856, 0.00013173600000000035, 0.00013141599999999878, 0.0001311249999999993, 0.00013155499999999848, 0.0001317219999999973, 0.0001314860000000001, 0.00013116599999999853, 0.00013151399999999924, 0.00013136099999999998, 0.0001311249999999993, 0.0001312090000000002, 0.00013147200000000053, 0.00013180600000000167, 0.0001313470000000004, 0.00013136199999999945, 0.00013166700000000198, 0.00013169400000000164, 0.0001319310000000018, 0.00013192999999999885, 0.00013140300000000216, 0.00013187500000000005, 0.0001318050000000022, 0.0001319029999999992, 0.00013111099999999973, 0.00013163899999999937, 0.0001316669999999985, 0.0001316249999999998, 0.00013166700000000198, 0.00013136099999999998, 0.00013174999999999992, 0.00013179199999999863, 0.00013141599999999878, 0.00013137500000000302, 0.00013159700000000066, 0.0001319720000000045]</msg>
<status status="PASS" starttime="20201110 08:33:52.365" endtime="20201110 08:33:52.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.360" endtime="20201110 08:33:52.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.370" endtime="20201110 08:33:52.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.373" endtime="20201110 08:33:52.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.372" endtime="20201110 08:33:52.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.368" endtime="20201110 08:33:52.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.998" endtime="20201110 08:33:52.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.997" endtime="20201110 08:33:52.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.650" endtime="20201110 08:33:52.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.398" endtime="20201110 08:33:52.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.397" endtime="20201110 08:33:52.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.396" endtime="20201110 08:33:52.419"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:12.583" endtime="20201110 08:33:52.419" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.426" endtime="20201110 08:33:52.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.424" endtime="20201110 08:33:52.446"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.460" endtime="20201110 08:33:52.472"></status>
</kw>
<msg timestamp="20201110 08:33:52.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.458" endtime="20201110 08:33:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.474" endtime="20201110 08:33:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.478" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:52.476" endtime="20201110 08:33:52.478"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:52.455" endtime="20201110 08:33:52.479"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:52.452" endtime="20201110 08:33:52.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.451" endtime="20201110 08:33:52.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:52.484" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:52.483" endtime="20201110 08:33:52.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.481" endtime="20201110 08:33:52.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.450" endtime="20201110 08:33:52.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.450" endtime="20201110 08:33:52.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.485" endtime="20201110 08:33:52.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.448" endtime="20201110 08:33:52.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.447" endtime="20201110 08:33:52.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.423" endtime="20201110 08:33:52.488"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.498" endtime="20201110 08:33:52.513"></status>
</kw>
<msg timestamp="20201110 08:33:52.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.496" endtime="20201110 08:33:52.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.514" endtime="20201110 08:33:52.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.517" endtime="20201110 08:33:52.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.493" endtime="20201110 08:33:52.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.491" endtime="20201110 08:33:52.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.526" endtime="20201110 08:33:52.810"></status>
</kw>
<msg timestamp="20201110 08:33:52.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.524" endtime="20201110 08:33:52.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064618083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064650208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.814" endtime="20201110 08:33:52.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.823" endtime="20201110 08:33:52.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.522" endtime="20201110 08:33:52.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.520" endtime="20201110 08:33:52.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.831" level="INFO">${RESULT} = [{'time': 0.064650208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2124999999993964e-05, 'source_diff': 3.2124999999993964e-05}, {'time': 0.064706083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.827" endtime="20201110 08:33:52.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.844" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:52.832" endtime="20201110 08:33:52.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.849" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.848" endtime="20201110 08:33:52.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.852" level="INFO">VALUE: [3.2124999999993964e-05, 3.151399999999638e-05, 3.148699999999671e-05, 3.152799999998901e-05, 3.1596999999994324e-05, 3.152800000000289e-05, 3.151399999999638e-05, 3.152800000000289e-05, 3.150000000000375e-05, 3.150000000000375e-05, 3.152800000000289e-05, 3.150000000000375e-05, 3.151399999999638e-05, 3.152800000000289e-05, 3.154100000000992e-05, 3.152800000000289e-05, 3.151399999999638e-05, 3.151399999999638e-05, 3.147199999999073e-05, 3.1527000000003413e-05, 3.150000000000375e-05, 3.150000000000375e-05, 3.147200000000461e-05, 3.151399999999638e-05, 3.1527000000003413e-05, 3.1512999999996905e-05, 3.151399999999638e-05, 3.151399999999638e-05, 3.151399999999638e-05, 3.1540999999996044e-05, 3.151399999999638e-05, 3.151399999999638e-05, 3.151399999999638e-05, 3.1568999999995184e-05, 3.151399999999638e-05, 3.1512999999996905e-05, 3.149999999998987e-05, 3.152799999998901e-05, 3.152800000000289e-05, 3.151399999999638e-05, 3.150000000000375e-05, 3.152799999998901e-05, 3.1512999999996905e-05, 3.148599999999724e-05, 3.148700000001059e-05, 3.155600000000203e-05, 3.145900000001145e-05, 3.148599999999724e-05, 3.154199999999552e-05, 3.1542000000009396e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.851" endtime="20201110 08:33:52.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.846" endtime="20201110 08:33:52.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.856" endtime="20201110 08:33:52.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.859" endtime="20201110 08:33:52.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.858" endtime="20201110 08:33:52.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.854" endtime="20201110 08:33:52.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.490" endtime="20201110 08:33:52.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.489" endtime="20201110 08:33:52.880"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.889" endtime="20201110 08:33:52.904"></status>
</kw>
<msg timestamp="20201110 08:33:52.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.888" endtime="20201110 08:33:52.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.905" endtime="20201110 08:33:52.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.908" endtime="20201110 08:33:52.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.885" endtime="20201110 08:33:52.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.883" endtime="20201110 08:33:52.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.917" endtime="20201110 08:33:53.204"></status>
</kw>
<msg timestamp="20201110 08:33:53.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.916" endtime="20201110 08:33:53.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.208" endtime="20201110 08:33:53.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.217" endtime="20201110 08:33:53.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.913" endtime="20201110 08:33:53.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.911" endtime="20201110 08:33:53.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.223" level="INFO">${RESULT} = [{'time': 0.022452903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.213900000000047e-05, 'source_diff': 3.213900000000047e-05}, {'time': 0.022507194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:53.220" endtime="20201110 08:33:53.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.237" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:53.224" endtime="20201110 08:33:53.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.242" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.241" endtime="20201110 08:33:53.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.244" level="INFO">VALUE: [3.213900000000047e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.148599999999724e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.155600000000203e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.148600000000071e-05, 3.149999999999681e-05, 3.152800000000289e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.148600000000071e-05, 3.151399999999985e-05, 3.155599999999856e-05, 3.151399999999985e-05, 3.156999999999813e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.147199999999767e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.148700000000018e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.148599999999724e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.14579999999981e-05, 3.148600000000071e-05, 3.156999999999813e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.152799999999942e-05, 3.148700000000018e-05, 3.150000000000028e-05, 3.152799999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.243" endtime="20201110 08:33:53.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.238" endtime="20201110 08:33:53.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.247" endtime="20201110 08:33:53.249"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.251" endtime="20201110 08:33:53.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.250" endtime="20201110 08:33:53.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.246" endtime="20201110 08:33:53.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.881" endtime="20201110 08:33:53.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.881" endtime="20201110 08:33:53.272"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.281" endtime="20201110 08:33:53.295"></status>
</kw>
<msg timestamp="20201110 08:33:53.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.279" endtime="20201110 08:33:53.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.297" endtime="20201110 08:33:53.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.299" endtime="20201110 08:33:53.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.277" endtime="20201110 08:33:53.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.274" endtime="20201110 08:33:53.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.310" endtime="20201110 08:33:53.597"></status>
</kw>
<msg timestamp="20201110 08:33:53.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.307" endtime="20201110 08:33:53.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022032708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.601" endtime="20201110 08:33:53.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.610" endtime="20201110 08:33:53.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.304" endtime="20201110 08:33:53.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.303" endtime="20201110 08:33:53.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.616" level="INFO">${RESULT} = [{'time': 0.022032708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.022083583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:53.613" endtime="20201110 08:33:53.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:53.617" endtime="20201110 08:33:53.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.636" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.635" endtime="20201110 08:33:53.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.639" level="INFO">VALUE: [3.21250000000009e-05, 3.147200000000114e-05, 3.151400000000332e-05, 3.154200000000246e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.148700000000018e-05, 3.152799999999942e-05, 3.1554999999999084e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.154199999999899e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.148600000000071e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.148599999999724e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.152800000000289e-05, 3.148600000000071e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.1513000000000374e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.1444000000002e-05, 3.152800000000289e-05, 3.152799999999942e-05, 3.148600000000071e-05, 3.155599999999856e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.145900000000104e-05, 3.148599999999724e-05, 3.1513000000000374e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.637" endtime="20201110 08:33:53.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.632" endtime="20201110 08:33:53.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.642" endtime="20201110 08:33:53.643"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.646" endtime="20201110 08:33:53.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.644" endtime="20201110 08:33:53.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.641" endtime="20201110 08:33:53.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.273" endtime="20201110 08:33:53.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.272" endtime="20201110 08:33:53.667"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.675" endtime="20201110 08:33:53.690"></status>
</kw>
<msg timestamp="20201110 08:33:53.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.674" endtime="20201110 08:33:53.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.691" endtime="20201110 08:33:53.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.694" endtime="20201110 08:33:53.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.671" endtime="20201110 08:33:53.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.669" endtime="20201110 08:33:53.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.703" endtime="20201110 08:33:53.990"></status>
</kw>
<msg timestamp="20201110 08:33:53.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.701" endtime="20201110 08:33:53.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022015389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.994" endtime="20201110 08:33:54.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.003" endtime="20201110 08:33:54.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.699" endtime="20201110 08:33:54.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.697" endtime="20201110 08:33:54.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.010" level="INFO">${RESULT} = [{'time': 0.022047514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.21250000000009e-05, 'source_diff': 3.21250000000009e-05}, {'time': 0.022095306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:54.006" endtime="20201110 08:33:54.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.023" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:54.011" endtime="20201110 08:33:54.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.028" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.027" endtime="20201110 08:33:54.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.030" level="INFO">VALUE: [3.21250000000009e-05, 3.152799999999942e-05, 3.148600000000071e-05, 3.152799999999942e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.14579999999981e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.144399999999853e-05, 3.148599999999724e-05, 3.148600000000071e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.148600000000071e-05, 3.152799999999942e-05, 3.151399999999985e-05, 3.1554999999999084e-05, 3.1582999999998224e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.152800000000289e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.147200000000114e-05, 3.151399999999985e-05, 3.152800000000289e-05, 3.151399999999985e-05, 3.1554999999999084e-05, 3.151399999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.029" endtime="20201110 08:33:54.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.024" endtime="20201110 08:33:54.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.034" endtime="20201110 08:33:54.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.037" endtime="20201110 08:33:54.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.036" endtime="20201110 08:33:54.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.032" endtime="20201110 08:33:54.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.668" endtime="20201110 08:33:54.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.667" endtime="20201110 08:33:54.058"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.067" endtime="20201110 08:33:54.082"></status>
</kw>
<msg timestamp="20201110 08:33:54.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.065" endtime="20201110 08:33:54.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.083" endtime="20201110 08:33:54.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.086" endtime="20201110 08:33:54.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.063" endtime="20201110 08:33:54.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.061" endtime="20201110 08:33:54.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.095" endtime="20201110 08:33:54.382"></status>
</kw>
<msg timestamp="20201110 08:33:54.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.093" endtime="20201110 08:33:54.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021931361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.386" endtime="20201110 08:33:54.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.395" endtime="20201110 08:33:54.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.090" endtime="20201110 08:33:54.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.089" endtime="20201110 08:33:54.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.402" level="INFO">${RESULT} = [{'time': 0.021931361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.213900000000047e-05, 'source_diff': 3.213900000000047e-05}, {'time': 0.021979431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.398" endtime="20201110 08:33:54.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.415" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:54.403" endtime="20201110 08:33:54.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.420" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.419" endtime="20201110 08:33:54.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.422" level="INFO">VALUE: [3.213900000000047e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.1513000000000374e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.1526999999999944e-05, 3.147199999999767e-05, 3.148600000000071e-05, 3.151399999999985e-05, 3.158300000000169e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.142999999999896e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.148600000000071e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.155600000000203e-05, 3.150000000000028e-05, 3.1513000000000374e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.148600000000071e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.147300000000061e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.152799999999942e-05, 3.150000000000028e-05, 3.1526999999999944e-05, 3.147199999999767e-05, 3.150000000000028e-05, 3.151399999999985e-05, 3.151399999999985e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.151399999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.421" endtime="20201110 08:33:54.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.416" endtime="20201110 08:33:54.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.426" endtime="20201110 08:33:54.427"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.429" endtime="20201110 08:33:54.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.428" endtime="20201110 08:33:54.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.424" endtime="20201110 08:33:54.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.059" endtime="20201110 08:33:54.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.059" endtime="20201110 08:33:54.450"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.459" endtime="20201110 08:33:54.474"></status>
</kw>
<msg timestamp="20201110 08:33:54.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.458" endtime="20201110 08:33:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.475" endtime="20201110 08:33:54.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.478" endtime="20201110 08:33:54.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.455" endtime="20201110 08:33:54.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.453" endtime="20201110 08:33:54.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.487" endtime="20201110 08:33:54.773"></status>
</kw>
<msg timestamp="20201110 08:33:54.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.485" endtime="20201110 08:33:54.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.778" endtime="20201110 08:33:54.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.786" endtime="20201110 08:33:54.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.483" endtime="20201110 08:33:54.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.481" endtime="20201110 08:33:54.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.793" level="INFO">${RESULT} = [{'time': 0.021944681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.704200000000102e-05, 'source_diff': 3.704200000000102e-05}, {'time': 0.021999542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.790" endtime="20201110 08:33:54.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.807" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:54.794" endtime="20201110 08:33:54.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.811" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.810" endtime="20201110 08:33:54.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.814" level="INFO">VALUE: [3.704200000000102e-05, 3.644499999999953e-05, 3.643000000000049e-05, 3.643000000000049e-05, 3.64580000000031e-05, 3.6389000000001254e-05, 3.636200000000159e-05, 3.150000000000028e-05, 3.6430999999999963e-05, 3.640200000000135e-05, 3.6417000000000394e-05, 3.644400000000006e-05, 3.645799999999963e-05, 3.649999999999834e-05, 3.154200000000246e-05, 3.6430999999999963e-05, 3.6402999999997354e-05, 3.1526999999999944e-05, 3.644400000000006e-05, 3.645900000000257e-05, 3.6430999999999963e-05, 3.642999999999702e-05, 3.64580000000031e-05, 3.644400000000006e-05, 3.64719999999992e-05, 3.644400000000006e-05, 3.6360999999998644e-05, 3.6346999999999074e-05, 3.644400000000006e-05, 3.6417000000000394e-05, 3.6430999999999963e-05, 3.150000000000028e-05, 3.641600000000092e-05, 3.645799999999963e-05, 3.6389000000001254e-05, 3.6430999999999963e-05, 3.644400000000006e-05, 3.150000000000028e-05, 3.152799999999942e-05, 3.6402999999997354e-05, 3.6430999999999963e-05, 3.6403000000000824e-05, 3.644400000000006e-05, 3.151399999999985e-05, 3.152800000000289e-05, 3.644499999999953e-05, 3.6430999999999963e-05, 3.151399999999985e-05, 3.645799999999963e-05, 3.643000000000049e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.812" endtime="20201110 08:33:54.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.807" endtime="20201110 08:33:54.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.817" endtime="20201110 08:33:54.819"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.821" endtime="20201110 08:33:54.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.819" endtime="20201110 08:33:54.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.816" endtime="20201110 08:33:54.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.451" endtime="20201110 08:33:54.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.451" endtime="20201110 08:33:54.842"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.850" endtime="20201110 08:33:54.865"></status>
</kw>
<msg timestamp="20201110 08:33:54.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.849" endtime="20201110 08:33:54.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.867" endtime="20201110 08:33:54.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.869" endtime="20201110 08:33:54.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.846" endtime="20201110 08:33:54.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.844" endtime="20201110 08:33:54.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.879" endtime="20201110 08:33:55.166"></status>
</kw>
<msg timestamp="20201110 08:33:55.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.878" endtime="20201110 08:33:55.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021890042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.171" endtime="20201110 08:33:55.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.179" endtime="20201110 08:33:55.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.875" endtime="20201110 08:33:55.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.873" endtime="20201110 08:33:55.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.186" level="INFO">${RESULT} = [{'time': 0.021927111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7069000000000685e-05, 'source_diff': 3.7069000000000685e-05}, {'time': 0.0219885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.182" endtime="20201110 08:33:55.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.201" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.187" endtime="20201110 08:33:55.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.205" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.204" endtime="20201110 08:33:55.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.208" level="INFO">VALUE: [3.7069000000000685e-05, 3.644400000000006e-05, 3.647299999999867e-05, 3.64589999999991e-05, 3.644499999999953e-05, 3.6403000000000824e-05, 3.641600000000092e-05, 3.6417000000000394e-05, 3.644499999999953e-05, 3.644400000000006e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.643000000000049e-05, 3.641600000000092e-05, 3.641600000000092e-05, 3.64719999999992e-05, 3.64719999999992e-05, 3.645799999999963e-05, 3.643000000000049e-05, 3.643000000000049e-05, 3.6374999999998214e-05, 3.6417000000000394e-05, 3.644499999999953e-05, 3.643000000000049e-05, 3.6430999999999963e-05, 3.6417000000000394e-05, 3.6374999999998214e-05, 3.643000000000049e-05, 3.644400000000006e-05, 3.6375000000001684e-05, 3.6430999999999963e-05, 3.6445000000003e-05, 3.6445000000003e-05, 3.6388999999997784e-05, 3.645799999999963e-05, 3.643000000000049e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.641600000000092e-05, 3.6430999999999963e-05, 3.6403000000000824e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.652800000000095e-05, 3.6417000000000394e-05, 3.643000000000049e-05, 3.641600000000092e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.206" endtime="20201110 08:33:55.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.202" endtime="20201110 08:33:55.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.212" endtime="20201110 08:33:55.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.215" endtime="20201110 08:33:55.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.213" endtime="20201110 08:33:55.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.210" endtime="20201110 08:33:55.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.843" endtime="20201110 08:33:55.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.842" endtime="20201110 08:33:55.236"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.245" endtime="20201110 08:33:55.260"></status>
</kw>
<msg timestamp="20201110 08:33:55.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.243" endtime="20201110 08:33:55.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.261" endtime="20201110 08:33:55.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.264" endtime="20201110 08:33:55.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.241" endtime="20201110 08:33:55.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.238" endtime="20201110 08:33:55.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.273" endtime="20201110 08:33:55.559"></status>
</kw>
<msg timestamp="20201110 08:33:55.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.271" endtime="20201110 08:33:55.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.563" endtime="20201110 08:33:55.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.572" endtime="20201110 08:33:55.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.269" endtime="20201110 08:33:55.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.267" endtime="20201110 08:33:55.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.579" level="INFO">${RESULT} = [{'time': 0.022043944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7054999999997645e-05, 'source_diff': 3.7054999999997645e-05}, {'time': 0.022107222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.575" endtime="20201110 08:33:55.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.580" endtime="20201110 08:33:55.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.597" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.596" endtime="20201110 08:33:55.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.599" level="INFO">VALUE: [3.7054999999997645e-05, 3.643000000000049e-05, 3.645799999999963e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.644499999999953e-05, 3.6389000000001254e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.6374999999998214e-05, 3.6445000000003e-05, 3.641599999999745e-05, 3.6388999999997784e-05, 3.6417000000000394e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.643000000000049e-05, 3.6445000000003e-05, 3.6445000000003e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.644400000000006e-05, 3.64719999999992e-05, 3.6417000000000394e-05, 3.645799999999963e-05, 3.6417000000000394e-05, 3.6389000000001254e-05, 3.6417000000000394e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.643000000000049e-05, 3.642999999999702e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.6375000000001684e-05, 3.6374999999998214e-05, 3.645799999999963e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.641600000000092e-05, 3.641600000000092e-05, 3.6417000000000394e-05, 3.64589999999991e-05, 3.6389000000001254e-05, 3.6403000000000824e-05, 3.644400000000006e-05, 3.643000000000049e-05, 3.6388999999997784e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.598" endtime="20201110 08:33:55.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.593" endtime="20201110 08:33:55.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.603" endtime="20201110 08:33:55.604"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.607" endtime="20201110 08:33:55.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.605" endtime="20201110 08:33:55.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.601" endtime="20201110 08:33:55.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.237" endtime="20201110 08:33:55.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.236" endtime="20201110 08:33:55.627"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.636" endtime="20201110 08:33:55.651"></status>
</kw>
<msg timestamp="20201110 08:33:55.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.635" endtime="20201110 08:33:55.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.652" endtime="20201110 08:33:55.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.655" endtime="20201110 08:33:55.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.632" endtime="20201110 08:33:55.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.630" endtime="20201110 08:33:55.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.664" endtime="20201110 08:33:55.950"></status>
</kw>
<msg timestamp="20201110 08:33:55.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.662" endtime="20201110 08:33:55.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.954" endtime="20201110 08:33:55.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.963" endtime="20201110 08:33:55.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.660" endtime="20201110 08:33:55.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.658" endtime="20201110 08:33:55.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.969" level="INFO">${RESULT} = [{'time': 0.021918903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.705600000000059e-05, 'source_diff': 3.705600000000059e-05}, {'time': 0.021969722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:55.966" endtime="20201110 08:33:55.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:55.970" endtime="20201110 08:33:55.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.987" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.986" endtime="20201110 08:33:55.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.990" level="INFO">VALUE: [3.705600000000059e-05, 3.643000000000049e-05, 3.64589999999991e-05, 3.648600000000224e-05, 3.6374999999998214e-05, 3.644499999999953e-05, 3.644400000000006e-05, 3.649999999999834e-05, 3.6445000000003e-05, 3.644499999999953e-05, 3.6445000000003e-05, 3.643000000000049e-05, 3.644400000000006e-05, 3.644400000000006e-05, 3.6374999999998214e-05, 3.645799999999963e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.644400000000006e-05, 3.643000000000049e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.6417000000000394e-05, 3.641600000000092e-05, 3.6430999999999963e-05, 3.643000000000049e-05, 3.641600000000092e-05, 3.6430999999999963e-05, 3.644400000000006e-05, 3.6361000000002114e-05, 3.6430999999999963e-05, 3.6361000000002114e-05, 3.643000000000049e-05, 3.6360999999998644e-05, 3.6403000000000824e-05, 3.643000000000049e-05, 3.644499999999953e-05, 3.6403000000000824e-05, 3.6375000000001684e-05, 3.6388999999997784e-05, 3.641600000000092e-05, 3.6445000000003e-05, 3.6430999999999963e-05, 3.64589999999991e-05, 3.644400000000006e-05, 3.6403000000000824e-05, 3.644400000000006e-05, 3.643000000000049e-05, 3.643000000000049e-05, 3.644499999999953e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.988" endtime="20201110 08:33:55.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.984" endtime="20201110 08:33:55.991"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.994" endtime="20201110 08:33:55.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.997" endtime="20201110 08:33:56.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.995" endtime="20201110 08:33:56.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.992" endtime="20201110 08:33:56.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.628" endtime="20201110 08:33:56.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.628" endtime="20201110 08:33:56.018"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.027" endtime="20201110 08:33:56.042"></status>
</kw>
<msg timestamp="20201110 08:33:56.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.025" endtime="20201110 08:33:56.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.043" endtime="20201110 08:33:56.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.046" endtime="20201110 08:33:56.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.023" endtime="20201110 08:33:56.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.020" endtime="20201110 08:33:56.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.055" endtime="20201110 08:33:56.341"></status>
</kw>
<msg timestamp="20201110 08:33:56.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.053" endtime="20201110 08:33:56.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022367486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.346" endtime="20201110 08:33:56.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.354" endtime="20201110 08:33:56.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.051" endtime="20201110 08:33:56.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.049" endtime="20201110 08:33:56.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.361" level="INFO">${RESULT} = [{'time': 0.022367486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7068999999997215e-05, 'source_diff': 3.7068999999997215e-05}, {'time': 0.022427319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.358" endtime="20201110 08:33:56.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.375" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:56.362" endtime="20201110 08:33:56.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.379" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.378" endtime="20201110 08:33:56.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.382" level="INFO">VALUE: [3.7068999999997215e-05, 3.643000000000049e-05, 3.6389000000001254e-05, 3.644499999999953e-05, 3.6374999999998214e-05, 3.642999999999702e-05, 3.644400000000006e-05, 3.648599999999877e-05, 3.643000000000049e-05, 3.6417000000000394e-05, 3.6403000000000824e-05, 3.641600000000092e-05, 3.6445000000003e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.644499999999953e-05, 3.643000000000049e-05, 3.6445000000003e-05, 3.644400000000006e-05, 3.644499999999953e-05, 3.6417000000000394e-05, 3.644400000000006e-05, 3.651399999999791e-05, 3.641600000000092e-05, 3.644499999999953e-05, 3.6403000000000824e-05, 3.643000000000049e-05, 3.642999999999702e-05, 3.644400000000006e-05, 3.642999999999702e-05, 3.644400000000006e-05, 3.643000000000049e-05, 3.6430999999999963e-05, 3.644400000000006e-05, 3.644400000000006e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.6430999999999963e-05, 3.644499999999953e-05, 3.643000000000049e-05, 3.644400000000006e-05, 3.6430999999999963e-05, 3.643000000000049e-05, 3.645799999999963e-05, 3.644499999999953e-05, 3.644499999999953e-05, 3.6389000000001254e-05, 3.644400000000006e-05, 3.643000000000049e-05, 3.6430999999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.380" endtime="20201110 08:33:56.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.376" endtime="20201110 08:33:56.383"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.385" endtime="20201110 08:33:56.387"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.389" endtime="20201110 08:33:56.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.387" endtime="20201110 08:33:56.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.384" endtime="20201110 08:33:56.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.019" endtime="20201110 08:33:56.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.018" endtime="20201110 08:33:56.410"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.418" endtime="20201110 08:33:56.434"></status>
</kw>
<msg timestamp="20201110 08:33:56.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.417" endtime="20201110 08:33:56.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.435" endtime="20201110 08:33:56.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.438" endtime="20201110 08:33:56.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.414" endtime="20201110 08:33:56.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.412" endtime="20201110 08:33:56.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.447" endtime="20201110 08:33:56.733"></status>
</kw>
<msg timestamp="20201110 08:33:56.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.445" endtime="20201110 08:33:56.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022146292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.738" endtime="20201110 08:33:56.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.746" endtime="20201110 08:33:56.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.443" endtime="20201110 08:33:56.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.441" endtime="20201110 08:33:56.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.753" level="INFO">${RESULT} = [{'time': 0.022146292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.705600000000059e-05, 'source_diff': 3.705600000000059e-05}, {'time': 0.022202653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:56.750" endtime="20201110 08:33:56.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.768" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:56.754" endtime="20201110 08:33:56.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.772" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.771" endtime="20201110 08:33:56.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.775" level="INFO">VALUE: [3.705600000000059e-05, 4.1361000000000175e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 3.6430999999999963e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.134800000000008e-05, 4.1361000000000175e-05, 4.133400000000051e-05, 3.6417000000000394e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 3.6374999999998214e-05, 4.134800000000008e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1360999999996706e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1346999999997136e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1346999999997136e-05, 4.1347000000000605e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.773" endtime="20201110 08:33:56.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.769" endtime="20201110 08:33:56.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.779" endtime="20201110 08:33:56.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.782" endtime="20201110 08:33:56.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.781" endtime="20201110 08:33:56.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.777" endtime="20201110 08:33:56.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.411" endtime="20201110 08:33:56.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.410" endtime="20201110 08:33:56.803"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.812" endtime="20201110 08:33:56.827"></status>
</kw>
<msg timestamp="20201110 08:33:56.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.810" endtime="20201110 08:33:56.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.828" endtime="20201110 08:33:56.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.831" endtime="20201110 08:33:56.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.807" endtime="20201110 08:33:56.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.805" endtime="20201110 08:33:56.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.840" endtime="20201110 08:33:57.127"></status>
</kw>
<msg timestamp="20201110 08:33:57.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.838" endtime="20201110 08:33:57.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.132" endtime="20201110 08:33:57.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.140" endtime="20201110 08:33:57.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.836" endtime="20201110 08:33:57.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.834" endtime="20201110 08:33:57.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.147" level="INFO">${RESULT} = [{'time': 0.022053597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.200000000000037e-05, 'source_diff': 4.200000000000037e-05}, {'time': 0.022118639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.144" endtime="20201110 08:33:57.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.148" endtime="20201110 08:33:57.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.165" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.164" endtime="20201110 08:33:57.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.168" level="INFO">VALUE: [4.200000000000037e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1305000000001896e-05, 4.1347000000000605e-05, 4.1290999999998856e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1402999999998885e-05, 4.1319000000001466e-05, 4.1361000000000175e-05, 4.133400000000051e-05, 4.1388999999999315e-05, 4.133400000000051e-05, 4.1332999999997566e-05, 4.1361000000000175e-05, 4.133400000000051e-05, 4.1319000000001466e-05, 4.126399999999919e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1291000000002326e-05, 4.1347000000000605e-05, 4.134800000000008e-05, 4.1319000000001466e-05, 4.1361000000000175e-05, 4.132000000000094e-05, 4.1290999999998856e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1318999999997996e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.133400000000051e-05, 4.1347000000000605e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.13059999999979e-05, 4.1347000000000605e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1332999999997566e-05, 4.1374999999999745e-05, 4.1346999999997136e-05, 4.1347000000000605e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.166" endtime="20201110 08:33:57.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.161" endtime="20201110 08:33:57.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.171" endtime="20201110 08:33:57.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.175" endtime="20201110 08:33:57.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.173" endtime="20201110 08:33:57.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.170" endtime="20201110 08:33:57.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.804" endtime="20201110 08:33:57.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.803" endtime="20201110 08:33:57.196"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.204" endtime="20201110 08:33:57.220"></status>
</kw>
<msg timestamp="20201110 08:33:57.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.203" endtime="20201110 08:33:57.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.221" endtime="20201110 08:33:57.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.224" endtime="20201110 08:33:57.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.200" endtime="20201110 08:33:57.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.198" endtime="20201110 08:33:57.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.233" endtime="20201110 08:33:57.519"></status>
</kw>
<msg timestamp="20201110 08:33:57.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.231" endtime="20201110 08:33:57.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.524" endtime="20201110 08:33:57.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.532" endtime="20201110 08:33:57.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.229" endtime="20201110 08:33:57.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.227" endtime="20201110 08:33:57.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.539" level="INFO">${RESULT} = [{'time': 0.022065722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195799999999819e-05, 'source_diff': 4.195799999999819e-05}, {'time': 0.022139208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.536" endtime="20201110 08:33:57.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.552" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.540" endtime="20201110 08:33:57.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.557" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.556" endtime="20201110 08:33:57.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.560" level="INFO">VALUE: [4.195799999999819e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.130600000000137e-05, 4.136199999999965e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1332999999997566e-05, 4.138799999999984e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1403000000002355e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.138799999999984e-05, 4.1347000000000605e-05, 4.132000000000094e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.1318999999997996e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.134800000000008e-05, 4.1360999999996706e-05, 4.1333000000001036e-05, 4.140199999999941e-05, 4.132000000000094e-05, 4.1374999999999745e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.558" endtime="20201110 08:33:57.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.553" endtime="20201110 08:33:57.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.563" endtime="20201110 08:33:57.565"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.567" endtime="20201110 08:33:57.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.565" endtime="20201110 08:33:57.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.562" endtime="20201110 08:33:57.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.197" endtime="20201110 08:33:57.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.196" endtime="20201110 08:33:57.588"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.596" endtime="20201110 08:33:57.612"></status>
</kw>
<msg timestamp="20201110 08:33:57.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.595" endtime="20201110 08:33:57.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.613" endtime="20201110 08:33:57.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.616" endtime="20201110 08:33:57.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.592" endtime="20201110 08:33:57.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.590" endtime="20201110 08:33:57.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.625" endtime="20201110 08:33:57.912"></status>
</kw>
<msg timestamp="20201110 08:33:57.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.623" endtime="20201110 08:33:57.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022112097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022154069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.916" endtime="20201110 08:33:57.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.925" endtime="20201110 08:33:57.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.621" endtime="20201110 08:33:57.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.619" endtime="20201110 08:33:57.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.932" level="INFO">${RESULT} = [{'time': 0.022154069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.197199999999776e-05, 'source_diff': 4.197199999999776e-05}, {'time': 0.022218514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.929" endtime="20201110 08:33:57.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.946" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:57.933" endtime="20201110 08:33:57.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.950" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.949" endtime="20201110 08:33:57.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.953" level="INFO">VALUE: [4.197199999999776e-05, 4.1347000000000605e-05, 4.136199999999965e-05, 4.134800000000008e-05, 4.1361000000000175e-05, 4.13059999999979e-05, 4.133400000000051e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1402999999998885e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1319000000001466e-05, 4.1333000000001036e-05, 4.134799999999661e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1332999999997566e-05, 4.129199999999833e-05, 4.12920000000018e-05, 4.1332999999997566e-05, 4.127799999999876e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1388999999999315e-05, 4.134800000000008e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.133400000000051e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.134800000000008e-05, 4.1388999999999315e-05, 4.1403000000002355e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.951" endtime="20201110 08:33:57.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.947" endtime="20201110 08:33:57.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.961" endtime="20201110 08:33:57.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.964" endtime="20201110 08:33:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.963" endtime="20201110 08:33:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.959" endtime="20201110 08:33:57.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.589" endtime="20201110 08:33:57.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.588" endtime="20201110 08:33:57.985"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.994" endtime="20201110 08:33:58.009"></status>
</kw>
<msg timestamp="20201110 08:33:58.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.992" endtime="20201110 08:33:58.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.011" endtime="20201110 08:33:58.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.013" endtime="20201110 08:33:58.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.990" endtime="20201110 08:33:58.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.988" endtime="20201110 08:33:58.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.022" endtime="20201110 08:33:58.317"></status>
</kw>
<msg timestamp="20201110 08:33:58.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:58.021" endtime="20201110 08:33:58.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0222045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:58.321" endtime="20201110 08:33:58.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.330" endtime="20201110 08:33:58.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.018" endtime="20201110 08:33:58.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.016" endtime="20201110 08:33:58.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.336" level="INFO">${RESULT} = [{'time': 0.0222045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.198599999999733e-05, 'source_diff': 4.198599999999733e-05}, {'time': 0.022260222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:58.333" endtime="20201110 08:33:58.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.351" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:58.337" endtime="20201110 08:33:58.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.356" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.355" endtime="20201110 08:33:58.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.358" level="INFO">VALUE: [4.198599999999733e-05, 4.1347000000000605e-05, 4.132000000000094e-05, 4.133400000000051e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1332999999997566e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.134800000000008e-05, 4.134800000000008e-05, 4.12920000000018e-05, 4.1347000000000605e-05, 4.134800000000008e-05, 4.1333000000001036e-05, 4.136199999999965e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.136199999999965e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.1346999999997136e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1403000000002355e-05, 4.1332999999997566e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.129199999999833e-05, 4.1333000000001036e-05, 4.1333000000001036e-05, 4.1360999999996706e-05, 4.1333000000001036e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.357" endtime="20201110 08:33:58.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.352" endtime="20201110 08:33:58.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.362" endtime="20201110 08:33:58.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.365" endtime="20201110 08:33:58.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.364" endtime="20201110 08:33:58.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.360" endtime="20201110 08:33:58.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.986" endtime="20201110 08:33:58.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.985" endtime="20201110 08:33:58.386"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.395" endtime="20201110 08:33:58.410"></status>
</kw>
<msg timestamp="20201110 08:33:58.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.393" endtime="20201110 08:33:58.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.412" endtime="20201110 08:33:58.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.414" endtime="20201110 08:33:58.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.391" endtime="20201110 08:33:58.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.389" endtime="20201110 08:33:58.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.433" endtime="20201110 08:33:58.731"></status>
</kw>
<msg timestamp="20201110 08:33:58.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.428" endtime="20201110 08:33:58.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.735" endtime="20201110 08:33:58.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.743" endtime="20201110 08:33:58.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.419" endtime="20201110 08:33:58.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.417" endtime="20201110 08:33:58.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.750" level="INFO">${RESULT} = [{'time': 0.022022528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6903000000000916e-05, 'source_diff': 4.6903000000000916e-05}, {'time': 0.022097181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:58.747" endtime="20201110 08:33:58.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:58.751" endtime="20201110 08:33:58.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.768" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.767" endtime="20201110 08:33:58.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.770" level="INFO">VALUE: [4.6903000000000916e-05, 4.626400000000072e-05, 4.624999999999768e-05, 4.134800000000008e-05, 4.1346999999997136e-05, 4.627800000000029e-05, 4.625000000000115e-05, 4.6236999999997586e-05, 4.626400000000072e-05, 4.627700000000082e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.624999999999768e-05, 4.626300000000125e-05, 4.620800000000244e-05, 4.1319000000001466e-05, 4.625000000000115e-05, 4.627799999999682e-05, 4.629199999999986e-05, 4.626400000000072e-05, 4.630499999999996e-05, 4.626399999999725e-05, 4.624999999999768e-05, 4.625000000000115e-05, 4.622199999999854e-05, 4.626399999999725e-05, 4.626400000000072e-05, 4.624999999999768e-05, 4.1319000000001466e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.625000000000115e-05, 4.626400000000072e-05, 4.6319999999999e-05, 4.1333000000001036e-05, 4.626399999999725e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.626399999999725e-05, 4.627700000000082e-05, 4.627800000000029e-05, 4.624999999999768e-05, 4.625000000000115e-05, 4.626400000000072e-05, 4.627699999999735e-05, 4.627800000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.769" endtime="20201110 08:33:58.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.764" endtime="20201110 08:33:58.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.774" endtime="20201110 08:33:58.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.777" endtime="20201110 08:33:58.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.776" endtime="20201110 08:33:58.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.772" endtime="20201110 08:33:58.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.387" endtime="20201110 08:33:58.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.387" endtime="20201110 08:33:58.798"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.807" endtime="20201110 08:33:58.822"></status>
</kw>
<msg timestamp="20201110 08:33:58.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.805" endtime="20201110 08:33:58.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.824" endtime="20201110 08:33:58.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.826" endtime="20201110 08:33:58.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.803" endtime="20201110 08:33:58.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.801" endtime="20201110 08:33:58.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.835" endtime="20201110 08:33:59.122"></status>
</kw>
<msg timestamp="20201110 08:33:59.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.833" endtime="20201110 08:33:59.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.127" endtime="20201110 08:33:59.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.135" endtime="20201110 08:33:59.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.831" endtime="20201110 08:33:59.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.829" endtime="20201110 08:33:59.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.141" level="INFO">${RESULT} = [{'time': 0.021854861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6889000000001346e-05, 'source_diff': 4.6889000000001346e-05}, {'time': 0.02192275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:33:59.138" endtime="20201110 08:33:59.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:59.142" endtime="20201110 08:33:59.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.160" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.158" endtime="20201110 08:33:59.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.163" level="INFO">VALUE: [4.6889000000001346e-05, 4.6319000000003e-05, 4.631899999999953e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.620799999999897e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.625000000000115e-05, 4.623600000000158e-05, 4.629200000000333e-05, 4.626399999999725e-05, 4.629100000000039e-05, 4.626399999999725e-05, 4.623599999999811e-05, 4.630599999999943e-05, 4.624999999999768e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627700000000082e-05, 4.624999999999768e-05, 4.624999999999768e-05, 4.627799999999682e-05, 4.625000000000115e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.6319999999999e-05, 4.627800000000029e-05, 4.620799999999897e-05, 4.623600000000158e-05, 4.626400000000072e-05, 4.629199999999986e-05, 4.626400000000072e-05, 4.626399999999725e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.629199999999986e-05, 4.629199999999986e-05, 4.623600000000158e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.626399999999725e-05, 4.625000000000115e-05, 4.626300000000125e-05, 4.626300000000125e-05, 4.627800000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.161" endtime="20201110 08:33:59.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.156" endtime="20201110 08:33:59.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.166" endtime="20201110 08:33:59.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.170" endtime="20201110 08:33:59.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.168" endtime="20201110 08:33:59.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.165" endtime="20201110 08:33:59.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.799" endtime="20201110 08:33:59.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.799" endtime="20201110 08:33:59.190"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.199" endtime="20201110 08:33:59.215"></status>
</kw>
<msg timestamp="20201110 08:33:59.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.198" endtime="20201110 08:33:59.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.216" endtime="20201110 08:33:59.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.219" endtime="20201110 08:33:59.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.195" endtime="20201110 08:33:59.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.193" endtime="20201110 08:33:59.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.227" endtime="20201110 08:33:59.534"></status>
</kw>
<msg timestamp="20201110 08:33:59.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:59.226" endtime="20201110 08:33:59.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858806, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:59.539" endtime="20201110 08:33:59.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.547" endtime="20201110 08:33:59.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.223" endtime="20201110 08:33:59.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.222" endtime="20201110 08:33:59.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.553" level="INFO">${RESULT} = [{'time': 0.021858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.680599999999993e-05, 'source_diff': 4.680599999999993e-05}, {'time': 0.021926319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.550" endtime="20201110 08:33:59.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.568" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:59.554" endtime="20201110 08:33:59.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.572" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.571" endtime="20201110 08:33:59.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.575" level="INFO">VALUE: [4.680599999999993e-05, 4.627700000000082e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.625000000000115e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.620799999999897e-05, 4.626400000000072e-05, 4.623600000000158e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.627700000000082e-05, 4.627800000000029e-05, 4.6361000000001706e-05, 4.626400000000072e-05, 4.630599999999943e-05, 4.627800000000029e-05, 4.627700000000082e-05, 4.633400000000204e-05, 4.625000000000115e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.625000000000115e-05, 4.630599999999943e-05, 4.622199999999854e-05, 4.625000000000115e-05, 4.626299999999778e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627799999999682e-05, 4.627700000000082e-05, 4.626399999999725e-05, 4.626400000000072e-05, 4.627700000000082e-05, 4.622200000000201e-05, 4.631899999999953e-05, 4.627799999999682e-05, 4.624999999999768e-05, 4.625000000000115e-05, 4.630599999999943e-05, 4.627800000000029e-05, 4.625000000000115e-05, 4.63329999999991e-05, 4.625000000000115e-05, 4.629199999999986e-05, 4.627800000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.573" endtime="20201110 08:33:59.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.569" endtime="20201110 08:33:59.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.578" endtime="20201110 08:33:59.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.581" endtime="20201110 08:33:59.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.580" endtime="20201110 08:33:59.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.577" endtime="20201110 08:33:59.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.191" endtime="20201110 08:33:59.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.191" endtime="20201110 08:33:59.602"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.611" endtime="20201110 08:33:59.626"></status>
</kw>
<msg timestamp="20201110 08:33:59.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.609" endtime="20201110 08:33:59.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.628" endtime="20201110 08:33:59.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.630" endtime="20201110 08:33:59.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.607" endtime="20201110 08:33:59.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.605" endtime="20201110 08:33:59.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.639" endtime="20201110 08:33:59.925"></status>
</kw>
<msg timestamp="20201110 08:33:59.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.638" endtime="20201110 08:33:59.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.929" endtime="20201110 08:33:59.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.938" endtime="20201110 08:33:59.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.635" endtime="20201110 08:33:59.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.633" endtime="20201110 08:33:59.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.944" level="INFO">${RESULT} = [{'time': 0.021896264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.688899999999788e-05, 'source_diff': 4.688899999999788e-05}, {'time': 0.021973111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.941" endtime="20201110 08:33:59.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.961" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:33:59.946" endtime="20201110 08:33:59.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.965" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.964" endtime="20201110 08:33:59.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.968" level="INFO">VALUE: [4.688899999999788e-05, 4.625000000000115e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.625000000000115e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.624999999999768e-05, 4.617999999999983e-05, 4.626400000000072e-05, 4.624999999999768e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627700000000082e-05, 4.626299999999778e-05, 4.622199999999854e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.627699999999735e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.6319999999999e-05, 4.627800000000029e-05, 4.625000000000115e-05, 4.627800000000029e-05, 4.626399999999725e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.624999999999768e-05, 4.627799999999682e-05, 4.630599999999943e-05, 4.627700000000082e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.629199999999986e-05, 4.627800000000029e-05, 4.627700000000082e-05, 4.626400000000072e-05, 4.626299999999778e-05, 4.626400000000072e-05, 4.629100000000039e-05, 4.624999999999768e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.966" endtime="20201110 08:33:59.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.962" endtime="20201110 08:33:59.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.971" endtime="20201110 08:33:59.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.975" endtime="20201110 08:33:59.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.973" endtime="20201110 08:33:59.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.970" endtime="20201110 08:33:59.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.603" endtime="20201110 08:33:59.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.603" endtime="20201110 08:33:59.996"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.004" endtime="20201110 08:34:00.020"></status>
</kw>
<msg timestamp="20201110 08:34:00.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.003" endtime="20201110 08:34:00.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.021" endtime="20201110 08:34:00.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.024" endtime="20201110 08:34:00.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.000" endtime="20201110 08:34:00.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.998" endtime="20201110 08:34:00.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.033" endtime="20201110 08:34:00.331"></status>
</kw>
<msg timestamp="20201110 08:34:00.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.031" endtime="20201110 08:34:00.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.335" endtime="20201110 08:34:00.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.346" endtime="20201110 08:34:00.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.029" endtime="20201110 08:34:00.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.027" endtime="20201110 08:34:00.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.356" level="INFO">${RESULT} = [{'time': 0.022104444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.690200000000144e-05, 'source_diff': 4.690200000000144e-05}, {'time': 0.022164181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.352" endtime="20201110 08:34:00.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.372" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:00.357" endtime="20201110 08:34:00.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.378" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.377" endtime="20201110 08:34:00.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.381" level="INFO">VALUE: [4.690200000000144e-05, 4.629199999999986e-05, 4.626300000000125e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.6333000000002567e-05, 4.625000000000115e-05, 4.627800000000029e-05, 4.626399999999725e-05, 4.629100000000039e-05, 4.623599999999811e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.625000000000115e-05, 4.622199999999854e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.626399999999725e-05, 4.625000000000115e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.626300000000125e-05, 4.626400000000072e-05, 4.629199999999986e-05, 4.624999999999768e-05, 4.627800000000029e-05, 4.629199999999986e-05, 4.627800000000029e-05, 4.627700000000082e-05, 4.629100000000039e-05, 4.629199999999986e-05, 4.629199999999986e-05, 4.623599999999811e-05, 4.627800000000029e-05, 4.626400000000072e-05, 4.625000000000115e-05, 4.629199999999986e-05, 4.626400000000072e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.627699999999735e-05, 4.6347000000002136e-05, 4.626399999999725e-05, 4.629199999999986e-05, 4.626400000000072e-05, 4.627800000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.379" endtime="20201110 08:34:00.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.373" endtime="20201110 08:34:00.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.384" endtime="20201110 08:34:00.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.388" endtime="20201110 08:34:00.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.386" endtime="20201110 08:34:00.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.383" endtime="20201110 08:34:00.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.997" endtime="20201110 08:34:00.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.996" endtime="20201110 08:34:00.409"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.417" endtime="20201110 08:34:00.433"></status>
</kw>
<msg timestamp="20201110 08:34:00.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.416" endtime="20201110 08:34:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.434" endtime="20201110 08:34:00.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.437" endtime="20201110 08:34:00.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.413" endtime="20201110 08:34:00.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.411" endtime="20201110 08:34:00.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.446" endtime="20201110 08:34:00.733"></status>
</kw>
<msg timestamp="20201110 08:34:00.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.444" endtime="20201110 08:34:00.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022043681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.738" endtime="20201110 08:34:00.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.746" endtime="20201110 08:34:00.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.442" endtime="20201110 08:34:00.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.440" endtime="20201110 08:34:00.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.753" level="INFO">${RESULT} = [{'time': 0.022043681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.190299999999898e-05, 'source_diff': 5.190299999999898e-05}, {'time': 0.022121625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.749" endtime="20201110 08:34:00.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.766" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:00.754" endtime="20201110 08:34:00.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.770" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.769" endtime="20201110 08:34:00.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.773" level="INFO">VALUE: [5.190299999999898e-05, 5.1193999999997464e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.115299999999823e-05, 5.1152000000002223e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.11669999999978e-05, 5.116700000000127e-05, 5.120899999999998e-05, 5.118100000000084e-05, 5.118000000000136e-05, 5.115299999999823e-05, 5.120899999999998e-05, 5.116700000000127e-05, 5.119500000000041e-05, 5.12080000000005e-05, 5.119400000000093e-05, 5.1179999999997894e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.116600000000179e-05, 5.1165999999998324e-05, 5.118100000000084e-05, 5.118100000000084e-05, 5.113899999999866e-05, 5.118099999999737e-05, 5.118000000000136e-05, 5.119400000000093e-05, 5.119500000000041e-05, 5.118000000000136e-05, 5.112499999999909e-05, 5.118100000000084e-05, 5.1179999999997894e-05, 5.118100000000084e-05, 5.123599999999964e-05, 5.116700000000127e-05, 5.118100000000084e-05, 5.116700000000127e-05, 5.11669999999978e-05, 5.11669999999978e-05, 5.119500000000041e-05, 5.122200000000007e-05, 5.119500000000041e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.11669999999978e-05, 5.112499999999909e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.772" endtime="20201110 08:34:00.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.767" endtime="20201110 08:34:00.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.777" endtime="20201110 08:34:00.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.780" endtime="20201110 08:34:00.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.778" endtime="20201110 08:34:00.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.775" endtime="20201110 08:34:00.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.409" endtime="20201110 08:34:00.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.409" endtime="20201110 08:34:00.801"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.810" endtime="20201110 08:34:00.825"></status>
</kw>
<msg timestamp="20201110 08:34:00.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.808" endtime="20201110 08:34:00.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.827" endtime="20201110 08:34:00.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.829" endtime="20201110 08:34:00.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.805" endtime="20201110 08:34:00.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.803" endtime="20201110 08:34:00.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.838" endtime="20201110 08:34:01.126"></status>
</kw>
<msg timestamp="20201110 08:34:01.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071819, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:00.837" endtime="20201110 08:34:01.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02202, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022071819, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:01.131" endtime="20201110 08:34:01.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.139" endtime="20201110 08:34:01.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.834" endtime="20201110 08:34:01.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.832" endtime="20201110 08:34:01.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.146" level="INFO">${RESULT} = [{'time': 0.022071819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181899999999809e-05, 'source_diff': 5.181899999999809e-05}, {'time': 0.022141458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:01.142" endtime="20201110 08:34:01.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.159" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:01.147" endtime="20201110 08:34:01.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.164" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.163" endtime="20201110 08:34:01.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.166" level="INFO">VALUE: [5.181899999999809e-05, 5.1179999999997894e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.119500000000041e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.118100000000084e-05, 5.1207999999997034e-05, 5.119500000000041e-05, 5.12080000000005e-05, 5.123599999999964e-05, 5.122200000000007e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.119400000000093e-05, 5.1193999999997464e-05, 5.12080000000005e-05, 5.118099999999737e-05, 5.118000000000136e-05, 5.113899999999866e-05, 5.119400000000093e-05, 5.119500000000041e-05, 5.1151999999998754e-05, 5.119400000000093e-05, 5.118000000000136e-05, 5.123599999999964e-05, 5.126399999999878e-05, 5.122200000000007e-05, 5.119499999999694e-05, 5.119400000000093e-05, 5.1179999999997894e-05, 5.119500000000041e-05, 5.118000000000136e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.116700000000127e-05, 5.116600000000179e-05, 5.1207999999997034e-05, 5.120899999999998e-05, 5.1193999999997464e-05, 5.122299999999955e-05, 5.118000000000136e-05, 5.118000000000136e-05, 5.120899999999998e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.1193999999997464e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.165" endtime="20201110 08:34:01.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.160" endtime="20201110 08:34:01.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.170" endtime="20201110 08:34:01.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.173" endtime="20201110 08:34:01.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.172" endtime="20201110 08:34:01.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.168" endtime="20201110 08:34:01.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.802" endtime="20201110 08:34:01.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.801" endtime="20201110 08:34:01.194"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.203" endtime="20201110 08:34:01.218"></status>
</kw>
<msg timestamp="20201110 08:34:01.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.201" endtime="20201110 08:34:01.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.220" endtime="20201110 08:34:01.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.222" endtime="20201110 08:34:01.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.199" endtime="20201110 08:34:01.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.197" endtime="20201110 08:34:01.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.231" endtime="20201110 08:34:01.518"></status>
</kw>
<msg timestamp="20201110 08:34:01.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:01.230" endtime="20201110 08:34:01.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221195, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:01.523" endtime="20201110 08:34:01.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.531" endtime="20201110 08:34:01.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.227" endtime="20201110 08:34:01.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.226" endtime="20201110 08:34:01.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.538" level="INFO">${RESULT} = [{'time': 0.0221195, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.188899999999941e-05, 'source_diff': 5.188899999999941e-05}, {'time': 0.022185653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:01.534" endtime="20201110 08:34:01.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.553" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:01.539" endtime="20201110 08:34:01.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.557" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.556" endtime="20201110 08:34:01.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.560" level="INFO">VALUE: [5.188899999999941e-05, 5.120899999999998e-05, 5.119400000000093e-05, 5.113899999999866e-05, 5.119400000000093e-05, 5.120899999999998e-05, 5.122200000000007e-05, 5.1179999999997894e-05, 5.12080000000005e-05, 5.119499999999694e-05, 5.113900000000213e-05, 5.118000000000136e-05, 5.122200000000007e-05, 5.12080000000005e-05, 5.11669999999978e-05, 5.11669999999978e-05, 5.120899999999998e-05, 5.11530000000017e-05, 5.120899999999998e-05, 5.1179999999997894e-05, 5.119500000000041e-05, 5.125000000000268e-05, 5.118000000000136e-05, 5.119400000000093e-05, 5.119500000000041e-05, 5.122200000000007e-05, 5.122200000000007e-05, 5.124999999999921e-05, 5.12080000000005e-05, 5.124999999999921e-05, 5.11530000000017e-05, 5.122200000000007e-05, 5.118100000000084e-05, 5.1207999999997034e-05, 5.119400000000093e-05, 5.118099999999737e-05, 5.119499999999694e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.122200000000007e-05, 5.122299999999955e-05, 5.122299999999955e-05, 5.122200000000007e-05, 5.119500000000041e-05, 5.122200000000007e-05, 5.120899999999998e-05, 5.118099999999737e-05, 5.12080000000005e-05, 5.12080000000005e-05, 5.12080000000005e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.558" endtime="20201110 08:34:01.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.553" endtime="20201110 08:34:01.561"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.563" endtime="20201110 08:34:01.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.567" endtime="20201110 08:34:01.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.565" endtime="20201110 08:34:01.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.562" endtime="20201110 08:34:01.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.195" endtime="20201110 08:34:01.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.194" endtime="20201110 08:34:01.587"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.596" endtime="20201110 08:34:01.612"></status>
</kw>
<msg timestamp="20201110 08:34:01.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.595" endtime="20201110 08:34:01.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.613" endtime="20201110 08:34:01.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.616" endtime="20201110 08:34:01.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.592" endtime="20201110 08:34:01.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.590" endtime="20201110 08:34:01.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.625" endtime="20201110 08:34:01.913"></status>
</kw>
<msg timestamp="20201110 08:34:01.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.623" endtime="20201110 08:34:01.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.917" endtime="20201110 08:34:01.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.925" endtime="20201110 08:34:01.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.621" endtime="20201110 08:34:01.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.619" endtime="20201110 08:34:01.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.932" level="INFO">${RESULT} = [{'time': 0.022138264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.177800000000232e-05, 'source_diff': 5.177800000000232e-05}, {'time': 0.022204472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:01.929" endtime="20201110 08:34:01.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.945" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:01.933" endtime="20201110 08:34:01.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.950" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.949" endtime="20201110 08:34:01.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.952" level="INFO">VALUE: [5.177800000000232e-05, 5.119400000000093e-05, 5.119500000000041e-05, 5.119500000000041e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.120899999999998e-05, 5.118000000000136e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.1179999999997894e-05, 5.1193999999997464e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.118000000000136e-05, 5.12080000000005e-05, 5.120899999999998e-05, 5.120899999999998e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.1223000000003016e-05, 5.118099999999737e-05, 5.12080000000005e-05, 5.118000000000136e-05, 5.116700000000127e-05, 5.11669999999978e-05, 5.119500000000041e-05, 5.118099999999737e-05, 5.1193999999997464e-05, 5.122200000000007e-05, 5.12080000000005e-05, 5.119400000000093e-05, 5.11669999999978e-05, 5.112499999999909e-05, 5.116700000000127e-05, 5.119400000000093e-05, 5.122200000000007e-05, 5.118000000000136e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.119499999999694e-05, 5.119400000000093e-05, 5.1236999999999117e-05, 5.118100000000084e-05, 5.116700000000127e-05, 5.116700000000127e-05, 5.1165999999998324e-05, 5.119500000000041e-05, 5.119500000000041e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.951" endtime="20201110 08:34:01.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.946" endtime="20201110 08:34:01.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.956" endtime="20201110 08:34:01.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.960" endtime="20201110 08:34:01.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.958" endtime="20201110 08:34:01.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.954" endtime="20201110 08:34:01.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.588" endtime="20201110 08:34:01.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.588" endtime="20201110 08:34:01.981"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.990" endtime="20201110 08:34:02.006"></status>
</kw>
<msg timestamp="20201110 08:34:02.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.989" endtime="20201110 08:34:02.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.008" endtime="20201110 08:34:02.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.010" endtime="20201110 08:34:02.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.986" endtime="20201110 08:34:02.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.983" endtime="20201110 08:34:02.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.019" endtime="20201110 08:34:02.306"></status>
</kw>
<msg timestamp="20201110 08:34:02.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.017" endtime="20201110 08:34:02.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023077153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023128972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.310" endtime="20201110 08:34:02.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.318" endtime="20201110 08:34:02.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.015" endtime="20201110 08:34:02.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.013" endtime="20201110 08:34:02.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.325" level="INFO">${RESULT} = [{'time': 0.023128972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.181900000000156e-05, 'source_diff': 5.181900000000156e-05}, {'time': 0.023212292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.322" endtime="20201110 08:34:02.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.339" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:02.326" endtime="20201110 08:34:02.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.344" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.343" endtime="20201110 08:34:02.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.346" level="INFO">VALUE: [5.181900000000156e-05, 5.119500000000041e-05, 5.120899999999998e-05, 5.119500000000041e-05, 5.11669999999978e-05, 5.11669999999978e-05, 5.119500000000041e-05, 5.611099999999758e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.1179999999997894e-05, 5.119500000000041e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.120899999999998e-05, 5.115299999999823e-05, 5.118100000000084e-05, 5.1193999999997464e-05, 5.12080000000005e-05, 5.112499999999909e-05, 5.611100000000105e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.119400000000093e-05, 5.118100000000084e-05, 5.118000000000136e-05, 5.119500000000041e-05, 5.11530000000017e-05, 5.118000000000136e-05, 5.124999999999921e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.119400000000093e-05, 5.12080000000005e-05, 5.119500000000041e-05, 5.111199999999899e-05, 5.116600000000179e-05, 5.119400000000093e-05, 5.1165999999998324e-05, 5.119500000000041e-05, 5.120899999999998e-05, 5.119500000000041e-05, 5.118000000000136e-05, 5.118100000000084e-05, 5.118099999999737e-05, 5.118100000000084e-05, 5.119500000000041e-05, 5.118000000000136e-05, 5.122200000000007e-05, 5.12080000000005e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.345" endtime="20201110 08:34:02.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.340" endtime="20201110 08:34:02.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.350" endtime="20201110 08:34:02.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.353" endtime="20201110 08:34:02.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.352" endtime="20201110 08:34:02.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.348" endtime="20201110 08:34:02.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.982" endtime="20201110 08:34:02.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.981" endtime="20201110 08:34:02.374"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.383" endtime="20201110 08:34:02.399"></status>
</kw>
<msg timestamp="20201110 08:34:02.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.382" endtime="20201110 08:34:02.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.401" endtime="20201110 08:34:02.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.403" endtime="20201110 08:34:02.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.379" endtime="20201110 08:34:02.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.377" endtime="20201110 08:34:02.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.412" endtime="20201110 08:34:02.700"></status>
</kw>
<msg timestamp="20201110 08:34:02.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.410" endtime="20201110 08:34:02.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.704" endtime="20201110 08:34:02.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.715" endtime="20201110 08:34:02.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.408" endtime="20201110 08:34:02.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.406" endtime="20201110 08:34:02.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.726" level="INFO">${RESULT} = [{'time': 0.022082806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.672300000000158e-05, 'source_diff': 5.672300000000158e-05}, {'time': 0.022169806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.720" endtime="20201110 08:34:02.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:02.727" endtime="20201110 08:34:02.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.746" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.745" endtime="20201110 08:34:02.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.749" level="INFO">VALUE: [5.672300000000158e-05, 5.609800000000095e-05, 5.612500000000062e-05, 5.606899999999887e-05, 5.6055999999998773e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.613900000000019e-05, 5.611100000000105e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.611099999999758e-05, 5.613900000000019e-05, 5.611099999999758e-05, 5.612499999999715e-05, 5.60549999999993e-05, 5.612500000000062e-05, 5.613899999999672e-05, 5.611100000000105e-05, 5.604099999999973e-05, 5.611100000000105e-05, 5.608299999999844e-05, 5.611199999999705e-05, 5.609700000000148e-05, 5.611099999999758e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.611200000000052e-05, 5.616699999999933e-05, 5.609799999999748e-05, 5.609700000000148e-05, 5.611099999999758e-05, 5.606899999999887e-05, 5.608299999999844e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.611200000000052e-05, 5.608299999999844e-05, 5.611100000000105e-05, 5.606899999999887e-05, 5.611100000000105e-05, 5.611099999999758e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.609699999999801e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.615299999999976e-05, 5.612499999999715e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.747" endtime="20201110 08:34:02.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.742" endtime="20201110 08:34:02.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.752" endtime="20201110 08:34:02.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.756" endtime="20201110 08:34:02.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.754" endtime="20201110 08:34:02.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.750" endtime="20201110 08:34:02.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.375" endtime="20201110 08:34:02.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.375" endtime="20201110 08:34:02.777"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.785" endtime="20201110 08:34:02.801"></status>
</kw>
<msg timestamp="20201110 08:34:02.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.784" endtime="20201110 08:34:02.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.803" endtime="20201110 08:34:02.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.805" endtime="20201110 08:34:02.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.781" endtime="20201110 08:34:02.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.779" endtime="20201110 08:34:02.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.814" endtime="20201110 08:34:03.101"></status>
</kw>
<msg timestamp="20201110 08:34:03.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.813" endtime="20201110 08:34:03.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.105" endtime="20201110 08:34:03.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.113" endtime="20201110 08:34:03.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.810" endtime="20201110 08:34:03.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.809" endtime="20201110 08:34:03.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.120" level="INFO">${RESULT} = [{'time': 0.022068583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6707999999999065e-05, 'source_diff': 5.6707999999999065e-05}, {'time': 0.022150625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.117" endtime="20201110 08:34:03.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.135" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:03.121" endtime="20201110 08:34:03.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.139" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.138" endtime="20201110 08:34:03.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.142" level="INFO">VALUE: [5.6707999999999065e-05, 5.613900000000019e-05, 5.605500000000277e-05, 5.609700000000148e-05, 5.612500000000062e-05, 5.611199999999705e-05, 5.613900000000019e-05, 5.611099999999758e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609800000000095e-05, 5.607000000000181e-05, 5.611100000000105e-05, 5.609800000000095e-05, 5.611200000000052e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.6137999999997246e-05, 5.609700000000148e-05, 5.609700000000148e-05, 5.609700000000148e-05, 5.608400000000138e-05, 5.609699999999801e-05, 5.608400000000138e-05, 5.612500000000062e-05, 5.611099999999758e-05, 5.613900000000019e-05, 5.613900000000019e-05, 5.609699999999801e-05, 5.612500000000062e-05, 5.609699999999801e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609800000000095e-05, 5.609800000000095e-05, 5.609700000000148e-05, 5.611200000000052e-05, 5.609799999999748e-05, 5.609699999999801e-05, 5.608400000000138e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.611099999999758e-05, 5.615299999999976e-05, 5.611100000000105e-05, 5.609699999999801e-05, 5.611099999999758e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.140" endtime="20201110 08:34:03.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.136" endtime="20201110 08:34:03.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.170" endtime="20201110 08:34:03.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.174" endtime="20201110 08:34:03.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.172" endtime="20201110 08:34:03.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.168" endtime="20201110 08:34:03.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.777" endtime="20201110 08:34:03.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.777" endtime="20201110 08:34:03.194"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.203" endtime="20201110 08:34:03.219"></status>
</kw>
<msg timestamp="20201110 08:34:03.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.202" endtime="20201110 08:34:03.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.221" endtime="20201110 08:34:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.223" endtime="20201110 08:34:03.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.199" endtime="20201110 08:34:03.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.197" endtime="20201110 08:34:03.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.232" endtime="20201110 08:34:03.519"></status>
</kw>
<msg timestamp="20201110 08:34:03.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.231" endtime="20201110 08:34:03.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022158792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.523" endtime="20201110 08:34:03.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.531" endtime="20201110 08:34:03.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.228" endtime="20201110 08:34:03.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.226" endtime="20201110 08:34:03.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.538" level="INFO">${RESULT} = [{'time': 0.022215542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6750000000001244e-05, 'source_diff': 5.6750000000001244e-05}, {'time': 0.022295417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.535" endtime="20201110 08:34:03.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.551" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:03.539" endtime="20201110 08:34:03.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.556" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.555" endtime="20201110 08:34:03.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.558" level="INFO">VALUE: [5.6750000000001244e-05, 5.61670000000028e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.611200000000052e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.605500000000277e-05, 5.611099999999758e-05, 5.611200000000052e-05, 5.60549999999993e-05, 5.611100000000105e-05, 5.611200000000052e-05, 5.611100000000105e-05, 5.611099999999758e-05, 5.609699999999801e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.609800000000095e-05, 5.612499999999715e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.611099999999758e-05, 5.605600000000224e-05, 5.6152000000000285e-05, 5.609800000000095e-05, 5.609800000000095e-05, 5.609800000000095e-05, 5.613900000000019e-05, 5.611100000000105e-05, 5.611200000000052e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.615299999999976e-05, 5.609799999999748e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.612499999999715e-05, 5.611100000000105e-05, 5.615299999999976e-05, 5.611100000000105e-05, 5.608399999999791e-05, 5.611100000000105e-05, 5.611200000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.557" endtime="20201110 08:34:03.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.552" endtime="20201110 08:34:03.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.562" endtime="20201110 08:34:03.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.566" endtime="20201110 08:34:03.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.564" endtime="20201110 08:34:03.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.560" endtime="20201110 08:34:03.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.195" endtime="20201110 08:34:03.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.195" endtime="20201110 08:34:03.586"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.595" endtime="20201110 08:34:03.611"></status>
</kw>
<msg timestamp="20201110 08:34:03.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.593" endtime="20201110 08:34:03.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.613" endtime="20201110 08:34:03.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.615" endtime="20201110 08:34:03.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.591" endtime="20201110 08:34:03.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.589" endtime="20201110 08:34:03.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.624" endtime="20201110 08:34:03.911"></status>
</kw>
<msg timestamp="20201110 08:34:03.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.622" endtime="20201110 08:34:03.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021900111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.916" endtime="20201110 08:34:03.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.924" endtime="20201110 08:34:03.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.620" endtime="20201110 08:34:03.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.618" endtime="20201110 08:34:03.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.931" level="INFO">${RESULT} = [{'time': 0.021956847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6736000000001674e-05, 'source_diff': 5.6736000000001674e-05}, {'time': 0.022028875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.927" endtime="20201110 08:34:03.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.944" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:03.932" endtime="20201110 08:34:03.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.949" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.947" endtime="20201110 08:34:03.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.951" level="INFO">VALUE: [5.6736000000001674e-05, 5.609700000000148e-05, 5.609799999999748e-05, 5.609700000000148e-05, 5.609700000000148e-05, 5.6055999999998773e-05, 5.611099999999758e-05, 5.608400000000138e-05, 5.608399999999791e-05, 5.609800000000095e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.609700000000148e-05, 5.611100000000105e-05, 5.609799999999748e-05, 5.612500000000062e-05, 5.60549999999993e-05, 5.609799999999748e-05, 5.609699999999801e-05, 5.6165999999999855e-05, 5.612500000000062e-05, 5.609800000000095e-05, 5.609700000000148e-05, 5.608399999999791e-05, 5.613900000000019e-05, 5.615300000000323e-05, 5.609699999999801e-05, 5.609700000000148e-05, 5.6027999999999634e-05, 5.611099999999758e-05, 5.609700000000148e-05, 5.608299999999844e-05, 5.616699999999933e-05, 5.609700000000148e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.609699999999801e-05, 5.609800000000095e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.609699999999801e-05, 5.609699999999801e-05, 5.612499999999715e-05, 5.6041999999999204e-05, 5.612500000000062e-05, 5.609800000000095e-05, 5.611100000000105e-05, 5.611099999999758e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.950" endtime="20201110 08:34:03.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.945" endtime="20201110 08:34:03.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.955" endtime="20201110 08:34:03.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.958" endtime="20201110 08:34:03.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.957" endtime="20201110 08:34:03.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.953" endtime="20201110 08:34:03.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.587" endtime="20201110 08:34:03.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.587" endtime="20201110 08:34:03.979"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.988" endtime="20201110 08:34:04.004"></status>
</kw>
<msg timestamp="20201110 08:34:04.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.986" endtime="20201110 08:34:04.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.006" endtime="20201110 08:34:04.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.008" endtime="20201110 08:34:04.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.984" endtime="20201110 08:34:04.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.981" endtime="20201110 08:34:04.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.018" endtime="20201110 08:34:04.306"></status>
</kw>
<msg timestamp="20201110 08:34:04.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.017" endtime="20201110 08:34:04.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022049361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.310" endtime="20201110 08:34:04.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.318" endtime="20201110 08:34:04.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.014" endtime="20201110 08:34:04.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.012" endtime="20201110 08:34:04.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.325" level="INFO">${RESULT} = [{'time': 0.022106083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6721999999998635e-05, 'source_diff': 5.6721999999998635e-05}, {'time': 0.022188722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.322" endtime="20201110 08:34:04.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.338" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:04.326" endtime="20201110 08:34:04.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.343" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.342" endtime="20201110 08:34:04.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.345" level="INFO">VALUE: [5.6721999999998635e-05, 5.609700000000148e-05, 5.609700000000148e-05, 6.1013999999998125e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.60549999999993e-05, 5.609800000000095e-05, 5.612500000000062e-05, 5.609800000000095e-05, 5.612500000000062e-05, 6.109699999999954e-05, 5.612500000000062e-05, 5.60549999999993e-05, 5.609700000000148e-05, 5.612500000000062e-05, 5.606999999999834e-05, 5.609699999999801e-05, 5.611099999999758e-05, 6.1028000000001165e-05, 5.611100000000105e-05, 5.612500000000062e-05, 5.611099999999758e-05, 6.104200000000073e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.608300000000191e-05, 5.612499999999715e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.613900000000019e-05, 5.609700000000148e-05, 5.6166000000003324e-05, 5.609700000000148e-05, 5.609800000000095e-05, 5.613900000000019e-05, 5.611099999999758e-05, 5.619499999999847e-05, 5.611100000000105e-05, 5.611099999999758e-05, 5.611099999999758e-05, 6.104199999999727e-05, 5.611099999999758e-05, 5.611100000000105e-05, 5.611100000000105e-05, 6.1000000000002025e-05, 5.609700000000148e-05, 5.612499999999715e-05, 6.1000000000002025e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.344" endtime="20201110 08:34:04.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.339" endtime="20201110 08:34:04.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.349" endtime="20201110 08:34:04.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.352" endtime="20201110 08:34:04.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.351" endtime="20201110 08:34:04.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.347" endtime="20201110 08:34:04.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.980" endtime="20201110 08:34:04.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.979" endtime="20201110 08:34:04.373"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.382" endtime="20201110 08:34:04.398"></status>
</kw>
<msg timestamp="20201110 08:34:04.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.380" endtime="20201110 08:34:04.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.400" endtime="20201110 08:34:04.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.402" endtime="20201110 08:34:04.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.378" endtime="20201110 08:34:04.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.376" endtime="20201110 08:34:04.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.412" endtime="20201110 08:34:04.699"></status>
</kw>
<msg timestamp="20201110 08:34:04.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.411" endtime="20201110 08:34:04.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021923597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.703" endtime="20201110 08:34:04.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.712" endtime="20201110 08:34:04.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.408" endtime="20201110 08:34:04.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.406" endtime="20201110 08:34:04.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.718" level="INFO">${RESULT} = [{'time': 0.021985222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.162499999999918e-05, 'source_diff': 6.162499999999918e-05}, {'time': 0.022071819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.715" endtime="20201110 08:34:04.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.733" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:04.719" endtime="20201110 08:34:04.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.738" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.737" endtime="20201110 08:34:04.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.740" level="INFO">VALUE: [6.162499999999918e-05, 6.101299999999865e-05, 6.1028000000001165e-05, 6.104200000000073e-05, 6.1000000000002025e-05, 6.0999999999998555e-05, 6.0999999999998555e-05, 6.104200000000073e-05, 6.1013999999998125e-05, 6.1028000000001165e-05, 6.104200000000073e-05, 6.101299999999865e-05, 6.1027999999997695e-05, 6.108299999999997e-05, 6.1028000000001165e-05, 6.108299999999997e-05, 6.0986000000002455e-05, 6.1000000000002025e-05, 6.102700000000169e-05, 6.1013999999998125e-05, 6.102699999999822e-05, 6.10560000000003e-05, 6.104200000000073e-05, 6.1013999999998125e-05, 6.10560000000003e-05, 6.0971999999999416e-05, 6.1014000000001595e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.108299999999997e-05, 6.102699999999822e-05, 6.104199999999727e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.1028000000001165e-05, 6.105500000000083e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.102699999999822e-05, 6.10560000000003e-05, 6.1028000000001165e-05, 6.1014000000001595e-05, 6.104199999999727e-05, 6.10690000000004e-05, 6.104100000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.739" endtime="20201110 08:34:04.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.734" endtime="20201110 08:34:04.742"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.744" endtime="20201110 08:34:04.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.747" endtime="20201110 08:34:04.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.746" endtime="20201110 08:34:04.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.742" endtime="20201110 08:34:04.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.374" endtime="20201110 08:34:04.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.374" endtime="20201110 08:34:04.768"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.777" endtime="20201110 08:34:04.793"></status>
</kw>
<msg timestamp="20201110 08:34:04.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.775" endtime="20201110 08:34:04.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.795" endtime="20201110 08:34:04.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.797" endtime="20201110 08:34:04.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.773" endtime="20201110 08:34:04.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.771" endtime="20201110 08:34:04.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.806" endtime="20201110 08:34:05.094"></status>
</kw>
<msg timestamp="20201110 08:34:05.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02209225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:04.805" endtime="20201110 08:34:05.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022030611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02209225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:05.099" endtime="20201110 08:34:05.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.107" endtime="20201110 08:34:05.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.802" endtime="20201110 08:34:05.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.801" endtime="20201110 08:34:05.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.114" level="INFO">${RESULT} = [{'time': 0.02209225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.163900000000222e-05, 'source_diff': 6.163900000000222e-05}, {'time': 0.022172333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:05.111" endtime="20201110 08:34:05.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:05.115" endtime="20201110 08:34:05.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.135" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.133" endtime="20201110 08:34:05.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.139" level="INFO">VALUE: [6.163900000000222e-05, 6.102699999999822e-05, 6.0986000000002455e-05, 6.1028000000001165e-05, 6.104200000000073e-05, 6.104200000000073e-05, 6.104100000000126e-05, 6.094499999999975e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.104200000000073e-05, 6.10560000000003e-05, 6.0999999999998555e-05, 6.102700000000169e-05, 6.1028000000001165e-05, 6.102699999999822e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.1028000000001165e-05, 6.104199999999727e-05, 6.102699999999822e-05, 6.109699999999954e-05, 6.104100000000126e-05, 6.104099999999779e-05, 6.105499999999736e-05, 6.1028000000001165e-05, 6.1027999999997695e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.104199999999727e-05, 6.0971999999999416e-05, 6.109699999999954e-05, 6.101299999999865e-05, 6.1028000000001165e-05, 6.104099999999779e-05, 6.105500000000083e-05, 6.102700000000169e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.1028000000001165e-05, 6.1027999999997695e-05, 6.108299999999997e-05, 6.1014000000001595e-05, 6.1027999999997695e-05, 6.104099999999779e-05, 6.108299999999997e-05, 6.1028000000001165e-05, 6.095899999999932e-05, 6.1014000000001595e-05, 6.1027999999997695e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.136" endtime="20201110 08:34:05.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.129" endtime="20201110 08:34:05.141"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.144" endtime="20201110 08:34:05.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.150" endtime="20201110 08:34:05.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.147" endtime="20201110 08:34:05.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.142" endtime="20201110 08:34:05.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.769" endtime="20201110 08:34:05.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.769" endtime="20201110 08:34:05.172"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.181" endtime="20201110 08:34:05.197"></status>
</kw>
<msg timestamp="20201110 08:34:05.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.179" endtime="20201110 08:34:05.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.198" endtime="20201110 08:34:05.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.201" endtime="20201110 08:34:05.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.176" endtime="20201110 08:34:05.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.174" endtime="20201110 08:34:05.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.210" endtime="20201110 08:34:05.497"></status>
</kw>
<msg timestamp="20201110 08:34:05.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.208" endtime="20201110 08:34:05.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022453375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.501" endtime="20201110 08:34:05.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.510" endtime="20201110 08:34:05.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.206" endtime="20201110 08:34:05.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.204" endtime="20201110 08:34:05.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.517" level="INFO">${RESULT} = [{'time': 0.022515014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.163899999999875e-05, 'source_diff': 6.163899999999875e-05}, {'time': 0.022588875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.513" endtime="20201110 08:34:05.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.530" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:05.518" endtime="20201110 08:34:05.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.535" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.534" endtime="20201110 08:34:05.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.537" level="INFO">VALUE: [6.163899999999875e-05, 6.104200000000073e-05, 6.10690000000004e-05, 6.104200000000073e-05, 6.1013999999998125e-05, 6.0971999999999416e-05, 6.105500000000083e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.104200000000073e-05, 6.102700000000169e-05, 6.0971999999999416e-05, 6.101299999999865e-05, 6.1014000000001595e-05, 6.1028000000001165e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.104200000000073e-05, 6.0999999999998555e-05, 6.097300000000236e-05, 6.1027999999997695e-05, 6.102699999999822e-05, 6.1013999999998125e-05, 6.1014000000001595e-05, 6.1027999999997695e-05, 6.104100000000126e-05, 6.102699999999822e-05, 6.104200000000073e-05, 6.101299999999865e-05, 6.1027999999997695e-05, 6.0985999999998985e-05, 6.102700000000169e-05, 6.1014000000001595e-05, 6.108399999999944e-05, 6.102699999999822e-05, 6.1014000000001595e-05, 6.102700000000169e-05, 6.1013999999998125e-05, 6.1013999999998125e-05, 6.1028000000001165e-05, 6.0985999999998985e-05, 6.104199999999727e-05, 6.109699999999954e-05, 6.104200000000073e-05, 6.1000000000002025e-05, 6.104200000000073e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.1028000000001165e-05, 6.104200000000073e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.536" endtime="20201110 08:34:05.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.531" endtime="20201110 08:34:05.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.541" endtime="20201110 08:34:05.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.544" endtime="20201110 08:34:05.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.543" endtime="20201110 08:34:05.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.539" endtime="20201110 08:34:05.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.172" endtime="20201110 08:34:05.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.172" endtime="20201110 08:34:05.565"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.574" endtime="20201110 08:34:05.590"></status>
</kw>
<msg timestamp="20201110 08:34:05.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.572" endtime="20201110 08:34:05.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.591" endtime="20201110 08:34:05.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.594" endtime="20201110 08:34:05.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.570" endtime="20201110 08:34:05.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.568" endtime="20201110 08:34:05.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.603" endtime="20201110 08:34:05.889"></status>
</kw>
<msg timestamp="20201110 08:34:05.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.601" endtime="20201110 08:34:05.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022002069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.894" endtime="20201110 08:34:05.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.902" endtime="20201110 08:34:05.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.599" endtime="20201110 08:34:05.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.597" endtime="20201110 08:34:05.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.909" level="INFO">${RESULT} = [{'time': 0.022002069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.163799999999928e-05, 'source_diff': 6.163799999999928e-05}, {'time': 0.022080319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.905" endtime="20201110 08:34:05.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.922" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:05.910" endtime="20201110 08:34:05.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.927" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.926" endtime="20201110 08:34:05.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.929" level="INFO">VALUE: [6.163799999999928e-05, 6.101300000000212e-05, 6.1013999999998125e-05, 6.0957999999999846e-05, 6.104200000000073e-05, 6.1014000000001595e-05, 6.1013999999998125e-05, 6.108299999999997e-05, 6.101300000000212e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.104200000000073e-05, 6.102699999999822e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.108299999999997e-05, 6.1028000000001165e-05, 6.104100000000126e-05, 6.108399999999944e-05, 6.104199999999727e-05, 6.0985999999998985e-05, 6.104200000000073e-05, 6.104200000000073e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.102700000000169e-05, 6.104200000000073e-05, 6.1000000000002025e-05, 6.1028000000001165e-05, 6.105500000000083e-05, 6.102700000000169e-05, 6.1014000000001595e-05, 6.1028000000001165e-05, 6.10560000000003e-05, 6.097300000000236e-05, 6.104200000000073e-05, 6.0999999999998555e-05, 6.104200000000073e-05, 6.1014000000001595e-05, 6.1027999999997695e-05, 6.1027999999997695e-05, 6.105500000000083e-05, 6.1028000000001165e-05, 6.1014000000001595e-05, 6.1014000000001595e-05, 6.1028000000001165e-05, 6.1028000000001165e-05, 6.0971999999999416e-05, 6.1014000000001595e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.928" endtime="20201110 08:34:05.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.923" endtime="20201110 08:34:05.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.933" endtime="20201110 08:34:05.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.936" endtime="20201110 08:34:05.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.935" endtime="20201110 08:34:05.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.931" endtime="20201110 08:34:05.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.566" endtime="20201110 08:34:05.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.565" endtime="20201110 08:34:05.957"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.966" endtime="20201110 08:34:05.982"></status>
</kw>
<msg timestamp="20201110 08:34:05.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.964" endtime="20201110 08:34:05.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.984" endtime="20201110 08:34:05.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.986" endtime="20201110 08:34:05.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.962" endtime="20201110 08:34:05.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.960" endtime="20201110 08:34:05.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.995" endtime="20201110 08:34:06.281"></status>
</kw>
<msg timestamp="20201110 08:34:06.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.993" endtime="20201110 08:34:06.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.286" endtime="20201110 08:34:06.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.294" endtime="20201110 08:34:06.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.991" endtime="20201110 08:34:06.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.989" endtime="20201110 08:34:06.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.301" level="INFO">${RESULT} = [{'time': 0.022104319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.161099999999961e-05, 'source_diff': 6.161099999999961e-05}, {'time': 0.022180958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.298" endtime="20201110 08:34:06.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:06.302" endtime="20201110 08:34:06.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.320" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.319" endtime="20201110 08:34:06.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.323" level="INFO">VALUE: [6.161099999999961e-05, 6.1000000000002025e-05, 6.59440000000018e-05, 6.1014000000001595e-05, 6.1014000000001595e-05, 6.0999999999998555e-05, 6.0985999999998985e-05, 6.1027999999997695e-05, 6.587499999999996e-05, 6.104100000000126e-05, 6.1014000000001595e-05, 6.59029999999991e-05, 6.102700000000169e-05, 6.102699999999822e-05, 6.594499999999781e-05, 6.104200000000073e-05, 6.0971999999999416e-05, 6.0986000000002455e-05, 6.1013999999998125e-05, 6.1014000000001595e-05, 6.1013999999998125e-05, 6.1028000000001165e-05, 6.1027999999997695e-05, 6.104099999999779e-05, 6.1014000000001595e-05, 6.102699999999822e-05, 6.1027999999997695e-05, 6.59029999999991e-05, 6.106999999999987e-05, 6.1014000000001595e-05, 6.1028000000001165e-05, 6.597300000000042e-05, 6.0999999999998555e-05, 6.1028000000001165e-05, 6.0999999999998555e-05, 6.102700000000169e-05, 6.108299999999997e-05, 6.1000000000002025e-05, 6.1028000000001165e-05, 6.595900000000085e-05, 6.1027999999997695e-05, 6.595799999999791e-05, 6.1028000000001165e-05, 6.1013999999998125e-05, 6.10560000000003e-05, 6.59440000000018e-05, 6.594500000000128e-05, 6.104200000000073e-05, 6.1028000000001165e-05, 6.0999999999998555e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.321" endtime="20201110 08:34:06.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.317" endtime="20201110 08:34:06.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.326" endtime="20201110 08:34:06.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.330" endtime="20201110 08:34:06.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.328" endtime="20201110 08:34:06.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.325" endtime="20201110 08:34:06.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.958" endtime="20201110 08:34:06.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.957" endtime="20201110 08:34:06.351"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.360" endtime="20201110 08:34:06.376"></status>
</kw>
<msg timestamp="20201110 08:34:06.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.358" endtime="20201110 08:34:06.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.378" endtime="20201110 08:34:06.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.380" endtime="20201110 08:34:06.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.355" endtime="20201110 08:34:06.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.353" endtime="20201110 08:34:06.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.389" endtime="20201110 08:34:06.676"></status>
</kw>
<msg timestamp="20201110 08:34:06.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.388" endtime="20201110 08:34:06.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022351056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.680" endtime="20201110 08:34:06.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.689" endtime="20201110 08:34:06.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.385" endtime="20201110 08:34:06.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.383" endtime="20201110 08:34:06.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.695" level="INFO">${RESULT} = [{'time': 0.022351056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.658400000000148e-05, 'source_diff': 6.658400000000148e-05}, {'time': 0.022447264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.692" endtime="20201110 08:34:06.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.712" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:06.696" endtime="20201110 08:34:06.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.719" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.717" endtime="20201110 08:34:06.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.722" level="INFO">VALUE: [6.658400000000148e-05, 6.593100000000171e-05, 6.594500000000128e-05, 6.594399999999834e-05, 6.594500000000128e-05, 6.595899999999738e-05, 6.595899999999738e-05, 6.594399999999834e-05, 6.595799999999791e-05, 6.59440000000018e-05, 6.597200000000095e-05, 6.594500000000128e-05, 6.595799999999791e-05, 6.59440000000018e-05, 6.594500000000128e-05, 6.592999999999877e-05, 6.594500000000128e-05, 6.59440000000018e-05, 6.595900000000085e-05, 6.598600000000052e-05, 6.59159999999992e-05, 6.59159999999992e-05, 6.588899999999953e-05, 6.591699999999867e-05, 6.595800000000138e-05, 6.595899999999738e-05, 6.593099999999824e-05, 6.594399999999834e-05, 6.59440000000018e-05, 6.593099999999824e-05, 6.591700000000214e-05, 6.594399999999834e-05, 6.598600000000052e-05, 6.592999999999877e-05, 6.594499999999781e-05, 6.594399999999834e-05, 6.594499999999781e-05, 6.594399999999834e-05, 6.594399999999834e-05, 6.595899999999738e-05, 6.594499999999781e-05, 6.593099999999824e-05, 6.587499999999996e-05, 6.595799999999791e-05, 6.595900000000085e-05, 6.588899999999953e-05, 6.594499999999781e-05, 6.592999999999877e-05, 6.595799999999791e-05, 6.59029999999991e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.721" endtime="20201110 08:34:06.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.713" endtime="20201110 08:34:06.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.729" endtime="20201110 08:34:06.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.736" endtime="20201110 08:34:06.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.733" endtime="20201110 08:34:06.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.726" endtime="20201110 08:34:06.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.352" endtime="20201110 08:34:06.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.351" endtime="20201110 08:34:06.758"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.766" endtime="20201110 08:34:06.783"></status>
</kw>
<msg timestamp="20201110 08:34:06.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.765" endtime="20201110 08:34:06.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.784" endtime="20201110 08:34:06.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.787" endtime="20201110 08:34:06.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.762" endtime="20201110 08:34:06.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.760" endtime="20201110 08:34:06.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.796" endtime="20201110 08:34:07.083"></status>
</kw>
<msg timestamp="20201110 08:34:07.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.794" endtime="20201110 08:34:07.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022233208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.088" endtime="20201110 08:34:07.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.096" endtime="20201110 08:34:07.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.792" endtime="20201110 08:34:07.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.790" endtime="20201110 08:34:07.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.103" level="INFO">${RESULT} = [{'time': 0.022233208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.656900000000243e-05, 'source_diff': 6.656900000000243e-05}, {'time': 0.022316972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.099" endtime="20201110 08:34:07.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.116" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:07.104" endtime="20201110 08:34:07.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.121" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.120" endtime="20201110 08:34:07.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.123" level="INFO">VALUE: [6.656900000000243e-05, 6.595800000000138e-05, 6.591699999999867e-05, 6.595800000000138e-05, 6.594399999999834e-05, 6.59440000000018e-05, 6.594499999999781e-05, 6.597200000000095e-05, 6.594399999999834e-05, 6.595900000000085e-05, 6.600000000000009e-05, 6.593099999999824e-05, 6.593099999999824e-05, 6.594399999999834e-05, 6.595899999999738e-05, 6.595800000000138e-05, 6.595900000000085e-05, 6.595800000000138e-05, 6.592999999999877e-05, 6.59440000000018e-05, 6.590199999999963e-05, 6.595800000000138e-05, 6.598600000000052e-05, 6.594499999999781e-05, 6.595800000000138e-05, 6.594500000000128e-05, 6.595900000000085e-05, 6.587499999999996e-05, 6.595800000000138e-05, 6.594499999999781e-05, 6.598600000000052e-05, 6.594499999999781e-05, 6.595800000000138e-05, 6.597199999999748e-05, 6.588899999999953e-05, 6.594399999999834e-05, 6.594499999999781e-05, 6.595900000000085e-05, 6.595800000000138e-05, 6.595799999999791e-05, 6.595800000000138e-05, 6.595900000000085e-05, 6.593100000000171e-05, 6.595900000000085e-05, 6.594500000000128e-05, 6.595799999999791e-05, 6.597200000000095e-05, 6.595800000000138e-05, 6.591700000000214e-05, 6.592999999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.122" endtime="20201110 08:34:07.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.117" endtime="20201110 08:34:07.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.127" endtime="20201110 08:34:07.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.130" endtime="20201110 08:34:07.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.129" endtime="20201110 08:34:07.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.125" endtime="20201110 08:34:07.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.759" endtime="20201110 08:34:07.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.758" endtime="20201110 08:34:07.151"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.160" endtime="20201110 08:34:07.176"></status>
</kw>
<msg timestamp="20201110 08:34:07.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.158" endtime="20201110 08:34:07.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.178" endtime="20201110 08:34:07.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.180" endtime="20201110 08:34:07.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.156" endtime="20201110 08:34:07.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.153" endtime="20201110 08:34:07.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.189" endtime="20201110 08:34:07.477"></status>
</kw>
<msg timestamp="20201110 08:34:07.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.188" endtime="20201110 08:34:07.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.481" endtime="20201110 08:34:07.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.489" endtime="20201110 08:34:07.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.185" endtime="20201110 08:34:07.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.183" endtime="20201110 08:34:07.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.496" level="INFO">${RESULT} = [{'time': 0.022313903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.656999999999844e-05, 'source_diff': 6.656999999999844e-05}, {'time': 0.022392653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.492" endtime="20201110 08:34:07.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:07.497" endtime="20201110 08:34:07.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.514" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.513" endtime="20201110 08:34:07.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.516" level="INFO">VALUE: [6.656999999999844e-05, 6.593099999999824e-05, 6.600000000000009e-05, 6.593000000000224e-05, 6.601399999999966e-05, 6.595800000000138e-05, 6.595799999999791e-05, 6.587499999999996e-05, 6.594499999999781e-05, 6.594399999999834e-05, 6.59440000000018e-05, 6.593099999999824e-05, 6.586100000000039e-05, 6.595799999999791e-05, 6.595799999999791e-05, 6.594500000000128e-05, 6.594500000000128e-05, 6.587499999999996e-05, 6.595900000000085e-05, 6.595799999999791e-05, 6.595899999999738e-05, 6.59440000000018e-05, 6.595900000000085e-05, 6.594499999999781e-05, 6.594399999999834e-05, 6.594399999999834e-05, 6.595800000000138e-05, 6.59440000000018e-05, 6.593100000000171e-05, 6.595800000000138e-05, 6.592999999999877e-05, 6.592999999999877e-05, 6.594500000000128e-05, 6.594399999999834e-05, 6.595799999999791e-05, 6.597199999999748e-05, 6.593099999999824e-05, 6.594499999999781e-05, 6.601400000000313e-05, 6.593000000000224e-05, 6.595800000000138e-05, 6.59440000000018e-05, 6.593000000000224e-05, 6.595800000000138e-05, 6.59029999999991e-05, 6.595900000000085e-05, 6.600000000000009e-05, 6.595800000000138e-05, 6.594500000000128e-05, 6.594500000000128e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.515" endtime="20201110 08:34:07.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.510" endtime="20201110 08:34:07.518"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.520" endtime="20201110 08:34:07.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.523" endtime="20201110 08:34:07.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.522" endtime="20201110 08:34:07.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.518" endtime="20201110 08:34:07.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.152" endtime="20201110 08:34:07.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.151" endtime="20201110 08:34:07.544"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.553" endtime="20201110 08:34:07.569"></status>
</kw>
<msg timestamp="20201110 08:34:07.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.551" endtime="20201110 08:34:07.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.571" endtime="20201110 08:34:07.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.573" endtime="20201110 08:34:07.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.549" endtime="20201110 08:34:07.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.547" endtime="20201110 08:34:07.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.582" endtime="20201110 08:34:07.869"></status>
</kw>
<msg timestamp="20201110 08:34:07.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.581" endtime="20201110 08:34:07.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021917292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.873" endtime="20201110 08:34:07.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.881" endtime="20201110 08:34:07.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.578" endtime="20201110 08:34:07.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.576" endtime="20201110 08:34:07.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.888" level="INFO">${RESULT} = [{'time': 0.021983861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.656899999999896e-05, 'source_diff': 6.656899999999896e-05}, {'time': 0.022079417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.884" endtime="20201110 08:34:07.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:07.889" endtime="20201110 08:34:07.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.907" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.906" endtime="20201110 08:34:07.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.910" level="INFO">VALUE: [6.656899999999896e-05, 6.593100000000171e-05, 6.594500000000128e-05, 6.593099999999824e-05, 6.59159999999992e-05, 6.597299999999695e-05, 6.59440000000018e-05, 6.593099999999824e-05, 6.594500000000128e-05, 6.593099999999824e-05, 6.594499999999781e-05, 6.600000000000009e-05, 6.594499999999781e-05, 6.593099999999824e-05, 6.591700000000214e-05, 6.594500000000128e-05, 6.592999999999877e-05, 6.594399999999834e-05, 6.59029999999991e-05, 6.594500000000128e-05, 6.59440000000018e-05, 6.593100000000171e-05, 6.593099999999824e-05, 6.594399999999834e-05, 6.594399999999834e-05, 6.593100000000171e-05, 6.594500000000128e-05, 6.595799999999791e-05, 6.595900000000085e-05, 6.591699999999867e-05, 6.593100000000171e-05, 6.591699999999867e-05, 6.594500000000128e-05, 6.593000000000224e-05, 6.594399999999834e-05, 6.594399999999834e-05, 6.591700000000214e-05, 6.591700000000214e-05, 6.586100000000039e-05, 6.597200000000095e-05, 6.597200000000095e-05, 6.594399999999834e-05, 6.598600000000052e-05, 6.59440000000018e-05, 6.588800000000006e-05, 6.600000000000009e-05, 6.59440000000018e-05, 6.593099999999824e-05, 6.59159999999992e-05, 6.592999999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.908" endtime="20201110 08:34:07.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.903" endtime="20201110 08:34:07.911"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.913" endtime="20201110 08:34:07.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.917" endtime="20201110 08:34:07.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.915" endtime="20201110 08:34:07.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.912" endtime="20201110 08:34:07.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.545" endtime="20201110 08:34:07.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.544" endtime="20201110 08:34:07.938"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.946" endtime="20201110 08:34:07.966"></status>
</kw>
<msg timestamp="20201110 08:34:07.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.945" endtime="20201110 08:34:07.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.967" endtime="20201110 08:34:07.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.970" endtime="20201110 08:34:07.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.942" endtime="20201110 08:34:07.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.940" endtime="20201110 08:34:07.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.979" endtime="20201110 08:34:08.267"></status>
</kw>
<msg timestamp="20201110 08:34:08.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.977" endtime="20201110 08:34:08.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022059722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.271" endtime="20201110 08:34:08.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.279" endtime="20201110 08:34:08.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.975" endtime="20201110 08:34:08.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.973" endtime="20201110 08:34:08.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.286" level="INFO">${RESULT} = [{'time': 0.022059722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013099999999999917, 'source_diff': 0.00013099999999999917}, {'time': 0.022221486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:08.283" endtime="20201110 08:34:08.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:08.287" endtime="20201110 08:34:08.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.303" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.302" endtime="20201110 08:34:08.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.306" level="INFO">VALUE: [0.00013099999999999917, 0.00013055499999999748, 0.00013058400000000303, 0.00013056900000000052, 0.0001306119999999987, 0.00013059799999999913, 0.00013059699999999966, 0.00013061099999999923, 0.00013059699999999966, 0.00013059699999999966, 0.0001306249999999988, 0.00013059699999999966, 0.00013059699999999966, 0.0001305830000000001, 0.00013059699999999966, 0.0001305830000000001, 0.00013057, 0.0001306249999999988, 0.00013057, 0.0001305270000000018, 0.0001305830000000001, 0.00013059699999999966, 0.00013054100000000138, 0.0001305830000000001, 0.00013056900000000052, 0.00013055499999999748, 0.0001305830000000001, 0.0001305830000000001, 0.00013059699999999966, 0.00013059700000000313, 0.0001305830000000001, 0.0001305830000000001, 0.00013055500000000095, 0.00013059700000000313, 0.00013056900000000052, 0.00013061099999999923, 0.0001305830000000001, 0.00013055500000000095, 0.0001305830000000001, 0.0001305830000000001, 0.0001305830000000001, 0.0001305830000000001, 0.00013061099999999923, 0.00013059699999999966, 0.00013059699999999966, 0.0001306119999999987, 0.00013061099999999923, 0.0001305830000000001, 0.00013061099999999923, 0.0001305830000000001]</msg>
<status status="PASS" starttime="20201110 08:34:08.305" endtime="20201110 08:34:08.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.300" endtime="20201110 08:34:08.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.315" endtime="20201110 08:34:08.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.318" endtime="20201110 08:34:08.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.316" endtime="20201110 08:34:08.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.313" endtime="20201110 08:34:08.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.939" endtime="20201110 08:34:08.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.938" endtime="20201110 08:34:08.339"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.349" endtime="20201110 08:34:08.369"></status>
</kw>
<msg timestamp="20201110 08:34:08.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.348" endtime="20201110 08:34:08.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.371" endtime="20201110 08:34:08.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.373" endtime="20201110 08:34:08.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.344" endtime="20201110 08:34:08.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.341" endtime="20201110 08:34:08.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.382" endtime="20201110 08:34:08.671"></status>
</kw>
<msg timestamp="20201110 08:34:08.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023666639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.381" endtime="20201110 08:34:08.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023666639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.675" endtime="20201110 08:34:08.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.683" endtime="20201110 08:34:08.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.378" endtime="20201110 08:34:08.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.376" endtime="20201110 08:34:08.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.695" level="INFO">${RESULT} = [{'time': 0.023797667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013102800000000178, 'source_diff': 0.00013102800000000178}, {'time': 0.023960847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:08.688" endtime="20201110 08:34:08.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.725" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:08.697" endtime="20201110 08:34:08.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.735" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.733" endtime="20201110 08:34:08.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.741" level="INFO">VALUE: [0.00013102800000000178, 0.00013227799999999956, 0.0001318470000000009, 0.0001319860000000006, 0.0001324440000000024, 0.00013222300000000076, 0.00013204200000000235, 0.0001324440000000024, 0.0001317090000000007, 0.0001317769999999996, 0.00013072199999999978, 0.0001318470000000009, 0.00013190300000000266, 0.00013208299999999812, 0.000131860999999997, 0.0001322920000000026, 0.0001305830000000001, 0.00013215299999999944, 0.0001307089999999997, 0.00013220799999999824, 0.00013209800000000063, 0.00013158299999999762, 0.0001324029999999997, 0.0001318340000000008, 0.0001318050000000022, 0.00013183299999999787, 0.0001321530000000029, 0.0001307089999999997, 0.0001319999999999967, 0.00013201399999999974, 0.0001316249999999998, 0.00013077800000000153, 0.0001320830000000016, 0.00013055600000000042, 0.0001319860000000006, 0.0001323340000000013, 0.00013213899999999987, 0.0001320969999999977, 0.00013159700000000066, 0.0001322920000000026, 0.00013213899999999987, 0.0001307089999999997, 0.00013227799999999956, 0.0001315969999999972, 0.00013213899999999987, 0.00013165199999999946, 0.00013242999999999935, 0.0001305140000000017, 0.000132264, 0.0001321389999999964]</msg>
<status status="PASS" starttime="20201110 08:34:08.737" endtime="20201110 08:34:08.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.727" endtime="20201110 08:34:08.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.748" endtime="20201110 08:34:08.751"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.756" endtime="20201110 08:34:08.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.752" endtime="20201110 08:34:08.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.745" endtime="20201110 08:34:08.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.340" endtime="20201110 08:34:08.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.339" endtime="20201110 08:34:08.782"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.794" endtime="20201110 08:34:08.814"></status>
</kw>
<msg timestamp="20201110 08:34:08.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.792" endtime="20201110 08:34:08.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.815" endtime="20201110 08:34:08.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.818" endtime="20201110 08:34:08.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.790" endtime="20201110 08:34:08.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.787" endtime="20201110 08:34:08.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.827" endtime="20201110 08:34:09.113"></status>
</kw>
<msg timestamp="20201110 08:34:09.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029069639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029202792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.825" endtime="20201110 08:34:09.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029069639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029202792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.118" endtime="20201110 08:34:09.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.126" endtime="20201110 08:34:09.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.822" endtime="20201110 08:34:09.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.821" endtime="20201110 08:34:09.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.133" level="INFO">${RESULT} = [{'time': 0.029202792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013315300000000044, 'source_diff': 0.00013315300000000044}, {'time': 0.029354236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.129" endtime="20201110 08:34:09.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.146" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:09.134" endtime="20201110 08:34:09.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.150" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.149" endtime="20201110 08:34:09.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.153" level="INFO">VALUE: [0.00013315300000000044, 0.00013297199999999856, 0.00013295800000000246, 0.0001325279999999998, 0.00013327800000000056, 0.0001330280000000003, 0.00013288800000000114, 0.00013315300000000044, 0.00013309700000000216, 0.00013345899999999897, 0.0001327219999999983, 0.0001327090000000017, 0.00013287499999999758, 0.0001329440000000029, 0.0001330280000000003, 0.00013259700000000513, 0.000133264000000001, 0.00013315299999999697, 0.00013266599999999656, 0.00013340199999999774, 0.0001325279999999998, 0.00013277800000000006, 0.00013251400000000024, 0.00013351400000000124, 0.0001327640000000005, 0.00013266700000000298, 0.00013250000000000067, 0.00013340299999999722, 0.00013295900000000194, 0.00013333299999999937, 0.0001325409999999999, 0.00013288899999999715, 0.00013284699999999844, 0.00013347200000000253, 0.00013322199999999534, 0.00013287499999999758, 0.0001333059999999997, 0.00013273600000000135, 0.00013313799999999792, 0.00013334699999999894, 0.00013308299999999912, 0.00013293099999999586, 0.0001325409999999999, 0.00013354200000000038, 0.00013265299999999647, 0.0001329169999999963, 0.00013345800000000296, 0.00013290299999999672, 0.00013304199999999988, 0.00013297200000000203]</msg>
<status status="PASS" starttime="20201110 08:34:09.152" endtime="20201110 08:34:09.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.147" endtime="20201110 08:34:09.154"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.157" endtime="20201110 08:34:09.158"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.160" endtime="20201110 08:34:09.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.159" endtime="20201110 08:34:09.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.155" endtime="20201110 08:34:09.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.784" endtime="20201110 08:34:09.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.783" endtime="20201110 08:34:09.181"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.190" endtime="20201110 08:34:09.210"></status>
</kw>
<msg timestamp="20201110 08:34:09.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.188" endtime="20201110 08:34:09.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.211" endtime="20201110 08:34:09.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.214" endtime="20201110 08:34:09.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.186" endtime="20201110 08:34:09.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.183" endtime="20201110 08:34:09.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.223" endtime="20201110 08:34:09.509"></status>
</kw>
<msg timestamp="20201110 08:34:09.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.221" endtime="20201110 08:34:09.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022165069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.514" endtime="20201110 08:34:09.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.522" endtime="20201110 08:34:09.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.219" endtime="20201110 08:34:09.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.217" endtime="20201110 08:34:09.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.529" level="INFO">${RESULT} = [{'time': 0.022165069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013383299999999987, 'source_diff': 0.00013383299999999987}, {'time': 0.022312583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.525" endtime="20201110 08:34:09.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.543" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:09.530" endtime="20201110 08:34:09.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.548" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.547" endtime="20201110 08:34:09.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.550" level="INFO">VALUE: [0.00013383299999999987, 0.00013408300000000012, 0.00013407000000000002, 0.0001344580000000005, 0.0001338190000000003, 0.00013377800000000106, 0.00013383299999999987, 0.00013351399999999777, 0.00013433300000000037, 0.0001341389999999984, 0.00013375000000000192, 0.00013401399999999827, 0.00013368100000000008, 0.00013388900000000162, 0.0001343190000000008, 0.00013361099999999876, 0.00013351400000000124, 0.00013408300000000012, 0.0001344030000000017, 0.00013393000000000085, 0.00013356999999999952, 0.00013343099999999983, 0.00013402700000000184, 0.00013383299999999987, 0.000133958, 0.00013370899999999922, 0.00013413900000000187, 0.0001338060000000002, 0.0001336389999999979, 0.00013436100000000298, 0.00013401399999999827, 0.0001336800000000006, 0.00013397199999999956, 0.0001338060000000002, 0.00013433399999999984, 0.00013365299999999747, 0.00013388899999999815, 0.0001335280000000008, 0.00013383399999999934, 0.0001340839999999996, 0.00013354099999999744, 0.00013388900000000162, 0.000133958, 0.000134167000000001, 0.00013369400000000017, 0.00013419500000000015, 0.00013356999999999952, 0.0001337640000000015, 0.00013408300000000012, 0.0001341250000000023]</msg>
<status status="PASS" starttime="20201110 08:34:09.549" endtime="20201110 08:34:09.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.544" endtime="20201110 08:34:09.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.554" endtime="20201110 08:34:09.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.557" endtime="20201110 08:34:09.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.556" endtime="20201110 08:34:09.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.552" endtime="20201110 08:34:09.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.182" endtime="20201110 08:34:09.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.181" endtime="20201110 08:34:09.578"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.587" endtime="20201110 08:34:09.607"></status>
</kw>
<msg timestamp="20201110 08:34:09.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.585" endtime="20201110 08:34:09.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.608" endtime="20201110 08:34:09.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.611" endtime="20201110 08:34:09.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.583" endtime="20201110 08:34:09.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.581" endtime="20201110 08:34:09.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.620" endtime="20201110 08:34:09.907"></status>
</kw>
<msg timestamp="20201110 08:34:09.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.618" endtime="20201110 08:34:09.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.911" endtime="20201110 08:34:09.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.919" endtime="20201110 08:34:09.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.616" endtime="20201110 08:34:09.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.614" endtime="20201110 08:34:09.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.926" level="INFO">${RESULT} = [{'time': 0.022197569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013542999999999888, 'source_diff': 0.00013542999999999888}, {'time': 0.022351847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:09.922" endtime="20201110 08:34:09.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:09.927" endtime="20201110 08:34:09.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.943" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.942" endtime="20201110 08:34:09.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.946" level="INFO">VALUE: [0.00013542999999999888, 0.00013488900000000262, 0.00013467999999999813, 0.00013443100000000083, 0.00013481899999999783, 0.00013461099999999976, 0.0001349999999999997, 0.00013475000000000292, 0.0001345970000000002, 0.00013538899999999965, 0.00013513799999999992, 0.00013540299999999922, 0.0001352770000000031, 0.00013529100000000266, 0.0001351809999999981, 0.0001348060000000012, 0.00013495900000000047, 0.00013506900000000155, 0.00013505599999999798, 0.00013545900000000097, 0.0001349999999999997, 0.00013455600000000095, 0.00013509800000000016, 0.00013513799999999992, 0.00013515300000000244, 0.00013517999999999863, 0.0001353610000000005, 0.00013468100000000108, 0.00013482000000000077, 0.00013481899999999783, 0.00013500000000000317, 0.0001345419999999979, 0.00013495799999999752, 0.00013462499999999933, 0.00013476299999999955, 0.00013494400000000142, 0.00013532000000000127, 0.00013530499999999876, 0.0001354169999999988, 0.00013493100000000133, 0.00013476399999999902, 0.00013469500000000065, 0.00013457000000000052, 0.00013451400000000224, 0.00013461099999999976, 0.00013519400000000167, 0.00013472300000000326, 0.00013452799999999834, 0.000134861, 0.00013491599999999881]</msg>
<status status="PASS" starttime="20201110 08:34:09.945" endtime="20201110 08:34:09.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.940" endtime="20201110 08:34:09.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.950" endtime="20201110 08:34:09.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.953" endtime="20201110 08:34:09.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.952" endtime="20201110 08:34:09.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.948" endtime="20201110 08:34:09.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.579" endtime="20201110 08:34:09.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.579" endtime="20201110 08:34:09.974"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.983" endtime="20201110 08:34:10.003"></status>
</kw>
<msg timestamp="20201110 08:34:10.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.981" endtime="20201110 08:34:10.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.004" endtime="20201110 08:34:10.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.007" endtime="20201110 08:34:10.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.979" endtime="20201110 08:34:10.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.977" endtime="20201110 08:34:10.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.016" endtime="20201110 08:34:10.303"></status>
</kw>
<msg timestamp="20201110 08:34:10.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.014" endtime="20201110 08:34:10.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.307" endtime="20201110 08:34:10.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.315" endtime="20201110 08:34:10.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.012" endtime="20201110 08:34:10.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.010" endtime="20201110 08:34:10.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.322" level="INFO">${RESULT} = [{'time': 0.022285583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013642999999999988, 'source_diff': 0.00013642999999999988}, {'time': 0.022451042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.318" endtime="20201110 08:34:10.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.335" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:10.323" endtime="20201110 08:34:10.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.340" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.339" endtime="20201110 08:34:10.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.342" level="INFO">VALUE: [0.00013642999999999988, 0.0001364450000000024, 0.00013572200000000131, 0.00013601400000000027, 0.0001358199999999983, 0.00013606899999999908, 0.00013594400000000242, 0.00013644399999999945, 0.00013605600000000245, 0.000135861000000001, 0.00013556899999999858, 0.00013588900000000015, 0.0001357779999999996, 0.000135958000000002, 0.00013620799999999877, 0.00013551399999999977, 0.00013586099999999754, 0.0001358749999999971, 0.0001360979999999977, 0.0001358329999999984, 0.00013644399999999945, 0.0001363610000000015, 0.00013556999999999805, 0.0001360000000000007, 0.00013562500000000033, 0.00013580499999999926, 0.00013593100000000233, 0.00013575000000000045, 0.00013575000000000045, 0.00013627700000000062, 0.00013598599999999766, 0.00013599999999999723, 0.00013586200000000048, 0.00013647300000000154, 0.00013615299999999997, 0.00013582000000000177, 0.00013551399999999977, 0.0001364169999999998, 0.00013619499999999868, 0.00013558299999999815, 0.00013637500000000108, 0.00013556999999999805, 0.00013626400000000052, 0.00013598600000000113, 0.0001360419999999994, 0.00013592999999999938, 0.0001355000000000002, 0.00013651400000000077, 0.0001361390000000004, 0.00013644399999999945]</msg>
<status status="PASS" starttime="20201110 08:34:10.341" endtime="20201110 08:34:10.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.336" endtime="20201110 08:34:10.343"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.346" endtime="20201110 08:34:10.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.349" endtime="20201110 08:34:10.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.348" endtime="20201110 08:34:10.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.344" endtime="20201110 08:34:10.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.975" endtime="20201110 08:34:10.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.974" endtime="20201110 08:34:10.370"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.379" endtime="20201110 08:34:10.399"></status>
</kw>
<msg timestamp="20201110 08:34:10.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.377" endtime="20201110 08:34:10.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.400" endtime="20201110 08:34:10.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.403" endtime="20201110 08:34:10.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.374" endtime="20201110 08:34:10.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.372" endtime="20201110 08:34:10.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.412" endtime="20201110 08:34:10.699"></status>
</kw>
<msg timestamp="20201110 08:34:10.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.410" endtime="20201110 08:34:10.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022226222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022363472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.703" endtime="20201110 08:34:10.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.711" endtime="20201110 08:34:10.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.408" endtime="20201110 08:34:10.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.406" endtime="20201110 08:34:10.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.718" level="INFO">${RESULT} = [{'time': 0.022363472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013724999999999848, 'source_diff': 0.00013724999999999848}, {'time': 0.022526736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.715" endtime="20201110 08:34:10.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:10.719" endtime="20201110 08:34:10.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.736" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.735" endtime="20201110 08:34:10.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.738" level="INFO">VALUE: [0.00013724999999999848, 0.00013705499999999704, 0.00013680500000000026, 0.00013731900000000033, 0.0001370970000000027, 0.00013641600000000031, 0.00013654100000000044, 0.00013693099999999986, 0.00013679200000000016, 0.00013723599999999891, 0.0001373049999999973, 0.0001367910000000007, 0.00013669499999999918, 0.0001371810000000001, 0.0001370550000000005, 0.0001369170000000003, 0.00013662500000000133, 0.0001366809999999996, 0.00013669499999999918, 0.0001371390000000014, 0.00013691600000000081, 0.00013729200000000066, 0.0001365000000000012, 0.00013726399999999805, 0.00013663899999999743, 0.00013684699999999897, 0.00013641600000000031, 0.00013723599999999891, 0.00013686099999999854, 0.00013641600000000031, 0.00013737500000000208, 0.00013663800000000142, 0.0001366809999999996, 0.00013738899999999818, 0.00013663799999999796, 0.0001366390000000009, 0.00013740199999999828, 0.00013712499999999836, 0.00013670899999999875, 0.000136958999999999, 0.00013652800000000034, 0.0001366390000000009, 0.00013673599999999841, 0.00013745800000000002, 0.00013699999999999823, 0.00013705599999999998, 0.0001373199999999998, 0.00013702799999999737, 0.00013705599999999998, 0.0001373199999999998]</msg>
<status status="PASS" starttime="20201110 08:34:10.737" endtime="20201110 08:34:10.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.732" endtime="20201110 08:34:10.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.742" endtime="20201110 08:34:10.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.745" endtime="20201110 08:34:10.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.744" endtime="20201110 08:34:10.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.740" endtime="20201110 08:34:10.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.371" endtime="20201110 08:34:10.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.370" endtime="20201110 08:34:10.766"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.775" endtime="20201110 08:34:10.795"></status>
</kw>
<msg timestamp="20201110 08:34:10.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.773" endtime="20201110 08:34:10.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.797" endtime="20201110 08:34:10.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.799" endtime="20201110 08:34:10.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.771" endtime="20201110 08:34:10.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.769" endtime="20201110 08:34:10.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.808" endtime="20201110 08:34:11.095"></status>
</kw>
<msg timestamp="20201110 08:34:11.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.807" endtime="20201110 08:34:11.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022249569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.099" endtime="20201110 08:34:11.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.108" endtime="20201110 08:34:11.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.804" endtime="20201110 08:34:11.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.802" endtime="20201110 08:34:11.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.115" level="INFO">${RESULT} = [{'time': 0.022249569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013791600000000181, 'source_diff': 0.00013791600000000181}, {'time': 0.022419819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.111" endtime="20201110 08:34:11.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.130" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.116" endtime="20201110 08:34:11.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.134" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.133" endtime="20201110 08:34:11.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.137" level="INFO">VALUE: [0.00013791600000000181, 0.0001378330000000004, 0.00013808300000000065, 0.00013794400000000095, 0.0001378879999999992, 0.00013759699999999972, 0.00013770899999999975, 0.00013822200000000034, 0.00013794400000000095, 0.00013759699999999972, 0.00013762499999999886, 0.00013744400000000045, 0.00013824999999999948, 0.00013834700000000047, 0.00013799999999999923, 0.00013829200000000166, 0.0001383749999999996, 0.00013812499999999936, 0.00013763899999999843, 0.0001375420000000009, 0.00013780600000000073, 0.00013794500000000043, 0.00013824999999999948, 0.00013792999999999792, 0.00013826399999999905, 0.0001383049999999983, 0.00013770800000000027, 0.00013806900000000108, 0.00013813899999999893, 0.0001375269999999984, 0.0001375000000000022, 0.00013743100000000036, 0.00013812499999999936, 0.0001382780000000021, 0.00013758399999999962, 0.00013849999999999973, 0.00013773599999999941, 0.0001376390000000019, 0.00013794499999999696, 0.00013840299999999875, 0.0001385139999999993, 0.00013830600000000123, 0.00013794499999999696, 0.00013827799999999862, 0.00013776400000000202, 0.00013805499999999804, 0.00013799999999999923, 0.00013833400000000037, 0.00013812499999999936, 0.00013761100000000276]</msg>
<status status="PASS" starttime="20201110 08:34:11.135" endtime="20201110 08:34:11.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.131" endtime="20201110 08:34:11.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.140" endtime="20201110 08:34:11.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.144" endtime="20201110 08:34:11.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.142" endtime="20201110 08:34:11.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.139" endtime="20201110 08:34:11.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.767" endtime="20201110 08:34:11.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.767" endtime="20201110 08:34:11.165"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.173" endtime="20201110 08:34:11.194"></status>
</kw>
<msg timestamp="20201110 08:34:11.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.172" endtime="20201110 08:34:11.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.195" endtime="20201110 08:34:11.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.198" endtime="20201110 08:34:11.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.169" endtime="20201110 08:34:11.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.167" endtime="20201110 08:34:11.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.207" endtime="20201110 08:34:11.495"></status>
</kw>
<msg timestamp="20201110 08:34:11.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.205" endtime="20201110 08:34:11.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022134069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.499" endtime="20201110 08:34:11.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.507" endtime="20201110 08:34:11.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.203" endtime="20201110 08:34:11.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.201" endtime="20201110 08:34:11.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.514" level="INFO">${RESULT} = [{'time': 0.022134069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013900000000000023, 'source_diff': 0.00013900000000000023}, {'time': 0.022305514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.510" endtime="20201110 08:34:11.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.515" endtime="20201110 08:34:11.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.531" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.530" endtime="20201110 08:34:11.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.534" level="INFO">VALUE: [0.00013900000000000023, 0.00013930599999999876, 0.0001387369999999999, 0.00013925000000000048, 0.00013862499999999986, 0.00013874999999999998, 0.0001393339999999979, 0.00013920899999999778, 0.00013888899999999968, 0.00013898600000000066, 0.00013897199999999763, 0.00013842999999999842, 0.0001393049999999993, 0.00013934700000000147, 0.00013938900000000018, 0.00013863899999999943, 0.0001386940000000017, 0.00013862499999999986, 0.00013912500000000036, 0.00013898600000000066, 0.00013870899999999728, 0.00013854099999999897, 0.0001393750000000006, 0.00013888899999999968, 0.00013944399999999899, 0.00013901300000000033, 0.00013890299999999925, 0.00013894499999999796, 0.00013857000000000105, 0.000138555000000002, 0.0001388750000000001, 0.00013858300000000115, 0.00013855600000000148, 0.0001383749999999996, 0.00013950000000000073, 0.0001391810000000021, 0.00013881900000000183, 0.00013904200000000241, 0.00013844399999999799, 0.00013922300000000082, 0.00013930599999999876, 0.00013918099999999864, 0.00013874999999999998, 0.00013873600000000041, 0.0001393750000000006, 0.0001385139999999993, 0.00013913899999999993, 0.00013872200000000084, 0.0001392079999999983, 0.00013919500000000168]</msg>
<status status="PASS" starttime="20201110 08:34:11.533" endtime="20201110 08:34:11.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.528" endtime="20201110 08:34:11.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.538" endtime="20201110 08:34:11.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.541" endtime="20201110 08:34:11.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.539" endtime="20201110 08:34:11.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.536" endtime="20201110 08:34:11.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.166" endtime="20201110 08:34:11.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.165" endtime="20201110 08:34:11.562"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.571" endtime="20201110 08:34:11.591"></status>
</kw>
<msg timestamp="20201110 08:34:11.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.569" endtime="20201110 08:34:11.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.592" endtime="20201110 08:34:11.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.595" endtime="20201110 08:34:11.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.566" endtime="20201110 08:34:11.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.564" endtime="20201110 08:34:11.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.604" endtime="20201110 08:34:11.891"></status>
</kw>
<msg timestamp="20201110 08:34:11.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.602" endtime="20201110 08:34:11.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.896" endtime="20201110 08:34:11.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.904" endtime="20201110 08:34:11.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.600" endtime="20201110 08:34:11.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.598" endtime="20201110 08:34:11.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.910" level="INFO">${RESULT} = [{'time': 0.022202875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013988900000000068, 'source_diff': 0.00013988900000000068}, {'time': 0.022369264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:11.907" endtime="20201110 08:34:11.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.923" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:11.911" endtime="20201110 08:34:11.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.928" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.927" endtime="20201110 08:34:11.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.931" level="INFO">VALUE: [0.00013988900000000068, 0.0001398750000000011, 0.0001398200000000023, 0.00014013899999999746, 0.000139653, 0.00013990200000000078, 0.00013948600000000116, 0.00014025000000000148, 0.00014040300000000075, 0.00014049999999999827, 0.0001403889999999977, 0.00014044399999999999, 0.00013963899999999696, 0.00013955600000000248, 0.00013986099999999807, 0.00014023600000000191, 0.00013994399999999949, 0.0001401949999999992, 0.00013940200000000028, 0.0001395980000000012, 0.0001396110000000013, 0.00013945800000000202, 0.0001398469999999985, 0.00013944399999999899, 0.00014027800000000062, 0.0001401110000000018, 0.0001402629999999981, 0.00013941699999999932, 0.00014047199999999913, 0.00013969399999999924, 0.0001394170000000028, 0.00013995799999999906, 0.00013967999999999967, 0.00014005500000000004, 0.00013963899999999696, 0.00014018000000000017, 0.00013979100000000022, 0.00014036100000000204, 0.00013944400000000245, 0.0001398750000000011, 0.00013995800000000252, 0.00013972299999999785, 0.00014027800000000062, 0.00013983400000000187, 0.00014013900000000093, 0.00013976400000000055, 0.00013962500000000086, 0.00013963900000000043, 0.00013977700000000065, 0.0001402079999999993]</msg>
<status status="PASS" starttime="20201110 08:34:11.929" endtime="20201110 08:34:11.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.924" endtime="20201110 08:34:11.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.934" endtime="20201110 08:34:11.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.938" endtime="20201110 08:34:11.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.936" endtime="20201110 08:34:11.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.932" endtime="20201110 08:34:11.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.563" endtime="20201110 08:34:11.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.562" endtime="20201110 08:34:11.959"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.967" endtime="20201110 08:34:11.988"></status>
</kw>
<msg timestamp="20201110 08:34:11.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.966" endtime="20201110 08:34:11.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.989" endtime="20201110 08:34:11.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.992" endtime="20201110 08:34:11.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.963" endtime="20201110 08:34:11.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.961" endtime="20201110 08:34:11.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.001" endtime="20201110 08:34:12.288"></status>
</kw>
<msg timestamp="20201110 08:34:12.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.999" endtime="20201110 08:34:12.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022185306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022326264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.292" endtime="20201110 08:34:12.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.300" endtime="20201110 08:34:12.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.997" endtime="20201110 08:34:12.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.995" endtime="20201110 08:34:12.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.307" level="INFO">${RESULT} = [{'time': 0.022326264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014095800000000006, 'source_diff': 0.00014095800000000006}, {'time': 0.022495681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.304" endtime="20201110 08:34:12.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.320" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:12.308" endtime="20201110 08:34:12.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.325" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.324" endtime="20201110 08:34:12.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.327" level="INFO">VALUE: [0.00014095800000000006, 0.00014099999999999877, 0.00014058399999999915, 0.00014068100000000014, 0.0001411950000000002, 0.00014063900000000143, 0.00014131900000000086, 0.0001405279999999974, 0.00014127700000000215, 0.00014093000000000092, 0.00014069400000000024, 0.00014074999999999852, 0.00014086099999999907, 0.00014074999999999852, 0.00014049999999999827, 0.00014140300000000175, 0.00014127699999999868, 0.00014094400000000049, 0.00014076400000000155, 0.0001406949999999997, 0.00014099999999999877, 0.0001405690000000001, 0.00014073599999999895, 0.0001405140000000013, 0.00014061099999999882, 0.00014137499999999914, 0.00014072199999999938, 0.00014069400000000024, 0.00014127800000000162, 0.00014133300000000043, 0.00014113900000000193, 0.00014099999999999877, 0.00014086099999999907, 0.00014090300000000125, 0.00014061099999999882, 0.00014138900000000218, 0.0001413889999999987, 0.0001406949999999997, 0.0001413750000000026, 0.00014127800000000162, 0.00014141699999999785, 0.00014097199999999963, 0.0001406249999999984, 0.00014094499999999996, 0.000141040999999998, 0.00014119400000000074, 0.00014115299999999803, 0.0001413189999999974, 0.00014104199999999747, 0.00014124999999999902]</msg>
<status status="PASS" starttime="20201110 08:34:12.326" endtime="20201110 08:34:12.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.321" endtime="20201110 08:34:12.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.331" endtime="20201110 08:34:12.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.334" endtime="20201110 08:34:12.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.333" endtime="20201110 08:34:12.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.329" endtime="20201110 08:34:12.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.959" endtime="20201110 08:34:12.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.959" endtime="20201110 08:34:12.355"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.364" endtime="20201110 08:34:12.385"></status>
</kw>
<msg timestamp="20201110 08:34:12.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.363" endtime="20201110 08:34:12.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.388" endtime="20201110 08:34:12.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.391" endtime="20201110 08:34:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.360" endtime="20201110 08:34:12.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.358" endtime="20201110 08:34:12.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.404" endtime="20201110 08:34:12.696"></status>
</kw>
<msg timestamp="20201110 08:34:12.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.401" endtime="20201110 08:34:12.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.700" endtime="20201110 08:34:12.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.708" endtime="20201110 08:34:12.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.397" endtime="20201110 08:34:12.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.395" endtime="20201110 08:34:12.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.715" level="INFO">${RESULT} = [{'time': 0.022340903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014247199999999766, 'source_diff': 0.00014247199999999766}, {'time': 0.022504167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.711" endtime="20201110 08:34:12.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:12.716" endtime="20201110 08:34:12.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.734" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.733" endtime="20201110 08:34:12.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.737" level="INFO">VALUE: [0.00014247199999999766, 0.00014140299999999828, 0.0001416119999999993, 0.00014231900000000186, 0.00014159700000000025, 0.00014236100000000057, 0.0001414859999999997, 0.00014190300000000225, 0.0001420279999999989, 0.00014227799999999916, 0.00014199999999999977, 0.0001420279999999989, 0.00014148600000000316, 0.00014222299999999688, 0.0001416950000000007, 0.00014219400000000174, 0.00014194500000000096, 0.0001418470000000005, 0.00014166700000000157, 0.00014222200000000088, 0.0001420140000000028, 0.00014194500000000096, 0.00014154199999999797, 0.00014158300000000068, 0.00014237500000000014, 0.00014155599999999754, 0.00014162500000000286, 0.00014181900000000136, 0.00014209700000000075, 0.00014157000000000058, 0.00014227800000000262, 0.00014161099999999982, 0.0001415690000000011, 0.00014187499999999964, 0.0001416249999999994, 0.00014243099999999842, 0.00014145800000000056, 0.00014180600000000126, 0.0001416249999999994, 0.00014211100000000032, 0.00014222200000000088, 0.0001415690000000011, 0.00014205500000000204, 0.00014186100000000007, 0.0001421249999999999, 0.00014237500000000014, 0.00014177699999999918, 0.00014241700000000232, 0.00014192999999999845, 0.00014180600000000126]</msg>
<status status="PASS" starttime="20201110 08:34:12.735" endtime="20201110 08:34:12.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.730" endtime="20201110 08:34:12.738"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.740" endtime="20201110 08:34:12.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.744" endtime="20201110 08:34:12.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.742" endtime="20201110 08:34:12.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.738" endtime="20201110 08:34:12.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.356" endtime="20201110 08:34:12.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.356" endtime="20201110 08:34:12.764"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.773" endtime="20201110 08:34:12.793"></status>
</kw>
<msg timestamp="20201110 08:34:12.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.772" endtime="20201110 08:34:12.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.795" endtime="20201110 08:34:12.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.798" endtime="20201110 08:34:12.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.769" endtime="20201110 08:34:12.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.767" endtime="20201110 08:34:12.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.807" endtime="20201110 08:34:13.094"></status>
</kw>
<msg timestamp="20201110 08:34:13.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.805" endtime="20201110 08:34:13.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.098" endtime="20201110 08:34:13.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.106" endtime="20201110 08:34:13.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.802" endtime="20201110 08:34:13.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.801" endtime="20201110 08:34:13.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.113" level="INFO">${RESULT} = [{'time': 0.022130958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014300000000000077, 'source_diff': 0.00014300000000000077}, {'time': 0.02229925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:13.110" endtime="20201110 08:34:13.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.126" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.114" endtime="20201110 08:34:13.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.131" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.130" endtime="20201110 08:34:13.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.133" level="INFO">VALUE: [0.00014300000000000077, 0.0001429860000000012, 0.00014261099999999735, 0.00014294400000000249, 0.00014287500000000064, 0.00014292999999999945, 0.00014294400000000249, 0.00014305499999999957, 0.00014275000000000052, 0.00014323600000000145, 0.00014241599999999938, 0.00014330499999999982, 0.00014287500000000064, 0.00014265299999999953, 0.00014252800000000287, 0.00014269499999999824, 0.00014244400000000199, 0.00014293099999999892, 0.00014341699999999985, 0.00014268099999999867, 0.00014255499999999907, 0.00014284699999999803, 0.00014337499999999767, 0.00014326400000000059, 0.00014277800000000312, 0.00014280600000000226, 0.00014261100000000082, 0.00014281900000000236, 0.0001426669999999991, 0.00014261100000000082, 0.00014342999999999995, 0.00014313900000000046, 0.0001428189999999989, 0.0001426799999999992, 0.000143444999999999, 0.0001426250000000004, 0.00014333300000000243, 0.00014279099999999975, 0.00014325000000000102, 0.00014300000000000077, 0.00014275000000000052, 0.00014251300000000036, 0.00014306899999999914, 0.00014256999999999811, 0.00014273599999999748, 0.00014318099999999917, 0.00014261100000000082, 0.00014259700000000125, 0.00014247199999999766, 0.00014280499999999932]</msg>
<status status="PASS" starttime="20201110 08:34:13.132" endtime="20201110 08:34:13.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.127" endtime="20201110 08:34:13.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.137" endtime="20201110 08:34:13.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.141" endtime="20201110 08:34:13.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.139" endtime="20201110 08:34:13.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.135" endtime="20201110 08:34:13.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.765" endtime="20201110 08:34:13.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.765" endtime="20201110 08:34:13.162"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.171" endtime="20201110 08:34:13.191"></status>
</kw>
<msg timestamp="20201110 08:34:13.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.169" endtime="20201110 08:34:13.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.193" endtime="20201110 08:34:13.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.195" endtime="20201110 08:34:13.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.167" endtime="20201110 08:34:13.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.165" endtime="20201110 08:34:13.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.204" endtime="20201110 08:34:13.491"></status>
</kw>
<msg timestamp="20201110 08:34:13.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.203" endtime="20201110 08:34:13.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022262722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.496" endtime="20201110 08:34:13.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.504" endtime="20201110 08:34:13.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.200" endtime="20201110 08:34:13.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.198" endtime="20201110 08:34:13.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.510" level="INFO">${RESULT} = [{'time': 0.022262722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014454099999999803, 'source_diff': 0.00014454099999999803}, {'time': 0.022426222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.507" endtime="20201110 08:34:13.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.511" endtime="20201110 08:34:13.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.528" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.527" endtime="20201110 08:34:13.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.531" level="INFO">VALUE: [0.00014454099999999803, 0.00014412499999999842, 0.00014344400000000299, 0.00014372200000000238, 0.00014423600000000245, 0.00014405500000000057, 0.00014388800000000174, 0.00014427800000000116, 0.00014411100000000232, 0.00014379199999999676, 0.00014377800000000066, 0.00014433299999999996, 0.00014415300000000103, 0.0001442219999999994, 0.0001439159999999974, 0.0001434860000000017, 0.00014427700000000168, 0.00014369399999999977, 0.00014415299999999756, 0.00014377800000000066, 0.00014387499999999817, 0.00014427800000000116, 0.00014361100000000182, 0.00014423600000000245, 0.00014429100000000125, 0.00014362499999999792, 0.00014363900000000096, 0.00014383300000000293, 0.00014361100000000182, 0.00014373600000000195, 0.00014423599999999898, 0.00014411099999999885, 0.0001439860000000022, 0.00014406900000000014, 0.00014380500000000032, 0.00014391600000000088, 0.00014380500000000032, 0.00014441700000000085, 0.00014434699999999953, 0.00014409699999999928, 0.00014424999999999855, 0.00014390300000000078, 0.0001438890000000012, 0.0001435129999999979, 0.0001438059999999998, 0.00014355599999999955, 0.0001438609999999986, 0.000143444999999999, 0.00014373599999999848, 0.0001434860000000017]</msg>
<status status="PASS" starttime="20201110 08:34:13.529" endtime="20201110 08:34:13.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.525" endtime="20201110 08:34:13.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.540" endtime="20201110 08:34:13.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.543" endtime="20201110 08:34:13.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.541" endtime="20201110 08:34:13.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.538" endtime="20201110 08:34:13.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.163" endtime="20201110 08:34:13.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.162" endtime="20201110 08:34:13.564"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.573" endtime="20201110 08:34:13.593"></status>
</kw>
<msg timestamp="20201110 08:34:13.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.571" endtime="20201110 08:34:13.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.595" endtime="20201110 08:34:13.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.597" endtime="20201110 08:34:13.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.569" endtime="20201110 08:34:13.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.566" endtime="20201110 08:34:13.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.606" endtime="20201110 08:34:13.893"></status>
</kw>
<msg timestamp="20201110 08:34:13.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.605" endtime="20201110 08:34:13.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022054681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.897" endtime="20201110 08:34:13.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.905" endtime="20201110 08:34:13.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.602" endtime="20201110 08:34:13.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.600" endtime="20201110 08:34:13.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.912" level="INFO">${RESULT} = [{'time': 0.022199889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014520800000000084, 'source_diff': 0.00014520800000000084}, {'time': 0.022372264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.909" endtime="20201110 08:34:13.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.925" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:13.913" endtime="20201110 08:34:13.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.930" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.929" endtime="20201110 08:34:13.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.932" level="INFO">VALUE: [0.00014520800000000084, 0.0001452220000000004, 0.0001446809999999972, 0.00014508400000000019, 0.0001446670000000011, 0.0001448609999999996, 0.00014498599999999973, 0.00014529099999999878, 0.00014473599999999948, 0.00014513900000000246, 0.00014516699999999813, 0.0001451519999999991, 0.00014440300000000128, 0.00014525000000000302, 0.00014477800000000166, 0.0001454719999999972, 0.00014504099999999853, 0.000145041999999998, 0.0001452220000000004, 0.00014477799999999819, 0.00014448599999999923, 0.00014455600000000055, 0.00014497200000000016, 0.0001447089999999998, 0.00014477799999999819, 0.00014493100000000092, 0.00014511099999999985, 0.00014502699999999896, 0.0001447219999999999, 0.00014505500000000157, 0.0001453329999999975, 0.00014457000000000012, 0.00014509700000000028, 0.000145348, 0.000145348, 0.000145041000000002, 0.00014532000000000087, 0.0001453610000000001, 0.0001446670000000011, 0.00014537499999999967, 0.000145138999999999, 0.0001452090000000003, 0.00014534700000000053, 0.00014469400000000077, 0.00014495800000000059, 0.00014526399999999912, 0.00014473600000000295, 0.00014534700000000053, 0.00014512499999999942, 0.0001444860000000027]</msg>
<status status="PASS" starttime="20201110 08:34:13.931" endtime="20201110 08:34:13.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.926" endtime="20201110 08:34:13.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.936" endtime="20201110 08:34:13.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.939" endtime="20201110 08:34:13.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.938" endtime="20201110 08:34:13.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.934" endtime="20201110 08:34:13.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.565" endtime="20201110 08:34:13.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.564" endtime="20201110 08:34:13.960"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.969" endtime="20201110 08:34:13.989"></status>
</kw>
<msg timestamp="20201110 08:34:13.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.967" endtime="20201110 08:34:13.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.991" endtime="20201110 08:34:13.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.993" endtime="20201110 08:34:13.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.965" endtime="20201110 08:34:13.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.963" endtime="20201110 08:34:13.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.003" endtime="20201110 08:34:14.290"></status>
</kw>
<msg timestamp="20201110 08:34:14.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02207825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:14.001" endtime="20201110 08:34:14.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02207825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:14.294" endtime="20201110 08:34:14.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.302" endtime="20201110 08:34:14.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.998" endtime="20201110 08:34:14.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.997" endtime="20201110 08:34:14.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.309" level="INFO">${RESULT} = [{'time': 0.022224361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014611100000000085, 'source_diff': 0.00014611100000000085}, {'time': 0.022401722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.306" endtime="20201110 08:34:14.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.324" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:14.310" endtime="20201110 08:34:14.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.328" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.327" endtime="20201110 08:34:14.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.331" level="INFO">VALUE: [0.00014611100000000085, 0.0001458610000000006, 0.0001464029999999998, 0.00014569400000000177, 0.00014552799999999894, 0.00014641699999999938, 0.0001455419999999985, 0.00014622300000000088, 0.00014538899999999924, 0.00014577799999999919, 0.00014604099999999953, 0.00014548600000000023, 0.00014608299999999824, 0.00014584700000000103, 0.00014617999999999923, 0.0001455419999999985, 0.00014584700000000103, 0.0001459029999999993, 0.00014616599999999966, 0.00014561100000000035, 0.00014559700000000078, 0.00014634700000000153, 0.00014636099999999763, 0.00014629199999999926, 0.000145445000000001, 0.00014592999999999898, 0.00014555600000000155, 0.00014591699999999888, 0.00014627799999999969, 0.00014548600000000023, 0.0001460000000000003, 0.0001457220000000009, 0.00014586099999999713, 0.00014582000000000137, 0.0001455419999999985, 0.00014579100000000275, 0.00014629200000000273, 0.0001455969999999973, 0.00014540300000000228, 0.00014548600000000023, 0.0001456809999999982, 0.000146348000000001, 0.000145735999999997, 0.00014587500000000017, 0.0001457220000000009, 0.00014559800000000025, 0.00014542999999999848, 0.00014609700000000128, 0.00014619499999999827, 0.00014605600000000205]</msg>
<status status="PASS" starttime="20201110 08:34:14.329" endtime="20201110 08:34:14.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.324" endtime="20201110 08:34:14.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.334" endtime="20201110 08:34:14.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.338" endtime="20201110 08:34:14.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.336" endtime="20201110 08:34:14.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.333" endtime="20201110 08:34:14.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.961" endtime="20201110 08:34:14.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.961" endtime="20201110 08:34:14.359"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.368" endtime="20201110 08:34:14.388"></status>
</kw>
<msg timestamp="20201110 08:34:14.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.366" endtime="20201110 08:34:14.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.390" endtime="20201110 08:34:14.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.392" endtime="20201110 08:34:14.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.364" endtime="20201110 08:34:14.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.362" endtime="20201110 08:34:14.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.402" endtime="20201110 08:34:14.688"></status>
</kw>
<msg timestamp="20201110 08:34:14.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.400" endtime="20201110 08:34:14.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022610875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.692" endtime="20201110 08:34:14.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.701" endtime="20201110 08:34:14.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.397" endtime="20201110 08:34:14.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.396" endtime="20201110 08:34:14.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.707" level="INFO">${RESULT} = [{'time': 0.022610875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014666699999999963, 'source_diff': 0.00014666699999999963}, {'time': 0.022790222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.704" endtime="20201110 08:34:14.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.721" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:14.708" endtime="20201110 08:34:14.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.725" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.724" endtime="20201110 08:34:14.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.728" level="INFO">VALUE: [0.00014666699999999963, 0.0001465969999999983, 0.00014720799999999937, 0.0001465830000000022, 0.000147139000000001, 0.00014711099999999838, 0.00014720799999999937, 0.0001469030000000003, 0.00014641700000000285, 0.00014684699999999856, 0.0001469030000000003, 0.0001466809999999992, 0.00014691699999999988, 0.00014738899999999777, 0.000146832999999999, 0.00014638900000000024, 0.0001469719999999987, 0.0001466520000000006, 0.00014695799999999912, 0.00014734799999999854, 0.00014640300000000328, 0.00014677800000000019, 0.00014711099999999838, 0.00014695799999999912, 0.00014715300000000056, 0.00014716700000000013, 0.00014719499999999927, 0.00014724999999999808, 0.00014670799999999887, 0.00014698600000000173, 0.00014729200000000026, 0.00014716700000000013, 0.00014675000000000105, 0.00014705599999999958, 0.00014684700000000203, 0.00014736099999999863, 0.00014727800000000069, 0.000146832999999999, 0.00014648600000000123, 0.00014665300000000006, 0.00014658399999999822, 0.00014657000000000212, 0.00014726400000000112, 0.00014691699999999988, 0.00014720799999999937, 0.00014718000000000023, 0.00014684699999999856, 0.00014695799999999912, 0.000146735999999998, 0.0001471809999999997]</msg>
<status status="PASS" starttime="20201110 08:34:14.726" endtime="20201110 08:34:14.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.722" endtime="20201110 08:34:14.729"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.731" endtime="20201110 08:34:14.733"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.735" endtime="20201110 08:34:14.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.733" endtime="20201110 08:34:14.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.730" endtime="20201110 08:34:14.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.360" endtime="20201110 08:34:14.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.359" endtime="20201110 08:34:14.756"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.764" endtime="20201110 08:34:14.785"></status>
</kw>
<msg timestamp="20201110 08:34:14.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.763" endtime="20201110 08:34:14.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.787" endtime="20201110 08:34:14.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.789" endtime="20201110 08:34:14.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.760" endtime="20201110 08:34:14.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.758" endtime="20201110 08:34:14.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.798" endtime="20201110 08:34:15.086"></status>
</kw>
<msg timestamp="20201110 08:34:15.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:14.797" endtime="20201110 08:34:15.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:15.090" endtime="20201110 08:34:15.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.104" endtime="20201110 08:34:15.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.794" endtime="20201110 08:34:15.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.792" endtime="20201110 08:34:15.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.116" level="INFO">${RESULT} = [{'time': 0.02227, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014827800000000169, 'source_diff': 0.00014827800000000169}, {'time': 0.022445444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:15.110" endtime="20201110 08:34:15.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.131" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.118" endtime="20201110 08:34:15.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.136" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.135" endtime="20201110 08:34:15.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.138" level="INFO">VALUE: [0.00014827800000000169, 0.00014830499999999788, 0.00014779200000000076, 0.00014769499999999977, 0.000147735999999999, 0.00014781900000000042, 0.00014758299999999974, 0.0001480139999999984, 0.00014772199999999944, 0.00014834700000000006, 0.00014815300000000156, 0.00014756900000000017, 0.00014776399999999815, 0.00014786099999999913, 0.0001475420000000005, 0.00014820899999999984, 0.00014781900000000042, 0.0001479030000000013, 0.00014769499999999977, 0.00014758399999999922, 0.00014795800000000012, 0.00014772199999999944, 0.000147833, 0.0001481940000000008, 0.00014758299999999974, 0.00014743099999999995, 0.00014784699999999956, 0.00014780600000000033, 0.0001474580000000031, 0.00014827800000000169, 0.00014754100000000103, 0.0001476810000000002, 0.00014808299999999677, 0.0001480139999999984, 0.0001481520000000021, 0.00014765300000000106, 0.00014738800000000177, 0.0001476390000000015, 0.0001475969999999993, 0.00014774999999999858, 0.0001478749999999987, 0.0001476940000000003, 0.00014765300000000106, 0.0001474589999999991, 0.0001483749999999992, 0.00014741700000000038, 0.00014830600000000083, 0.0001480969999999998, 0.0001479719999999997, 0.00014794400000000055]</msg>
<status status="PASS" starttime="20201110 08:34:15.137" endtime="20201110 08:34:15.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.132" endtime="20201110 08:34:15.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.142" endtime="20201110 08:34:15.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.145" endtime="20201110 08:34:15.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.144" endtime="20201110 08:34:15.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.140" endtime="20201110 08:34:15.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.757" endtime="20201110 08:34:15.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.756" endtime="20201110 08:34:15.167"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.176" endtime="20201110 08:34:15.197"></status>
</kw>
<msg timestamp="20201110 08:34:15.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.174" endtime="20201110 08:34:15.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.199" endtime="20201110 08:34:15.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.201" endtime="20201110 08:34:15.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.172" endtime="20201110 08:34:15.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.169" endtime="20201110 08:34:15.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.210" endtime="20201110 08:34:15.495"></status>
</kw>
<msg timestamp="20201110 08:34:15.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.209" endtime="20201110 08:34:15.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023516319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023665889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.499" endtime="20201110 08:34:15.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.508" endtime="20201110 08:34:15.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.206" endtime="20201110 08:34:15.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.204" endtime="20201110 08:34:15.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.514" level="INFO">${RESULT} = [{'time': 0.023665889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014956999999999818, 'source_diff': 0.00014956999999999818}, {'time': 0.023829222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:15.511" endtime="20201110 08:34:15.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.515" endtime="20201110 08:34:15.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.532" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.531" endtime="20201110 08:34:15.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.534" level="INFO">VALUE: [0.00014956999999999818, 0.00014893000000000198, 0.00014930500000000235, 0.0001491810000000017, 0.00014930600000000183, 0.0001493339999999975, 0.00014884700000000056, 0.00014863899999999902, 0.00014838899999999877, 0.0001491529999999991, 0.00014888900000000274, 0.00014888899999999927, 0.00014890299999999884, 0.00014863899999999902, 0.00014862500000000292, 0.0001486659999999987, 0.0001493330000000015, 0.00014858300000000074, 0.0001492909999999993, 0.00014872200000000044, 0.00014837500000000267, 0.00014926300000000017, 0.00014884700000000056, 0.000148833000000001, 0.0001488879999999998, 0.00014902800000000244, 0.0001486940000000013, 0.0001484720000000002, 0.00014870800000000087, 0.00014859799999999979, 0.00014857000000000065, 0.0001487919999999983, 0.0001492079999999979, 0.0001493750000000002, 0.0001491940000000018, 0.00014941700000000238, 0.00014934700000000106, 0.0001489720000000007, 0.00014877799999999872, 0.00014891700000000188, 0.0001486529999999986, 0.00014866699999999816, 0.00014880600000000133, 0.00014874999999999958, 0.0001485970000000003, 0.00014931999999999793, 0.0001488749999999997, 0.00014901400000000287, 0.00014908300000000124, 0.00014862499999999945]</msg>
<status status="PASS" starttime="20201110 08:34:15.533" endtime="20201110 08:34:15.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.528" endtime="20201110 08:34:15.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.538" endtime="20201110 08:34:15.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.541" endtime="20201110 08:34:15.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.540" endtime="20201110 08:34:15.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.536" endtime="20201110 08:34:15.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.168" endtime="20201110 08:34:15.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.167" endtime="20201110 08:34:15.562"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.571" endtime="20201110 08:34:15.591"></status>
</kw>
<msg timestamp="20201110 08:34:15.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.569" endtime="20201110 08:34:15.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.593" endtime="20201110 08:34:15.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.595" endtime="20201110 08:34:15.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.567" endtime="20201110 08:34:15.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.565" endtime="20201110 08:34:15.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.604" endtime="20201110 08:34:15.890"></status>
</kw>
<msg timestamp="20201110 08:34:15.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.603" endtime="20201110 08:34:15.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.894" endtime="20201110 08:34:15.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.903" endtime="20201110 08:34:15.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.600" endtime="20201110 08:34:15.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.599" endtime="20201110 08:34:15.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.909" level="INFO">${RESULT} = [{'time': 0.022046347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015004100000000006, 'source_diff': 0.00015004100000000006}, {'time': 0.022214778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:15.906" endtime="20201110 08:34:15.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.924" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:15.910" endtime="20201110 08:34:15.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.928" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.927" endtime="20201110 08:34:15.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.931" level="INFO">VALUE: [0.00015004100000000006, 0.0001496810000000022, 0.00015026400000000065, 0.00014988900000000027, 0.0001495139999999999, 0.00014967999999999926, 0.00014994499999999855, 0.00014951400000000337, 0.00014994400000000255, 0.00014994499999999855, 0.00014983299999999852, 0.00015031999999999893, 0.00015018099999999923, 0.00014984700000000156, 0.00015036100000000163, 0.00015031899999999945, 0.0001495559999999986, 0.0001499299999999995, 0.0001494590000000011, 0.00015009699999999834, 0.0001495139999999999, 0.00015008400000000172, 0.00014986100000000113, 0.00014994399999999908, 0.00015038900000000077, 0.00014983299999999852, 0.00015002799999999997, 0.00014994500000000202, 0.00014969399999999883, 0.000149736000000001, 0.00015013899999999705, 0.00015013900000000052, 0.00015038900000000077, 0.00014938899999999977, 0.00014936100000000063, 0.00014941599999999944, 0.0001493750000000002, 0.00015013900000000052, 0.0001499299999999995, 0.0001499169999999994, 0.00015009799999999782, 0.00014970899999999787, 0.00014995799999999865, 0.00015009799999999782, 0.0001498750000000007, 0.0001502360000000015, 0.00014944500000000152, 0.0001501940000000028, 0.0001496949999999983, 0.00014963900000000002]</msg>
<status status="PASS" starttime="20201110 08:34:15.929" endtime="20201110 08:34:15.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.925" endtime="20201110 08:34:15.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.934" endtime="20201110 08:34:15.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.938" endtime="20201110 08:34:15.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.936" endtime="20201110 08:34:15.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.933" endtime="20201110 08:34:15.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.563" endtime="20201110 08:34:15.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.562" endtime="20201110 08:34:15.959"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.967" endtime="20201110 08:34:15.988"></status>
</kw>
<msg timestamp="20201110 08:34:15.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.966" endtime="20201110 08:34:15.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.990" endtime="20201110 08:34:15.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.992" endtime="20201110 08:34:15.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.963" endtime="20201110 08:34:15.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.961" endtime="20201110 08:34:15.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.001" endtime="20201110 08:34:16.289"></status>
</kw>
<msg timestamp="20201110 08:34:16.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.000" endtime="20201110 08:34:16.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.293" endtime="20201110 08:34:16.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.301" endtime="20201110 08:34:16.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.997" endtime="20201110 08:34:16.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.995" endtime="20201110 08:34:16.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.308" level="INFO">${RESULT} = [{'time': 0.022142722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015083299999999952, 'source_diff': 0.00015083299999999952}, {'time': 0.022320889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.305" endtime="20201110 08:34:16.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.321" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:16.309" endtime="20201110 08:34:16.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.326" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.325" endtime="20201110 08:34:16.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.328" level="INFO">VALUE: [0.00015083299999999952, 0.00015094499999999955, 0.00015081900000000342, 0.00015125000000000208, 0.00015081899999999995, 0.00015055500000000013, 0.0001507230000000019, 0.0001512230000000024, 0.00015044399999999958, 0.00015111100000000238, 0.0001508469999999991, 0.00015069399999999983, 0.00015043099999999948, 0.00015044499999999905, 0.00015061200000000136, 0.00015112500000000195, 0.0001508750000000017, 0.0001508750000000017, 0.00015130500000000088, 0.00015055499999999666, 0.00015099999999999836, 0.0001509170000000004, 0.00015081999999999943, 0.0001512079999999999, 0.0001511530000000011, 0.0001504590000000021, 0.0001510690000000002, 0.00015093099999999998, 0.00015044399999999958, 0.00015130600000000036, 0.0001512079999999999, 0.00015126399999999818, 0.0001504169999999999, 0.00015106999999999968, 0.00015145800000000015, 0.00015059699999999884, 0.00015051399999999743, 0.00015112499999999848, 0.00015087499999999823, 0.00015058299999999927, 0.00015131900000000045, 0.00015056999999999918, 0.0001505689999999997, 0.00015054100000000056, 0.00015113799999999858, 0.000150833999999999, 0.00015043099999999948, 0.00015049999999999786, 0.00015119400000000033, 0.0001510560000000001]</msg>
<status status="PASS" starttime="20201110 08:34:16.327" endtime="20201110 08:34:16.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.322" endtime="20201110 08:34:16.329"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.332" endtime="20201110 08:34:16.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.335" endtime="20201110 08:34:16.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.333" endtime="20201110 08:34:16.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.330" endtime="20201110 08:34:16.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.960" endtime="20201110 08:34:16.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.959" endtime="20201110 08:34:16.356"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.364" endtime="20201110 08:34:16.385"></status>
</kw>
<msg timestamp="20201110 08:34:16.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.363" endtime="20201110 08:34:16.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.387" endtime="20201110 08:34:16.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.389" endtime="20201110 08:34:16.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.360" endtime="20201110 08:34:16.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.358" endtime="20201110 08:34:16.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.399" endtime="20201110 08:34:16.685"></status>
</kw>
<msg timestamp="20201110 08:34:16.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.397" endtime="20201110 08:34:16.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021975472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.690" endtime="20201110 08:34:16.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.698" endtime="20201110 08:34:16.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.394" endtime="20201110 08:34:16.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.393" endtime="20201110 08:34:16.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.704" level="INFO">${RESULT} = [{'time': 0.022127333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015186099999999966, 'source_diff': 0.00015186099999999966}, {'time': 0.022296694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:16.701" endtime="20201110 08:34:16.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.717" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:16.705" endtime="20201110 08:34:16.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.722" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.721" endtime="20201110 08:34:16.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.724" level="INFO">VALUE: [0.00015186099999999966, 0.0001518470000000001, 0.00015168000000000126, 0.00015225000000000308, 0.00015199999999999936, 0.0001516109999999994, 0.00015144500000000005, 0.00015145800000000015, 0.00015208300000000077, 0.0001522499999999996, 0.00015159799999999932, 0.00015152800000000147, 0.00015233299999999755, 0.00015195800000000065, 0.00015218100000000123, 0.00015163899999999855, 0.000152221999999997, 0.00015240299999999887, 0.00015159799999999932, 0.0001514729999999992, 0.00015220900000000037, 0.00015240299999999887, 0.00015216599999999872, 0.0001522080000000009, 0.0001520140000000024, 0.00015209700000000034, 0.00015142999999999754, 0.00015176399999999868, 0.00015227799999999875, 0.00015176400000000215, 0.00015226399999999918, 0.0001522499999999996, 0.00015218100000000123, 0.0001521530000000021, 0.00015233300000000102, 0.0001519170000000014, 0.000151736000000003, 0.00015222200000000047, 0.00015208400000000025, 0.00015223600000000004, 0.00015175000000000258, 0.00015151399999999843, 0.0001522080000000009, 0.00015233299999999755, 0.00015186199999999914, 0.00015157000000000018, 0.0001515140000000019, 0.00015145800000000015, 0.00015222299999999994, 0.00015188900000000227]</msg>
<status status="PASS" starttime="20201110 08:34:16.723" endtime="20201110 08:34:16.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.718" endtime="20201110 08:34:16.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.728" endtime="20201110 08:34:16.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.731" endtime="20201110 08:34:16.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.730" endtime="20201110 08:34:16.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.726" endtime="20201110 08:34:16.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.357" endtime="20201110 08:34:16.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.356" endtime="20201110 08:34:16.752"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.761" endtime="20201110 08:34:16.782"></status>
</kw>
<msg timestamp="20201110 08:34:16.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.759" endtime="20201110 08:34:16.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.783" endtime="20201110 08:34:16.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.786" endtime="20201110 08:34:16.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.757" endtime="20201110 08:34:16.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.755" endtime="20201110 08:34:16.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.795" endtime="20201110 08:34:17.081"></status>
</kw>
<msg timestamp="20201110 08:34:17.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.793" endtime="20201110 08:34:17.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021929903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022082903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.085" endtime="20201110 08:34:17.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.094" endtime="20201110 08:34:17.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.790" endtime="20201110 08:34:17.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.789" endtime="20201110 08:34:17.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.100" level="INFO">${RESULT} = [{'time': 0.022082903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015300000000000036, 'source_diff': 0.00015300000000000036}, {'time': 0.022250153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.097" endtime="20201110 08:34:17.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.113" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.101" endtime="20201110 08:34:17.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.118" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.117" endtime="20201110 08:34:17.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.120" level="INFO">VALUE: [0.00015300000000000036, 0.00015318100000000223, 0.00015326400000000018, 0.00015234699999999712, 0.0001531799999999993, 0.00015300000000000036, 0.00015281999999999796, 0.0001531110000000009, 0.00015305599999999864, 0.00015247199999999725, 0.00015323600000000104, 0.0001533890000000003, 0.0001525409999999991, 0.0001528889999999998, 0.00015255599999999814, 0.00015318100000000223, 0.00015306899999999873, 0.0001530409999999996, 0.000153124999999997, 0.000152834000000001, 0.0001528059999999984, 0.0001529309999999985, 0.00015231899999999798, 0.00015318099999999876, 0.00015244400000000158, 0.00015315299999999962, 0.0001531799999999993, 0.00015312500000000048, 0.00015318100000000223, 0.00015268099999999826, 0.0001526110000000004, 0.0001530829999999983, 0.00015262499999999998, 0.00015293100000000198, 0.00015282000000000143, 0.00015276399999999968, 0.00015245900000000062, 0.00015249999999999986, 0.00015238900000000277, 0.00015269399999999836, 0.00015295800000000165, 0.00015251399999999943, 0.00015263800000000008, 0.0001525140000000029, 0.00015245800000000115, 0.00015255599999999814, 0.00015282000000000143, 0.0001527910000000028, 0.00015255599999999814, 0.00015283299999999805]</msg>
<status status="PASS" starttime="20201110 08:34:17.119" endtime="20201110 08:34:17.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.114" endtime="20201110 08:34:17.122"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.124" endtime="20201110 08:34:17.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.127" endtime="20201110 08:34:17.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.126" endtime="20201110 08:34:17.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.122" endtime="20201110 08:34:17.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.753" endtime="20201110 08:34:17.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.753" endtime="20201110 08:34:17.148"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.157" endtime="20201110 08:34:17.178"></status>
</kw>
<msg timestamp="20201110 08:34:17.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.155" endtime="20201110 08:34:17.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.179" endtime="20201110 08:34:17.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.182" endtime="20201110 08:34:17.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.153" endtime="20201110 08:34:17.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.151" endtime="20201110 08:34:17.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.191" endtime="20201110 08:34:17.477"></status>
</kw>
<msg timestamp="20201110 08:34:17.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221245, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:17.189" endtime="20201110 08:34:17.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219705, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221245, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:17.482" endtime="20201110 08:34:17.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.490" endtime="20201110 08:34:17.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.186" endtime="20201110 08:34:17.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.185" endtime="20201110 08:34:17.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.496" level="INFO">${RESULT} = [{'time': 0.0221245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001539999999999979, 'source_diff': 0.0001539999999999979}, {'time': 0.022294806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:17.493" endtime="20201110 08:34:17.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.511" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.497" endtime="20201110 08:34:17.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.515" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.514" endtime="20201110 08:34:17.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.518" level="INFO">VALUE: [0.0001539999999999979, 0.00015405599999999964, 0.0001541110000000019, 0.00015431899999999998, 0.00015359800000000132, 0.0001543609999999987, 0.0001542370000000015, 0.0001542500000000016, 0.00015379100000000034, 0.00015398599999999832, 0.00015423600000000204, 0.0001543609999999987, 0.00015418099999999976, 0.00015393000000000004, 0.0001543059999999999, 0.0001535829999999988, 0.00015341699999999944, 0.0001542500000000016, 0.00015418099999999976, 0.0001535829999999988, 0.0001543059999999999, 0.00015350000000000086, 0.000153430999999999, 0.00015383399999999853, 0.00015383300000000252, 0.00015350000000000086, 0.00015336100000000116, 0.00015412500000000148, 0.0001534999999999974, 0.0001540829999999993, 0.00015368000000000326, 0.0001536110000000014, 0.0001533609999999977, 0.0001537500000000011, 0.00015386100000000166, 0.0001534439999999991, 0.0001541670000000002, 0.00015400000000000136, 0.00015363900000000055, 0.00015379199999999982, 0.0001538890000000008, 0.00015345899999999815, 0.0001533890000000003, 0.00015359699999999837, 0.00015384800000000157, 0.0001533470000000016, 0.00015383299999999905, 0.00015400000000000136, 0.00015397200000000222, 0.0001534439999999991]</msg>
<status status="PASS" starttime="20201110 08:34:17.517" endtime="20201110 08:34:17.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.512" endtime="20201110 08:34:17.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.521" endtime="20201110 08:34:17.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.525" endtime="20201110 08:34:17.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.523" endtime="20201110 08:34:17.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.520" endtime="20201110 08:34:17.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.149" endtime="20201110 08:34:17.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.148" endtime="20201110 08:34:17.546"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.554" endtime="20201110 08:34:17.575"></status>
</kw>
<msg timestamp="20201110 08:34:17.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.553" endtime="20201110 08:34:17.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.577" endtime="20201110 08:34:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.579" endtime="20201110 08:34:17.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.550" endtime="20201110 08:34:17.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.548" endtime="20201110 08:34:17.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.588" endtime="20201110 08:34:17.875"></status>
</kw>
<msg timestamp="20201110 08:34:17.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.587" endtime="20201110 08:34:17.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.879" endtime="20201110 08:34:17.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.887" endtime="20201110 08:34:17.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.584" endtime="20201110 08:34:17.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.582" endtime="20201110 08:34:17.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.894" level="INFO">${RESULT} = [{'time': 0.022125097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015480500000000091, 'source_diff': 0.00015480500000000091}, {'time': 0.022300542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:17.890" endtime="20201110 08:34:17.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.907" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:17.895" endtime="20201110 08:34:17.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.911" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.910" endtime="20201110 08:34:17.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.914" level="INFO">VALUE: [0.00015480500000000091, 0.00015481999999999996, 0.00015495800000000018, 0.00015480500000000091, 0.00015462499999999851, 0.00015468100000000026, 0.00015462499999999851, 0.00015480500000000091, 0.00015455500000000066, 0.00015451400000000143, 0.0001546670000000007, 0.00015476299999999873, 0.00015529200000000132, 0.0001547639999999982, 0.00015450000000000186, 0.00015533300000000055, 0.00015450000000000186, 0.00015505500000000116, 0.00015469400000000036, 0.00015498599999999932, 0.00015477800000000125, 0.00015487499999999876, 0.0001549999999999989, 0.00015511099999999944, 0.00015511099999999944, 0.00015523599999999957, 0.00015509799999999935, 0.0001551809999999973, 0.00015481900000000048, 0.00015526299999999923, 0.0001550700000000002, 0.0001547219999999995, 0.00015440199999999793, 0.00015473599999999907, 0.000154528000000001, 0.00015486100000000266, 0.00015448599999999882, 0.00015509699999999987, 0.00015487500000000223, 0.00015436100000000216, 0.00015508399999999978, 0.00015456900000000023, 0.00015448599999999882, 0.00015526400000000218, 0.00015530500000000141, 0.00015473600000000254, 0.00015441700000000044, 0.0001550419999999976, 0.00015534700000000012, 0.00015465300000000112]</msg>
<status status="PASS" starttime="20201110 08:34:17.912" endtime="20201110 08:34:17.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.908" endtime="20201110 08:34:17.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.917" endtime="20201110 08:34:17.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.921" endtime="20201110 08:34:17.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.919" endtime="20201110 08:34:17.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.916" endtime="20201110 08:34:17.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.547" endtime="20201110 08:34:17.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.546" endtime="20201110 08:34:17.942"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.950" endtime="20201110 08:34:17.971"></status>
</kw>
<msg timestamp="20201110 08:34:17.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.949" endtime="20201110 08:34:17.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.973" endtime="20201110 08:34:17.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.975" endtime="20201110 08:34:17.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.946" endtime="20201110 08:34:17.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.944" endtime="20201110 08:34:17.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.984" endtime="20201110 08:34:18.272"></status>
</kw>
<msg timestamp="20201110 08:34:18.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.983" endtime="20201110 08:34:18.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022129778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022285389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.276" endtime="20201110 08:34:18.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.284" endtime="20201110 08:34:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.980" endtime="20201110 08:34:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.979" endtime="20201110 08:34:18.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.291" level="INFO">${RESULT} = [{'time': 0.022285389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015561099999999994, 'source_diff': 0.00015561099999999994}, {'time': 0.022462667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.287" endtime="20201110 08:34:18.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.304" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:18.292" endtime="20201110 08:34:18.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.308" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.307" endtime="20201110 08:34:18.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.311" level="INFO">VALUE: [0.00015561099999999994, 0.00015543099999999754, 0.00015591699999999847, 0.0001558610000000002, 0.00015533300000000055, 0.00015616699999999872, 0.00015597300000000022, 0.00015612500000000001, 0.00015573600000000007, 0.0001559310000000015, 0.00015573600000000007, 0.00015625000000000014, 0.0001555830000000008, 0.00015583299999999758, 0.00015561099999999994, 0.00015544500000000058, 0.00015551399999999896, 0.00015623700000000004, 0.00015555600000000114, 0.00015555599999999767, 0.0001561800000000023, 0.0001557500000000031, 0.00015548599999999982, 0.00015573600000000007, 0.0001562359999999971, 0.00015548599999999982, 0.00015638899999999983, 0.00015597200000000075, 0.00015601399999999946, 0.0001563060000000019, 0.0001558610000000002, 0.00015563899999999908, 0.00015591600000000247, 0.00015601299999999999, 0.0001557220000000005, 0.00015597200000000075, 0.0001554159999999985, 0.0001557220000000005, 0.00015542999999999807, 0.00015586199999999967, 0.00015608400000000078, 0.0001561800000000023, 0.00015591699999999847, 0.00015611100000000044, 0.00015580500000000191, 0.0001557639999999992, 0.00015537499999999926, 0.0001557639999999992, 0.00015566599999999875, 0.0001557090000000004]</msg>
<status status="PASS" starttime="20201110 08:34:18.309" endtime="20201110 08:34:18.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.305" endtime="20201110 08:34:18.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.314" endtime="20201110 08:34:18.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.318" endtime="20201110 08:34:18.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.316" endtime="20201110 08:34:18.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.313" endtime="20201110 08:34:18.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.942" endtime="20201110 08:34:18.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.942" endtime="20201110 08:34:18.339"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.347" endtime="20201110 08:34:18.369"></status>
</kw>
<msg timestamp="20201110 08:34:18.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.346" endtime="20201110 08:34:18.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.370" endtime="20201110 08:34:18.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.372" endtime="20201110 08:34:18.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.343" endtime="20201110 08:34:18.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.341" endtime="20201110 08:34:18.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.381" endtime="20201110 08:34:18.668"></status>
</kw>
<msg timestamp="20201110 08:34:18.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.380" endtime="20201110 08:34:18.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022100292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.672" endtime="20201110 08:34:18.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.681" endtime="20201110 08:34:18.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.377" endtime="20201110 08:34:18.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.376" endtime="20201110 08:34:18.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.687" level="INFO">${RESULT} = [{'time': 0.022257681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015738900000000083, 'source_diff': 0.00015738900000000083}, {'time': 0.022445944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:18.684" endtime="20201110 08:34:18.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.701" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:18.688" endtime="20201110 08:34:18.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.705" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.704" endtime="20201110 08:34:18.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.708" level="INFO">VALUE: [0.00015738900000000083, 0.00015647199999999778, 0.00015715300000000015, 0.00015659700000000137, 0.00015701400000000046, 0.00015717999999999982, 0.00015652799999999953, 0.00015715200000000068, 0.0001571809999999993, 0.0001569029999999999, 0.00015716600000000025, 0.00015658400000000128, 0.00015652799999999953, 0.0001564029999999994, 0.00015665200000000018, 0.00015652799999999953, 0.00015673600000000107, 0.00015647200000000125, 0.0001567220000000015, 0.0001570000000000009, 0.0001564159999999995, 0.0001571809999999993, 0.0001572359999999981, 0.00015679200000000282, 0.00015723600000000157, 0.00015679200000000282, 0.0001565549999999992, 0.00015677799999999978, 0.00015711100000000144, 0.00015697300000000122, 0.0001565830000000018, 0.00015725000000000114, 0.0001570549999999997, 0.00015695900000000165, 0.0001565419999999991, 0.0001572359999999981, 0.00015723699999999757, 0.0001570969999999984, 0.00015730499999999994, 0.00015734799999999813, 0.00015654099999999962, 0.00015683299999999858, 0.0001564029999999994, 0.00015642999999999907, 0.00015637500000000026, 0.00015691699999999947, 0.00015720799999999896, 0.0001571809999999993, 0.00015716600000000025, 0.000156916]</msg>
<status status="PASS" starttime="20201110 08:34:18.706" endtime="20201110 08:34:18.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.701" endtime="20201110 08:34:18.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.716" endtime="20201110 08:34:18.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.719" endtime="20201110 08:34:18.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.718" endtime="20201110 08:34:18.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.714" endtime="20201110 08:34:18.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.340" endtime="20201110 08:34:18.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.339" endtime="20201110 08:34:18.740"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.749" endtime="20201110 08:34:18.770"></status>
</kw>
<msg timestamp="20201110 08:34:18.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.747" endtime="20201110 08:34:18.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.772" endtime="20201110 08:34:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.774" endtime="20201110 08:34:18.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.745" endtime="20201110 08:34:18.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.742" endtime="20201110 08:34:18.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.783" endtime="20201110 08:34:19.068"></status>
</kw>
<msg timestamp="20201110 08:34:19.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:18.781" endtime="20201110 08:34:19.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022249014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02240675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:19.073" endtime="20201110 08:34:19.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.081" endtime="20201110 08:34:19.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.779" endtime="20201110 08:34:19.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.777" endtime="20201110 08:34:19.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.087" level="INFO">${RESULT} = [{'time': 0.02240675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001577359999999986, 'source_diff': 0.0001577359999999986}, {'time': 0.022591069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:19.084" endtime="20201110 08:34:19.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.102" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.088" endtime="20201110 08:34:19.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.107" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.106" endtime="20201110 08:34:19.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.109" level="INFO">VALUE: [0.0001577359999999986, 0.00015812499999999854, 0.00015784699999999915, 0.00015833300000000008, 0.00015804100000000113, 0.00015820799999999996, 0.00015801400000000146, 0.00015761100000000194, 0.00015820799999999996, 0.00015826399999999824, 0.00015820799999999996, 0.0001579579999999997, 0.00015745899999999868, 0.0001578199999999995, 0.00015793100000000004, 0.0001577909999999974, 0.0001582779999999978, 0.00015816599999999778, 0.00015779200000000035, 0.00015766600000000075, 0.00015759700000000237, 0.0001577640000000012, 0.0001575700000000027, 0.0001574579999999992, 0.00015819499999999986, 0.00015737500000000126, 0.00015747300000000172, 0.0001578199999999995, 0.00015745899999999868, 0.00015765200000000118, 0.00015806999999999974, 0.00015779100000000088, 0.0001575420000000001, 0.00015761100000000194, 0.0001579030000000009, 0.00015786099999999872, 0.00015766700000000022, 0.00015790299999999743, 0.0001578610000000022, 0.00015755599999999967, 0.00015827800000000128, 0.00015786099999999872, 0.00015802800000000103, 0.00015768000000000032, 0.00015829200000000085, 0.0001575969999999989, 0.00015818000000000082, 0.00015827800000000128, 0.00015802800000000103, 0.0001576519999999977]</msg>
<status status="PASS" starttime="20201110 08:34:19.108" endtime="20201110 08:34:19.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.103" endtime="20201110 08:34:19.110"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.113" endtime="20201110 08:34:19.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.116" endtime="20201110 08:34:19.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.115" endtime="20201110 08:34:19.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.111" endtime="20201110 08:34:19.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.741" endtime="20201110 08:34:19.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.740" endtime="20201110 08:34:19.137"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.146" endtime="20201110 08:34:19.167"></status>
</kw>
<msg timestamp="20201110 08:34:19.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.144" endtime="20201110 08:34:19.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.168" endtime="20201110 08:34:19.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.171" endtime="20201110 08:34:19.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.141" endtime="20201110 08:34:19.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.139" endtime="20201110 08:34:19.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.180" endtime="20201110 08:34:19.466"></status>
</kw>
<msg timestamp="20201110 08:34:19.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.178" endtime="20201110 08:34:19.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.470" endtime="20201110 08:34:19.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.479" endtime="20201110 08:34:19.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.176" endtime="20201110 08:34:19.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.174" endtime="20201110 08:34:19.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.485" level="INFO">${RESULT} = [{'time': 0.022181819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001592360000000001, 'source_diff': 0.0001592360000000001}, {'time': 0.022368167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.482" endtime="20201110 08:34:19.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.498" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.486" endtime="20201110 08:34:19.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.503" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.502" endtime="20201110 08:34:19.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.505" level="INFO">VALUE: [0.0001592360000000001, 0.00015857000000000024, 0.000158916999999998, 0.00015904199999999813, 0.00015861099999999947, 0.00015852699999999859, 0.00015880599999999745, 0.0001592779999999988, 0.0001590970000000004, 0.00015855499999999773, 0.00015905600000000117, 0.0001585969999999999, 0.00015888899999999886, 0.00015845900000000315, 0.00015854199999999763, 0.0001583610000000027, 0.00015894400000000114, 0.0001583749999999988, 0.00015884700000000015, 0.00015915300000000215, 0.00015936099999999676, 0.0001583610000000027, 0.000159223, 0.00015897200000000028, 0.0001592779999999988, 0.0001584450000000001, 0.00015890199999999896, 0.00015843000000000107, 0.0001586519999999987, 0.00015879199999999788, 0.00015862500000000251, 0.00015886099999999972, 0.00015936100000000022, 0.00015915299999999868, 0.00015856900000000076, 0.00015915299999999868, 0.00015834699999999965, 0.00015884700000000015, 0.00015879199999999788, 0.0001582909999999979, 0.0001591519999999992, 0.00015901400000000246, 0.0001586810000000008, 0.00015934700000000065, 0.00015905499999999823, 0.00015904099999999866, 0.00015877800000000178, 0.00015920899999999696, 0.00015920800000000096, 0.0001590970000000004]</msg>
<status status="PASS" starttime="20201110 08:34:19.504" endtime="20201110 08:34:19.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.499" endtime="20201110 08:34:19.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.509" endtime="20201110 08:34:19.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.512" endtime="20201110 08:34:19.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.511" endtime="20201110 08:34:19.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.507" endtime="20201110 08:34:19.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.138" endtime="20201110 08:34:19.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.137" endtime="20201110 08:34:19.533"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.542" endtime="20201110 08:34:19.563"></status>
</kw>
<msg timestamp="20201110 08:34:19.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.540" endtime="20201110 08:34:19.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.565" endtime="20201110 08:34:19.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.567" endtime="20201110 08:34:19.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.538" endtime="20201110 08:34:19.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.536" endtime="20201110 08:34:19.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.576" endtime="20201110 08:34:19.864"></status>
</kw>
<msg timestamp="20201110 08:34:19.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.575" endtime="20201110 08:34:19.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022109181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.868" endtime="20201110 08:34:19.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.876" endtime="20201110 08:34:19.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.572" endtime="20201110 08:34:19.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.570" endtime="20201110 08:34:19.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.882" level="INFO">${RESULT} = [{'time': 0.022109181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015962500000000004, 'source_diff': 0.00015962500000000004}, {'time': 0.022299486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:19.879" endtime="20201110 08:34:19.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:19.883" endtime="20201110 08:34:19.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.900" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.899" endtime="20201110 08:34:19.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.903" level="INFO">VALUE: [0.00015962500000000004, 0.00015941700000000197, 0.0001600970000000014, 0.00016029200000000285, 0.00016025000000000067, 0.00015961100000000047, 0.0001602779999999998, 0.00015972200000000103, 0.00015975000000000017, 0.0001593749999999998, 0.000160223000000001, 0.0001597909999999994, 0.00015998700000000032, 0.00015966700000000222, 0.00016005499999999923, 0.0001600840000000013, 0.00016000000000000042, 0.00015947200000000078, 0.00015981899999999855, 0.00015981899999999855, 0.0001597360000000006, 0.00016004099999999966, 0.0001593619999999997, 0.00015984700000000115, 0.00016011100000000097, 0.00015980499999999898, 0.00015994399999999867, 0.00016030499999999948, 0.00016022199999999806, 0.00015966599999999928, 0.00015959800000000038, 0.0001602909999999999, 0.0001593619999999997, 0.00015977699999999984, 0.00015987499999999683, 0.00016019399999999892, 0.00015952800000000253, 0.00015951400000000296, 0.00015941700000000197, 0.00015993099999999857, 0.00016011100000000097, 0.00015984700000000115, 0.00015986100000000072, 0.0001599299999999991, 0.00015993100000000204, 0.00015947300000000025, 0.00015972200000000103, 0.00016005600000000217, 0.0001602360000000011, 0.00015986100000000072]</msg>
<status status="PASS" starttime="20201110 08:34:19.901" endtime="20201110 08:34:19.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.896" endtime="20201110 08:34:19.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.906" endtime="20201110 08:34:19.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.910" endtime="20201110 08:34:19.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.908" endtime="20201110 08:34:19.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.905" endtime="20201110 08:34:19.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.534" endtime="20201110 08:34:19.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.534" endtime="20201110 08:34:19.931"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.939" endtime="20201110 08:34:19.960"></status>
</kw>
<msg timestamp="20201110 08:34:19.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.938" endtime="20201110 08:34:19.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.962" endtime="20201110 08:34:19.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.964" endtime="20201110 08:34:19.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.935" endtime="20201110 08:34:19.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.933" endtime="20201110 08:34:19.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.973" endtime="20201110 08:34:20.259"></status>
</kw>
<msg timestamp="20201110 08:34:20.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.972" endtime="20201110 08:34:20.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.263" endtime="20201110 08:34:20.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.271" endtime="20201110 08:34:20.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.969" endtime="20201110 08:34:20.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.968" endtime="20201110 08:34:20.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.278" level="INFO">${RESULT} = [{'time': 0.022125625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016075000000000117, 'source_diff': 0.00016075000000000117}, {'time': 0.022318944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:20.275" endtime="20201110 08:34:20.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.291" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:20.279" endtime="20201110 08:34:20.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.296" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.295" endtime="20201110 08:34:20.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.298" level="INFO">VALUE: [0.00016075000000000117, 0.00016055499999999973, 0.00016066699999999975, 0.00016072200000000203, 0.00016136100000000222, 0.00016055600000000267, 0.0001612360000000021, 0.00016108299999999937, 0.0001611109999999985, 0.00016066600000000028, 0.0001611109999999985, 0.00016098600000000185, 0.00016084799999999816, 0.00016030499999999948, 0.00016111100000000197, 0.00016062500000000104, 0.0001607230000000015, 0.00016111100000000197, 0.00016086100000000172, 0.00016116700000000025, 0.0001605550000000032, 0.00016043100000000254, 0.00016081900000000302, 0.00016116700000000025, 0.0001604719999999983, 0.0001606810000000028, 0.00016129200000000038, 0.00016099999999999795, 0.00016113899999999765, 0.00016059699999999844, 0.00016123599999999863, 0.000160917, 0.00016043099999999907, 0.00016052800000000006, 0.00016086099999999826, 0.00016097200000000228, 0.00016076400000000074, 0.00016086100000000172, 0.0001610689999999998, 0.00016054199999999963, 0.0001604299999999996, 0.00016076400000000074, 0.0001605970000000019, 0.00016117999999999688, 0.00016108399999999884, 0.00016077699999999737, 0.000160917, 0.00016137499999999833, 0.00016130599999999995, 0.00016116600000000078]</msg>
<status status="PASS" starttime="20201110 08:34:20.297" endtime="20201110 08:34:20.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.292" endtime="20201110 08:34:20.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.302" endtime="20201110 08:34:20.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.305" endtime="20201110 08:34:20.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.304" endtime="20201110 08:34:20.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.300" endtime="20201110 08:34:20.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.931" endtime="20201110 08:34:20.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.931" endtime="20201110 08:34:20.326"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.335" endtime="20201110 08:34:20.356"></status>
</kw>
<msg timestamp="20201110 08:34:20.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.333" endtime="20201110 08:34:20.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.358" endtime="20201110 08:34:20.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.360" endtime="20201110 08:34:20.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.331" endtime="20201110 08:34:20.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.329" endtime="20201110 08:34:20.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.373" endtime="20201110 08:34:20.661"></status>
</kw>
<msg timestamp="20201110 08:34:20.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.370" endtime="20201110 08:34:20.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.666" endtime="20201110 08:34:20.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.674" endtime="20201110 08:34:20.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.366" endtime="20201110 08:34:20.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.363" endtime="20201110 08:34:20.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.680" level="INFO">${RESULT} = [{'time': 0.022138667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016230600000000095, 'source_diff': 0.00016230600000000095}, {'time': 0.022320986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:20.677" endtime="20201110 08:34:20.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.695" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:20.681" endtime="20201110 08:34:20.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.699" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.698" endtime="20201110 08:34:20.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.702" level="INFO">VALUE: [0.00016230600000000095, 0.00016172199999999956, 0.00016144400000000017, 0.00016158299999999987, 0.00016158299999999987, 0.00016154199999999716, 0.00016134699999999919, 0.0001615560000000002, 0.0001621109999999995, 0.00016230600000000095, 0.00016198600000000285, 0.00016154100000000116, 0.0001617919999999974, 0.00016186099999999926, 0.00016159699999999944, 0.0001620690000000008, 0.000161708, 0.00016131999999999952, 0.00016213899999999865, 0.00016181900000000055, 0.00016234700000000019, 0.00016165299999999772, 0.00016195800000000024, 0.00016208300000000037, 0.00016145899999999921, 0.00016162499999999858, 0.00016187499999999883, 0.00016191599999999806, 0.00016141600000000103, 0.00016215300000000168, 0.0001617910000000014, 0.00016172199999999956, 0.00016208300000000037, 0.00016202699999999862, 0.00016215299999999822, 0.00016165199999999824, 0.00016220899999999996, 0.00016159699999999944, 0.00016187499999999883, 0.00016155499999999726, 0.00016234700000000019, 0.00016169400000000042, 0.00016162499999999858, 0.00016148700000000182, 0.00016163900000000161, 0.0001622919999999979, 0.00016176399999999827, 0.00016170899999999946, 0.0001613620000000017, 0.00016184699999999969]</msg>
<status status="PASS" starttime="20201110 08:34:20.701" endtime="20201110 08:34:20.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.696" endtime="20201110 08:34:20.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.706" endtime="20201110 08:34:20.707"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.709" endtime="20201110 08:34:20.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.707" endtime="20201110 08:34:20.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.704" endtime="20201110 08:34:20.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.327" endtime="20201110 08:34:20.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.327" endtime="20201110 08:34:20.730"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.738" endtime="20201110 08:34:20.760"></status>
</kw>
<msg timestamp="20201110 08:34:20.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.737" endtime="20201110 08:34:20.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.761" endtime="20201110 08:34:20.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.764" endtime="20201110 08:34:20.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.734" endtime="20201110 08:34:20.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.732" endtime="20201110 08:34:20.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.773" endtime="20201110 08:34:21.059"></status>
</kw>
<msg timestamp="20201110 08:34:21.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.771" endtime="20201110 08:34:21.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021902903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.063" endtime="20201110 08:34:21.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.072" endtime="20201110 08:34:21.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.769" endtime="20201110 08:34:21.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.767" endtime="20201110 08:34:21.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.078" level="INFO">${RESULT} = [{'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016345799999999827, 'source_diff': 0.00016345799999999827}, {'time': 0.022261653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.075" endtime="20201110 08:34:21.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.079" endtime="20201110 08:34:21.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.096" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.095" endtime="20201110 08:34:21.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.098" level="INFO">VALUE: [0.00016345799999999827, 0.0001625279999999986, 0.0001633340000000011, 0.00016308300000000137, 0.0001633340000000011, 0.00016247299999999978, 0.00016238799999999942, 0.00016240299999999847, 0.00016244400000000117, 0.00016266699999999829, 0.00016308300000000137, 0.00016265300000000218, 0.00016262499999999958, 0.00016295900000000071, 0.00016294400000000167, 0.000162708000000001, 0.00016262499999999958, 0.00016288799999999992, 0.00016323600000000063, 0.00016270799999999752, 0.00016315199999999974, 0.00016332000000000152, 0.000163014000000003, 0.00016299999999999995, 0.00016258400000000034, 0.0001632080000000015, 0.00016301399999999952, 0.00016249999999999945, 0.00016262499999999958, 0.00016240299999999847, 0.00016276399999999927, 0.00016295900000000071, 0.00016248599999999988, 0.000162708000000001, 0.0001625279999999986, 0.00016281999999999755, 0.00016308300000000137, 0.00016279200000000188, 0.00016263899999999915, 0.0001631110000000005, 0.00016277799999999884, 0.00016315299999999922, 0.00016272200000000056, 0.00016283300000000112, 0.00016252700000000259, 0.00016281900000000155, 0.00016272200000000056, 0.00016334700000000119, 0.00016305599999999823, 0.00016265199999999924]</msg>
<status status="PASS" starttime="20201110 08:34:21.097" endtime="20201110 08:34:21.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.092" endtime="20201110 08:34:21.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.102" endtime="20201110 08:34:21.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.106" endtime="20201110 08:34:21.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.104" endtime="20201110 08:34:21.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.100" endtime="20201110 08:34:21.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.731" endtime="20201110 08:34:21.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.730" endtime="20201110 08:34:21.127"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.135" endtime="20201110 08:34:21.157"></status>
</kw>
<msg timestamp="20201110 08:34:21.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.134" endtime="20201110 08:34:21.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.158" endtime="20201110 08:34:21.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.161" endtime="20201110 08:34:21.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.131" endtime="20201110 08:34:21.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.129" endtime="20201110 08:34:21.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.170" endtime="20201110 08:34:21.456"></status>
</kw>
<msg timestamp="20201110 08:34:21.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.168" endtime="20201110 08:34:21.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021969264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022133556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.460" endtime="20201110 08:34:21.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.468" endtime="20201110 08:34:21.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.165" endtime="20201110 08:34:21.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.164" endtime="20201110 08:34:21.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.474" level="INFO">${RESULT} = [{'time': 0.022133556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001642919999999999, 'source_diff': 0.0001642919999999999}, {'time': 0.022320889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.471" endtime="20201110 08:34:21.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.488" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.476" endtime="20201110 08:34:21.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.492" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.491" endtime="20201110 08:34:21.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.494" level="INFO">VALUE: [0.0001642919999999999, 0.0001638890000000004, 0.00016392999999999963, 0.00016358300000000187, 0.00016390299999999997, 0.00016366699999999929, 0.00016377799999999984, 0.00016354200000000263, 0.00016384699999999822, 0.00016409700000000194, 0.000163611000000001, 0.0001635279999999996, 0.00016370900000000146, 0.0001635829999999984, 0.00016387500000000083, 0.0001639439999999992, 0.0001640280000000001, 0.00016426400000000077, 0.00016351400000000002, 0.00016345800000000174, 0.00016365299999999972, 0.00016362500000000058, 0.00016372300000000103, 0.0001640829999999989, 0.0001638890000000004, 0.00016392999999999963, 0.0001639309999999991, 0.00016342999999999913, 0.00016355599999999873, 0.00016377700000000037, 0.00016400000000000095, 0.00016398600000000138, 0.00016344500000000164, 0.0001639020000000005, 0.0001634439999999987, 0.00016345800000000174, 0.00016358400000000134, 0.00016397300000000128, 0.0001639439999999992, 0.00016401400000000052, 0.00016395800000000224, 0.00016362500000000058, 0.0001635279999999996, 0.0001640699999999988, 0.0001642500000000012, 0.00016395899999999825, 0.00016351400000000002, 0.00016433300000000262, 0.00016411099999999804, 0.0001640829999999989]</msg>
<status status="PASS" starttime="20201110 08:34:21.493" endtime="20201110 08:34:21.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.488" endtime="20201110 08:34:21.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.498" endtime="20201110 08:34:21.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.502" endtime="20201110 08:34:21.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.500" endtime="20201110 08:34:21.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.496" endtime="20201110 08:34:21.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.127" endtime="20201110 08:34:21.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.127" endtime="20201110 08:34:21.523"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.531" endtime="20201110 08:34:21.553"></status>
</kw>
<msg timestamp="20201110 08:34:21.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.530" endtime="20201110 08:34:21.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.554" endtime="20201110 08:34:21.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.557" endtime="20201110 08:34:21.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.527" endtime="20201110 08:34:21.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.525" endtime="20201110 08:34:21.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.566" endtime="20201110 08:34:21.852"></status>
</kw>
<msg timestamp="20201110 08:34:21.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:21.564" endtime="20201110 08:34:21.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02192975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:21.856" endtime="20201110 08:34:21.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.864" endtime="20201110 08:34:21.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.561" endtime="20201110 08:34:21.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.560" endtime="20201110 08:34:21.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.871" level="INFO">${RESULT} = [{'time': 0.022094944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016519399999999698, 'source_diff': 0.00016519399999999698}, {'time': 0.022283264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:21.868" endtime="20201110 08:34:21.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.884" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:21.872" endtime="20201110 08:34:21.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.888" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.887" endtime="20201110 08:34:21.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.891" level="INFO">VALUE: [0.00016519399999999698, 0.0001652219999999996, 0.00016481999999999955, 0.0001651249999999986, 0.000165305000000001, 0.00016506900000000033, 0.0001645829999999994, 0.00016476400000000127, 0.00016481900000000008, 0.00016456899999999983, 0.00016519499999999993, 0.00016519400000000045, 0.00016495799999999977, 0.00016526400000000177, 0.0001648340000000026, 0.00016481900000000008, 0.0001645699999999993, 0.00016473600000000213, 0.00016495799999999977, 0.0001643890000000009, 0.00016450000000000145, 0.00016501400000000152, 0.00016480599999999998, 0.00016480599999999998, 0.00016470900000000246, 0.000164305, 0.00016434699999999872, 0.00016451400000000102, 0.00016451400000000102, 0.00016524999999999873, 0.0001649440000000002, 0.00016484800000000216, 0.0001643890000000009, 0.00016465300000000072, 0.0001647639999999978, 0.00016455500000000026, 0.00016450000000000145, 0.00016469399999999995, 0.00016532000000000005, 0.00016519499999999993, 0.0001645699999999993, 0.00016511099999999904, 0.00016494499999999968, 0.00016459799999999844, 0.00016490300000000097, 0.00016506900000000033, 0.00016468000000000038, 0.00016438899999999743, 0.00016445800000000274, 0.00016476299999999833]</msg>
<status status="PASS" starttime="20201110 08:34:21.889" endtime="20201110 08:34:21.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.885" endtime="20201110 08:34:21.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.894" endtime="20201110 08:34:21.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.898" endtime="20201110 08:34:21.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.896" endtime="20201110 08:34:21.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.893" endtime="20201110 08:34:21.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.523" endtime="20201110 08:34:21.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.523" endtime="20201110 08:34:21.919"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.927" endtime="20201110 08:34:21.949"></status>
</kw>
<msg timestamp="20201110 08:34:21.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.926" endtime="20201110 08:34:21.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.950" endtime="20201110 08:34:21.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.953" endtime="20201110 08:34:21.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.923" endtime="20201110 08:34:21.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.921" endtime="20201110 08:34:21.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.962" endtime="20201110 08:34:22.248"></status>
</kw>
<msg timestamp="20201110 08:34:22.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.960" endtime="20201110 08:34:22.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022177569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.252" endtime="20201110 08:34:22.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.261" endtime="20201110 08:34:22.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.958" endtime="20201110 08:34:22.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.956" endtime="20201110 08:34:22.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.267" level="INFO">${RESULT} = [{'time': 0.022177569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016637499999999986, 'source_diff': 0.00016637499999999986}, {'time': 0.022358806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.264" endtime="20201110 08:34:22.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:22.268" endtime="20201110 08:34:22.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.287" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.286" endtime="20201110 08:34:22.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.289" level="INFO">VALUE: [0.00016637499999999986, 0.000165305999999997, 0.00016624999999999973, 0.00016563899999999868, 0.00016611100000000004, 0.0001661660000000023, 0.00016611100000000004, 0.0001661660000000023, 0.00016579199999999794, 0.00016559699999999997, 0.00016577800000000184, 0.00016622199999999712, 0.00016565300000000172, 0.00016611100000000004, 0.00016540300000000147, 0.00016605500000000176, 0.00016543099999999714, 0.0001662639999999993, 0.00016551400000000202, 0.00016551300000000255, 0.00016573599999999966, 0.00016573599999999966, 0.00016565200000000224, 0.00016555600000000073, 0.00016563800000000267, 0.00016615299999999875, 0.00016538899999999843, 0.0001662639999999993, 0.00016611100000000004, 0.00016561099999999954, 0.0001654859999999994, 0.00016594500000000068, 0.00016599999999999948, 0.0001659579999999973, 0.0001658890000000024, 0.00016616699999999832, 0.00016586099999999979, 0.000165611000000003, 0.00016538899999999843, 0.00016594500000000068, 0.0001659310000000011, 0.0001662639999999993, 0.00016611100000000004, 0.0001661799999999984, 0.0001655549999999978, 0.00016619499999999746, 0.00016588899999999893, 0.0001656249999999991, 0.00016586099999999979, 0.0001662500000000032]</msg>
<status status="PASS" starttime="20201110 08:34:22.288" endtime="20201110 08:34:22.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.283" endtime="20201110 08:34:22.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.293" endtime="20201110 08:34:22.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.296" endtime="20201110 08:34:22.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.295" endtime="20201110 08:34:22.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.291" endtime="20201110 08:34:22.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.920" endtime="20201110 08:34:22.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.919" endtime="20201110 08:34:22.317"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.326" endtime="20201110 08:34:22.348"></status>
</kw>
<msg timestamp="20201110 08:34:22.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.324" endtime="20201110 08:34:22.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.349" endtime="20201110 08:34:22.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.352" endtime="20201110 08:34:22.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.322" endtime="20201110 08:34:22.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.320" endtime="20201110 08:34:22.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.361" endtime="20201110 08:34:22.647"></status>
</kw>
<msg timestamp="20201110 08:34:22.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.359" endtime="20201110 08:34:22.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.652" endtime="20201110 08:34:22.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.660" endtime="20201110 08:34:22.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.357" endtime="20201110 08:34:22.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.355" endtime="20201110 08:34:22.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.666" level="INFO">${RESULT} = [{'time': 0.022166181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016694500000000168, 'source_diff': 0.00016694500000000168}, {'time': 0.022351319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:22.663" endtime="20201110 08:34:22.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.679" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:22.667" endtime="20201110 08:34:22.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.684" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.683" endtime="20201110 08:34:22.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.686" level="INFO">VALUE: [0.00016694500000000168, 0.00016704099999999972, 0.00016675000000000023, 0.00016629099999999897, 0.0001672640000000003, 0.0001665549999999988, 0.00016725000000000073, 0.00016711100000000104, 0.00016670799999999805, 0.00016669400000000195, 0.00016704099999999972, 0.0001672220000000016, 0.00016713900000000018, 0.00016677799999999937, 0.00016640199999999952, 0.00016681900000000208, 0.00016649999999999998, 0.00016649999999999998, 0.00016655600000000173, 0.00016668100000000186, 0.00016680499999999904, 0.00016712499999999714, 0.00016645800000000127, 0.0001665549999999988, 0.00016637500000000333, 0.00016704099999999972, 0.00016724999999999726, 0.00016702799999999962, 0.0001665700000000013, 0.00016700000000000048, 0.00016633399999999715, 0.00016708400000000137, 0.0001667639999999998, 0.00016637499999999986, 0.00016644399999999823, 0.00016701400000000005, 0.00016683400000000112, 0.00016683299999999818, 0.00016665300000000272, 0.0001664579999999978, 0.0001667639999999998, 0.00016666599999999934, 0.00016655599999999826, 0.00016695800000000177, 0.00016654099999999922, 0.00016672300000000057, 0.00016649999999999998, 0.00016691699999999907, 0.0001672640000000003, 0.0001667639999999998]</msg>
<status status="PASS" starttime="20201110 08:34:22.685" endtime="20201110 08:34:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.680" endtime="20201110 08:34:22.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.690" endtime="20201110 08:34:22.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.693" endtime="20201110 08:34:22.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.692" endtime="20201110 08:34:22.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.688" endtime="20201110 08:34:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.318" endtime="20201110 08:34:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.318" endtime="20201110 08:34:22.714"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.723" endtime="20201110 08:34:22.744"></status>
</kw>
<msg timestamp="20201110 08:34:22.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.721" endtime="20201110 08:34:22.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.746" endtime="20201110 08:34:22.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.748" endtime="20201110 08:34:22.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.719" endtime="20201110 08:34:22.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.717" endtime="20201110 08:34:22.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.758" endtime="20201110 08:34:23.044"></status>
</kw>
<msg timestamp="20201110 08:34:23.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.756" endtime="20201110 08:34:23.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.048" endtime="20201110 08:34:23.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.057" endtime="20201110 08:34:23.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.753" endtime="20201110 08:34:23.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.752" endtime="20201110 08:34:23.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.063" level="INFO">${RESULT} = [{'time': 0.022125028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001679860000000019, 'source_diff': 0.0001679860000000019}, {'time': 0.022316292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.060" endtime="20201110 08:34:23.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.076" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.064" endtime="20201110 08:34:23.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.081" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.080" endtime="20201110 08:34:23.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.083" level="INFO">VALUE: [0.0001679860000000019, 0.00016754200000000316, 0.00016820799999999955, 0.000167999999999998, 0.00016747300000000132, 0.00016773600000000166, 0.00016743099999999914, 0.00016797199999999887, 0.00016793099999999964, 0.00016766699999999982, 0.00016818099999999989, 0.00016754100000000022, 0.00016822199999999912, 0.00016756899999999936, 0.00016833299999999968, 0.0001675549999999998, 0.00016742999999999966, 0.00016786099999999832, 0.0001678059999999995, 0.00016747199999999837, 0.00016829200000000044, 0.00016734700000000172, 0.00016756899999999936, 0.0001682359999999987, 0.00016813900000000118, 0.00016743099999999914, 0.00016790299999999703, 0.000167305999999999, 0.00016815300000000075, 0.00016826399999999783, 0.00016809700000000247, 0.00016743099999999914, 0.00016755599999999926, 0.0001682359999999987, 0.00016776300000000133, 0.00016816700000000032, 0.0001675969999999985, 0.000167403, 0.00016747299999999785, 0.00016794399999999973, 0.00016766699999999982, 0.00016797199999999887, 0.00016745900000000175, 0.0001678610000000018, 0.00016733299999999868, 0.00016772199999999862, 0.00016808299999999943, 0.00016747300000000132, 0.00016786099999999832, 0.00016808299999999943]</msg>
<status status="PASS" starttime="20201110 08:34:23.082" endtime="20201110 08:34:23.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.077" endtime="20201110 08:34:23.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.087" endtime="20201110 08:34:23.088"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.090" endtime="20201110 08:34:23.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.089" endtime="20201110 08:34:23.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.085" endtime="20201110 08:34:23.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.715" endtime="20201110 08:34:23.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.715" endtime="20201110 08:34:23.111"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.120" endtime="20201110 08:34:23.141"></status>
</kw>
<msg timestamp="20201110 08:34:23.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.118" endtime="20201110 08:34:23.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.143" endtime="20201110 08:34:23.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.145" endtime="20201110 08:34:23.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.115" endtime="20201110 08:34:23.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.113" endtime="20201110 08:34:23.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.154" endtime="20201110 08:34:23.442"></status>
</kw>
<msg timestamp="20201110 08:34:23.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.153" endtime="20201110 08:34:23.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.446" endtime="20201110 08:34:23.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.454" endtime="20201110 08:34:23.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.150" endtime="20201110 08:34:23.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.148" endtime="20201110 08:34:23.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.461" level="INFO">${RESULT} = [{'time': 0.022121944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016915200000000227, 'source_diff': 0.00016915200000000227}, {'time': 0.022308167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.458" endtime="20201110 08:34:23.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.462" endtime="20201110 08:34:23.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.479" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.478" endtime="20201110 08:34:23.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.481" level="INFO">VALUE: [0.00016915200000000227, 0.00016909799999999947, 0.00016923699999999917, 0.00016912499999999914, 0.00016904199999999772, 0.0001683190000000001, 0.0001684999999999985, 0.00016912499999999914, 0.0001688749999999989, 0.00016898599999999944, 0.00016841700000000057, 0.00016895899999999978, 0.00016856999999999983, 0.0001689580000000003, 0.00016936099999999982, 0.00016919400000000098, 0.0001683610000000023, 0.00016924999999999926, 0.00016886099999999932, 0.00016852699999999818, 0.0001689299999999977, 0.00016930499999999807, 0.00016930599999999754, 0.00016926399999999883, 0.00016931899999999764, 0.00016844400000000023, 0.00016882000000000008, 0.00016902799999999815, 0.00016856900000000036, 0.000168999999999999, 0.00016869400000000048, 0.00016911099999999957, 0.00016883399999999965, 0.00016856900000000036, 0.00016881899999999714, 0.00016905600000000076, 0.0001689580000000003, 0.00016915300000000175, 0.00016927800000000187, 0.0001685969999999995, 0.00016905499999999782, 0.00016868100000000039, 0.0001689450000000002, 0.0001691939999999975, 0.0001688619999999988, 0.00016924999999999926, 0.0001689160000000016, 0.00016916700000000132, 0.0001687229999999991, 0.00016886099999999932]</msg>
<status status="PASS" starttime="20201110 08:34:23.480" endtime="20201110 08:34:23.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.475" endtime="20201110 08:34:23.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.485" endtime="20201110 08:34:23.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.488" endtime="20201110 08:34:23.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.487" endtime="20201110 08:34:23.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.483" endtime="20201110 08:34:23.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.112" endtime="20201110 08:34:23.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.111" endtime="20201110 08:34:23.509"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.518" endtime="20201110 08:34:23.539"></status>
</kw>
<msg timestamp="20201110 08:34:23.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.516" endtime="20201110 08:34:23.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.541" endtime="20201110 08:34:23.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.543" endtime="20201110 08:34:23.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.514" endtime="20201110 08:34:23.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.512" endtime="20201110 08:34:23.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.552" endtime="20201110 08:34:23.839"></status>
</kw>
<msg timestamp="20201110 08:34:23.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.551" endtime="20201110 08:34:23.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022125417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.843" endtime="20201110 08:34:23.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.852" endtime="20201110 08:34:23.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.548" endtime="20201110 08:34:23.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.547" endtime="20201110 08:34:23.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.858" level="INFO">${RESULT} = [{'time': 0.022125417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017038899999999996, 'source_diff': 0.00017038899999999996}, {'time': 0.022327667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:23.855" endtime="20201110 08:34:23.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:23.859" endtime="20201110 08:34:23.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.878" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.876" endtime="20201110 08:34:23.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.880" level="INFO">VALUE: [0.00017038899999999996, 0.00017011100000000057, 0.00017036100000000082, 0.00017026399999999983, 0.00017012500000000014, 0.00017001399999999958, 0.00016961100000000007, 0.00016952699999999918, 0.00016974999999999976, 0.00017005600000000176, 0.0001698060000000015, 0.00017030499999999907, 0.00016979100000000247, 0.00016980499999999857, 0.00016940200000000252, 0.0001698190000000016, 0.00016962499999999964, 0.0001702360000000007, 0.0001702360000000007, 0.00017030599999999854, 0.00016984700000000075, 0.00017005499999999882, 0.00016938799999999948, 0.00017005499999999882, 0.00017020800000000155, 0.0001692779999999984, 0.00016936099999999982, 0.00016979200000000194, 0.00016958300000000093, 0.00017030599999999854, 0.000170306000000002, 0.00016948599999999994, 0.00017005600000000176, 0.00016990199999999955, 0.00017011100000000057, 0.00016979200000000194, 0.0001698329999999977, 0.00016961100000000007, 0.00016941599999999862, 0.00017017999999999894, 0.00016961100000000007, 0.00016961100000000007, 0.000169693999999998, 0.00016943100000000114, 0.00016934700000000025, 0.00017017999999999894, 0.00016938899999999896, 0.00017023700000000017, 0.00016974999999999976, 0.00016984700000000075]</msg>
<status status="PASS" starttime="20201110 08:34:23.879" endtime="20201110 08:34:23.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.874" endtime="20201110 08:34:23.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.888" endtime="20201110 08:34:23.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.892" endtime="20201110 08:34:23.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.890" endtime="20201110 08:34:23.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.886" endtime="20201110 08:34:23.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.510" endtime="20201110 08:34:23.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.509" endtime="20201110 08:34:23.912"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.921" endtime="20201110 08:34:23.943"></status>
</kw>
<msg timestamp="20201110 08:34:23.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.920" endtime="20201110 08:34:23.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.944" endtime="20201110 08:34:23.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.947" endtime="20201110 08:34:23.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.917" endtime="20201110 08:34:23.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.915" endtime="20201110 08:34:23.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.956" endtime="20201110 08:34:24.244"></status>
</kw>
<msg timestamp="20201110 08:34:24.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.954" endtime="20201110 08:34:24.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.248" endtime="20201110 08:34:24.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.256" endtime="20201110 08:34:24.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.952" endtime="20201110 08:34:24.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.950" endtime="20201110 08:34:24.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.265" level="INFO">${RESULT} = [{'time': 0.022107556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001705840000000014, 'source_diff': 0.0001705840000000014}, {'time': 0.022310778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.260" endtime="20201110 08:34:24.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.283" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:24.266" endtime="20201110 08:34:24.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.290" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.288" endtime="20201110 08:34:24.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.293" level="INFO">VALUE: [0.0001705840000000014, 0.00017079199999999947, 0.00017083400000000165, 0.00017106999999999886, 0.00017040200000000005, 0.00017118099999999942, 0.00017041599999999962, 0.00017108300000000243, 0.00017105499999999982, 0.0001707360000000012, 0.00017108299999999896, 0.00017077700000000043, 0.0001706520000000003, 0.00017072299999999763, 0.00017136100000000182, 0.00017073599999999772, 0.00017091700000000307, 0.000171000000000001, 0.0001708199999999986, 0.0001706390000000002, 0.0001704580000000018, 0.00017116699999999985, 0.0001706390000000002, 0.000170693999999999, 0.00017079199999999947, 0.0001705000000000005, 0.0001704299999999992, 0.00017120799999999908, 0.0001704580000000018, 0.00017101400000000058, 0.000171000000000001, 0.00017041700000000257, 0.00017040299999999953, 0.00017072200000000162, 0.00017038899999999996, 0.0001705420000000027, 0.00017115300000000028, 0.00017086100000000132, 0.0001705559999999988, 0.00017108399999999843, 0.0001707779999999999, 0.000171000000000001, 0.0001709719999999984, 0.0001712360000000017, 0.00017041700000000257, 0.00017061100000000107, 0.00017047200000000137, 0.00017108299999999896, 0.00017072199999999815, 0.0001710550000000033]</msg>
<status status="PASS" starttime="20201110 08:34:24.291" endtime="20201110 08:34:24.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.284" endtime="20201110 08:34:24.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.297" endtime="20201110 08:34:24.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.300" endtime="20201110 08:34:24.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.299" endtime="20201110 08:34:24.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.295" endtime="20201110 08:34:24.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.913" endtime="20201110 08:34:24.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.913" endtime="20201110 08:34:24.321"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.330" endtime="20201110 08:34:24.352"></status>
</kw>
<msg timestamp="20201110 08:34:24.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.329" endtime="20201110 08:34:24.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.354" endtime="20201110 08:34:24.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.356" endtime="20201110 08:34:24.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.326" endtime="20201110 08:34:24.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.324" endtime="20201110 08:34:24.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.365" endtime="20201110 08:34:24.654"></status>
</kw>
<msg timestamp="20201110 08:34:24.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.364" endtime="20201110 08:34:24.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.658" endtime="20201110 08:34:24.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.666" endtime="20201110 08:34:24.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.361" endtime="20201110 08:34:24.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.359" endtime="20201110 08:34:24.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.673" level="INFO">${RESULT} = [{'time': 0.022485167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017154200000000022, 'source_diff': 0.00017154200000000022}, {'time': 0.022678431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:24.670" endtime="20201110 08:34:24.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.687" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:24.674" endtime="20201110 08:34:24.688"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.693" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.692" endtime="20201110 08:34:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.695" level="INFO">VALUE: [0.00017154200000000022, 0.00017204199999999725, 0.00017168000000000044, 0.0001714170000000001, 0.00017131899999999964, 0.00017195799999999983, 0.00017222200000000312, 0.0001714170000000001, 0.00017144400000000323, 0.0001713889999999975, 0.00017213799999999876, 0.00017229200000000097, 0.00017143099999999967, 0.00017197200000000287, 0.00017211100000000257, 0.0001717499999999983, 0.00017152799999999718, 0.0001713889999999975, 0.00017204200000000072, 0.00017212500000000214, 0.0001715559999999998, 0.00017148600000000194, 0.00017130500000000007, 0.00017191600000000112, 0.00017193100000000017, 0.00017202800000000115, 0.00017168099999999992, 0.0001721940000000005, 0.00017127799999999693, 0.0001715689999999999, 0.0001722360000000027, 0.00017220800000000008, 0.00017198600000000244, 0.0001716109999999986, 0.0001719719999999994, 0.00017166700000000035, 0.0001718049999999971, 0.0001716390000000012, 0.00017216600000000137, 0.00017226399999999836, 0.00017143099999999967, 0.00017191699999999713, 0.00017133399999999868, 0.0001714719999999989, 0.00017152700000000118, 0.00017177699999999796, 0.0001717499999999983, 0.00017158399999999546, 0.00017209800000000247, 0.00017166700000000035]</msg>
<status status="PASS" starttime="20201110 08:34:24.694" endtime="20201110 08:34:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.688" endtime="20201110 08:34:24.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.699" endtime="20201110 08:34:24.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.702" endtime="20201110 08:34:24.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.701" endtime="20201110 08:34:24.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.697" endtime="20201110 08:34:24.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.322" endtime="20201110 08:34:24.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.322" endtime="20201110 08:34:24.723"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.732" endtime="20201110 08:34:24.754"></status>
</kw>
<msg timestamp="20201110 08:34:24.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.731" endtime="20201110 08:34:24.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.755" endtime="20201110 08:34:24.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.758" endtime="20201110 08:34:24.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.728" endtime="20201110 08:34:24.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.726" endtime="20201110 08:34:24.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.767" endtime="20201110 08:34:25.054"></status>
</kw>
<msg timestamp="20201110 08:34:25.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.766" endtime="20201110 08:34:25.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022169861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.059" endtime="20201110 08:34:25.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.067" endtime="20201110 08:34:25.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.763" endtime="20201110 08:34:25.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.761" endtime="20201110 08:34:25.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.073" level="INFO">${RESULT} = [{'time': 0.022342625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017276400000000233, 'source_diff': 0.00017276400000000233}, {'time': 0.022540861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:25.070" endtime="20201110 08:34:25.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.086" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.074" endtime="20201110 08:34:25.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.091" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.090" endtime="20201110 08:34:25.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.093" level="INFO">VALUE: [0.00017276400000000233, 0.00017295799999999736, 0.00017236099999999935, 0.00017263899999999874, 0.00017262499999999917, 0.00017240299999999806, 0.00017275000000000276, 0.00017229200000000097, 0.00017258300000000046, 0.0001729720000000004, 0.00017290300000000203, 0.00017263799999999926, 0.00017270800000000058, 0.00017262499999999917, 0.00017237499999999892, 0.00017240300000000153, 0.00017286099999999985, 0.00017265300000000178, 0.00017323600000000022, 0.00017277699999999896, 0.00017284799999999975, 0.00017242999999999772, 0.0001722780000000014, 0.00017295799999999736, 0.00017245800000000033, 0.00017241599999999815, 0.00017276399999999886, 0.000172694000000001, 0.0001731110000000001, 0.00017231899999999717, 0.00017263899999999874, 0.00017277799999999843, 0.0001726529999999983, 0.00017313899999999924, 0.0001731110000000001, 0.00017266699999999788, 0.00017266700000000135, 0.00017298599999999997, 0.0001725139999999986, 0.0001728469999999968, 0.00017306899999999792, 0.0001733200000000011, 0.00017263899999999874, 0.00017306899999999792, 0.00017295800000000083, 0.00017237499999999892, 0.00017279099999999853, 0.0001730139999999991, 0.00017308300000000443, 0.00017322200000000065]</msg>
<status status="PASS" starttime="20201110 08:34:25.092" endtime="20201110 08:34:25.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.087" endtime="20201110 08:34:25.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.097" endtime="20201110 08:34:25.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.100" endtime="20201110 08:34:25.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.099" endtime="20201110 08:34:25.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.095" endtime="20201110 08:34:25.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.724" endtime="20201110 08:34:25.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.724" endtime="20201110 08:34:25.121"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.130" endtime="20201110 08:34:25.152"></status>
</kw>
<msg timestamp="20201110 08:34:25.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.128" endtime="20201110 08:34:25.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.153" endtime="20201110 08:34:25.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.156" endtime="20201110 08:34:25.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.126" endtime="20201110 08:34:25.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.124" endtime="20201110 08:34:25.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.165" endtime="20201110 08:34:25.452"></status>
</kw>
<msg timestamp="20201110 08:34:25.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:25.163" endtime="20201110 08:34:25.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221525, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:25.456" endtime="20201110 08:34:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.465" endtime="20201110 08:34:25.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.161" endtime="20201110 08:34:25.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.159" endtime="20201110 08:34:25.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.471" level="INFO">${RESULT} = [{'time': 0.0221525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001740140000000001, 'source_diff': 0.0001740140000000001}, {'time': 0.022343764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:25.468" endtime="20201110 08:34:25.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.486" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.472" endtime="20201110 08:34:25.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.490" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.489" endtime="20201110 08:34:25.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.493" level="INFO">VALUE: [0.0001740140000000001, 0.00017344499999999777, 0.00017407000000000186, 0.00017363899999999974, 0.0001739439999999988, 0.00017404099999999978, 0.00017330600000000154, 0.0001736529999999993, 0.00017334700000000078, 0.00017345800000000133, 0.0001734439999999983, 0.00017340299999999906, 0.0001741249999999972, 0.0001739439999999988, 0.0001742500000000008, 0.00017352799999999918, 0.00017400000000000054, 0.00017348600000000047, 0.00017365199999999983, 0.00017344499999999777, 0.00017366699999999888, 0.00017341699999999863, 0.0001733469999999973, 0.00017363899999999974, 0.0001736390000000032, 0.00017334800000000025, 0.00017358300000000146, 0.00017408399999999796, 0.00017345800000000133, 0.0001740140000000001, 0.00017386099999999738, 0.00017352800000000265, 0.00017354199999999875, 0.0001742500000000008, 0.00017359700000000103, 0.00017363899999999974, 0.00017359700000000103, 0.0001732919999999985, 0.0001733889999999995, 0.0001737370000000002, 0.00017350000000000004, 0.00017373599999999725, 0.00017405500000000282, 0.0001734590000000008, 0.0001737089999999976, 0.0001736529999999993, 0.0001733469999999973, 0.00017426300000000436, 0.00017422199999999471, 0.00017422199999999471]</msg>
<status status="PASS" starttime="20201110 08:34:25.491" endtime="20201110 08:34:25.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.487" endtime="20201110 08:34:25.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.496" endtime="20201110 08:34:25.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.500" endtime="20201110 08:34:25.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.498" endtime="20201110 08:34:25.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.495" endtime="20201110 08:34:25.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.122" endtime="20201110 08:34:25.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.122" endtime="20201110 08:34:25.521"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.529" endtime="20201110 08:34:25.551"></status>
</kw>
<msg timestamp="20201110 08:34:25.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.528" endtime="20201110 08:34:25.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.553" endtime="20201110 08:34:25.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.555" endtime="20201110 08:34:25.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.525" endtime="20201110 08:34:25.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.523" endtime="20201110 08:34:25.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.564" endtime="20201110 08:34:25.851"></status>
</kw>
<msg timestamp="20201110 08:34:25.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.563" endtime="20201110 08:34:25.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.855" endtime="20201110 08:34:25.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.863" endtime="20201110 08:34:25.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.560" endtime="20201110 08:34:25.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.558" endtime="20201110 08:34:25.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.870" level="INFO">${RESULT} = [{'time': 0.022129806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017508399999999896, 'source_diff': 0.00017508399999999896}, {'time': 0.022327028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:25.867" endtime="20201110 08:34:25.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.883" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:25.871" endtime="20201110 08:34:25.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.888" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.887" endtime="20201110 08:34:25.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.890" level="INFO">VALUE: [0.00017508399999999896, 0.00017474999999999782, 0.00017527800000000093, 0.00017477800000000043, 0.00017455499999999985, 0.0001746950000000025, 0.00017481899999999967, 0.0001744590000000018, 0.0001743200000000021, 0.00017481999999999914, 0.0001743339999999982, 0.00017445800000000233, 0.00017487500000000142, 0.00017466699999999988, 0.00017481899999999967, 0.00017494400000000326, 0.0001747500000000013, 0.0001749439999999998, 0.00017438899999999702, 0.00017504100000000078, 0.00017509700000000253, 0.000174889000000001, 0.0001745699999999989, 0.0001749859999999985, 0.00017462500000000117, 0.00017520799999999961, 0.00017527799999999746, 0.00017523599999999875, 0.00017518099999999995, 0.00017456899999999942, 0.00017520799999999961, 0.00017455599999999932, 0.00017440200000000058, 0.00017529199999999703, 0.00017476400000000086, 0.00017445800000000233, 0.00017519400000000004, 0.00017512500000000167, 0.00017481999999999914, 0.00017511099999999863, 0.00017468099999999945, 0.00017476400000000086, 0.00017488799999999805, 0.00017447199999999843, 0.0001743469999999983, 0.00017500000000000154, 0.00017470799999999911, 0.00017504200000000025, 0.00017476400000000086, 0.0001747370000000012]</msg>
<status status="PASS" starttime="20201110 08:34:25.889" endtime="20201110 08:34:25.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.884" endtime="20201110 08:34:25.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.894" endtime="20201110 08:34:25.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.897" endtime="20201110 08:34:25.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.895" endtime="20201110 08:34:25.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.892" endtime="20201110 08:34:25.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.522" endtime="20201110 08:34:25.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.521" endtime="20201110 08:34:25.918"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.927" endtime="20201110 08:34:25.948"></status>
</kw>
<msg timestamp="20201110 08:34:25.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.925" endtime="20201110 08:34:25.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.950" endtime="20201110 08:34:25.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.952" endtime="20201110 08:34:25.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.922" endtime="20201110 08:34:25.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.920" endtime="20201110 08:34:25.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.962" endtime="20201110 08:34:26.249"></status>
</kw>
<msg timestamp="20201110 08:34:26.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.960" endtime="20201110 08:34:26.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.253" endtime="20201110 08:34:26.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.262" endtime="20201110 08:34:26.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.957" endtime="20201110 08:34:26.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.956" endtime="20201110 08:34:26.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.268" level="INFO">${RESULT} = [{'time': 0.022175542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017624999999999932, 'source_diff': 0.00017624999999999932}, {'time': 0.022371875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:26.265" endtime="20201110 08:34:26.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.281" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:26.269" endtime="20201110 08:34:26.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.286" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.285" endtime="20201110 08:34:26.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.288" level="INFO">VALUE: [0.00017624999999999932, 0.0001754310000000002, 0.00017570800000000011, 0.00017545799999999986, 0.00017565199999999836, 0.0001757639999999984, 0.0001753050000000006, 0.000175583, 0.00017587499999999895, 0.0001760270000000022, 0.00017547199999999943, 0.00017583300000000024, 0.00017545799999999986, 0.00017620800000000061, 0.00017572199999999968, 0.00017598600000000297, 0.0001757630000000024, 0.00017611099999999963, 0.00017569399999999707, 0.0001754440000000003, 0.00017619500000000052, 0.0001755699999999999, 0.00017569400000000054, 0.00017613899999999877, 0.0001761249999999992, 0.00017531900000000017, 0.0001753339999999992, 0.0001760140000000021, 0.00017540300000000106, 0.00017613899999999877, 0.00017613900000000224, 0.00017551300000000214, 0.00017563900000000174, 0.00017602699999999874, 0.0001759440000000008, 0.00017545799999999986, 0.00017545899999999934, 0.00017552800000000118, 0.00017602799999999821, 0.00017570800000000011, 0.0001760140000000021, 0.00017616599999999843, 0.00017547199999999943, 0.00017590199999999862, 0.000175889000000002, 0.00017613900000000224, 0.00017611099999999963, 0.0001759720000000034, 0.00017581900000000067, 0.00017545800000000333]</msg>
<status status="PASS" starttime="20201110 08:34:26.287" endtime="20201110 08:34:26.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.282" endtime="20201110 08:34:26.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.292" endtime="20201110 08:34:26.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.295" endtime="20201110 08:34:26.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.294" endtime="20201110 08:34:26.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.290" endtime="20201110 08:34:26.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.919" endtime="20201110 08:34:26.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.918" endtime="20201110 08:34:26.316"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.325" endtime="20201110 08:34:26.348"></status>
</kw>
<msg timestamp="20201110 08:34:26.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.323" endtime="20201110 08:34:26.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.349" endtime="20201110 08:34:26.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.352" endtime="20201110 08:34:26.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.321" endtime="20201110 08:34:26.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.319" endtime="20201110 08:34:26.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.361" endtime="20201110 08:34:26.648"></status>
</kw>
<msg timestamp="20201110 08:34:26.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.359" endtime="20201110 08:34:26.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.652" endtime="20201110 08:34:26.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.661" endtime="20201110 08:34:26.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.357" endtime="20201110 08:34:26.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.355" endtime="20201110 08:34:26.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.667" level="INFO">${RESULT} = [{'time': 0.022646181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001771530000000028, 'source_diff': 0.0001771530000000028}, {'time': 0.022852306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.664" endtime="20201110 08:34:26.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.680" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:26.668" endtime="20201110 08:34:26.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.685" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.684" endtime="20201110 08:34:26.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.687" level="INFO">VALUE: [0.0001771530000000028, 0.0001771250000000002, 0.0001770830000000015, 0.00017715299999999934, 0.00017688899999999952, 0.0001769029999999991, 0.00017672200000000068, 0.00017663899999999927, 0.00017659700000000056, 0.00017697200000000093, 0.00017668000000000197, 0.00017633300000000074, 0.0001771669999999989, 0.00017636099999999988, 0.00017690199999999962, 0.00017632000000000064, 0.00017677799999999896, 0.00017654200000000175, 0.00017672300000000016, 0.00017666599999999893, 0.00017631900000000117, 0.00017672200000000068, 0.00017719499999999805, 0.00017633300000000074, 0.0001763470000000003, 0.00017681900000000167, 0.00017669500000000102, 0.0001771250000000002, 0.0001771250000000002, 0.00017633299999999727, 0.00017715299999999934, 0.00017704199999999878, 0.0001767090000000006, 0.00017651399999999914, 0.00017658299999999752, 0.0001771669999999989, 0.00017626299999999942, 0.00017661200000000307, 0.0001768340000000007, 0.00017651399999999914, 0.00017682000000000114, 0.00017658400000000046, 0.0001766530000000023, 0.0001770830000000015, 0.0001767779999999955, 0.00017687499999999995, 0.00017677800000000243, 0.00017659700000000056, 0.0001764449999999973, 0.00017665299999999884]</msg>
<status status="PASS" starttime="20201110 08:34:26.686" endtime="20201110 08:34:26.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.681" endtime="20201110 08:34:26.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.691" endtime="20201110 08:34:26.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.694" endtime="20201110 08:34:26.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.693" endtime="20201110 08:34:26.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.689" endtime="20201110 08:34:26.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.317" endtime="20201110 08:34:26.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.317" endtime="20201110 08:34:26.715"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.724" endtime="20201110 08:34:26.746"></status>
</kw>
<msg timestamp="20201110 08:34:26.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.722" endtime="20201110 08:34:26.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.747" endtime="20201110 08:34:26.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.750" endtime="20201110 08:34:26.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.720" endtime="20201110 08:34:26.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.718" endtime="20201110 08:34:26.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.759" endtime="20201110 08:34:27.044"></status>
</kw>
<msg timestamp="20201110 08:34:27.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.757" endtime="20201110 08:34:27.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.049" endtime="20201110 08:34:27.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.057" endtime="20201110 08:34:27.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.754" endtime="20201110 08:34:27.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.753" endtime="20201110 08:34:27.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.063" level="INFO">${RESULT} = [{'time': 0.022027486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017806899999999945, 'source_diff': 0.00017806899999999945}, {'time': 0.022226778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:27.060" endtime="20201110 08:34:27.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.078" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.064" endtime="20201110 08:34:27.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.082" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.081" endtime="20201110 08:34:27.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.085" level="INFO">VALUE: [0.00017806899999999945, 0.00017741699999999916, 0.00017783299999999877, 0.00017731900000000217, 0.00017744500000000177, 0.00017773600000000125, 0.0001777640000000004, 0.00017761100000000113, 0.00017813900000000077, 0.00017750000000000057, 0.0001776799999999995, 0.00017733300000000174, 0.00017780499999999963, 0.00017737500000000045, 0.00017738900000000002, 0.00017774999999999735, 0.00017755499999999938, 0.00017744399999999882, 0.00017790200000000062, 0.00017805599999999935, 0.00017819399999999957, 0.0001773470000000013, 0.00017727799999999946, 0.00017820799999999914, 0.00017815300000000034, 0.00017790200000000062, 0.00017820899999999862, 0.00017775000000000082, 0.0001774579999999984, 0.00017765200000000037, 0.0001772639999999999, 0.0001774440000000023, 0.00017748700000000048, 0.0001774579999999984, 0.00017755599999999885, 0.00017808299999999902, 0.00017825000000000132, 0.00017825000000000132, 0.0001774029999999996, 0.00017816600000000044, 0.00017755599999999885, 0.00017729199999999903, 0.00017733299999999827, 0.00017813900000000077, 0.00017801400000000064, 0.00017732000000000164, 0.00017831999999999917, 0.00017763799999999733, 0.0001780140000000041, 0.00017818100000000642]</msg>
<status status="PASS" starttime="20201110 08:34:27.083" endtime="20201110 08:34:27.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.079" endtime="20201110 08:34:27.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.088" endtime="20201110 08:34:27.090"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.092" endtime="20201110 08:34:27.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.090" endtime="20201110 08:34:27.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.087" endtime="20201110 08:34:27.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.716" endtime="20201110 08:34:27.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.716" endtime="20201110 08:34:27.113"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.121" endtime="20201110 08:34:27.144"></status>
</kw>
<msg timestamp="20201110 08:34:27.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.120" endtime="20201110 08:34:27.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.145" endtime="20201110 08:34:27.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.148" endtime="20201110 08:34:27.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.117" endtime="20201110 08:34:27.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.115" endtime="20201110 08:34:27.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.157" endtime="20201110 08:34:27.442"></status>
</kw>
<msg timestamp="20201110 08:34:27.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.155" endtime="20201110 08:34:27.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022088181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.447" endtime="20201110 08:34:27.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.455" endtime="20201110 08:34:27.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.152" endtime="20201110 08:34:27.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.151" endtime="20201110 08:34:27.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.461" level="INFO">${RESULT} = [{'time': 0.022267569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017938800000000255, 'source_diff': 0.00017938800000000255}, {'time': 0.022461708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:27.458" endtime="20201110 08:34:27.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.474" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.462" endtime="20201110 08:34:27.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.479" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.478" endtime="20201110 08:34:27.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.481" level="INFO">VALUE: [0.00017938800000000255, 0.00017879100000000106, 0.00017851399999999767, 0.00017891700000000066, 0.00017911100000000263, 0.0001790969999999996, 0.00017922199999999971, 0.0001785410000000008, 0.00017870899999999912, 0.0001790969999999996, 0.00017912499999999873, 0.00017844399999999982, 0.0001783470000000023, 0.00017881999999999967, 0.00017837500000000145, 0.0001783609999999984, 0.00017841700000000016, 0.00017837500000000145, 0.00017848599999999853, 0.00017841600000000069, 0.00017827800000000046, 0.0001789860000000025, 0.00017836100000000188, 0.0001784579999999994, 0.00017865299999999737, 0.000178486000000002, 0.00017906999999999992, 0.0001788609999999989, 0.00017904099999999784, 0.00017820799999999914, 0.00017854099999999734, 0.0001788609999999989, 0.00017923600000000275, 0.0001787779999999975, 0.00017847199999999896, 0.00017898599999999903, 0.00017911099999999916, 0.0001789860000000025, 0.00017874999999999835, 0.0001782909999999971, 0.0001783609999999984, 0.00017905600000000035, 0.00017905600000000035, 0.00017915300000000134, 0.0001792909999999981, 0.00017887500000000195, 0.0001784999999999981, 0.00017865300000000084, 0.00017905500000000435, 0.00017874999999999835]</msg>
<status status="PASS" starttime="20201110 08:34:27.480" endtime="20201110 08:34:27.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.475" endtime="20201110 08:34:27.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.485" endtime="20201110 08:34:27.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.488" endtime="20201110 08:34:27.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.487" endtime="20201110 08:34:27.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.483" endtime="20201110 08:34:27.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.114" endtime="20201110 08:34:27.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.113" endtime="20201110 08:34:27.509"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.518" endtime="20201110 08:34:27.540"></status>
</kw>
<msg timestamp="20201110 08:34:27.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.517" endtime="20201110 08:34:27.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.542" endtime="20201110 08:34:27.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.544" endtime="20201110 08:34:27.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.514" endtime="20201110 08:34:27.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.512" endtime="20201110 08:34:27.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.553" endtime="20201110 08:34:27.840"></status>
</kw>
<msg timestamp="20201110 08:34:27.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.552" endtime="20201110 08:34:27.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022312083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.844" endtime="20201110 08:34:27.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.853" endtime="20201110 08:34:27.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.549" endtime="20201110 08:34:27.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.547" endtime="20201110 08:34:27.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.859" level="INFO">${RESULT} = [{'time': 0.022312083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001795970000000001, 'source_diff': 0.0001795970000000001}, {'time': 0.022516347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.856" endtime="20201110 08:34:27.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:27.860" endtime="20201110 08:34:27.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.877" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.876" endtime="20201110 08:34:27.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.880" level="INFO">VALUE: [0.0001795970000000001, 0.00018022200000000071, 0.00017970800000000065, 0.00018002800000000221, 0.0001801389999999993, 0.00017970800000000065, 0.0001798060000000011, 0.00017929200000000103, 0.00017948599999999953, 0.00018002799999999874, 0.00017973599999999978, 0.000179584, 0.00018026399999999942, 0.00018023600000000028, 0.0001796389999999988, 0.00017965299999999837, 0.00017988799999999958, 0.00017937499999999898, 0.00018008300000000102, 0.00018020799999999768, 0.0001795970000000001, 0.0001797640000000024, 0.00018019500000000105, 0.00017963900000000227, 0.00018013900000000277, 0.0001793479999999993, 0.00017951399999999867, 0.0001794030000000016, 0.00018019500000000105, 0.00017969400000000108, 0.0001798190000000012, 0.00017933300000000027, 0.00017993100000000123, 0.00017976399999999892, 0.00017952800000000171, 0.00017947199999999996, 0.0001798609999999999, 0.00017966599999999847, 0.00017956900000000095, 0.00018027800000000246, 0.00017958300000000052, 0.00017936100000000288, 0.00017945899999999987, 0.00018020800000000115, 0.0001793609999999994, 0.00017977800000000543, 0.0001800830000000045, 0.00017968100000000098, 0.0001793470000000033, 0.00018031900000000517]</msg>
<status status="PASS" starttime="20201110 08:34:27.878" endtime="20201110 08:34:27.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.873" endtime="20201110 08:34:27.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.883" endtime="20201110 08:34:27.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.887" endtime="20201110 08:34:27.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.885" endtime="20201110 08:34:27.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.881" endtime="20201110 08:34:27.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.510" endtime="20201110 08:34:27.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.510" endtime="20201110 08:34:27.907"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.916" endtime="20201110 08:34:27.939"></status>
</kw>
<msg timestamp="20201110 08:34:27.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.914" endtime="20201110 08:34:27.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.940" endtime="20201110 08:34:27.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.942" endtime="20201110 08:34:27.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.912" endtime="20201110 08:34:27.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.910" endtime="20201110 08:34:27.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.951" endtime="20201110 08:34:28.238"></status>
</kw>
<msg timestamp="20201110 08:34:28.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.950" endtime="20201110 08:34:28.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022160667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.242" endtime="20201110 08:34:28.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.250" endtime="20201110 08:34:28.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.947" endtime="20201110 08:34:28.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.946" endtime="20201110 08:34:28.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.257" level="INFO">${RESULT} = [{'time': 0.022341708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018104099999999984, 'source_diff': 0.00018104099999999984}, {'time': 0.022541972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.254" endtime="20201110 08:34:28.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.270" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:28.258" endtime="20201110 08:34:28.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.275" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.274" endtime="20201110 08:34:28.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.277" level="INFO">VALUE: [0.00018104099999999984, 0.000180277999999999, 0.0001807779999999995, 0.00018066599999999947, 0.00018083300000000177, 0.0001806389999999998, 0.00018038899999999955, 0.00018120800000000215, 0.00018065300000000284, 0.00018030500000000213, 0.0001804580000000014, 0.00018123600000000128, 0.00018120799999999868, 0.00018081899999999873, 0.00018120899999999815, 0.0001806519999999999, 0.00018122200000000172, 0.0001803190000000017, 0.0001810970000000016, 0.00018069500000000155, 0.00018080500000000263, 0.00018069500000000155, 0.0001811390000000003, 0.00018080599999999863, 0.00018044399999999836, 0.00018026399999999942, 0.00018041599999999922, 0.00018119499999999858, 0.00018122199999999825, 0.00018119500000000205, 0.00018076399999999992, 0.0001811390000000003, 0.0001808329999999983, 0.00018104099999999984, 0.00018075000000000035, 0.00018105599999999888, 0.00018062499999999676, 0.00018055500000000238, 0.0001804719999999975, 0.00018026399999999942, 0.0001805130000000002, 0.00018083400000000124, 0.00018111100000000116, 0.0001804589999999974, 0.0001810000000000006, 0.00018101400000000017, 0.00018041599999999575, 0.00018051399999999967, 0.00018062499999999676, 0.00018075000000000035]</msg>
<status status="PASS" starttime="20201110 08:34:28.276" endtime="20201110 08:34:28.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.271" endtime="20201110 08:34:28.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.281" endtime="20201110 08:34:28.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.284" endtime="20201110 08:34:28.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.283" endtime="20201110 08:34:28.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.279" endtime="20201110 08:34:28.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.908" endtime="20201110 08:34:28.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.908" endtime="20201110 08:34:28.305"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.314" endtime="20201110 08:34:28.336"></status>
</kw>
<msg timestamp="20201110 08:34:28.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.312" endtime="20201110 08:34:28.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.338" endtime="20201110 08:34:28.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.340" endtime="20201110 08:34:28.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.310" endtime="20201110 08:34:28.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.308" endtime="20201110 08:34:28.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.349" endtime="20201110 08:34:28.636"></status>
</kw>
<msg timestamp="20201110 08:34:28.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.348" endtime="20201110 08:34:28.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022143278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.640" endtime="20201110 08:34:28.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.649" endtime="20201110 08:34:28.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.345" endtime="20201110 08:34:28.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.343" endtime="20201110 08:34:28.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.655" level="INFO">${RESULT} = [{'time': 0.022143278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018172199999999875, 'source_diff': 0.00018172199999999875}, {'time': 0.022340569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:28.652" endtime="20201110 08:34:28.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.670" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:28.656" endtime="20201110 08:34:28.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.674" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.673" endtime="20201110 08:34:28.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.677" level="INFO">VALUE: [0.00018172199999999875, 0.00018197200000000247, 0.00018201400000000117, 0.00018177699999999755, 0.0001820979999999986, 0.00018220899999999915, 0.0001816520000000009, 0.0001822230000000022, 0.00018126300000000095, 0.00018140300000000012, 0.0001815979999999981, 0.00018202800000000074, 0.00018172200000000222, 0.00018194399999999986, 0.00018175000000000135, 0.00018190300000000062, 0.0001816109999999982, 0.00018145799999999893, 0.00018172200000000222, 0.0001821940000000001, 0.00018194399999999986, 0.0001816939999999996, 0.00018158299999999905, 0.0001813199999999987, 0.00018176399999999746, 0.00018186099999999844, 0.00018177700000000102, 0.00018201400000000117, 0.00018138900000000055, 0.00018157000000000242, 0.00018134799999999784, 0.00018190300000000062, 0.00018166699999999994, 0.000181278, 0.000182181, 0.00018148600000000153, 0.00018201400000000117, 0.000181874999999998, 0.00018180500000000016, 0.00018204200000000031, 0.0001814719999999985, 0.00018161100000000166, 0.0001816939999999996, 0.00018213899999999783, 0.0001813610000000014, 0.00018170899999999865, 0.00018151400000000067, 0.0001813749999999975, 0.00018225000000000185, 0.00018213899999999783]</msg>
<status status="PASS" starttime="20201110 08:34:28.675" endtime="20201110 08:34:28.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.671" endtime="20201110 08:34:28.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.680" endtime="20201110 08:34:28.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.684" endtime="20201110 08:34:28.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.682" endtime="20201110 08:34:28.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.679" endtime="20201110 08:34:28.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.306" endtime="20201110 08:34:28.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.306" endtime="20201110 08:34:28.704"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.713" endtime="20201110 08:34:28.735"></status>
</kw>
<msg timestamp="20201110 08:34:28.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.712" endtime="20201110 08:34:28.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.737" endtime="20201110 08:34:28.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.739" endtime="20201110 08:34:28.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.709" endtime="20201110 08:34:28.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.707" endtime="20201110 08:34:28.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.748" endtime="20201110 08:34:29.036"></status>
</kw>
<msg timestamp="20201110 08:34:29.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.747" endtime="20201110 08:34:29.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021949069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.040" endtime="20201110 08:34:29.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.048" endtime="20201110 08:34:29.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.744" endtime="20201110 08:34:29.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.742" endtime="20201110 08:34:29.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.054" level="INFO">${RESULT} = [{'time': 0.022131708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018263899999999833, 'source_diff': 0.00018263899999999833}, {'time': 0.022333986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.051" endtime="20201110 08:34:29.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.055" endtime="20201110 08:34:29.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.072" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.071" endtime="20201110 08:34:29.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.074" level="INFO">VALUE: [0.00018263899999999833, 0.00018323599999999982, 0.000182972, 0.00018259699999999962, 0.00018276399999999846, 0.00018231900000000023, 0.0001825139999999982, 0.00018309700000000012, 0.000182278000000001, 0.00018265300000000137, 0.0001822910000000011, 0.00018243000000000079, 0.00018276399999999846, 0.00018270899999999965, 0.00018304200000000131, 0.00018298599999999957, 0.00018315300000000187, 0.0001831109999999997, 0.0001830139999999987, 0.00018301400000000217, 0.00018230600000000013, 0.00018241600000000122, 0.00018266700000000094, 0.00018272199999999975, 0.00018247299999999897, 0.00018245799999999993, 0.00018240200000000165, 0.00018312499999999926, 0.0001824719999999995, 0.00018316700000000144, 0.00018230500000000066, 0.00018320800000000068, 0.0001826109999999992, 0.00018254200000000081, 0.00018304199999999785, 0.00018280500000000116, 0.0001825970000000031, 0.00018308300000000055, 0.00018274999999999889, 0.00018272199999999975, 0.0001826810000000005, 0.0001830550000000014, 0.0001831109999999997, 0.00018236099999999894, 0.00018234699999999937, 0.00018224999999999839, 0.0001828330000000003, 0.00018309700000000012, 0.0001828330000000003, 0.00018240199999999818]</msg>
<status status="PASS" starttime="20201110 08:34:29.073" endtime="20201110 08:34:29.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.068" endtime="20201110 08:34:29.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.078" endtime="20201110 08:34:29.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.081" endtime="20201110 08:34:29.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.080" endtime="20201110 08:34:29.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.076" endtime="20201110 08:34:29.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.705" endtime="20201110 08:34:29.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.705" endtime="20201110 08:34:29.102"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.111" endtime="20201110 08:34:29.133"></status>
</kw>
<msg timestamp="20201110 08:34:29.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.109" endtime="20201110 08:34:29.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.135" endtime="20201110 08:34:29.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.137" endtime="20201110 08:34:29.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.107" endtime="20201110 08:34:29.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.105" endtime="20201110 08:34:29.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.146" endtime="20201110 08:34:29.433"></status>
</kw>
<msg timestamp="20201110 08:34:29.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.145" endtime="20201110 08:34:29.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022075264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.438" endtime="20201110 08:34:29.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.446" endtime="20201110 08:34:29.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.142" endtime="20201110 08:34:29.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.140" endtime="20201110 08:34:29.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.452" level="INFO">${RESULT} = [{'time': 0.022075264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018379200000000206, 'source_diff': 0.00018379200000000206}, {'time': 0.0222815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.449" endtime="20201110 08:34:29.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.465" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.453" endtime="20201110 08:34:29.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.470" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.469" endtime="20201110 08:34:29.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.472" level="INFO">VALUE: [0.00018379200000000206, 0.00018373600000000032, 0.00018352800000000224, 0.00018362499999999976, 0.00018356999999999749, 0.00018322200000000025, 0.0001833200000000007, 0.0001835139999999992, 0.00018358300000000105, 0.0001840139999999997, 0.00018376399999999946, 0.00018386100000000044, 0.00018340300000000212, 0.0001840139999999997, 0.000183278000000002, 0.00018351400000000267, 0.00018336199999999941, 0.00018381899999999826, 0.00018373600000000032, 0.0001839309999999983, 0.00018351400000000267, 0.000183972000000001, 0.0001838200000000012, 0.0001839590000000009, 0.0001836940000000016, 0.00018368099999999804, 0.000183278000000002, 0.00018395799999999796, 0.0001835139999999992, 0.00018383299999999783, 0.0001836110000000002, 0.00018338899999999908, 0.00018406999999999799, 0.00018402799999999928, 0.0001836529999999989, 0.0001836110000000002, 0.00018366600000000247, 0.0001834439999999979, 0.00018406999999999799, 0.00018340299999999865, 0.00018329200000000156, 0.00018374999999999989, 0.00018363899999999933, 0.0001833749999999995, 0.0001834439999999979, 0.00018408300000000155, 0.00018372200000000422, 0.00018392999999999882, 0.00018409700000000112, 0.000183278000000002]</msg>
<status status="PASS" starttime="20201110 08:34:29.471" endtime="20201110 08:34:29.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.466" endtime="20201110 08:34:29.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.476" endtime="20201110 08:34:29.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.479" endtime="20201110 08:34:29.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.478" endtime="20201110 08:34:29.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.474" endtime="20201110 08:34:29.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.103" endtime="20201110 08:34:29.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.103" endtime="20201110 08:34:29.500"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.509" endtime="20201110 08:34:29.531"></status>
</kw>
<msg timestamp="20201110 08:34:29.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.507" endtime="20201110 08:34:29.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.533" endtime="20201110 08:34:29.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.535" endtime="20201110 08:34:29.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.505" endtime="20201110 08:34:29.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.503" endtime="20201110 08:34:29.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.544" endtime="20201110 08:34:29.831"></status>
</kw>
<msg timestamp="20201110 08:34:29.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.543" endtime="20201110 08:34:29.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.835" endtime="20201110 08:34:29.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.843" endtime="20201110 08:34:29.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.540" endtime="20201110 08:34:29.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.538" endtime="20201110 08:34:29.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.849" level="INFO">${RESULT} = [{'time': 0.022141917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018470900000000165, 'source_diff': 0.00018470900000000165}, {'time': 0.022350069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:29.846" endtime="20201110 08:34:29.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:29.850" endtime="20201110 08:34:29.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.867" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.866" endtime="20201110 08:34:29.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.869" level="INFO">VALUE: [0.00018470900000000165, 0.0001844439999999989, 0.0001851110000000017, 0.00018425000000000039, 0.00018441699999999922, 0.000184666, 0.0001851530000000004, 0.00018500000000000114, 0.00018437499999999704, 0.0001843750000000005, 0.00018477800000000003, 0.00018456999999999849, 0.00018520900000000215, 0.0001850689999999995, 0.00018444400000000236, 0.0001843750000000005, 0.00018457000000000195, 0.00018488900000000058, 0.00018444500000000183, 0.00018505599999999942, 0.00018452799999999978, 0.00018475000000000089, 0.00018518000000000007, 0.00018519399999999964, 0.0001852079999999992, 0.00018487499999999754, 0.00018527800000000053, 0.00018527800000000053, 0.0001852079999999992, 0.00018487499999999754, 0.00018505499999999994, 0.0001844439999999989, 0.0001848469999999984, 0.0001849439999999994, 0.00018426399999999996, 0.0001851530000000004, 0.00018466699999999947, 0.00018463900000000033, 0.00018494500000000233, 0.00018497300000000147, 0.0001843750000000005, 0.00018440300000000312, 0.00018450000000000064, 0.00018470800000000218, 0.00018508399999999856, 0.00018429200000000256, 0.00018434700000000137, 0.0001847079999999987, 0.0001844859999999976, 0.00018506899999999604]</msg>
<status status="PASS" starttime="20201110 08:34:29.868" endtime="20201110 08:34:29.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.863" endtime="20201110 08:34:29.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.873" endtime="20201110 08:34:29.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.876" endtime="20201110 08:34:29.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.875" endtime="20201110 08:34:29.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.871" endtime="20201110 08:34:29.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.501" endtime="20201110 08:34:29.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.501" endtime="20201110 08:34:29.897"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.906" endtime="20201110 08:34:29.928"></status>
</kw>
<msg timestamp="20201110 08:34:29.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.904" endtime="20201110 08:34:29.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.930" endtime="20201110 08:34:29.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.932" endtime="20201110 08:34:29.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.902" endtime="20201110 08:34:29.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.900" endtime="20201110 08:34:29.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.941" endtime="20201110 08:34:30.228"></status>
</kw>
<msg timestamp="20201110 08:34:30.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:29.940" endtime="20201110 08:34:30.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02213675, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:30.233" endtime="20201110 08:34:30.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.241" endtime="20201110 08:34:30.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.937" endtime="20201110 08:34:30.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.935" endtime="20201110 08:34:30.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.247" level="INFO">${RESULT} = [{'time': 0.02213675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018599999999999867, 'source_diff': 0.00018599999999999867}, {'time': 0.022340028, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:30.244" endtime="20201110 08:34:30.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.262" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:30.248" endtime="20201110 08:34:30.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.266" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.265" endtime="20201110 08:34:30.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.269" level="INFO">VALUE: [0.00018599999999999867, 0.00018581999999999974, 0.00018559699999999915, 0.0001858880000000021, 0.0001851949999999991, 0.0001861249999999988, 0.0001858050000000007, 0.00018566700000000047, 0.00018530599999999967, 0.00018568100000000004, 0.00018613899999999836, 0.00018568000000000057, 0.0001854439999999999, 0.00018529100000000062, 0.00018561099999999872, 0.00018586099999999897, 0.00018609799999999913, 0.00018537499999999804, 0.0001857079999999997, 0.00018538900000000108, 0.00018563899999999786, 0.00018537499999999804, 0.00018609699999999965, 0.0001861249999999988, 0.00018537499999999804, 0.00018549999999999817, 0.000185569, 0.00018611099999999922, 0.00018563900000000133, 0.0001853889999999976, 0.00018601399999999824, 0.00018566700000000047, 0.00018581900000000026, 0.0001856249999999983, 0.00018568000000000057, 0.0001854720000000025, 0.0001862080000000002, 0.00018606999999999999, 0.0001859310000000003, 0.00018536099999999847, 0.0001854439999999999, 0.0001861249999999988, 0.00018583299999999983, 0.0001856249999999983, 0.0001857920000000006, 0.00018627799999999806, 0.0001861389999999949, 0.00018576400000000493, 0.000185278000000004, 0.0001854439999999999]</msg>
<status status="PASS" starttime="20201110 08:34:30.267" endtime="20201110 08:34:30.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.263" endtime="20201110 08:34:30.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.272" endtime="20201110 08:34:30.274"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.276" endtime="20201110 08:34:30.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.274" endtime="20201110 08:34:30.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.271" endtime="20201110 08:34:30.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.898" endtime="20201110 08:34:30.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.898" endtime="20201110 08:34:30.297"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.305" endtime="20201110 08:34:30.328"></status>
</kw>
<msg timestamp="20201110 08:34:30.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.304" endtime="20201110 08:34:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.329" endtime="20201110 08:34:30.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.332" endtime="20201110 08:34:30.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.301" endtime="20201110 08:34:30.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.299" endtime="20201110 08:34:30.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.341" endtime="20201110 08:34:30.628"></status>
</kw>
<msg timestamp="20201110 08:34:30.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.339" endtime="20201110 08:34:30.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.632" endtime="20201110 08:34:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.640" endtime="20201110 08:34:30.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.337" endtime="20201110 08:34:30.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.335" endtime="20201110 08:34:30.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.647" level="INFO">${RESULT} = [{'time': 0.022030069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001871379999999999, 'source_diff': 0.0001871379999999999}, {'time': 0.022231319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:30.643" endtime="20201110 08:34:30.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:30.648" endtime="20201110 08:34:30.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.664" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.663" endtime="20201110 08:34:30.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.667" level="INFO">VALUE: [0.0001871379999999999, 0.0001868470000000004, 0.00018620899999999968, 0.00018637499999999904, 0.0001866950000000006, 0.00018705599999999795, 0.00018679099999999865, 0.00018716700000000197, 0.00018687499999999954, 0.00018704200000000185, 0.00018712500000000326, 0.00018708300000000108, 0.00018629100000000162, 0.00018704200000000185, 0.0001863469999999999, 0.00018665299999999843, 0.00018644500000000036, 0.00018665299999999843, 0.00018637499999999904, 0.00018637499999999904, 0.00018708300000000108, 0.0001864859999999996, 0.0001864859999999996, 0.00018629099999999815, 0.0001863889999999986, 0.00018673599999999985, 0.0001863050000000012, 0.00018706899999999804, 0.00018701299999999976, 0.000186875000000003, 0.00018661099999999972, 0.00018651399999999874, 0.00018697200000000053, 0.00018691599999999878, 0.00018716599999999903, 0.00018718000000000207, 0.0001868889999999991, 0.00018623599999999935, 0.00018716599999999903, 0.00018695800000000096, 0.00018640299999999818, 0.00018652800000000178, 0.00018709800000000013, 0.00018692999999999835, 0.00018700000000000314, 0.0001869310000000013, 0.00018705499999999847, 0.00018698699999999957, 0.00018622199999999978, 0.00018695900000000043]</msg>
<status status="PASS" starttime="20201110 08:34:30.665" endtime="20201110 08:34:30.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.661" endtime="20201110 08:34:30.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.670" endtime="20201110 08:34:30.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.674" endtime="20201110 08:34:30.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.672" endtime="20201110 08:34:30.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.669" endtime="20201110 08:34:30.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.298" endtime="20201110 08:34:30.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.297" endtime="20201110 08:34:30.694"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.703" endtime="20201110 08:34:30.726"></status>
</kw>
<msg timestamp="20201110 08:34:30.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.702" endtime="20201110 08:34:30.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.727" endtime="20201110 08:34:30.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.730" endtime="20201110 08:34:30.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.699" endtime="20201110 08:34:30.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.697" endtime="20201110 08:34:30.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.739" endtime="20201110 08:34:31.024"></status>
</kw>
<msg timestamp="20201110 08:34:31.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.737" endtime="20201110 08:34:31.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021952569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022140972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.029" endtime="20201110 08:34:31.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.037" endtime="20201110 08:34:31.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.735" endtime="20201110 08:34:31.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.733" endtime="20201110 08:34:31.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.043" level="INFO">${RESULT} = [{'time': 0.022140972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001884029999999967, 'source_diff': 0.0001884029999999967}, {'time': 0.022346208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.040" endtime="20201110 08:34:31.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.044" endtime="20201110 08:34:31.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.061" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.060" endtime="20201110 08:34:31.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.063" level="INFO">VALUE: [0.0001884029999999967, 0.00018805499999999947, 0.00018798700000000057, 0.00018730600000000167, 0.00018741699999999875, 0.00018816700000000297, 0.00018779099999999965, 0.00018815200000000046, 0.00018744399999999842, 0.0001875279999999993, 0.00018812499999999732, 0.0001873889999999996, 0.00018800000000000067, 0.0001882080000000022, 0.0001879310000000023, 0.00018811100000000122, 0.00018761100000000072, 0.0001881250000000008, 0.0001881669999999995, 0.00018744399999999842, 0.00018763899999999986, 0.00018798599999999763, 0.00018780600000000217, 0.0001878890000000001, 0.000187764, 0.0001874440000000019, 0.00018730499999999872, 0.00018780600000000217, 0.00018775000000000042, 0.0001873470000000009, 0.00018797200000000153, 0.00018787500000000054, 0.00018823600000000135, 0.00018755600000000192, 0.00018732000000000124, 0.00018805499999999947, 0.00018798700000000057, 0.00018743099999999832, 0.00018755499999999897, 0.0001881530000000034, 0.00018730499999999872, 0.0001882080000000022, 0.0001875279999999993, 0.0001878470000000014, 0.00018798599999999763, 0.00018805599999999895, 0.00018783299999999836, 0.00018815299999999646, 0.00018772200000000128, 0.0001879440000000024]</msg>
<status status="PASS" starttime="20201110 08:34:31.062" endtime="20201110 08:34:31.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.057" endtime="20201110 08:34:31.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.067" endtime="20201110 08:34:31.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.070" endtime="20201110 08:34:31.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.069" endtime="20201110 08:34:31.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.065" endtime="20201110 08:34:31.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.695" endtime="20201110 08:34:31.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.695" endtime="20201110 08:34:31.091"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.100" endtime="20201110 08:34:31.123"></status>
</kw>
<msg timestamp="20201110 08:34:31.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.098" endtime="20201110 08:34:31.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.124" endtime="20201110 08:34:31.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.127" endtime="20201110 08:34:31.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.096" endtime="20201110 08:34:31.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.094" endtime="20201110 08:34:31.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.136" endtime="20201110 08:34:31.422"></status>
</kw>
<msg timestamp="20201110 08:34:31.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.134" endtime="20201110 08:34:31.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022164694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.426" endtime="20201110 08:34:31.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.434" endtime="20201110 08:34:31.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.132" endtime="20201110 08:34:31.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.130" endtime="20201110 08:34:31.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.441" level="INFO">${RESULT} = [{'time': 0.022164694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001885829999999991, 'source_diff': 0.0001885829999999991}, {'time': 0.022371917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.437" endtime="20201110 08:34:31.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.454" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.442" endtime="20201110 08:34:31.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.458" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.457" endtime="20201110 08:34:31.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.461" level="INFO">VALUE: [0.0001885829999999991, 0.0001884860000000016, 0.00018890300000000068, 0.000188667, 0.0001883470000000019, 0.00018859700000000215, 0.00018844399999999942, 0.00018856999999999902, 0.00018908399999999909, 0.00018820799999999874, 0.00018834699999999843, 0.00018850000000000117, 0.0001888470000000024, 0.00018897200000000253, 0.0001890410000000009, 0.00018850000000000117, 0.00018847199999999856, 0.00018837500000000104, 0.00018904200000000038, 0.00018854199999999988, 0.0001884860000000016, 0.00018830499999999972, 0.00018873599999999838, 0.00018879100000000065, 0.000188667, 0.00018900000000000167, 0.00018829199999999963, 0.00018894399999999992, 0.00018879100000000065, 0.00018847199999999856, 0.00018893000000000035, 0.0001882219999999983, 0.0001891670000000005, 0.00018891700000000025, 0.00018848599999999813, 0.00018841699999999975, 0.00018913900000000136, 0.00018888899999999764, 0.00018840300000000018, 0.0001888890000000011, 0.00018843099999999932, 0.0001883059999999992, 0.00018898599999999863, 0.00018833299999999886, 0.0001888609999999985, 0.000188458999999995, 0.0001884310000000028, 0.00018909699999999918, 0.00018856899999999954, 0.00018844500000000236]</msg>
<status status="PASS" starttime="20201110 08:34:31.459" endtime="20201110 08:34:31.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.455" endtime="20201110 08:34:31.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.464" endtime="20201110 08:34:31.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.468" endtime="20201110 08:34:31.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.466" endtime="20201110 08:34:31.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.463" endtime="20201110 08:34:31.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.092" endtime="20201110 08:34:31.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.092" endtime="20201110 08:34:31.489"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.497" endtime="20201110 08:34:31.520"></status>
</kw>
<msg timestamp="20201110 08:34:31.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.496" endtime="20201110 08:34:31.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.521" endtime="20201110 08:34:31.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.524" endtime="20201110 08:34:31.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.493" endtime="20201110 08:34:31.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.491" endtime="20201110 08:34:31.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.533" endtime="20201110 08:34:31.819"></status>
</kw>
<msg timestamp="20201110 08:34:31.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216175, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:31.531" endtime="20201110 08:34:31.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216175, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:34:31.823" endtime="20201110 08:34:31.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.831" endtime="20201110 08:34:31.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.529" endtime="20201110 08:34:31.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.527" endtime="20201110 08:34:31.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.837" level="INFO">${RESULT} = [{'time': 0.02216175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00018975000000000242, 'source_diff': 0.00018975000000000242}, {'time': 0.022383833, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:31.834" endtime="20201110 08:34:31.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.852" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:31.838" endtime="20201110 08:34:31.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.857" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.856" endtime="20201110 08:34:31.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.859" level="INFO">VALUE: [0.00018975000000000242, 0.00018934699999999943, 0.0001901670000000015, 0.00018986199999999898, 0.00018927800000000106, 0.00019009700000000018, 0.00018943000000000085, 0.00018951400000000174, 0.0001894999999999987, 0.0001895410000000014, 0.0001893890000000016, 0.00018970799999999677, 0.00018977800000000156, 0.0001900280000000018, 0.00018998599999999963, 0.0001900419999999979, 0.00018979200000000113, 0.00018936199999999848, 0.000189360999999999, 0.0001893890000000016, 0.00018958399999999959, 0.0001898329999999969, 0.00018931999999999977, 0.00018959699999999968, 0.00018931999999999977, 0.00018925000000000192, 0.000189360999999999, 0.000189458, 0.0001901809999999976, 0.00018997299999999953, 0.00018945899999999946, 0.00018951400000000174, 0.00018972299999999928, 0.00018941700000000075, 0.00019023599999999988, 0.00019026399999999902, 0.00019005500000000147, 0.0001901800000000016, 0.00018955600000000045, 0.00018947199999999956, 0.0001899029999999982, 0.00018948599999999913, 0.00018983399999999984, 0.00018986100000000297, 0.00018959699999999968, 0.00018925000000000192, 0.00018984699999999993, 0.000189360999999999, 0.00018934700000000637, 0.00018948599999999566]</msg>
<status status="PASS" starttime="20201110 08:34:31.858" endtime="20201110 08:34:31.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.853" endtime="20201110 08:34:31.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.863" endtime="20201110 08:34:31.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.866" endtime="20201110 08:34:31.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.864" endtime="20201110 08:34:31.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.861" endtime="20201110 08:34:31.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.489" endtime="20201110 08:34:31.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.489" endtime="20201110 08:34:31.887"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.895" endtime="20201110 08:34:31.918"></status>
</kw>
<msg timestamp="20201110 08:34:31.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.894" endtime="20201110 08:34:31.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.920" endtime="20201110 08:34:31.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.922" endtime="20201110 08:34:31.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.891" endtime="20201110 08:34:31.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.889" endtime="20201110 08:34:31.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.931" endtime="20201110 08:34:32.264"></status>
</kw>
<msg timestamp="20201110 08:34:32.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.930" endtime="20201110 08:34:32.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.268" endtime="20201110 08:34:32.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.276" endtime="20201110 08:34:32.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.927" endtime="20201110 08:34:32.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.926" endtime="20201110 08:34:32.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.282" level="INFO">${RESULT} = [{'time': 0.022297514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00019115299999999946, 'source_diff': 0.00019115299999999946}, {'time': 0.022513611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:32.279" endtime="20201110 08:34:32.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.295" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:32.283" endtime="20201110 08:34:32.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.300" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.299" endtime="20201110 08:34:32.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.302" level="INFO">VALUE: [0.00019115299999999946, 0.0001908329999999979, 0.0001906809999999981, 0.00019115299999999946, 0.0001910000000000002, 0.00019111100000000075, 0.00019062499999999982, 0.0001910000000000002, 0.0001907220000000008, 0.00019031899999999782, 0.00019074999999999995, 0.00019098600000000063, 0.0001910830000000016, 0.00019112500000000032, 0.00019029099999999868, 0.0001902090000000002, 0.00019019400000000117, 0.00019074999999999995, 0.0001911939999999987, 0.0001909870000000001, 0.000190361, 0.0001904450000000009, 0.00019102699999999986, 0.0001902640000000025, 0.00019069499999999767, 0.00019051399999999927, 0.00019023599999999988, 0.0001911389999999999, 0.00019037499999999957, 0.00019080599999999823, 0.00019015299999999846, 0.00019101399999999977, 0.00019076399999999952, 0.00019034700000000043, 0.0001911389999999999, 0.00019034700000000043, 0.00019088899999999964, 0.0001904029999999987, 0.0001910280000000028, 0.0001903890000000026, 0.00019052799999999884, 0.00019025000000000292, 0.00019062499999999635, 0.00019076399999999605, 0.00019072200000000428, 0.00019101400000000324, 0.00019067999999999863, 0.0001908610000000005, 0.0001908190000000018, 0.0001909589999999975]</msg>
<status status="PASS" starttime="20201110 08:34:32.301" endtime="20201110 08:34:32.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.296" endtime="20201110 08:34:32.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.306" endtime="20201110 08:34:32.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.309" endtime="20201110 08:34:32.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.308" endtime="20201110 08:34:32.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.304" endtime="20201110 08:34:32.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.888" endtime="20201110 08:34:32.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.887" endtime="20201110 08:34:32.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.488" endtime="20201110 08:34:32.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.334" endtime="20201110 08:34:32.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.332" endtime="20201110 08:34:32.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.331" endtime="20201110 08:34:32.354"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:52.420" endtime="20201110 08:34:32.354" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:33:10.942" endtime="20201110 08:34:32.358"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.414" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:34:32.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:34:33.591" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:34:32.413" endtime="20201110 08:34:33.592"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.594" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:34:33.593" endtime="20201110 08:34:33.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.412" endtime="20201110 08:34:33.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.597" endtime="20201110 08:34:33.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.596" endtime="20201110 08:34:33.818"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.831" endtime="20201110 08:34:33.844"></status>
</kw>
<msg timestamp="20201110 08:34:33.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.829" endtime="20201110 08:34:33.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.847" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.845" endtime="20201110 08:34:33.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.850" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:33.848" endtime="20201110 08:34:33.850"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:33.826" endtime="20201110 08:34:33.851"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:33.824" endtime="20201110 08:34:33.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.823" endtime="20201110 08:34:33.852"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:33.855" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:33.855" endtime="20201110 08:34:33.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.852" endtime="20201110 08:34:33.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.822" endtime="20201110 08:34:33.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.821" endtime="20201110 08:34:33.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.857" endtime="20201110 08:34:33.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.820" endtime="20201110 08:34:33.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.860" endtime="20201110 08:34:33.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.818" endtime="20201110 08:34:33.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.410" endtime="20201110 08:34:33.863"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.869" endtime="20201110 08:34:33.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.867" endtime="20201110 08:34:33.889"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.902" endtime="20201110 08:34:33.915"></status>
</kw>
<msg timestamp="20201110 08:34:33.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.900" endtime="20201110 08:34:33.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.918" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.916" endtime="20201110 08:34:33.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.921" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:33.919" endtime="20201110 08:34:33.921"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:33.897" endtime="20201110 08:34:33.921"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:33.895" endtime="20201110 08:34:33.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.894" endtime="20201110 08:34:33.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:33.926" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:33.925" endtime="20201110 08:34:33.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.923" endtime="20201110 08:34:33.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.893" endtime="20201110 08:34:33.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.892" endtime="20201110 08:34:33.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.928" endtime="20201110 08:34:33.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.891" endtime="20201110 08:34:33.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.889" endtime="20201110 08:34:33.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.866" endtime="20201110 08:34:33.930"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:33.934" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.942" endtime="20201110 08:34:36.055"></status>
</kw>
<msg timestamp="20201110 08:34:36.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 400592, 'start-iter': 1, 'wakeups': [410642, 420640, 430641, 440641, 4...</msg>
<status status="PASS" starttime="20201110 08:34:33.940" endtime="20201110 08:34:36.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.058" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 400592, 'start-iter': 1, 'wakeups': [410642, 420640, 430641, 440641, 4...</msg>
<status status="PASS" starttime="20201110 08:34:36.057" endtime="20201110 08:34:36.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.060" endtime="20201110 08:34:36.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.938" endtime="20201110 08:34:36.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.936" endtime="20201110 08:34:36.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.065" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 400592, 'wakeups': [410642, 420640, 430641, 440641, 450641, 460641, 470641, 480641, 490641, 500641, 510641, 520641, 530641, 540641, 550641, 56...</msg>
<status status="PASS" starttime="20201110 08:34:36.063" endtime="20201110 08:34:36.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.070" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:36.069" endtime="20201110 08:34:36.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.072" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:36.071" endtime="20201110 08:34:36.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.066" endtime="20201110 08:34:36.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.077" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:36.075" endtime="20201110 08:34:36.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.079" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:36.078" endtime="20201110 08:34:36.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.073" endtime="20201110 08:34:36.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.083" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:36.082" endtime="20201110 08:34:36.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.086" level="INFO">VALUE: 400592</msg>
<status status="PASS" starttime="20201110 08:34:36.085" endtime="20201110 08:34:36.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.080" endtime="20201110 08:34:36.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.092" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:36.090" endtime="20201110 08:34:36.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.094" level="INFO">VALUE: [410642, 420640, 430641, 440641, 450641, 460641, 470641, 480641, 490641, 500641, 510641, 520641, 530641, 540641, 550641, 560641, 570641, 580641, 590641, 600641, 610641, 620641, 630641, 640641, 650641, 660641, 670641, 680641, 690641, 700641, 710641, 720641, 730641, 740641, 750641, 760641, 770641, 780641, 790641, 800641, 810641, 820641, 830641, 840641, 850641, 860641, 870641, 880641, 890641, 900641, 910641, 920641, 930641, 940641, 950641, 960641, 970641, 980641, 990641, 1000641, 1010641, 1020641, 1030641, 1040641, 1050641, 1060641, 1070641, 1080641, 1090641, 1100641, 1110641, 1120641, 1130641, 1140641, 1150641, 1160641, 1170641, 1180641, 1190641, 1200641, 1210641, 1220641, 1230641, 1240641, 1250641, 1260641, 1270641, 1280641, 1290641, 1300641, 1310641, 1320641, 1330641, 1340641, 1350641, 1360641, 1370641, 1380641, 1390641, 1400641]</msg>
<status status="PASS" starttime="20201110 08:34:36.093" endtime="20201110 08:34:36.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.087" endtime="20201110 08:34:36.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.101" endtime="20201110 08:34:36.398"></status>
</kw>
<msg timestamp="20201110 08:34:36.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064232403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074244486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.099" endtime="20201110 08:34:36.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064232403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074244486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.402" endtime="20201110 08:34:36.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.410" endtime="20201110 08:34:36.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.097" endtime="20201110 08:34:36.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.095" endtime="20201110 08:34:36.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.436" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:36.413" endtime="20201110 08:34:36.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.441" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:36.440" endtime="20201110 08:34:36.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.443" level="INFO">VALUE: 0.064232403</msg>
<status status="PASS" starttime="20201110 08:34:36.442" endtime="20201110 08:34:36.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.437" endtime="20201110 08:34:36.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.448" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:36.447" endtime="20201110 08:34:36.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.450" level="INFO">VALUE: [0.074244486, 0.084205347, 0.094168875, 0.104131431, 0.114093931, 0.124056347, 0.134018694, 0.143981236, 0.153943597, 0.163905833, 0.173867694, 0.183829792, 0.193792069, 0.203754583, 0.213717, 0.223679736, 0.233642819, 0.243605903, 0.253568542, 0.263531181, 0.273493542, 0.283455986, 0.2934185, 0.303380944, 0.31334425, 0.323307194, 0.333270639, 0.343233889, 0.353196542, 0.363159333, 0.373122083, 0.383085167, 0.393048292, 0.403011236, 0.412973667, 0.422935875, 0.432898056, 0.442859625, 0.452821833, 0.462783681, 0.472746014, 0.482708403, 0.492670694, 0.502632833, 0.512594667, 0.522556458, 0.532518431, 0.542480125, 0.552442306, 0.562404708, 0.572366931, 0.582329194, 0.592291306, 0.602253125, 0.612214986, 0.622177319, 0.632138917, 0.642100944, 0.65206325, 0.662025903, 0.671988278, 0.681950611, 0.691913056, 0.701874806, 0.711836958, 0.721798917, 0.731760972, 0.741723153, 0.751685194, 0.761647222, 0.771609292, 0.781570819, 0.791532639, 0.801494681, 0.811456917, 0.821418778, 0.831380458, 0.841342611, 0.851304778, 0.861266514, 0.871228861, 0.881191069, 0.891153681, 0.901116278, 0.911079347, 0.921042431, 0.931005111, 0.940967986, 0.950931208, 0.960894819, 0.970858083, 0.980821444, 0.990784472, 1.000747292, 1.010709708, 1.020672167, 1.030634917, 1.040596694, 1.050559042, 1.060521389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:36.449" endtime="20201110 08:34:36.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.444" endtime="20201110 08:34:36.451"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.455" endtime="20201110 08:34:36.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.459" endtime="20201110 08:34:36.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.457" endtime="20201110 08:34:36.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.452" endtime="20201110 08:34:36.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.934" endtime="20201110 08:34:36.479"></status>
</kw>
<msg timestamp="20201110 08:34:36.480" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.488" endtime="20201110 08:34:38.596"></status>
</kw>
<msg timestamp="20201110 08:34:38.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2955993, 'start-iter': 1, 'wakeups': [2966043, 2976041, 2986042, 29960...</msg>
<status status="PASS" starttime="20201110 08:34:36.486" endtime="20201110 08:34:38.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.600" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2955993, 'start-iter': 1, 'wakeups': [2966043, 2976041, 2986042, 29960...</msg>
<status status="PASS" starttime="20201110 08:34:38.598" endtime="20201110 08:34:38.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.601" endtime="20201110 08:34:38.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.483" endtime="20201110 08:34:38.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.482" endtime="20201110 08:34:38.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.606" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 2955993, 'wakeups': [2966043, 2976041, 2986042, 2996042, 3006042, 3016042, 3026042, 3036042, 3046042, 3056042, 3066042, 3076042, 3086042, 3096...</msg>
<status status="PASS" starttime="20201110 08:34:38.604" endtime="20201110 08:34:38.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.610" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:38.609" endtime="20201110 08:34:38.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.613" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:38.612" endtime="20201110 08:34:38.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.607" endtime="20201110 08:34:38.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.618" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:38.616" endtime="20201110 08:34:38.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.619" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:38.619" endtime="20201110 08:34:38.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.614" endtime="20201110 08:34:38.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.624" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:38.623" endtime="20201110 08:34:38.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.626" level="INFO">VALUE: 2955993</msg>
<status status="PASS" starttime="20201110 08:34:38.625" endtime="20201110 08:34:38.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.621" endtime="20201110 08:34:38.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.631" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:38.630" endtime="20201110 08:34:38.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.633" level="INFO">VALUE: [2966043, 2976041, 2986042, 2996042, 3006042, 3016042, 3026042, 3036042, 3046042, 3056042, 3066042, 3076042, 3086042, 3096042, 3106042, 3116042, 3126042, 3136042, 3146042, 3156042, 3166042, 3176042, 3186042, 3196042, 3206042, 3216042, 3226042, 3236042, 3246042, 3256042, 3266042, 3276042, 3286042, 3296042, 3306042, 3316042, 3326042, 3336042, 3346042, 3356042, 3366042, 3376042, 3386042, 3396042, 3406042, 3416042, 3426042, 3436042, 3446042, 3456042, 3466042, 3476042, 3486042, 3496042, 3506042, 3516042, 3526042, 3536042, 3546042, 3556042, 3566042, 3576042, 3586042, 3596042, 3606042, 3616042, 3626042, 3636042, 3646042, 3656042, 3666042, 3676042, 3686042, 3696042, 3706042, 3716042, 3726042, 3736042, 3746042, 3756042, 3766042, 3776042, 3786042, 3796042, 3806042, 3816042, 3826042, 3836042, 3846042, 3856042, 3866042, 3876042, 3886042, 3896042, 3906042, 3916042, 3926042, 3936042, 3946042, 3956042]</msg>
<status status="PASS" starttime="20201110 08:34:38.632" endtime="20201110 08:34:38.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.628" endtime="20201110 08:34:38.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.641" endtime="20201110 08:34:38.932"></status>
</kw>
<msg timestamp="20201110 08:34:38.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029758403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.639" endtime="20201110 08:34:38.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029758403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.936" endtime="20201110 08:34:38.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.944" endtime="20201110 08:34:38.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.637" endtime="20201110 08:34:38.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.635" endtime="20201110 08:34:38.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.970" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:38.947" endtime="20201110 08:34:38.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.974" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:38.973" endtime="20201110 08:34:38.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.976" level="INFO">VALUE: 0.019747236</msg>
<status status="PASS" starttime="20201110 08:34:38.975" endtime="20201110 08:34:38.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.971" endtime="20201110 08:34:38.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.001" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:38.999" endtime="20201110 08:34:39.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.003" level="INFO">VALUE: [0.029758403, 0.03972025, 0.049684264, 0.059646931, 0.069609806, 0.079572514, 0.089535847, 0.099499486, 0.109463097, 0.119426611, 0.129390194, 0.13935275, 0.149314667, 0.159277847, 0.169240861, 0.179204083, 0.189167333, 0.199130542, 0.209094, 0.219057403, 0.229020431, 0.238983375, 0.248946819, 0.258910222, 0.268873194, 0.278836111, 0.288799542, 0.298762181, 0.308724917, 0.318687528, 0.328650236, 0.338613333, 0.348576556, 0.358538736, 0.368501597, 0.378464472, 0.388427194, 0.39838975, 0.408352236, 0.418315264, 0.428277944, 0.438240986, 0.448204056, 0.458167153, 0.468130597, 0.478094208, 0.488057472, 0.498020153, 0.507983569, 0.517946792, 0.527909625, 0.537872347, 0.547834806, 0.557797458, 0.567760264, 0.577723778, 0.587687264, 0.597650111, 0.607612708, 0.617575514, 0.627538014, 0.637500917, 0.647463542, 0.657426583, 0.667389583, 0.677352611, 0.687316069, 0.697279819, 0.707243417, 0.717207153, 0.727170431, 0.737133639, 0.747097431, 0.757061153, 0.767024889, 0.776988764, 0.786952806, 0.796916889, 0.806880333, 0.816844139, 0.826808722, 0.836773056, 0.846737042, 0.856701153, 0.866665458, 0.876629889, 0.886594556, 0.896558944, 0.906523153, 0.916487625, 0.92645225, 0.936416597, 0.946380708, 0.956343972, 0.966307028, 0.976269986, 0.9862335, 0.996197667, 1.006162486, 1.016127389] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:39.002" endtime="20201110 08:34:39.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.978" endtime="20201110 08:34:39.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.006" endtime="20201110 08:34:39.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.009" endtime="20201110 08:34:39.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.008" endtime="20201110 08:34:39.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.004" endtime="20201110 08:34:39.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.480" endtime="20201110 08:34:39.030"></status>
</kw>
<msg timestamp="20201110 08:34:39.030" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.039" endtime="20201110 08:34:41.149"></status>
</kw>
<msg timestamp="20201110 08:34:41.150" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5517072, 'start-iter': 1, 'wakeups': [5527122, 5537120, 5547121, 55571...</msg>
<status status="PASS" starttime="20201110 08:34:39.037" endtime="20201110 08:34:41.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.156" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5517072, 'start-iter': 1, 'wakeups': [5527122, 5537120, 5547121, 55571...</msg>
<status status="PASS" starttime="20201110 08:34:41.152" endtime="20201110 08:34:41.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.158" endtime="20201110 08:34:41.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.034" endtime="20201110 08:34:41.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.032" endtime="20201110 08:34:41.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.169" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'start-time': 5517072, 'wakeups': [5527122, 5537120, 5547121, 5557121, 5567121, 5577121, 5587121, 5597121, 5607121, 5617121, 5627121, 5637121, 5647121, 5657...</msg>
<status status="PASS" starttime="20201110 08:34:41.165" endtime="20201110 08:34:41.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.177" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:41.175" endtime="20201110 08:34:41.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.181" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:41.179" endtime="20201110 08:34:41.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.170" endtime="20201110 08:34:41.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.189" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:41.188" endtime="20201110 08:34:41.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.191" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:41.190" endtime="20201110 08:34:41.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.184" endtime="20201110 08:34:41.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.197" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:41.196" endtime="20201110 08:34:41.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.199" level="INFO">VALUE: 5517072</msg>
<status status="PASS" starttime="20201110 08:34:41.198" endtime="20201110 08:34:41.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.193" endtime="20201110 08:34:41.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.204" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:41.203" endtime="20201110 08:34:41.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.206" level="INFO">VALUE: [5527122, 5537120, 5547121, 5557121, 5567121, 5577121, 5587121, 5597121, 5607121, 5617121, 5627121, 5637121, 5647121, 5657121, 5667121, 5677121, 5687121, 5697121, 5707121, 5717121, 5727121, 5737121, 5747121, 5757121, 5767121, 5777121, 5787121, 5797121, 5807121, 5817121, 5827121, 5837121, 5847121, 5857121, 5867121, 5877121, 5887121, 5897121, 5907121, 5917121, 5927121, 5937121, 5947121, 5957121, 5967121, 5977121, 5987121, 5997121, 6007121, 6017121, 6027121, 6037121, 6047121, 6057121, 6067121, 6077121, 6087121, 6097121, 6107121, 6117121, 6127121, 6137121, 6147121, 6157121, 6167121, 6177121, 6187121, 6197121, 6207121, 6217121, 6227121, 6237121, 6247121, 6257121, 6267121, 6277121, 6287121, 6297121, 6307121, 6317121, 6327121, 6337121, 6347121, 6357121, 6367121, 6377121, 6387121, 6397121, 6407121, 6417121, 6427121, 6437121, 6447121, 6457121, 6467121, 6477121, 6487121, 6497121, 6507121, 6517121]</msg>
<status status="PASS" starttime="20201110 08:34:41.205" endtime="20201110 08:34:41.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.200" endtime="20201110 08:34:41.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.213" endtime="20201110 08:34:41.505"></status>
</kw>
<msg timestamp="20201110 08:34:41.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.211" endtime="20201110 08:34:41.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020725028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030737931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.509" endtime="20201110 08:34:41.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.517" endtime="20201110 08:34:41.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.209" endtime="20201110 08:34:41.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.207" endtime="20201110 08:34:41.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.544" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:41.520" endtime="20201110 08:34:41.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.548" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:41.547" endtime="20201110 08:34:41.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.550" level="INFO">VALUE: 0.020725028</msg>
<status status="PASS" starttime="20201110 08:34:41.549" endtime="20201110 08:34:41.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.545" endtime="20201110 08:34:41.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.556" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:41.555" endtime="20201110 08:34:41.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.558" level="INFO">VALUE: [0.030737931, 0.040699806, 0.050663736, 0.060626667, 0.070589889, 0.080553056, 0.090516847, 0.100480861, 0.110444528, 0.12040825, 0.130372014, 0.140336181, 0.150300278, 0.160264069, 0.170227958, 0.180191972, 0.190156056, 0.200120042, 0.210084167, 0.220049, 0.230013472, 0.239978056, 0.249942153, 0.259906153, 0.269869583, 0.279833083, 0.289796514, 0.299760222, 0.309723792, 0.319687542, 0.329652125, 0.339616236, 0.349580472, 0.359544833, 0.369508528, 0.379471889, 0.389435347, 0.399398708, 0.409362611, 0.419326889, 0.429291139, 0.439255389, 0.449219319, 0.459183403, 0.469147194, 0.479110792, 0.489074778, 0.499038611, 0.509003653, 0.518968583, 0.528933208, 0.538897708, 0.548862431, 0.558826972, 0.568791292, 0.578755542, 0.588720097, 0.598684889, 0.608649639, 0.618614292, 0.628578722, 0.638542653, 0.648506792, 0.658470944, 0.668435097, 0.67839925, 0.688363153, 0.698327264, 0.7082915, 0.718255806, 0.728220069, 0.738184236, 0.748147958, 0.758111083, 0.768074764, 0.778039028, 0.788002875, 0.797967083, 0.807930972, 0.817895236, 0.827859444, 0.837823208, 0.847786486, 0.857750764, 0.867715097, 0.877679653, 0.887643903, 0.897607736, 0.90757075, 0.917534542, 0.927497903, 0.937461361, 0.947425292, 0.957388694, 0.967352347, 0.977315958, 0.987279986, 0.997243931, 1.007208083, 1.017171889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:41.557" endtime="20201110 08:34:41.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.552" endtime="20201110 08:34:41.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.562" endtime="20201110 08:34:41.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.565" endtime="20201110 08:34:41.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.563" endtime="20201110 08:34:41.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.560" endtime="20201110 08:34:41.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.031" endtime="20201110 08:34:41.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.932" endtime="20201110 08:34:41.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.931" endtime="20201110 08:34:41.586"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:41.589" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.597" endtime="20201110 08:34:43.732"></status>
</kw>
<msg timestamp="20201110 08:34:43.732" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8084370, 'start-iter': 1, 'wakeups': [8094468, 8104463, 8114464, 81244...</msg>
<status status="PASS" starttime="20201110 08:34:41.595" endtime="20201110 08:34:43.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8084370, 'start-iter': 1, 'wakeups': [8094468, 8104463, 8114464, 81244...</msg>
<status status="PASS" starttime="20201110 08:34:43.733" endtime="20201110 08:34:43.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.736" endtime="20201110 08:34:43.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.593" endtime="20201110 08:34:43.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.591" endtime="20201110 08:34:43.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.741" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 8084370, 'wakeups': [8094468, 8104463, 8114464, 8124464, 8134464, 8144464, 8154464, 8164464, 8174464, 8184464, 8194464, 8204464, 8214464, 8224...</msg>
<status status="PASS" starttime="20201110 08:34:43.739" endtime="20201110 08:34:43.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.747" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:43.746" endtime="20201110 08:34:43.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.749" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:43.748" endtime="20201110 08:34:43.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.742" endtime="20201110 08:34:43.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.754" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:43.753" endtime="20201110 08:34:43.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.757" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:43.756" endtime="20201110 08:34:43.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.751" endtime="20201110 08:34:43.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.761" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:43.760" endtime="20201110 08:34:43.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.764" level="INFO">VALUE: 8084370</msg>
<status status="PASS" starttime="20201110 08:34:43.763" endtime="20201110 08:34:43.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.758" endtime="20201110 08:34:43.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.769" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:43.768" endtime="20201110 08:34:43.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.771" level="INFO">VALUE: [8094468, 8104463, 8114464, 8124464, 8134464, 8144464, 8154464, 8164464, 8174464, 8184464, 8194464, 8204464, 8214464, 8224464, 8234464, 8244464, 8254464, 8264464, 8274464, 8284464, 8294464, 8304464, 8314464, 8324464, 8334464, 8344464, 8354464, 8364464, 8374464, 8384464, 8394464, 8404464, 8414464, 8424464, 8434464, 8444464, 8454464, 8464464, 8474464, 8484464, 8494464, 8504464, 8514464, 8524464, 8534464, 8544464, 8554464, 8564464, 8574464, 8584464, 8594464, 8604464, 8614464, 8624464, 8634464, 8644464, 8654464, 8664464, 8674464, 8684464, 8694464, 8704464, 8714464, 8724464, 8734464, 8744464, 8754464, 8764464, 8774464, 8784464, 8794464, 8804464, 8814464, 8824464, 8834464, 8844464, 8854464, 8864464, 8874464, 8884464, 8894464, 8904464, 8914464, 8924464, 8934464, 8944464, 8954464, 8964464, 8974464, 8984464, 8994464, 9004464, 9014464, 9024464, 9034464, 9044464, 9054464, 9064464, 9074464, 9084464]</msg>
<status status="PASS" starttime="20201110 08:34:43.770" endtime="20201110 08:34:43.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.765" endtime="20201110 08:34:43.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.779" endtime="20201110 08:34:44.070"></status>
</kw>
<msg timestamp="20201110 08:34:44.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032857319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.777" endtime="20201110 08:34:44.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022795528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032857319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.074" endtime="20201110 08:34:44.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.081" endtime="20201110 08:34:44.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.774" endtime="20201110 08:34:44.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.773" endtime="20201110 08:34:44.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.108" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:44.084" endtime="20201110 08:34:44.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.113" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:44.112" endtime="20201110 08:34:44.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.115" level="INFO">VALUE: 0.022795528</msg>
<status status="PASS" starttime="20201110 08:34:44.114" endtime="20201110 08:34:44.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.109" endtime="20201110 08:34:44.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.120" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:44.119" endtime="20201110 08:34:44.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.122" level="INFO">VALUE: [0.032857319, 0.042817, 0.052781958, 0.062746042, 0.072710542, 0.082674083, 0.092637986, 0.102601708, 0.112565389, 0.122529236, 0.132493083, 0.142457153, 0.152420806, 0.162384903, 0.172348694, 0.182312694, 0.192276444, 0.20224, 0.212203431, 0.222167472, 0.232131333, 0.242095556, 0.252060292, 0.262024667, 0.271989319, 0.281954583, 0.291919264, 0.301883583, 0.311847986, 0.321812431, 0.331776903, 0.341741653, 0.351706014, 0.361670847, 0.371635528, 0.381599875, 0.391564611, 0.401529181, 0.41149375, 0.421458583, 0.431423653, 0.441388361, 0.451353125, 0.461317694, 0.471282236, 0.481246694, 0.491210778, 0.501175583, 0.511140306, 0.521104722, 0.53106925, 0.541033903, 0.550998347, 0.560962875, 0.570927292, 0.580891611, 0.590856208, 0.600820667, 0.610784597, 0.620748972, 0.630713306, 0.640677417, 0.650642125, 0.660607, 0.670571986, 0.680536486, 0.690501, 0.700465736, 0.710430333, 0.720395042, 0.730359597, 0.740324139, 0.750288611, 0.760253681, 0.770218542, 0.780182986, 0.790147972, 0.800112917, 0.810077972, 0.820043264, 0.830007653, 0.839971903, 0.849936222, 0.859900278, 0.869864194, 0.879828444, 0.889792208, 0.899755431, 0.909719292, 0.919683153, 0.929647097, 0.939611403, 0.949575458, 0.959539597, 0.969503861, 0.979467764, 0.989431708, 0.999395472, 1.009360028, 1.019324222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:44.121" endtime="20201110 08:34:44.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.116" endtime="20201110 08:34:44.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.125" endtime="20201110 08:34:44.127"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.129" endtime="20201110 08:34:44.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.127" endtime="20201110 08:34:44.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.124" endtime="20201110 08:34:44.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.589" endtime="20201110 08:34:44.150"></status>
</kw>
<msg timestamp="20201110 08:34:44.150" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.158" endtime="20201110 08:34:46.266"></status>
</kw>
<msg timestamp="20201110 08:34:46.267" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10655519, 'start-iter': 1, 'wakeups': [10665617, 10675612, 10685613, 1...</msg>
<status status="PASS" starttime="20201110 08:34:44.157" endtime="20201110 08:34:46.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10655519, 'start-iter': 1, 'wakeups': [10665617, 10675612, 10685613, 1...</msg>
<status status="PASS" starttime="20201110 08:34:46.269" endtime="20201110 08:34:46.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.275" endtime="20201110 08:34:46.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.154" endtime="20201110 08:34:46.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.152" endtime="20201110 08:34:46.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.287" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 10655519, 'wakeups': [10665617, 10675612, 10685613, 10695613, 10705613, 10715613, 10725613, 10735613, 10745613, 10755613, 10765613, 10775613, ...</msg>
<status status="PASS" starttime="20201110 08:34:46.282" endtime="20201110 08:34:46.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.295" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:46.293" endtime="20201110 08:34:46.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.300" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:46.298" endtime="20201110 08:34:46.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.288" endtime="20201110 08:34:46.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.310" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:46.308" endtime="20201110 08:34:46.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.317" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:46.312" endtime="20201110 08:34:46.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.303" endtime="20201110 08:34:46.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.327" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:46.325" endtime="20201110 08:34:46.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.331" level="INFO">VALUE: 10655519</msg>
<status status="PASS" starttime="20201110 08:34:46.329" endtime="20201110 08:34:46.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.320" endtime="20201110 08:34:46.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.342" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:46.339" endtime="20201110 08:34:46.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.346" level="INFO">VALUE: [10665617, 10675612, 10685613, 10695613, 10705613, 10715613, 10725613, 10735613, 10745613, 10755613, 10765613, 10775613, 10785613, 10795613, 10805613, 10815613, 10825613, 10835613, 10845613, 10855613, 10865613, 10875613, 10885613, 10895613, 10905613, 10915613, 10925613, 10935613, 10945613, 10955613, 10965613, 10975613, 10985613, 10995613, 11005613, 11015613, 11025613, 11035613, 11045613, 11055613, 11065613, 11075613, 11085613, 11095613, 11105613, 11115613, 11125613, 11135613, 11145613, 11155613, 11165613, 11175613, 11185613, 11195613, 11205613, 11215613, 11225613, 11235613, 11245613, 11255613, 11265613, 11275613, 11285613, 11295613, 11305613, 11315613, 11325613, 11335613, 11345613, 11355613, 11365613, 11375613, 11385613, 11395613, 11405613, 11415613, 11425613, 11435613, 11445613, 11455613, 11465613, 11475613, 11485613, 11495613, 11505613, 11515613, 11525613, 11535613, 11545613, 11555613, 11565613, 11575613, 11585613, 11595613, 11605613, 11615613, 11625613, 11635613, 11645613, 11655613]</msg>
<status status="PASS" starttime="20201110 08:34:46.344" endtime="20201110 08:34:46.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.334" endtime="20201110 08:34:46.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.364" endtime="20201110 08:34:46.656"></status>
</kw>
<msg timestamp="20201110 08:34:46.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.363" endtime="20201110 08:34:46.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020637069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:46.660" endtime="20201110 08:34:46.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.668" endtime="20201110 08:34:46.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.358" endtime="20201110 08:34:46.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.349" endtime="20201110 08:34:46.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:46.694" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:46.671" endtime="20201110 08:34:46.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.699" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:46.698" endtime="20201110 08:34:46.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.701" level="INFO">VALUE: 0.020637069</msg>
<status status="PASS" starttime="20201110 08:34:46.700" endtime="20201110 08:34:46.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.695" endtime="20201110 08:34:46.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.707" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:46.706" endtime="20201110 08:34:46.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:46.709" level="INFO">VALUE: [0.030696944, 0.040655069, 0.050618667, 0.060581347, 0.070543986, 0.080506931, 0.090470153, 0.100433667, 0.110396514, 0.120360292, 0.130323861, 0.140287125, 0.150250542, 0.160213694, 0.17017725, 0.180141167, 0.190104611, 0.200067875, 0.210031014, 0.219994222, 0.229957722, 0.239920917, 0.249883903, 0.259847389, 0.269810139, 0.279773292, 0.289736917, 0.299700569, 0.309664042, 0.319627778, 0.329590958, 0.339554042, 0.349516861, 0.35947875, 0.369441083, 0.379403681, 0.389366569, 0.399329208, 0.409291958, 0.419254694, 0.429217847, 0.439180681, 0.449143444, 0.4591065, 0.469069917, 0.479032819, 0.488995, 0.498957653, 0.508920208, 0.518882931, 0.528844972, 0.538806986, 0.548769028, 0.558730639, 0.568692931, 0.578655556, 0.5886185, 0.598581694, 0.608545278, 0.618508583, 0.628472319, 0.638435278, 0.648398819, 0.658362861, 0.668325833, 0.678289236, 0.688252903, 0.698216778, 0.708180556, 0.7181445, 0.728108153, 0.738071806, 0.748035444, 0.757998944, 0.767962417, 0.777926083, 0.787889861, 0.79785375, 0.807817292, 0.817780681, 0.827743861, 0.837707458, 0.84767075, 0.857634139, 0.867597917, 0.877561444, 0.887525292, 0.897488653, 0.907451625, 0.917414764, 0.927378333, 0.937341361, 0.947304708, 0.957267681, 0.967231069, 0.977193639, 0.987156528, 0.997119458, 1.007082347, 1.017045819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:46.708" endtime="20201110 08:34:46.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.703" endtime="20201110 08:34:46.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.712" endtime="20201110 08:34:46.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:46.716" endtime="20201110 08:34:46.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.714" endtime="20201110 08:34:46.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.711" endtime="20201110 08:34:46.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.151" endtime="20201110 08:34:46.736"></status>
</kw>
<msg timestamp="20201110 08:34:46.737" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:46.745" endtime="20201110 08:34:48.852"></status>
</kw>
<msg timestamp="20201110 08:34:48.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13251658, 'start-iter': 1, 'wakeups': [13261756, 13271751, 13281752, 1...</msg>
<status status="PASS" starttime="20201110 08:34:46.743" endtime="20201110 08:34:48.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.860" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13251658, 'start-iter': 1, 'wakeups': [13261756, 13271751, 13281752, 1...</msg>
<status status="PASS" starttime="20201110 08:34:48.856" endtime="20201110 08:34:48.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.862" endtime="20201110 08:34:48.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.741" endtime="20201110 08:34:48.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.739" endtime="20201110 08:34:48.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:48.874" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'start-time': 13251658, 'wakeups': [13261756, 13271751, 13281752, 13291752, 13301752, 13311752, 13321752, 13331752, 13341752, 13351752, 13361752, 13371752, ...</msg>
<status status="PASS" starttime="20201110 08:34:48.870" endtime="20201110 08:34:48.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.882" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:48.880" endtime="20201110 08:34:48.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.887" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:48.885" endtime="20201110 08:34:48.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.875" endtime="20201110 08:34:48.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.897" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:48.895" endtime="20201110 08:34:48.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.901" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:48.899" endtime="20201110 08:34:48.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.890" endtime="20201110 08:34:48.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.912" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:48.910" endtime="20201110 08:34:48.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.916" level="INFO">VALUE: 13251658</msg>
<status status="PASS" starttime="20201110 08:34:48.914" endtime="20201110 08:34:48.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.904" endtime="20201110 08:34:48.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.929" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:48.924" endtime="20201110 08:34:48.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.934" level="INFO">VALUE: [13261756, 13271751, 13281752, 13291752, 13301752, 13311752, 13321752, 13331752, 13341752, 13351752, 13361752, 13371752, 13381752, 13391752, 13401752, 13411752, 13421752, 13431752, 13441752, 13451752, 13461752, 13471752, 13481752, 13491752, 13501752, 13511752, 13521752, 13531752, 13541752, 13551752, 13561752, 13571752, 13581752, 13591752, 13601752, 13611752, 13621752, 13631752, 13641752, 13651752, 13661752, 13671752, 13681752, 13691752, 13701752, 13711752, 13721752, 13731752, 13741752, 13751752, 13761752, 13771752, 13781752, 13791752, 13801752, 13811752, 13821752, 13831752, 13841752, 13851752, 13861752, 13871752, 13881752, 13891752, 13901752, 13911752, 13921752, 13931752, 13941752, 13951752, 13961752, 13971752, 13981752, 13991752, 14001752, 14011752, 14021752, 14031752, 14041752, 14051752, 14061752, 14071752, 14081752, 14091752, 14101752, 14111752, 14121752, 14131752, 14141752, 14151752, 14161752, 14171752, 14181752, 14191752, 14201752, 14211752, 14221752, 14231752, 14241752, 14251752]</msg>
<status status="PASS" starttime="20201110 08:34:48.932" endtime="20201110 08:34:48.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.919" endtime="20201110 08:34:48.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.950" endtime="20201110 08:34:49.246"></status>
</kw>
<msg timestamp="20201110 08:34:49.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030031431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:48.947" endtime="20201110 08:34:49.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030031431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:49.250" endtime="20201110 08:34:49.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.258" endtime="20201110 08:34:49.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.941" endtime="20201110 08:34:49.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.938" endtime="20201110 08:34:49.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:49.285" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:49.261" endtime="20201110 08:34:49.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.289" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:49.288" endtime="20201110 08:34:49.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.291" level="INFO">VALUE: 0.019971403</msg>
<status status="PASS" starttime="20201110 08:34:49.290" endtime="20201110 08:34:49.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.286" endtime="20201110 08:34:49.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.297" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:49.296" endtime="20201110 08:34:49.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:49.299" level="INFO">VALUE: [0.030031431, 0.039989861, 0.04995375, 0.059916736, 0.069879694, 0.079842153, 0.089804417, 0.099767, 0.109729542, 0.119692278, 0.129654556, 0.139616986, 0.149579514, 0.159541972, 0.169504458, 0.179466792, 0.189429069, 0.199391222, 0.209353194, 0.219315542, 0.229277472, 0.239240153, 0.249202639, 0.259165125, 0.269127389, 0.279090056, 0.289053208, 0.299015889, 0.308978417, 0.318941319, 0.328904569, 0.338867431, 0.348830167, 0.358793278, 0.368756903, 0.378720639, 0.388683722, 0.398646264, 0.408608597, 0.418570861, 0.428532903, 0.438495431, 0.448458597, 0.458421069, 0.468383875, 0.478346514, 0.488308611, 0.4982715, 0.508234903, 0.518197889, 0.528161014, 0.538123319, 0.548085792, 0.558048444, 0.568011278, 0.577973625, 0.58793625, 0.597898444, 0.607860653, 0.617822903, 0.627785486, 0.637747722, 0.647710514, 0.657672958, 0.667635542, 0.677597889, 0.68756025, 0.697522833, 0.707485347, 0.717447903, 0.727410153, 0.737372042, 0.747334542, 0.757297028, 0.767259667, 0.777222028, 0.787184056, 0.797145764, 0.807107944, 0.817069611, 0.827031528, 0.836993139, 0.846955139, 0.856917625, 0.866880208, 0.876842625, 0.886804931, 0.896767375, 0.906729944, 0.916692292, 0.926654639, 0.936617028, 0.946579375, 0.956542681, 0.966505833, 0.976468639, 0.986430889, 0.996393292, 1.006355833, 1.016318375] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:49.298" endtime="20201110 08:34:49.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.293" endtime="20201110 08:34:49.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.302" endtime="20201110 08:34:49.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:49.306" endtime="20201110 08:34:49.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.304" endtime="20201110 08:34:49.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.300" endtime="20201110 08:34:49.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:46.737" endtime="20201110 08:34:49.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.587" endtime="20201110 08:34:49.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.587" endtime="20201110 08:34:49.327"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:49.330" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:49.338" endtime="20201110 08:34:51.445"></status>
</kw>
<msg timestamp="20201110 08:34:51.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15854637, 'start-iter': 1, 'wakeups': [15864786, 15874782, 15884782, 1...</msg>
<status status="PASS" starttime="20201110 08:34:49.336" endtime="20201110 08:34:51.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15854637, 'start-iter': 1, 'wakeups': [15864786, 15874782, 15884782, 1...</msg>
<status status="PASS" starttime="20201110 08:34:51.449" endtime="20201110 08:34:51.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.455" endtime="20201110 08:34:51.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.334" endtime="20201110 08:34:51.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.332" endtime="20201110 08:34:51.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.472" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 15854637, 'wakeups': [15864786, 15874782, 15884782, 15894781, 15904781, 15914782, 15924782, 15934781, 15944781, 15954781, 15964782, 15974781, ...</msg>
<status status="PASS" starttime="20201110 08:34:51.468" endtime="20201110 08:34:51.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.481" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:51.479" endtime="20201110 08:34:51.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.486" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:51.483" endtime="20201110 08:34:51.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.474" endtime="20201110 08:34:51.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.496" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:51.494" endtime="20201110 08:34:51.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.500" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:51.498" endtime="20201110 08:34:51.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.489" endtime="20201110 08:34:51.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.510" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:51.508" endtime="20201110 08:34:51.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.515" level="INFO">VALUE: 15854637</msg>
<status status="PASS" starttime="20201110 08:34:51.513" endtime="20201110 08:34:51.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.503" endtime="20201110 08:34:51.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.525" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:51.523" endtime="20201110 08:34:51.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.530" level="INFO">VALUE: [15864786, 15874782, 15884782, 15894781, 15904781, 15914782, 15924782, 15934781, 15944781, 15954781, 15964782, 15974781, 15984781, 15994782, 16004781, 16014782, 16024781, 16034781, 16044781, 16054781, 16064782, 16074781, 16084781, 16094782, 16104781, 16114782, 16124781, 16134781, 16144782, 16154781, 16164782, 16174781, 16184781, 16194781, 16204781, 16214782, 16224782, 16234781, 16244781, 16254782, 16264781, 16274781, 16284781, 16294782, 16304782, 16314781, 16324782, 16334781, 16344781, 16354781, 16364781, 16374781, 16384781, 16394781, 16404782, 16414781, 16424781, 16434782, 16444781, 16454781, 16464782, 16474781, 16484781, 16494782, 16504781, 16514781, 16524781, 16534781, 16544782, 16554781, 16564781, 16574782, 16584781, 16594781, 16604781, 16614782, 16624781, 16634781, 16644782, 16654781, 16664781, 16674782, 16684781, 16694782, 16704781, 16714781, 16724782, 16734781, 16744781, 16754781, 16764782, 16774781, 16784781, 16794782, 16804781, 16814781, 16824781, 16834781, 16844782, 16854781]</msg>
<status status="PASS" starttime="20201110 08:34:51.528" endtime="20201110 08:34:51.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.518" endtime="20201110 08:34:51.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.548" endtime="20201110 08:34:51.843"></status>
</kw>
<msg timestamp="20201110 08:34:51.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032836597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.542" endtime="20201110 08:34:51.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032836597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.847" endtime="20201110 08:34:51.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.855" endtime="20201110 08:34:51.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.537" endtime="20201110 08:34:51.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.533" endtime="20201110 08:34:51.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.881" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:51.858" endtime="20201110 08:34:51.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.886" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:51.885" endtime="20201110 08:34:51.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.888" level="INFO">VALUE: 0.022725125</msg>
<status status="PASS" starttime="20201110 08:34:51.887" endtime="20201110 08:34:51.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.883" endtime="20201110 08:34:51.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.894" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:51.893" endtime="20201110 08:34:51.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.896" level="INFO">VALUE: [0.032836597, 0.042796014, 0.05275875, 0.062721389, 0.072685292, 0.082649597, 0.092612417, 0.102575125, 0.112538542, 0.122502639, 0.132466542, 0.142429236, 0.152392986, 0.162356472, 0.172319028, 0.182282528, 0.192244681, 0.202207958, 0.212171208, 0.222135208, 0.232098681, 0.242060875, 0.252024014, 0.261986986, 0.271950111, 0.281913806, 0.291876111, 0.301839903, 0.311804403, 0.321768014, 0.331732431, 0.341695083, 0.351658736, 0.361622764, 0.371587667, 0.381552778, 0.391517431, 0.401480903, 0.411445431, 0.421409611, 0.431372458, 0.441336014, 0.451300056, 0.461264625, 0.471227569, 0.481191708, 0.491156875, 0.501120111, 0.511083403, 0.521046486, 0.531009944, 0.540973069, 0.550935875, 0.560900014, 0.570864167, 0.580827625, 0.590792278, 0.600756611, 0.610719681, 0.620684375, 0.630648542, 0.640611125, 0.650575264, 0.660538861, 0.670502, 0.680465958, 0.690429861, 0.700393736, 0.710357333, 0.720320097, 0.730283861, 0.740246736, 0.750208792, 0.760171889, 0.770135278, 0.780098944, 0.790061361, 0.800025319, 0.809989, 0.819951264, 0.829914764, 0.839878111, 0.849840694, 0.859804028, 0.869765472, 0.879728125, 0.889690708, 0.899652125, 0.909614986, 0.919578042, 0.929541139, 0.939503069, 0.949465653, 0.95942825, 0.969389125, 0.979351139, 0.989313653, 0.999277097, 1.009240778, 1.019203444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:51.895" endtime="20201110 08:34:51.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.890" endtime="20201110 08:34:51.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.900" endtime="20201110 08:34:51.901"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.904" endtime="20201110 08:34:51.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.902" endtime="20201110 08:34:51.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.898" endtime="20201110 08:34:51.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.330" endtime="20201110 08:34:51.925"></status>
</kw>
<msg timestamp="20201110 08:34:51.925" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.934" endtime="20201110 08:34:54.041"></status>
</kw>
<msg timestamp="20201110 08:34:54.043" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18460581, 'start-iter': 1, 'wakeups': [18470730, 18480726, 18490725, 1...</msg>
<status status="PASS" starttime="20201110 08:34:51.932" endtime="20201110 08:34:54.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.048" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18460581, 'start-iter': 1, 'wakeups': [18470730, 18480726, 18490725, 1...</msg>
<status status="PASS" starttime="20201110 08:34:54.045" endtime="20201110 08:34:54.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.051" endtime="20201110 08:34:54.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.929" endtime="20201110 08:34:54.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.927" endtime="20201110 08:34:54.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.062" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 18460581, 'wakeups': [18470730, 18480726, 18490725, 18500725, 18510726, 18520725, 18530725, 18540726, 18550725, 18560725, 18570726, 18580725, ...</msg>
<status status="PASS" starttime="20201110 08:34:54.058" endtime="20201110 08:34:54.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.071" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:54.069" endtime="20201110 08:34:54.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.075" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:54.073" endtime="20201110 08:34:54.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.064" endtime="20201110 08:34:54.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.086" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:54.084" endtime="20201110 08:34:54.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.091" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:54.089" endtime="20201110 08:34:54.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.079" endtime="20201110 08:34:54.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.101" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:54.099" endtime="20201110 08:34:54.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.105" level="INFO">VALUE: 18460581</msg>
<status status="PASS" starttime="20201110 08:34:54.103" endtime="20201110 08:34:54.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.094" endtime="20201110 08:34:54.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.116" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:54.113" endtime="20201110 08:34:54.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.120" level="INFO">VALUE: [18470730, 18480726, 18490725, 18500725, 18510726, 18520725, 18530725, 18540726, 18550725, 18560725, 18570726, 18580725, 18590726, 18600725, 18610725, 18620726, 18630725, 18640725, 18650726, 18660725, 18670725, 18680726, 18690725, 18700725, 18710725, 18720726, 18730725, 18740726, 18750725, 18760725, 18770725, 18780726, 18790725, 18800726, 18810725, 18820725, 18830726, 18840725, 18850725, 18860726, 18870726, 18880725, 18890725, 18900725, 18910725, 18920725, 18930725, 18940725, 18950726, 18960725, 18970725, 18980725, 18990725, 19000725, 19010725, 19020726, 19030725, 19040725, 19050725, 19060726, 19070725, 19080726, 19090725, 19100725, 19110725, 19120726, 19130725, 19140725, 19150725, 19160725, 19170725, 19180725, 19190726, 19200726, 19210726, 19220726, 19230725, 19240726, 19250725, 19260726, 19270725, 19280726, 19290725, 19300725, 19310726, 19320725, 19330725, 19340726, 19350726, 19360725, 19370725, 19380725, 19390725, 19400726, 19410725, 19420725, 19430725, 19440726, 19450726, 19460725]</msg>
<status status="PASS" starttime="20201110 08:34:54.118" endtime="20201110 08:34:54.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.108" endtime="20201110 08:34:54.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.136" endtime="20201110 08:34:54.436"></status>
</kw>
<msg timestamp="20201110 08:34:54.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.133" endtime="20201110 08:34:54.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031187806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:54.440" endtime="20201110 08:34:54.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.447" endtime="20201110 08:34:54.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.127" endtime="20201110 08:34:54.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.123" endtime="20201110 08:34:54.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.475" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:54.452" endtime="20201110 08:34:54.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.479" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:54.478" endtime="20201110 08:34:54.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.481" level="INFO">VALUE: 0.021074347</msg>
<status status="PASS" starttime="20201110 08:34:54.480" endtime="20201110 08:34:54.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.476" endtime="20201110 08:34:54.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.487" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:54.486" endtime="20201110 08:34:54.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.489" level="INFO">VALUE: [0.031187806, 0.041147778, 0.051111139, 0.061076486, 0.071041736, 0.081004875, 0.090969264, 0.100934083, 0.110897694, 0.120861917, 0.130825847, 0.140789097, 0.150754181, 0.160717181, 0.170682042, 0.180646597, 0.190608708, 0.20057225, 0.210536208, 0.220499097, 0.230463931, 0.240428167, 0.250391125, 0.260355375, 0.270319944, 0.28028475, 0.290248208, 0.300212194, 0.310175, 0.320139097, 0.330103806, 0.340068181, 0.350031278, 0.359994778, 0.369957, 0.379920542, 0.389883653, 0.399845944, 0.409809528, 0.419773486, 0.429736, 0.439698083, 0.449661458, 0.459624667, 0.469588167, 0.479551458, 0.489514514, 0.499477986, 0.509441639, 0.519403931, 0.529367208, 0.539330264, 0.549293403, 0.559256736, 0.569220208, 0.579183611, 0.589145792, 0.599109139, 0.609072667, 0.619035736, 0.628997819, 0.638961153, 0.648922764, 0.658885806, 0.668849208, 0.678812486, 0.688775, 0.698738333, 0.708702208, 0.718665222, 0.728628292, 0.738591958, 0.748555917, 0.758519278, 0.768481694, 0.778443597, 0.788406528, 0.798369944, 0.808332125, 0.818295361, 0.828256778, 0.838219389, 0.848180819, 0.858144278, 0.868107458, 0.878069083, 0.888032042, 0.897995708, 0.907957569, 0.917919278, 0.927882, 0.9378445, 0.947807569, 0.957770556, 0.967731431, 0.977693764, 0.987656514, 0.997619764, 1.007582014, 1.017544236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:54.488" endtime="20201110 08:34:54.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.483" endtime="20201110 08:34:54.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.492" endtime="20201110 08:34:54.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.496" endtime="20201110 08:34:54.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.494" endtime="20201110 08:34:54.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.491" endtime="20201110 08:34:54.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.926" endtime="20201110 08:34:54.516"></status>
</kw>
<msg timestamp="20201110 08:34:54.517" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.524" endtime="20201110 08:34:56.630"></status>
</kw>
<msg timestamp="20201110 08:34:56.632" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21060891, 'start-iter': 1, 'wakeups': [21071040, 21081036, 21091035, 2...</msg>
<status status="PASS" starttime="20201110 08:34:54.523" endtime="20201110 08:34:56.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.637" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 21060891, 'start-iter': 1, 'wakeups': [21071040, 21081036, 21091035, 2...</msg>
<status status="PASS" starttime="20201110 08:34:56.634" endtime="20201110 08:34:56.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.640" endtime="20201110 08:34:56.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.520" endtime="20201110 08:34:56.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.519" endtime="20201110 08:34:56.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.651" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'start-time': 21060891, 'wakeups': [21071040, 21081036, 21091035, 21101036, 21111035, 21121035, 21131035, 21141035, 21151035, 21161035, 21171035, 21181035, ...</msg>
<status status="PASS" starttime="20201110 08:34:56.647" endtime="20201110 08:34:56.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.659" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:56.657" endtime="20201110 08:34:56.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.663" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:56.661" endtime="20201110 08:34:56.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.652" endtime="20201110 08:34:56.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.673" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:56.671" endtime="20201110 08:34:56.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.677" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:56.675" endtime="20201110 08:34:56.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.666" endtime="20201110 08:34:56.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.692" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:56.685" endtime="20201110 08:34:56.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.697" level="INFO">VALUE: 21060891</msg>
<status status="PASS" starttime="20201110 08:34:56.695" endtime="20201110 08:34:56.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.680" endtime="20201110 08:34:56.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.707" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:56.704" endtime="20201110 08:34:56.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.711" level="INFO">VALUE: [21071040, 21081036, 21091035, 21101036, 21111035, 21121035, 21131035, 21141035, 21151035, 21161035, 21171035, 21181035, 21191036, 21201035, 21211035, 21221036, 21231036, 21241035, 21251035, 21261035, 21271035, 21281036, 21291035, 21301035, 21311035, 21321035, 21331035, 21341035, 21351035, 21361036, 21371035, 21381035, 21391035, 21401035, 21411035, 21421036, 21431035, 21441036, 21451036, 21461035, 21471035, 21481035, 21491035, 21501035, 21511035, 21521036, 21531035, 21541035, 21551036, 21561036, 21571035, 21581035, 21591035, 21601035, 21611036, 21621035, 21631036, 21641036, 21651035, 21661035, 21671036, 21681036, 21691035, 21701035, 21711036, 21721035, 21731035, 21741035, 21751036, 21761035, 21771036, 21781035, 21791035, 21801035, 21811036, 21821035, 21831035, 21841035, 21851036, 21861035, 21871036, 21881035, 21891035, 21901035, 21911035, 21921035, 21931036, 21941035, 21951035, 21961035, 21971036, 21981035, 21991035, 22001035, 22011036, 22021036, 22031035, 22041035, 22051035, 22061035]</msg>
<status status="PASS" starttime="20201110 08:34:56.709" endtime="20201110 08:34:56.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.700" endtime="20201110 08:34:56.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.726" endtime="20201110 08:34:57.023"></status>
</kw>
<msg timestamp="20201110 08:34:57.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029854903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.723" endtime="20201110 08:34:57.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019743278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029854903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.027" endtime="20201110 08:34:57.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.035" endtime="20201110 08:34:57.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.718" endtime="20201110 08:34:57.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.714" endtime="20201110 08:34:57.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.062" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:57.039" endtime="20201110 08:34:57.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.066" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:34:57.065" endtime="20201110 08:34:57.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.068" level="INFO">VALUE: 0.019743278</msg>
<status status="PASS" starttime="20201110 08:34:57.068" endtime="20201110 08:34:57.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.063" endtime="20201110 08:34:57.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.074" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:57.073" endtime="20201110 08:34:57.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.076" level="INFO">VALUE: [0.029854903, 0.039813958, 0.049776806, 0.059740083, 0.069701819, 0.079664917, 0.089628458, 0.099592111, 0.109555181, 0.119517903, 0.129481264, 0.139445319, 0.149408931, 0.159371389, 0.169335472, 0.179299722, 0.189261833, 0.199223722, 0.209186583, 0.219150139, 0.229113667, 0.239076958, 0.249038375, 0.259001875, 0.268965056, 0.278928236, 0.288891694, 0.298855194, 0.308818847, 0.318782972, 0.32874525, 0.338708292, 0.3486715, 0.358635111, 0.368598681, 0.378562417, 0.388525167, 0.398489389, 0.408451917, 0.418414486, 0.428377611, 0.438340819, 0.448303403, 0.458266486, 0.468229958, 0.478193069, 0.488155083, 0.498118889, 0.508082972, 0.518045889, 0.528008542, 0.537972194, 0.547935861, 0.557899611, 0.567863153, 0.577826181, 0.587790222, 0.597752569, 0.607714694, 0.617678569, 0.627643194, 0.637605569, 0.647567319, 0.657530167, 0.667493, 0.677454014, 0.687416889, 0.697380931, 0.707344806, 0.717308264, 0.727272069, 0.737234694, 0.747197056, 0.7571605, 0.767124278, 0.777086764, 0.787050236, 0.797014458, 0.806978153, 0.816941125, 0.826904542, 0.836866347, 0.846828903, 0.856791583, 0.866754472, 0.876717833, 0.886680903, 0.896642861, 0.906605347, 0.916568694, 0.926531778, 0.936493042, 0.946455347, 0.956418056, 0.966381208, 0.976343069, 0.986304569, 0.996266847, 1.006229611, 1.016192597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:57.075" endtime="20201110 08:34:57.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.070" endtime="20201110 08:34:57.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.079" endtime="20201110 08:34:57.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.083" endtime="20201110 08:34:57.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.081" endtime="20201110 08:34:57.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.078" endtime="20201110 08:34:57.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.517" endtime="20201110 08:34:57.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.328" endtime="20201110 08:34:57.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:49.328" endtime="20201110 08:34:57.104"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:57.106" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.114" endtime="20201110 08:34:59.220"></status>
</kw>
<msg timestamp="20201110 08:34:59.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23660531, 'start-iter': 1, 'wakeups': [23670736, 23680729, 23690729, 2...</msg>
<status status="PASS" starttime="20201110 08:34:57.113" endtime="20201110 08:34:59.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.227" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23660531, 'start-iter': 1, 'wakeups': [23670736, 23680729, 23690729, 2...</msg>
<status status="PASS" starttime="20201110 08:34:59.223" endtime="20201110 08:34:59.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.229" endtime="20201110 08:34:59.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.110" endtime="20201110 08:34:59.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.108" endtime="20201110 08:34:59.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.240" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 23660531, 'wakeups': [23670736, 23680729, 23690729, 23700731, 23710729, 23720729, 23730729, 23740729, 23750731, 23760731, 23770729, 23780729, ...</msg>
<status status="PASS" starttime="20201110 08:34:59.236" endtime="20201110 08:34:59.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.251" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:59.246" endtime="20201110 08:34:59.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.255" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:59.253" endtime="20201110 08:34:59.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.242" endtime="20201110 08:34:59.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.265" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:59.263" endtime="20201110 08:34:59.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.269" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:59.267" endtime="20201110 08:34:59.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.258" endtime="20201110 08:34:59.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.279" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:34:59.277" endtime="20201110 08:34:59.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.283" level="INFO">VALUE: 23660531</msg>
<status status="PASS" starttime="20201110 08:34:59.281" endtime="20201110 08:34:59.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.272" endtime="20201110 08:34:59.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.293" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:59.291" endtime="20201110 08:34:59.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.298" level="INFO">VALUE: [23670736, 23680729, 23690729, 23700731, 23710729, 23720729, 23730729, 23740729, 23750731, 23760731, 23770729, 23780729, 23790729, 23800731, 23810731, 23820731, 23830731, 23840731, 23850731, 23860731, 23870731, 23880731, 23890729, 23900729, 23910729, 23920729, 23930729, 23940731, 23950731, 23960731, 23970731, 23980729, 23990729, 24000729, 24010729, 24020729, 24030729, 24040731, 24050731, 24060731, 24070731, 24080731, 24090729, 24100729, 24110729, 24120729, 24130731, 24140731, 24150731, 24160731, 24170731, 24180729, 24190729, 24200729, 24210729, 24220729, 24230729, 24240731, 24250731, 24260731, 24270731, 24280731, 24290731, 24300731, 24310731, 24320731, 24330731, 24340731, 24350731, 24360731, 24370731, 24380731, 24390731, 24400731, 24410729, 24420731, 24430731, 24440731, 24450729, 24460729, 24470729, 24480731, 24490731, 24500729, 24510729, 24520731, 24530729, 24540729, 24550729, 24560729, 24570729, 24580729, 24590731, 24600731, 24610729, 24620729, 24630729, 24640731, 24650731, 24660729]</msg>
<status status="PASS" starttime="20201110 08:34:59.295" endtime="20201110 08:34:59.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.286" endtime="20201110 08:34:59.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.314" endtime="20201110 08:34:59.612"></status>
</kw>
<msg timestamp="20201110 08:34:59.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.311" endtime="20201110 08:34:59.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032647097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:59.616" endtime="20201110 08:34:59.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.623" endtime="20201110 08:34:59.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.305" endtime="20201110 08:34:59.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.302" endtime="20201110 08:34:59.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.650" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:34:59.626" endtime="20201110 08:34:59.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.655" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:34:59.654" endtime="20201110 08:34:59.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.657" level="INFO">VALUE: 0.022481125</msg>
<status status="PASS" starttime="20201110 08:34:59.656" endtime="20201110 08:34:59.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.651" endtime="20201110 08:34:59.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.662" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:59.661" endtime="20201110 08:34:59.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.664" level="INFO">VALUE: [0.032647097, 0.042600944, 0.052561486, 0.062524403, 0.072482764, 0.082443792, 0.092404889, 0.102365528, 0.11232825, 0.122288458, 0.132246917, 0.142207611, 0.152168875, 0.162132083, 0.172093319, 0.182054111, 0.192015417, 0.201976667, 0.211937514, 0.221898042, 0.231858389, 0.24181875, 0.251777694, 0.261738458, 0.271699347, 0.281660528, 0.291621333, 0.301583319, 0.311543528, 0.3215045, 0.331465431, 0.341424458, 0.351385208, 0.361346458, 0.371307514, 0.38126875, 0.391230125, 0.401193833, 0.41115525, 0.421116875, 0.431077847, 0.441039681, 0.450999778, 0.460961444, 0.470922917, 0.480884653, 0.490848139, 0.500809347, 0.510770153, 0.520730528, 0.530691222, 0.540650542, 0.550611417, 0.560572319, 0.570532472, 0.580492819, 0.590453514, 0.600415889, 0.610376569, 0.620337361, 0.630298097, 0.640258222, 0.650218667, 0.660179806, 0.670141792, 0.680103486, 0.690064819, 0.700026319, 0.709987944, 0.719949264, 0.72991025, 0.739871139, 0.749831875, 0.759792097, 0.769751222, 0.779714431, 0.789675556, 0.799637417, 0.809597569, 0.819559097, 0.82952075, 0.839484167, 0.849446778, 0.859407347, 0.869369611, 0.879333806, 0.889293708, 0.899255, 0.909216486, 0.919178361, 0.929140319, 0.939102306, 0.949066583, 0.959028819, 0.968988722, 0.978950931, 0.988912917, 0.998876778, 1.008839083, 1.018799458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:59.663" endtime="20201110 08:34:59.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.658" endtime="20201110 08:34:59.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.667" endtime="20201110 08:34:59.668"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.670" endtime="20201110 08:34:59.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.669" endtime="20201110 08:34:59.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.666" endtime="20201110 08:34:59.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.107" endtime="20201110 08:34:59.691"></status>
</kw>
<msg timestamp="20201110 08:34:59.692" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.700" endtime="20201110 08:35:01.806"></status>
</kw>
<msg timestamp="20201110 08:35:01.807" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26255976, 'start-iter': 1, 'wakeups': [26266181, 26276174, 26286174, 2...</msg>
<status status="PASS" starttime="20201110 08:34:59.698" endtime="20201110 08:35:01.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.814" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26255976, 'start-iter': 1, 'wakeups': [26266181, 26276174, 26286174, 2...</msg>
<status status="PASS" starttime="20201110 08:35:01.810" endtime="20201110 08:35:01.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.817" endtime="20201110 08:35:01.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.696" endtime="20201110 08:35:01.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.694" endtime="20201110 08:35:01.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:01.830" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 26255976, 'wakeups': [26266181, 26276174, 26286174, 26296174, 26306174, 26316176, 26326176, 26336176, 26346176, 26356176, 26366176, 26376176, ...</msg>
<status status="PASS" starttime="20201110 08:35:01.825" endtime="20201110 08:35:01.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.840" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:01.837" endtime="20201110 08:35:01.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.845" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:01.843" endtime="20201110 08:35:01.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.832" endtime="20201110 08:35:01.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.857" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:01.854" endtime="20201110 08:35:01.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.861" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:01.859" endtime="20201110 08:35:01.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.849" endtime="20201110 08:35:01.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.873" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:01.869" endtime="20201110 08:35:01.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.878" level="INFO">VALUE: 26255976</msg>
<status status="PASS" starttime="20201110 08:35:01.876" endtime="20201110 08:35:01.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.864" endtime="20201110 08:35:01.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.888" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:01.886" endtime="20201110 08:35:01.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:01.892" level="INFO">VALUE: [26266181, 26276174, 26286174, 26296174, 26306174, 26316176, 26326176, 26336176, 26346176, 26356176, 26366176, 26376176, 26386176, 26396176, 26406174, 26416176, 26426176, 26436176, 26446176, 26456174, 26466176, 26476176, 26486174, 26496174, 26506174, 26516174, 26526174, 26536174, 26546174, 26556174, 26566174, 26576174, 26586174, 26596174, 26606176, 26616176, 26626174, 26636174, 26646174, 26656176, 26666176, 26676176, 26686176, 26696176, 26706176, 26716176, 26726176, 26736176, 26746176, 26756174, 26766174, 26776174, 26786174, 26796176, 26806176, 26816174, 26826174, 26836174, 26846174, 26856174, 26866176, 26876176, 26886176, 26896176, 26906176, 26916176, 26926176, 26936176, 26946176, 26956176, 26966176, 26976176, 26986176, 26996174, 27006176, 27016176, 27026174, 27036176, 27046174, 27056176, 27066176, 27076176, 27086176, 27096176, 27106176, 27116176, 27126176, 27136176, 27146176, 27156174, 27166174, 27176174, 27186174, 27196174, 27206176, 27216176, 27226176, 27236176, 27246174, 27256176]</msg>
<status status="PASS" starttime="20201110 08:35:01.890" endtime="20201110 08:35:01.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.881" endtime="20201110 08:35:01.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:01.908" endtime="20201110 08:35:02.201"></status>
</kw>
<msg timestamp="20201110 08:35:02.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030242542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:01.905" endtime="20201110 08:35:02.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030242542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.205" endtime="20201110 08:35:02.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.212" endtime="20201110 08:35:02.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.900" endtime="20201110 08:35:02.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:01.896" endtime="20201110 08:35:02.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.238" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:02.216" endtime="20201110 08:35:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.243" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:02.242" endtime="20201110 08:35:02.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.245" level="INFO">VALUE: 0.020074111</msg>
<status status="PASS" starttime="20201110 08:35:02.244" endtime="20201110 08:35:02.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.239" endtime="20201110 08:35:02.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.251" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:02.249" endtime="20201110 08:35:02.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.253" level="INFO">VALUE: [0.030242542, 0.040199514, 0.050163111, 0.060126125, 0.070089319, 0.080054819, 0.090018056, 0.099981681, 0.109944264, 0.119907111, 0.129870333, 0.139834083, 0.149797958, 0.159762042, 0.169724139, 0.179690167, 0.189653917, 0.199617875, 0.209581569, 0.219543583, 0.229509542, 0.239472972, 0.249434, 0.25939675, 0.269358986, 0.279321528, 0.289284153, 0.299246306, 0.309208611, 0.319170819, 0.329133569, 0.339095847, 0.349058069, 0.359020681, 0.368984569, 0.378946417, 0.388906292, 0.398868167, 0.408830194, 0.418794403, 0.428756292, 0.438718403, 0.448680625, 0.458642847, 0.468604792, 0.478567444, 0.488530208, 0.498493236, 0.508456764, 0.518418181, 0.5283815, 0.538344722, 0.548307972, 0.558272542, 0.568235444, 0.578195792, 0.588158958, 0.598121833, 0.608084597, 0.618047403, 0.628013125, 0.637976472, 0.647939347, 0.657902194, 0.66786575, 0.677829167, 0.68779175, 0.697754278, 0.707716569, 0.717679347, 0.727642014, 0.737604722, 0.747567236, 0.757528194, 0.767493625, 0.777456667, 0.787418361, 0.797383833, 0.807344542, 0.817309667, 0.827272764, 0.837235764, 0.847198292, 0.857160986, 0.867123458, 0.877086653, 0.887049556, 0.897012361, 0.906975181, 0.91693575, 0.926898431, 0.936860986, 0.946823931, 0.956787139, 0.966752514, 0.976715625, 0.986678861, 0.996641819, 1.006602986, 1.016568042] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:02.252" endtime="20201110 08:35:02.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.246" endtime="20201110 08:35:02.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.256" endtime="20201110 08:35:02.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.259" endtime="20201110 08:35:02.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.258" endtime="20201110 08:35:02.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.254" endtime="20201110 08:35:02.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.692" endtime="20201110 08:35:02.280"></status>
</kw>
<msg timestamp="20201110 08:35:02.280" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.288" endtime="20201110 08:35:04.394"></status>
</kw>
<msg timestamp="20201110 08:35:04.396" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28854379, 'start-iter': 1, 'wakeups': [28864584, 28874577, 28884577, 2...</msg>
<status status="PASS" starttime="20201110 08:35:02.287" endtime="20201110 08:35:04.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.403" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28854379, 'start-iter': 1, 'wakeups': [28864584, 28874577, 28884577, 2...</msg>
<status status="PASS" starttime="20201110 08:35:04.398" endtime="20201110 08:35:04.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.406" endtime="20201110 08:35:04.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.284" endtime="20201110 08:35:04.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.282" endtime="20201110 08:35:04.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.417" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'start-time': 28854379, 'wakeups': [28864584, 28874577, 28884577, 28894577, 28904579, 28914579, 28924577, 28934577, 28944577, 28954577, 28964577, 28974577, ...</msg>
<status status="PASS" starttime="20201110 08:35:04.413" endtime="20201110 08:35:04.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.426" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:04.424" endtime="20201110 08:35:04.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.431" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:04.429" endtime="20201110 08:35:04.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.419" endtime="20201110 08:35:04.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.441" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:04.439" endtime="20201110 08:35:04.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.445" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:04.443" endtime="20201110 08:35:04.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.434" endtime="20201110 08:35:04.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.455" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:04.453" endtime="20201110 08:35:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.460" level="INFO">VALUE: 28854379</msg>
<status status="PASS" starttime="20201110 08:35:04.458" endtime="20201110 08:35:04.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.448" endtime="20201110 08:35:04.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.470" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:04.468" endtime="20201110 08:35:04.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.474" level="INFO">VALUE: [28864584, 28874577, 28884577, 28894577, 28904579, 28914579, 28924577, 28934577, 28944577, 28954577, 28964577, 28974577, 28984579, 28994579, 29004579, 29014577, 29024577, 29034577, 29044577, 29054577, 29064577, 29074577, 29084577, 29094577, 29104579, 29114577, 29124577, 29134579, 29144579, 29154577, 29164577, 29174577, 29184577, 29194577, 29204579, 29214579, 29224577, 29234577, 29244577, 29254577, 29264577, 29274577, 29284577, 29294577, 29304577, 29314577, 29324577, 29334579, 29344577, 29354577, 29364577, 29374577, 29384579, 29394579, 29404579, 29414577, 29424577, 29434579, 29444579, 29454579, 29464579, 29474579, 29484579, 29494579, 29504579, 29514579, 29524579, 29534579, 29544579, 29554577, 29564577, 29574579, 29584579, 29594579, 29604579, 29614577, 29624577, 29634577, 29644577, 29654577, 29664577, 29674577, 29684577, 29694577, 29704577, 29714577, 29724577, 29734579, 29744579, 29754579, 29764577, 29774579, 29784579, 29794579, 29804579, 29814579, 29824579, 29834579, 29844579, 29854579]</msg>
<status status="PASS" starttime="20201110 08:35:04.472" endtime="20201110 08:35:04.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.462" endtime="20201110 08:35:04.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.484" endtime="20201110 08:35:04.775"></status>
</kw>
<msg timestamp="20201110 08:35:04.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029915569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.483" endtime="20201110 08:35:04.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019747556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029915569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.779" endtime="20201110 08:35:04.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.787" endtime="20201110 08:35:04.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.479" endtime="20201110 08:35:04.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.477" endtime="20201110 08:35:04.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.814" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:04.790" endtime="20201110 08:35:04.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.818" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:04.817" endtime="20201110 08:35:04.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.820" level="INFO">VALUE: 0.019747556</msg>
<status status="PASS" starttime="20201110 08:35:04.819" endtime="20201110 08:35:04.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.815" endtime="20201110 08:35:04.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.826" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:04.825" endtime="20201110 08:35:04.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.828" level="INFO">VALUE: [0.029915569, 0.039872292, 0.049836056, 0.059800167, 0.069766833, 0.079731375, 0.089693806, 0.099658361, 0.109623153, 0.119587833, 0.129552556, 0.139516819, 0.149483292, 0.159447556, 0.16941175, 0.179373708, 0.189337792, 0.199301847, 0.209266167, 0.219230667, 0.229195278, 0.239159583, 0.249123472, 0.2590875, 0.269054069, 0.279015972, 0.288980083, 0.298945903, 0.308910028, 0.318872264, 0.328836278, 0.338799403, 0.348762667, 0.358726083, 0.368691208, 0.378654208, 0.388615, 0.398578347, 0.408541222, 0.418504625, 0.428468278, 0.438431375, 0.448394556, 0.458357792, 0.468321083, 0.478283944, 0.488246917, 0.498212556, 0.508173903, 0.518137847, 0.528101014, 0.538064403, 0.548029292, 0.557992597, 0.567956236, 0.577917431, 0.587881181, 0.597846944, 0.607810278, 0.617773611, 0.627736417, 0.637698944, 0.647661806, 0.65762475, 0.667587875, 0.677550569, 0.687512972, 0.697476569, 0.707440542, 0.717402361, 0.727365556, 0.737330625, 0.747293597, 0.757256264, 0.767219, 0.777180389, 0.787143306, 0.797106181, 0.807068764, 0.817031319, 0.826994069, 0.836957056, 0.846920333, 0.856883583, 0.866846861, 0.876809903, 0.886773278, 0.896738486, 0.906701722, 0.916665014, 0.926626292, 0.936591181, 0.946554556, 0.956517736, 0.966481236, 0.976444806, 0.986408264, 0.996371167, 1.006333833, 1.016296903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:04.827" endtime="20201110 08:35:04.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.822" endtime="20201110 08:35:04.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.831" endtime="20201110 08:35:04.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:04.834" endtime="20201110 08:35:04.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.833" endtime="20201110 08:35:04.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.829" endtime="20201110 08:35:04.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.281" endtime="20201110 08:35:04.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.105" endtime="20201110 08:35:04.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.104" endtime="20201110 08:35:04.855"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:04.858" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.867" endtime="20201110 08:35:06.973"></status>
</kw>
<msg timestamp="20201110 08:35:06.974" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31442522, 'start-iter': 1, 'wakeups': [31452789, 31462784, 31472784, 3...</msg>
<status status="PASS" starttime="20201110 08:35:04.865" endtime="20201110 08:35:06.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:06.980" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31442522, 'start-iter': 1, 'wakeups': [31452789, 31462784, 31472784, 3...</msg>
<status status="PASS" starttime="20201110 08:35:06.976" endtime="20201110 08:35:06.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:06.982" endtime="20201110 08:35:06.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.862" endtime="20201110 08:35:06.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.860" endtime="20201110 08:35:06.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:06.994" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 31442522, 'wakeups': [31452789, 31462784, 31472784, 31482784, 31492784, 31502784, 31512784, 31522784, 31532782, 31542784, 31552784, 31562784, ...</msg>
<status status="PASS" starttime="20201110 08:35:06.990" endtime="20201110 08:35:06.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.005" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:07.003" endtime="20201110 08:35:07.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.010" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:07.008" endtime="20201110 08:35:07.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:06.997" endtime="20201110 08:35:07.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.022" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:07.020" endtime="20201110 08:35:07.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.028" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:07.025" endtime="20201110 08:35:07.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.014" endtime="20201110 08:35:07.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.040" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:07.037" endtime="20201110 08:35:07.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.045" level="INFO">VALUE: 31442522</msg>
<status status="PASS" starttime="20201110 08:35:07.042" endtime="20201110 08:35:07.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.031" endtime="20201110 08:35:07.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.054" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:07.052" endtime="20201110 08:35:07.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.059" level="INFO">VALUE: [31452789, 31462784, 31472784, 31482784, 31492784, 31502784, 31512784, 31522784, 31532782, 31542784, 31552784, 31562784, 31572784, 31582784, 31592784, 31602784, 31612784, 31622784, 31632784, 31642784, 31652784, 31662784, 31672784, 31682784, 31692784, 31702784, 31712784, 31722784, 31732782, 31742784, 31752784, 31762784, 31772784, 31782784, 31792784, 31802782, 31812784, 31822784, 31832784, 31842784, 31852784, 31862782, 31872784, 31882784, 31892784, 31902784, 31912784, 31922784, 31932784, 31942782, 31952784, 31962784, 31972784, 31982784, 31992784, 32002784, 32012784, 32022784, 32032784, 32042784, 32052782, 32062782, 32072784, 32082784, 32092784, 32102784, 32112784, 32122784, 32132782, 32142784, 32152784, 32162784, 32172784, 32182784, 32192784, 32202784, 32212784, 32222784, 32232784, 32242784, 32252784, 32262784, 32272784, 32282784, 32292784, 32302784, 32312784, 32322784, 32332784, 32342784, 32352784, 32362784, 32372784, 32382784, 32392784, 32402784, 32412782, 32422784, 32432784, 32442784]</msg>
<status status="PASS" starttime="20201110 08:35:07.057" endtime="20201110 08:35:07.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.048" endtime="20201110 08:35:07.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.074" endtime="20201110 08:35:07.366"></status>
</kw>
<msg timestamp="20201110 08:35:07.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.071" endtime="20201110 08:35:07.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023521042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033750347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.370" endtime="20201110 08:35:07.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.378" endtime="20201110 08:35:07.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.066" endtime="20201110 08:35:07.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.062" endtime="20201110 08:35:07.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.404" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:07.381" endtime="20201110 08:35:07.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.409" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:07.408" endtime="20201110 08:35:07.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.411" level="INFO">VALUE: 0.023521042</msg>
<status status="PASS" starttime="20201110 08:35:07.410" endtime="20201110 08:35:07.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.406" endtime="20201110 08:35:07.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.417" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:07.416" endtime="20201110 08:35:07.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.419" level="INFO">VALUE: [0.033750347, 0.043709306, 0.053673264, 0.063637292, 0.073601431, 0.083565597, 0.093529444, 0.103493542, 0.113455417, 0.123421194, 0.133385292, 0.143349042, 0.153312389, 0.163275875, 0.173239375, 0.183203111, 0.193166722, 0.203130861, 0.213095319, 0.223059, 0.233022722, 0.242986292, 0.252950111, 0.262913319, 0.272877167, 0.282840542, 0.292804042, 0.302767583, 0.312729417, 0.322693792, 0.332656333, 0.342619111, 0.352582306, 0.362545417, 0.372508986, 0.382471403, 0.392436778, 0.402400292, 0.412363597, 0.422327569, 0.432291597, 0.442253889, 0.452219042, 0.462182694, 0.472146153, 0.482109667, 0.492072583, 0.502036125, 0.511999222, 0.521961417, 0.531926528, 0.541890375, 0.551854764, 0.561818806, 0.571782569, 0.581747069, 0.591711569, 0.601676236, 0.611640792, 0.621606153, 0.631568792, 0.641532639, 0.651497958, 0.661461806, 0.671425208, 0.681388972, 0.691353194, 0.701317431, 0.711280181, 0.721245639, 0.731209931, 0.741173847, 0.751137806, 0.761101097, 0.771064583, 0.781028986, 0.790993028, 0.800957514, 0.810922403, 0.820886611, 0.830850667, 0.840815, 0.850779153, 0.860742486, 0.870706722, 0.880670583, 0.890634708, 0.900598833, 0.910562375, 0.920525917, 0.930490181, 0.940454292, 0.950418792, 0.960382847, 0.970347097, 0.980311181, 0.990273819, 1.000239542, 1.010203306, 1.020167125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:07.418" endtime="20201110 08:35:07.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.413" endtime="20201110 08:35:07.420"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.422" endtime="20201110 08:35:07.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:07.425" endtime="20201110 08:35:07.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.424" endtime="20201110 08:35:07.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.420" endtime="20201110 08:35:07.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.859" endtime="20201110 08:35:07.446"></status>
</kw>
<msg timestamp="20201110 08:35:07.446" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.454" endtime="20201110 08:35:09.560"></status>
</kw>
<msg timestamp="20201110 08:35:09.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34039158, 'start-iter': 1, 'wakeups': [34049426, 34059420, 34069420, 3...</msg>
<status status="PASS" starttime="20201110 08:35:07.452" endtime="20201110 08:35:09.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.567" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 34039158, 'start-iter': 1, 'wakeups': [34049426, 34059420, 34069420, 3...</msg>
<status status="PASS" starttime="20201110 08:35:09.563" endtime="20201110 08:35:09.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.569" endtime="20201110 08:35:09.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.450" endtime="20201110 08:35:09.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.448" endtime="20201110 08:35:09.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.580" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 34039158, 'wakeups': [34049426, 34059420, 34069420, 34079420, 34089420, 34099420, 34109420, 34119420, 34129420, 34139420, 34149420, 34159420, ...</msg>
<status status="PASS" starttime="20201110 08:35:09.576" endtime="20201110 08:35:09.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.591" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:09.587" endtime="20201110 08:35:09.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.595" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:09.593" endtime="20201110 08:35:09.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.582" endtime="20201110 08:35:09.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.606" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:09.604" endtime="20201110 08:35:09.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.610" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:09.608" endtime="20201110 08:35:09.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.599" endtime="20201110 08:35:09.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.620" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.618" endtime="20201110 08:35:09.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.624" level="INFO">VALUE: 34039158</msg>
<status status="PASS" starttime="20201110 08:35:09.622" endtime="20201110 08:35:09.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.613" endtime="20201110 08:35:09.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.634" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.632" endtime="20201110 08:35:09.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.639" level="INFO">VALUE: [34049426, 34059420, 34069420, 34079420, 34089420, 34099420, 34109420, 34119420, 34129420, 34139420, 34149420, 34159420, 34169418, 34179420, 34189420, 34199420, 34209420, 34219420, 34229420, 34239420, 34249420, 34259420, 34269420, 34279418, 34289420, 34299420, 34309418, 34319420, 34329420, 34339420, 34349420, 34359420, 34369420, 34379420, 34389420, 34399420, 34409420, 34419420, 34429420, 34439418, 34449420, 34459420, 34469420, 34479420, 34489420, 34499420, 34509420, 34519420, 34529420, 34539420, 34549420, 34559420, 34569420, 34579420, 34589420, 34599420, 34609420, 34619420, 34629420, 34639420, 34649420, 34659420, 34669418, 34679420, 34689420, 34699418, 34709420, 34719420, 34729420, 34739420, 34749420, 34759418, 34769420, 34779420, 34789420, 34799420, 34809418, 34819420, 34829420, 34839420, 34849420, 34859420, 34869420, 34879420, 34889420, 34899420, 34909418, 34919420, 34929420, 34939420, 34949420, 34959418, 34969420, 34979420, 34989420, 34999420, 35009420, 35019418, 35029420, 35039420]</msg>
<status status="PASS" starttime="20201110 08:35:09.636" endtime="20201110 08:35:09.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.627" endtime="20201110 08:35:09.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.654" endtime="20201110 08:35:09.948"></status>
</kw>
<msg timestamp="20201110 08:35:09.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029925653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.651" endtime="20201110 08:35:09.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029925653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:09.952" endtime="20201110 08:35:09.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:09.959" endtime="20201110 08:35:09.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.645" endtime="20201110 08:35:09.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.642" endtime="20201110 08:35:09.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:09.986" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:09.962" endtime="20201110 08:35:09.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.991" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:09.990" endtime="20201110 08:35:09.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.993" level="INFO">VALUE: 0.019697597</msg>
<status status="PASS" starttime="20201110 08:35:09.992" endtime="20201110 08:35:09.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.987" endtime="20201110 08:35:09.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:09.998" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:09.997" endtime="20201110 08:35:09.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.001" level="INFO">VALUE: [0.029925653, 0.039882278, 0.049844597, 0.059807764, 0.069770361, 0.079733222, 0.089696111, 0.099658542, 0.109621375, 0.119584194, 0.129547042, 0.139509833, 0.149470764, 0.159434556, 0.169397736, 0.179360944, 0.189324028, 0.199286833, 0.209249306, 0.219211514, 0.229173681, 0.239136319, 0.249098931, 0.259060444, 0.269024931, 0.278987778, 0.288949431, 0.298914653, 0.308877875, 0.318841056, 0.328803694, 0.338766514, 0.348729028, 0.358691722, 0.368654097, 0.378616944, 0.388579681, 0.398542292, 0.408505306, 0.418467347, 0.428431972, 0.438395319, 0.448358694, 0.458321333, 0.468283931, 0.478246583, 0.488209333, 0.498172486, 0.508136361, 0.518100375, 0.528064667, 0.538028861, 0.547993111, 0.557957556, 0.567922139, 0.577886139, 0.587850389, 0.597814264, 0.607778153, 0.617742278, 0.627706347, 0.637670139, 0.647632625, 0.657598375, 0.667562917, 0.677525611, 0.687491417, 0.697455792, 0.707420361, 0.7173855, 0.727350208, 0.737312542, 0.747277389, 0.757241208, 0.767204958, 0.777169028, 0.787131431, 0.797097, 0.807061347, 0.817025764, 0.826989431, 0.836953403, 0.846917389, 0.856881333, 0.866845431, 0.876809764, 0.886773069, 0.896739208, 0.906704139, 0.916669056, 0.926633, 0.9365955, 0.946560778, 0.956524847, 0.966489069, 0.976453181, 0.986417722, 0.996380611, 1.006346458, 1.016310792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:10.000" endtime="20201110 08:35:10.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:09.994" endtime="20201110 08:35:10.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.004" endtime="20201110 08:35:10.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.007" endtime="20201110 08:35:10.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.006" endtime="20201110 08:35:10.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.002" endtime="20201110 08:35:10.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.447" endtime="20201110 08:35:10.028"></status>
</kw>
<msg timestamp="20201110 08:35:10.028" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.036" endtime="20201110 08:35:12.142"></status>
</kw>
<msg timestamp="20201110 08:35:12.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36630814, 'start-iter': 1, 'wakeups': [36641082, 36651076, 36661076, 3...</msg>
<status status="PASS" starttime="20201110 08:35:10.034" endtime="20201110 08:35:12.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36630814, 'start-iter': 1, 'wakeups': [36641082, 36651076, 36661076, 3...</msg>
<status status="PASS" starttime="20201110 08:35:12.146" endtime="20201110 08:35:12.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.152" endtime="20201110 08:35:12.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.032" endtime="20201110 08:35:12.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.030" endtime="20201110 08:35:12.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.162" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'start-time': 36630814, 'wakeups': [36641082, 36651076, 36661076, 36671076, 36681076, 36691076, 36701076, 36711076, 36721076, 36731074, 36741076, 36751076, ...</msg>
<status status="PASS" starttime="20201110 08:35:12.158" endtime="20201110 08:35:12.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:12.169" endtime="20201110 08:35:12.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.175" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:12.173" endtime="20201110 08:35:12.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.164" endtime="20201110 08:35:12.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.185" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:12.183" endtime="20201110 08:35:12.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.189" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:12.187" endtime="20201110 08:35:12.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.178" endtime="20201110 08:35:12.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.206" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:12.199" endtime="20201110 08:35:12.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.211" level="INFO">VALUE: 36630814</msg>
<status status="PASS" starttime="20201110 08:35:12.209" endtime="20201110 08:35:12.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.192" endtime="20201110 08:35:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.220" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:12.218" endtime="20201110 08:35:12.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.225" level="INFO">VALUE: [36641082, 36651076, 36661076, 36671076, 36681076, 36691076, 36701076, 36711076, 36721076, 36731074, 36741076, 36751076, 36761076, 36771074, 36781076, 36791076, 36801076, 36811076, 36821076, 36831076, 36841076, 36851076, 36861076, 36871076, 36881076, 36891074, 36901076, 36911076, 36921076, 36931074, 36941076, 36951076, 36961076, 36971076, 36981076, 36991076, 37001076, 37011076, 37021076, 37031076, 37041076, 37051074, 37061076, 37071076, 37081076, 37091074, 37101076, 37111076, 37121076, 37131074, 37141076, 37151076, 37161074, 37171076, 37181076, 37191076, 37201076, 37211076, 37221076, 37231076, 37241076, 37251076, 37261076, 37271076, 37281076, 37291076, 37301076, 37311076, 37321076, 37331076, 37341076, 37351076, 37361076, 37371076, 37381076, 37391074, 37401074, 37411076, 37421076, 37431076, 37441076, 37451074, 37461076, 37471076, 37481076, 37491076, 37501076, 37511076, 37521076, 37531076, 37541076, 37551076, 37561074, 37571076, 37581076, 37591076, 37601076, 37611076, 37621074, 37631076]</msg>
<status status="PASS" starttime="20201110 08:35:12.223" endtime="20201110 08:35:12.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.213" endtime="20201110 08:35:12.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.240" endtime="20201110 08:35:12.537"></status>
</kw>
<msg timestamp="20201110 08:35:12.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030014042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.237" endtime="20201110 08:35:12.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019783069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030014042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:12.541" endtime="20201110 08:35:12.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.548" endtime="20201110 08:35:12.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.232" endtime="20201110 08:35:12.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.228" endtime="20201110 08:35:12.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:12.574" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:12.552" endtime="20201110 08:35:12.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.579" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:12.578" endtime="20201110 08:35:12.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.581" level="INFO">VALUE: 0.019783069</msg>
<status status="PASS" starttime="20201110 08:35:12.580" endtime="20201110 08:35:12.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.575" endtime="20201110 08:35:12.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.587" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:12.585" endtime="20201110 08:35:12.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:12.589" level="INFO">VALUE: [0.030014042, 0.039973708, 0.049939597, 0.059904875, 0.069869708, 0.079834764, 0.089800444, 0.099766042, 0.109731792, 0.119696194, 0.129663236, 0.139628556, 0.149593944, 0.159557417, 0.169524153, 0.179489389, 0.189454722, 0.199419764, 0.209384694, 0.219349875, 0.229314778, 0.239279944, 0.249244917, 0.259209708, 0.269175125, 0.279138736, 0.289104472, 0.299068931, 0.309034153, 0.318997694, 0.328964389, 0.338929931, 0.348895028, 0.35886, 0.368824667, 0.37878925, 0.388754181, 0.398719014, 0.408683972, 0.418649292, 0.428615, 0.438578861, 0.448545458, 0.458510319, 0.468475208, 0.478438264, 0.488404306, 0.498368764, 0.508333611, 0.518296847, 0.528262944, 0.538227542, 0.548190528, 0.558157056, 0.5681215, 0.578085917, 0.588051514, 0.598017347, 0.607983083, 0.617948917, 0.627914278, 0.637879597, 0.647844444, 0.657809792, 0.667775222, 0.677740153, 0.687704542, 0.697669208, 0.707633889, 0.717598917, 0.727564208, 0.737529528, 0.747494792, 0.75746, 0.767424708, 0.777388333, 0.787353139, 0.797318847, 0.807283389, 0.817247792, 0.827211958, 0.837175097, 0.847140986, 0.857105806, 0.867070403, 0.877035458, 0.887000139, 0.896965417, 0.906930694, 0.916896333, 0.926862, 0.936827583, 0.946791222, 0.956757292, 0.966722278, 0.976687583, 0.986652861, 0.996618486, 1.006582903, 1.016549681] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:12.588" endtime="20201110 08:35:12.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.582" endtime="20201110 08:35:12.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.593" endtime="20201110 08:35:12.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:12.596" endtime="20201110 08:35:12.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.594" endtime="20201110 08:35:12.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.591" endtime="20201110 08:35:12.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.029" endtime="20201110 08:35:12.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.857" endtime="20201110 08:35:12.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.856" endtime="20201110 08:35:12.617"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:12.620" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:12.627" endtime="20201110 08:35:14.734"></status>
</kw>
<msg timestamp="20201110 08:35:14.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39231647, 'start-iter': 1, 'wakeups': [39241974, 39251969, 39261964, 3...</msg>
<status status="PASS" starttime="20201110 08:35:12.626" endtime="20201110 08:35:14.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39231647, 'start-iter': 1, 'wakeups': [39241974, 39251969, 39261964, 3...</msg>
<status status="PASS" starttime="20201110 08:35:14.737" endtime="20201110 08:35:14.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.743" endtime="20201110 08:35:14.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.623" endtime="20201110 08:35:14.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.621" endtime="20201110 08:35:14.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:14.754" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 39231647, 'wakeups': [39241974, 39251969, 39261964, 39271969, 39281964, 39291969, 39301969, 39311969, 39321969, 39331969, 39341969, 39351969, ...</msg>
<status status="PASS" starttime="20201110 08:35:14.750" endtime="20201110 08:35:14.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.762" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:14.760" endtime="20201110 08:35:14.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.767" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:14.765" endtime="20201110 08:35:14.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.756" endtime="20201110 08:35:14.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.777" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:14.774" endtime="20201110 08:35:14.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.781" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:14.779" endtime="20201110 08:35:14.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.770" endtime="20201110 08:35:14.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.791" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:14.789" endtime="20201110 08:35:14.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.795" level="INFO">VALUE: 39231647</msg>
<status status="PASS" starttime="20201110 08:35:14.793" endtime="20201110 08:35:14.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.784" endtime="20201110 08:35:14.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.805" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:14.803" endtime="20201110 08:35:14.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:14.810" level="INFO">VALUE: [39241974, 39251969, 39261964, 39271969, 39281964, 39291969, 39301969, 39311969, 39321969, 39331969, 39341969, 39351969, 39361969, 39371969, 39381969, 39391969, 39401969, 39411969, 39421969, 39431969, 39441964, 39451969, 39461969, 39471969, 39481964, 39491969, 39501969, 39511969, 39521964, 39531969, 39541964, 39551969, 39561969, 39571969, 39581969, 39591964, 39601969, 39611969, 39621969, 39631969, 39641964, 39651969, 39661969, 39671969, 39681964, 39691969, 39701969, 39711969, 39721969, 39731969, 39741964, 39751969, 39761969, 39771969, 39781969, 39791969, 39801969, 39811969, 39821969, 39831969, 39841969, 39851969, 39861969, 39871969, 39881964, 39891969, 39901964, 39911969, 39921969, 39931969, 39941969, 39951969, 39961969, 39971969, 39981964, 39991969, 40001969, 40011969, 40021964, 40031969, 40041969, 40051969, 40061969, 40071969, 40081969, 40091969, 40101964, 40111969, 40121969, 40131969, 40141969, 40151969, 40161969, 40171969, 40181969, 40191969, 40201969, 40211969, 40221969, 40231969]</msg>
<status status="PASS" starttime="20201110 08:35:14.807" endtime="20201110 08:35:14.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.798" endtime="20201110 08:35:14.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:14.828" endtime="20201110 08:35:15.122"></status>
</kw>
<msg timestamp="20201110 08:35:15.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032777111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:14.824" endtime="20201110 08:35:15.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022486708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032777111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.126" endtime="20201110 08:35:15.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.133" endtime="20201110 08:35:15.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.819" endtime="20201110 08:35:15.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:14.813" endtime="20201110 08:35:15.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.160" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:15.137" endtime="20201110 08:35:15.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.164" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:15.163" endtime="20201110 08:35:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.166" level="INFO">VALUE: 0.022486708</msg>
<status status="PASS" starttime="20201110 08:35:15.165" endtime="20201110 08:35:15.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.161" endtime="20201110 08:35:15.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.172" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:15.171" endtime="20201110 08:35:15.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.174" level="INFO">VALUE: [0.032777111, 0.042735597, 0.052695458, 0.062664042, 0.072623875, 0.082592111, 0.092556014, 0.102520194, 0.112484264, 0.122448681, 0.132413181, 0.142377764, 0.152341875, 0.162306556, 0.172271528, 0.182236014, 0.192200097, 0.202164375, 0.212129264, 0.222094042, 0.232054139, 0.242023069, 0.251987056, 0.261950875, 0.271910222, 0.281878736, 0.291843431, 0.301807958, 0.311767681, 0.321735889, 0.331696042, 0.3416645, 0.351628764, 0.361593653, 0.371559, 0.381518583, 0.391486917, 0.401451292, 0.411415736, 0.42138, 0.431340292, 0.441308889, 0.451272958, 0.46123625, 0.471195972, 0.481163986, 0.491128181, 0.501092236, 0.511056, 0.521019861, 0.530979236, 0.540947069, 0.550910875, 0.560874222, 0.570838125, 0.580802597, 0.590766347, 0.600730431, 0.610694736, 0.620659056, 0.630623319, 0.640587625, 0.650551653, 0.660516153, 0.670476097, 0.680444111, 0.690404056, 0.700372181, 0.710336444, 0.720300375, 0.730264611, 0.740229208, 0.750193125, 0.760157125, 0.770117097, 0.780085306, 0.790049708, 0.800013556, 0.809973819, 0.819942347, 0.829906264, 0.839870778, 0.849834389, 0.859798278, 0.869763097, 0.879726736, 0.889686653, 0.899654847, 0.909618778, 0.919582722, 0.929546972, 0.939511736, 0.949476736, 0.959441083, 0.969405722, 0.979370319, 0.989334597, 0.999299264, 1.009263778, 1.019228847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:15.173" endtime="20201110 08:35:15.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.168" endtime="20201110 08:35:15.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.177" endtime="20201110 08:35:15.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:15.180" endtime="20201110 08:35:15.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.179" endtime="20201110 08:35:15.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.175" endtime="20201110 08:35:15.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.620" endtime="20201110 08:35:15.201"></status>
</kw>
<msg timestamp="20201110 08:35:15.201" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.210" endtime="20201110 08:35:17.316"></status>
</kw>
<msg timestamp="20201110 08:35:17.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41823948, 'start-iter': 1, 'wakeups': [41834276, 41844265, 41854270, 4...</msg>
<status status="PASS" starttime="20201110 08:35:15.209" endtime="20201110 08:35:17.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.323" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41823948, 'start-iter': 1, 'wakeups': [41834276, 41844265, 41854270, 4...</msg>
<status status="PASS" starttime="20201110 08:35:17.320" endtime="20201110 08:35:17.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.326" endtime="20201110 08:35:17.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.206" endtime="20201110 08:35:17.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.203" endtime="20201110 08:35:17.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.337" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 41823948, 'wakeups': [41834276, 41844265, 41854270, 41864270, 41874270, 41884270, 41894270, 41904270, 41914270, 41924270, 41934270, 41944270, ...</msg>
<status status="PASS" starttime="20201110 08:35:17.333" endtime="20201110 08:35:17.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.345" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:17.343" endtime="20201110 08:35:17.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.349" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:17.347" endtime="20201110 08:35:17.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.338" endtime="20201110 08:35:17.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.359" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:17.357" endtime="20201110 08:35:17.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.363" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:17.361" endtime="20201110 08:35:17.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.352" endtime="20201110 08:35:17.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.373" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:17.371" endtime="20201110 08:35:17.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.378" level="INFO">VALUE: 41823948</msg>
<status status="PASS" starttime="20201110 08:35:17.376" endtime="20201110 08:35:17.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.366" endtime="20201110 08:35:17.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.387" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:17.385" endtime="20201110 08:35:17.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.392" level="INFO">VALUE: [41834276, 41844265, 41854270, 41864270, 41874270, 41884270, 41894270, 41904270, 41914270, 41924270, 41934270, 41944270, 41954265, 41964270, 41974265, 41984270, 41994270, 42004270, 42014265, 42024270, 42034270, 42044265, 42054270, 42064270, 42074265, 42084270, 42094270, 42104270, 42114265, 42124270, 42134270, 42144265, 42154270, 42164265, 42174270, 42184270, 42194270, 42204270, 42214270, 42224270, 42234270, 42244270, 42254270, 42264265, 42274270, 42284270, 42294270, 42304265, 42314270, 42324265, 42334270, 42344270, 42354270, 42364270, 42374270, 42384270, 42394265, 42404270, 42414270, 42424270, 42434270, 42444270, 42454270, 42464270, 42474270, 42484270, 42494270, 42504270, 42514270, 42524270, 42534270, 42544270, 42554270, 42564265, 42574270, 42584265, 42594270, 42604270, 42614270, 42624270, 42634270, 42644270, 42654270, 42664270, 42674270, 42684270, 42694270, 42704270, 42714270, 42724270, 42734270, 42744270, 42754270, 42764270, 42774270, 42784270, 42794265, 42804270, 42814265, 42824270]</msg>
<status status="PASS" starttime="20201110 08:35:17.390" endtime="20201110 08:35:17.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.381" endtime="20201110 08:35:17.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.414" endtime="20201110 08:35:17.710"></status>
</kw>
<msg timestamp="20201110 08:35:17.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031371806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.411" endtime="20201110 08:35:17.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021081319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031371806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:17.714" endtime="20201110 08:35:17.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.721" endtime="20201110 08:35:17.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.406" endtime="20201110 08:35:17.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.395" endtime="20201110 08:35:17.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:17.748" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:17.725" endtime="20201110 08:35:17.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.752" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:17.751" endtime="20201110 08:35:17.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.754" level="INFO">VALUE: 0.021081319</msg>
<status status="PASS" starttime="20201110 08:35:17.753" endtime="20201110 08:35:17.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.749" endtime="20201110 08:35:17.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.760" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:17.759" endtime="20201110 08:35:17.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:17.762" level="INFO">VALUE: [0.031371806, 0.041324722, 0.051292236, 0.061255611, 0.071218736, 0.081181736, 0.091144889, 0.101107792, 0.111071167, 0.121034611, 0.130998458, 0.140961861, 0.150921014, 0.160888694, 0.170847972, 0.180816194, 0.190780681, 0.200745472, 0.210705847, 0.220674111, 0.230639181, 0.240599708, 0.250568194, 0.260531986, 0.270491681, 0.28046, 0.290424222, 0.300388611, 0.310348931, 0.320317, 0.330280361, 0.340240208, 0.350208625, 0.360168292, 0.370136153, 0.380099597, 0.390062819, 0.400025722, 0.409988042, 0.419950917, 0.429913819, 0.439876028, 0.449838583, 0.459797125, 0.469764167, 0.479727, 0.489689667, 0.499647917, 0.509615764, 0.519575472, 0.52954325, 0.539507028, 0.549470264, 0.559433444, 0.569396167, 0.579359583, 0.589318556, 0.599285792, 0.60924875, 0.619211514, 0.629174486, 0.639137528, 0.649100847, 0.659064056, 0.669027583, 0.6789905, 0.688953806, 0.698916875, 0.708880333, 0.718843542, 0.72880725, 0.738771208, 0.74873425, 0.758693653, 0.768661764, 0.778621722, 0.788590472, 0.798554611, 0.808518722, 0.818482875, 0.828446903, 0.838410472, 0.848373667, 0.858337514, 0.868301458, 0.878264875, 0.888228194, 0.898191611, 0.908154903, 0.918117736, 0.928080986, 0.938044111, 0.948006319, 0.957969014, 0.967931569, 0.977894264, 0.987852917, 0.997819514, 1.007777986, 1.017745222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:17.761" endtime="20201110 08:35:17.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.756" endtime="20201110 08:35:17.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.765" endtime="20201110 08:35:17.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:17.768" endtime="20201110 08:35:17.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.767" endtime="20201110 08:35:17.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.763" endtime="20201110 08:35:17.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.202" endtime="20201110 08:35:17.789"></status>
</kw>
<msg timestamp="20201110 08:35:17.789" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:17.797" endtime="20201110 08:35:19.903"></status>
</kw>
<msg timestamp="20201110 08:35:19.904" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44420492, 'start-iter': 1, 'wakeups': [44430822, 44440814, 44450814, 4...</msg>
<status status="PASS" starttime="20201110 08:35:17.795" endtime="20201110 08:35:19.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44420492, 'start-iter': 1, 'wakeups': [44430822, 44440814, 44450814, 4...</msg>
<status status="PASS" starttime="20201110 08:35:19.907" endtime="20201110 08:35:19.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.913" endtime="20201110 08:35:19.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.793" endtime="20201110 08:35:19.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.791" endtime="20201110 08:35:19.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.924" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'start-time': 44420492, 'wakeups': [44430822, 44440814, 44450814, 44460814, 44470814, 44480809, 44490814, 44500809, 44510814, 44520809, 44530814, 44540814, ...</msg>
<status status="PASS" starttime="20201110 08:35:19.920" endtime="20201110 08:35:19.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.934" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:19.930" endtime="20201110 08:35:19.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.939" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:19.937" endtime="20201110 08:35:19.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.926" endtime="20201110 08:35:19.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.949" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:19.947" endtime="20201110 08:35:19.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.953" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:19.951" endtime="20201110 08:35:19.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.942" endtime="20201110 08:35:19.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.963" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.961" endtime="20201110 08:35:19.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.967" level="INFO">VALUE: 44420492</msg>
<status status="PASS" starttime="20201110 08:35:19.965" endtime="20201110 08:35:19.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.956" endtime="20201110 08:35:19.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.977" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.975" endtime="20201110 08:35:19.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.982" level="INFO">VALUE: [44430822, 44440814, 44450814, 44460814, 44470814, 44480809, 44490814, 44500809, 44510814, 44520809, 44530814, 44540814, 44550814, 44560814, 44570814, 44580814, 44590814, 44600814, 44610814, 44620814, 44630814, 44640814, 44650809, 44660814, 44670814, 44680814, 44690814, 44700814, 44710814, 44720814, 44730814, 44740809, 44750814, 44760814, 44770814, 44780814, 44790814, 44800814, 44810814, 44820809, 44830814, 44840814, 44850814, 44860814, 44870814, 44880814, 44890814, 44900814, 44910809, 44920814, 44930814, 44940814, 44950814, 44960814, 44970814, 44980814, 44990814, 45000814, 45010814, 45020814, 45030814, 45040809, 45050814, 45060814, 45070814, 45080814, 45090814, 45100814, 45110809, 45120814, 45130814, 45140814, 45150814, 45160814, 45170814, 45180814, 45190809, 45200814, 45210814, 45220814, 45230814, 45240814, 45250814, 45260814, 45270814, 45280814, 45290814, 45300814, 45310814, 45320814, 45330814, 45340814, 45350814, 45360814, 45370814, 45380814, 45390814, 45400814, 45410814, 45420814]</msg>
<status status="PASS" starttime="20201110 08:35:19.979" endtime="20201110 08:35:19.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.970" endtime="20201110 08:35:19.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.997" endtime="20201110 08:35:20.294"></status>
</kw>
<msg timestamp="20201110 08:35:20.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.994" endtime="20201110 08:35:20.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019871028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:20.298" endtime="20201110 08:35:20.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.306" endtime="20201110 08:35:20.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.988" endtime="20201110 08:35:20.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.985" endtime="20201110 08:35:20.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:20.333" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:20.309" endtime="20201110 08:35:20.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.337" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:20.336" endtime="20201110 08:35:20.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.339" level="INFO">VALUE: 0.019871028</msg>
<status status="PASS" starttime="20201110 08:35:20.338" endtime="20201110 08:35:20.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.334" endtime="20201110 08:35:20.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.345" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:20.344" endtime="20201110 08:35:20.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:20.347" level="INFO">VALUE: [0.030161639, 0.040116417, 0.050079361, 0.060042264, 0.070005306, 0.079964083, 0.089931597, 0.099889653, 0.109856111, 0.119814417, 0.129781653, 0.139744958, 0.149708319, 0.159671722, 0.169634958, 0.179597694, 0.189560736, 0.199523931, 0.209487333, 0.219450264, 0.229413444, 0.239377028, 0.249336736, 0.259304514, 0.269267625, 0.279231097, 0.289194278, 0.299158181, 0.309121931, 0.319085708, 0.329049653, 0.339008833, 0.348976611, 0.358940847, 0.368904569, 0.378868431, 0.388832208, 0.398796222, 0.408759611, 0.418719361, 0.428687306, 0.438650347, 0.448613431, 0.458576736, 0.468540542, 0.478504917, 0.488468847, 0.498432861, 0.508391944, 0.51835975, 0.528323528, 0.538287097, 0.548251236, 0.558215792, 0.568179361, 0.578142889, 0.5881065, 0.598069847, 0.608033181, 0.617996417, 0.627959708, 0.637918319, 0.647886139, 0.657849264, 0.667812347, 0.677775778, 0.687739472, 0.697702958, 0.707661806, 0.717629153, 0.727592569, 0.737555806, 0.747518611, 0.757481361, 0.767443958, 0.777406625, 0.787365181, 0.797332681, 0.807296056, 0.817259514, 0.827222986, 0.837186667, 0.847150278, 0.857113708, 0.867076472, 0.877039194, 0.887002333, 0.896965958, 0.906929194, 0.916893083, 0.926856986, 0.936820472, 0.946784403, 0.956748167, 0.966711417, 0.9766745, 0.986637694, 0.996600639, 1.006563542, 1.016526833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:20.346" endtime="20201110 08:35:20.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.341" endtime="20201110 08:35:20.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.350" endtime="20201110 08:35:20.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:20.353" endtime="20201110 08:35:20.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.352" endtime="20201110 08:35:20.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.348" endtime="20201110 08:35:20.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:17.790" endtime="20201110 08:35:20.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.618" endtime="20201110 08:35:20.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:12.617" endtime="20201110 08:35:20.374"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:20.377" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:20.385" endtime="20201110 08:35:22.491"></status>
</kw>
<msg timestamp="20201110 08:35:22.492" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47017964, 'start-iter': 1, 'wakeups': [47028367, 47038352, 47048352, 4...</msg>
<status status="PASS" starttime="20201110 08:35:20.383" endtime="20201110 08:35:22.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.498" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 47017964, 'start-iter': 1, 'wakeups': [47028367, 47038352, 47048352, 4...</msg>
<status status="PASS" starttime="20201110 08:35:22.494" endtime="20201110 08:35:22.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.500" endtime="20201110 08:35:22.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.381" endtime="20201110 08:35:22.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.379" endtime="20201110 08:35:22.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.517" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 47017964, 'wakeups': [47028367, 47038352, 47048352, 47058352, 47068352, 47078352, 47088352, 47098352, 47108352, 47118352, 47128352, 47138352, ...</msg>
<status status="PASS" starttime="20201110 08:35:22.513" endtime="20201110 08:35:22.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.526" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:22.524" endtime="20201110 08:35:22.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.530" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:22.528" endtime="20201110 08:35:22.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.519" endtime="20201110 08:35:22.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.540" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:22.538" endtime="20201110 08:35:22.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.544" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:22.542" endtime="20201110 08:35:22.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.533" endtime="20201110 08:35:22.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.554" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.553" endtime="20201110 08:35:22.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.556" level="INFO">VALUE: 47017964</msg>
<status status="PASS" starttime="20201110 08:35:22.555" endtime="20201110 08:35:22.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.547" endtime="20201110 08:35:22.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.561" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.560" endtime="20201110 08:35:22.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.563" level="INFO">VALUE: [47028367, 47038352, 47048352, 47058352, 47068352, 47078352, 47088352, 47098352, 47108352, 47118352, 47128352, 47138352, 47148352, 47158352, 47168352, 47178354, 47188352, 47198352, 47208352, 47218352, 47228352, 47238354, 47248352, 47258352, 47268352, 47278354, 47288352, 47298352, 47308354, 47318352, 47328352, 47338352, 47348352, 47358352, 47368354, 47378352, 47388352, 47398354, 47408352, 47418352, 47428352, 47438352, 47448352, 47458352, 47468352, 47478354, 47488352, 47498352, 47508352, 47518352, 47528352, 47538352, 47548352, 47558352, 47568352, 47578352, 47588352, 47598352, 47608354, 47618352, 47628352, 47638352, 47648352, 47658352, 47668352, 47678352, 47688354, 47698352, 47708352, 47718354, 47728352, 47738352, 47748352, 47758352, 47768352, 47778352, 47788352, 47798352, 47808352, 47818352, 47828352, 47838352, 47848354, 47858352, 47868354, 47878352, 47888352, 47898352, 47908352, 47918352, 47928352, 47938352, 47948354, 47958352, 47968352, 47978354, 47988352, 47998352, 48008352, 48018352]</msg>
<status status="PASS" starttime="20201110 08:35:22.562" endtime="20201110 08:35:22.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.558" endtime="20201110 08:35:22.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.570" endtime="20201110 08:35:22.862"></status>
</kw>
<msg timestamp="20201110 08:35:22.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032860472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.569" endtime="20201110 08:35:22.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032860472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:22.866" endtime="20201110 08:35:22.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.873" endtime="20201110 08:35:22.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.566" endtime="20201110 08:35:22.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.565" endtime="20201110 08:35:22.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:22.899" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:22.877" endtime="20201110 08:35:22.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.904" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:22.903" endtime="20201110 08:35:22.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.907" level="INFO">VALUE: 0.022495944</msg>
<status status="PASS" starttime="20201110 08:35:22.906" endtime="20201110 08:35:22.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.901" endtime="20201110 08:35:22.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.912" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:22.911" endtime="20201110 08:35:22.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:22.914" level="INFO">VALUE: [0.032860472, 0.042809222, 0.052772528, 0.062735806, 0.072699, 0.082662375, 0.092624139, 0.102586722, 0.112550694, 0.122514069, 0.132476833, 0.142440472, 0.152404417, 0.162367583, 0.172329958, 0.182294833, 0.192255236, 0.202218278, 0.212180944, 0.222145014, 0.23210725, 0.242072597, 0.252033625, 0.261996486, 0.271959583, 0.281925472, 0.291885764, 0.301848986, 0.311814181, 0.321774653, 0.331736708, 0.341699028, 0.351662014, 0.361625167, 0.371590417, 0.381550333, 0.391512778, 0.401477569, 0.411438472, 0.421400694, 0.431362736, 0.441325236, 0.451288375, 0.461250194, 0.47121275, 0.481178097, 0.491138417, 0.501101458, 0.511065083, 0.521027819, 0.530990431, 0.540954069, 0.550917639, 0.560879903, 0.570842653, 0.580805278, 0.590767611, 0.600729333, 0.610693569, 0.620653, 0.630614736, 0.640575639, 0.650538014, 0.660499458, 0.670461958, 0.680423417, 0.690388111, 0.700348694, 0.710310264, 0.720274903, 0.730234583, 0.740196889, 0.750160028, 0.760122472, 0.770085458, 0.780048097, 0.790011069, 0.799973, 0.809935667, 0.819899028, 0.829861708, 0.839824847, 0.849790347, 0.859750444, 0.869715917, 0.879676389, 0.889639111, 0.899602083, 0.909565181, 0.919527125, 0.929490014, 0.939451931, 0.949416722, 0.959377014, 0.969340375, 0.979305222, 0.9892655, 0.999228111, 1.009191972, 1.019154236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:22.913" endtime="20201110 08:35:22.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.908" endtime="20201110 08:35:22.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.917" endtime="20201110 08:35:22.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:22.921" endtime="20201110 08:35:22.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.919" endtime="20201110 08:35:22.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.916" endtime="20201110 08:35:22.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.378" endtime="20201110 08:35:22.941"></status>
</kw>
<msg timestamp="20201110 08:35:22.942" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:22.950" endtime="20201110 08:35:25.057"></status>
</kw>
<msg timestamp="20201110 08:35:25.058" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49592581, 'start-iter': 1, 'wakeups': [49602984, 49612971, 49622969, 4...</msg>
<status status="PASS" starttime="20201110 08:35:22.948" endtime="20201110 08:35:25.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.064" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49592581, 'start-iter': 1, 'wakeups': [49602984, 49612971, 49622969, 4...</msg>
<status status="PASS" starttime="20201110 08:35:25.060" endtime="20201110 08:35:25.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.066" endtime="20201110 08:35:25.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.946" endtime="20201110 08:35:25.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.944" endtime="20201110 08:35:25.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.077" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 49592581, 'wakeups': [49602984, 49612971, 49622969, 49632969, 49642969, 49652971, 49662969, 49672969, 49682969, 49692969, 49702969, 49712971, ...</msg>
<status status="PASS" starttime="20201110 08:35:25.073" endtime="20201110 08:35:25.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.086" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:25.083" endtime="20201110 08:35:25.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.091" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:25.088" endtime="20201110 08:35:25.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.079" endtime="20201110 08:35:25.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.101" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:25.099" endtime="20201110 08:35:25.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.106" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:25.104" endtime="20201110 08:35:25.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.094" endtime="20201110 08:35:25.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.116" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:25.114" endtime="20201110 08:35:25.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.120" level="INFO">VALUE: 49592581</msg>
<status status="PASS" starttime="20201110 08:35:25.118" endtime="20201110 08:35:25.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.109" endtime="20201110 08:35:25.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.132" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:25.128" endtime="20201110 08:35:25.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.137" level="INFO">VALUE: [49602984, 49612971, 49622969, 49632969, 49642969, 49652971, 49662969, 49672969, 49682969, 49692969, 49702969, 49712971, 49722969, 49732969, 49742969, 49752969, 49762969, 49772969, 49782969, 49792969, 49802969, 49812969, 49822969, 49832969, 49842971, 49852969, 49862969, 49872971, 49882969, 49892969, 49902969, 49912971, 49922969, 49932969, 49942969, 49952969, 49962969, 49972969, 49982969, 49992969, 50002969, 50012969, 50022969, 50032969, 50042971, 50052969, 50062969, 50072969, 50082969, 50092969, 50102969, 50112969, 50122969, 50132971, 50142969, 50152969, 50162969, 50172969, 50182969, 50192969, 50202969, 50212969, 50222969, 50232969, 50242969, 50252969, 50262969, 50272971, 50282969, 50292969, 50302969, 50312969, 50322969, 50332969, 50342969, 50352969, 50362969, 50372969, 50382969, 50392969, 50402969, 50412969, 50422969, 50432969, 50442969, 50452969, 50462969, 50472969, 50482969, 50492969, 50502969, 50512969, 50522969, 50532971, 50542969, 50552969, 50562969, 50572969, 50582969, 50592969]</msg>
<status status="PASS" starttime="20201110 08:35:25.134" endtime="20201110 08:35:25.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.123" endtime="20201110 08:35:25.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.152" endtime="20201110 08:35:25.444"></status>
</kw>
<msg timestamp="20201110 08:35:25.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.149" endtime="20201110 08:35:25.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019759639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030123792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:25.448" endtime="20201110 08:35:25.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.455" endtime="20201110 08:35:25.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.143" endtime="20201110 08:35:25.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.140" endtime="20201110 08:35:25.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:25.482" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:25.459" endtime="20201110 08:35:25.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.487" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:25.486" endtime="20201110 08:35:25.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.489" level="INFO">VALUE: 0.019759639</msg>
<status status="PASS" starttime="20201110 08:35:25.488" endtime="20201110 08:35:25.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.483" endtime="20201110 08:35:25.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.494" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:25.493" endtime="20201110 08:35:25.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:25.496" level="INFO">VALUE: [0.030123792, 0.040074472, 0.050035389, 0.05999775, 0.069961347, 0.079927042, 0.089887667, 0.099849458, 0.109812042, 0.119775014, 0.129737264, 0.139702139, 0.149662722, 0.159624694, 0.169588069, 0.179550528, 0.189512722, 0.199474986, 0.209438069, 0.219401653, 0.229363569, 0.239326806, 0.249289167, 0.259251278, 0.269216681, 0.279177611, 0.28914, 0.299105736, 0.309066056, 0.319028403, 0.328991208, 0.338956569, 0.348917708, 0.358880208, 0.368843431, 0.378806472, 0.388769806, 0.398731403, 0.408693583, 0.418655444, 0.428618611, 0.438581194, 0.448543264, 0.458506347, 0.468471375, 0.4784315, 0.488394111, 0.498356889, 0.5083185, 0.518280764, 0.528243472, 0.538205333, 0.548168236, 0.558133333, 0.568093125, 0.578055639, 0.5880185, 0.597981597, 0.60794525, 0.617907306, 0.627869931, 0.637832458, 0.647795306, 0.65775725, 0.667719986, 0.677683181, 0.687645375, 0.697610333, 0.707569639, 0.717532125, 0.727494444, 0.737456861, 0.747418847, 0.757381403, 0.767343333, 0.777306069, 0.787268306, 0.797230222, 0.807192083, 0.817154153, 0.827115917, 0.837077917, 0.847038792, 0.857000944, 0.866963833, 0.876925944, 0.886888292, 0.896851028, 0.906813833, 0.916776778, 0.926739083, 0.936700764, 0.946663694, 0.956628681, 0.966588694, 0.976550639, 0.986513806, 0.996476653, 1.006440139, 1.016402167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:25.495" endtime="20201110 08:35:25.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.490" endtime="20201110 08:35:25.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.499" endtime="20201110 08:35:25.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:25.504" endtime="20201110 08:35:25.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.501" endtime="20201110 08:35:25.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.498" endtime="20201110 08:35:25.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:22.942" endtime="20201110 08:35:25.524"></status>
</kw>
<msg timestamp="20201110 08:35:25.525" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:25.533" endtime="20201110 08:35:27.640"></status>
</kw>
<msg timestamp="20201110 08:35:27.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52185425, 'start-iter': 1, 'wakeups': [52195829, 52205813, 52215813, 5...</msg>
<status status="PASS" starttime="20201110 08:35:25.531" endtime="20201110 08:35:27.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.647" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 52185425, 'start-iter': 1, 'wakeups': [52195829, 52205813, 52215813, 5...</msg>
<status status="PASS" starttime="20201110 08:35:27.643" endtime="20201110 08:35:27.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.649" endtime="20201110 08:35:27.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.529" endtime="20201110 08:35:27.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.527" endtime="20201110 08:35:27.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.660" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'start-time': 52185425, 'wakeups': [52195829, 52205813, 52215813, 52225813, 52235815, 52245813, 52255813, 52265813, 52275813, 52285815, 52295813, 52305813, ...</msg>
<status status="PASS" starttime="20201110 08:35:27.656" endtime="20201110 08:35:27.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.668" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:27.666" endtime="20201110 08:35:27.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.673" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:27.671" endtime="20201110 08:35:27.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.662" endtime="20201110 08:35:27.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.683" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:27.681" endtime="20201110 08:35:27.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.688" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:27.686" endtime="20201110 08:35:27.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.676" endtime="20201110 08:35:27.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.704" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.696" endtime="20201110 08:35:27.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.709" level="INFO">VALUE: 52185425</msg>
<status status="PASS" starttime="20201110 08:35:27.706" endtime="20201110 08:35:27.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.691" endtime="20201110 08:35:27.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.715" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.714" endtime="20201110 08:35:27.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.717" level="INFO">VALUE: [52195829, 52205813, 52215813, 52225813, 52235815, 52245813, 52255813, 52265813, 52275813, 52285815, 52295813, 52305813, 52315815, 52325813, 52335813, 52345813, 52355813, 52365813, 52375815, 52385813, 52395813, 52405813, 52415813, 52425813, 52435813, 52445813, 52455813, 52465813, 52475813, 52485813, 52495813, 52505813, 52515813, 52525813, 52535813, 52545813, 52555813, 52565813, 52575813, 52585813, 52595813, 52605813, 52615813, 52625813, 52635813, 52645813, 52655813, 52665815, 52675815, 52685813, 52695813, 52705813, 52715815, 52725813, 52735813, 52745813, 52755813, 52765813, 52775813, 52785813, 52795813, 52805813, 52815813, 52825813, 52835813, 52845813, 52855813, 52865813, 52875813, 52885815, 52895813, 52905813, 52915813, 52925813, 52935813, 52945813, 52955813, 52965813, 52975815, 52985813, 52995813, 53005813, 53015813, 53025813, 53035813, 53045815, 53055813, 53065813, 53075813, 53085813, 53095813, 53105813, 53115813, 53125815, 53135813, 53145813, 53155813, 53165813, 53175813, 53185813]</msg>
<status status="PASS" starttime="20201110 08:35:27.716" endtime="20201110 08:35:27.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.711" endtime="20201110 08:35:27.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.724" endtime="20201110 08:35:28.016"></status>
</kw>
<msg timestamp="20201110 08:35:28.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030130583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.723" endtime="20201110 08:35:28.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019765653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030130583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:28.020" endtime="20201110 08:35:28.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.028" endtime="20201110 08:35:28.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.720" endtime="20201110 08:35:28.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.719" endtime="20201110 08:35:28.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:28.054" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:28.031" endtime="20201110 08:35:28.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.058" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:28.057" endtime="20201110 08:35:28.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.060" level="INFO">VALUE: 0.019765653</msg>
<status status="PASS" starttime="20201110 08:35:28.059" endtime="20201110 08:35:28.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.055" endtime="20201110 08:35:28.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.065" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:28.064" endtime="20201110 08:35:28.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:28.068" level="INFO">VALUE: [0.030130583, 0.040079542, 0.050043278, 0.060007208, 0.069973722, 0.079935264, 0.089897875, 0.099861958, 0.109825958, 0.119792361, 0.12975375, 0.139717403, 0.149683528, 0.159645181, 0.169608417, 0.179572653, 0.189537333, 0.199501, 0.209467861, 0.219429333, 0.229393389, 0.239357778, 0.249321153, 0.259285611, 0.269248778, 0.279213319, 0.289178778, 0.299142986, 0.309107375, 0.319071778, 0.329035431, 0.338999931, 0.348963278, 0.358926694, 0.368890431, 0.378855306, 0.388818625, 0.398783597, 0.408747903, 0.418712125, 0.428676361, 0.438640583, 0.448604097, 0.458568611, 0.468533389, 0.478497, 0.488461125, 0.498428167, 0.508392111, 0.5183535, 0.528317806, 0.538282361, 0.548249264, 0.558211028, 0.568175333, 0.578140056, 0.58810375, 0.598067306, 0.608031028, 0.617994361, 0.627957194, 0.637920625, 0.647884458, 0.657847389, 0.667811819, 0.677776458, 0.687740069, 0.697704222, 0.707668083, 0.717634847, 0.727596306, 0.737560125, 0.747524458, 0.757487472, 0.767450917, 0.777414806, 0.787379375, 0.797342764, 0.807308694, 0.817269972, 0.827234361, 0.837199528, 0.847163, 0.857127292, 0.867092375, 0.877059458, 0.887022056, 0.896986778, 0.906951861, 0.916915708, 0.926881014, 0.936846319, 0.946811139, 0.956778944, 0.966741083, 0.976705778, 0.986670278, 0.996634278, 1.006599042, 1.016562667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:28.067" endtime="20201110 08:35:28.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.061" endtime="20201110 08:35:28.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.071" endtime="20201110 08:35:28.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:28.074" endtime="20201110 08:35:28.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.073" endtime="20201110 08:35:28.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.069" endtime="20201110 08:35:28.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:25.525" endtime="20201110 08:35:28.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.376" endtime="20201110 08:35:28.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:20.375" endtime="20201110 08:35:28.095"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:28.098" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:28.107" endtime="20201110 08:35:30.213"></status>
</kw>
<msg timestamp="20201110 08:35:30.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54769398, 'start-iter': 1, 'wakeups': [54779869, 54789864, 54799864, 5...</msg>
<status status="PASS" starttime="20201110 08:35:28.105" endtime="20201110 08:35:30.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.221" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54769398, 'start-iter': 1, 'wakeups': [54779869, 54789864, 54799864, 5...</msg>
<status status="PASS" starttime="20201110 08:35:30.217" endtime="20201110 08:35:30.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.223" endtime="20201110 08:35:30.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.102" endtime="20201110 08:35:30.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.100" endtime="20201110 08:35:30.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.234" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 54769398, 'wakeups': [54779869, 54789864, 54799864, 54809864, 54819864, 54829855, 54839864, 54849864, 54859857, 54869855, 54879864, 54889864, ...</msg>
<status status="PASS" starttime="20201110 08:35:30.230" endtime="20201110 08:35:30.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.242" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:30.240" endtime="20201110 08:35:30.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.246" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:30.244" endtime="20201110 08:35:30.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.235" endtime="20201110 08:35:30.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.256" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:30.254" endtime="20201110 08:35:30.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.260" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:30.258" endtime="20201110 08:35:30.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.249" endtime="20201110 08:35:30.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.270" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.268" endtime="20201110 08:35:30.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.274" level="INFO">VALUE: 54769398</msg>
<status status="PASS" starttime="20201110 08:35:30.273" endtime="20201110 08:35:30.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.263" endtime="20201110 08:35:30.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.284" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.282" endtime="20201110 08:35:30.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.290" level="INFO">VALUE: [54779869, 54789864, 54799864, 54809864, 54819864, 54829855, 54839864, 54849864, 54859857, 54869855, 54879864, 54889864, 54899855, 54909864, 54919864, 54929864, 54939864, 54949857, 54959855, 54969864, 54979864, 54989864, 54999864, 55009855, 55019864, 55029864, 55039857, 55049855, 55059864, 55069864, 55079864, 55089864, 55099857, 55109855, 55119864, 55129864, 55139857, 55149855, 55159864, 55169864, 55179857, 55189855, 55199864, 55209864, 55219864, 55229857, 55239855, 55249864, 55259864, 55269864, 55279855, 55289864, 55299864, 55309864, 55319864, 55329864, 55339864, 55349855, 55359864, 55369864, 55379864, 55389864, 55399857, 55409855, 55419864, 55429864, 55439855, 55449855, 55459857, 55469864, 55479864, 55489864, 55499857, 55509855, 55519864, 55529864, 55539864, 55549864, 55559864, 55569864, 55579864, 55589864, 55599864, 55609864, 55619864, 55629864, 55639864, 55649864, 55659855, 55669855, 55679864, 55689864, 55699864, 55709864, 55719864, 55729864, 55739864, 55749864, 55759864, 55769864]</msg>
<status status="PASS" starttime="20201110 08:35:30.287" endtime="20201110 08:35:30.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.278" endtime="20201110 08:35:30.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.305" endtime="20201110 08:35:30.597"></status>
</kw>
<msg timestamp="20201110 08:35:30.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034025667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.302" endtime="20201110 08:35:30.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023592639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034025667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:30.601" endtime="20201110 08:35:30.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.609" endtime="20201110 08:35:30.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.297" endtime="20201110 08:35:30.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.293" endtime="20201110 08:35:30.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.636" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:30.612" endtime="20201110 08:35:30.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.641" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.640" endtime="20201110 08:35:30.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.643" level="INFO">VALUE: 0.023592639</msg>
<status status="PASS" starttime="20201110 08:35:30.642" endtime="20201110 08:35:30.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.637" endtime="20201110 08:35:30.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.648" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.647" endtime="20201110 08:35:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.650" level="INFO">VALUE: [0.034025667, 0.043985139, 0.053949306, 0.063913236, 0.073877708, 0.083833389, 0.093806, 0.103770028, 0.113727306, 0.123689764, 0.133662931, 0.143627625, 0.153583236, 0.163556833, 0.173521181, 0.183485736, 0.193449931, 0.203407944, 0.213370528, 0.223343875, 0.233308083, 0.243272431, 0.253236472, 0.263192361, 0.273165375, 0.283129917, 0.293087986, 0.303050833, 0.313024056, 0.322988694, 0.332952944, 0.342917208, 0.352874583, 0.362836681, 0.372808833, 0.382772542, 0.392729722, 0.402691056, 0.412663347, 0.422626111, 0.432582444, 0.442543125, 0.452515153, 0.462479181, 0.47244275, 0.482399639, 0.492361083, 0.502333528, 0.512297153, 0.522260972, 0.532215778, 0.542187806, 0.552151153, 0.562114542, 0.572077778, 0.582041167, 0.592004792, 0.6019595, 0.611932236, 0.621895833, 0.631859667, 0.641823486, 0.651780167, 0.661741625, 0.671714306, 0.681678153, 0.691633444, 0.701597417, 0.711563208, 0.721533444, 0.731496944, 0.741460278, 0.751416667, 0.761378625, 0.771351042, 0.781315375, 0.791279, 0.801242208, 0.811205208, 0.821168375, 0.831131583, 0.841095278, 0.851058722, 0.861022139, 0.870986222, 0.880949583, 0.890913514, 0.900877375, 0.910832319, 0.920795472, 0.930766875, 0.940730417, 0.950693778, 0.960657181, 0.970620056, 0.980583917, 0.990547319, 1.000510514, 1.010474417, 1.020438139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:30.649" endtime="20201110 08:35:30.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.644" endtime="20201110 08:35:30.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.653" endtime="20201110 08:35:30.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.656" endtime="20201110 08:35:30.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.655" endtime="20201110 08:35:30.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.651" endtime="20201110 08:35:30.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.099" endtime="20201110 08:35:30.677"></status>
</kw>
<msg timestamp="20201110 08:35:30.678" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.686" endtime="20201110 08:35:32.793"></status>
</kw>
<msg timestamp="20201110 08:35:32.794" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57357583, 'start-iter': 1, 'wakeups': [57368054, 57378040, 57388049, 5...</msg>
<status status="PASS" starttime="20201110 08:35:30.684" endtime="20201110 08:35:32.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.800" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57357583, 'start-iter': 1, 'wakeups': [57368054, 57378040, 57388049, 5...</msg>
<status status="PASS" starttime="20201110 08:35:32.797" endtime="20201110 08:35:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.803" endtime="20201110 08:35:32.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.681" endtime="20201110 08:35:32.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.680" endtime="20201110 08:35:32.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.816" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 57357583, 'wakeups': [57368054, 57378040, 57388049, 57398049, 57408049, 57418049, 57428049, 57438042, 57448042, 57458040, 57468049, 57478049, ...</msg>
<status status="PASS" starttime="20201110 08:35:32.810" endtime="20201110 08:35:32.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.825" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:32.823" endtime="20201110 08:35:32.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.829" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:32.827" endtime="20201110 08:35:32.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.818" endtime="20201110 08:35:32.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.839" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:32.837" endtime="20201110 08:35:32.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.843" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:32.842" endtime="20201110 08:35:32.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.832" endtime="20201110 08:35:32.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.853" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.851" endtime="20201110 08:35:32.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.858" level="INFO">VALUE: 57357583</msg>
<status status="PASS" starttime="20201110 08:35:32.856" endtime="20201110 08:35:32.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.846" endtime="20201110 08:35:32.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.868" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.866" endtime="20201110 08:35:32.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.872" level="INFO">VALUE: [57368054, 57378040, 57388049, 57398049, 57408049, 57418049, 57428049, 57438042, 57448042, 57458040, 57468049, 57478049, 57488049, 57498049, 57508049, 57518042, 57528040, 57538049, 57548049, 57558049, 57568040, 57578049, 57588049, 57598049, 57608042, 57618040, 57628049, 57638049, 57648049, 57658042, 57668049, 57678049, 57688049, 57698040, 57708049, 57718049, 57728040, 57738049, 57748049, 57758040, 57768049, 57778040, 57788049, 57798049, 57808042, 57818049, 57828049, 57838049, 57848049, 57858042, 57868049, 57878049, 57888049, 57898042, 57908049, 57918040, 57928049, 57938049, 57948040, 57958049, 57968049, 57978049, 57988049, 57998040, 58008049, 58018049, 58028040, 58038040, 58048040, 58058042, 58068049, 58078049, 58088049, 58098049, 58108049, 58118049, 58128049, 58138042, 58148040, 58158049, 58168049, 58178042, 58188040, 58198049, 58208049, 58218049, 58228040, 58238049, 58248049, 58258040, 58268049, 58278049, 58288049, 58298042, 58308040, 58318049, 58328049, 58338049, 58348049, 58358049]</msg>
<status status="PASS" starttime="20201110 08:35:32.870" endtime="20201110 08:35:32.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.861" endtime="20201110 08:35:32.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.896" endtime="20201110 08:35:33.191"></status>
</kw>
<msg timestamp="20201110 08:35:33.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030534208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:32.892" endtime="20201110 08:35:33.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020102361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030534208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:33.195" endtime="20201110 08:35:33.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.203" endtime="20201110 08:35:33.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.887" endtime="20201110 08:35:33.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.875" endtime="20201110 08:35:33.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:33.229" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:33.206" endtime="20201110 08:35:33.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.234" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:33.233" endtime="20201110 08:35:33.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.236" level="INFO">VALUE: 0.020102361</msg>
<status status="PASS" starttime="20201110 08:35:33.235" endtime="20201110 08:35:33.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.230" endtime="20201110 08:35:33.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.241" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:33.240" endtime="20201110 08:35:33.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:33.243" level="INFO">VALUE: [0.030534208, 0.040484569, 0.050456542, 0.060420389, 0.070384083, 0.080347444, 0.090311306, 0.100268375, 0.110232861, 0.120195125, 0.130167708, 0.140132125, 0.150096083, 0.160060069, 0.170024278, 0.179981986, 0.189944167, 0.199916681, 0.209880875, 0.219844653, 0.229799764, 0.239772264, 0.249736, 0.259699667, 0.269657097, 0.279619167, 0.289591514, 0.299555208, 0.309519111, 0.319475986, 0.329445833, 0.339409139, 0.349372486, 0.35932725, 0.36929975, 0.379263208, 0.389217333, 0.399189708, 0.409153847, 0.419108958, 0.429080944, 0.4390355, 0.449007375, 0.458970764, 0.468927056, 0.478897181, 0.488860583, 0.498824083, 0.508787472, 0.518744181, 0.52871425, 0.538677181, 0.548639236, 0.558595153, 0.568564264, 0.578518583, 0.588489958, 0.598453375, 0.608408069, 0.618379778, 0.628342653, 0.638305389, 0.648267861, 0.658222667, 0.668194222, 0.678157514, 0.688112097, 0.698075958, 0.708039278, 0.718004042, 0.727973417, 0.737936722, 0.747899819, 0.757862972, 0.767826153, 0.777789597, 0.787752486, 0.797708861, 0.807669889, 0.817641847, 0.827604583, 0.837561417, 0.847523069, 0.857495125, 0.867458611, 0.877422125, 0.887376639, 0.897349014, 0.907312389, 0.917266597, 0.927238736, 0.937202083, 0.947165264, 0.957121444, 0.967081361, 0.977052, 0.987014208, 0.996976472, 1.006938847, 1.016901931] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:33.242" endtime="20201110 08:35:33.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.237" endtime="20201110 08:35:33.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.246" endtime="20201110 08:35:33.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:33.250" endtime="20201110 08:35:33.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.248" endtime="20201110 08:35:33.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.245" endtime="20201110 08:35:33.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.678" endtime="20201110 08:35:33.270"></status>
</kw>
<msg timestamp="20201110 08:35:33.270" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:33.278" endtime="20201110 08:35:35.385"></status>
</kw>
<msg timestamp="20201110 08:35:35.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59960347, 'start-iter': 1, 'wakeups': [59970818, 59980813, 59990813, 6...</msg>
<status status="PASS" starttime="20201110 08:35:33.277" endtime="20201110 08:35:35.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59960347, 'start-iter': 1, 'wakeups': [59970818, 59980813, 59990813, 6...</msg>
<status status="PASS" starttime="20201110 08:35:35.389" endtime="20201110 08:35:35.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.395" endtime="20201110 08:35:35.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.274" endtime="20201110 08:35:35.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.272" endtime="20201110 08:35:35.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.405" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'start-time': 59960347, 'wakeups': [59970818, 59980813, 59990813, 60000813, 60010813, 60020806, 60030804, 60040813, 60050813, 60060813, 60070806, 60080813, ...</msg>
<status status="PASS" starttime="20201110 08:35:35.401" endtime="20201110 08:35:35.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.414" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:35.412" endtime="20201110 08:35:35.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.418" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:35.416" endtime="20201110 08:35:35.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.407" endtime="20201110 08:35:35.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.430" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:35.428" endtime="20201110 08:35:35.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.434" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:35.432" endtime="20201110 08:35:35.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.421" endtime="20201110 08:35:35.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.444" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.442" endtime="20201110 08:35:35.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.449" level="INFO">VALUE: 59960347</msg>
<status status="PASS" starttime="20201110 08:35:35.447" endtime="20201110 08:35:35.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.437" endtime="20201110 08:35:35.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.459" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.457" endtime="20201110 08:35:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.463" level="INFO">VALUE: [59970818, 59980813, 59990813, 60000813, 60010813, 60020806, 60030804, 60040813, 60050813, 60060813, 60070806, 60080813, 60090813, 60100813, 60110806, 60120804, 60130806, 60140804, 60150813, 60160813, 60170813, 60180806, 60190804, 60200813, 60210813, 60220813, 60230806, 60240804, 60250813, 60260813, 60270806, 60280804, 60290813, 60300813, 60310813, 60320806, 60330813, 60340813, 60350813, 60360813, 60370813, 60380806, 60390813, 60400813, 60410813, 60420806, 60430804, 60440813, 60450813, 60460813, 60470806, 60480804, 60490813, 60500813, 60510806, 60520804, 60530813, 60540813, 60550804, 60560813, 60570806, 60580804, 60590813, 60600813, 60610806, 60620804, 60630813, 60640813, 60650813, 60660806, 60670804, 60680813, 60690813, 60700813, 60710806, 60720804, 60730813, 60740813, 60750804, 60760804, 60770813, 60780813, 60790813, 60800813, 60810804, 60820813, 60830813, 60840813, 60850804, 60860813, 60870813, 60880806, 60890804, 60900813, 60910806, 60920813, 60930813, 60940813, 60950813, 60960813]</msg>
<status status="PASS" starttime="20201110 08:35:35.461" endtime="20201110 08:35:35.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.452" endtime="20201110 08:35:35.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.478" endtime="20201110 08:35:35.775"></status>
</kw>
<msg timestamp="20201110 08:35:35.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030225431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.475" endtime="20201110 08:35:35.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030225431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.779" endtime="20201110 08:35:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.786" endtime="20201110 08:35:35.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.470" endtime="20201110 08:35:35.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.466" endtime="20201110 08:35:35.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.813" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:35.790" endtime="20201110 08:35:35.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.818" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.817" endtime="20201110 08:35:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.820" level="INFO">VALUE: 0.019793556</msg>
<status status="PASS" starttime="20201110 08:35:35.819" endtime="20201110 08:35:35.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.814" endtime="20201110 08:35:35.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.825" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.824" endtime="20201110 08:35:35.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.827" level="INFO">VALUE: [0.030225431, 0.040183111, 0.050145542, 0.060107736, 0.070070292, 0.080025556, 0.089986417, 0.099958306, 0.109921194, 0.119883139, 0.129838431, 0.139807278, 0.149769514, 0.159732472, 0.169688792, 0.179649611, 0.189614111, 0.199574222, 0.209545875, 0.219509056, 0.229472653, 0.239428875, 0.249389736, 0.259361347, 0.269323681, 0.279286361, 0.289242917, 0.299204083, 0.309175389, 0.319138278, 0.329094778, 0.339055875, 0.349027347, 0.358990097, 0.368952569, 0.37890875, 0.388878069, 0.398840264, 0.408803028, 0.418766292, 0.428729528, 0.438685361, 0.448654903, 0.458618056, 0.468580861, 0.478537181, 0.488497958, 0.498469208, 0.508431708, 0.518393542, 0.528349153, 0.538309417, 0.548280653, 0.558243458, 0.568199472, 0.578160458, 0.588132069, 0.598094889, 0.608049264, 0.618020708, 0.627977069, 0.637938583, 0.647910542, 0.657873556, 0.66783, 0.677791069, 0.687763069, 0.697726111, 0.707688708, 0.717645556, 0.727606583, 0.737578306, 0.747540819, 0.757502889, 0.767458083, 0.777418014, 0.787388542, 0.797350333, 0.807303583, 0.817265403, 0.827235847, 0.837197542, 0.847159236, 0.857120403, 0.867073361, 0.877043333, 0.887005069, 0.896967167, 0.906920472, 0.916891111, 0.926852861, 0.936808014, 0.946767778, 0.956738319, 0.966693972, 0.976662708, 0.986624972, 0.996586722, 1.006548611, 1.016510819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:35.826" endtime="20201110 08:35:35.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.821" endtime="20201110 08:35:35.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.830" endtime="20201110 08:35:35.831"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.833" endtime="20201110 08:35:35.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.832" endtime="20201110 08:35:35.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.829" endtime="20201110 08:35:35.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:33.271" endtime="20201110 08:35:35.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.097" endtime="20201110 08:35:35.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:28.096" endtime="20201110 08:35:35.855"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:35.857" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.865" endtime="20201110 08:35:37.971"></status>
</kw>
<msg timestamp="20201110 08:35:37.972" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62556910, 'start-iter': 1, 'wakeups': [62567460, 62577452, 62587454, 6...</msg>
<status status="PASS" starttime="20201110 08:35:35.863" endtime="20201110 08:35:37.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.978" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62556910, 'start-iter': 1, 'wakeups': [62567460, 62577452, 62587454, 6...</msg>
<status status="PASS" starttime="20201110 08:35:37.975" endtime="20201110 08:35:37.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.981" endtime="20201110 08:35:37.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.861" endtime="20201110 08:35:37.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.859" endtime="20201110 08:35:37.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:38.001" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 62556910, 'wakeups': [62567460, 62577452, 62587454, 62597454, 62607454, 62617452, 62627454, 62637454, 62647454, 62657454, 62667454, 62677452, ...</msg>
<status status="PASS" starttime="20201110 08:35:37.996" endtime="20201110 08:35:38.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.009" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:38.007" endtime="20201110 08:35:38.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.013" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:38.011" endtime="20201110 08:35:38.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.002" endtime="20201110 08:35:38.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.023" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:38.021" endtime="20201110 08:35:38.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.027" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:38.025" endtime="20201110 08:35:38.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.016" endtime="20201110 08:35:38.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.033" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:38.032" endtime="20201110 08:35:38.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.037" level="INFO">VALUE: 62556910</msg>
<status status="PASS" starttime="20201110 08:35:38.035" endtime="20201110 08:35:38.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.030" endtime="20201110 08:35:38.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.041" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:38.040" endtime="20201110 08:35:38.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.043" level="INFO">VALUE: [62567460, 62577452, 62587454, 62597454, 62607454, 62617452, 62627454, 62637454, 62647454, 62657454, 62667454, 62677452, 62687454, 62697454, 62707452, 62717454, 62727454, 62737454, 62747454, 62757454, 62767454, 62777454, 62787454, 62797452, 62807454, 62817454, 62827454, 62837454, 62847454, 62857454, 62867454, 62877454, 62887454, 62897454, 62907454, 62917452, 62927454, 62937454, 62947452, 62957452, 62967452, 62977454, 62987452, 62997454, 63007454, 63017454, 63027454, 63037454, 63047454, 63057454, 63067454, 63077454, 63087454, 63097454, 63107452, 63117454, 63127454, 63137454, 63147454, 63157454, 63167454, 63177454, 63187454, 63197454, 63207454, 63217454, 63227454, 63237454, 63247454, 63257454, 63267454, 63277454, 63287452, 63297454, 63307454, 63317454, 63327454, 63337454, 63347452, 63357454, 63367454, 63377454, 63387454, 63397452, 63407454, 63417454, 63427452, 63437454, 63447454, 63457454, 63467454, 63477454, 63487454, 63497452, 63507454, 63517454, 63527454, 63537454, 63547454, 63557454]</msg>
<status status="PASS" starttime="20201110 08:35:38.042" endtime="20201110 08:35:38.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.038" endtime="20201110 08:35:38.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.051" endtime="20201110 08:35:38.341"></status>
</kw>
<msg timestamp="20201110 08:35:38.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033071208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.049" endtime="20201110 08:35:38.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033071208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.344" endtime="20201110 08:35:38.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.352" endtime="20201110 08:35:38.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.047" endtime="20201110 08:35:38.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.045" endtime="20201110 08:35:38.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:38.378" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:38.355" endtime="20201110 08:35:38.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.383" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:38.382" endtime="20201110 08:35:38.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.385" level="INFO">VALUE: 0.022561208</msg>
<status status="PASS" starttime="20201110 08:35:38.384" endtime="20201110 08:35:38.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.379" endtime="20201110 08:35:38.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.390" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:38.389" endtime="20201110 08:35:38.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.393" level="INFO">VALUE: [0.033071208, 0.043025597, 0.052989847, 0.062952111, 0.072913833, 0.082873667, 0.092837347, 0.102799681, 0.112761764, 0.122724347, 0.132686903, 0.142647875, 0.152612514, 0.162575139, 0.172535819, 0.182500292, 0.192462792, 0.202425444, 0.212387667, 0.222349681, 0.232311944, 0.242275083, 0.252238167, 0.262198958, 0.27216325, 0.282125361, 0.292087611, 0.30204975, 0.312012264, 0.321974056, 0.331936056, 0.341898097, 0.351859569, 0.361821306, 0.371783264, 0.3817435, 0.391706986, 0.401669583, 0.411629736, 0.421592097, 0.431554139, 0.441518431, 0.451479083, 0.461443639, 0.471406569, 0.481369458, 0.491332125, 0.501294486, 0.511256806, 0.521219361, 0.531181611, 0.541143208, 0.551104819, 0.561066625, 0.571026583, 0.580990042, 0.590952083, 0.600913722, 0.610875583, 0.62083775, 0.630799625, 0.640761819, 0.650723028, 0.66068425, 0.670646333, 0.680609028, 0.690571, 0.700533083, 0.710495292, 0.72045725, 0.730418903, 0.740380694, 0.750341042, 0.760305292, 0.770266986, 0.780229153, 0.790191681, 0.800153597, 0.810114264, 0.820078583, 0.830041, 0.840003458, 0.849965847, 0.859925944, 0.869890181, 0.879852694, 0.889813472, 0.89977725, 0.909738944, 0.919700792, 0.929662819, 0.939624764, 0.949586958, 0.959547194, 0.969511361, 0.979474139, 0.989436389, 0.999398444, 1.009360958, 1.019323472] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:38.392" endtime="20201110 08:35:38.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.386" endtime="20201110 08:35:38.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.396" endtime="20201110 08:35:38.397"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:38.400" endtime="20201110 08:35:38.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.398" endtime="20201110 08:35:38.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.394" endtime="20201110 08:35:38.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.858" endtime="20201110 08:35:38.420"></status>
</kw>
<msg timestamp="20201110 08:35:38.420" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.428" endtime="20201110 08:35:40.535"></status>
</kw>
<msg timestamp="20201110 08:35:40.536" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65130187, 'start-iter': 1, 'wakeups': [65140737, 65150731, 65160729, 6...</msg>
<status status="PASS" starttime="20201110 08:35:38.427" endtime="20201110 08:35:40.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.542" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 65130187, 'start-iter': 1, 'wakeups': [65140737, 65150731, 65160729, 6...</msg>
<status status="PASS" starttime="20201110 08:35:40.538" endtime="20201110 08:35:40.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.544" endtime="20201110 08:35:40.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.424" endtime="20201110 08:35:40.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.422" endtime="20201110 08:35:40.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.555" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 65130187, 'wakeups': [65140737, 65150731, 65160729, 65170731, 65180731, 65190731, 65200731, 65210731, 65220731, 65230731, 65240731, 65250731, ...</msg>
<status status="PASS" starttime="20201110 08:35:40.551" endtime="20201110 08:35:40.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.563" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:40.561" endtime="20201110 08:35:40.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.567" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:40.566" endtime="20201110 08:35:40.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.557" endtime="20201110 08:35:40.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.578" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:40.576" endtime="20201110 08:35:40.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.582" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:40.581" endtime="20201110 08:35:40.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.571" endtime="20201110 08:35:40.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.590" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.589" endtime="20201110 08:35:40.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.592" level="INFO">VALUE: 65130187</msg>
<status status="PASS" starttime="20201110 08:35:40.591" endtime="20201110 08:35:40.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.585" endtime="20201110 08:35:40.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.597" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.596" endtime="20201110 08:35:40.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.599" level="INFO">VALUE: [65140737, 65150731, 65160729, 65170731, 65180731, 65190731, 65200731, 65210731, 65220731, 65230731, 65240731, 65250731, 65260731, 65270731, 65280731, 65290731, 65300731, 65310731, 65320731, 65330731, 65340731, 65350729, 65360729, 65370731, 65380731, 65390731, 65400731, 65410731, 65420731, 65430731, 65440731, 65450731, 65460731, 65470731, 65480731, 65490731, 65500731, 65510731, 65520731, 65530731, 65540731, 65550731, 65560731, 65570729, 65580731, 65590731, 65600731, 65610731, 65620731, 65630731, 65640729, 65650731, 65660731, 65670731, 65680731, 65690731, 65700731, 65710729, 65720731, 65730731, 65740731, 65750731, 65760731, 65770731, 65780729, 65790731, 65800731, 65810731, 65820731, 65830731, 65840731, 65850731, 65860729, 65870731, 65880731, 65890731, 65900731, 65910729, 65920731, 65930731, 65940731, 65950729, 65960731, 65970731, 65980731, 65990731, 66000731, 66010731, 66020729, 66030731, 66040729, 66050731, 66060731, 66070731, 66080731, 66090729, 66100731, 66110731, 66120729, 66130731]</msg>
<status status="PASS" starttime="20201110 08:35:40.598" endtime="20201110 08:35:40.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.594" endtime="20201110 08:35:40.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.608" endtime="20201110 08:35:40.897"></status>
</kw>
<msg timestamp="20201110 08:35:40.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030329861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.606" endtime="20201110 08:35:40.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019819042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030329861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.901" endtime="20201110 08:35:40.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.909" endtime="20201110 08:35:40.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.603" endtime="20201110 08:35:40.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.601" endtime="20201110 08:35:40.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.935" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:40.912" endtime="20201110 08:35:40.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.940" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.939" endtime="20201110 08:35:40.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.942" level="INFO">VALUE: 0.019819042</msg>
<status status="PASS" starttime="20201110 08:35:40.941" endtime="20201110 08:35:40.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.936" endtime="20201110 08:35:40.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.948" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.946" endtime="20201110 08:35:40.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.950" level="INFO">VALUE: [0.030329861, 0.040286889, 0.050247972, 0.060213333, 0.070176625, 0.080139958, 0.090103028, 0.100066569, 0.110030583, 0.119993278, 0.129955958, 0.139919306, 0.149882708, 0.159846472, 0.169810153, 0.179773264, 0.189737181, 0.199700319, 0.209663111, 0.219626167, 0.229589653, 0.239551403, 0.249515042, 0.259480694, 0.269444347, 0.27940875, 0.289372569, 0.299336611, 0.309300903, 0.319264792, 0.329228764, 0.339192764, 0.349156542, 0.359120236, 0.369083986, 0.379047819, 0.389011542, 0.398975056, 0.408938528, 0.418902181, 0.4288655, 0.438828833, 0.448791722, 0.458753208, 0.468717889, 0.478681111, 0.488644125, 0.498606944, 0.508570056, 0.518532667, 0.528493625, 0.538457403, 0.548419833, 0.558382722, 0.568345889, 0.578309764, 0.588273736, 0.598235694, 0.608200597, 0.618163556, 0.628126361, 0.638089306, 0.64805225, 0.658014639, 0.667975417, 0.677940931, 0.687904542, 0.697867694, 0.707830722, 0.717793514, 0.72775675, 0.737720083, 0.747681222, 0.757646069, 0.767609208, 0.777572514, 0.787535986, 0.797497861, 0.807463306, 0.817426847, 0.827390889, 0.837352361, 0.847318194, 0.857281847, 0.867245722, 0.877208778, 0.887172222, 0.897136264, 0.907098208, 0.917063917, 0.927025889, 0.936991639, 0.946955653, 0.956919333, 0.966883486, 0.976845833, 0.986811375, 0.996775, 1.006736792, 1.016702292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:40.949" endtime="20201110 08:35:40.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.943" endtime="20201110 08:35:40.951"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.953" endtime="20201110 08:35:40.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.956" endtime="20201110 08:35:40.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.955" endtime="20201110 08:35:40.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.951" endtime="20201110 08:35:40.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.421" endtime="20201110 08:35:40.977"></status>
</kw>
<msg timestamp="20201110 08:35:40.977" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.986" endtime="20201110 08:35:43.092"></status>
</kw>
<msg timestamp="20201110 08:35:43.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67697338, 'start-iter': 1, 'wakeups': [67707888, 67717882, 67727882, 6...</msg>
<status status="PASS" starttime="20201110 08:35:40.984" endtime="20201110 08:35:43.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.100" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67697338, 'start-iter': 1, 'wakeups': [67707888, 67717882, 67727882, 6...</msg>
<status status="PASS" starttime="20201110 08:35:43.096" endtime="20201110 08:35:43.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.102" endtime="20201110 08:35:43.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.981" endtime="20201110 08:35:43.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.979" endtime="20201110 08:35:43.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.113" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'start-time': 67697338, 'wakeups': [67707888, 67717882, 67727882, 67737882, 67747882, 67757882, 67767882, 67777882, 67787882, 67797882, 67807882, 67817880, ...</msg>
<status status="PASS" starttime="20201110 08:35:43.109" endtime="20201110 08:35:43.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.121" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:43.119" endtime="20201110 08:35:43.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:43.123" endtime="20201110 08:35:43.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.115" endtime="20201110 08:35:43.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.135" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:43.133" endtime="20201110 08:35:43.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.140" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:43.138" endtime="20201110 08:35:43.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.128" endtime="20201110 08:35:43.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.150" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.148" endtime="20201110 08:35:43.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.155" level="INFO">VALUE: 67697338</msg>
<status status="PASS" starttime="20201110 08:35:43.153" endtime="20201110 08:35:43.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.143" endtime="20201110 08:35:43.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.164" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.162" endtime="20201110 08:35:43.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.169" level="INFO">VALUE: [67707888, 67717882, 67727882, 67737882, 67747882, 67757882, 67767882, 67777882, 67787882, 67797882, 67807882, 67817880, 67827882, 67837882, 67847882, 67857882, 67867882, 67877882, 67887882, 67897882, 67907882, 67917882, 67927882, 67937882, 67947882, 67957880, 67967882, 67977882, 67987882, 67997882, 68007882, 68017882, 68027882, 68037882, 68047882, 68057882, 68067880, 68077882, 68087882, 68097882, 68107882, 68117882, 68127882, 68137882, 68147882, 68157882, 68167882, 68177882, 68187882, 68197882, 68207882, 68217882, 68227882, 68237882, 68247882, 68257882, 68267880, 68277882, 68287880, 68297882, 68307882, 68317882, 68327882, 68337882, 68347882, 68357882, 68367882, 68377882, 68387882, 68397882, 68407882, 68417882, 68427880, 68437880, 68447882, 68457882, 68467882, 68477882, 68487882, 68497882, 68507880, 68517882, 68527882, 68537882, 68547882, 68557880, 68567882, 68577882, 68587882, 68597882, 68607882, 68617882, 68627882, 68637882, 68647882, 68657882, 68667882, 68677880, 68687882, 68697882]</msg>
<status status="PASS" starttime="20201110 08:35:43.167" endtime="20201110 08:35:43.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.158" endtime="20201110 08:35:43.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.184" endtime="20201110 08:35:43.477"></status>
</kw>
<msg timestamp="20201110 08:35:43.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031226486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.181" endtime="20201110 08:35:43.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031226486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.480" endtime="20201110 08:35:43.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.488" endtime="20201110 08:35:43.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.176" endtime="20201110 08:35:43.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.172" endtime="20201110 08:35:43.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.515" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:43.491" endtime="20201110 08:35:43.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.519" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.518" endtime="20201110 08:35:43.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.521" level="INFO">VALUE: 0.020715653</msg>
<status status="PASS" starttime="20201110 08:35:43.520" endtime="20201110 08:35:43.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.516" endtime="20201110 08:35:43.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.526" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.525" endtime="20201110 08:35:43.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.528" level="INFO">VALUE: [0.031226486, 0.041183903, 0.051146875, 0.061110222, 0.071073264, 0.081035931, 0.090999042, 0.100962889, 0.110926528, 0.120890319, 0.130853944, 0.140816125, 0.150781889, 0.160745708, 0.170709681, 0.180673569, 0.190637181, 0.200600597, 0.210563833, 0.220527222, 0.230490347, 0.240453417, 0.250416708, 0.26038075, 0.270345028, 0.280306903, 0.290272667, 0.300236236, 0.310199583, 0.320163042, 0.330126431, 0.340089917, 0.350053028, 0.360015764, 0.369978694, 0.379941931, 0.389903306, 0.399868639, 0.409832486, 0.419796139, 0.429759444, 0.439722403, 0.449686042, 0.459649736, 0.469613028, 0.479576931, 0.489540875, 0.499504958, 0.509468792, 0.519432903, 0.529397125, 0.539360819, 0.549324722, 0.559288569, 0.569253, 0.579217583, 0.589180403, 0.599146597, 0.609109264, 0.619075125, 0.629038833, 0.6390025, 0.648966542, 0.658930181, 0.6688935, 0.678857111, 0.688820722, 0.698784208, 0.708747833, 0.718711931, 0.728676375, 0.738640542, 0.748602694, 0.758566264, 0.768531222, 0.778494556, 0.788457736, 0.798420806, 0.808383361, 0.818345903, 0.828306806, 0.838271792, 0.848233986, 0.858195625, 0.868158194, 0.878119458, 0.888084097, 0.898047403, 0.908010458, 0.917973514, 0.927936597, 0.937899889, 0.94786275, 0.957825667, 0.967788542, 0.977751264, 0.987714056, 0.997674806, 1.007639236, 1.017601708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:43.527" endtime="20201110 08:35:43.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.522" endtime="20201110 08:35:43.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.532" endtime="20201110 08:35:43.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.535" endtime="20201110 08:35:43.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.534" endtime="20201110 08:35:43.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.530" endtime="20201110 08:35:43.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.978" endtime="20201110 08:35:43.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.856" endtime="20201110 08:35:43.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.855" endtime="20201110 08:35:43.557"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:43.559" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.567" endtime="20201110 08:35:45.675"></status>
</kw>
<msg timestamp="20201110 08:35:45.676" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70288242, 'start-iter': 1, 'wakeups': [70298884, 70308858, 70318857,...</msg>
<status status="PASS" starttime="20201110 08:35:43.565" endtime="20201110 08:35:45.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.682" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70288242, 'start-iter': 1, 'wakeups': [70298884, 70308858, 70318857,...</msg>
<status status="PASS" starttime="20201110 08:35:45.678" endtime="20201110 08:35:45.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.684" endtime="20201110 08:35:45.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.563" endtime="20201110 08:35:45.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.561" endtime="20201110 08:35:45.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.695" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 70288242, 'wakeups': [70298884, 70308858, 70318857, 70328857, 70338847, 70348857, 70358857, 70368847, 70378857, 70388857, 70398857, 70408857,...</msg>
<status status="PASS" starttime="20201110 08:35:45.691" endtime="20201110 08:35:45.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.705" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:45.701" endtime="20201110 08:35:45.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.710" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:45.708" endtime="20201110 08:35:45.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.696" endtime="20201110 08:35:45.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.719" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:45.717" endtime="20201110 08:35:45.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.724" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:45.722" endtime="20201110 08:35:45.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.712" endtime="20201110 08:35:45.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.734" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.732" endtime="20201110 08:35:45.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.738" level="INFO">VALUE: 70288242</msg>
<status status="PASS" starttime="20201110 08:35:45.736" endtime="20201110 08:35:45.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.727" endtime="20201110 08:35:45.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.748" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.746" endtime="20201110 08:35:45.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.753" level="INFO">VALUE: [70298884, 70308858, 70318857, 70328857, 70338847, 70348857, 70358857, 70368847, 70378857, 70388857, 70398857, 70408857, 70418857, 70428857, 70438857, 70448857, 70458857, 70468847, 70478857, 70488857, 70498857, 70508857, 70518857, 70528857, 70538857, 70548857, 70558857, 70568857, 70578857, 70588857, 70598857, 70608857, 70618857, 70628857, 70638857, 70648857, 70658857, 70668857, 70678857, 70688857, 70698857, 70708857, 70718857, 70728857, 70738857, 70748847, 70758857, 70768857, 70778857, 70788857, 70798857, 70808857, 70818857, 70828857, 70838857, 70848857, 70858857, 70868857, 70878857, 70888857, 70898857, 70908847, 70918857, 70928857, 70938857, 70948857, 70958857, 70968857, 70978857, 70988857, 70998857, 71008847, 71018857, 71028857, 71038857, 71048857, 71058857, 71068857, 71078857, 71088857, 71098857, 71108857, 71118857, 71128857, 71138857, 71148857, 71158847, 71168857, 71178857, 71188857, 71198857, 71208857, 71218857, 71228857, 71238857, 71248857, 71258857, 71268857, 71278857, 71288857]</msg>
<status status="PASS" starttime="20201110 08:35:45.750" endtime="20201110 08:35:45.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.741" endtime="20201110 08:35:45.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.768" endtime="20201110 08:35:46.066"></status>
</kw>
<msg timestamp="20201110 08:35:46.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033228597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.765" endtime="20201110 08:35:46.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022627097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033228597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.070" endtime="20201110 08:35:46.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.078" endtime="20201110 08:35:46.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.760" endtime="20201110 08:35:46.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.756" endtime="20201110 08:35:46.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:46.105" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:46.081" endtime="20201110 08:35:46.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.109" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:46.108" endtime="20201110 08:35:46.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.111" level="INFO">VALUE: 0.022627097</msg>
<status status="PASS" starttime="20201110 08:35:46.110" endtime="20201110 08:35:46.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.106" endtime="20201110 08:35:46.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.117" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:46.116" endtime="20201110 08:35:46.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.119" level="INFO">VALUE: [0.033228597, 0.043165417, 0.053126681, 0.063088722, 0.073040528, 0.083012667, 0.092975472, 0.102928569, 0.112901681, 0.122864236, 0.132826347, 0.142788583, 0.1527505, 0.162712861, 0.172674514, 0.182636833, 0.192599153, 0.202551389, 0.212523458, 0.222485722, 0.23244775, 0.24240925, 0.252371042, 0.262333028, 0.272294792, 0.282256403, 0.292218181, 0.302179792, 0.312142333, 0.3221045, 0.332066444, 0.342029083, 0.351991861, 0.361954444, 0.371916417, 0.381878431, 0.391840458, 0.401802194, 0.411764028, 0.421725819, 0.431688375, 0.441650569, 0.451612861, 0.461575417, 0.471538056, 0.481490694, 0.491463264, 0.501425222, 0.511387306, 0.521349819, 0.531312625, 0.541275389, 0.551238486, 0.561201708, 0.571164708, 0.581127403, 0.591089986, 0.601052792, 0.6110155, 0.620978431, 0.630941375, 0.640894222, 0.650867681, 0.660831028, 0.670793944, 0.680757347, 0.690720639, 0.700683611, 0.710646403, 0.720608972, 0.730571778, 0.740524736, 0.750497681, 0.760460958, 0.770423653, 0.780386528, 0.79034925, 0.800311972, 0.810275319, 0.820238181, 0.830201153, 0.840164528, 0.8501275, 0.860090542, 0.870053375, 0.880016319, 0.889969236, 0.899941875, 0.909904778, 0.919867417, 0.929830389, 0.939792625, 0.949755194, 0.959717806, 0.969680694, 0.979643625, 0.98960725, 0.999570125, 1.009532958, 1.019496139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:46.118" endtime="20201110 08:35:46.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.113" endtime="20201110 08:35:46.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.122" endtime="20201110 08:35:46.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:46.125" endtime="20201110 08:35:46.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.124" endtime="20201110 08:35:46.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.120" endtime="20201110 08:35:46.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.560" endtime="20201110 08:35:46.147"></status>
</kw>
<msg timestamp="20201110 08:35:46.147" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.155" endtime="20201110 08:35:48.262"></status>
</kw>
<msg timestamp="20201110 08:35:48.263" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72886355, 'start-iter': 1, 'wakeups': [72896967, 72906970, 72916970,...</msg>
<status status="PASS" starttime="20201110 08:35:46.154" endtime="20201110 08:35:48.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.269" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72886355, 'start-iter': 1, 'wakeups': [72896967, 72906970, 72916970,...</msg>
<status status="PASS" starttime="20201110 08:35:48.266" endtime="20201110 08:35:48.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.271" endtime="20201110 08:35:48.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.151" endtime="20201110 08:35:48.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.149" endtime="20201110 08:35:48.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.282" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 72886355, 'wakeups': [72896967, 72906970, 72916970, 72926970, 72936970, 72946970, 72956970, 72966970, 72976970, 72986970, 72996970, 73006970,...</msg>
<status status="PASS" starttime="20201110 08:35:48.278" endtime="20201110 08:35:48.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.290" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:48.288" endtime="20201110 08:35:48.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.295" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:48.293" endtime="20201110 08:35:48.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.284" endtime="20201110 08:35:48.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.305" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:48.303" endtime="20201110 08:35:48.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.309" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:48.307" endtime="20201110 08:35:48.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.298" endtime="20201110 08:35:48.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.321" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.319" endtime="20201110 08:35:48.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.325" level="INFO">VALUE: 72886355</msg>
<status status="PASS" starttime="20201110 08:35:48.323" endtime="20201110 08:35:48.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.312" endtime="20201110 08:35:48.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.335" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.333" endtime="20201110 08:35:48.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.340" level="INFO">VALUE: [72896967, 72906970, 72916970, 72926970, 72936970, 72946970, 72956970, 72966970, 72976970, 72986970, 72996970, 73006970, 73016970, 73026970, 73036970, 73046970, 73056970, 73066960, 73076970, 73086970, 73096970, 73106970, 73116970, 73126970, 73136970, 73146970, 73156970, 73166970, 73176970, 73186970, 73196970, 73206970, 73216970, 73226970, 73236970, 73246970, 73256970, 73266970, 73276970, 73286970, 73296970, 73306970, 73316970, 73326970, 73336970, 73346970, 73356970, 73366970, 73376970, 73386970, 73396970, 73406970, 73416970, 73426970, 73436970, 73446970, 73456970, 73466970, 73476960, 73486970, 73496970, 73506970, 73516970, 73526970, 73536960, 73546960, 73556970, 73566970, 73576970, 73586970, 73596970, 73606970, 73616970, 73626970, 73636970, 73646970, 73656970, 73666970, 73676970, 73686970, 73696970, 73706970, 73716970, 73726970, 73736960, 73746970, 73756970, 73766970, 73776970, 73786970, 73796970, 73806970, 73816970, 73826970, 73836970, 73846960, 73856970, 73866970, 73876970, 73886970]</msg>
<status status="PASS" starttime="20201110 08:35:48.338" endtime="20201110 08:35:48.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.328" endtime="20201110 08:35:48.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.356" endtime="20201110 08:35:48.653"></status>
</kw>
<msg timestamp="20201110 08:35:48.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02055925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031132181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:48.353" endtime="20201110 08:35:48.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02055925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031132181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:48.657" endtime="20201110 08:35:48.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.664" endtime="20201110 08:35:48.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.347" endtime="20201110 08:35:48.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.343" endtime="20201110 08:35:48.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.690" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:48.667" endtime="20201110 08:35:48.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.695" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.694" endtime="20201110 08:35:48.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.697" level="INFO">VALUE: 0.02055925</msg>
<status status="PASS" starttime="20201110 08:35:48.696" endtime="20201110 08:35:48.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.691" endtime="20201110 08:35:48.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.703" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.702" endtime="20201110 08:35:48.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.705" level="INFO">VALUE: [0.031132181, 0.041097319, 0.05106025, 0.061023028, 0.070986083, 0.080948403, 0.090910889, 0.100873806, 0.110836792, 0.120800292, 0.130763708, 0.140727264, 0.150690736, 0.160654028, 0.170617389, 0.180580861, 0.190543861, 0.200497389, 0.210470792, 0.220433972, 0.230397097, 0.240360444, 0.250323792, 0.260287306, 0.270250236, 0.280213403, 0.290176917, 0.300140597, 0.310103681, 0.320066528, 0.330029681, 0.339992972, 0.349956278, 0.359919556, 0.369882583, 0.379846222, 0.389809833, 0.399773153, 0.409736333, 0.419699597, 0.429662944, 0.439626347, 0.449589667, 0.459553361, 0.469517347, 0.479481056, 0.489444069, 0.499407042, 0.509369653, 0.519332111, 0.529294875, 0.539258, 0.549220764, 0.559183556, 0.569146708, 0.579109764, 0.589073694, 0.599037125, 0.608991056, 0.618964625, 0.628928292, 0.638893111, 0.648857278, 0.658821764, 0.668776153, 0.678739736, 0.688712583, 0.698675556, 0.708639486, 0.718603514, 0.728567111, 0.738530403, 0.748493708, 0.758457083, 0.768420097, 0.778383528, 0.788346653, 0.798309819, 0.808273347, 0.818237125, 0.828200667, 0.838163917, 0.848127083, 0.858090167, 0.868044014, 0.878017528, 0.887981139, 0.897945208, 0.907909056, 0.917872736, 0.927836403, 0.937800236, 0.947763875, 0.957727972, 0.967692139, 0.977646333, 0.987620361, 0.997583639, 1.007547319, 1.017511236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:48.704" endtime="20201110 08:35:48.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.699" endtime="20201110 08:35:48.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.708" endtime="20201110 08:35:48.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:48.711" endtime="20201110 08:35:48.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.710" endtime="20201110 08:35:48.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.706" endtime="20201110 08:35:48.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.148" endtime="20201110 08:35:48.732"></status>
</kw>
<msg timestamp="20201110 08:35:48.732" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.740" endtime="20201110 08:35:50.847"></status>
</kw>
<msg timestamp="20201110 08:35:50.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75480923, 'start-iter': 1, 'wakeups': [75491535, 75501538, 75511538,...</msg>
<status status="PASS" starttime="20201110 08:35:48.739" endtime="20201110 08:35:50.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.855" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75480923, 'start-iter': 1, 'wakeups': [75491535, 75501538, 75511538,...</msg>
<status status="PASS" starttime="20201110 08:35:50.851" endtime="20201110 08:35:50.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.857" endtime="20201110 08:35:50.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.736" endtime="20201110 08:35:50.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.734" endtime="20201110 08:35:50.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:50.868" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'start-time': 75480923, 'wakeups': [75491535, 75501538, 75511538, 75521538, 75531538, 75541538, 75551538, 75561538, 75571528, 75581528, 75591528, 75601538,...</msg>
<status status="PASS" starttime="20201110 08:35:50.864" endtime="20201110 08:35:50.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.876" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:50.874" endtime="20201110 08:35:50.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.881" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:50.879" endtime="20201110 08:35:50.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.869" endtime="20201110 08:35:50.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.891" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:50.889" endtime="20201110 08:35:50.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.895" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:50.893" endtime="20201110 08:35:50.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.883" endtime="20201110 08:35:50.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.905" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:50.903" endtime="20201110 08:35:50.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.909" level="INFO">VALUE: 75480923</msg>
<status status="PASS" starttime="20201110 08:35:50.907" endtime="20201110 08:35:50.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.898" endtime="20201110 08:35:50.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.921" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:50.917" endtime="20201110 08:35:50.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:50.926" level="INFO">VALUE: [75491535, 75501538, 75511538, 75521538, 75531538, 75541538, 75551538, 75561538, 75571528, 75581528, 75591528, 75601538, 75611538, 75621538, 75631538, 75641528, 75651538, 75661538, 75671538, 75681538, 75691538, 75701538, 75711538, 75721538, 75731538, 75741538, 75751538, 75761538, 75771538, 75781538, 75791538, 75801528, 75811538, 75821538, 75831538, 75841538, 75851538, 75861538, 75871538, 75881538, 75891538, 75901538, 75911538, 75921538, 75931538, 75941538, 75951538, 75961538, 75971538, 75981538, 75991538, 76001538, 76011538, 76021538, 76031538, 76041538, 76051538, 76061538, 76071538, 76081538, 76091538, 76101538, 76111538, 76121538, 76131538, 76141538, 76151538, 76161538, 76171528, 76181538, 76191528, 76201528, 76211528, 76221538, 76231538, 76241538, 76251538, 76261538, 76271538, 76281538, 76291538, 76301538, 76311538, 76321538, 76331538, 76341538, 76351538, 76361538, 76371538, 76381538, 76391538, 76401538, 76411538, 76421538, 76431538, 76441538, 76451538, 76461538, 76471538, 76481538]</msg>
<status status="PASS" starttime="20201110 08:35:50.923" endtime="20201110 08:35:50.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.912" endtime="20201110 08:35:50.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:50.941" endtime="20201110 08:35:51.238"></status>
</kw>
<msg timestamp="20201110 08:35:51.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0304375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:50.938" endtime="20201110 08:35:51.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019863472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0304375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:35:51.242" endtime="20201110 08:35:51.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.250" endtime="20201110 08:35:51.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.932" endtime="20201110 08:35:51.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:50.929" endtime="20201110 08:35:51.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.276" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:35:51.253" endtime="20201110 08:35:51.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.281" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:35:51.280" endtime="20201110 08:35:51.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.283" level="INFO">VALUE: 0.019863472</msg>
<status status="PASS" starttime="20201110 08:35:51.282" endtime="20201110 08:35:51.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.277" endtime="20201110 08:35:51.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.288" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:51.287" endtime="20201110 08:35:51.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.290" level="INFO">VALUE: [0.0304375, 0.040403431, 0.050367292, 0.060331389, 0.070295389, 0.08025875, 0.090222986, 0.100186944, 0.110141097, 0.120105208, 0.130069028, 0.140042958, 0.150007028, 0.159971431, 0.169935556, 0.179889264, 0.189862903, 0.199826431, 0.209790083, 0.219753306, 0.229716167, 0.239678931, 0.249642222, 0.259605181, 0.269567861, 0.279530444, 0.289493056, 0.299455806, 0.309418514, 0.319381361, 0.329344097, 0.339297153, 0.349270361, 0.359233625, 0.36919725, 0.379160472, 0.389123764, 0.399087222, 0.409050278, 0.419013569, 0.428976722, 0.438939917, 0.4489035, 0.458867, 0.468830417, 0.478794181, 0.488757708, 0.498720667, 0.508683875, 0.518647472, 0.528610986, 0.538574542, 0.548537472, 0.558500319, 0.568463472, 0.578426278, 0.588389181, 0.598352306, 0.608315375, 0.618278444, 0.628241153, 0.6382045, 0.648168306, 0.658132056, 0.668096486, 0.678060819, 0.688024778, 0.697988736, 0.707942778, 0.717916847, 0.727871111, 0.737835181, 0.747798958, 0.75777275, 0.76773675, 0.777700958, 0.787665097, 0.797629111, 0.807592944, 0.817557319, 0.827521278, 0.837484931, 0.847449111, 0.857413764, 0.867378333, 0.877342375, 0.887306264, 0.89727075, 0.907235306, 0.917198819, 0.927162861, 0.937127361, 0.947092264, 0.957056958, 0.967021583, 0.976986208, 0.986950375, 0.996914222, 1.006878278, 1.016842486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:51.289" endtime="20201110 08:35:51.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.284" endtime="20201110 08:35:51.291"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.293" endtime="20201110 08:35:51.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:51.298" endtime="20201110 08:35:51.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.295" endtime="20201110 08:35:51.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.292" endtime="20201110 08:35:51.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.733" endtime="20201110 08:35:51.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.558" endtime="20201110 08:35:51.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.557" endtime="20201110 08:35:51.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.931" endtime="20201110 08:35:51.319"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:33.863" endtime="20201110 08:35:51.320" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:34:32.366" endtime="20201110 08:35:51.323"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:32:45.301" endtime="20201110 08:35:51.338"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_saml10-xpro</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
