<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201110 08:36:55.904" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:56.482" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:56.491" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:57.692" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:56.481" endtime="20201110 08:36:57.693"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.696" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:57.694" endtime="20201110 08:36:57.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.479" endtime="20201110 08:36:57.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.699" endtime="20201110 08:36:57.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.697" endtime="20201110 08:36:57.944"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.957" endtime="20201110 08:36:57.971"></status>
</kw>
<msg timestamp="20201110 08:36:57.972" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:36:57.956" endtime="20201110 08:36:57.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.974" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:36:57.973" endtime="20201110 08:36:57.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.977" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:57.975" endtime="20201110 08:36:57.978"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:57.953" endtime="20201110 08:36:57.978"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:57.950" endtime="20201110 08:36:57.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.949" endtime="20201110 08:36:57.979"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:57.983" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:57.982" endtime="20201110 08:36:57.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.980" endtime="20201110 08:36:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.948" endtime="20201110 08:36:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.948" endtime="20201110 08:36:57.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.985" endtime="20201110 08:36:57.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.946" endtime="20201110 08:36:57.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:57.987" endtime="20201110 08:36:57.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.945" endtime="20201110 08:36:57.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:56.478" endtime="20201110 08:36:57.990"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.996" endtime="20201110 08:36:58.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.994" endtime="20201110 08:36:58.016"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.030" endtime="20201110 08:36:58.044"></status>
</kw>
<msg timestamp="20201110 08:36:58.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.028" endtime="20201110 08:36:58.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.045" endtime="20201110 08:36:58.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:58.048" endtime="20201110 08:36:58.050"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.026" endtime="20201110 08:36:58.050"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.024" endtime="20201110 08:36:58.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.021" endtime="20201110 08:36:58.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:58.055" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:58.054" endtime="20201110 08:36:58.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.052" endtime="20201110 08:36:58.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.020" endtime="20201110 08:36:58.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.020" endtime="20201110 08:36:58.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.056" endtime="20201110 08:36:58.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.018" endtime="20201110 08:36:58.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.017" endtime="20201110 08:36:58.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.993" endtime="20201110 08:36:58.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.066" endtime="20201110 08:36:58.076"></status>
</kw>
<msg timestamp="20201110 08:36:58.076" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.064" endtime="20201110 08:36:58.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.078" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.077" endtime="20201110 08:36:58.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.079" endtime="20201110 08:36:58.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.062" endtime="20201110 08:36:58.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.060" endtime="20201110 08:36:58.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.086" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:36:58.085" endtime="20201110 08:36:58.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.088" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:36:58.087" endtime="20201110 08:36:58.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.083" endtime="20201110 08:36:58.089"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:57.990" endtime="20201110 08:36:58.089" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:56.026" endtime="20201110 08:36:58.092"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.145" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:58.154" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:59.311" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:58.144" endtime="20201110 08:36:59.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.326" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:36:59.320" endtime="20201110 08:36:59.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.143" endtime="20201110 08:36:59.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.336" endtime="20201110 08:36:59.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.332" endtime="20201110 08:36:59.575"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.587" endtime="20201110 08:36:59.601"></status>
</kw>
<msg timestamp="20201110 08:36:59.602" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.586" endtime="20201110 08:36:59.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.603" endtime="20201110 08:36:59.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.609" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:59.606" endtime="20201110 08:36:59.609"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:59.583" endtime="20201110 08:36:59.610"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:59.581" endtime="20201110 08:36:59.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.580" endtime="20201110 08:36:59.610"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:59.614" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:59.614" endtime="20201110 08:36:59.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.611" endtime="20201110 08:36:59.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.579" endtime="20201110 08:36:59.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.578" endtime="20201110 08:36:59.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.616" endtime="20201110 08:36:59.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.577" endtime="20201110 08:36:59.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.619" endtime="20201110 08:36:59.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.576" endtime="20201110 08:36:59.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.142" endtime="20201110 08:36:59.621"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.627" endtime="20201110 08:36:59.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.626" endtime="20201110 08:36:59.647"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.663" endtime="20201110 08:36:59.678"></status>
</kw>
<msg timestamp="20201110 08:36:59.679" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.660" endtime="20201110 08:36:59.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.683" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.680" endtime="20201110 08:36:59.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.688" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:59.685" endtime="20201110 08:36:59.688"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:59.657" endtime="20201110 08:36:59.689"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:59.654" endtime="20201110 08:36:59.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.653" endtime="20201110 08:36:59.691"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:59.697" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:59.695" endtime="20201110 08:36:59.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.692" endtime="20201110 08:36:59.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.652" endtime="20201110 08:36:59.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.651" endtime="20201110 08:36:59.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.699" endtime="20201110 08:36:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.650" endtime="20201110 08:36:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.648" endtime="20201110 08:36:59.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.624" endtime="20201110 08:36:59.702"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:59.704" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.712" endtime="20201110 08:36:59.722"></status>
</kw>
<msg timestamp="20201110 08:36:59.723" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.710" endtime="20201110 08:36:59.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.725" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.724" endtime="20201110 08:36:59.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.726" endtime="20201110 08:36:59.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.707" endtime="20201110 08:36:59.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.706" endtime="20201110 08:36:59.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.736" endtime="20201110 08:37:00.026"></status>
</kw>
<msg timestamp="20201110 08:37:00.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074505319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.734" endtime="20201110 08:37:00.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074505319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.030" endtime="20201110 08:37:00.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.039" endtime="20201110 08:37:00.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.731" endtime="20201110 08:37:00.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.730" endtime="20201110 08:37:00.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.046" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:00.044" endtime="20201110 08:37:00.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.051" level="INFO">VALUE: [{'time': 0.074504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074505319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074517653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2334000000002732e-05, 'source_diff': 1.2334000000002732e-05}, {'time': 0.074518125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074526625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.074527097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074535778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.680999999996497e-06, 'source_diff': 8.680999999996497e-06}, {'time': 0.07453625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074543528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.074544, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074550306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.074550792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074564597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999174e-05, 'source_diff': 1.380499999999174e-05}, {'time': 0.074565083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074576917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1834000000002232e-05, 'source_diff': 1.1834000000002232e-05}, {'time': 0.074577389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074581694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305000000009995e-06, 'source_diff': 4.305000000009995e-06}, {'time': 0.074582167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074596653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4485999999994115e-05, 'source_diff': 1.4485999999994115e-05}, {'time': 0.074597125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074607611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.074608083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074619403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319999999995223e-05, 'source_diff': 1.1319999999995223e-05}, {'time': 0.074619875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074633542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3666999999994989e-05, 'source_diff': 1.3666999999994989e-05}, {'time': 0.074634014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074640319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.074640792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074648944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.074649431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.074663403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.074663889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074676875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2986000000006492e-05, 'source_diff': 1.2986000000006492e-05}, {'time': 0.074677347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074682153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999996091e-06, 'source_diff': 4.805999999996091e-06}, {'time': 0.074682639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074689292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000009235e-06, 'source_diff': 6.653000000009235e-06}, {'time': 0.074689764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074703569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.380499999999174e-05, 'source_diff': 1.380499999999174e-05}, {'time': 0.074704056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000073427e-07, 'source_diff': 4.870000000073427e-07}, {'time': 0.074713097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.074713569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074724167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.074724639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074728958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319000000002626e-06, 'source_diff': 4.319000000002626e-06}, {'time': 0.074729431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074740778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1346999999994889e-05, 'source_diff': 1.1346999999994889e-05}, {'time': 0.07474125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074751708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458000000004852e-05, 'source_diff': 1.0458000000004852e-05}, {'time': 0.074752181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0747575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000003626e-06, 'source_diff': 5.319000000003626e-06}, {'time': 0.074757972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074762292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319999999988222e-06, 'source_diff': 4.319999999988222e-06}, {'time': 0.074762764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074771417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000011235e-06, 'source_diff': 8.653000000011235e-06}, {'time': 0.074771903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074781056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.074781528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074796167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4638999999996849e-05, 'source_diff': 1.4638999999996849e-05}, {'time': 0.074796653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074808472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.181899999999625e-05, 'source_diff': 1.181899999999625e-05}, {'time': 0.074808944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074814417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.4729999999919565e-06, 'source_diff': 5.4729999999919565e-06}, {'time': 0.074814903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074828403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.074828875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074833347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999991483e-06, 'source_diff': 4.471999999991483e-06}, {'time': 0.074833819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074847319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.074847792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074859931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2139000000008227e-05, 'source_diff': 1.2139000000008227e-05}, {'time': 0.074860403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074874403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.074874875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999998748243e-07, 'source_diff': 4.7199999998748243e-07}, {'time': 0.074882194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3190000000056266e-06, 'source_diff': 7.3190000000056266e-06}, {'time': 0.074882667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074895986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.074896458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074902444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.074902917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074915069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152000000001384e-05, 'source_diff': 1.2152000000001384e-05}, {'time': 0.074915542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074923847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.074924333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999939912e-07, 'source_diff': 4.859999999939912e-07}, {'time': 0.074931472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.074931958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.86000000007869e-07, 'source_diff': 4.86000000007869e-07}, {'time': 0.074942958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0999999999997123e-05, 'source_diff': 1.0999999999997123e-05}, {'time': 0.074943431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074957583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999989506e-05, 'source_diff': 1.4151999999989506e-05}, {'time': 0.074958056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074971194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138000000009753e-05, 'source_diff': 1.3138000000009753e-05}, {'time': 0.074971667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074982153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0485999999990114e-05, 'source_diff': 1.0485999999990114e-05}, {'time': 0.074982625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074990819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.194000000003032e-06, 'source_diff': 8.194000000003032e-06}, {'time': 0.074991292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.074999917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.075000389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.075009694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.075010181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999934649e-07, 'source_diff': 4.869999999934649e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:00.047" endtime="20201110 08:37:00.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.042" endtime="20201110 08:37:00.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:00.078" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.2334000000002732e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:00.054" endtime="20201110 08:37:00.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.082" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:00.081" endtime="20201110 08:37:00.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.086" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.2334000000002732e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.86000000007869e-07, 1.380499999999174e-05, 4.86000000007869e-07, 1.1834000000002232e-05, 4.7199999998748243e-07, 4.305000000009995e-06, 4.7300000000083386e-07, 1.4485999999994115e-05, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 1.1319999999995223e-05, 4.720000000013602e-07, 1.3666999999994989e-05, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.870000000073427e-07, 1.3972000000000984e-05, 4.859999999939912e-07, 1.2986000000006492e-05, 4.720000000013602e-07, 4.805999999996091e-06, 4.859999999939912e-07, 6.653000000009235e-06, 4.720000000013602e-07, 1.380499999999174e-05, 4.870000000073427e-07, 9.041000000001298e-06, 4.7199999998748243e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 1.1346999999994889e-05, 4.720000000013602e-07, 1.0458000000004852e-05, 4.7300000000083386e-07, 5.319000000003626e-06, 4.720000000013602e-07, 4.319999999988222e-06, 4.720000000013602e-07, 8.653000000011235e-06, 4.859999999939912e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.4638999999996849e-05, 4.86000000007869e-07, 1.181899999999625e-05, 4.720000000013602e-07, 5.4729999999919565e-06, 4.86000000007869e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 4.471999999991483e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.7300000000083386e-07, 1.2139000000008227e-05, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999998748243e-07, 7.3190000000056266e-06, 4.7300000000083386e-07, 1.331899999999775e-05, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.859999999939912e-07, 7.139000000003226e-06, 4.86000000007869e-07, 1.0999999999997123e-05, 4.7300000000083386e-07, 1.4151999999989506e-05, 4.7300000000083386e-07, 1.3138000000009753e-05, 4.7300000000083386e-07, 1.0485999999990114e-05, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 9.305000000001118e-06, 4.869999999934649e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.2334000000002732e-05, 4.720000000013602e-07, 8.499999999994623e-06, 4.720000000013602e-07, 8.680999999996497e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.86000000007869e-07, 1.380499999999174e-05, 4.86000000007869e-07, 1.1834000000002232e-05, 4.7199999998748243e-07, 4.305000000009995e-06, 4.7300000000083386e-07, 1.4485999999994115e-05, 4.720000000013602e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 1.1319999999995223e-05, 4.720000000013602e-07, 1.3666999999994989e-05, 4.720000000013602e-07, 6.304999999998118e-06, 4.7300000000083386e-07, 8.151999999997384e-06, 4.870000000073427e-07, 1.3972000000000984e-05, 4.859999999939912e-07, 1.2986000000006492e-05, 4.720000000013602e-07, 4.805999999996091e-06, 4.859999999939912e-07, 6.653000000009235e-06, 4.720000000013602e-07, 1.380499999999174e-05, 4.870000000073427e-07, 9.041000000001298e-06, 4.7199999998748243e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 4.319000000002626e-06, 4.7300000000083386e-07, 1.1346999999994889e-05, 4.720000000013602e-07, 1.0458000000004852e-05, 4.7300000000083386e-07, 5.319000000003626e-06, 4.720000000013602e-07, 4.319999999988222e-06, 4.720000000013602e-07, 8.653000000011235e-06, 4.859999999939912e-07, 9.152999999997857e-06, 4.720000000013602e-07, 1.4638999999996849e-05, 4.86000000007869e-07, 1.181899999999625e-05, 4.720000000013602e-07, 5.4729999999919565e-06, 4.86000000007869e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 4.471999999991483e-06, 4.720000000013602e-07, 1.3499999999999623e-05, 4.7300000000083386e-07, 1.2139000000008227e-05, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999998748243e-07, 7.3190000000056266e-06, 4.7300000000083386e-07, 1.331899999999775e-05, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 8.305000000000118e-06, 4.859999999939912e-07, 7.139000000003226e-06, 4.86000000007869e-07, 1.0999999999997123e-05, 4.7300000000083386e-07, 1.4151999999989506e-05, 4.7300000000083386e-07, 1.3138000000009753e-05, 4.7300000000083386e-07, 1.0485999999990114e-05, 4.720000000013602e-07, 8.194000000003032e-06, 4.7300000000083386e-07, 8.624999999998217e-06, 4.720000000013602e-07, 9.305000000001118e-06, 4.869999999934649e-07], 'time': [0.074504847, 0.074505319, 0.074517653, 0.074518125, 0.074526625, 0.074527097, 0.074535778, 0.07453625, 0.074543528, 0.074544, 0.074550306, 0.074550792, 0.074564597, 0.074565083, 0.074576917, 0.074577389, 0.074581694, 0.074582167, 0.074596653, 0.074597125, 0.074607611, 0.074608083, 0.074619403, 0.074619875, 0.074633542, 0.074634014, 0.074640319, 0.074640792, 0.074648944, 0.074649431, 0.074663403, 0.074663889, 0.074676875, 0.074677347, 0.074682153, 0.074682639, 0.074689292, 0.074689764, 0.074703569, 0.074704056, 0.074713097, 0.074713569, 0.074724167, 0.074724639, 0.074728958, 0.074729431, 0.074740778, 0.07474125, 0.074751708, 0.074752181, 0.0747575, 0.074757972, 0.074762292, 0.074762764, 0.074771417, 0.074771903, 0.074781056, 0.074781528, 0.074796167, 0.074796653, 0.074808472, 0.074808944, 0.074814417, 0.074814903, 0.074828403, 0.074828875, 0.074833347, 0.074833819, 0.074847319, 0.074847792, 0.074859931, 0.074860403, 0.074874403, 0.074874875, 0.074882194, 0.074882667, 0.074895986, 0.074896458, 0.074902444, 0.074902917, 0.074915069, 0.074915542, 0.074923847, 0.074924333, 0.074931472, 0.074931958, 0.074942958, 0.074943431, 0.074957583, 0.074958056, 0.074971194, 0.074971667, 0.074982153, 0.074982625, 0.074990819, 0.074991292, 0.074999917, 0.075000389, 0.075009694, 0.075010181], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:00.083" endtime="20201110 08:37:00.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.079" endtime="20201110 08:37:00.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.092" level="INFO">${RESULT} = [{'time': 0.074505319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.074518125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.089" endtime="20201110 08:37:00.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.106" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.73000...</msg>
<status status="PASS" starttime="20201110 08:37:00.093" endtime="20201110 08:37:00.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.110" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:00.109" endtime="20201110 08:37:00.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.113" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000073427e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.112" endtime="20201110 08:37:00.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.107" endtime="20201110 08:37:00.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.116" endtime="20201110 08:37:00.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.120" endtime="20201110 08:37:00.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.118" endtime="20201110 08:37:00.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.115" endtime="20201110 08:37:00.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.704" endtime="20201110 08:37:00.140"></status>
</kw>
<msg timestamp="20201110 08:37:00.141" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.149" endtime="20201110 08:37:00.158"></status>
</kw>
<msg timestamp="20201110 08:37:00.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.147" endtime="20201110 08:37:00.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.160" endtime="20201110 08:37:00.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.162" endtime="20201110 08:37:00.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.144" endtime="20201110 08:37:00.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.143" endtime="20201110 08:37:00.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.174" endtime="20201110 08:37:00.461"></status>
</kw>
<msg timestamp="20201110 08:37:00.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.172" endtime="20201110 08:37:00.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018790708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.465" endtime="20201110 08:37:00.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.474" endtime="20201110 08:37:00.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.167" endtime="20201110 08:37:00.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.166" endtime="20201110 08:37:00.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.481" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:00.480" endtime="20201110 08:37:00.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.486" level="INFO">VALUE: [{'time': 0.018790708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018791194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018803056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1861999999997902e-05, 'source_diff': 1.1861999999997902e-05}, {'time': 0.018803528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018816792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3263999999998943e-05, 'source_diff': 1.3263999999998943e-05}, {'time': 0.018817278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.01882225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018834722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2472000000002953e-05, 'source_diff': 1.2472000000002953e-05}, {'time': 0.018835194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018841514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.018841986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018846306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3199999999986305e-06, 'source_diff': 4.3199999999986305e-06}, {'time': 0.018846778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018855431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.018855903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018860889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018861361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018869028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999999397e-06, 'source_diff': 7.666999999999397e-06}, {'time': 0.0188695, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018883806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4305999999998653e-05, 'source_diff': 1.4305999999998653e-05}, {'time': 0.018884278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018890264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.01889075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018900903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.018901375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018913361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1985999999998553e-05, 'source_diff': 1.1985999999998553e-05}, {'time': 0.018913833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018927306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.018927792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018940278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.01894075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018946903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.018947375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018959208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1833000000002758e-05, 'source_diff': 1.1833000000002758e-05}, {'time': 0.018959681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018967486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.018967958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.018974931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018985069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0137999999999814e-05, 'source_diff': 1.0137999999999814e-05}, {'time': 0.018985542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018997861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.018998333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019003319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.019003792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019016944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3152000000002384e-05, 'source_diff': 1.3152000000002384e-05}, {'time': 0.019017431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019021903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.019022389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.019037514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019049486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1972000000002453e-05, 'source_diff': 1.1972000000002453e-05}, {'time': 0.019049972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019054458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.019054931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019060069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.137999999998283e-06, 'source_diff': 5.137999999998283e-06}, {'time': 0.019060556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019075042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.019075514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019080333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.819000000003126e-06, 'source_diff': 4.819000000003126e-06}, {'time': 0.019080806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019088125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019088597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019101597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3000000000002593e-05, 'source_diff': 1.3000000000002593e-05}, {'time': 0.019102069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019112042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972999999999926e-06, 'source_diff': 9.972999999999926e-06}, {'time': 0.019112514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019116653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019117125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019129625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.019130097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019135569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.019136042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019147528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019148, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4556000000002373e-05, 'source_diff': 1.4556000000002373e-05}, {'time': 0.019163028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019177, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.019177472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019188403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0930999999998747e-05, 'source_diff': 1.0930999999998747e-05}, {'time': 0.019188875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019197194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.019197681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019202653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.019203139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019214444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.019214931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019225736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.019226222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019238194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019238681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019243819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.137999999998283e-06, 'source_diff': 5.137999999998283e-06}, {'time': 0.019244306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019258292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.019258764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019264083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.019264556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019278389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.019278861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:00.482" endtime="20201110 08:37:00.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.478" endtime="20201110 08:37:00.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:00.513" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 1.1861999999997902e-05, 4.720000000013602e-07, 1.3263999999998943e-05, 4.860000000009301e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 1.2472000000002953e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:00.489" endtime="20201110 08:37:00.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.517" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:00.516" endtime="20201110 08:37:00.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.521" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.1861999999997902e-05, 4.720000000013602e-07, 1.3263999999998943e-05, 4.860000000009301e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 1.2472000000002953e-05, 4.7199999999789077e-07, 6.320000000000631e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.4305999999998653e-05, 4.720000000013602e-07, 5.985999999999492e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.859999999974607e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 6.153000000001796e-06, 4.7199999999789077e-07, 1.1833000000002758e-05, 4.729999999973644e-07, 7.804999999999618e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 1.2319000000000219e-05, 4.7199999999789077e-07, 4.986000000001961e-06, 4.729999999973644e-07, 1.3152000000002384e-05, 4.870000000004038e-07, 4.471999999998422e-06, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.1972000000002453e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.7300000000083386e-07, 5.137999999998283e-06, 4.870000000004038e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 4.819000000003126e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 9.972999999999926e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 1.2500000000002093e-05, 4.7199999999789077e-07, 5.472000000002891e-06, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.4556000000002373e-05, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.870000000004038e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1304999999999649e-05, 4.870000000004038e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.1971999999998983e-05, 4.870000000004038e-07, 5.137999999998283e-06, 4.870000000004038e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 5.319000000000157e-06, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 4.860000000009301e-07, 1.1861999999997902e-05, 4.720000000013602e-07, 1.3263999999998943e-05, 4.860000000009301e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 1.2472000000002953e-05, 4.7199999999789077e-07, 6.320000000000631e-06, 4.720000000013602e-07, 4.3199999999986305e-06, 4.720000000013602e-07, 8.652999999997357e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 7.666999999999397e-06, 4.720000000013602e-07, 1.4305999999998653e-05, 4.720000000013602e-07, 5.985999999999492e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 1.1985999999998553e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.859999999974607e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 6.153000000001796e-06, 4.7199999999789077e-07, 1.1833000000002758e-05, 4.729999999973644e-07, 7.804999999999618e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.7300000000083386e-07, 1.2319000000000219e-05, 4.7199999999789077e-07, 4.986000000001961e-06, 4.729999999973644e-07, 1.3152000000002384e-05, 4.870000000004038e-07, 4.471999999998422e-06, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.1972000000002453e-05, 4.859999999974607e-07, 4.486000000001461e-06, 4.7300000000083386e-07, 5.137999999998283e-06, 4.870000000004038e-07, 1.4486000000001054e-05, 4.7199999999789077e-07, 4.819000000003126e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.3000000000002593e-05, 4.7199999999789077e-07, 9.972999999999926e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 1.2500000000002093e-05, 4.7199999999789077e-07, 5.472000000002891e-06, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.4556000000002373e-05, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 1.0930999999998747e-05, 4.720000000013602e-07, 8.318999999999688e-06, 4.870000000004038e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1304999999999649e-05, 4.870000000004038e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.1971999999998983e-05, 4.870000000004038e-07, 5.137999999998283e-06, 4.870000000004038e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 5.319000000000157e-06, 4.729999999973644e-07, 1.3833000000001289e-05, 4.720000000013602e-07], 'time': [0.018790708, 0.018791194, 0.018803056, 0.018803528, 0.018816792, 0.018817278, 0.018821778, 0.01882225, 0.018834722, 0.018835194, 0.018841514, 0.018841986, 0.018846306, 0.018846778, 0.018855431, 0.018855903, 0.018860889, 0.018861361, 0.018869028, 0.0188695, 0.018883806, 0.018884278, 0.018890264, 0.01889075, 0.018900903, 0.018901375, 0.018913361, 0.018913833, 0.018927306, 0.018927792, 0.018940278, 0.01894075, 0.018946903, 0.018947375, 0.018959208, 0.018959681, 0.018967486, 0.018967958, 0.018974458, 0.018974931, 0.018985069, 0.018985542, 0.018997861, 0.018998333, 0.019003319, 0.019003792, 0.019016944, 0.019017431, 0.019021903, 0.019022389, 0.019037028, 0.019037514, 0.019049486, 0.019049972, 0.019054458, 0.019054931, 0.019060069, 0.019060556, 0.019075042, 0.019075514, 0.019080333, 0.019080806, 0.019088125, 0.019088597, 0.019101597, 0.019102069, 0.019112042, 0.019112514, 0.019116653, 0.019117125, 0.019129625, 0.019130097, 0.019135569, 0.019136042, 0.019147528, 0.019148, 0.019162556, 0.019163028, 0.019177, 0.019177472, 0.019188403, 0.019188875, 0.019197194, 0.019197681, 0.019202653, 0.019203139, 0.019214444, 0.019214931, 0.019225736, 0.019226222, 0.019238194, 0.019238681, 0.019243819, 0.019244306, 0.019258292, 0.019258764, 0.019264083, 0.019264556, 0.019278389, 0.019278861], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:00.518" endtime="20201110 08:37:00.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.514" endtime="20201110 08:37:00.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.527" level="INFO">${RESULT} = [{'time': 0.018791194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018803528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.523" endtime="20201110 08:37:00.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.540" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.72...</msg>
<status status="PASS" starttime="20201110 08:37:00.528" endtime="20201110 08:37:00.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.545" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:00.544" endtime="20201110 08:37:00.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.548" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.546" endtime="20201110 08:37:00.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.541" endtime="20201110 08:37:00.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.551" endtime="20201110 08:37:00.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.555" endtime="20201110 08:37:00.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.553" endtime="20201110 08:37:00.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.549" endtime="20201110 08:37:00.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.141" endtime="20201110 08:37:00.576"></status>
</kw>
<msg timestamp="20201110 08:37:00.576" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.584" endtime="20201110 08:37:00.594"></status>
</kw>
<msg timestamp="20201110 08:37:00.594" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.582" endtime="20201110 08:37:00.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.595" endtime="20201110 08:37:00.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.598" endtime="20201110 08:37:00.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.580" endtime="20201110 08:37:00.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.578" endtime="20201110 08:37:00.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.607" endtime="20201110 08:37:00.891"></status>
</kw>
<msg timestamp="20201110 08:37:00.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019008972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019009458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.606" endtime="20201110 08:37:00.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019008972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019009458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.896" endtime="20201110 08:37:00.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.904" endtime="20201110 08:37:00.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.603" endtime="20201110 08:37:00.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.601" endtime="20201110 08:37:00.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.910" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:00.909" endtime="20201110 08:37:00.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.916" level="INFO">VALUE: [{'time': 0.019008972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019009458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019020764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1305999999999122e-05, 'source_diff': 1.1305999999999122e-05}, {'time': 0.01902125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019029889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.019030375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019039681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.019040167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019050694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0526999999999759e-05, 'source_diff': 1.0526999999999759e-05}, {'time': 0.019051167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019063611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2444000000000344e-05, 'source_diff': 1.2444000000000344e-05}, {'time': 0.019064083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019071236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.019071708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019084028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.0190845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019088625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019089111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019103583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.019104069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019110208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.019110694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019119333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.019119819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019133139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3320000000000692e-05, 'source_diff': 1.3320000000000692e-05}, {'time': 0.019133611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019142597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019143069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019149556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.487000000002935e-06, 'source_diff': 6.487000000002935e-06}, {'time': 0.019150028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019162347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.019162819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019169139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.019169611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019180931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319999999998692e-05, 'source_diff': 1.1319999999998692e-05}, {'time': 0.019181403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019186736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019187208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019198708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.019199181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019210972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1791000000000579e-05, 'source_diff': 1.1791000000000579e-05}, {'time': 0.019211458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019222431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0973000000000926e-05, 'source_diff': 1.0973000000000926e-05}, {'time': 0.019222917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019232389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.019232875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019244681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805999999999622e-05, 'source_diff': 1.1805999999999622e-05}, {'time': 0.019245167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019258153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.019258625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019272611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3985999999997084e-05, 'source_diff': 1.3985999999997084e-05}, {'time': 0.019273083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019282903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.820000000000662e-06, 'source_diff': 9.820000000000662e-06}, {'time': 0.019283375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019297208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.019297681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019305667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.019306139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019316611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.019317097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019324917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.019325389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019339042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.019339514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019349653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0139000000002757e-05, 'source_diff': 1.0139000000002757e-05}, {'time': 0.019350139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019354778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019355264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.304999999999587e-06, 'source_diff': 4.304999999999587e-06}, {'time': 0.019360056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019367194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.138000000000283e-06, 'source_diff': 7.138000000000283e-06}, {'time': 0.019367681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019378014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0332999999997788e-05, 'source_diff': 1.0332999999997788e-05}, {'time': 0.019378486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019392958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.019393431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019405597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2166000000000954e-05, 'source_diff': 1.2166000000000954e-05}, {'time': 0.019406069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019414875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.019415347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019425681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0334000000000731e-05, 'source_diff': 1.0334000000000731e-05}, {'time': 0.019426153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019436792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.019437278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.01944625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.019446736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019460236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019460708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.019470486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019476792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019477278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019484431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.019484903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019489889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.019490361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019504694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.433299999999832e-05, 'source_diff': 1.433299999999832e-05}, {'time': 0.019505167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019513819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.652000000001353e-06, 'source_diff': 8.652000000001353e-06}, {'time': 0.019514292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:00.912" endtime="20201110 08:37:00.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.907" endtime="20201110 08:37:00.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:00.942" level="INFO">${debug-compressed} = {'diff': [0, 4.860000000009301e-07, 1.1305999999999122e-05, 4.860000000009301e-07, 8.639000000001257e-06, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0526999999999759e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:37:00.918" endtime="20201110 08:37:00.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.946" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:00.945" endtime="20201110 08:37:00.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.950" level="INFO">VALUE: {'diff': [0, 4.860000000009301e-07, 1.1305999999999122e-05, 4.860000000009301e-07, 8.639000000001257e-06, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.2444000000000344e-05, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.859999999974607e-07, 1.4472000000001484e-05, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.3320000000000692e-05, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 5.332999999999727e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.7300000000083386e-07, 1.1791000000000579e-05, 4.860000000009301e-07, 1.0973000000000926e-05, 4.859999999974607e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.720000000013602e-07, 1.3985999999997084e-05, 4.720000000013602e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 7.985999999998022e-06, 4.720000000013602e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.859999999974607e-07, 4.639000000000726e-06, 4.860000000009301e-07, 4.304999999999587e-06, 4.870000000004038e-07, 7.138000000000283e-06, 4.870000000004038e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.7300000000083386e-07, 1.2166000000000954e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 8.972000000002922e-06, 4.859999999974607e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 6.306000000001061e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 1.433299999999832e-05, 4.7300000000083386e-07, 8.652000000001353e-06, 4.729999999973644e-07], 'eventsource_diff': [0, 4.860000000009301e-07, 1.1305999999999122e-05, 4.860000000009301e-07, 8.639000000001257e-06, 4.859999999974607e-07, 9.306000000000592e-06, 4.860000000009301e-07, 1.0526999999999759e-05, 4.7300000000083386e-07, 1.2444000000000344e-05, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.720000000013602e-07, 4.125000000000656e-06, 4.859999999974607e-07, 1.4472000000001484e-05, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 1.3320000000000692e-05, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 6.487000000002935e-06, 4.7199999999789077e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 5.332999999999727e-06, 4.720000000013602e-07, 1.1499999999997623e-05, 4.7300000000083386e-07, 1.1791000000000579e-05, 4.860000000009301e-07, 1.0973000000000926e-05, 4.859999999974607e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 1.2985999999999553e-05, 4.720000000013602e-07, 1.3985999999997084e-05, 4.720000000013602e-07, 9.820000000000662e-06, 4.7199999999789077e-07, 1.3833000000001289e-05, 4.7300000000083386e-07, 7.985999999998022e-06, 4.720000000013602e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 1.0139000000002757e-05, 4.859999999974607e-07, 4.639000000000726e-06, 4.860000000009301e-07, 4.304999999999587e-06, 4.870000000004038e-07, 7.138000000000283e-06, 4.870000000004038e-07, 1.0332999999997788e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.7300000000083386e-07, 1.2166000000000954e-05, 4.720000000013602e-07, 8.806000000000092e-06, 4.7199999999789077e-07, 1.0334000000000731e-05, 4.720000000013602e-07, 1.0638999999999788e-05, 4.859999999974607e-07, 8.972000000002922e-06, 4.859999999974607e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 9.292000000001022e-06, 4.859999999974607e-07, 6.306000000001061e-06, 4.860000000009301e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 1.433299999999832e-05, 4.7300000000083386e-07, 8.652000000001353e-06, 4.729999999973644e-07], 'time': [0.019008972, 0.019009458, 0.019020764, 0.01902125, 0.019029889, 0.019030375, 0.019039681, 0.019040167, 0.019050694, 0.019051167, 0.019063611, 0.019064083, 0.019071236, 0.019071708, 0.019084028, 0.0190845, 0.019088625, 0.019089111, 0.019103583, 0.019104069, 0.019110208, 0.019110694, 0.019119333, 0.019119819, 0.019133139, 0.019133611, 0.019142597, 0.019143069, 0.019149556, 0.019150028, 0.019162347, 0.019162819, 0.019169139, 0.019169611, 0.019180931, 0.019181403, 0.019186736, 0.019187208, 0.019198708, 0.019199181, 0.019210972, 0.019211458, 0.019222431, 0.019222917, 0.019232389, 0.019232875, 0.019244681, 0.019245167, 0.019258153, 0.019258625, 0.019272611, 0.019273083, 0.019282903, 0.019283375, 0.019297208, 0.019297681, 0.019305667, 0.019306139, 0.019316611, 0.019317097, 0.019324917, 0.019325389, 0.019339042, 0.019339514, 0.019349653, 0.019350139, 0.019354778, 0.019355264, 0.019359569, 0.019360056, 0.019367194, 0.019367681, 0.019378014, 0.019378486, 0.019392958, 0.019393431, 0.019405597, 0.019406069, 0.019414875, 0.019415347, 0.019425681, 0.019426153, 0.019436792, 0.019437278, 0.01944625, 0.019446736, 0.019460236, 0.019460708, 0.01947, 0.019470486, 0.019476792, 0.019477278, 0.019484431, 0.019484903, 0.019489889, 0.019490361, 0.019504694, 0.019505167, 0.019513819, 0.019514292], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:00.947" endtime="20201110 08:37:00.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.943" endtime="20201110 08:37:00.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.955" level="INFO">${RESULT} = [{'time': 0.019009458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01902125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:00.952" endtime="20201110 08:37:00.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.968" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.85...</msg>
<status status="PASS" starttime="20201110 08:37:00.956" endtime="20201110 08:37:00.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.973" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:00.972" endtime="20201110 08:37:00.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.975" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201110 08:37:00.974" endtime="20201110 08:37:00.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.969" endtime="20201110 08:37:00.976"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.978" endtime="20201110 08:37:00.980"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.982" endtime="20201110 08:37:01.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.980" endtime="20201110 08:37:01.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.977" endtime="20201110 08:37:01.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.577" endtime="20201110 08:37:01.002"></status>
</kw>
<msg timestamp="20201110 08:37:01.002" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.010" endtime="20201110 08:37:01.020"></status>
</kw>
<msg timestamp="20201110 08:37:01.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.008" endtime="20201110 08:37:01.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.022" endtime="20201110 08:37:01.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.024" endtime="20201110 08:37:01.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.006" endtime="20201110 08:37:01.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.004" endtime="20201110 08:37:01.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.033" endtime="20201110 08:37:01.321"></status>
</kw>
<msg timestamp="20201110 08:37:01.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018283653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.031" endtime="20201110 08:37:01.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018283653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.326" endtime="20201110 08:37:01.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.334" endtime="20201110 08:37:01.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.029" endtime="20201110 08:37:01.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.027" endtime="20201110 08:37:01.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.341" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:01.340" endtime="20201110 08:37:01.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.346" level="INFO">VALUE: [{'time': 0.018283653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018284125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018293583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.018294056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018300625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569000000001407e-06, 'source_diff': 6.569000000001407e-06}, {'time': 0.018301097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018315333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4236000000000804e-05, 'source_diff': 1.4236000000000804e-05}, {'time': 0.018315806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018322958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.018323444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018336083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.018336569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018350375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.018350861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018360181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018360653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018375125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.018375611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018382139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.018382611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018392236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.018392708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018398014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018398486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018413139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.018413611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018424097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.018424569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018430056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.487000000001935e-06, 'source_diff': 5.487000000001935e-06}, {'time': 0.018430528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018441847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.018442319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018447972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018448444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018460639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2194999999999567e-05, 'source_diff': 1.2194999999999567e-05}, {'time': 0.018461111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018475556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4445000000001817e-05, 'source_diff': 1.4445000000001817e-05}, {'time': 0.018476042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018486861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.018487333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018493306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.018493792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018507611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.018508083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01851925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1166999999999427e-05, 'source_diff': 1.1166999999999427e-05}, {'time': 0.018519722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018533361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3639000000002788e-05, 'source_diff': 1.3639000000002788e-05}, {'time': 0.018533833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018546, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2167000000000427e-05, 'source_diff': 1.2167000000000427e-05}, {'time': 0.018546472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018555444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018555917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018561125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.018561597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018566042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.445000000002225e-06, 'source_diff': 4.445000000002225e-06}, {'time': 0.018566514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018575472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018583181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.709000000001576e-06, 'source_diff': 7.709000000001576e-06}, {'time': 0.018583653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018590917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.018591389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018605528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018606014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018617042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1027999999999732e-05, 'source_diff': 1.1027999999999732e-05}, {'time': 0.018617514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018621792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018622264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01862825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018628722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018634875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1529999999983265e-06, 'source_diff': 6.1529999999983265e-06}, {'time': 0.018635347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018648333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2985999999999553e-05, 'source_diff': 1.2985999999999553e-05}, {'time': 0.018648806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018662458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3651999999999415e-05, 'source_diff': 1.3651999999999415e-05}, {'time': 0.018662931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01867225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018672722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018678208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000002461e-06, 'source_diff': 5.486000000002461e-06}, {'time': 0.018678681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018690181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.018690653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0304999999998649e-05, 'source_diff': 1.0304999999998649e-05}, {'time': 0.018701444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018714083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.018714569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018720389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018720861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018729694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833000000003227e-06, 'source_diff': 8.833000000003227e-06}, {'time': 0.018730167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018742958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2791000000001579e-05, 'source_diff': 1.2791000000001579e-05}, {'time': 0.018743444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018749153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.018749625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018762056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2431000000000247e-05, 'source_diff': 1.2431000000000247e-05}, {'time': 0.018762528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018772681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.018773153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018777806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018778278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:01.342" endtime="20201110 08:37:01.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.338" endtime="20201110 08:37:01.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:01.373" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 6.569000000001407e-06, 4.7199999999789077e-07, 1.4236000000000804e-05, 4.7300000000083386e-07, 7.151999999999853e-06...</msg>
<status status="PASS" starttime="20201110 08:37:01.349" endtime="20201110 08:37:01.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.377" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:01.376" endtime="20201110 08:37:01.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.381" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 6.569000000001407e-06, 4.7199999999789077e-07, 1.4236000000000804e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.860000000009301e-07, 1.2638999999998318e-05, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.306000000000061e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 5.487000000001935e-06, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 1.2194999999999567e-05, 4.7199999999789077e-07, 1.4445000000001817e-05, 4.860000000009301e-07, 1.0818999999998719e-05, 4.720000000013602e-07, 5.9729999999993955e-06, 4.859999999974607e-07, 1.3819000000001719e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999789077e-07, 1.3639000000002788e-05, 4.7199999999789077e-07, 1.2167000000000427e-05, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 5.207999999999602e-06, 4.7199999999789077e-07, 4.445000000002225e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.277999999999921e-06, 4.7199999999789077e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 1.3651999999999415e-05, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 5.486000000002461e-06, 4.729999999973644e-07, 1.1500000000001093e-05, 4.720000000013602e-07, 1.0304999999998649e-05, 4.860000000009301e-07, 1.2638999999998318e-05, 4.860000000009301e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 8.833000000003227e-06, 4.729999999973644e-07, 1.2791000000001579e-05, 4.860000000009301e-07, 5.7089999999995755e-06, 4.7199999999789077e-07, 1.2431000000000247e-05, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 6.569000000001407e-06, 4.7199999999789077e-07, 1.4236000000000804e-05, 4.7300000000083386e-07, 7.151999999999853e-06, 4.860000000009301e-07, 1.2638999999998318e-05, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 9.320000000000161e-06, 4.720000000013602e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 9.624999999999218e-06, 4.720000000013602e-07, 5.306000000000061e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7199999999789077e-07, 5.487000000001935e-06, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 1.2194999999999567e-05, 4.7199999999789077e-07, 1.4445000000001817e-05, 4.860000000009301e-07, 1.0818999999998719e-05, 4.720000000013602e-07, 5.9729999999993955e-06, 4.859999999974607e-07, 1.3819000000001719e-05, 4.720000000013602e-07, 1.1166999999999427e-05, 4.7199999999789077e-07, 1.3639000000002788e-05, 4.7199999999789077e-07, 1.2167000000000427e-05, 4.720000000013602e-07, 8.971999999999453e-06, 4.7300000000083386e-07, 5.207999999999602e-06, 4.7199999999789077e-07, 4.445000000002225e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.7199999999789077e-07, 7.709000000001576e-06, 4.7199999999789077e-07, 7.263999999999882e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 1.1027999999999732e-05, 4.720000000013602e-07, 4.277999999999921e-06, 4.7199999999789077e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.1529999999983265e-06, 4.720000000013602e-07, 1.2985999999999553e-05, 4.7300000000083386e-07, 1.3651999999999415e-05, 4.7300000000083386e-07, 9.319000000000688e-06, 4.7199999999789077e-07, 5.486000000002461e-06, 4.729999999973644e-07, 1.1500000000001093e-05, 4.720000000013602e-07, 1.0304999999998649e-05, 4.860000000009301e-07, 1.2638999999998318e-05, 4.860000000009301e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 8.833000000003227e-06, 4.729999999973644e-07, 1.2791000000001579e-05, 4.860000000009301e-07, 5.7089999999995755e-06, 4.7199999999789077e-07, 1.2431000000000247e-05, 4.720000000013602e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999789077e-07], 'time': [0.018283653, 0.018284125, 0.018293583, 0.018294056, 0.018300625, 0.018301097, 0.018315333, 0.018315806, 0.018322958, 0.018323444, 0.018336083, 0.018336569, 0.018350375, 0.018350861, 0.018360181, 0.018360653, 0.018375125, 0.018375611, 0.018382139, 0.018382611, 0.018392236, 0.018392708, 0.018398014, 0.018398486, 0.018413139, 0.018413611, 0.018424097, 0.018424569, 0.018430056, 0.018430528, 0.018441847, 0.018442319, 0.018447972, 0.018448444, 0.018460639, 0.018461111, 0.018475556, 0.018476042, 0.018486861, 0.018487333, 0.018493306, 0.018493792, 0.018507611, 0.018508083, 0.01851925, 0.018519722, 0.018533361, 0.018533833, 0.018546, 0.018546472, 0.018555444, 0.018555917, 0.018561125, 0.018561597, 0.018566042, 0.018566514, 0.018575, 0.018575472, 0.018583181, 0.018583653, 0.018590917, 0.018591389, 0.018605528, 0.018606014, 0.018617042, 0.018617514, 0.018621792, 0.018622264, 0.01862825, 0.018628722, 0.018634875, 0.018635347, 0.018648333, 0.018648806, 0.018662458, 0.018662931, 0.01867225, 0.018672722, 0.018678208, 0.018678681, 0.018690181, 0.018690653, 0.018700958, 0.018701444, 0.018714083, 0.018714569, 0.018720389, 0.018720861, 0.018729694, 0.018730167, 0.018742958, 0.018743444, 0.018749153, 0.018749625, 0.018762056, 0.018762528, 0.018772681, 0.018773153, 0.018777806, 0.018778278], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:01.378" endtime="20201110 08:37:01.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.374" endtime="20201110 08:37:01.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.387" level="INFO">${RESULT} = [{'time': 0.018284125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018294056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:01.384" endtime="20201110 08:37:01.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:01.401" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:01.388" endtime="20201110 08:37:01.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.405" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:01.404" endtime="20201110 08:37:01.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.408" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:01.406" endtime="20201110 08:37:01.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.402" endtime="20201110 08:37:01.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.411" endtime="20201110 08:37:01.412"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.415" endtime="20201110 08:37:01.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.413" endtime="20201110 08:37:01.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.409" endtime="20201110 08:37:01.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.003" endtime="20201110 08:37:01.435"></status>
</kw>
<msg timestamp="20201110 08:37:01.436" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.445" endtime="20201110 08:37:01.454"></status>
</kw>
<msg timestamp="20201110 08:37:01.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.443" endtime="20201110 08:37:01.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.457" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.456" endtime="20201110 08:37:01.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.458" endtime="20201110 08:37:01.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.440" endtime="20201110 08:37:01.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.438" endtime="20201110 08:37:01.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.468" endtime="20201110 08:37:01.776"></status>
</kw>
<msg timestamp="20201110 08:37:01.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.466" endtime="20201110 08:37:01.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019836139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019836611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.780" endtime="20201110 08:37:01.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.789" endtime="20201110 08:37:01.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.463" endtime="20201110 08:37:01.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.462" endtime="20201110 08:37:01.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.796" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:01.795" endtime="20201110 08:37:01.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.801" level="INFO">VALUE: [{'time': 0.019836139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019836611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019843431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.019843903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019852556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000000827e-06, 'source_diff': 8.653000000000827e-06}, {'time': 0.019853028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019864181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.019864653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019873486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.019873958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019887764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.01988825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019899056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.019899542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019905514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.019906, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019910306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019910792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019923278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.01992375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019928889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019929375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019941681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.019942167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019953486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.019953958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019966125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2167000000000427e-05, 'source_diff': 1.2167000000000427e-05}, {'time': 0.019966597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019974625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.019975097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019982861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.019983333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019990653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.019991125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020001694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0569000000001938e-05, 'source_diff': 1.0569000000001938e-05}, {'time': 0.020002167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020011917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.020012389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020025361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.020025847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020031819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.020032306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.020043806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.020044278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020050806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.020051278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020059028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.020059514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0200665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.020066972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020071972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.000000000001531e-06, 'source_diff': 5.000000000001531e-06}, {'time': 0.020072444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020084986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2542000000000803e-05, 'source_diff': 1.2542000000000803e-05}, {'time': 0.020085458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020094708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999998842e-06, 'source_diff': 9.249999999998842e-06}, {'time': 0.020095181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.020104181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.999999999998592e-06, 'source_diff': 8.999999999998592e-06}, {'time': 0.020104653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020117125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.020117597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020124083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.020124556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.020137722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166000000001954e-05, 'source_diff': 1.3166000000001954e-05}, {'time': 0.020138194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020147833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.020148319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805999999998091e-06, 'source_diff': 6.805999999998091e-06}, {'time': 0.020155611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02016625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.020166736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020179903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166999999997958e-05, 'source_diff': 1.3166999999997958e-05}, {'time': 0.020180375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020194847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.020195319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020202639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.020203111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.020213764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.020214236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020219222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.020219694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020225514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.020225986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020232167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.020232639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020241264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.020241736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020254931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.020255403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020263014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.0202635, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020276806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.020277292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.020288278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.02028875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.020293722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.020294208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020303847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.020304333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.020314653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0319999999997692e-05, 'source_diff': 1.0319999999997692e-05}, {'time': 0.020315125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:01.797" endtime="20201110 08:37:01.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.793" endtime="20201110 08:37:01.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:01.830" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 8.832999999999758e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:01.804" endtime="20201110 08:37:01.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.836" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:01.834" endtime="20201110 08:37:01.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.842" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1318999999999219e-05, 4.720000000013602e-07, 1.2167000000000427e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0569000000001938e-05, 4.7300000000083386e-07, 9.749999999999343e-06, 4.7199999999789077e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.870000000004038e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 5.000000000001531e-06, 4.7199999999789077e-07, 1.2542000000000803e-05, 4.720000000013602e-07, 9.249999999998842e-06, 4.7300000000083386e-07, 8.999999999998592e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.729999999973644e-07, 1.3166000000001954e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.860000000009301e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 1.3166999999997958e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 5.820000000000131e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.0319999999997692e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 8.653000000000827e-06, 4.720000000013602e-07, 1.1152999999999857e-05, 4.7199999999789077e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 1.0805999999998622e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 1.2485999999999053e-05, 4.720000000013602e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1318999999999219e-05, 4.720000000013602e-07, 1.2167000000000427e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 7.764000000000382e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0569000000001938e-05, 4.7300000000083386e-07, 9.749999999999343e-06, 4.7199999999789077e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.870000000004038e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 6.528000000002171e-06, 4.7199999999789077e-07, 7.750000000000812e-06, 4.860000000009301e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 5.000000000001531e-06, 4.7199999999789077e-07, 1.2542000000000803e-05, 4.720000000013602e-07, 9.249999999998842e-06, 4.7300000000083386e-07, 8.999999999998592e-06, 4.720000000013602e-07, 1.2471999999999483e-05, 4.720000000013602e-07, 6.485999999999992e-06, 4.729999999973644e-07, 1.3166000000001954e-05, 4.720000000013602e-07, 9.638999999998787e-06, 4.860000000009301e-07, 6.805999999998091e-06, 4.860000000009301e-07, 1.0638999999999788e-05, 4.860000000009301e-07, 1.3166999999997958e-05, 4.720000000013602e-07, 1.4471999999998014e-05, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0652999999999357e-05, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 5.820000000000131e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 1.3195000000000567e-05, 4.720000000013602e-07, 7.6109999999976474e-06, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.0319999999997692e-05, 4.720000000013602e-07], 'time': [0.019836139, 0.019836611, 0.019843431, 0.019843903, 0.019852556, 0.019853028, 0.019864181, 0.019864653, 0.019873486, 0.019873958, 0.019887764, 0.01988825, 0.019899056, 0.019899542, 0.019905514, 0.019906, 0.019910306, 0.019910792, 0.019923278, 0.01992375, 0.019928889, 0.019929375, 0.019941681, 0.019942167, 0.019953486, 0.019953958, 0.019966125, 0.019966597, 0.019974625, 0.019975097, 0.019982861, 0.019983333, 0.019990653, 0.019991125, 0.020001694, 0.020002167, 0.020011917, 0.020012389, 0.020025361, 0.020025847, 0.020031819, 0.020032306, 0.020043806, 0.020044278, 0.020050806, 0.020051278, 0.020059028, 0.020059514, 0.0200665, 0.020066972, 0.020071972, 0.020072444, 0.020084986, 0.020085458, 0.020094708, 0.020095181, 0.020104181, 0.020104653, 0.020117125, 0.020117597, 0.020124083, 0.020124556, 0.020137722, 0.020138194, 0.020147833, 0.020148319, 0.020155125, 0.020155611, 0.02016625, 0.020166736, 0.020179903, 0.020180375, 0.020194847, 0.020195319, 0.020202639, 0.020203111, 0.020213764, 0.020214236, 0.020219222, 0.020219694, 0.020225514, 0.020225986, 0.020232167, 0.020232639, 0.020241264, 0.020241736, 0.020254931, 0.020255403, 0.020263014, 0.0202635, 0.020276806, 0.020277292, 0.020288278, 0.02028875, 0.020293722, 0.020294208, 0.020303847, 0.020304333, 0.020314653, 0.020315125], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:01.837" endtime="20201110 08:37:01.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.832" endtime="20201110 08:37:01.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.851" level="INFO">${RESULT} = [{'time': 0.019836611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019843903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:01.846" endtime="20201110 08:37:01.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:01.868" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.86...</msg>
<status status="PASS" starttime="20201110 08:37:01.853" endtime="20201110 08:37:01.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.874" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:01.872" endtime="20201110 08:37:01.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.877" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:01.875" endtime="20201110 08:37:01.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.869" endtime="20201110 08:37:01.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.881" endtime="20201110 08:37:01.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.886" endtime="20201110 08:37:01.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.884" endtime="20201110 08:37:01.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.879" endtime="20201110 08:37:01.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.436" endtime="20201110 08:37:01.907"></status>
</kw>
<msg timestamp="20201110 08:37:01.907" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.915" endtime="20201110 08:37:01.925"></status>
</kw>
<msg timestamp="20201110 08:37:01.926" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.913" endtime="20201110 08:37:01.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.927" endtime="20201110 08:37:01.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.929" endtime="20201110 08:37:01.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.910" endtime="20201110 08:37:01.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.909" endtime="20201110 08:37:01.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.939" endtime="20201110 08:37:02.223"></status>
</kw>
<msg timestamp="20201110 08:37:02.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019035819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019036292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.937" endtime="20201110 08:37:02.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019035819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019036292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.228" endtime="20201110 08:37:02.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.236" endtime="20201110 08:37:02.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.934" endtime="20201110 08:37:02.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.933" endtime="20201110 08:37:02.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.243" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:02.242" endtime="20201110 08:37:02.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.248" level="INFO">VALUE: [{'time': 0.019035819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019036292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019041764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019042236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019049403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1669999999988965e-06, 'source_diff': 7.1669999999988965e-06}, {'time': 0.019049875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019060181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.019060653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019065986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999999727e-06, 'source_diff': 5.332999999999727e-06}, {'time': 0.019066458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019077111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.019077583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019083389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019083875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019088514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019089, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019094639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.019095125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019104458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.019104931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019115889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0958000000001883e-05, 'source_diff': 1.0958000000001883e-05}, {'time': 0.019116375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019121194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019121667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019130653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.019131125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019142653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1528000000000233e-05, 'source_diff': 1.1528000000000233e-05}, {'time': 0.019143125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019154583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1457999999998913e-05, 'source_diff': 1.1457999999998913e-05}, {'time': 0.019155056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019165375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0318999999998218e-05, 'source_diff': 1.0318999999998218e-05}, {'time': 0.019165847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019174347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.019174819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019187111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000000552e-05, 'source_diff': 1.2292000000000552e-05}, {'time': 0.019187583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019201069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.019201556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019208708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.019209181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019216347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.019216819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019229972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3153000000001858e-05, 'source_diff': 1.3153000000001858e-05}, {'time': 0.019230444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01924425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.019244722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019258542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.019259014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019273514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4499999999997154e-05, 'source_diff': 1.4499999999997154e-05}, {'time': 0.019273986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019282625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.019283097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019288597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.019289069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019298208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.019298681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019310833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2151999999997914e-05, 'source_diff': 1.2151999999997914e-05}, {'time': 0.019311306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019315792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.019316278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019328264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1986000000002023e-05, 'source_diff': 1.1986000000002023e-05}, {'time': 0.019328736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019337542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.019338028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019350486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019364639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.019365111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019371931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819999999997661e-06, 'source_diff': 6.819999999997661e-06}, {'time': 0.019372403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019378903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.019379375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019387681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.019388153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019401972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.019402444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019412431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986999999999496e-06, 'source_diff': 9.986999999999496e-06}, {'time': 0.019412903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019420056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.019420528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019434028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.0194345, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019438986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.019439458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019446986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.019447458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019456722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999998412e-06, 'source_diff': 9.263999999998412e-06}, {'time': 0.019457208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019461847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019462333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019467639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.019468125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019477931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.019478417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019488958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0540999999999329e-05, 'source_diff': 1.0540999999999329e-05}, {'time': 0.019489431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019494528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.096999999999047e-06, 'source_diff': 5.096999999999047e-06}, {'time': 0.019495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.019502125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:02.244" endtime="20201110 08:37:02.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.240" endtime="20201110 08:37:02.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:02.275" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.1669999999988965e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 5.332999999999727e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:02.251" endtime="20201110 08:37:02.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.279" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:02.278" endtime="20201110 08:37:02.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.284" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.1669999999988965e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 5.332999999999727e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 5.806000000000561e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.639000000001726e-06, 4.860000000009301e-07, 9.333000000000258e-06, 4.729999999973644e-07, 1.0958000000001883e-05, 4.860000000009301e-07, 4.818999999999657e-06, 4.729999999973644e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.1457999999998913e-05, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 1.2292000000000552e-05, 4.720000000013602e-07, 1.3486000000000054e-05, 4.870000000004038e-07, 7.151999999999853e-06, 4.729999999973644e-07, 7.166000000002892e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 1.4499999999997154e-05, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 4.7300000000083386e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.860000000009301e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 8.806000000000092e-06, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.381899999999825e-05, 4.720000000013602e-07, 9.986999999999496e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.306000000000061e-06, 4.860000000009301e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0540999999999329e-05, 4.7300000000083386e-07, 5.096999999999047e-06, 4.7199999999789077e-07, 6.653000000002296e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.7300000000083386e-07, 5.471999999999422e-06, 4.720000000013602e-07, 7.1669999999988965e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.720000000013602e-07, 5.332999999999727e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 5.806000000000561e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.639000000001726e-06, 4.860000000009301e-07, 9.333000000000258e-06, 4.729999999973644e-07, 1.0958000000001883e-05, 4.860000000009301e-07, 4.818999999999657e-06, 4.729999999973644e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 1.1528000000000233e-05, 4.720000000013602e-07, 1.1457999999998913e-05, 4.7300000000083386e-07, 1.0318999999998218e-05, 4.720000000013602e-07, 8.500000000001562e-06, 4.7199999999789077e-07, 1.2292000000000552e-05, 4.720000000013602e-07, 1.3486000000000054e-05, 4.870000000004038e-07, 7.151999999999853e-06, 4.729999999973644e-07, 7.166000000002892e-06, 4.7199999999789077e-07, 1.3153000000001858e-05, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.7199999999789077e-07, 1.3820000000001192e-05, 4.720000000013602e-07, 1.4499999999997154e-05, 4.720000000013602e-07, 8.639000000001257e-06, 4.7199999999789077e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 4.7300000000083386e-07, 1.2151999999997914e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.860000000009301e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 8.806000000000092e-06, 4.860000000009301e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.720000000013602e-07, 6.819999999997661e-06, 4.720000000013602e-07, 6.499999999999562e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.381899999999825e-05, 4.720000000013602e-07, 9.986999999999496e-06, 4.7199999999789077e-07, 7.153000000002796e-06, 4.7199999999789077e-07, 1.3499999999999623e-05, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 7.527999999999702e-06, 4.720000000013602e-07, 9.263999999998412e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.306000000000061e-06, 4.860000000009301e-07, 9.806000000001092e-06, 4.860000000009301e-07, 1.0540999999999329e-05, 4.7300000000083386e-07, 5.096999999999047e-06, 4.7199999999789077e-07, 6.653000000002296e-06, 4.7199999999789077e-07], 'time': [0.019035819, 0.019036292, 0.019041764, 0.019042236, 0.019049403, 0.019049875, 0.019060181, 0.019060653, 0.019065986, 0.019066458, 0.019077111, 0.019077583, 0.019083389, 0.019083875, 0.019088514, 0.019089, 0.019094639, 0.019095125, 0.019104458, 0.019104931, 0.019115889, 0.019116375, 0.019121194, 0.019121667, 0.019130653, 0.019131125, 0.019142653, 0.019143125, 0.019154583, 0.019155056, 0.019165375, 0.019165847, 0.019174347, 0.019174819, 0.019187111, 0.019187583, 0.019201069, 0.019201556, 0.019208708, 0.019209181, 0.019216347, 0.019216819, 0.019229972, 0.019230444, 0.01924425, 0.019244722, 0.019258542, 0.019259014, 0.019273514, 0.019273986, 0.019282625, 0.019283097, 0.019288597, 0.019289069, 0.019298208, 0.019298681, 0.019310833, 0.019311306, 0.019315792, 0.019316278, 0.019328264, 0.019328736, 0.019337542, 0.019338028, 0.01935, 0.019350486, 0.019364639, 0.019365111, 0.019371931, 0.019372403, 0.019378903, 0.019379375, 0.019387681, 0.019388153, 0.019401972, 0.019402444, 0.019412431, 0.019412903, 0.019420056, 0.019420528, 0.019434028, 0.0194345, 0.019438986, 0.019439458, 0.019446986, 0.019447458, 0.019456722, 0.019457208, 0.019461847, 0.019462333, 0.019467639, 0.019468125, 0.019477931, 0.019478417, 0.019488958, 0.019489431, 0.019494528, 0.019495, 0.019501653, 0.019502125], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:02.280" endtime="20201110 08:37:02.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.276" endtime="20201110 08:37:02.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.289" level="INFO">${RESULT} = [{'time': 0.019036292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019042236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:02.286" endtime="20201110 08:37:02.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.304" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.86...</msg>
<status status="PASS" starttime="20201110 08:37:02.290" endtime="20201110 08:37:02.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.308" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:02.307" endtime="20201110 08:37:02.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.311" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:02.309" endtime="20201110 08:37:02.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.305" endtime="20201110 08:37:02.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.314" endtime="20201110 08:37:02.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.317" endtime="20201110 08:37:02.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.316" endtime="20201110 08:37:02.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.312" endtime="20201110 08:37:02.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.907" endtime="20201110 08:37:02.338"></status>
</kw>
<msg timestamp="20201110 08:37:02.338" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.351" endtime="20201110 08:37:02.363"></status>
</kw>
<msg timestamp="20201110 08:37:02.363" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.349" endtime="20201110 08:37:02.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.366" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.365" endtime="20201110 08:37:02.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.368" endtime="20201110 08:37:02.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.345" endtime="20201110 08:37:02.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.341" endtime="20201110 08:37:02.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.381" endtime="20201110 08:37:02.665"></status>
</kw>
<msg timestamp="20201110 08:37:02.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024442639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.379" endtime="20201110 08:37:02.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024442639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.669" endtime="20201110 08:37:02.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.678" endtime="20201110 08:37:02.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.375" endtime="20201110 08:37:02.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.372" endtime="20201110 08:37:02.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.685" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:02.684" endtime="20201110 08:37:02.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.691" level="INFO">VALUE: [{'time': 0.024442639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024443111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024457764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.024458236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024466903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000000397e-06, 'source_diff': 8.667000000000397e-06}, {'time': 0.024467375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024474681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.024475153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024486792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.024487278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024491806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.024492278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024504056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1778000000000483e-05, 'source_diff': 1.1778000000000483e-05}, {'time': 0.024504528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024514514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.024514986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024526472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.024526944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024537111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0167000000001897e-05, 'source_diff': 1.0167000000001897e-05}, {'time': 0.024537583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024544889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.024545361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024549847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.024550319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024556639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.320000000000631e-06, 'source_diff': 6.320000000000631e-06}, {'time': 0.024557111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024565097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.024565569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024574889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.024575375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024585514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.024586, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024591139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.024591625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.024603611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1986000000002023e-05, 'source_diff': 1.1986000000002023e-05}, {'time': 0.024604083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024616222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.024616708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024623347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.024623833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024638319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4485999999997584e-05, 'source_diff': 1.4485999999997584e-05}, {'time': 0.024638792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024652458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3665999999998985e-05, 'source_diff': 1.3665999999998985e-05}, {'time': 0.024652931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024663403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.024663875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024676861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2986000000003023e-05, 'source_diff': 1.2986000000003023e-05}, {'time': 0.024677333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024687486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0153000000002327e-05, 'source_diff': 1.0153000000002327e-05}, {'time': 0.024687958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024698958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1000000000000593e-05, 'source_diff': 1.1000000000000593e-05}, {'time': 0.024699431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024713264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.024713736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024722861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.024723347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024733319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.024733806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.024739514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.024739986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024749097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111000000002617e-06, 'source_diff': 9.111000000002617e-06}, {'time': 0.024749569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024759208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.024759681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.024771833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152000000001384e-05, 'source_diff': 1.2152000000001384e-05}, {'time': 0.024772306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024776792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.024777264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024781403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.024781875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024791847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.024792333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024800361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.024800833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024809111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277999999996982e-06, 'source_diff': 8.277999999996982e-06}, {'time': 0.024809583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024818069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.024818542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.024830208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666000000000454e-05, 'source_diff': 1.1666000000000454e-05}, {'time': 0.024830681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024839986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.024840458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.024851944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.024852417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024861736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.318999999997218e-06, 'source_diff': 9.318999999997218e-06}, {'time': 0.024862208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024871694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.024872167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024882333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0165999999998954e-05, 'source_diff': 1.0165999999998954e-05}, {'time': 0.024882806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.024887278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.024887764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.02489725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.024897722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024911861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.024912347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024922153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805999999997622e-06, 'source_diff': 9.805999999997622e-06}, {'time': 0.024922639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.024934958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.024935431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:02.687" endtime="20201110 08:37:02.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.682" endtime="20201110 08:37:02.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:02.717" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 1.1639000000000788e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:02.693" endtime="20201110 08:37:02.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.721" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:02.720" endtime="20201110 08:37:02.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.726" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.1778000000000483e-05, 4.720000000013602e-07, 9.986000000000023e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 1.2139000000001288e-05, 4.860000000009301e-07, 6.638999999999257e-06, 4.860000000009301e-07, 1.4485999999997584e-05, 4.7300000000083386e-07, 1.3665999999998985e-05, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 1.2986000000003023e-05, 4.7199999999789077e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 1.1000000000000593e-05, 4.7300000000083386e-07, 1.383299999999782e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.860000000009301e-07, 9.972000000000453e-06, 4.870000000004038e-07, 5.708000000000102e-06, 4.7199999999789077e-07, 9.111000000002617e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 9.972000000000453e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.729999999973644e-07, 1.1666000000000454e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7300000000083386e-07, 9.318999999997218e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 4.471999999998422e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 1.2319000000000219e-05, 4.7300000000083386e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 8.667000000000397e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 1.1778000000000483e-05, 4.720000000013602e-07, 9.986000000000023e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.0167000000001897e-05, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 4.485999999997992e-06, 4.720000000013602e-07, 6.320000000000631e-06, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 1.1986000000002023e-05, 4.7199999999789077e-07, 1.2139000000001288e-05, 4.860000000009301e-07, 6.638999999999257e-06, 4.860000000009301e-07, 1.4485999999997584e-05, 4.7300000000083386e-07, 1.3665999999998985e-05, 4.7300000000083386e-07, 1.0472000000000953e-05, 4.7199999999789077e-07, 1.2986000000003023e-05, 4.7199999999789077e-07, 1.0153000000002327e-05, 4.7199999999789077e-07, 1.1000000000000593e-05, 4.7300000000083386e-07, 1.383299999999782e-05, 4.720000000013602e-07, 9.124999999998717e-06, 4.860000000009301e-07, 9.972000000000453e-06, 4.870000000004038e-07, 5.708000000000102e-06, 4.7199999999789077e-07, 9.111000000002617e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 4.485999999997992e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.7199999999789077e-07, 9.972000000000453e-06, 4.860000000009301e-07, 8.028000000000202e-06, 4.720000000013602e-07, 8.277999999996982e-06, 4.720000000013602e-07, 8.486000000001992e-06, 4.729999999973644e-07, 1.1666000000000454e-05, 4.7300000000083386e-07, 9.305000000001118e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7300000000083386e-07, 9.318999999997218e-06, 4.720000000013602e-07, 9.485999999999523e-06, 4.7300000000083386e-07, 1.0165999999998954e-05, 4.7300000000083386e-07, 4.471999999998422e-06, 4.860000000009301e-07, 9.485999999999523e-06, 4.720000000013602e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 9.805999999997622e-06, 4.860000000009301e-07, 1.2319000000000219e-05, 4.7300000000083386e-07], 'time': [0.024442639, 0.024443111, 0.024457764, 0.024458236, 0.024466903, 0.024467375, 0.024474681, 0.024475153, 0.024486792, 0.024487278, 0.024491806, 0.024492278, 0.024504056, 0.024504528, 0.024514514, 0.024514986, 0.024526472, 0.024526944, 0.024537111, 0.024537583, 0.024544889, 0.024545361, 0.024549847, 0.024550319, 0.024556639, 0.024557111, 0.024565097, 0.024565569, 0.024574889, 0.024575375, 0.024585514, 0.024586, 0.024591139, 0.024591625, 0.024603611, 0.024604083, 0.024616222, 0.024616708, 0.024623347, 0.024623833, 0.024638319, 0.024638792, 0.024652458, 0.024652931, 0.024663403, 0.024663875, 0.024676861, 0.024677333, 0.024687486, 0.024687958, 0.024698958, 0.024699431, 0.024713264, 0.024713736, 0.024722861, 0.024723347, 0.024733319, 0.024733806, 0.024739514, 0.024739986, 0.024749097, 0.024749569, 0.024759208, 0.024759681, 0.024771833, 0.024772306, 0.024776792, 0.024777264, 0.024781403, 0.024781875, 0.024791847, 0.024792333, 0.024800361, 0.024800833, 0.024809111, 0.024809583, 0.024818069, 0.024818542, 0.024830208, 0.024830681, 0.024839986, 0.024840458, 0.024851944, 0.024852417, 0.024861736, 0.024862208, 0.024871694, 0.024872167, 0.024882333, 0.024882806, 0.024887278, 0.024887764, 0.02489725, 0.024897722, 0.024911861, 0.024912347, 0.024922153, 0.024922639, 0.024934958, 0.024935431], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:02.722" endtime="20201110 08:37:02.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.718" endtime="20201110 08:37:02.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.732" level="INFO">${RESULT} = [{'time': 0.024443111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.024458236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.728" endtime="20201110 08:37:02.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.746" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:02.733" endtime="20201110 08:37:02.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.750" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:02.749" endtime="20201110 08:37:02.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.754" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:02.751" endtime="20201110 08:37:02.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.747" endtime="20201110 08:37:02.755"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.758" endtime="20201110 08:37:02.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.761" endtime="20201110 08:37:02.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.760" endtime="20201110 08:37:02.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.756" endtime="20201110 08:37:02.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.339" endtime="20201110 08:37:02.782"></status>
</kw>
<msg timestamp="20201110 08:37:02.782" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.790" endtime="20201110 08:37:02.801"></status>
</kw>
<msg timestamp="20201110 08:37:02.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.789" endtime="20201110 08:37:02.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.803" endtime="20201110 08:37:02.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.805" endtime="20201110 08:37:02.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.786" endtime="20201110 08:37:02.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.784" endtime="20201110 08:37:02.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.815" endtime="20201110 08:37:03.098"></status>
</kw>
<msg timestamp="20201110 08:37:03.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.813" endtime="20201110 08:37:03.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019088694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.102" endtime="20201110 08:37:03.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.111" endtime="20201110 08:37:03.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.810" endtime="20201110 08:37:03.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.809" endtime="20201110 08:37:03.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.118" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:03.117" endtime="20201110 08:37:03.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.123" level="INFO">VALUE: [{'time': 0.019088694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019089167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019097306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019097778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019106931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.019107403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019122056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.019122542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019130514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.019131, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019139139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.019139625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019144264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.01914475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019155458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708000000001633e-05, 'source_diff': 1.0708000000001633e-05}, {'time': 0.019155931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019170194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.426300000000047e-05, 'source_diff': 1.426300000000047e-05}, {'time': 0.019170667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019182153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.019182625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019191778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.01919225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019204069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1818999999999719e-05, 'source_diff': 1.1818999999999719e-05}, {'time': 0.019204542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019212028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999997522e-06, 'source_diff': 7.485999999997522e-06}, {'time': 0.0192125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019227014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4514000000000193e-05, 'source_diff': 1.4514000000000193e-05}, {'time': 0.019227486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019233611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.019234083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019239236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.019239708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019245208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.019245681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019251667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019252139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019258778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.019259264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019266569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.019267056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019275694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.637999999998314e-06, 'source_diff': 8.637999999998314e-06}, {'time': 0.019276181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.01929, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.019290472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019295139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.019295611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019304083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.019304556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019318083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.352699999999929e-05, 'source_diff': 1.352699999999929e-05}, {'time': 0.019318556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01933, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1443999999999344e-05, 'source_diff': 1.1443999999999344e-05}, {'time': 0.019330472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019342625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152999999997388e-05, 'source_diff': 1.2152999999997388e-05}, {'time': 0.019343097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019350583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.019351056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019355708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.019356181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019370333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.019370819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019384681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861999999999902e-05, 'source_diff': 1.3861999999999902e-05}, {'time': 0.019385153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019395431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.019395903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019402875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.019403361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019409181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.019409653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019415375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.019415847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019426097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0249999999999843e-05, 'source_diff': 1.0249999999999843e-05}, {'time': 0.019426569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019440056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.019440528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019446028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000002031e-06, 'source_diff': 5.500000000002031e-06}, {'time': 0.0194465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019458806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.019459278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019473097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.019473569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019486389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2820000000000192e-05, 'source_diff': 1.2820000000000192e-05}, {'time': 0.019486875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019497222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0347000000000828e-05, 'source_diff': 1.0347000000000828e-05}, {'time': 0.019497694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019509306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1612000000001121e-05, 'source_diff': 1.1612000000001121e-05}, {'time': 0.019509792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019516264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.471999999996952e-06, 'source_diff': 6.471999999996952e-06}, {'time': 0.01951675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019526222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.019526708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019540875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999998958e-05, 'source_diff': 1.4166999999998958e-05}, {'time': 0.019541347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019549681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.019550153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019561111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.019561583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019566403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.8199999999991305e-06, 'source_diff': 4.8199999999991305e-06}, {'time': 0.019566875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019580861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.019581333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:03.119" endtime="20201110 08:37:03.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.114" endtime="20201110 08:37:03.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:03.169" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.860000000009301e-07, 7.972000000001922e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:03.126" endtime="20201110 08:37:03.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.173" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:03.172" endtime="20201110 08:37:03.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.178" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 1.0708000000001633e-05, 4.7300000000083386e-07, 1.426300000000047e-05, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 9.153000000001327e-06, 4.720000000013602e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.485999999997522e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 6.125000000002656e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.638999999999257e-06, 4.860000000009301e-07, 7.304999999999118e-06, 4.870000000004038e-07, 8.637999999998314e-06, 4.870000000004038e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 4.666999999999866e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 1.1443999999999344e-05, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 7.486000000000992e-06, 4.729999999973644e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 1.4151999999999915e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 6.972000000000922e-06, 4.860000000009301e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 5.721999999999672e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 1.3486999999999527e-05, 4.7199999999789077e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.720000000013602e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 1.2820000000000192e-05, 4.860000000009301e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.1612000000001121e-05, 4.860000000009301e-07, 6.471999999996952e-06, 4.860000000009301e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.7300000000083386e-07, 8.139000000000757e-06, 4.7199999999789077e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.860000000009301e-07, 7.972000000001922e-06, 4.859999999974607e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 1.0708000000001633e-05, 4.7300000000083386e-07, 1.426300000000047e-05, 4.729999999973644e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 9.153000000001327e-06, 4.720000000013602e-07, 1.1818999999999719e-05, 4.7300000000083386e-07, 7.485999999997522e-06, 4.720000000013602e-07, 1.4514000000000193e-05, 4.7199999999789077e-07, 6.125000000002656e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 6.638999999999257e-06, 4.860000000009301e-07, 7.304999999999118e-06, 4.870000000004038e-07, 8.637999999998314e-06, 4.870000000004038e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 4.666999999999866e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.7300000000083386e-07, 1.352699999999929e-05, 4.7300000000083386e-07, 1.1443999999999344e-05, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 7.486000000000992e-06, 4.729999999973644e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 1.4151999999999915e-05, 4.860000000009301e-07, 1.3861999999999902e-05, 4.7199999999789077e-07, 1.0278000000002452e-05, 4.7199999999789077e-07, 6.972000000000922e-06, 4.860000000009301e-07, 5.820000000000131e-06, 4.7199999999789077e-07, 5.721999999999672e-06, 4.720000000013602e-07, 1.0249999999999843e-05, 4.720000000013602e-07, 1.3486999999999527e-05, 4.7199999999789077e-07, 5.500000000002031e-06, 4.7199999999789077e-07, 1.2306000000000122e-05, 4.720000000013602e-07, 1.3819000000001719e-05, 4.7199999999789077e-07, 1.2820000000000192e-05, 4.860000000009301e-07, 1.0347000000000828e-05, 4.7199999999789077e-07, 1.1612000000001121e-05, 4.860000000009301e-07, 6.471999999996952e-06, 4.860000000009301e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.720000000013602e-07, 4.8199999999991305e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.7199999999789077e-07], 'time': [0.019088694, 0.019089167, 0.019097306, 0.019097778, 0.019106931, 0.019107403, 0.019122056, 0.019122542, 0.019130514, 0.019131, 0.019139139, 0.019139625, 0.019144264, 0.01914475, 0.019155458, 0.019155931, 0.019170194, 0.019170667, 0.019182153, 0.019182625, 0.019191778, 0.01919225, 0.019204069, 0.019204542, 0.019212028, 0.0192125, 0.019227014, 0.019227486, 0.019233611, 0.019234083, 0.019239236, 0.019239708, 0.019245208, 0.019245681, 0.019251667, 0.019252139, 0.019258778, 0.019259264, 0.019266569, 0.019267056, 0.019275694, 0.019276181, 0.01929, 0.019290472, 0.019295139, 0.019295611, 0.019304083, 0.019304556, 0.019318083, 0.019318556, 0.01933, 0.019330472, 0.019342625, 0.019343097, 0.019350583, 0.019351056, 0.019355708, 0.019356181, 0.019370333, 0.019370819, 0.019384681, 0.019385153, 0.019395431, 0.019395903, 0.019402875, 0.019403361, 0.019409181, 0.019409653, 0.019415375, 0.019415847, 0.019426097, 0.019426569, 0.019440056, 0.019440528, 0.019446028, 0.0194465, 0.019458806, 0.019459278, 0.019473097, 0.019473569, 0.019486389, 0.019486875, 0.019497222, 0.019497694, 0.019509306, 0.019509792, 0.019516264, 0.01951675, 0.019526222, 0.019526708, 0.019540875, 0.019541347, 0.019549681, 0.019550153, 0.019561111, 0.019561583, 0.019566403, 0.019566875, 0.019580861, 0.019581333], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:03.174" endtime="20201110 08:37:03.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.170" endtime="20201110 08:37:03.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.183" level="INFO">${RESULT} = [{'time': 0.019089167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019097778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.180" endtime="20201110 08:37:03.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.198" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:03.185" endtime="20201110 08:37:03.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.202" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:03.201" endtime="20201110 08:37:03.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.205" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:03.203" endtime="20201110 08:37:03.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.199" endtime="20201110 08:37:03.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.208" endtime="20201110 08:37:03.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.212" endtime="20201110 08:37:03.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.210" endtime="20201110 08:37:03.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.207" endtime="20201110 08:37:03.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.783" endtime="20201110 08:37:03.233"></status>
</kw>
<msg timestamp="20201110 08:37:03.233" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.241" endtime="20201110 08:37:03.252"></status>
</kw>
<msg timestamp="20201110 08:37:03.253" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.239" endtime="20201110 08:37:03.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.255" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.254" endtime="20201110 08:37:03.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.257" endtime="20201110 08:37:03.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.236" endtime="20201110 08:37:03.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.235" endtime="20201110 08:37:03.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.267" endtime="20201110 08:37:03.553"></status>
</kw>
<msg timestamp="20201110 08:37:03.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018833181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.265" endtime="20201110 08:37:03.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018832694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018833181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.557" endtime="20201110 08:37:03.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.574" endtime="20201110 08:37:03.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.263" endtime="20201110 08:37:03.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.261" endtime="20201110 08:37:03.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.581" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:03.580" endtime="20201110 08:37:03.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.586" level="INFO">VALUE: [{'time': 0.018832694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018833181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018837319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.138000000000752e-06, 'source_diff': 4.138000000000752e-06}, {'time': 0.018837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018852431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018852903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018859722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.018860194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1847999999998332e-05, 'source_diff': 1.1847999999998332e-05}, {'time': 0.018872514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018882472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.018882958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018891597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000001257e-06, 'source_diff': 8.639000000001257e-06}, {'time': 0.018892083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018905222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.018905708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018919694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.018920167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018933361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3193999999997624e-05, 'source_diff': 1.3193999999997624e-05}, {'time': 0.018933833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018939278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444999999999756e-06, 'source_diff': 5.444999999999756e-06}, {'time': 0.01893975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018945931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180999999997466e-06, 'source_diff': 6.180999999997466e-06}, {'time': 0.018946403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018955875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.018956347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018962153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.018962625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.018975111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018982431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018982903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018995042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2139000000001288e-05, 'source_diff': 1.2139000000001288e-05}, {'time': 0.018995514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019007667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152999999997388e-05, 'source_diff': 1.2152999999997388e-05}, {'time': 0.019008139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019012458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.019012931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019023944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1013000000000689e-05, 'source_diff': 1.1013000000000689e-05}, {'time': 0.019024417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019035875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1458000000002383e-05, 'source_diff': 1.1458000000002383e-05}, {'time': 0.019036347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019042472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019047958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019048431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019054083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.651999999998353e-06, 'source_diff': 5.651999999998353e-06}, {'time': 0.019054556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019062542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.985999999998022e-06, 'source_diff': 7.985999999998022e-06}, {'time': 0.019063014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019071333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.019071806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019078625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.019079097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019083236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.019083708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019096361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2652999999997888e-05, 'source_diff': 1.2652999999997888e-05}, {'time': 0.019096833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019101986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.019102458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019116292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3834000000000762e-05, 'source_diff': 1.3834000000000762e-05}, {'time': 0.019116764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019129569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.280499999999768e-05, 'source_diff': 1.280499999999768e-05}, {'time': 0.019130042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019144722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4679999999999555e-05, 'source_diff': 1.4679999999999555e-05}, {'time': 0.019145194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019158167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2972999999999457e-05, 'source_diff': 1.2972999999999457e-05}, {'time': 0.019158639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019172792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.019173264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019178736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019179222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019184361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019184847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019195153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.019195639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019200778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.019201264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019206306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.042000000000241e-06, 'source_diff': 5.042000000000241e-06}, {'time': 0.019206778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019213028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.019213514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019222833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.019223306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019236625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319000000001219e-05, 'source_diff': 1.3319000000001219e-05}, {'time': 0.019237097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01924525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.019245722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019251208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.019251681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019260833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152000000001853e-06, 'source_diff': 9.152000000001853e-06}, {'time': 0.019261306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019268625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019269097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019280083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.019280556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019290208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.019290694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019298028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.0192985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:03.582" endtime="20201110 08:37:03.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.578" endtime="20201110 08:37:03.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:03.613" level="INFO">${debug-compressed} = {'diff': [0, 4.870000000004038e-07, 4.138000000000752e-06, 4.729999999973644e-07, 1.4639000000000318e-05, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.1847999999998332e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:37:03.589" endtime="20201110 08:37:03.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.617" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:03.616" endtime="20201110 08:37:03.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.621" level="INFO">VALUE: {'diff': [0, 4.870000000004038e-07, 4.138000000000752e-06, 4.729999999973644e-07, 1.4639000000000318e-05, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.1847999999998332e-05, 4.720000000013602e-07, 9.958000000000883e-06, 4.859999999974607e-07, 8.639000000001257e-06, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3986000000000554e-05, 4.7300000000083386e-07, 1.3193999999997624e-05, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.7199999999789077e-07, 5.806000000000561e-06, 4.720000000013602e-07, 1.2014000000001163e-05, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 1.1013000000000689e-05, 4.729999999973644e-07, 1.1458000000002383e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 7.985999999998022e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.720000000013602e-07, 1.2652999999997888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3834000000000762e-05, 4.720000000013602e-07, 1.280499999999768e-05, 4.7300000000083386e-07, 1.4679999999999555e-05, 4.720000000013602e-07, 1.2972999999999457e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 5.471999999999422e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.860000000009301e-07, 9.319000000000688e-06, 4.729999999973644e-07, 1.3319000000001219e-05, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.152000000001853e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.860000000009301e-07, 7.333999999997731e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.870000000004038e-07, 4.138000000000752e-06, 4.729999999973644e-07, 1.4639000000000318e-05, 4.720000000013602e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.1847999999998332e-05, 4.720000000013602e-07, 9.958000000000883e-06, 4.859999999974607e-07, 8.639000000001257e-06, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.3986000000000554e-05, 4.7300000000083386e-07, 1.3193999999997624e-05, 4.720000000013602e-07, 5.444999999999756e-06, 4.720000000013602e-07, 6.180999999997466e-06, 4.720000000013602e-07, 9.471999999999953e-06, 4.7199999999789077e-07, 5.806000000000561e-06, 4.720000000013602e-07, 1.2014000000001163e-05, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.2139000000001288e-05, 4.720000000013602e-07, 1.2152999999997388e-05, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 1.1013000000000689e-05, 4.729999999973644e-07, 1.1458000000002383e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.651999999998353e-06, 4.7300000000083386e-07, 7.985999999998022e-06, 4.720000000013602e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 4.139000000000226e-06, 4.720000000013602e-07, 1.2652999999997888e-05, 4.720000000013602e-07, 5.153000000000796e-06, 4.7199999999789077e-07, 1.3834000000000762e-05, 4.720000000013602e-07, 1.280499999999768e-05, 4.7300000000083386e-07, 1.4679999999999555e-05, 4.720000000013602e-07, 1.2972999999999457e-05, 4.720000000013602e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 5.471999999999422e-06, 4.860000000009301e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 5.139000000001226e-06, 4.859999999974607e-07, 5.042000000000241e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.860000000009301e-07, 9.319000000000688e-06, 4.729999999973644e-07, 1.3319000000001219e-05, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.152000000001853e-06, 4.729999999973644e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.7300000000083386e-07, 9.651999999998884e-06, 4.860000000009301e-07, 7.333999999997731e-06, 4.720000000013602e-07], 'time': [0.018832694, 0.018833181, 0.018837319, 0.018837792, 0.018852431, 0.018852903, 0.018859722, 0.018860194, 0.018872042, 0.018872514, 0.018882472, 0.018882958, 0.018891597, 0.018892083, 0.018905222, 0.018905708, 0.018919694, 0.018920167, 0.018933361, 0.018933833, 0.018939278, 0.01893975, 0.018945931, 0.018946403, 0.018955875, 0.018956347, 0.018962153, 0.018962625, 0.018974639, 0.018975111, 0.018982431, 0.018982903, 0.018995042, 0.018995514, 0.019007667, 0.019008139, 0.019012458, 0.019012931, 0.019023944, 0.019024417, 0.019035875, 0.019036347, 0.019042, 0.019042472, 0.019047958, 0.019048431, 0.019054083, 0.019054556, 0.019062542, 0.019063014, 0.019071333, 0.019071806, 0.019078625, 0.019079097, 0.019083236, 0.019083708, 0.019096361, 0.019096833, 0.019101986, 0.019102458, 0.019116292, 0.019116764, 0.019129569, 0.019130042, 0.019144722, 0.019145194, 0.019158167, 0.019158639, 0.019172792, 0.019173264, 0.019178736, 0.019179222, 0.019184361, 0.019184847, 0.019195153, 0.019195639, 0.019200778, 0.019201264, 0.019206306, 0.019206778, 0.019213028, 0.019213514, 0.019222833, 0.019223306, 0.019236625, 0.019237097, 0.01924525, 0.019245722, 0.019251208, 0.019251681, 0.019260833, 0.019261306, 0.019268625, 0.019269097, 0.019280083, 0.019280556, 0.019290208, 0.019290694, 0.019298028, 0.0192985], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:37:03.618" endtime="20201110 08:37:03.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.614" endtime="20201110 08:37:03.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.627" level="INFO">${RESULT} = [{'time': 0.018833181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018837792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.623" endtime="20201110 08:37:03.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.641" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300...</msg>
<status status="PASS" starttime="20201110 08:37:03.628" endtime="20201110 08:37:03.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.645" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:03.644" endtime="20201110 08:37:03.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.648" level="INFO">VALUE: [4.870000000004038e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:03.646" endtime="20201110 08:37:03.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.642" endtime="20201110 08:37:03.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.651" endtime="20201110 08:37:03.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.655" endtime="20201110 08:37:03.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.653" endtime="20201110 08:37:03.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.649" endtime="20201110 08:37:03.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.233" endtime="20201110 08:37:03.675"></status>
</kw>
<msg timestamp="20201110 08:37:03.676" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.683" endtime="20201110 08:37:03.694"></status>
</kw>
<msg timestamp="20201110 08:37:03.694" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.682" endtime="20201110 08:37:03.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.695" endtime="20201110 08:37:03.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.698" endtime="20201110 08:37:03.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.679" endtime="20201110 08:37:03.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.677" endtime="20201110 08:37:03.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.707" endtime="20201110 08:37:03.993"></status>
</kw>
<msg timestamp="20201110 08:37:03.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018831361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.706" endtime="20201110 08:37:03.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018831361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018831847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.997" endtime="20201110 08:37:04.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.006" endtime="20201110 08:37:04.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.703" endtime="20201110 08:37:04.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.701" endtime="20201110 08:37:04.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.013" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:04.012" endtime="20201110 08:37:04.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.018" level="INFO">VALUE: [{'time': 0.018831361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018831847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018837569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.018838042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018846458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416000000000673e-06, 'source_diff': 8.416000000000673e-06}, {'time': 0.018846931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018854736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.018855222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018864028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018864514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018869833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018870306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018881792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.018882264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018889597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333000000001727e-06, 'source_diff': 7.333000000001727e-06}, {'time': 0.018890069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018899708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.018900181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018910181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0000000000003062e-05, 'source_diff': 1.0000000000003062e-05}, {'time': 0.018910653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018925292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.018925764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018930931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.018931403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018941583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000001993e-05, 'source_diff': 1.0180000000001993e-05}, {'time': 0.018942056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018947333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277000000001447e-06, 'source_diff': 5.277000000001447e-06}, {'time': 0.018947819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018957472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018957944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018962097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.018962569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018969875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.018970347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018976819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.472000000000422e-06, 'source_diff': 6.472000000000422e-06}, {'time': 0.018977292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018985611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018986083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018995403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018995875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019007944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2068999999999969e-05, 'source_diff': 1.2068999999999969e-05}, {'time': 0.019008417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019021819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3401999999999165e-05, 'source_diff': 1.3401999999999165e-05}, {'time': 0.019022306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.019027597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019040403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2806000000000622e-05, 'source_diff': 1.2806000000000622e-05}, {'time': 0.019040889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019051542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0653000000002827e-05, 'source_diff': 1.0653000000002827e-05}, {'time': 0.019052014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0190645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2486000000002523e-05, 'source_diff': 1.2486000000002523e-05}, {'time': 0.019064972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019070625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.019071097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019077764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.019078236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019084375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.019084847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.0190895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.019089972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019098458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.019098931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019112917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.019113389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019120389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.019120861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019127167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.306000000001061e-06, 'source_diff': 6.306000000001061e-06}, {'time': 0.019127653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019139125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019139611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.019152403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019159569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.019160042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019167861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819000000002657e-06, 'source_diff': 7.819000000002657e-06}, {'time': 0.019168333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019175639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.019176111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019190444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4333000000001789e-05, 'source_diff': 1.4333000000001789e-05}, {'time': 0.019190917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019203736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.019204208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019215361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.019215833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019219944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1109999999976166e-06, 'source_diff': 4.1109999999976166e-06}, {'time': 0.019220431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.019224556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019225028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019236347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.019236819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019250153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3334000000000262e-05, 'source_diff': 1.3334000000000262e-05}, {'time': 0.019250625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019263597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.019264083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019274903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.019275375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019281681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.019282167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019292153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.019292625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:04.014" endtime="20201110 08:37:04.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.009" endtime="20201110 08:37:04.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:04.046" level="INFO">${debug-compressed} = {'diff': [0, 4.859999999974607e-07, 5.721999999999672e-06, 4.7300000000083386e-07, 8.416000000000673e-06, 4.7300000000083386e-07, 7.804999999999618e-06, 4.860000000009301e-07, 8.806000000000092e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:04.021" endtime="20201110 08:37:04.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.050" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:04.049" endtime="20201110 08:37:04.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.054" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 5.721999999999672e-06, 4.7300000000083386e-07, 8.416000000000673e-06, 4.7300000000083386e-07, 7.804999999999618e-06, 4.860000000009301e-07, 8.806000000000092e-06, 4.859999999974607e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 1.0000000000003062e-05, 4.7199999999789077e-07, 1.4639000000000318e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 5.277000000001447e-06, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 1.2068999999999969e-05, 4.7300000000083386e-07, 1.3401999999999165e-05, 4.870000000004038e-07, 4.818999999999657e-06, 4.720000000013602e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.0653000000002827e-05, 4.7199999999789077e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 6.139000000002226e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 6.306000000001061e-06, 4.860000000009301e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 1.2319999999999692e-05, 4.7199999999789077e-07, 7.166000000002892e-06, 4.729999999973644e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 1.4333000000001789e-05, 4.729999999973644e-07, 1.2819000000000719e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 4.1109999999976166e-06, 4.870000000004038e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 1.3334000000000262e-05, 4.720000000013602e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 6.305999999997591e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.859999999974607e-07, 5.721999999999672e-06, 4.7300000000083386e-07, 8.416000000000673e-06, 4.7300000000083386e-07, 7.804999999999618e-06, 4.860000000009301e-07, 8.806000000000092e-06, 4.859999999974607e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 7.333000000001727e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.729999999973644e-07, 1.0000000000003062e-05, 4.7199999999789077e-07, 1.4639000000000318e-05, 4.720000000013602e-07, 5.167000000000366e-06, 4.7199999999789077e-07, 1.0180000000001993e-05, 4.729999999973644e-07, 5.277000000001447e-06, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 4.152999999999796e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 6.472000000000422e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 1.2068999999999969e-05, 4.7300000000083386e-07, 1.3401999999999165e-05, 4.870000000004038e-07, 4.818999999999657e-06, 4.720000000013602e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.0653000000002827e-05, 4.7199999999789077e-07, 1.2486000000002523e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 6.139000000002226e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 1.3986000000000554e-05, 4.720000000013602e-07, 7.000000000000062e-06, 4.7199999999789077e-07, 6.306000000001061e-06, 4.860000000009301e-07, 1.1471999999998483e-05, 4.860000000009301e-07, 1.2319999999999692e-05, 4.7199999999789077e-07, 7.166000000002892e-06, 4.729999999973644e-07, 7.819000000002657e-06, 4.7199999999789077e-07, 7.306000000002061e-06, 4.7199999999789077e-07, 1.4333000000001789e-05, 4.729999999973644e-07, 1.2819000000000719e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.720000000013602e-07, 4.1109999999976166e-06, 4.870000000004038e-07, 4.125000000000656e-06, 4.720000000013602e-07, 1.1318999999999219e-05, 4.7199999999789077e-07, 1.3334000000000262e-05, 4.720000000013602e-07, 1.2971999999999984e-05, 4.860000000009301e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 6.305999999997591e-06, 4.860000000009301e-07, 9.986000000000023e-06, 4.720000000013602e-07], 'time': [0.018831361, 0.018831847, 0.018837569, 0.018838042, 0.018846458, 0.018846931, 0.018854736, 0.018855222, 0.018864028, 0.018864514, 0.018869833, 0.018870306, 0.018881792, 0.018882264, 0.018889597, 0.018890069, 0.018899708, 0.018900181, 0.018910181, 0.018910653, 0.018925292, 0.018925764, 0.018930931, 0.018931403, 0.018941583, 0.018942056, 0.018947333, 0.018947819, 0.018957472, 0.018957944, 0.018962097, 0.018962569, 0.018969875, 0.018970347, 0.018976819, 0.018977292, 0.018985611, 0.018986083, 0.018995403, 0.018995875, 0.019007944, 0.019008417, 0.019021819, 0.019022306, 0.019027125, 0.019027597, 0.019040403, 0.019040889, 0.019051542, 0.019052014, 0.0190645, 0.019064972, 0.019070625, 0.019071097, 0.019077764, 0.019078236, 0.019084375, 0.019084847, 0.0190895, 0.019089972, 0.019098458, 0.019098931, 0.019112917, 0.019113389, 0.019120389, 0.019120861, 0.019127167, 0.019127653, 0.019139125, 0.019139611, 0.019151931, 0.019152403, 0.019159569, 0.019160042, 0.019167861, 0.019168333, 0.019175639, 0.019176111, 0.019190444, 0.019190917, 0.019203736, 0.019204208, 0.019215361, 0.019215833, 0.019219944, 0.019220431, 0.019224556, 0.019225028, 0.019236347, 0.019236819, 0.019250153, 0.019250625, 0.019263597, 0.019264083, 0.019274903, 0.019275375, 0.019281681, 0.019282167, 0.019292153, 0.019292625], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:04.051" endtime="20201110 08:37:04.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.047" endtime="20201110 08:37:04.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.060" level="INFO">${RESULT} = [{'time': 0.018831847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018838042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.056" endtime="20201110 08:37:04.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:04.084" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201110 08:37:04.061" endtime="20201110 08:37:04.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.098" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:04.094" endtime="20201110 08:37:04.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.101" level="INFO">VALUE: [4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:04.099" endtime="20201110 08:37:04.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.086" endtime="20201110 08:37:04.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.104" endtime="20201110 08:37:04.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.108" endtime="20201110 08:37:04.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.106" endtime="20201110 08:37:04.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.102" endtime="20201110 08:37:04.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.676" endtime="20201110 08:37:04.128"></status>
</kw>
<msg timestamp="20201110 08:37:04.129" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.137" endtime="20201110 08:37:04.147"></status>
</kw>
<msg timestamp="20201110 08:37:04.148" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.135" endtime="20201110 08:37:04.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.149" endtime="20201110 08:37:04.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.151" endtime="20201110 08:37:04.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.132" endtime="20201110 08:37:04.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.130" endtime="20201110 08:37:04.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.161" endtime="20201110 08:37:04.445"></status>
</kw>
<msg timestamp="20201110 08:37:04.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019108542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.160" endtime="20201110 08:37:04.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019108542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.454" endtime="20201110 08:37:04.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.473" endtime="20201110 08:37:04.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.157" endtime="20201110 08:37:04.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.155" endtime="20201110 08:37:04.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.486" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:04.484" endtime="20201110 08:37:04.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.498" level="INFO">VALUE: [{'time': 0.019108056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019108542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019121681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3139000000002288e-05, 'source_diff': 1.3139000000002288e-05}, {'time': 0.019122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019132972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.019133458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019139597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.019140083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019145889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.806000000000561e-06, 'source_diff': 5.806000000000561e-06}, {'time': 0.019146375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019154361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.019154833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999998966e-06, 'source_diff': 7.680999999998966e-06}, {'time': 0.019162986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019176306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3320000000000692e-05, 'source_diff': 1.3320000000000692e-05}, {'time': 0.019176778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019190264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.019190736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019196208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019196681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019204181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019204653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019214611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.958000000000883e-06, 'source_diff': 9.958000000000883e-06}, {'time': 0.019215083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019223917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.019224389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019231861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.019232347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019236986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.019237472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019243, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.528000000001171e-06, 'source_diff': 5.528000000001171e-06}, {'time': 0.019243472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019250778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.01925125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019263208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.019263681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019276347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2665999999997984e-05, 'source_diff': 1.2665999999997984e-05}, {'time': 0.019276819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019289458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2638999999998318e-05, 'source_diff': 1.2638999999998318e-05}, {'time': 0.019289931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019296083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.151999999998853e-06, 'source_diff': 6.151999999998853e-06}, {'time': 0.019296556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019303875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.019304347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019310333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019310806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019318306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019318778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019329417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.019329889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019338042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019338514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.019352319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019357625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.019358111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01937275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4639000000000318e-05, 'source_diff': 1.4639000000000318e-05}, {'time': 0.019373236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019386542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.019387028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.019395486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019404111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019416597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.019417069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019421389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.019421861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.019429833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019437986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019438458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019442611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.019443083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019455528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2444999999999817e-05, 'source_diff': 1.2444999999999817e-05}, {'time': 0.019456014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019467514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1500000000001093e-05, 'source_diff': 1.1500000000001093e-05}, {'time': 0.019467986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019473458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.019473931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019486083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152000000001384e-05, 'source_diff': 1.2152000000001384e-05}, {'time': 0.019486556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019499389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.019499861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019510667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.019511139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019515806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.019516278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019527083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.019527569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019538708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1138999999996818e-05, 'source_diff': 1.1138999999996818e-05}, {'time': 0.019539194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019553361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4166999999998958e-05, 'source_diff': 1.4166999999998958e-05}, {'time': 0.019553833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019562625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.019563111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019571083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.019571569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019580556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986999999998496e-06, 'source_diff': 8.986999999998496e-06}, {'time': 0.019581028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:04.489" endtime="20201110 08:37:04.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.480" endtime="20201110 08:37:04.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:04.550" level="INFO">${debug-compressed} = {'diff': [0, 4.859999999974607e-07, 1.3139000000002288e-05, 4.859999999974607e-07, 1.0805000000002618e-05, 4.859999999974607e-07, 6.139000000002226e-06, 4.859999999974607e-07, 5.806000000000561e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:04.503" endtime="20201110 08:37:04.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.554" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:04.553" endtime="20201110 08:37:04.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.558" level="INFO">VALUE: {'diff': [0, 4.859999999974607e-07, 1.3139000000002288e-05, 4.859999999974607e-07, 1.0805000000002618e-05, 4.859999999974607e-07, 6.139000000002226e-06, 4.859999999974607e-07, 5.806000000000561e-06, 4.860000000009301e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 7.680999999998966e-06, 4.720000000013602e-07, 1.3320000000000692e-05, 4.7199999999789077e-07, 1.3486000000000054e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.7199999999789077e-07, 9.958000000000883e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.1957999999999414e-05, 4.7300000000083386e-07, 1.2665999999997984e-05, 4.720000000013602e-07, 1.2638999999998318e-05, 4.7300000000083386e-07, 6.151999999998853e-06, 4.7300000000083386e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.331899999999775e-05, 4.860000000009301e-07, 5.306000000000061e-06, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.3306000000001122e-05, 4.860000000009301e-07, 7.971999999998453e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.2485999999999053e-05, 4.7199999999789077e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 7.500000000000562e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.720000000013602e-07, 1.2444999999999817e-05, 4.860000000009301e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 1.2152000000001384e-05, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.1138999999996818e-05, 4.860000000009301e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 8.792000000000522e-06, 4.860000000009301e-07, 7.971999999998453e-06, 4.860000000009301e-07, 8.986999999998496e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.859999999974607e-07, 1.3139000000002288e-05, 4.859999999974607e-07, 1.0805000000002618e-05, 4.859999999974607e-07, 6.139000000002226e-06, 4.859999999974607e-07, 5.806000000000561e-06, 4.860000000009301e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 7.680999999998966e-06, 4.720000000013602e-07, 1.3320000000000692e-05, 4.7199999999789077e-07, 1.3486000000000054e-05, 4.720000000013602e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.7199999999789077e-07, 9.958000000000883e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.859999999974607e-07, 5.528000000001171e-06, 4.720000000013602e-07, 7.305999999998591e-06, 4.720000000013602e-07, 1.1957999999999414e-05, 4.7300000000083386e-07, 1.2665999999997984e-05, 4.720000000013602e-07, 1.2638999999998318e-05, 4.7300000000083386e-07, 6.151999999998853e-06, 4.7300000000083386e-07, 7.319000000002157e-06, 4.7199999999789077e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.720000000013602e-07, 1.0638999999999788e-05, 4.7199999999789077e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.331899999999775e-05, 4.860000000009301e-07, 5.306000000000061e-06, 4.860000000009301e-07, 1.4639000000000318e-05, 4.859999999974607e-07, 1.3306000000001122e-05, 4.860000000009301e-07, 7.971999999998453e-06, 4.860000000009301e-07, 8.153000000000327e-06, 4.720000000013602e-07, 1.2485999999999053e-05, 4.7199999999789077e-07, 4.3200000000021e-06, 4.7199999999789077e-07, 7.500000000000562e-06, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 4.152999999999796e-06, 4.720000000013602e-07, 1.2444999999999817e-05, 4.860000000009301e-07, 1.1500000000001093e-05, 4.7199999999789077e-07, 5.471999999999422e-06, 4.7300000000083386e-07, 1.2152000000001384e-05, 4.729999999973644e-07, 1.2833000000000289e-05, 4.720000000013602e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.1138999999996818e-05, 4.860000000009301e-07, 1.4166999999998958e-05, 4.720000000013602e-07, 8.792000000000522e-06, 4.860000000009301e-07, 7.971999999998453e-06, 4.860000000009301e-07, 8.986999999998496e-06, 4.720000000013602e-07], 'time': [0.019108056, 0.019108542, 0.019121681, 0.019122167, 0.019132972, 0.019133458, 0.019139597, 0.019140083, 0.019145889, 0.019146375, 0.019154361, 0.019154833, 0.019162514, 0.019162986, 0.019176306, 0.019176778, 0.019190264, 0.019190736, 0.019196208, 0.019196681, 0.019204181, 0.019204653, 0.019214611, 0.019215083, 0.019223917, 0.019224389, 0.019231861, 0.019232347, 0.019236986, 0.019237472, 0.019243, 0.019243472, 0.019250778, 0.01925125, 0.019263208, 0.019263681, 0.019276347, 0.019276819, 0.019289458, 0.019289931, 0.019296083, 0.019296556, 0.019303875, 0.019304347, 0.019310333, 0.019310806, 0.019318306, 0.019318778, 0.019329417, 0.019329889, 0.019338042, 0.019338514, 0.019351833, 0.019352319, 0.019357625, 0.019358111, 0.01937275, 0.019373236, 0.019386542, 0.019387028, 0.019395, 0.019395486, 0.019403639, 0.019404111, 0.019416597, 0.019417069, 0.019421389, 0.019421861, 0.019429361, 0.019429833, 0.019437986, 0.019438458, 0.019442611, 0.019443083, 0.019455528, 0.019456014, 0.019467514, 0.019467986, 0.019473458, 0.019473931, 0.019486083, 0.019486556, 0.019499389, 0.019499861, 0.019510667, 0.019511139, 0.019515806, 0.019516278, 0.019527083, 0.019527569, 0.019538708, 0.019539194, 0.019553361, 0.019553833, 0.019562625, 0.019563111, 0.019571083, 0.019571569, 0.019580556, 0.019581028], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:04.555" endtime="20201110 08:37:04.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.551" endtime="20201110 08:37:04.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.564" level="INFO">${RESULT} = [{'time': 0.019108542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.561" endtime="20201110 08:37:04.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:04.578" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.72...</msg>
<status status="PASS" starttime="20201110 08:37:04.565" endtime="20201110 08:37:04.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.582" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:04.581" endtime="20201110 08:37:04.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.585" level="INFO">VALUE: [4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:04.583" endtime="20201110 08:37:04.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.579" endtime="20201110 08:37:04.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.588" endtime="20201110 08:37:04.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.591" endtime="20201110 08:37:04.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.590" endtime="20201110 08:37:04.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.586" endtime="20201110 08:37:04.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.129" endtime="20201110 08:37:04.612"></status>
</kw>
<msg timestamp="20201110 08:37:04.612" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.620" endtime="20201110 08:37:04.630"></status>
</kw>
<msg timestamp="20201110 08:37:04.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.618" endtime="20201110 08:37:04.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.631" endtime="20201110 08:37:04.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.634" endtime="20201110 08:37:04.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.616" endtime="20201110 08:37:04.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.614" endtime="20201110 08:37:04.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.643" endtime="20201110 08:37:04.932"></status>
</kw>
<msg timestamp="20201110 08:37:04.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.641" endtime="20201110 08:37:04.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.936" endtime="20201110 08:37:04.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.946" endtime="20201110 08:37:04.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.639" endtime="20201110 08:37:04.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.637" endtime="20201110 08:37:04.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.953" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:04.952" endtime="20201110 08:37:04.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.958" level="INFO">VALUE: [{'time': 0.018511292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018511764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018522958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1193999999999094e-05, 'source_diff': 1.1193999999999094e-05}, {'time': 0.018523431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018534694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263000000000939e-05, 'source_diff': 1.1263000000000939e-05}, {'time': 0.018535181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018547153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.018547639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018559292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018559764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018567083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.319000000002157e-06, 'source_diff': 7.319000000002157e-06}, {'time': 0.018567556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018582208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652000000000415e-05, 'source_diff': 1.4652000000000415e-05}, {'time': 0.018582681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018591847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166000000001423e-06, 'source_diff': 9.166000000001423e-06}, {'time': 0.018592319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018599472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018599944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018612097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018612569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018621917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000277e-06, 'source_diff': 9.34800000000277e-06}, {'time': 0.018622389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018632333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.944000000001313e-06, 'source_diff': 9.944000000001313e-06}, {'time': 0.018632819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018639792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018640278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018654583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.430499999999918e-05, 'source_diff': 1.430499999999918e-05}, {'time': 0.018655069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018669042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3973000000000457e-05, 'source_diff': 1.3973000000000457e-05}, {'time': 0.018669528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018682347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.281899999999725e-05, 'source_diff': 1.281899999999725e-05}, {'time': 0.018682819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018690139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018690611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018699444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.018699917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018705056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018705528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018710847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018711319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018719639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.018720111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018734111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4000000000000123e-05, 'source_diff': 1.4000000000000123e-05}, {'time': 0.018734583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018740403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018740875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018751847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.018752333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018759639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.306000000002061e-06, 'source_diff': 7.306000000002061e-06}, {'time': 0.018760125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018767111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018767583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018777889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.018778375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018789389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1014000000000163e-05, 'source_diff': 1.1014000000000163e-05}, {'time': 0.018789861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018796319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4579999999973825e-06, 'source_diff': 6.4579999999973825e-06}, {'time': 0.018796792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018805778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999999023e-06, 'source_diff': 8.985999999999023e-06}, {'time': 0.01880625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018815444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000000563e-06, 'source_diff': 9.194000000000563e-06}, {'time': 0.018815917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018824028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.0188245, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018831486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018831958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018837444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.018837917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018845069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.151999999999853e-06, 'source_diff': 7.151999999999853e-06}, {'time': 0.018845542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018857028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.0188575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018868819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1318999999999219e-05, 'source_diff': 1.1318999999999219e-05}, {'time': 0.018869306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018879111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018879597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018887403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018887889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018901542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.018902014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018911167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.018911639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018919806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.018920278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018929597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018930069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018937056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9869999999999655e-06, 'source_diff': 6.9869999999999655e-06}, {'time': 0.018937528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018952, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018952472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018966792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4319999999998223e-05, 'source_diff': 1.4319999999998223e-05}, {'time': 0.018967264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018974917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018975389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018986708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319000000002688e-05, 'source_diff': 1.1319000000002688e-05}, {'time': 0.018987194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.0189915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.018991986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018997625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.018998111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:04.954" endtime="20201110 08:37:04.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.949" endtime="20201110 08:37:04.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:04.985" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.1263000000000939e-05, 4.870000000004038e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.1653000000000358e-05...</msg>
<status status="PASS" starttime="20201110 08:37:04.961" endtime="20201110 08:37:04.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.988" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:04.987" endtime="20201110 08:37:04.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.992" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.1263000000000939e-05, 4.870000000004038e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.1653000000000358e-05, 4.7199999999789077e-07, 7.319000000002157e-06, 4.729999999973644e-07, 1.4652000000000415e-05, 4.7300000000083386e-07, 9.166000000001423e-06, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 9.944000000001313e-06, 4.859999999974607e-07, 6.9730000000003955e-06, 4.860000000009301e-07, 1.430499999999918e-05, 4.860000000009301e-07, 1.3973000000000457e-05, 4.860000000009301e-07, 1.281899999999725e-05, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 5.319000000000157e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999999789077e-07, 5.820000000000131e-06, 4.720000000013602e-07, 1.0971999999997983e-05, 4.860000000009301e-07, 7.306000000002061e-06, 4.859999999974607e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 6.4579999999973825e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.1318999999999219e-05, 4.870000000004038e-07, 9.805000000001618e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 1.3652999999998888e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 9.319000000000688e-06, 4.720000000013602e-07, 6.9869999999999655e-06, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.720000000013602e-07, 1.4319999999998223e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.859999999974607e-07, 4.30600000000253e-06, 4.859999999974607e-07, 5.639000000001726e-06, 4.860000000009301e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.1193999999999094e-05, 4.7300000000083386e-07, 1.1263000000000939e-05, 4.870000000004038e-07, 1.1971999999998983e-05, 4.860000000009301e-07, 1.1653000000000358e-05, 4.7199999999789077e-07, 7.319000000002157e-06, 4.729999999973644e-07, 1.4652000000000415e-05, 4.7300000000083386e-07, 9.166000000001423e-06, 4.7199999999789077e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.2153000000000858e-05, 4.7199999999789077e-07, 9.34800000000277e-06, 4.7199999999789077e-07, 9.944000000001313e-06, 4.859999999974607e-07, 6.9730000000003955e-06, 4.860000000009301e-07, 1.430499999999918e-05, 4.860000000009301e-07, 1.3973000000000457e-05, 4.860000000009301e-07, 1.281899999999725e-05, 4.720000000013602e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 8.832999999999758e-06, 4.7300000000083386e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 5.319000000000157e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.4000000000000123e-05, 4.7199999999789077e-07, 5.820000000000131e-06, 4.720000000013602e-07, 1.0971999999997983e-05, 4.860000000009301e-07, 7.306000000002061e-06, 4.859999999974607e-07, 6.986000000000492e-06, 4.720000000013602e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 1.1014000000000163e-05, 4.720000000013602e-07, 6.4579999999973825e-06, 4.7300000000083386e-07, 8.985999999999023e-06, 4.720000000013602e-07, 9.194000000000563e-06, 4.7300000000083386e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 7.151999999999853e-06, 4.7300000000083386e-07, 1.1486000000001523e-05, 4.7199999999789077e-07, 1.1318999999999219e-05, 4.870000000004038e-07, 9.805000000001618e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 1.3652999999998888e-05, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 8.166999999999897e-06, 4.7199999999789077e-07, 9.319000000000688e-06, 4.720000000013602e-07, 6.9869999999999655e-06, 4.7199999999789077e-07, 1.4472000000001484e-05, 4.720000000013602e-07, 1.4319999999998223e-05, 4.720000000013602e-07, 7.652999999999827e-06, 4.7199999999789077e-07, 1.1319000000002688e-05, 4.859999999974607e-07, 4.30600000000253e-06, 4.859999999974607e-07, 5.639000000001726e-06, 4.860000000009301e-07], 'time': [0.018511292, 0.018511764, 0.018522958, 0.018523431, 0.018534694, 0.018535181, 0.018547153, 0.018547639, 0.018559292, 0.018559764, 0.018567083, 0.018567556, 0.018582208, 0.018582681, 0.018591847, 0.018592319, 0.018599472, 0.018599944, 0.018612097, 0.018612569, 0.018621917, 0.018622389, 0.018632333, 0.018632819, 0.018639792, 0.018640278, 0.018654583, 0.018655069, 0.018669042, 0.018669528, 0.018682347, 0.018682819, 0.018690139, 0.018690611, 0.018699444, 0.018699917, 0.018705056, 0.018705528, 0.018710847, 0.018711319, 0.018719639, 0.018720111, 0.018734111, 0.018734583, 0.018740403, 0.018740875, 0.018751847, 0.018752333, 0.018759639, 0.018760125, 0.018767111, 0.018767583, 0.018777889, 0.018778375, 0.018789389, 0.018789861, 0.018796319, 0.018796792, 0.018805778, 0.01880625, 0.018815444, 0.018815917, 0.018824028, 0.0188245, 0.018831486, 0.018831958, 0.018837444, 0.018837917, 0.018845069, 0.018845542, 0.018857028, 0.0188575, 0.018868819, 0.018869306, 0.018879111, 0.018879597, 0.018887403, 0.018887889, 0.018901542, 0.018902014, 0.018911167, 0.018911639, 0.018919806, 0.018920278, 0.018929597, 0.018930069, 0.018937056, 0.018937528, 0.018952, 0.018952472, 0.018966792, 0.018967264, 0.018974917, 0.018975389, 0.018986708, 0.018987194, 0.0189915, 0.018991986, 0.018997625, 0.018998111], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:04.989" endtime="20201110 08:37:04.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.985" endtime="20201110 08:37:04.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.998" level="INFO">${RESULT} = [{'time': 0.018511764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018523431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.995" endtime="20201110 08:37:04.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.011" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:04.999" endtime="20201110 08:37:05.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.016" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:05.015" endtime="20201110 08:37:05.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.018" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201110 08:37:05.017" endtime="20201110 08:37:05.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.012" endtime="20201110 08:37:05.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.021" endtime="20201110 08:37:05.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.025" endtime="20201110 08:37:05.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.023" endtime="20201110 08:37:05.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.019" endtime="20201110 08:37:05.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.613" endtime="20201110 08:37:05.045"></status>
</kw>
<msg timestamp="20201110 08:37:05.046" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.053" endtime="20201110 08:37:05.064"></status>
</kw>
<msg timestamp="20201110 08:37:05.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.052" endtime="20201110 08:37:05.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.067" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.066" endtime="20201110 08:37:05.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.068" endtime="20201110 08:37:05.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.049" endtime="20201110 08:37:05.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.047" endtime="20201110 08:37:05.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.078" endtime="20201110 08:37:05.367"></status>
</kw>
<msg timestamp="20201110 08:37:05.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01870475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018705222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:05.076" endtime="20201110 08:37:05.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01870475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018705222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:05.371" endtime="20201110 08:37:05.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.379" endtime="20201110 08:37:05.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.074" endtime="20201110 08:37:05.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.072" endtime="20201110 08:37:05.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.386" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:05.385" endtime="20201110 08:37:05.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.391" level="INFO">VALUE: [{'time': 0.01870475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018705222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018710528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018720639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.639000000002257e-06, 'source_diff': 9.639000000002257e-06}, {'time': 0.018721111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018726764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018727236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018736903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.018737375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018751347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.018751819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018759639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.82000000000213e-06, 'source_diff': 7.82000000000213e-06}, {'time': 0.018760111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018765264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.018765736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018771403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666999999997396e-06, 'source_diff': 5.666999999997396e-06}, {'time': 0.018771875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018780181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.018780667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018790806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.018791292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018805764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.01880625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018816069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018816542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018821681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018822167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018833319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152000000000384e-05, 'source_diff': 1.1152000000000384e-05}, {'time': 0.018833792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018845944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2152000000001384e-05, 'source_diff': 1.2152000000001384e-05}, {'time': 0.018846417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018855569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.018856042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018869944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3901999999999665e-05, 'source_diff': 1.3901999999999665e-05}, {'time': 0.018870417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018881819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1402000000000634e-05, 'source_diff': 1.1402000000000634e-05}, {'time': 0.018882292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018892778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.01889325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018900403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018900889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.01891025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.018910722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018918333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.018918806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018928944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0137999999999814e-05, 'source_diff': 1.0137999999999814e-05}, {'time': 0.018929431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018938403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.018938889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018943361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.018943847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018954, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.018954472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018960292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.820000000000131e-06, 'source_diff': 5.820000000000131e-06}, {'time': 0.018960764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01896675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018967222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018976042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.018976514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0189825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018982972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018993806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833999999997762e-05, 'source_diff': 1.0833999999997762e-05}, {'time': 0.018994278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019003083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.019003556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019010375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.818999999998188e-06, 'source_diff': 6.818999999998188e-06}, {'time': 0.019010847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019024833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3986000000000554e-05, 'source_diff': 1.3986000000000554e-05}, {'time': 0.019025306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019037806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2500000000002093e-05, 'source_diff': 1.2500000000002093e-05}, {'time': 0.019038278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01904725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.972000000002922e-06, 'source_diff': 8.972000000002922e-06}, {'time': 0.019047736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.019061375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3638999999999318e-05, 'source_diff': 1.3638999999999318e-05}, {'time': 0.019061861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019071833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.019072319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019084375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2055999999999872e-05, 'source_diff': 1.2055999999999872e-05}, {'time': 0.019084847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019098597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999999873e-05, 'source_diff': 1.3749999999999873e-05}, {'time': 0.019099069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019107056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.987000000000966e-06, 'source_diff': 7.987000000000966e-06}, {'time': 0.019107528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019121181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.019121653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019127319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.019127792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019139264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1471999999998483e-05, 'source_diff': 1.1471999999998483e-05}, {'time': 0.019139736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019152056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.019152542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019158028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.0191585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019170139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.019170625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019184278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.01918475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019192903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.019193375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:05.387" endtime="20201110 08:37:05.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.383" endtime="20201110 08:37:05.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:05.417" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 5.306000000000061e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:05.394" endtime="20201110 08:37:05.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.421" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:05.420" endtime="20201110 08:37:05.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.425" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 5.306000000000061e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.3972000000000984e-05, 4.7199999999789077e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 9.819000000001188e-06, 4.729999999973644e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.1152000000000384e-05, 4.729999999973644e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 1.3901999999999665e-05, 4.7300000000083386e-07, 1.1402000000000634e-05, 4.729999999973644e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 7.1529999999993266e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.870000000004038e-07, 8.971999999999453e-06, 4.860000000009301e-07, 4.471999999998422e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 5.820000000000131e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 8.819999999999661e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.0833999999997762e-05, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.729999999973644e-07, 1.2500000000002093e-05, 4.7199999999789077e-07, 8.972000000002922e-06, 4.859999999974607e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.860000000009301e-07, 1.2055999999999872e-05, 4.7199999999789077e-07, 1.3749999999999873e-05, 4.720000000013602e-07, 7.987000000000966e-06, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 1.1471999999998483e-05, 4.720000000013602e-07, 1.2319999999999692e-05, 4.860000000009301e-07, 5.485999999998992e-06, 4.7199999999789077e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.3652999999998888e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 5.306000000000061e-06, 4.7199999999789077e-07, 9.639000000002257e-06, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 1.3972000000000984e-05, 4.7199999999789077e-07, 7.82000000000213e-06, 4.7199999999789077e-07, 5.153000000000796e-06, 4.720000000013602e-07, 5.666999999997396e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.0138999999999287e-05, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 9.819000000001188e-06, 4.729999999973644e-07, 5.139000000001226e-06, 4.860000000009301e-07, 1.1152000000000384e-05, 4.729999999973644e-07, 1.2152000000001384e-05, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 1.3901999999999665e-05, 4.7300000000083386e-07, 1.1402000000000634e-05, 4.729999999973644e-07, 1.0486000000000523e-05, 4.720000000013602e-07, 7.1529999999993266e-06, 4.860000000009301e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.6109999999976474e-06, 4.7300000000083386e-07, 1.0137999999999814e-05, 4.870000000004038e-07, 8.971999999999453e-06, 4.860000000009301e-07, 4.471999999998422e-06, 4.860000000009301e-07, 1.0152999999998857e-05, 4.720000000013602e-07, 5.820000000000131e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 8.819999999999661e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.0833999999997762e-05, 4.720000000013602e-07, 8.805000000000618e-06, 4.7300000000083386e-07, 6.818999999998188e-06, 4.720000000013602e-07, 1.3986000000000554e-05, 4.729999999973644e-07, 1.2500000000002093e-05, 4.7199999999789077e-07, 8.972000000002922e-06, 4.859999999974607e-07, 1.3638999999999318e-05, 4.860000000009301e-07, 9.972000000000453e-06, 4.860000000009301e-07, 1.2055999999999872e-05, 4.7199999999789077e-07, 1.3749999999999873e-05, 4.720000000013602e-07, 7.987000000000966e-06, 4.7199999999789077e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 5.666000000001392e-06, 4.7300000000083386e-07, 1.1471999999998483e-05, 4.720000000013602e-07, 1.2319999999999692e-05, 4.860000000009301e-07, 5.485999999998992e-06, 4.7199999999789077e-07, 1.1639000000000788e-05, 4.860000000009301e-07, 1.3652999999998888e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07], 'time': [0.01870475, 0.018705222, 0.018710528, 0.018711, 0.018720639, 0.018721111, 0.018726764, 0.018727236, 0.018736903, 0.018737375, 0.018751347, 0.018751819, 0.018759639, 0.018760111, 0.018765264, 0.018765736, 0.018771403, 0.018771875, 0.018780181, 0.018780667, 0.018790806, 0.018791292, 0.018805764, 0.01880625, 0.018816069, 0.018816542, 0.018821681, 0.018822167, 0.018833319, 0.018833792, 0.018845944, 0.018846417, 0.018855569, 0.018856042, 0.018869944, 0.018870417, 0.018881819, 0.018882292, 0.018892778, 0.01889325, 0.018900403, 0.018900889, 0.01891025, 0.018910722, 0.018918333, 0.018918806, 0.018928944, 0.018929431, 0.018938403, 0.018938889, 0.018943361, 0.018943847, 0.018954, 0.018954472, 0.018960292, 0.018960764, 0.01896675, 0.018967222, 0.018976042, 0.018976514, 0.0189825, 0.018982972, 0.018993806, 0.018994278, 0.019003083, 0.019003556, 0.019010375, 0.019010847, 0.019024833, 0.019025306, 0.019037806, 0.019038278, 0.01904725, 0.019047736, 0.019061375, 0.019061861, 0.019071833, 0.019072319, 0.019084375, 0.019084847, 0.019098597, 0.019099069, 0.019107056, 0.019107528, 0.019121181, 0.019121653, 0.019127319, 0.019127792, 0.019139264, 0.019139736, 0.019152056, 0.019152542, 0.019158028, 0.0191585, 0.019170139, 0.019170625, 0.019184278, 0.01918475, 0.019192903, 0.019193375], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:05.422" endtime="20201110 08:37:05.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.418" endtime="20201110 08:37:05.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.431" level="INFO">${RESULT} = [{'time': 0.018705222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:05.427" endtime="20201110 08:37:05.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.444" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:05.432" endtime="20201110 08:37:05.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.448" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:05.447" endtime="20201110 08:37:05.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.451" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:05.449" endtime="20201110 08:37:05.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.445" endtime="20201110 08:37:05.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.454" endtime="20201110 08:37:05.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.457" endtime="20201110 08:37:05.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.456" endtime="20201110 08:37:05.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.452" endtime="20201110 08:37:05.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.046" endtime="20201110 08:37:05.478"></status>
</kw>
<msg timestamp="20201110 08:37:05.478" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.486" endtime="20201110 08:37:05.496"></status>
</kw>
<msg timestamp="20201110 08:37:05.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.484" endtime="20201110 08:37:05.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.498" endtime="20201110 08:37:05.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.500" endtime="20201110 08:37:05.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.482" endtime="20201110 08:37:05.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.480" endtime="20201110 08:37:05.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.509" endtime="20201110 08:37:05.793"></status>
</kw>
<msg timestamp="20201110 08:37:05.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018243708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.508" endtime="20201110 08:37:05.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018243708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.797" endtime="20201110 08:37:05.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.805" endtime="20201110 08:37:05.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.505" endtime="20201110 08:37:05.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.503" endtime="20201110 08:37:05.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.812" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:05.811" endtime="20201110 08:37:05.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.817" level="INFO">VALUE: [{'time': 0.018243708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018244181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018256347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2165999999997484e-05, 'source_diff': 1.2165999999997484e-05}, {'time': 0.018256819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018265125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.018265597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018275931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0333999999997262e-05, 'source_diff': 1.0333999999997262e-05}, {'time': 0.018276403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018283208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018283681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018298, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.018298472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018309625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152999999999857e-05, 'source_diff': 1.1152999999999857e-05}, {'time': 0.018310111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018321917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805999999999622e-05, 'source_diff': 1.1805999999999622e-05}, {'time': 0.018322403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018328236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.018328708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018335681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018336153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018348486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2332999999999789e-05, 'source_diff': 1.2332999999999789e-05}, {'time': 0.018348958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018355931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.018356403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018360903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018361375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018375347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3972000000000984e-05, 'source_diff': 1.3972000000000984e-05}, {'time': 0.018375819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018382306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.486999999999465e-06, 'source_diff': 6.486999999999465e-06}, {'time': 0.018382778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018397431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.018397903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018412556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4652999999999888e-05, 'source_diff': 1.4652999999999888e-05}, {'time': 0.018413028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018424514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018433806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018434292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018448764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4471999999998014e-05, 'source_diff': 1.4471999999998014e-05}, {'time': 0.01844925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018462556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3306000000001122e-05, 'source_diff': 1.3306000000001122e-05}, {'time': 0.018463042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018471028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.0184715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018477319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819000000000657e-06, 'source_diff': 5.819000000000657e-06}, {'time': 0.018477792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018484778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.01848525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018489375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018489861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018498, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018498486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018502792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018503278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018514083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.018514569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018524875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999998122e-05, 'source_diff': 1.0305999999998122e-05}, {'time': 0.018525361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0185365, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018536986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018550639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3653000000002358e-05, 'source_diff': 1.3653000000002358e-05}, {'time': 0.018551111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018560597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.486000000002992e-06, 'source_diff': 9.486000000002992e-06}, {'time': 0.018561069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018568389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.320000000001631e-06, 'source_diff': 7.320000000001631e-06}, {'time': 0.018568861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018579361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000000093e-05, 'source_diff': 1.0500000000000093e-05}, {'time': 0.018579833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018593306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472999999999957e-05, 'source_diff': 1.3472999999999957e-05}, {'time': 0.018593778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018601597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819000000002657e-06, 'source_diff': 7.819000000002657e-06}, {'time': 0.018602083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018613889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1806000000003092e-05, 'source_diff': 1.1806000000003092e-05}, {'time': 0.018614375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018624889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018625361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018637819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.018638292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018646764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.01864725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018658069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.018658542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018671403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2860999999999428e-05, 'source_diff': 1.2860999999999428e-05}, {'time': 0.018671875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018686375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.018686847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018695111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.018695583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152999999996857e-06, 'source_diff': 8.152999999996857e-06}, {'time': 0.018704208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018718694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018719167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018731819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2652000000001884e-05, 'source_diff': 1.2652000000001884e-05}, {'time': 0.018732306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018739139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.018739611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018748569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999999883e-06, 'source_diff': 8.957999999999883e-06}, {'time': 0.018749056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018762361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3305000000001649e-05, 'source_diff': 1.3305000000001649e-05}, {'time': 0.018762847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:05.813" endtime="20201110 08:37:05.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.809" endtime="20201110 08:37:05.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:05.843" level="INFO">${debug-compressed} = {'diff': [0, 4.7300000000083386e-07, 1.2165999999997484e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0333999999997262e-05, 4.720000000013602e-07, 6.804999999998618e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:05.820" endtime="20201110 08:37:05.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.847" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:05.846" endtime="20201110 08:37:05.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.851" level="INFO">VALUE: {'diff': [0, 4.7300000000083386e-07, 1.2165999999997484e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0333999999997262e-05, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 1.431899999999875e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 1.2332999999999789e-05, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.860000000009301e-07, 8.806000000000092e-06, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 4.720000000013602e-07, 4.1249999999971865e-06, 4.860000000009301e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.859999999974607e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 9.486000000002992e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.859999999974607e-07, 1.1806000000003092e-05, 4.859999999974607e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.2457999999999914e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4500000000000624e-05, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.729999999973644e-07, 1.2652000000001884e-05, 4.870000000004038e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.870000000004038e-07, 1.3305000000001649e-05, 4.859999999974607e-07], 'eventsource_diff': [0, 4.7300000000083386e-07, 1.2165999999997484e-05, 4.720000000013602e-07, 8.305999999999591e-06, 4.720000000013602e-07, 1.0333999999997262e-05, 4.720000000013602e-07, 6.804999999998618e-06, 4.7300000000083386e-07, 1.431899999999875e-05, 4.720000000013602e-07, 1.1152999999999857e-05, 4.860000000009301e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 5.833000000000227e-06, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 1.2332999999999789e-05, 4.7199999999789077e-07, 6.9730000000003955e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 1.3972000000000984e-05, 4.720000000013602e-07, 6.486999999999465e-06, 4.7199999999789077e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.4652999999999888e-05, 4.720000000013602e-07, 1.1485999999998053e-05, 4.860000000009301e-07, 8.806000000000092e-06, 4.860000000009301e-07, 1.4471999999998014e-05, 4.860000000009301e-07, 1.3306000000001122e-05, 4.859999999974607e-07, 7.986000000001492e-06, 4.7199999999789077e-07, 5.819000000000657e-06, 4.7300000000083386e-07, 6.986000000000492e-06, 4.720000000013602e-07, 4.1249999999971865e-06, 4.860000000009301e-07, 8.139000000000757e-06, 4.860000000009301e-07, 4.305999999999061e-06, 4.860000000009301e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.0305999999998122e-05, 4.860000000009301e-07, 1.1139000000000288e-05, 4.859999999974607e-07, 1.3653000000002358e-05, 4.7199999999789077e-07, 9.486000000002992e-06, 4.7199999999789077e-07, 7.320000000001631e-06, 4.7199999999789077e-07, 1.0500000000000093e-05, 4.720000000013602e-07, 1.3472999999999957e-05, 4.7199999999789077e-07, 7.819000000002657e-06, 4.859999999974607e-07, 1.1806000000003092e-05, 4.859999999974607e-07, 1.0513999999999663e-05, 4.720000000013602e-07, 1.2457999999999914e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.2860999999999428e-05, 4.720000000013602e-07, 1.4500000000000624e-05, 4.7199999999789077e-07, 8.264000000000882e-06, 4.720000000013602e-07, 8.152999999996857e-06, 4.720000000013602e-07, 1.4486000000001054e-05, 4.729999999973644e-07, 1.2652000000001884e-05, 4.870000000004038e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 8.957999999999883e-06, 4.870000000004038e-07, 1.3305000000001649e-05, 4.859999999974607e-07], 'time': [0.018243708, 0.018244181, 0.018256347, 0.018256819, 0.018265125, 0.018265597, 0.018275931, 0.018276403, 0.018283208, 0.018283681, 0.018298, 0.018298472, 0.018309625, 0.018310111, 0.018321917, 0.018322403, 0.018328236, 0.018328708, 0.018335681, 0.018336153, 0.018348486, 0.018348958, 0.018355931, 0.018356403, 0.018360903, 0.018361375, 0.018375347, 0.018375819, 0.018382306, 0.018382778, 0.018397431, 0.018397903, 0.018412556, 0.018413028, 0.018424514, 0.018425, 0.018433806, 0.018434292, 0.018448764, 0.01844925, 0.018462556, 0.018463042, 0.018471028, 0.0184715, 0.018477319, 0.018477792, 0.018484778, 0.01848525, 0.018489375, 0.018489861, 0.018498, 0.018498486, 0.018502792, 0.018503278, 0.018514083, 0.018514569, 0.018524875, 0.018525361, 0.0185365, 0.018536986, 0.018550639, 0.018551111, 0.018560597, 0.018561069, 0.018568389, 0.018568861, 0.018579361, 0.018579833, 0.018593306, 0.018593778, 0.018601597, 0.018602083, 0.018613889, 0.018614375, 0.018624889, 0.018625361, 0.018637819, 0.018638292, 0.018646764, 0.01864725, 0.018658069, 0.018658542, 0.018671403, 0.018671875, 0.018686375, 0.018686847, 0.018695111, 0.018695583, 0.018703736, 0.018704208, 0.018718694, 0.018719167, 0.018731819, 0.018732306, 0.018739139, 0.018739611, 0.018748569, 0.018749056, 0.018762361, 0.018762847], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:05.848" endtime="20201110 08:37:05.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.844" endtime="20201110 08:37:05.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.857" level="INFO">${RESULT} = [{'time': 0.018244181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018256819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:05.854" endtime="20201110 08:37:05.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.870" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.71...</msg>
<status status="PASS" starttime="20201110 08:37:05.858" endtime="20201110 08:37:05.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.875" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:05.874" endtime="20201110 08:37:05.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.877" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201110 08:37:05.876" endtime="20201110 08:37:05.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.871" endtime="20201110 08:37:05.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.880" endtime="20201110 08:37:05.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.884" endtime="20201110 08:37:05.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.882" endtime="20201110 08:37:05.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.879" endtime="20201110 08:37:05.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.479" endtime="20201110 08:37:05.904"></status>
</kw>
<msg timestamp="20201110 08:37:05.905" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.912" endtime="20201110 08:37:05.922"></status>
</kw>
<msg timestamp="20201110 08:37:05.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.910" endtime="20201110 08:37:05.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.925" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.924" endtime="20201110 08:37:05.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.926" endtime="20201110 08:37:05.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.908" endtime="20201110 08:37:05.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.906" endtime="20201110 08:37:05.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.936" endtime="20201110 08:37:06.223"></status>
</kw>
<msg timestamp="20201110 08:37:06.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.935" endtime="20201110 08:37:06.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018383625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.227" endtime="20201110 08:37:06.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.236" endtime="20201110 08:37:06.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.932" endtime="20201110 08:37:06.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.930" endtime="20201110 08:37:06.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.242" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:06.241" endtime="20201110 08:37:06.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.247" level="INFO">VALUE: [{'time': 0.018383153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018383625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018390611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.018391083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.018402194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.333999999998731e-06, 'source_diff': 8.333999999998731e-06}, {'time': 0.018411, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018416319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.319000000000157e-06, 'source_diff': 5.319000000000157e-06}, {'time': 0.018416792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018422597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.018423069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018430889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.018431375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018441014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.0184415, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018455972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018456458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018462597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.018463083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018477417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4333999999997793e-05, 'source_diff': 1.4333999999997793e-05}, {'time': 0.018477889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018488361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.018488833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018499153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018499625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018509444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.819000000001188e-06, 'source_diff': 9.819000000001188e-06}, {'time': 0.018509917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018520431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999999663e-05, 'source_diff': 1.0513999999999663e-05}, {'time': 0.018520903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018529528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000001687e-06, 'source_diff': 8.625000000001687e-06}, {'time': 0.01853, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018539653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018540125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.331899999999775e-05, 'source_diff': 1.331899999999775e-05}, {'time': 0.018553931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018565583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1652000000000884e-05, 'source_diff': 1.1652000000000884e-05}, {'time': 0.018566056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018576528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0471999999997483e-05, 'source_diff': 1.0471999999997483e-05}, {'time': 0.018577014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018590819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805000000002149e-05, 'source_diff': 1.3805000000002149e-05}, {'time': 0.018591306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.869999999969343e-07, 'source_diff': 4.869999999969343e-07}, {'time': 0.018599778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.018600264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018605444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.018605917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018620542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4625000000000749e-05, 'source_diff': 1.4625000000000749e-05}, {'time': 0.018621014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018626167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.018626639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018639958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3319000000001219e-05, 'source_diff': 1.3319000000001219e-05}, {'time': 0.018640431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018649778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.01865025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018655389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.018655861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018661167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.306000000000061e-06, 'source_diff': 5.306000000000061e-06}, {'time': 0.018661639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018674472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018674944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018682597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018683069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018694375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1305999999999122e-05, 'source_diff': 1.1305999999999122e-05}, {'time': 0.018694861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018708333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3472000000000484e-05, 'source_diff': 1.3472000000000484e-05}, {'time': 0.018708819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018722972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018723444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018736931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486999999999527e-05, 'source_diff': 1.3486999999999527e-05}, {'time': 0.018737403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018741722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018742194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018750319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018760972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0652999999999357e-05, 'source_diff': 1.0652999999999357e-05}, {'time': 0.018761444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018769472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.018769944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018780056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111999999999621e-05, 'source_diff': 1.0111999999999621e-05}, {'time': 0.018780528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018793181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2652999999997888e-05, 'source_diff': 1.2652999999997888e-05}, {'time': 0.018793653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018807306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3652999999998888e-05, 'source_diff': 1.3652999999998888e-05}, {'time': 0.018807792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018821944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.018822417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018829056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999999257e-06, 'source_diff': 6.638999999999257e-06}, {'time': 0.018829542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018836097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.554999999998368e-06, 'source_diff': 6.554999999998368e-06}, {'time': 0.018836569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018846986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416999999998677e-05, 'source_diff': 1.0416999999998677e-05}, {'time': 0.018847458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819999999998192e-05, 'source_diff': 1.0819999999998192e-05}, {'time': 0.01885875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018863278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.528000000000171e-06, 'source_diff': 4.528000000000171e-06}, {'time': 0.01886375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018873208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458000000000383e-06, 'source_diff': 9.458000000000383e-06}, {'time': 0.018873681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018885861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2180000000000524e-05, 'source_diff': 1.2180000000000524e-05}, {'time': 0.018886333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:06.243" endtime="20201110 08:37:06.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.239" endtime="20201110 08:37:06.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:06.273" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 5.319000000000157e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:06.250" endtime="20201110 08:37:06.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.277" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:06.276" endtime="20201110 08:37:06.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.281" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.4472000000001484e-05, 4.859999999974607e-07, 6.139000000002226e-06, 4.860000000009301e-07, 1.4333999999997793e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.7199999999789077e-07, 8.625000000001687e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.331899999999775e-05, 4.870000000004038e-07, 1.1652000000000884e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.860000000009301e-07, 1.3805000000002149e-05, 4.869999999969343e-07, 8.472000000002422e-06, 4.859999999974607e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 1.4625000000000749e-05, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 1.3319000000001219e-05, 4.729999999973644e-07, 9.346999999999828e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 5.306000000000061e-06, 4.720000000013602e-07, 1.2833000000000289e-05, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.1305999999999122e-05, 4.860000000009301e-07, 1.3472000000000484e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 1.2652999999997888e-05, 4.720000000013602e-07, 1.3652999999998888e-05, 4.860000000009301e-07, 1.4151999999999915e-05, 4.7300000000083386e-07, 6.638999999999257e-06, 4.860000000009301e-07, 6.554999999998368e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 6.986000000000492e-06, 4.7199999999789077e-07, 1.0638999999999788e-05, 4.720000000013602e-07, 8.333999999998731e-06, 4.720000000013602e-07, 5.319000000000157e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 7.819999999998661e-06, 4.860000000009301e-07, 9.638999999998787e-06, 4.860000000009301e-07, 1.4472000000001484e-05, 4.859999999974607e-07, 6.139000000002226e-06, 4.860000000009301e-07, 1.4333999999997793e-05, 4.720000000013602e-07, 1.0471999999997483e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.7199999999789077e-07, 9.819000000001188e-06, 4.7300000000083386e-07, 1.0513999999999663e-05, 4.7199999999789077e-07, 8.625000000001687e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.331899999999775e-05, 4.870000000004038e-07, 1.1652000000000884e-05, 4.7300000000083386e-07, 1.0471999999997483e-05, 4.860000000009301e-07, 1.3805000000002149e-05, 4.869999999969343e-07, 8.472000000002422e-06, 4.859999999974607e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 1.4625000000000749e-05, 4.720000000013602e-07, 5.152999999997326e-06, 4.720000000013602e-07, 1.3319000000001219e-05, 4.729999999973644e-07, 9.346999999999828e-06, 4.720000000013602e-07, 5.139000000001226e-06, 4.7199999999789077e-07, 5.306000000000061e-06, 4.720000000013602e-07, 1.2833000000000289e-05, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.1305999999999122e-05, 4.860000000009301e-07, 1.3472000000000484e-05, 4.860000000009301e-07, 1.4152999999999388e-05, 4.7199999999789077e-07, 1.3486999999999527e-05, 4.720000000013602e-07, 4.318999999999157e-06, 4.720000000013602e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.0652999999999357e-05, 4.7199999999789077e-07, 8.028000000000202e-06, 4.720000000013602e-07, 1.0111999999999621e-05, 4.720000000013602e-07, 1.2652999999997888e-05, 4.720000000013602e-07, 1.3652999999998888e-05, 4.860000000009301e-07, 1.4151999999999915e-05, 4.7300000000083386e-07, 6.638999999999257e-06, 4.860000000009301e-07, 6.554999999998368e-06, 4.720000000013602e-07, 1.0416999999998677e-05, 4.720000000013602e-07, 1.0819999999998192e-05, 4.720000000013602e-07, 4.528000000000171e-06, 4.7199999999789077e-07, 9.458000000000383e-06, 4.7300000000083386e-07, 1.2180000000000524e-05, 4.720000000013602e-07], 'time': [0.018383153, 0.018383625, 0.018390611, 0.018391083, 0.018401722, 0.018402194, 0.018410528, 0.018411, 0.018416319, 0.018416792, 0.018422597, 0.018423069, 0.018430889, 0.018431375, 0.018441014, 0.0184415, 0.018455972, 0.018456458, 0.018462597, 0.018463083, 0.018477417, 0.018477889, 0.018488361, 0.018488833, 0.018499153, 0.018499625, 0.018509444, 0.018509917, 0.018520431, 0.018520903, 0.018529528, 0.01853, 0.018539653, 0.018540125, 0.018553444, 0.018553931, 0.018565583, 0.018566056, 0.018576528, 0.018577014, 0.018590819, 0.018591306, 0.018599778, 0.018600264, 0.018605444, 0.018605917, 0.018620542, 0.018621014, 0.018626167, 0.018626639, 0.018639958, 0.018640431, 0.018649778, 0.01865025, 0.018655389, 0.018655861, 0.018661167, 0.018661639, 0.018674472, 0.018674944, 0.018682597, 0.018683069, 0.018694375, 0.018694861, 0.018708333, 0.018708819, 0.018722972, 0.018723444, 0.018736931, 0.018737403, 0.018741722, 0.018742194, 0.018749847, 0.018750319, 0.018760972, 0.018761444, 0.018769472, 0.018769944, 0.018780056, 0.018780528, 0.018793181, 0.018793653, 0.018807306, 0.018807792, 0.018821944, 0.018822417, 0.018829056, 0.018829542, 0.018836097, 0.018836569, 0.018846986, 0.018847458, 0.018858278, 0.01885875, 0.018863278, 0.01886375, 0.018873208, 0.018873681, 0.018885861, 0.018886333], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:06.278" endtime="20201110 08:37:06.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.274" endtime="20201110 08:37:06.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.287" level="INFO">${RESULT} = [{'time': 0.018383625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018391083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:06.283" endtime="20201110 08:37:06.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:06.300" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.85...</msg>
<status status="PASS" starttime="20201110 08:37:06.288" endtime="20201110 08:37:06.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.305" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:06.303" endtime="20201110 08:37:06.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.307" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:06.306" endtime="20201110 08:37:06.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.301" endtime="20201110 08:37:06.308"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.310" endtime="20201110 08:37:06.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.314" endtime="20201110 08:37:06.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.312" endtime="20201110 08:37:06.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.309" endtime="20201110 08:37:06.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.905" endtime="20201110 08:37:06.334"></status>
</kw>
<msg timestamp="20201110 08:37:06.335" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.342" endtime="20201110 08:37:06.352"></status>
</kw>
<msg timestamp="20201110 08:37:06.352" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.341" endtime="20201110 08:37:06.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.353" endtime="20201110 08:37:06.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.356" endtime="20201110 08:37:06.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.338" endtime="20201110 08:37:06.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.336" endtime="20201110 08:37:06.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.365" endtime="20201110 08:37:06.655"></status>
</kw>
<msg timestamp="20201110 08:37:06.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018446014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018446486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.363" endtime="20201110 08:37:06.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018446014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018446486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.664" endtime="20201110 08:37:06.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.678" endtime="20201110 08:37:06.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.361" endtime="20201110 08:37:06.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.359" endtime="20201110 08:37:06.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.685" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:06.684" endtime="20201110 08:37:06.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.691" level="INFO">VALUE: [{'time': 0.018446014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018446486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018451319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999999227e-06, 'source_diff': 4.832999999999227e-06}, {'time': 0.018451792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018461458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.018461931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018474778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2846999999999859e-05, 'source_diff': 1.2846999999999859e-05}, {'time': 0.01847525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018487514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.018487986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018496708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999999203e-06, 'source_diff': 8.721999999999203e-06}, {'time': 0.018497181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018508264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1082999999998538e-05, 'source_diff': 1.1082999999998538e-05}, {'time': 0.018508736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018518389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.018518875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018529694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999998719e-05, 'source_diff': 1.0818999999998719e-05}, {'time': 0.018530167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018544306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018544792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018551597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.804999999998618e-06, 'source_diff': 6.804999999998618e-06}, {'time': 0.018552083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018561917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.834000000000231e-06, 'source_diff': 9.834000000000231e-06}, {'time': 0.018562389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018567861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.472000000002891e-06, 'source_diff': 5.472000000002891e-06}, {'time': 0.018568333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018575153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.820000000001131e-06, 'source_diff': 6.820000000001131e-06}, {'time': 0.018575625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018584833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.208000000000133e-06, 'source_diff': 9.208000000000133e-06}, {'time': 0.018585306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.018591403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018595722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018596194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018602986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.018603458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018610958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.018611431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018619236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.018619708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018627875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.166999999999897e-06, 'source_diff': 8.166999999999897e-06}, {'time': 0.018628347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018637153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.018637639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018644611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018645097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018659569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018660056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018664181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018664653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018674639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000000023e-06, 'source_diff': 9.986000000000023e-06}, {'time': 0.018675111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018688944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.018689417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018700222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.018700708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018713014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.0187135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018722139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.018722625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018729931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.018730417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018735569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.018736042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018749861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.018750333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018757486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1529999999993266e-06, 'source_diff': 7.1529999999993266e-06}, {'time': 0.018757958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018768792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833999999997762e-05, 'source_diff': 1.0833999999997762e-05}, {'time': 0.018769264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018779236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018779708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018789042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.018789514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018798, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018798472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018810111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.018810583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018821903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1320000000002162e-05, 'source_diff': 1.1320000000002162e-05}, {'time': 0.018822389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018830361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.018830847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018838653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018839139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018847778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.018848264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018854403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.1389999999987566e-06, 'source_diff': 6.1389999999987566e-06}, {'time': 0.018854889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018868917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4027999999999263e-05, 'source_diff': 1.4027999999999263e-05}, {'time': 0.018869389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018880514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1125000000000718e-05, 'source_diff': 1.1125000000000718e-05}, {'time': 0.018880986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018894319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3333000000000789e-05, 'source_diff': 1.3333000000000789e-05}, {'time': 0.018894792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018903264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018903736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018911375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.639000000000257e-06, 'source_diff': 7.639000000000257e-06}, {'time': 0.018911847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018923333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1486000000001523e-05, 'source_diff': 1.1486000000001523e-05}, {'time': 0.018923806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:06.686" endtime="20201110 08:37:06.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.681" endtime="20201110 08:37:06.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:06.720" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.2264000000001413e-05...</msg>
<status status="PASS" starttime="20201110 08:37:06.694" endtime="20201110 08:37:06.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.725" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:06.724" endtime="20201110 08:37:06.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.730" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.2264000000001413e-05, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 1.1082999999998538e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.860000000009301e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.834000000000231e-06, 4.7199999999789077e-07, 5.472000000002891e-06, 4.7199999999789077e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.208000000000133e-06, 4.7300000000083386e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 4.318999999999157e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 7.500000000000562e-06, 4.7300000000083386e-07, 7.804999999999618e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.860000000009301e-07, 6.9719999999974525e-06, 4.860000000009301e-07, 1.4472000000001484e-05, 4.870000000004038e-07, 4.1249999999971865e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 1.381899999999825e-05, 4.720000000013602e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.0833999999997762e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.1639000000000788e-05, 4.7199999999789077e-07, 1.1320000000002162e-05, 4.859999999974607e-07, 7.972000000001922e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999789077e-07, 1.3333000000000789e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7300000000083386e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 4.832999999999227e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 1.2846999999999859e-05, 4.7199999999789077e-07, 1.2264000000001413e-05, 4.720000000013602e-07, 8.721999999999203e-06, 4.7300000000083386e-07, 1.1082999999998538e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.860000000009301e-07, 1.0818999999998719e-05, 4.7300000000083386e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 6.804999999998618e-06, 4.860000000009301e-07, 9.834000000000231e-06, 4.7199999999789077e-07, 5.472000000002891e-06, 4.7199999999789077e-07, 6.820000000001131e-06, 4.7199999999789077e-07, 9.208000000000133e-06, 4.7300000000083386e-07, 5.625000000002156e-06, 4.7199999999789077e-07, 4.318999999999157e-06, 4.720000000013602e-07, 6.7919999999985214e-06, 4.720000000013602e-07, 7.500000000000562e-06, 4.7300000000083386e-07, 7.804999999999618e-06, 4.7199999999789077e-07, 8.166999999999897e-06, 4.720000000013602e-07, 8.806000000000092e-06, 4.860000000009301e-07, 6.9719999999974525e-06, 4.860000000009301e-07, 1.4472000000001484e-05, 4.870000000004038e-07, 4.1249999999971865e-06, 4.720000000013602e-07, 9.986000000000023e-06, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 1.0804999999999149e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 5.152000000001322e-06, 4.7300000000083386e-07, 1.381899999999825e-05, 4.720000000013602e-07, 7.1529999999993266e-06, 4.720000000013602e-07, 1.0833999999997762e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.485999999998523e-06, 4.720000000013602e-07, 1.1639000000000788e-05, 4.7199999999789077e-07, 1.1320000000002162e-05, 4.859999999974607e-07, 7.972000000001922e-06, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 8.638999999997787e-06, 4.860000000009301e-07, 6.1389999999987566e-06, 4.860000000009301e-07, 1.4027999999999263e-05, 4.720000000013602e-07, 1.1125000000000718e-05, 4.7199999999789077e-07, 1.3333000000000789e-05, 4.7300000000083386e-07, 8.471999999998953e-06, 4.720000000013602e-07, 7.639000000000257e-06, 4.7199999999789077e-07, 1.1486000000001523e-05, 4.7300000000083386e-07], 'time': [0.018446014, 0.018446486, 0.018451319, 0.018451792, 0.018461458, 0.018461931, 0.018474778, 0.01847525, 0.018487514, 0.018487986, 0.018496708, 0.018497181, 0.018508264, 0.018508736, 0.018518389, 0.018518875, 0.018529694, 0.018530167, 0.018544306, 0.018544792, 0.018551597, 0.018552083, 0.018561917, 0.018562389, 0.018567861, 0.018568333, 0.018575153, 0.018575625, 0.018584833, 0.018585306, 0.018590931, 0.018591403, 0.018595722, 0.018596194, 0.018602986, 0.018603458, 0.018610958, 0.018611431, 0.018619236, 0.018619708, 0.018627875, 0.018628347, 0.018637153, 0.018637639, 0.018644611, 0.018645097, 0.018659569, 0.018660056, 0.018664181, 0.018664653, 0.018674639, 0.018675111, 0.018688944, 0.018689417, 0.018700222, 0.018700708, 0.018713014, 0.0187135, 0.018722139, 0.018722625, 0.018729931, 0.018730417, 0.018735569, 0.018736042, 0.018749861, 0.018750333, 0.018757486, 0.018757958, 0.018768792, 0.018769264, 0.018779236, 0.018779708, 0.018789042, 0.018789514, 0.018798, 0.018798472, 0.018810111, 0.018810583, 0.018821903, 0.018822389, 0.018830361, 0.018830847, 0.018838653, 0.018839139, 0.018847778, 0.018848264, 0.018854403, 0.018854889, 0.018868917, 0.018869389, 0.018880514, 0.018880986, 0.018894319, 0.018894792, 0.018903264, 0.018903736, 0.018911375, 0.018911847, 0.018923333, 0.018923806], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:06.726" endtime="20201110 08:37:06.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.722" endtime="20201110 08:37:06.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.736" level="INFO">${RESULT} = [{'time': 0.018446486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018451792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:06.733" endtime="20201110 08:37:06.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:06.750" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4....</msg>
<status status="PASS" starttime="20201110 08:37:06.737" endtime="20201110 08:37:06.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.754" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:06.753" endtime="20201110 08:37:06.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.756" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:06.755" endtime="20201110 08:37:06.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.751" endtime="20201110 08:37:06.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.760" endtime="20201110 08:37:06.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.763" endtime="20201110 08:37:06.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.761" endtime="20201110 08:37:06.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.758" endtime="20201110 08:37:06.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.335" endtime="20201110 08:37:06.784"></status>
</kw>
<msg timestamp="20201110 08:37:06.784" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.791" endtime="20201110 08:37:06.802"></status>
</kw>
<msg timestamp="20201110 08:37:06.802" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.790" endtime="20201110 08:37:06.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.805" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.804" endtime="20201110 08:37:06.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.806" endtime="20201110 08:37:06.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.787" endtime="20201110 08:37:06.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.786" endtime="20201110 08:37:06.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.815" endtime="20201110 08:37:07.101"></status>
</kw>
<msg timestamp="20201110 08:37:07.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018333028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:06.813" endtime="20201110 08:37:07.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018333028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:07.106" endtime="20201110 08:37:07.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.114" endtime="20201110 08:37:07.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.811" endtime="20201110 08:37:07.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.809" endtime="20201110 08:37:07.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.121" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:07.120" endtime="20201110 08:37:07.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.126" level="INFO">VALUE: [{'time': 0.018333028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0183335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018342319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018342792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018357153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4361000000000929e-05, 'source_diff': 1.4361000000000929e-05}, {'time': 0.018357625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018366903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.018367375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018376361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.018376833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018388986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2153000000000858e-05, 'source_diff': 1.2153000000000858e-05}, {'time': 0.018389472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018395444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.018395931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018407236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1304999999999649e-05, 'source_diff': 1.1304999999999649e-05}, {'time': 0.018407722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018415528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.018416014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018421167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152999999997326e-06, 'source_diff': 5.152999999997326e-06}, {'time': 0.018421639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018430111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.471999999998953e-06, 'source_diff': 8.471999999998953e-06}, {'time': 0.018430597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018443597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2999999999999123e-05, 'source_diff': 1.2999999999999123e-05}, {'time': 0.018444069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018454875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999998622e-05, 'source_diff': 1.0805999999998622e-05}, {'time': 0.018455347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018463833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.485999999998523e-06, 'source_diff': 8.485999999998523e-06}, {'time': 0.018464306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018472458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.018472931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01848125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018481722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018495597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.018496069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018504889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.018505361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018519625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4263999999999943e-05, 'source_diff': 1.4263999999999943e-05}, {'time': 0.018520111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018530083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018530569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018541708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.018542194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.0185555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3305999999997653e-05, 'source_diff': 1.3305999999997653e-05}, {'time': 0.018555986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018561639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018562111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018569764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999999827e-06, 'source_diff': 7.652999999999827e-06}, {'time': 0.018570236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018583903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3666999999998458e-05, 'source_diff': 1.3666999999998458e-05}, {'time': 0.018584375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018591347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.018591819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018596319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018596792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018607764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0971999999997983e-05, 'source_diff': 1.0971999999997983e-05}, {'time': 0.018608236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018619222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018619694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018629014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.0186295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018639972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0472000000000953e-05, 'source_diff': 1.0472000000000953e-05}, {'time': 0.018640458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018647944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.018648417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018660222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000000149e-05, 'source_diff': 1.1805000000000149e-05}, {'time': 0.018660708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018668014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.305999999998591e-06, 'source_diff': 7.305999999998591e-06}, {'time': 0.0186685, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018673139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.6389999999972564e-06, 'source_diff': 4.6389999999972564e-06}, {'time': 0.018673625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018684792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1166999999999427e-05, 'source_diff': 1.1166999999999427e-05}, {'time': 0.018685264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018697069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805000000000149e-05, 'source_diff': 1.1805000000000149e-05}, {'time': 0.018697542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018708694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1152000000000384e-05, 'source_diff': 1.1152000000000384e-05}, {'time': 0.018709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018719319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152000000002853e-05, 'source_diff': 1.0152000000002853e-05}, {'time': 0.018719792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018728111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018728583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018734569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.018735042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018739694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.018740167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018752486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.018752958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018763278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.018763764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018770583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.018771056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018778528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4719999999979525e-06, 'source_diff': 7.4719999999979525e-06}, {'time': 0.018779014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018784653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6389999999982565e-06, 'source_diff': 5.6389999999982565e-06}, {'time': 0.018785139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018799278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018799764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018811431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.018811903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018817722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.018818194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:07.122" endtime="20201110 08:37:07.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.117" endtime="20201110 08:37:07.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:07.151" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 8.986000000002492e-06...</msg>
<status status="PASS" starttime="20201110 08:37:07.128" endtime="20201110 08:37:07.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.155" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:07.154" endtime="20201110 08:37:07.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.159" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 1.2153000000000858e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.870000000004038e-07, 1.1304999999999649e-05, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 5.152999999997326e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.4263999999999943e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.860000000009301e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.3666999999998458e-05, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 1.1805000000000149e-05, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 4.6389999999972564e-06, 4.860000000009301e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.1805000000000149e-05, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.729999999973644e-07, 1.0152000000002853e-05, 4.729999999973644e-07, 8.318999999999688e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.729999999973644e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 6.819000000001657e-06, 4.7300000000083386e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 4.720000000013602e-07, 5.8189999999971875e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 8.819000000000188e-06, 4.7300000000083386e-07, 1.4361000000000929e-05, 4.7199999999789077e-07, 9.278000000001452e-06, 4.7199999999789077e-07, 8.986000000002492e-06, 4.7199999999789077e-07, 1.2153000000000858e-05, 4.860000000009301e-07, 5.971999999999922e-06, 4.870000000004038e-07, 1.1304999999999649e-05, 4.860000000009301e-07, 7.805999999999091e-06, 4.860000000009301e-07, 5.152999999997326e-06, 4.720000000013602e-07, 8.471999999998953e-06, 4.860000000009301e-07, 1.2999999999999123e-05, 4.720000000013602e-07, 1.0805999999998622e-05, 4.720000000013602e-07, 8.485999999998523e-06, 4.7300000000083386e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 1.3874999999999998e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.4263999999999943e-05, 4.859999999974607e-07, 9.972000000000453e-06, 4.860000000009301e-07, 1.1139000000000288e-05, 4.860000000009301e-07, 1.3305999999997653e-05, 4.860000000009301e-07, 5.653000000001296e-06, 4.7199999999789077e-07, 7.652999999999827e-06, 4.720000000013602e-07, 1.3666999999998458e-05, 4.720000000013602e-07, 6.972000000000922e-06, 4.7199999999789077e-07, 4.500000000001031e-06, 4.7300000000083386e-07, 1.0971999999997983e-05, 4.720000000013602e-07, 1.0986000000001023e-05, 4.7199999999789077e-07, 9.320000000000161e-06, 4.860000000009301e-07, 1.0472000000000953e-05, 4.859999999974607e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 1.1805000000000149e-05, 4.860000000009301e-07, 7.305999999998591e-06, 4.860000000009301e-07, 4.6389999999972564e-06, 4.860000000009301e-07, 1.1166999999999427e-05, 4.720000000013602e-07, 1.1805000000000149e-05, 4.7300000000083386e-07, 1.1152000000000384e-05, 4.729999999973644e-07, 1.0152000000002853e-05, 4.729999999973644e-07, 8.318999999999688e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.729999999973644e-07, 1.2319000000000219e-05, 4.720000000013602e-07, 1.0320000000001162e-05, 4.859999999974607e-07, 6.819000000001657e-06, 4.7300000000083386e-07, 7.4719999999979525e-06, 4.860000000009301e-07, 5.6389999999982565e-06, 4.860000000009301e-07, 1.4138999999999818e-05, 4.860000000009301e-07, 1.1666999999999927e-05, 4.720000000013602e-07, 5.8189999999971875e-06, 4.720000000013602e-07], 'time': [0.018333028, 0.0183335, 0.018342319, 0.018342792, 0.018357153, 0.018357625, 0.018366903, 0.018367375, 0.018376361, 0.018376833, 0.018388986, 0.018389472, 0.018395444, 0.018395931, 0.018407236, 0.018407722, 0.018415528, 0.018416014, 0.018421167, 0.018421639, 0.018430111, 0.018430597, 0.018443597, 0.018444069, 0.018454875, 0.018455347, 0.018463833, 0.018464306, 0.018472458, 0.018472931, 0.01848125, 0.018481722, 0.018495597, 0.018496069, 0.018504889, 0.018505361, 0.018519625, 0.018520111, 0.018530083, 0.018530569, 0.018541708, 0.018542194, 0.0185555, 0.018555986, 0.018561639, 0.018562111, 0.018569764, 0.018570236, 0.018583903, 0.018584375, 0.018591347, 0.018591819, 0.018596319, 0.018596792, 0.018607764, 0.018608236, 0.018619222, 0.018619694, 0.018629014, 0.0186295, 0.018639972, 0.018640458, 0.018647944, 0.018648417, 0.018660222, 0.018660708, 0.018668014, 0.0186685, 0.018673139, 0.018673625, 0.018684792, 0.018685264, 0.018697069, 0.018697542, 0.018708694, 0.018709167, 0.018719319, 0.018719792, 0.018728111, 0.018728583, 0.018734569, 0.018735042, 0.018739694, 0.018740167, 0.018752486, 0.018752958, 0.018763278, 0.018763764, 0.018770583, 0.018771056, 0.018778528, 0.018779014, 0.018784653, 0.018785139, 0.018799278, 0.018799764, 0.018811431, 0.018811903, 0.018817722, 0.018818194], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:07.156" endtime="20201110 08:37:07.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.152" endtime="20201110 08:37:07.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.165" level="INFO">${RESULT} = [{'time': 0.0183335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018342792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:07.162" endtime="20201110 08:37:07.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:07.179" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4...</msg>
<status status="PASS" starttime="20201110 08:37:07.166" endtime="20201110 08:37:07.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.183" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:07.182" endtime="20201110 08:37:07.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.185" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:07.184" endtime="20201110 08:37:07.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.180" endtime="20201110 08:37:07.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.189" endtime="20201110 08:37:07.190"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.192" endtime="20201110 08:37:07.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.190" endtime="20201110 08:37:07.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.187" endtime="20201110 08:37:07.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.785" endtime="20201110 08:37:07.212"></status>
</kw>
<msg timestamp="20201110 08:37:07.213" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.220" endtime="20201110 08:37:07.230"></status>
</kw>
<msg timestamp="20201110 08:37:07.230" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.219" endtime="20201110 08:37:07.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.231" endtime="20201110 08:37:07.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.234" endtime="20201110 08:37:07.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.216" endtime="20201110 08:37:07.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.215" endtime="20201110 08:37:07.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.243" endtime="20201110 08:37:07.525"></status>
</kw>
<msg timestamp="20201110 08:37:07.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.241" endtime="20201110 08:37:07.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.529" endtime="20201110 08:37:07.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.538" endtime="20201110 08:37:07.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.239" endtime="20201110 08:37:07.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.237" endtime="20201110 08:37:07.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.544" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:07.543" endtime="20201110 08:37:07.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.549" level="INFO">VALUE: [{'time': 0.018203111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018211569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.018212042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018221917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.018222389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018235333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2944000000000844e-05, 'source_diff': 1.2944000000000844e-05}, {'time': 0.018235806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018244625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018245097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018258903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3806000000001623e-05, 'source_diff': 1.3806000000001623e-05}, {'time': 0.018259389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018268694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.304999999997648e-06, 'source_diff': 9.304999999997648e-06}, {'time': 0.018269181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018278667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.018279139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018285181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000001241e-06, 'source_diff': 6.042000000001241e-06}, {'time': 0.018285653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018294403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.018294889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018305694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0804999999999149e-05, 'source_diff': 1.0804999999999149e-05}, {'time': 0.018306181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018312694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.512999999999658e-06, 'source_diff': 6.512999999999658e-06}, {'time': 0.018313167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018322458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.290999999998079e-06, 'source_diff': 9.290999999998079e-06}, {'time': 0.018322931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018332583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.018333056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.01833975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999998063e-06, 'source_diff': 6.693999999998063e-06}, {'time': 0.018340222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018350667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000001287e-05, 'source_diff': 1.0445000000001287e-05}, {'time': 0.018351139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018355986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.018356458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018365583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.125000000002187e-06, 'source_diff': 9.125000000002187e-06}, {'time': 0.018366056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018378875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018379361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.018392153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018403639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1485999999998053e-05, 'source_diff': 1.1485999999998053e-05}, {'time': 0.018404111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018413431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.320000000000161e-06, 'source_diff': 9.320000000000161e-06}, {'time': 0.018413903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018427097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3194000000001094e-05, 'source_diff': 1.3194000000001094e-05}, {'time': 0.018427569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.111999999998621e-06, 'source_diff': 9.111999999998621e-06}, {'time': 0.018437153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018443986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.018444458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018452292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.018452764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018459222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.018459694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018471347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018471819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018479972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.153000000000327e-06, 'source_diff': 8.153000000000327e-06}, {'time': 0.018480444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018486431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.987000000002435e-06, 'source_diff': 5.987000000002435e-06}, {'time': 0.018486903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018491236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000002196e-06, 'source_diff': 4.333000000002196e-06}, {'time': 0.018491708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018503514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1805999999999622e-05, 'source_diff': 1.1805999999999622e-05}, {'time': 0.018504, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018513472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999999953e-06, 'source_diff': 9.471999999999953e-06}, {'time': 0.018513958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018526764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2806000000000622e-05, 'source_diff': 1.2806000000000622e-05}, {'time': 0.01852725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018539056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1806000000003092e-05, 'source_diff': 1.1806000000003092e-05}, {'time': 0.018539542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018548847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.305000000001118e-06, 'source_diff': 9.305000000001118e-06}, {'time': 0.018549333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018553986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018554458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018562944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.018563417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018578083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4665999999999985e-05, 'source_diff': 1.4665999999999985e-05}, {'time': 0.018578556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018585375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.819000000001657e-06, 'source_diff': 6.819000000001657e-06}, {'time': 0.018585847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018590486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018590958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018595083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1249999999971865e-06, 'source_diff': 4.1249999999971865e-06}, {'time': 0.018595569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018604042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.473000000001896e-06, 'source_diff': 8.473000000001896e-06}, {'time': 0.018604528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018616181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018616653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018626681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027999999998732e-05, 'source_diff': 1.0027999999998732e-05}, {'time': 0.018627153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018631431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.277999999999921e-06, 'source_diff': 4.277999999999921e-06}, {'time': 0.018631903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018636556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.018637028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018649847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2819000000000719e-05, 'source_diff': 1.2819000000000719e-05}, {'time': 0.018650319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.018656444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018668764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.018669236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:07.545" endtime="20201110 08:37:07.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.541" endtime="20201110 08:37:07.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:07.576" level="INFO">${debug-compressed} = {'diff': [0, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.7199999999789077e-07, 1.2944000000000844e-05, 4.7300000000083386e-07, 8.819000000000188e-06...</msg>
<status status="PASS" starttime="20201110 08:37:07.552" endtime="20201110 08:37:07.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.580" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:07.579" endtime="20201110 08:37:07.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.584" level="INFO">VALUE: {'diff': [0, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.7199999999789077e-07, 1.2944000000000844e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.860000000009301e-07, 9.304999999997648e-06, 4.870000000004038e-07, 9.485999999999523e-06, 4.720000000013602e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 8.750000000001812e-06, 4.860000000009301e-07, 1.0804999999999149e-05, 4.870000000004038e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 6.693999999998063e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.729999999973644e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 6.458000000000852e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 5.987000000002435e-06, 4.7199999999789077e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.1806000000003092e-05, 4.859999999974607e-07, 9.305000000001118e-06, 4.860000000009301e-07, 4.653000000000296e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.1249999999971865e-06, 4.860000000009301e-07, 8.473000000001896e-06, 4.859999999974607e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.277999999999921e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.7199999999789077e-07, 7.986000000001492e-06, 4.7300000000083386e-07, 9.874999999999468e-06, 4.7199999999789077e-07, 1.2944000000000844e-05, 4.7300000000083386e-07, 8.819000000000188e-06, 4.7199999999789077e-07, 1.3806000000001623e-05, 4.860000000009301e-07, 9.304999999997648e-06, 4.870000000004038e-07, 9.485999999999523e-06, 4.720000000013602e-07, 6.042000000001241e-06, 4.7199999999789077e-07, 8.750000000001812e-06, 4.860000000009301e-07, 1.0804999999999149e-05, 4.870000000004038e-07, 6.512999999999658e-06, 4.7300000000083386e-07, 9.290999999998079e-06, 4.7300000000083386e-07, 9.651999999998884e-06, 4.7300000000083386e-07, 6.693999999998063e-06, 4.720000000013602e-07, 1.0445000000001287e-05, 4.7199999999789077e-07, 4.847000000002266e-06, 4.7199999999789077e-07, 9.125000000002187e-06, 4.729999999973644e-07, 1.2819000000000719e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.860000000009301e-07, 1.1485999999998053e-05, 4.720000000013602e-07, 9.320000000000161e-06, 4.7199999999789077e-07, 1.3194000000001094e-05, 4.720000000013602e-07, 9.111999999998621e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 6.458000000000852e-06, 4.7199999999789077e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 8.153000000000327e-06, 4.7199999999789077e-07, 5.987000000002435e-06, 4.7199999999789077e-07, 4.333000000002196e-06, 4.7199999999789077e-07, 1.1805999999999622e-05, 4.860000000009301e-07, 9.471999999999953e-06, 4.860000000009301e-07, 1.2806000000000622e-05, 4.859999999974607e-07, 1.1806000000003092e-05, 4.859999999974607e-07, 9.305000000001118e-06, 4.860000000009301e-07, 4.653000000000296e-06, 4.7199999999789077e-07, 8.486000000001992e-06, 4.729999999973644e-07, 1.4665999999999985e-05, 4.7300000000083386e-07, 6.819000000001657e-06, 4.7199999999789077e-07, 4.639000000000726e-06, 4.720000000013602e-07, 4.1249999999971865e-06, 4.860000000009301e-07, 8.473000000001896e-06, 4.859999999974607e-07, 1.1653000000000358e-05, 4.720000000013602e-07, 1.0027999999998732e-05, 4.720000000013602e-07, 4.277999999999921e-06, 4.7199999999789077e-07, 4.653000000000296e-06, 4.720000000013602e-07, 1.2819000000000719e-05, 4.7199999999789077e-07, 5.653000000001296e-06, 4.720000000013602e-07, 1.2319999999999692e-05, 4.7199999999789077e-07], 'time': [0.018203111, 0.018203583, 0.018211569, 0.018212042, 0.018221917, 0.018222389, 0.018235333, 0.018235806, 0.018244625, 0.018245097, 0.018258903, 0.018259389, 0.018268694, 0.018269181, 0.018278667, 0.018279139, 0.018285181, 0.018285653, 0.018294403, 0.018294889, 0.018305694, 0.018306181, 0.018312694, 0.018313167, 0.018322458, 0.018322931, 0.018332583, 0.018333056, 0.01833975, 0.018340222, 0.018350667, 0.018351139, 0.018355986, 0.018356458, 0.018365583, 0.018366056, 0.018378875, 0.018379361, 0.018391667, 0.018392153, 0.018403639, 0.018404111, 0.018413431, 0.018413903, 0.018427097, 0.018427569, 0.018436681, 0.018437153, 0.018443986, 0.018444458, 0.018452292, 0.018452764, 0.018459222, 0.018459694, 0.018471347, 0.018471819, 0.018479972, 0.018480444, 0.018486431, 0.018486903, 0.018491236, 0.018491708, 0.018503514, 0.018504, 0.018513472, 0.018513958, 0.018526764, 0.01852725, 0.018539056, 0.018539542, 0.018548847, 0.018549333, 0.018553986, 0.018554458, 0.018562944, 0.018563417, 0.018578083, 0.018578556, 0.018585375, 0.018585847, 0.018590486, 0.018590958, 0.018595083, 0.018595569, 0.018604042, 0.018604528, 0.018616181, 0.018616653, 0.018626681, 0.018627153, 0.018631431, 0.018631903, 0.018636556, 0.018637028, 0.018649847, 0.018650319, 0.018655972, 0.018656444, 0.018668764, 0.018669236], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:07.581" endtime="20201110 08:37:07.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.577" endtime="20201110 08:37:07.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.589" level="INFO">${RESULT} = [{'time': 0.018203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018212042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:07.586" endtime="20201110 08:37:07.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:07.602" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4...</msg>
<status status="PASS" starttime="20201110 08:37:07.590" endtime="20201110 08:37:07.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.607" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:07.606" endtime="20201110 08:37:07.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.609" level="INFO">VALUE: [4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:07.608" endtime="20201110 08:37:07.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.603" endtime="20201110 08:37:07.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.612" endtime="20201110 08:37:07.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.616" endtime="20201110 08:37:07.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.614" endtime="20201110 08:37:07.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.611" endtime="20201110 08:37:07.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.213" endtime="20201110 08:37:07.636"></status>
</kw>
<msg timestamp="20201110 08:37:07.637" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.644" endtime="20201110 08:37:07.655"></status>
</kw>
<msg timestamp="20201110 08:37:07.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.643" endtime="20201110 08:37:07.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.658" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.656" endtime="20201110 08:37:07.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.659" endtime="20201110 08:37:07.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.640" endtime="20201110 08:37:07.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.638" endtime="20201110 08:37:07.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.669" endtime="20201110 08:37:07.958"></status>
</kw>
<msg timestamp="20201110 08:37:07.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.667" endtime="20201110 08:37:07.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.962" endtime="20201110 08:37:07.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.971" endtime="20201110 08:37:07.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.665" endtime="20201110 08:37:07.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.663" endtime="20201110 08:37:07.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.978" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:07.977" endtime="20201110 08:37:07.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.983" level="INFO">VALUE: [{'time': 0.018606042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018606514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.434699999999789e-05, 'source_diff': 1.434699999999789e-05}, {'time': 0.018621333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018632778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1444999999998817e-05, 'source_diff': 1.1444999999998817e-05}, {'time': 0.018633264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018647931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4666999999999458e-05, 'source_diff': 1.4666999999999458e-05}, {'time': 0.018648403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018658208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.804999999998149e-06, 'source_diff': 9.804999999998149e-06}, {'time': 0.018658681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018667819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.018668306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018682806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.018683278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.01869325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.972000000000453e-06, 'source_diff': 9.972000000000453e-06}, {'time': 0.018693722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018700389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.018700861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018705347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.486000000001461e-06, 'source_diff': 4.486000000001461e-06}, {'time': 0.018705819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018714958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000001757e-06, 'source_diff': 9.139000000001757e-06}, {'time': 0.018715431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018724917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.485999999999523e-06, 'source_diff': 9.485999999999523e-06}, {'time': 0.018725389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018731389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.000000000002531e-06, 'source_diff': 6.000000000002531e-06}, {'time': 0.018731861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018742833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0972000000001453e-05, 'source_diff': 1.0972000000001453e-05}, {'time': 0.018743306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018756139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018756611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018761778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.01876225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018773208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0957999999998413e-05, 'source_diff': 1.0957999999998413e-05}, {'time': 0.018773694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018782, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.018782486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018795972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3486000000000054e-05, 'source_diff': 1.3486000000000054e-05}, {'time': 0.018796444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018810972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4527999999999763e-05, 'source_diff': 1.4527999999999763e-05}, {'time': 0.018811444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018826056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4612000000000652e-05, 'source_diff': 1.4612000000000652e-05}, {'time': 0.018826528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018841014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4486000000001054e-05, 'source_diff': 1.4486000000001054e-05}, {'time': 0.018841486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018854319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018854792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018863611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.018864083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018872903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.018873375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018886514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.018887, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018899306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2306000000000122e-05, 'source_diff': 1.2306000000000122e-05}, {'time': 0.018899792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.859999999974607e-07, 'source_diff': 4.859999999974607e-07}, {'time': 0.018911264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1472000000001953e-05, 'source_diff': 1.1472000000001953e-05}, {'time': 0.01891175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018924889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3138999999998818e-05, 'source_diff': 1.3138999999998818e-05}, {'time': 0.018925375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018935028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.0189355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018943333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.832999999998758e-06, 'source_diff': 7.832999999998758e-06}, {'time': 0.018943806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018951111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.018951583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018962903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1319999999998692e-05, 'source_diff': 1.1319999999998692e-05}, {'time': 0.018963375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018972708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.018973181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018982819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.638000000002783e-06, 'source_diff': 9.638000000002783e-06}, {'time': 0.018983292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018987431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.139000000000226e-06, 'source_diff': 4.139000000000226e-06}, {'time': 0.018987903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018992403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.500000000001031e-06, 'source_diff': 4.500000000001031e-06}, {'time': 0.018992875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018997681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.805999999999561e-06, 'source_diff': 4.805999999999561e-06}, {'time': 0.018998153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019004139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.019004611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019018444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.019018917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.019026722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.019027194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019031569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.019032042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.019045139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3097000000000109e-05, 'source_diff': 1.3097000000000109e-05}, {'time': 0.019045611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019055778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.01905625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019060556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.019061042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.019065167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.125000000000656e-06, 'source_diff': 4.125000000000656e-06}, {'time': 0.019065639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.019079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3667000000001928e-05, 'source_diff': 1.3667000000001928e-05}, {'time': 0.019079778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.01909275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2971999999999984e-05, 'source_diff': 1.2971999999999984e-05}, {'time': 0.019093222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019102556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333999999999731e-06, 'source_diff': 9.333999999999731e-06}, {'time': 0.019103028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.019111167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.019111639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:07.979" endtime="20201110 08:37:07.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.974" endtime="20201110 08:37:07.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:08.008" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.1444999999998817e-05, 4.860000000009301e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 9.804999999998149e-06, 4...</msg>
<status status="PASS" starttime="20201110 08:37:07.985" endtime="20201110 08:37:08.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.012" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:08.011" endtime="20201110 08:37:08.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.016" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.1444999999998817e-05, 4.860000000009301e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.870000000004038e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 6.000000000002531e-06, 4.7199999999789077e-07, 1.0972000000001453e-05, 4.7300000000083386e-07, 1.2833000000000289e-05, 4.7199999999789077e-07, 5.167000000000366e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.860000000009301e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4612000000000652e-05, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.720000000013602e-07, 1.2833000000000289e-05, 4.729999999973644e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.859999999974607e-07, 1.1472000000001953e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.729999999973644e-07, 9.638000000002783e-06, 4.729999999973644e-07, 4.139000000000226e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 4.805999999999561e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 7.804999999999618e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.729999999973644e-07, 1.3097000000000109e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.3667000000001928e-05, 4.7199999999789077e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.434699999999789e-05, 4.720000000013602e-07, 1.1444999999998817e-05, 4.860000000009301e-07, 1.4666999999999458e-05, 4.720000000013602e-07, 9.804999999998149e-06, 4.7300000000083386e-07, 9.137999999998814e-06, 4.870000000004038e-07, 1.4500000000000624e-05, 4.720000000013602e-07, 9.972000000000453e-06, 4.7199999999789077e-07, 6.667000000001866e-06, 4.7199999999789077e-07, 4.486000000001461e-06, 4.7199999999789077e-07, 9.139000000001757e-06, 4.7300000000083386e-07, 9.485999999999523e-06, 4.7199999999789077e-07, 6.000000000002531e-06, 4.7199999999789077e-07, 1.0972000000001453e-05, 4.7300000000083386e-07, 1.2833000000000289e-05, 4.7199999999789077e-07, 5.167000000000366e-06, 4.720000000013602e-07, 1.0957999999998413e-05, 4.860000000009301e-07, 8.305999999999591e-06, 4.860000000009301e-07, 1.3486000000000054e-05, 4.7199999999789077e-07, 1.4527999999999763e-05, 4.720000000013602e-07, 1.4612000000000652e-05, 4.7199999999789077e-07, 1.4486000000001054e-05, 4.720000000013602e-07, 1.2833000000000289e-05, 4.729999999973644e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 1.2306000000000122e-05, 4.859999999974607e-07, 1.1472000000001953e-05, 4.860000000009301e-07, 1.3138999999998818e-05, 4.860000000009301e-07, 9.652999999998357e-06, 4.720000000013602e-07, 7.832999999998758e-06, 4.7300000000083386e-07, 7.304999999999118e-06, 4.720000000013602e-07, 1.1319999999998692e-05, 4.720000000013602e-07, 9.333000000000258e-06, 4.729999999973644e-07, 9.638000000002783e-06, 4.729999999973644e-07, 4.139000000000226e-06, 4.720000000013602e-07, 4.500000000001031e-06, 4.7199999999789077e-07, 4.805999999999561e-06, 4.720000000013602e-07, 5.985999999999492e-06, 4.720000000013602e-07, 1.383299999999782e-05, 4.7300000000083386e-07, 7.804999999999618e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.729999999973644e-07, 1.3097000000000109e-05, 4.720000000013602e-07, 1.0166999999998427e-05, 4.720000000013602e-07, 4.305999999999061e-06, 4.860000000009301e-07, 4.125000000000656e-06, 4.7199999999789077e-07, 1.3667000000001928e-05, 4.7199999999789077e-07, 1.2971999999999984e-05, 4.720000000013602e-07, 9.333999999999731e-06, 4.720000000013602e-07, 8.138999999997287e-06, 4.720000000013602e-07], 'time': [0.018606042, 0.018606514, 0.018620861, 0.018621333, 0.018632778, 0.018633264, 0.018647931, 0.018648403, 0.018658208, 0.018658681, 0.018667819, 0.018668306, 0.018682806, 0.018683278, 0.01869325, 0.018693722, 0.018700389, 0.018700861, 0.018705347, 0.018705819, 0.018714958, 0.018715431, 0.018724917, 0.018725389, 0.018731389, 0.018731861, 0.018742833, 0.018743306, 0.018756139, 0.018756611, 0.018761778, 0.01876225, 0.018773208, 0.018773694, 0.018782, 0.018782486, 0.018795972, 0.018796444, 0.018810972, 0.018811444, 0.018826056, 0.018826528, 0.018841014, 0.018841486, 0.018854319, 0.018854792, 0.018863611, 0.018864083, 0.018872903, 0.018873375, 0.018886514, 0.018887, 0.018899306, 0.018899792, 0.018911264, 0.01891175, 0.018924889, 0.018925375, 0.018935028, 0.0189355, 0.018943333, 0.018943806, 0.018951111, 0.018951583, 0.018962903, 0.018963375, 0.018972708, 0.018973181, 0.018982819, 0.018983292, 0.018987431, 0.018987903, 0.018992403, 0.018992875, 0.018997681, 0.018998153, 0.019004139, 0.019004611, 0.019018444, 0.019018917, 0.019026722, 0.019027194, 0.019031569, 0.019032042, 0.019045139, 0.019045611, 0.019055778, 0.01905625, 0.019060556, 0.019061042, 0.019065167, 0.019065639, 0.019079306, 0.019079778, 0.01909275, 0.019093222, 0.019102556, 0.019103028, 0.019111167, 0.019111639], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:08.013" endtime="20201110 08:37:08.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.009" endtime="20201110 08:37:08.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.022" level="INFO">${RESULT} = [{'time': 0.018606514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018621333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:08.019" endtime="20201110 08:37:08.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:08.036" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.71...</msg>
<status status="PASS" starttime="20201110 08:37:08.023" endtime="20201110 08:37:08.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:08.039" endtime="20201110 08:37:08.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.043" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:08.041" endtime="20201110 08:37:08.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.037" endtime="20201110 08:37:08.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.046" endtime="20201110 08:37:08.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.049" endtime="20201110 08:37:08.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.048" endtime="20201110 08:37:08.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.044" endtime="20201110 08:37:08.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.637" endtime="20201110 08:37:08.070"></status>
</kw>
<msg timestamp="20201110 08:37:08.070" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.078" endtime="20201110 08:37:08.089"></status>
</kw>
<msg timestamp="20201110 08:37:08.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.076" endtime="20201110 08:37:08.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.091" endtime="20201110 08:37:08.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.095" endtime="20201110 08:37:08.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.074" endtime="20201110 08:37:08.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.072" endtime="20201110 08:37:08.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.107" endtime="20201110 08:37:08.401"></status>
</kw>
<msg timestamp="20201110 08:37:08.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.105" endtime="20201110 08:37:08.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018536681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.405" endtime="20201110 08:37:08.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.414" endtime="20201110 08:37:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.101" endtime="20201110 08:37:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.099" endtime="20201110 08:37:08.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.420" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:08.420" endtime="20201110 08:37:08.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.426" level="INFO">VALUE: [{'time': 0.018536681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018537153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018548014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018548486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018561931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3445000000000817e-05, 'source_diff': 1.3445000000000817e-05}, {'time': 0.018562403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018573903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1499999999997623e-05, 'source_diff': 1.1499999999997623e-05}, {'time': 0.018574375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018583694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.319000000000688e-06, 'source_diff': 9.319000000000688e-06}, {'time': 0.018584167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018590972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.805000000002087e-06, 'source_diff': 6.805000000002087e-06}, {'time': 0.018591458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018605264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.01860575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018620069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.431899999999875e-05, 'source_diff': 1.431899999999875e-05}, {'time': 0.018620542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018626847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.018627333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.473000000001365e-06, 'source_diff': 4.473000000001365e-06}, {'time': 0.018632292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018638278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.01863875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018652569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.018653042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018660208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.165999999999423e-06, 'source_diff': 7.165999999999423e-06}, {'time': 0.018660681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018673333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2652000000001884e-05, 'source_diff': 1.2652000000001884e-05}, {'time': 0.018673806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018682444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.637999999998314e-06, 'source_diff': 8.637999999998314e-06}, {'time': 0.018682917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018689569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.651999999999353e-06, 'source_diff': 6.651999999999353e-06}, {'time': 0.018690042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018696028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.0186965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018700819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.318999999999157e-06, 'source_diff': 4.318999999999157e-06}, {'time': 0.018701292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018709611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.018710083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018719264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000000467e-06, 'source_diff': 9.181000000000467e-06}, {'time': 0.018719736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018727194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.457999999998383e-06, 'source_diff': 7.457999999998383e-06}, {'time': 0.018727681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018742194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.451300000000072e-05, 'source_diff': 1.451300000000072e-05}, {'time': 0.018742667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018746764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.096999999998047e-06, 'source_diff': 4.096999999998047e-06}, {'time': 0.018747236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018758097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.018758569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018762875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999999061e-06, 'source_diff': 4.305999999999061e-06}, {'time': 0.018763347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018776806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3459000000000387e-05, 'source_diff': 1.3459000000000387e-05}, {'time': 0.018777292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018782264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.01878275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018794639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1888999999997568e-05, 'source_diff': 1.1888999999997568e-05}, {'time': 0.018795111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018801514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.4029999999985765e-06, 'source_diff': 6.4029999999985765e-06}, {'time': 0.018802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018806639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.018807125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018820931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3805999999998153e-05, 'source_diff': 1.3805999999998153e-05}, {'time': 0.018821417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018826403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018826875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018836028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.153000000001327e-06, 'source_diff': 9.153000000001327e-06}, {'time': 0.0188365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018847486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0986000000001023e-05, 'source_diff': 1.0986000000001023e-05}, {'time': 0.018847958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018852944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.018853417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018858417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.018858889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018871694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2805000000001149e-05, 'source_diff': 1.2805000000001149e-05}, {'time': 0.018872167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018876986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.818999999999657e-06, 'source_diff': 4.818999999999657e-06}, {'time': 0.018877458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018887944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000000523e-05, 'source_diff': 1.0486000000000523e-05}, {'time': 0.018888417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018902069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3651999999999415e-05, 'source_diff': 1.3651999999999415e-05}, {'time': 0.018902556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018909528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9719999999974525e-06, 'source_diff': 6.9719999999974525e-06}, {'time': 0.018910014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.860000000009301e-07, 'source_diff': 4.860000000009301e-07}, {'time': 0.018919819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.018920306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.870000000004038e-07, 'source_diff': 4.870000000004038e-07}, {'time': 0.018929278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.971999999999453e-06, 'source_diff': 8.971999999999453e-06}, {'time': 0.01892975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018937472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.018937944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018945708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763999999996912e-06, 'source_diff': 7.763999999996912e-06}, {'time': 0.018946181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018955181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.018955653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}, {'time': 0.018963792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.139000000000757e-06, 'source_diff': 8.139000000000757e-06}, {'time': 0.018964264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018976583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2319000000000219e-05, 'source_diff': 1.2319000000000219e-05}, {'time': 0.018977056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999973644e-07, 'source_diff': 4.729999999973644e-07}, {'time': 0.018985208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.152000000000853e-06, 'source_diff': 8.152000000000853e-06}, {'time': 0.018985681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.018992681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.018993153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999789077e-07, 'source_diff': 4.7199999999789077e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:08.422" endtime="20201110 08:37:08.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.417" endtime="20201110 08:37:08.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:08.452" level="INFO">${debug-compressed} = {'diff': [0, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.3445000000000817e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 9.319000000000688e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:08.428" endtime="20201110 08:37:08.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.456" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:08.455" endtime="20201110 08:37:08.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.460" level="INFO">VALUE: {'diff': [0, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.3445000000000817e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 9.319000000000688e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 1.431899999999875e-05, 4.7300000000083386e-07, 6.304999999998118e-06, 4.860000000009301e-07, 4.473000000001365e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 1.3819000000001719e-05, 4.7300000000083386e-07, 7.165999999999423e-06, 4.729999999973644e-07, 1.2652000000001884e-05, 4.7300000000083386e-07, 8.637999999998314e-06, 4.7300000000083386e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 7.457999999998383e-06, 4.870000000004038e-07, 1.451300000000072e-05, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 4.305999999999061e-06, 4.720000000013602e-07, 1.3459000000000387e-05, 4.860000000009301e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1888999999997568e-05, 4.720000000013602e-07, 6.4029999999985765e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 4.985999999998492e-06, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 4.985999999998492e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.720000000013602e-07, 1.2805000000001149e-05, 4.729999999973644e-07, 4.818999999999657e-06, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.3651999999999415e-05, 4.870000000004038e-07, 6.9719999999974525e-06, 4.860000000009301e-07, 9.805000000001618e-06, 4.870000000004038e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.720000000013602e-07, 7.763999999996912e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 1.2319000000000219e-05, 4.729999999973644e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 7.000000000000062e-06, 4.7199999999789077e-07], 'eventsource_diff': [0, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 1.3445000000000817e-05, 4.720000000013602e-07, 1.1499999999997623e-05, 4.720000000013602e-07, 9.319000000000688e-06, 4.729999999973644e-07, 6.805000000002087e-06, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 1.431899999999875e-05, 4.7300000000083386e-07, 6.304999999998118e-06, 4.860000000009301e-07, 4.473000000001365e-06, 4.860000000009301e-07, 5.985999999999492e-06, 4.7199999999789077e-07, 1.3819000000001719e-05, 4.7300000000083386e-07, 7.165999999999423e-06, 4.729999999973644e-07, 1.2652000000001884e-05, 4.7300000000083386e-07, 8.637999999998314e-06, 4.7300000000083386e-07, 6.651999999999353e-06, 4.7300000000083386e-07, 5.985999999999492e-06, 4.720000000013602e-07, 4.318999999999157e-06, 4.7300000000083386e-07, 8.318999999999688e-06, 4.7199999999789077e-07, 9.181000000000467e-06, 4.720000000013602e-07, 7.457999999998383e-06, 4.870000000004038e-07, 1.451300000000072e-05, 4.7300000000083386e-07, 4.096999999998047e-06, 4.720000000013602e-07, 1.0861000000000898e-05, 4.7199999999789077e-07, 4.305999999999061e-06, 4.720000000013602e-07, 1.3459000000000387e-05, 4.860000000009301e-07, 4.971999999998922e-06, 4.860000000009301e-07, 1.1888999999997568e-05, 4.720000000013602e-07, 6.4029999999985765e-06, 4.860000000009301e-07, 4.639000000000726e-06, 4.860000000009301e-07, 1.3805999999998153e-05, 4.860000000009301e-07, 4.985999999998492e-06, 4.720000000013602e-07, 9.153000000001327e-06, 4.7199999999789077e-07, 1.0986000000001023e-05, 4.720000000013602e-07, 4.985999999998492e-06, 4.7300000000083386e-07, 4.9999999999980616e-06, 4.720000000013602e-07, 1.2805000000001149e-05, 4.729999999973644e-07, 4.818999999999657e-06, 4.720000000013602e-07, 1.0486000000000523e-05, 4.7300000000083386e-07, 1.3651999999999415e-05, 4.870000000004038e-07, 6.9719999999974525e-06, 4.860000000009301e-07, 9.805000000001618e-06, 4.870000000004038e-07, 8.971999999999453e-06, 4.7199999999789077e-07, 7.722000000001672e-06, 4.720000000013602e-07, 7.763999999996912e-06, 4.7300000000083386e-07, 9.000000000002062e-06, 4.7199999999789077e-07, 8.139000000000757e-06, 4.720000000013602e-07, 1.2319000000000219e-05, 4.729999999973644e-07, 8.152000000000853e-06, 4.7300000000083386e-07, 7.000000000000062e-06, 4.7199999999789077e-07], 'time': [0.018536681, 0.018537153, 0.018548014, 0.018548486, 0.018561931, 0.018562403, 0.018573903, 0.018574375, 0.018583694, 0.018584167, 0.018590972, 0.018591458, 0.018605264, 0.01860575, 0.018620069, 0.018620542, 0.018626847, 0.018627333, 0.018631806, 0.018632292, 0.018638278, 0.01863875, 0.018652569, 0.018653042, 0.018660208, 0.018660681, 0.018673333, 0.018673806, 0.018682444, 0.018682917, 0.018689569, 0.018690042, 0.018696028, 0.0186965, 0.018700819, 0.018701292, 0.018709611, 0.018710083, 0.018719264, 0.018719736, 0.018727194, 0.018727681, 0.018742194, 0.018742667, 0.018746764, 0.018747236, 0.018758097, 0.018758569, 0.018762875, 0.018763347, 0.018776806, 0.018777292, 0.018782264, 0.01878275, 0.018794639, 0.018795111, 0.018801514, 0.018802, 0.018806639, 0.018807125, 0.018820931, 0.018821417, 0.018826403, 0.018826875, 0.018836028, 0.0188365, 0.018847486, 0.018847958, 0.018852944, 0.018853417, 0.018858417, 0.018858889, 0.018871694, 0.018872167, 0.018876986, 0.018877458, 0.018887944, 0.018888417, 0.018902069, 0.018902556, 0.018909528, 0.018910014, 0.018919819, 0.018920306, 0.018929278, 0.01892975, 0.018937472, 0.018937944, 0.018945708, 0.018946181, 0.018955181, 0.018955653, 0.018963792, 0.018964264, 0.018976583, 0.018977056, 0.018985208, 0.018985681, 0.018992681, 0.018993153], 'source}</msg>
<status status="PASS" starttime="20201110 08:37:08.457" endtime="20201110 08:37:08.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.453" endtime="20201110 08:37:08.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.466" level="INFO">${RESULT} = [{'time': 0.018537153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.018548486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:08.462" endtime="20201110 08:37:08.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:08.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.86...</msg>
<status status="PASS" starttime="20201110 08:37:08.467" endtime="20201110 08:37:08.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.483" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:08.482" endtime="20201110 08:37:08.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.486" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201110 08:37:08.484" endtime="20201110 08:37:08.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.480" endtime="20201110 08:37:08.487"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.489" endtime="20201110 08:37:08.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.492" endtime="20201110 08:37:08.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.491" endtime="20201110 08:37:08.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.487" endtime="20201110 08:37:08.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.071" endtime="20201110 08:37:08.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.703" endtime="20201110 08:37:08.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.517" endtime="20201110 08:37:08.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.516" endtime="20201110 08:37:08.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.514" endtime="20201110 08:37:08.537"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:59.622" endtime="20201110 08:37:08.537" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.544" endtime="20201110 08:37:08.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.543" endtime="20201110 08:37:08.564"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.578" endtime="20201110 08:37:08.592"></status>
</kw>
<msg timestamp="20201110 08:37:08.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.576" endtime="20201110 08:37:08.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.595" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.593" endtime="20201110 08:37:08.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:08.602" endtime="20201110 08:37:08.604"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:08.574" endtime="20201110 08:37:08.605"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:08.571" endtime="20201110 08:37:08.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.570" endtime="20201110 08:37:08.606"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:08.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:08.609" endtime="20201110 08:37:08.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.607" endtime="20201110 08:37:08.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.568" endtime="20201110 08:37:08.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.568" endtime="20201110 08:37:08.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.611" endtime="20201110 08:37:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.566" endtime="20201110 08:37:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.565" endtime="20201110 08:37:08.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.541" endtime="20201110 08:37:08.614"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:08.616" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.623" endtime="20201110 08:37:08.635"></status>
</kw>
<msg timestamp="20201110 08:37:08.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.621" endtime="20201110 08:37:08.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.637" endtime="20201110 08:37:08.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.639" endtime="20201110 08:37:08.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.619" endtime="20201110 08:37:08.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.617" endtime="20201110 08:37:08.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.649" endtime="20201110 08:37:08.933"></status>
</kw>
<msg timestamp="20201110 08:37:08.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069884611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.647" endtime="20201110 08:37:08.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069881556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069884611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.937" endtime="20201110 08:37:08.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.945" endtime="20201110 08:37:08.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.644" endtime="20201110 08:37:08.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.642" endtime="20201110 08:37:08.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.952" level="INFO">${RESULT} = [{'time': 0.069884611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.069892486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.949" endtime="20201110 08:37:08.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:08.966" level="INFO">${OVERHEAD} = {'diff': [3.0550000000018063e-06, 3.069000000008315e-06, 3.041999999994771e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0269999...</msg>
<status status="PASS" starttime="20201110 08:37:08.953" endtime="20201110 08:37:08.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.971" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:08.970" endtime="20201110 08:37:08.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.973" level="INFO">VALUE: [3.0550000000018063e-06, 3.069000000008315e-06, 3.041999999994771e-06, 3.042000000008649e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0269999999887887e-06, 3.042000000008649e-06, 3.0409999999952975e-06, 3.0410000000091753e-06, 3.0410000000091753e-06, 3.0279999999882623e-06, 2.9720000000038604e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.083000000000946e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0279999999882623e-06, 3.041999999994771e-06, 3.0550000000018063e-06, 2.9589999999968253e-06, 2.9720000000038604e-06, 3.02800000000214e-06, 3.0409999999952975e-06, 3.041999999994771e-06, 3.05600000000128e-06, 3.0409999999952975e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0410000000091753e-06, 3.042000000008649e-06, 3.111000000000086e-06, 3.0270000000026664e-06, 3.041999999994771e-06, 3.02800000000214e-06, 3.0269999999887887e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.0139999999956313e-06, 3.096999999993577e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0279999999882623e-06, 3.02800000000214e-06, 3.0700000000077887e-06, 3.042000000008649e-06]</msg>
<status status="PASS" starttime="20201110 08:37:08.972" endtime="20201110 08:37:08.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.967" endtime="20201110 08:37:08.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.976" endtime="20201110 08:37:08.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.979" endtime="20201110 08:37:08.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.978" endtime="20201110 08:37:08.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.974" endtime="20201110 08:37:09.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.616" endtime="20201110 08:37:09.000"></status>
</kw>
<msg timestamp="20201110 08:37:09.000" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.008" endtime="20201110 08:37:09.020"></status>
</kw>
<msg timestamp="20201110 08:37:09.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.006" endtime="20201110 08:37:09.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.023" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.021" endtime="20201110 08:37:09.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.024" endtime="20201110 08:37:09.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.004" endtime="20201110 08:37:09.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.002" endtime="20201110 08:37:09.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.033" endtime="20201110 08:37:09.319"></status>
</kw>
<msg timestamp="20201110 08:37:09.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.031" endtime="20201110 08:37:09.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019607639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019610667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.323" endtime="20201110 08:37:09.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.331" endtime="20201110 08:37:09.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.029" endtime="20201110 08:37:09.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.027" endtime="20201110 08:37:09.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.338" level="INFO">${RESULT} = [{'time': 0.019610667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.019625847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:09.335" endtime="20201110 08:37:09.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:09.352" level="INFO">${OVERHEAD} = {'diff': [3.0279999999986706e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.04...</msg>
<status status="PASS" starttime="20201110 08:37:09.339" endtime="20201110 08:37:09.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.356" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:09.355" endtime="20201110 08:37:09.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.358" level="INFO">VALUE: [3.0279999999986706e-06, 3.0139999999991007e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.0270000000026664e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.083000000000946e-06, 3.0279999999986706e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.026999999999197e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.357" endtime="20201110 08:37:09.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.353" endtime="20201110 08:37:09.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.362" endtime="20201110 08:37:09.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.365" endtime="20201110 08:37:09.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.364" endtime="20201110 08:37:09.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.360" endtime="20201110 08:37:09.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.001" endtime="20201110 08:37:09.386"></status>
</kw>
<msg timestamp="20201110 08:37:09.386" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.394" endtime="20201110 08:37:09.406"></status>
</kw>
<msg timestamp="20201110 08:37:09.406" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.392" endtime="20201110 08:37:09.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.409" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.407" endtime="20201110 08:37:09.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.410" endtime="20201110 08:37:09.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.390" endtime="20201110 08:37:09.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.388" endtime="20201110 08:37:09.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.419" endtime="20201110 08:37:09.708"></status>
</kw>
<msg timestamp="20201110 08:37:09.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.417" endtime="20201110 08:37:09.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019494431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019497472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.712" endtime="20201110 08:37:09.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.720" endtime="20201110 08:37:09.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.415" endtime="20201110 08:37:09.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.413" endtime="20201110 08:37:09.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.727" level="INFO">${RESULT} = [{'time': 0.019497472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.019514833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:09.724" endtime="20201110 08:37:09.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:09.741" level="INFO">${OVERHEAD} = {'diff': [3.040999999998767e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.056...</msg>
<status status="PASS" starttime="20201110 08:37:09.728" endtime="20201110 08:37:09.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:09.744" endtime="20201110 08:37:09.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.747" level="INFO">VALUE: [3.040999999998767e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 2.972000000000391e-06, 3.01400000000257e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 2.972000000000391e-06, 3.0419999999982406e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.111000000000086e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.012999999999627e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.026999999999197e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.040999999998767e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.746" endtime="20201110 08:37:09.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.742" endtime="20201110 08:37:09.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.750" endtime="20201110 08:37:09.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.754" endtime="20201110 08:37:09.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.752" endtime="20201110 08:37:09.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.749" endtime="20201110 08:37:09.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.387" endtime="20201110 08:37:09.775"></status>
</kw>
<msg timestamp="20201110 08:37:09.775" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.782" endtime="20201110 08:37:09.794"></status>
</kw>
<msg timestamp="20201110 08:37:09.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.781" endtime="20201110 08:37:09.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.795" endtime="20201110 08:37:09.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.798" endtime="20201110 08:37:09.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.778" endtime="20201110 08:37:09.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.777" endtime="20201110 08:37:09.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.809" endtime="20201110 08:37:10.095"></status>
</kw>
<msg timestamp="20201110 08:37:10.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.807" endtime="20201110 08:37:10.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.099" endtime="20201110 08:37:10.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.108" endtime="20201110 08:37:10.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.804" endtime="20201110 08:37:10.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.802" endtime="20201110 08:37:10.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.115" level="INFO">${RESULT} = [{'time': 0.019633986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0419999999982406e-06, 'source_diff': 3.0419999999982406e-06}, {'time': 0.019641333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.111" endtime="20201110 08:37:10.115"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:10.128" level="INFO">${OVERHEAD} = {'diff': [3.0419999999982406e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.01400000000257e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3....</msg>
<status status="PASS" starttime="20201110 08:37:10.116" endtime="20201110 08:37:10.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.132" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:10.131" endtime="20201110 08:37:10.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.134" level="INFO">VALUE: [3.0419999999982406e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.01400000000257e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 2.985999999999961e-06, 3.026999999999197e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 2.958000000000821e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 2.985999999999961e-06, 3.097000000000516e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0969999999970466e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.133" endtime="20201110 08:37:10.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.129" endtime="20201110 08:37:10.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.137" endtime="20201110 08:37:10.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.141" endtime="20201110 08:37:10.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.139" endtime="20201110 08:37:10.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.136" endtime="20201110 08:37:10.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.775" endtime="20201110 08:37:10.161"></status>
</kw>
<msg timestamp="20201110 08:37:10.162" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.169" endtime="20201110 08:37:10.181"></status>
</kw>
<msg timestamp="20201110 08:37:10.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.168" endtime="20201110 08:37:10.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.182" endtime="20201110 08:37:10.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.185" endtime="20201110 08:37:10.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.165" endtime="20201110 08:37:10.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.164" endtime="20201110 08:37:10.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.194" endtime="20201110 08:37:10.481"></status>
</kw>
<msg timestamp="20201110 08:37:10.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.192" endtime="20201110 08:37:10.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019599889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019602931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.486" endtime="20201110 08:37:10.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.494" endtime="20201110 08:37:10.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.190" endtime="20201110 08:37:10.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.188" endtime="20201110 08:37:10.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.501" level="INFO">${RESULT} = [{'time': 0.019602931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019613806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:10.497" endtime="20201110 08:37:10.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:10.515" level="INFO">${OVERHEAD} = {'diff': [3.04200000000171e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.041...</msg>
<status status="PASS" starttime="20201110 08:37:10.502" endtime="20201110 08:37:10.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.519" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:10.518" endtime="20201110 08:37:10.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.522" level="INFO">VALUE: [3.04200000000171e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0559999999978105e-06, 2.9590000000002947e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 2.958000000000821e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.520" endtime="20201110 08:37:10.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.516" endtime="20201110 08:37:10.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.525" endtime="20201110 08:37:10.526"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.528" endtime="20201110 08:37:10.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.527" endtime="20201110 08:37:10.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.523" endtime="20201110 08:37:10.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.162" endtime="20201110 08:37:10.549"></status>
</kw>
<msg timestamp="20201110 08:37:10.549" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.557" endtime="20201110 08:37:10.569"></status>
</kw>
<msg timestamp="20201110 08:37:10.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.555" endtime="20201110 08:37:10.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.572" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.570" endtime="20201110 08:37:10.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.573" endtime="20201110 08:37:10.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.552" endtime="20201110 08:37:10.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.551" endtime="20201110 08:37:10.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.582" endtime="20201110 08:37:10.870"></status>
</kw>
<msg timestamp="20201110 08:37:10.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.580" endtime="20201110 08:37:10.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019608194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019611236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.874" endtime="20201110 08:37:10.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.882" endtime="20201110 08:37:10.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.578" endtime="20201110 08:37:10.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.576" endtime="20201110 08:37:10.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.889" level="INFO">${RESULT} = [{'time': 0.019611236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019626917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:10.885" endtime="20201110 08:37:10.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:10.902" level="INFO">${OVERHEAD} = {'diff': [3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.04199...</msg>
<status status="PASS" starttime="20201110 08:37:10.890" endtime="20201110 08:37:10.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.906" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:10.905" endtime="20201110 08:37:10.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.908" level="INFO">VALUE: [3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 2.985999999999961e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.07000000000085e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.04200000000171e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.907" endtime="20201110 08:37:10.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.903" endtime="20201110 08:37:10.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.912" endtime="20201110 08:37:10.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.915" endtime="20201110 08:37:10.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.914" endtime="20201110 08:37:10.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.910" endtime="20201110 08:37:10.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.549" endtime="20201110 08:37:10.936"></status>
</kw>
<msg timestamp="20201110 08:37:10.936" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.943" endtime="20201110 08:37:10.955"></status>
</kw>
<msg timestamp="20201110 08:37:10.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.942" endtime="20201110 08:37:10.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.957" endtime="20201110 08:37:10.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.959" endtime="20201110 08:37:10.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.939" endtime="20201110 08:37:10.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.938" endtime="20201110 08:37:10.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.969" endtime="20201110 08:37:11.258"></status>
</kw>
<msg timestamp="20201110 08:37:11.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.967" endtime="20201110 08:37:11.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019372569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019375667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.262" endtime="20201110 08:37:11.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.270" endtime="20201110 08:37:11.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.965" endtime="20201110 08:37:11.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.963" endtime="20201110 08:37:11.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.277" level="INFO">${RESULT} = [{'time': 0.019375667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0979999999999897e-06, 'source_diff': 3.0979999999999897e-06}, {'time': 0.019383125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.274" endtime="20201110 08:37:11.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:11.290" level="INFO">${OVERHEAD} = {'diff': [3.0979999999999897e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.1109999999966165e-06, 3.041999...</msg>
<status status="PASS" starttime="20201110 08:37:11.278" endtime="20201110 08:37:11.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.295" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:11.294" endtime="20201110 08:37:11.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.297" level="INFO">VALUE: [3.0979999999999897e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.1109999999966165e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 2.985999999999961e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0979999999999897e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.0839999999969503e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.012999999999627e-06, 3.026999999999197e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201110 08:37:11.296" endtime="20201110 08:37:11.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.291" endtime="20201110 08:37:11.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.300" endtime="20201110 08:37:11.301"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.304" endtime="20201110 08:37:11.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.302" endtime="20201110 08:37:11.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.298" endtime="20201110 08:37:11.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.936" endtime="20201110 08:37:11.324"></status>
</kw>
<msg timestamp="20201110 08:37:11.324" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.332" endtime="20201110 08:37:11.344"></status>
</kw>
<msg timestamp="20201110 08:37:11.345" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.330" endtime="20201110 08:37:11.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.348" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.346" endtime="20201110 08:37:11.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.349" endtime="20201110 08:37:11.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.328" endtime="20201110 08:37:11.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.326" endtime="20201110 08:37:11.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.358" endtime="20201110 08:37:11.648"></status>
</kw>
<msg timestamp="20201110 08:37:11.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019412625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.356" endtime="20201110 08:37:11.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019412625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019415667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.652" endtime="20201110 08:37:11.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.660" endtime="20201110 08:37:11.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.354" endtime="20201110 08:37:11.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.352" endtime="20201110 08:37:11.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.667" level="INFO">${RESULT} = [{'time': 0.019415667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.04200000000171e-06, 'source_diff': 3.04200000000171e-06}, {'time': 0.019423722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:11.664" endtime="20201110 08:37:11.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:11.680" level="INFO">${OVERHEAD} = {'diff': [3.04200000000171e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0139...</msg>
<status status="PASS" starttime="20201110 08:37:11.668" endtime="20201110 08:37:11.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.684" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:11.683" endtime="20201110 08:37:11.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.687" level="INFO">VALUE: [3.04200000000171e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.026999999999197e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.112000000003029e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0559999999978105e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0410000000022364e-06, 3.0550000000018063e-06, 3.0410000000022364e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201110 08:37:11.685" endtime="20201110 08:37:11.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.681" endtime="20201110 08:37:11.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.690" endtime="20201110 08:37:11.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.693" endtime="20201110 08:37:11.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.692" endtime="20201110 08:37:11.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.688" endtime="20201110 08:37:11.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.325" endtime="20201110 08:37:11.714"></status>
</kw>
<msg timestamp="20201110 08:37:11.714" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.722" endtime="20201110 08:37:11.734"></status>
</kw>
<msg timestamp="20201110 08:37:11.735" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.720" endtime="20201110 08:37:11.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.737" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.736" endtime="20201110 08:37:11.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.738" endtime="20201110 08:37:11.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.718" endtime="20201110 08:37:11.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.716" endtime="20201110 08:37:11.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.747" endtime="20201110 08:37:12.031"></status>
</kw>
<msg timestamp="20201110 08:37:12.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.745" endtime="20201110 08:37:12.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.038" endtime="20201110 08:37:12.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.050" endtime="20201110 08:37:12.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.743" endtime="20201110 08:37:12.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.741" endtime="20201110 08:37:12.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.059" level="INFO">${RESULT} = [{'time': 0.019942208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.026999999999197e-06, 'source_diff': 3.026999999999197e-06}, {'time': 0.019952431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:12.055" endtime="20201110 08:37:12.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:12.074" level="INFO">${OVERHEAD} = {'diff': [3.026999999999197e-06, 3.05600000000128e-06, 3.026999999999197e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.040999...</msg>
<status status="PASS" starttime="20201110 08:37:12.060" endtime="20201110 08:37:12.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.078" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:12.077" endtime="20201110 08:37:12.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.080" level="INFO">VALUE: [3.026999999999197e-06, 3.05600000000128e-06, 3.026999999999197e-06, 3.01400000000257e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.012999999999627e-06, 2.9590000000002947e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 3.0559999999978105e-06]</msg>
<status status="PASS" starttime="20201110 08:37:12.079" endtime="20201110 08:37:12.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.074" endtime="20201110 08:37:12.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.083" endtime="20201110 08:37:12.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.087" endtime="20201110 08:37:12.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.085" endtime="20201110 08:37:12.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.082" endtime="20201110 08:37:12.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.715" endtime="20201110 08:37:12.107"></status>
</kw>
<msg timestamp="20201110 08:37:12.108" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.116" endtime="20201110 08:37:12.127"></status>
</kw>
<msg timestamp="20201110 08:37:12.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.114" endtime="20201110 08:37:12.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.130" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.129" endtime="20201110 08:37:12.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.131" endtime="20201110 08:37:12.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.111" endtime="20201110 08:37:12.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.109" endtime="20201110 08:37:12.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.140" endtime="20201110 08:37:12.425"></status>
</kw>
<msg timestamp="20201110 08:37:12.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.138" endtime="20201110 08:37:12.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019923542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019926583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.429" endtime="20201110 08:37:12.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.437" endtime="20201110 08:37:12.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.136" endtime="20201110 08:37:12.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.134" endtime="20201110 08:37:12.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.444" level="INFO">${RESULT} = [{'time': 0.019926583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.019935111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.440" endtime="20201110 08:37:12.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:12.457" level="INFO">${OVERHEAD} = {'diff': [3.0410000000022364e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3...</msg>
<status status="PASS" starttime="20201110 08:37:12.445" endtime="20201110 08:37:12.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.461" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:12.460" endtime="20201110 08:37:12.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.464" level="INFO">VALUE: [3.0410000000022364e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 2.972000000000391e-06, 3.0279999999986706e-06, 2.972000000000391e-06, 3.040999999998767e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.0270000000026664e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.012999999999627e-06, 3.0279999999986706e-06, 3.0699999999973804e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.0840000000004197e-06, 3.04200000000171e-06, 3.0270000000026664e-06]</msg>
<status status="PASS" starttime="20201110 08:37:12.462" endtime="20201110 08:37:12.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.458" endtime="20201110 08:37:12.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.467" endtime="20201110 08:37:12.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.470" endtime="20201110 08:37:12.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.469" endtime="20201110 08:37:12.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.465" endtime="20201110 08:37:12.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.108" endtime="20201110 08:37:12.491"></status>
</kw>
<msg timestamp="20201110 08:37:12.491" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.499" endtime="20201110 08:37:12.511"></status>
</kw>
<msg timestamp="20201110 08:37:12.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.497" endtime="20201110 08:37:12.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.514" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.513" endtime="20201110 08:37:12.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.515" endtime="20201110 08:37:12.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.495" endtime="20201110 08:37:12.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.493" endtime="20201110 08:37:12.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.524" endtime="20201110 08:37:12.812"></status>
</kw>
<msg timestamp="20201110 08:37:12.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.523" endtime="20201110 08:37:12.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019509583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.817" endtime="20201110 08:37:12.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.825" endtime="20201110 08:37:12.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.520" endtime="20201110 08:37:12.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.519" endtime="20201110 08:37:12.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.831" level="INFO">${RESULT} = [{'time': 0.019509583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0139999999991007e-06, 'source_diff': 3.0139999999991007e-06}, {'time': 0.019520458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.828" endtime="20201110 08:37:12.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:12.845" level="INFO">${OVERHEAD} = {'diff': [3.0139999999991007e-06, 3.0270000000026664e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 2.958000000000821e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.04200000000171e-06, 3.042...</msg>
<status status="PASS" starttime="20201110 08:37:12.832" endtime="20201110 08:37:12.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.849" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:12.848" endtime="20201110 08:37:12.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.851" level="INFO">VALUE: [3.0139999999991007e-06, 3.0270000000026664e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 2.958000000000821e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.097000000000516e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.02800000000214e-06, 2.999999999999531e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.1250000000031253e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.0139999999991007e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0410000000022364e-06]</msg>
<status status="PASS" starttime="20201110 08:37:12.850" endtime="20201110 08:37:12.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.846" endtime="20201110 08:37:12.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.855" endtime="20201110 08:37:12.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.858" endtime="20201110 08:37:12.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.857" endtime="20201110 08:37:12.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.853" endtime="20201110 08:37:12.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.492" endtime="20201110 08:37:12.879"></status>
</kw>
<msg timestamp="20201110 08:37:12.879" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.887" endtime="20201110 08:37:12.899"></status>
</kw>
<msg timestamp="20201110 08:37:12.899" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.885" endtime="20201110 08:37:12.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.902" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.900" endtime="20201110 08:37:12.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.903" endtime="20201110 08:37:12.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.882" endtime="20201110 08:37:12.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.881" endtime="20201110 08:37:12.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.911" endtime="20201110 08:37:13.197"></status>
</kw>
<msg timestamp="20201110 08:37:13.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.910" endtime="20201110 08:37:13.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019717153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019720194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.201" endtime="20201110 08:37:13.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.209" endtime="20201110 08:37:13.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.907" endtime="20201110 08:37:13.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.906" endtime="20201110 08:37:13.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.216" level="INFO">${RESULT} = [{'time': 0.019720194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.019735056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.212" endtime="20201110 08:37:13.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:13.229" level="INFO">${OVERHEAD} = {'diff': [3.040999999998767e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.054999999998337e-06, 2.9999999...</msg>
<status status="PASS" starttime="20201110 08:37:13.217" endtime="20201110 08:37:13.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.233" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:13.232" endtime="20201110 08:37:13.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.236" level="INFO">VALUE: [3.040999999998767e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.054999999998337e-06, 2.999999999999531e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.01400000000257e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201110 08:37:13.234" endtime="20201110 08:37:13.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.230" endtime="20201110 08:37:13.237"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.239" endtime="20201110 08:37:13.240"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.242" endtime="20201110 08:37:13.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.241" endtime="20201110 08:37:13.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.237" endtime="20201110 08:37:13.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.880" endtime="20201110 08:37:13.263"></status>
</kw>
<msg timestamp="20201110 08:37:13.263" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.271" endtime="20201110 08:37:13.283"></status>
</kw>
<msg timestamp="20201110 08:37:13.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.269" endtime="20201110 08:37:13.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.284" endtime="20201110 08:37:13.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.287" endtime="20201110 08:37:13.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.267" endtime="20201110 08:37:13.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.265" endtime="20201110 08:37:13.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.296" endtime="20201110 08:37:13.586"></status>
</kw>
<msg timestamp="20201110 08:37:13.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019467514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.294" endtime="20201110 08:37:13.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019464431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019467514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.590" endtime="20201110 08:37:13.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.599" endtime="20201110 08:37:13.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.292" endtime="20201110 08:37:13.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.290" endtime="20201110 08:37:13.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.605" level="INFO">${RESULT} = [{'time': 0.019467514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.019476347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.602" endtime="20201110 08:37:13.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:13.620" level="INFO">${OVERHEAD} = {'diff': [3.083000000000946e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.0...</msg>
<status status="PASS" starttime="20201110 08:37:13.606" endtime="20201110 08:37:13.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.624" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:13.623" endtime="20201110 08:37:13.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.626" level="INFO">VALUE: [3.083000000000946e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 2.999999999999531e-06, 2.999999999999531e-06, 3.0559999999978105e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.124999999999656e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.07000000000085e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.083000000000946e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.02800000000214e-06, 3.02800000000214e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.0139999999991007e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.097000000000516e-06, 3.0000000000030003e-06, 3.04200000000171e-06]</msg>
<status status="PASS" starttime="20201110 08:37:13.625" endtime="20201110 08:37:13.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.621" endtime="20201110 08:37:13.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.634" endtime="20201110 08:37:13.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.638" endtime="20201110 08:37:13.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.636" endtime="20201110 08:37:13.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.633" endtime="20201110 08:37:13.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.264" endtime="20201110 08:37:13.658"></status>
</kw>
<msg timestamp="20201110 08:37:13.659" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.666" endtime="20201110 08:37:13.677"></status>
</kw>
<msg timestamp="20201110 08:37:13.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.665" endtime="20201110 08:37:13.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.679" endtime="20201110 08:37:13.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.681" endtime="20201110 08:37:13.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.662" endtime="20201110 08:37:13.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.660" endtime="20201110 08:37:13.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.690" endtime="20201110 08:37:13.977"></status>
</kw>
<msg timestamp="20201110 08:37:13.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.689" endtime="20201110 08:37:13.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.981" endtime="20201110 08:37:13.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.990" endtime="20201110 08:37:13.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.686" endtime="20201110 08:37:13.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.684" endtime="20201110 08:37:13.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.996" level="INFO">${RESULT} = [{'time': 0.019363444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.040999999998767e-06, 'source_diff': 3.040999999998767e-06}, {'time': 0.019370792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:13.993" endtime="20201110 08:37:13.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:14.009" level="INFO">${OVERHEAD} = {'diff': [3.040999999998767e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.04...</msg>
<status status="PASS" starttime="20201110 08:37:13.997" endtime="20201110 08:37:14.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:14.013" endtime="20201110 08:37:14.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.016" level="INFO">VALUE: [3.040999999998767e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.0139999999991007e-06, 3.083000000000946e-06, 2.972000000000391e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 2.9590000000002947e-06, 2.985999999999961e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0969999999970466e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0840000000004197e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201110 08:37:14.015" endtime="20201110 08:37:14.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.010" endtime="20201110 08:37:14.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.020" endtime="20201110 08:37:14.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.023" endtime="20201110 08:37:14.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.021" endtime="20201110 08:37:14.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.018" endtime="20201110 08:37:14.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.659" endtime="20201110 08:37:14.044"></status>
</kw>
<msg timestamp="20201110 08:37:14.044" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.051" endtime="20201110 08:37:14.064"></status>
</kw>
<msg timestamp="20201110 08:37:14.064" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.050" endtime="20201110 08:37:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.067" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.065" endtime="20201110 08:37:14.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.068" endtime="20201110 08:37:14.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.047" endtime="20201110 08:37:14.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.046" endtime="20201110 08:37:14.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.077" endtime="20201110 08:37:14.364"></status>
</kw>
<msg timestamp="20201110 08:37:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.075" endtime="20201110 08:37:14.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019512069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.368" endtime="20201110 08:37:14.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.377" endtime="20201110 08:37:14.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.072" endtime="20201110 08:37:14.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.071" endtime="20201110 08:37:14.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.383" level="INFO">${RESULT} = [{'time': 0.019512069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.054999999998337e-06, 'source_diff': 3.054999999998337e-06}, {'time': 0.019527083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:14.380" endtime="20201110 08:37:14.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:14.400" level="INFO">${OVERHEAD} = {'diff': [3.054999999998337e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.0549...</msg>
<status status="PASS" starttime="20201110 08:37:14.384" endtime="20201110 08:37:14.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.407" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:14.406" endtime="20201110 08:37:14.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.412" level="INFO">VALUE: [3.054999999998337e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 2.999999999999531e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.01400000000257e-06, 3.054999999998337e-06, 3.01400000000257e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.0270000000026664e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 2.972000000000391e-06, 2.972000000000391e-06, 3.026999999999197e-06, 3.04200000000171e-06, 2.958000000000821e-06, 3.04200000000171e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 2.999999999999531e-06]</msg>
<status status="PASS" starttime="20201110 08:37:14.409" endtime="20201110 08:37:14.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.402" endtime="20201110 08:37:14.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.417" endtime="20201110 08:37:14.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.421" endtime="20201110 08:37:14.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.420" endtime="20201110 08:37:14.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.415" endtime="20201110 08:37:14.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.044" endtime="20201110 08:37:14.442"></status>
</kw>
<msg timestamp="20201110 08:37:14.442" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.451" endtime="20201110 08:37:14.462"></status>
</kw>
<msg timestamp="20201110 08:37:14.463" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.449" endtime="20201110 08:37:14.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.465" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.464" endtime="20201110 08:37:14.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.466" endtime="20201110 08:37:14.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.446" endtime="20201110 08:37:14.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.444" endtime="20201110 08:37:14.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.475" endtime="20201110 08:37:14.764"></status>
</kw>
<msg timestamp="20201110 08:37:14.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.474" endtime="20201110 08:37:14.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020408972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.768" endtime="20201110 08:37:14.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.777" endtime="20201110 08:37:14.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.471" endtime="20201110 08:37:14.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.469" endtime="20201110 08:37:14.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.783" level="INFO">${RESULT} = [{'time': 0.020408972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.020420514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:14.780" endtime="20201110 08:37:14.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:14.796" level="INFO">${OVERHEAD} = {'diff': [3.02800000000214e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.01400000000257e-06, 3.0419...</msg>
<status status="PASS" starttime="20201110 08:37:14.784" endtime="20201110 08:37:14.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:14.800" endtime="20201110 08:37:14.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.803" level="INFO">VALUE: [3.02800000000214e-06, 3.07000000000085e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.01400000000257e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.026999999999197e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.04200000000171e-06, 3.040999999998767e-06, 2.985999999999961e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0270000000026664e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 2.9869999999994346e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.026999999999197e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0699999999973804e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.040999999998767e-06]</msg>
<status status="PASS" starttime="20201110 08:37:14.802" endtime="20201110 08:37:14.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.797" endtime="20201110 08:37:14.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.807" endtime="20201110 08:37:14.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.810" endtime="20201110 08:37:14.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.809" endtime="20201110 08:37:14.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.805" endtime="20201110 08:37:14.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.443" endtime="20201110 08:37:14.831"></status>
</kw>
<msg timestamp="20201110 08:37:14.831" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.838" endtime="20201110 08:37:14.850"></status>
</kw>
<msg timestamp="20201110 08:37:14.851" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.837" endtime="20201110 08:37:14.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.853" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.852" endtime="20201110 08:37:14.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.854" endtime="20201110 08:37:14.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.834" endtime="20201110 08:37:14.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.833" endtime="20201110 08:37:14.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.863" endtime="20201110 08:37:15.152"></status>
</kw>
<msg timestamp="20201110 08:37:15.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019357333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.861" endtime="20201110 08:37:15.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019357333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019360319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.156" endtime="20201110 08:37:15.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.164" endtime="20201110 08:37:15.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.859" endtime="20201110 08:37:15.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.857" endtime="20201110 08:37:15.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.171" level="INFO">${RESULT} = [{'time': 0.019360319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.985999999999961e-06, 'source_diff': 2.985999999999961e-06}, {'time': 0.019369181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:15.168" endtime="20201110 08:37:15.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:15.186" level="INFO">${OVERHEAD} = {'diff': [2.985999999999961e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.012999999999627e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.04...</msg>
<status status="PASS" starttime="20201110 08:37:15.172" endtime="20201110 08:37:15.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.190" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:15.189" endtime="20201110 08:37:15.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.192" level="INFO">VALUE: [2.985999999999961e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.012999999999627e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.040999999998767e-06, 3.01400000000257e-06, 3.0979999999999897e-06, 3.0279999999986706e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 2.999999999999531e-06, 3.026999999999197e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0410000000022364e-06, 3.0270000000026664e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 2.985999999999961e-06, 2.9589999999968253e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0139999999991007e-06, 3.0279999999986706e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201110 08:37:15.191" endtime="20201110 08:37:15.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.187" endtime="20201110 08:37:15.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.196" endtime="20201110 08:37:15.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.199" endtime="20201110 08:37:15.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.198" endtime="20201110 08:37:15.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.194" endtime="20201110 08:37:15.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.831" endtime="20201110 08:37:15.220"></status>
</kw>
<msg timestamp="20201110 08:37:15.220" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.228" endtime="20201110 08:37:15.239"></status>
</kw>
<msg timestamp="20201110 08:37:15.239" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.226" endtime="20201110 08:37:15.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.242" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.240" endtime="20201110 08:37:15.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.243" endtime="20201110 08:37:15.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.224" endtime="20201110 08:37:15.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.222" endtime="20201110 08:37:15.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.252" endtime="20201110 08:37:15.540"></status>
</kw>
<msg timestamp="20201110 08:37:15.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.250" endtime="20201110 08:37:15.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019573625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.544" endtime="20201110 08:37:15.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.552" endtime="20201110 08:37:15.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.248" endtime="20201110 08:37:15.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.246" endtime="20201110 08:37:15.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.559" level="INFO">${RESULT} = [{'time': 0.019573625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.019584986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:15.556" endtime="20201110 08:37:15.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:15.572" level="INFO">${OVERHEAD} = {'diff': [3.02800000000214e-06, 2.985999999999961e-06, 3.0829999999974766e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.054999999998337e-06, 3.05599...</msg>
<status status="PASS" starttime="20201110 08:37:15.560" endtime="20201110 08:37:15.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.576" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:15.575" endtime="20201110 08:37:15.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.579" level="INFO">VALUE: [3.02800000000214e-06, 2.985999999999961e-06, 3.0829999999974766e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 2.985999999999961e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.026999999999197e-06, 3.0410000000022364e-06, 2.999999999999531e-06, 3.0699999999973804e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.054999999998337e-06, 3.0969999999970466e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.01400000000257e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0139999999991007e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.040999999998767e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.0279999999986706e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201110 08:37:15.577" endtime="20201110 08:37:15.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.573" endtime="20201110 08:37:15.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.582" endtime="20201110 08:37:15.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.586" endtime="20201110 08:37:15.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.584" endtime="20201110 08:37:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.581" endtime="20201110 08:37:15.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.221" endtime="20201110 08:37:15.606"></status>
</kw>
<msg timestamp="20201110 08:37:15.607" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.614" endtime="20201110 08:37:15.625"></status>
</kw>
<msg timestamp="20201110 08:37:15.626" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.612" endtime="20201110 08:37:15.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.627" endtime="20201110 08:37:15.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.629" endtime="20201110 08:37:15.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.610" endtime="20201110 08:37:15.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.608" endtime="20201110 08:37:15.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.638" endtime="20201110 08:37:15.926"></status>
</kw>
<msg timestamp="20201110 08:37:15.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.637" endtime="20201110 08:37:15.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019452806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.931" endtime="20201110 08:37:15.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.939" endtime="20201110 08:37:15.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.634" endtime="20201110 08:37:15.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.632" endtime="20201110 08:37:15.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.945" level="INFO">${RESULT} = [{'time': 0.019452806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0279999999986706e-06, 'source_diff': 3.0279999999986706e-06}, {'time': 0.019464819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:15.942" endtime="20201110 08:37:15.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:15.959" level="INFO">${OVERHEAD} = {'diff': [3.0279999999986706e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3...</msg>
<status status="PASS" starttime="20201110 08:37:15.946" endtime="20201110 08:37:15.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.963" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:15.962" endtime="20201110 08:37:15.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.965" level="INFO">VALUE: [3.0279999999986706e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.111000000000086e-06, 3.0270000000026664e-06, 3.012999999999627e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.097000000000516e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.040999999998767e-06, 3.026999999999197e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.0270000000026664e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0279999999986706e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.0279999999986706e-06, 3.026999999999197e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.0410000000022364e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.0410000000022364e-06, 3.04200000000171e-06, 2.985999999999961e-06]</msg>
<status status="PASS" starttime="20201110 08:37:15.964" endtime="20201110 08:37:15.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.960" endtime="20201110 08:37:15.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.969" endtime="20201110 08:37:15.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.972" endtime="20201110 08:37:15.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.971" endtime="20201110 08:37:15.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.967" endtime="20201110 08:37:15.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.607" endtime="20201110 08:37:15.993"></status>
</kw>
<msg timestamp="20201110 08:37:15.993" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.001" endtime="20201110 08:37:16.013"></status>
</kw>
<msg timestamp="20201110 08:37:16.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.999" endtime="20201110 08:37:16.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.016" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.014" endtime="20201110 08:37:16.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.017" endtime="20201110 08:37:16.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.997" endtime="20201110 08:37:16.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.995" endtime="20201110 08:37:16.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.026" endtime="20201110 08:37:16.312"></status>
</kw>
<msg timestamp="20201110 08:37:16.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.024" endtime="20201110 08:37:16.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.316" endtime="20201110 08:37:16.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.324" endtime="20201110 08:37:16.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.021" endtime="20201110 08:37:16.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.020" endtime="20201110 08:37:16.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.331" level="INFO">${RESULT} = [{'time': 0.019659903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0559999999978105e-06, 'source_diff': 3.0559999999978105e-06}, {'time': 0.01967325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:16.327" endtime="20201110 08:37:16.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:16.344" level="INFO">${OVERHEAD} = {'diff': [3.0559999999978105e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0270000000026664e-06, 3...</msg>
<status status="PASS" starttime="20201110 08:37:16.332" endtime="20201110 08:37:16.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.348" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:16.347" endtime="20201110 08:37:16.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.350" level="INFO">VALUE: [3.0559999999978105e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.0270000000026664e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.0279999999986706e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.012999999999627e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.026999999999197e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.0139999999991007e-06, 3.0419999999982406e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.040999999998767e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0000000000030003e-06, 3.0279999999986706e-06, 3.0139999999991007e-06, 3.040999999998767e-06, 3.0410000000022364e-06, 3.02800000000214e-06, 3.04200000000171e-06, 3.026999999999197e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201110 08:37:16.349" endtime="20201110 08:37:16.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.345" endtime="20201110 08:37:16.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.354" endtime="20201110 08:37:16.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.357" endtime="20201110 08:37:16.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.356" endtime="20201110 08:37:16.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.352" endtime="20201110 08:37:16.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.994" endtime="20201110 08:37:16.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.615" endtime="20201110 08:37:16.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.382" endtime="20201110 08:37:16.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.381" endtime="20201110 08:37:16.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.379" endtime="20201110 08:37:16.402"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:08.539" endtime="20201110 08:37:16.402" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.409" endtime="20201110 08:37:16.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.408" endtime="20201110 08:37:16.429"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.442" endtime="20201110 08:37:16.457"></status>
</kw>
<msg timestamp="20201110 08:37:16.457" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.440" endtime="20201110 08:37:16.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.460" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.458" endtime="20201110 08:37:16.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.463" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:16.461" endtime="20201110 08:37:16.463"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:16.438" endtime="20201110 08:37:16.464"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:16.435" endtime="20201110 08:37:16.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.434" endtime="20201110 08:37:16.465"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:16.469" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:16.468" endtime="20201110 08:37:16.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.466" endtime="20201110 08:37:16.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.433" endtime="20201110 08:37:16.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.433" endtime="20201110 08:37:16.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.471" endtime="20201110 08:37:16.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.431" endtime="20201110 08:37:16.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.430" endtime="20201110 08:37:16.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.406" endtime="20201110 08:37:16.474"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.482" endtime="20201110 08:37:16.503"></status>
</kw>
<msg timestamp="20201110 08:37:16.504" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.481" endtime="20201110 08:37:16.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.506" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.505" endtime="20201110 08:37:16.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.507" endtime="20201110 08:37:16.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.478" endtime="20201110 08:37:16.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.476" endtime="20201110 08:37:16.510"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.512" endtime="20201110 08:37:16.513"></status>
</kw>
<msg timestamp="20201110 08:37:16.514" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:16.510" endtime="20201110 08:37:16.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.518" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:16.517" endtime="20201110 08:37:16.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.520" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:16.519" endtime="20201110 08:37:16.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.515" endtime="20201110 08:37:16.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.525" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:16.524" endtime="20201110 08:37:16.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.527" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:16.526" endtime="20201110 08:37:16.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.521" endtime="20201110 08:37:16.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.534" endtime="20201110 08:37:16.824"></status>
</kw>
<msg timestamp="20201110 08:37:16.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066819514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.532" endtime="20201110 08:37:16.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066810472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066819514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.828" endtime="20201110 08:37:16.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.838" endtime="20201110 08:37:16.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.530" endtime="20201110 08:37:16.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.528" endtime="20201110 08:37:16.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.849" level="INFO">${RESULT} = [{'time': 0.066819514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.066843653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:16.845" endtime="20201110 08:37:16.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:16.862" level="INFO">${OVERHEAD} = {'diff': [9.042000000000772e-06, 1.0834000000001232e-05, 1.0833000000001758e-05, 1.0818999999995249e-05, 1.0791999999995583e-05, 1.084800000000774e-05, 1.0777000000003478e-05, 1.0819999999994723e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:16.850" endtime="20201110 08:37:16.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.867" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:16.866" endtime="20201110 08:37:16.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.870" level="INFO">VALUE: [9.042000000000772e-06, 1.0834000000001232e-05, 1.0833000000001758e-05, 1.0818999999995249e-05, 1.0791999999995583e-05, 1.084800000000774e-05, 1.0777000000003478e-05, 1.0819999999994723e-05, 1.0833000000001758e-05, 1.0846999999994389e-05, 1.0805000000002618e-05, 1.0805000000002618e-05, 1.0806000000002092e-05, 1.079099999999611e-05, 1.0806000000002092e-05, 1.0819000000009127e-05, 1.0818999999995249e-05, 1.0818999999995249e-05, 1.0763999999996443e-05, 1.080499999998874e-05, 1.0763999999996443e-05, 1.0805000000002618e-05, 1.0778000000002952e-05, 1.08200000000086e-05, 1.0791999999995583e-05, 1.076299999999697e-05, 1.079099999999611e-05, 1.0805000000002618e-05, 1.0806000000002092e-05, 1.0819999999994723e-05, 1.0806000000002092e-05, 1.0806000000002092e-05, 1.0806000000002092e-05, 1.0791999999995583e-05, 1.0805000000002618e-05, 1.079099999999611e-05, 1.0791999999995583e-05, 1.0833000000001758e-05, 1.0819999999994723e-05, 1.0778000000002952e-05, 1.0805000000002618e-05, 1.0806000000002092e-05, 1.0818999999995249e-05, 1.0806000000002092e-05, 1.0847000000008267e-05, 1.0819999999994723e-05, 1.0819000000009127e-05, 1.0805999999988214e-05, 1.0819000000009127e-05, 1.08200000000086e-05]</msg>
<status status="PASS" starttime="20201110 08:37:16.868" endtime="20201110 08:37:16.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.863" endtime="20201110 08:37:16.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.873" endtime="20201110 08:37:16.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.876" endtime="20201110 08:37:16.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.875" endtime="20201110 08:37:16.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.871" endtime="20201110 08:37:16.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.474" endtime="20201110 08:37:16.897"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:16.404" endtime="20201110 08:37:16.898" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.904" endtime="20201110 08:37:16.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.903" endtime="20201110 08:37:16.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.938" endtime="20201110 08:37:16.951"></status>
</kw>
<msg timestamp="20201110 08:37:16.952" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.935" endtime="20201110 08:37:16.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.953" endtime="20201110 08:37:16.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.957" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:16.955" endtime="20201110 08:37:16.957"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:16.933" endtime="20201110 08:37:16.958"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:16.931" endtime="20201110 08:37:16.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.929" endtime="20201110 08:37:16.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:16.963" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:16.962" endtime="20201110 08:37:16.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.960" endtime="20201110 08:37:16.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.929" endtime="20201110 08:37:16.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.928" endtime="20201110 08:37:16.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.964" endtime="20201110 08:37:16.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.927" endtime="20201110 08:37:16.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.925" endtime="20201110 08:37:16.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.901" endtime="20201110 08:37:16.967"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.976" endtime="20201110 08:37:17.047"></status>
</kw>
<msg timestamp="20201110 08:37:17.047" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.974" endtime="20201110 08:37:17.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.050" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.048" endtime="20201110 08:37:17.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.051" endtime="20201110 08:37:17.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.972" endtime="20201110 08:37:17.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.969" endtime="20201110 08:37:17.053"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.056" endtime="20201110 08:37:17.057"></status>
</kw>
<msg timestamp="20201110 08:37:17.058" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:17.054" endtime="20201110 08:37:17.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.062" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:17.061" endtime="20201110 08:37:17.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.064" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:17.063" endtime="20201110 08:37:17.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.058" endtime="20201110 08:37:17.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.068" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:17.067" endtime="20201110 08:37:17.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.070" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:17.069" endtime="20201110 08:37:17.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.065" endtime="20201110 08:37:17.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.078" endtime="20201110 08:37:17.376"></status>
</kw>
<msg timestamp="20201110 08:37:17.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064780778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064802292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.076" endtime="20201110 08:37:17.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064780778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064802292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.381" endtime="20201110 08:37:17.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.390" endtime="20201110 08:37:17.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.073" endtime="20201110 08:37:17.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.072" endtime="20201110 08:37:17.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.397" level="INFO">${RESULT} = [{'time': 0.064802292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1514000000000255e-05, 'source_diff': 2.1514000000000255e-05}, {'time': 0.065846931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:17.394" endtime="20201110 08:37:17.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:17.412" level="INFO">${OVERHEAD} = {'diff': [2.1514000000000255e-05, 3.404199999999802e-05, 3.3708999999992884e-05, 3.398599999999974e-05, 3.401399999999888e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.40...</msg>
<status status="PASS" starttime="20201110 08:37:17.398" endtime="20201110 08:37:17.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.419" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:17.417" endtime="20201110 08:37:17.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.422" level="INFO">VALUE: [2.1514000000000255e-05, 3.404199999999802e-05, 3.3708999999992884e-05, 3.398599999999974e-05, 3.401399999999888e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.373599999999255e-05, 3.401399999999888e-05, 3.398699999999921e-05, 3.401399999999888e-05, 3.374999999999906e-05, 3.394500000000744e-05, 3.369500000000025e-05, 3.4027000000005914e-05, 3.398699999999921e-05, 3.372199999999992e-05, 3.398599999999974e-05, 3.393100000000093e-05, 3.399999999999237e-05, 3.369400000000078e-05, 3.401399999999888e-05, 3.372199999999992e-05, 3.3776999999998725e-05, 3.370900000000676e-05, 3.372199999999992e-05, 3.399999999999237e-05, 3.370799999999341e-05, 3.399999999999237e-05, 3.376399999999169e-05, 3.363900000000197e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.400000000000625e-05, 3.3916999999994424e-05, 3.401399999999888e-05, 3.372299999999939e-05, 3.4012999999999405e-05, 3.370800000000729e-05, 3.372299999999939e-05, 3.399999999999237e-05, 3.399999999999237e-05, 3.370799999999341e-05, 3.369400000000078e-05, 3.398599999999974e-05, 3.369400000000078e-05, 3.370800000000729e-05, 3.401399999999888e-05, 3.365300000000848e-05, 3.4014000000012756e-05]</msg>
<status status="PASS" starttime="20201110 08:37:17.420" endtime="20201110 08:37:17.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.414" endtime="20201110 08:37:17.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.427" endtime="20201110 08:37:17.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.433" endtime="20201110 08:37:17.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.430" endtime="20201110 08:37:17.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.425" endtime="20201110 08:37:17.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.967" endtime="20201110 08:37:17.454"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:16.899" endtime="20201110 08:37:17.454" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.461" endtime="20201110 08:37:17.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.459" endtime="20201110 08:37:17.481"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.496" endtime="20201110 08:37:17.510"></status>
</kw>
<msg timestamp="20201110 08:37:17.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.493" endtime="20201110 08:37:17.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.511" endtime="20201110 08:37:17.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.516" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:17.514" endtime="20201110 08:37:17.516"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.491" endtime="20201110 08:37:17.517"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:17.488" endtime="20201110 08:37:17.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.487" endtime="20201110 08:37:17.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:17.521" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:17.520" endtime="20201110 08:37:17.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.518" endtime="20201110 08:37:17.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.486" endtime="20201110 08:37:17.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.485" endtime="20201110 08:37:17.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.523" endtime="20201110 08:37:17.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.484" endtime="20201110 08:37:17.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.482" endtime="20201110 08:37:17.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.458" endtime="20201110 08:37:17.526"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.535" endtime="20201110 08:37:17.724"></status>
</kw>
<msg timestamp="20201110 08:37:17.724" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.533" endtime="20201110 08:37:17.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.727" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.725" endtime="20201110 08:37:17.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.728" endtime="20201110 08:37:17.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.530" endtime="20201110 08:37:17.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.528" endtime="20201110 08:37:17.730"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.732" endtime="20201110 08:37:17.734"></status>
</kw>
<msg timestamp="20201110 08:37:17.735" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:17.731" endtime="20201110 08:37:17.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.738" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:17.737" endtime="20201110 08:37:17.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.740" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:17.740" endtime="20201110 08:37:17.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.735" endtime="20201110 08:37:17.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.747" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:17.745" endtime="20201110 08:37:17.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.750" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:17.748" endtime="20201110 08:37:17.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.742" endtime="20201110 08:37:17.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.763" endtime="20201110 08:37:18.079"></status>
</kw>
<msg timestamp="20201110 08:37:18.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067734375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067771486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.758" endtime="20201110 08:37:18.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067734375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067771486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.083" endtime="20201110 08:37:18.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.091" endtime="20201110 08:37:18.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.755" endtime="20201110 08:37:18.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.752" endtime="20201110 08:37:18.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.098" level="INFO">${RESULT} = [{'time': 0.067771486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.711100000000633e-05, 'source_diff': 3.711100000000633e-05}, {'time': 0.071204708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.095" endtime="20201110 08:37:18.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.112" level="INFO">${OVERHEAD} = {'diff': [3.711100000000633e-05, 6.033300000000963e-05, 6.033300000000963e-05, 6.034700000000226e-05, 6.0347999999987856e-05, 6.034700000000226e-05, 6.034699999998838e-05, 6.0305999999996085e-05, 6.03...</msg>
<status status="PASS" starttime="20201110 08:37:18.099" endtime="20201110 08:37:18.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.116" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:18.115" endtime="20201110 08:37:18.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.119" level="INFO">VALUE: [3.711100000000633e-05, 6.033300000000963e-05, 6.033300000000963e-05, 6.034700000000226e-05, 6.0347999999987856e-05, 6.034700000000226e-05, 6.034699999998838e-05, 6.0305999999996085e-05, 6.034700000000226e-05, 6.0333999999995225e-05, 6.034700000000226e-05, 6.0333999999995225e-05, 6.034700000000226e-05, 6.036200000000824e-05, 6.033299999999575e-05, 6.033299999999575e-05, 6.031899999998924e-05, 6.027699999999747e-05, 6.033299999999575e-05, 6.0333999999995225e-05, 6.033299999999575e-05, 6.03750000000014e-05, 6.034699999998838e-05, 6.031900000000312e-05, 6.031900000000312e-05, 6.036100000000877e-05, 6.0347999999987856e-05, 6.033300000002351e-05, 6.033299999999575e-05, 6.038899999999403e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.0264000000004314e-05, 6.040299999998666e-05, 6.038899999999403e-05, 6.031900000000312e-05, 6.034699999998838e-05, 6.040299999998666e-05, 6.036100000000877e-05, 6.036199999998049e-05, 6.033299999999575e-05, 6.0320000000002594e-05, 6.034700000001614e-05, 6.0304999999982734e-05, 6.034800000001561e-05, 6.0347999999987856e-05, 6.036099999998101e-05, 6.938900000000303e-05, 6.0347999999987856e-05, 6.031900000000312e-05]</msg>
<status status="PASS" starttime="20201110 08:37:18.117" endtime="20201110 08:37:18.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.112" endtime="20201110 08:37:18.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.122" endtime="20201110 08:37:18.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.125" endtime="20201110 08:37:18.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.124" endtime="20201110 08:37:18.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.120" endtime="20201110 08:37:18.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.527" endtime="20201110 08:37:18.146"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:17.456" endtime="20201110 08:37:18.146" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.153" endtime="20201110 08:37:18.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.151" endtime="20201110 08:37:18.173"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.187" endtime="20201110 08:37:18.200"></status>
</kw>
<msg timestamp="20201110 08:37:18.201" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.185" endtime="20201110 08:37:18.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.202" endtime="20201110 08:37:18.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.206" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:18.204" endtime="20201110 08:37:18.206"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:18.182" endtime="20201110 08:37:18.207"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:18.179" endtime="20201110 08:37:18.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.178" endtime="20201110 08:37:18.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:18.212" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:18.211" endtime="20201110 08:37:18.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.209" endtime="20201110 08:37:18.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.177" endtime="20201110 08:37:18.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.177" endtime="20201110 08:37:18.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.214" endtime="20201110 08:37:18.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.175" endtime="20201110 08:37:18.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.174" endtime="20201110 08:37:18.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.150" endtime="20201110 08:37:18.216"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.225" endtime="20201110 08:37:18.245"></status>
</kw>
<msg timestamp="20201110 08:37:18.246" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.223" endtime="20201110 08:37:18.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.248" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.247" endtime="20201110 08:37:18.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.249" endtime="20201110 08:37:18.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.220" endtime="20201110 08:37:18.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.218" endtime="20201110 08:37:18.252"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.254" endtime="20201110 08:37:18.256"></status>
</kw>
<msg timestamp="20201110 08:37:18.256" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:18.253" endtime="20201110 08:37:18.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.260" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:18.259" endtime="20201110 08:37:18.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.262" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:18.261" endtime="20201110 08:37:18.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.257" endtime="20201110 08:37:18.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.267" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:18.266" endtime="20201110 08:37:18.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.269" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:18.268" endtime="20201110 08:37:18.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.263" endtime="20201110 08:37:18.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.279" endtime="20201110 08:37:18.566"></status>
</kw>
<msg timestamp="20201110 08:37:18.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064697222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064706986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.278" endtime="20201110 08:37:18.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064697222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064706986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.570" endtime="20201110 08:37:18.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.578" endtime="20201110 08:37:18.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.272" endtime="20201110 08:37:18.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.270" endtime="20201110 08:37:18.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.586" level="INFO">${RESULT} = [{'time': 0.064706986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.763999999995443e-06, 'source_diff': 9.763999999995443e-06}, {'time': 0.064732278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:18.582" endtime="20201110 08:37:18.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.599" level="INFO">${OVERHEAD} = {'diff': [9.763999999995443e-06, 9.750000000002812e-06, 9.749999999988934e-06, 9.778000000001952e-06, 9.791999999994583e-06, 9.79200000000846e-06, 9.76400000000932e-06, 9.750000000002812e-06, 9.764000...</msg>
<status status="PASS" starttime="20201110 08:37:18.587" endtime="20201110 08:37:18.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.603" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:18.602" endtime="20201110 08:37:18.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.606" level="INFO">VALUE: [9.763999999995443e-06, 9.750000000002812e-06, 9.749999999988934e-06, 9.778000000001952e-06, 9.791999999994583e-06, 9.79200000000846e-06, 9.76400000000932e-06, 9.750000000002812e-06, 9.76400000000932e-06, 9.847000000007267e-06, 9.750000000002812e-06, 9.750000000002812e-06, 9.791999999994583e-06, 9.778000000001952e-06, 9.819000000008127e-06, 9.777000000002478e-06, 9.763999999995443e-06, 9.778000000001952e-06, 9.847000000007267e-06, 9.749999999988934e-06, 9.778000000001952e-06, 9.778000000001952e-06, 9.750000000002812e-06, 9.763999999995443e-06, 9.79200000000846e-06, 9.778000000001952e-06, 9.76400000000932e-06, 9.76299999999597e-06, 9.749999999988934e-06, 9.778000000001952e-06, 9.79200000000846e-06, 9.778000000001952e-06, 9.722000000003672e-06, 9.763999999995443e-06, 9.777999999988074e-06, 9.806000000001092e-06, 9.76299999999597e-06, 9.84800000000674e-06, 9.763999999995443e-06, 9.763999999995443e-06, 9.749999999988934e-06, 9.778000000001952e-06, 9.750000000002812e-06, 9.694999999990128e-06, 9.84800000000674e-06, 9.791999999994583e-06, 9.735999999996303e-06, 9.76299999999597e-06, 9.778000000001952e-06, 9.778000000001952e-06]</msg>
<status status="PASS" starttime="20201110 08:37:18.604" endtime="20201110 08:37:18.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.600" endtime="20201110 08:37:18.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.609" endtime="20201110 08:37:18.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.612" endtime="20201110 08:37:18.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.611" endtime="20201110 08:37:18.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.607" endtime="20201110 08:37:18.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.217" endtime="20201110 08:37:18.633"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:18.148" endtime="20201110 08:37:18.633" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.646" endtime="20201110 08:37:18.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.645" endtime="20201110 08:37:18.667"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.684" endtime="20201110 08:37:18.698"></status>
</kw>
<msg timestamp="20201110 08:37:18.699" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.682" endtime="20201110 08:37:18.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.700" endtime="20201110 08:37:18.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.707" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:18.704" endtime="20201110 08:37:18.707"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:18.678" endtime="20201110 08:37:18.708"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:18.674" endtime="20201110 08:37:18.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.673" endtime="20201110 08:37:18.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:18.713" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:18.712" endtime="20201110 08:37:18.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.710" endtime="20201110 08:37:18.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.672" endtime="20201110 08:37:18.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.671" endtime="20201110 08:37:18.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.715" endtime="20201110 08:37:18.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.670" endtime="20201110 08:37:18.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.667" endtime="20201110 08:37:18.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.643" endtime="20201110 08:37:18.717"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.726" endtime="20201110 08:37:18.798"></status>
</kw>
<msg timestamp="20201110 08:37:18.798" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.724" endtime="20201110 08:37:18.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.801" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.799" endtime="20201110 08:37:18.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.802" endtime="20201110 08:37:18.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.721" endtime="20201110 08:37:18.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.719" endtime="20201110 08:37:18.804"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.806" endtime="20201110 08:37:18.808"></status>
</kw>
<msg timestamp="20201110 08:37:18.808" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:18.805" endtime="20201110 08:37:18.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.812" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:18.811" endtime="20201110 08:37:18.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.814" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:18.814" endtime="20201110 08:37:18.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.809" endtime="20201110 08:37:18.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.821" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:18.819" endtime="20201110 08:37:18.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.823" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:18.822" endtime="20201110 08:37:18.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.816" endtime="20201110 08:37:18.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.831" endtime="20201110 08:37:19.123"></status>
</kw>
<msg timestamp="20201110 08:37:19.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073165319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073186042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.829" endtime="20201110 08:37:19.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073165319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073186042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.127" endtime="20201110 08:37:19.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.135" endtime="20201110 08:37:19.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.826" endtime="20201110 08:37:19.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.825" endtime="20201110 08:37:19.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.142" level="INFO">${RESULT} = [{'time': 0.073186042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.072300000000027e-05, 'source_diff': 2.072300000000027e-05}, {'time': 0.074231125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.139" endtime="20201110 08:37:19.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.155" level="INFO">${OVERHEAD} = {'diff': [2.072300000000027e-05, 2.0763999999992566e-05, 2.0792000000005584e-05, 2.086099999999702e-05, 2.0792000000005584e-05, 2.0777999999999075e-05, 2.0792000000005584e-05, 2.080499999999874e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:19.143" endtime="20201110 08:37:19.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.160" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:19.159" endtime="20201110 08:37:19.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.162" level="INFO">VALUE: [2.072300000000027e-05, 2.0763999999992566e-05, 2.0792000000005584e-05, 2.086099999999702e-05, 2.0792000000005584e-05, 2.0777999999999075e-05, 2.0792000000005584e-05, 2.080499999999874e-05, 2.0749999999999935e-05, 2.0792000000005584e-05, 2.0792000000005584e-05, 2.0777999999999075e-05, 2.079100000000611e-05, 2.0722000000000795e-05, 2.07769999999996e-05, 2.0805999999998215e-05, 2.0820000000004724e-05, 2.0791999999991706e-05, 2.0818999999991372e-05, 2.0805999999998215e-05, 2.0763999999992566e-05, 2.0792000000005584e-05, 2.0805999999998215e-05, 2.07769999999996e-05, 2.0736000000007304e-05, 2.0764000000006444e-05, 2.0749999999999935e-05, 2.0792000000005584e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0790999999992232e-05, 2.0820000000004724e-05, 2.084700000000439e-05, 2.0791999999991706e-05, 2.081900000000525e-05, 2.0819999999990846e-05, 2.0846999999990512e-05, 2.080499999999874e-05, 2.0806000000012093e-05, 2.0805999999998215e-05, 2.0777999999999075e-05, 2.07769999999996e-05, 2.079100000000611e-05, 2.0792000000005584e-05, 2.0777999999999075e-05, 2.0792000000005584e-05, 2.0820000000004724e-05, 2.0805999999998215e-05, 2.079100000000611e-05, 2.079100000000611e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.161" endtime="20201110 08:37:19.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.156" endtime="20201110 08:37:19.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.165" endtime="20201110 08:37:19.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.169" endtime="20201110 08:37:19.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.167" endtime="20201110 08:37:19.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.164" endtime="20201110 08:37:19.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.718" endtime="20201110 08:37:19.189"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:18.641" endtime="20201110 08:37:19.190" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.196" endtime="20201110 08:37:19.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.195" endtime="20201110 08:37:19.216"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.230" endtime="20201110 08:37:19.243"></status>
</kw>
<msg timestamp="20201110 08:37:19.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.227" endtime="20201110 08:37:19.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.245" endtime="20201110 08:37:19.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.249" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:19.247" endtime="20201110 08:37:19.250"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:19.225" endtime="20201110 08:37:19.250"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:19.223" endtime="20201110 08:37:19.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.221" endtime="20201110 08:37:19.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:19.255" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:19.254" endtime="20201110 08:37:19.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.252" endtime="20201110 08:37:19.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.221" endtime="20201110 08:37:19.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.220" endtime="20201110 08:37:19.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.257" endtime="20201110 08:37:19.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.219" endtime="20201110 08:37:19.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.217" endtime="20201110 08:37:19.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.194" endtime="20201110 08:37:19.259"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.268" endtime="20201110 08:37:19.459"></status>
</kw>
<msg timestamp="20201110 08:37:19.459" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.266" endtime="20201110 08:37:19.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.462" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.460" endtime="20201110 08:37:19.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.463" endtime="20201110 08:37:19.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.264" endtime="20201110 08:37:19.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.261" endtime="20201110 08:37:19.465"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.467" endtime="20201110 08:37:19.469"></status>
</kw>
<msg timestamp="20201110 08:37:19.469" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:19.466" endtime="20201110 08:37:19.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.473" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:19.472" endtime="20201110 08:37:19.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.476" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:19.475" endtime="20201110 08:37:19.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.470" endtime="20201110 08:37:19.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.480" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:19.479" endtime="20201110 08:37:19.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.482" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:19.481" endtime="20201110 08:37:19.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.477" endtime="20201110 08:37:19.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.496" endtime="20201110 08:37:19.803"></status>
</kw>
<msg timestamp="20201110 08:37:19.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066109347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066141611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.493" endtime="20201110 08:37:19.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066109347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066141611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.807" endtime="20201110 08:37:19.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.815" endtime="20201110 08:37:19.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.487" endtime="20201110 08:37:19.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.484" endtime="20201110 08:37:19.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.822" level="INFO">${RESULT} = [{'time': 0.066141611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.226400000000407e-05, 'source_diff': 3.226400000000407e-05}, {'time': 0.069584653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:19.818" endtime="20201110 08:37:19.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.835" level="INFO">${OVERHEAD} = {'diff': [3.226400000000407e-05, 3.226399999999019e-05, 3.2263000000004594e-05, 3.226400000000407e-05, 3.2250000000011436e-05, 3.223599999999105e-05, 3.224999999999756e-05, 3.2250000000011436e-05, 3.2...</msg>
<status status="PASS" starttime="20201110 08:37:19.823" endtime="20201110 08:37:19.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.839" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:19.838" endtime="20201110 08:37:19.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.843" level="INFO">VALUE: [3.226400000000407e-05, 3.226399999999019e-05, 3.2263000000004594e-05, 3.226400000000407e-05, 3.2250000000011436e-05, 3.223599999999105e-05, 3.224999999999756e-05, 3.2250000000011436e-05, 3.224999999999756e-05, 3.226399999999019e-05, 3.226399999999019e-05, 3.22779999999967e-05, 3.224999999999756e-05, 3.22779999999967e-05, 3.226399999999019e-05, 3.224999999999756e-05, 3.224999999999756e-05, 3.2263000000004594e-05, 3.2250000000011436e-05, 3.22779999999967e-05, 3.226400000000407e-05, 3.2250000000011436e-05, 3.226400000000407e-05, 3.2290999999989856e-05, 3.226400000000407e-05, 3.2236000000018805e-05, 3.226400000000407e-05, 3.21939999999854e-05, 3.226399999997631e-05, 3.224999999998368e-05, 3.2250000000011436e-05, 3.223599999999105e-05, 3.223599999999105e-05, 3.224999999998368e-05, 3.226400000000407e-05, 3.2236000000018805e-05, 3.224999999998368e-05, 3.2250000000011436e-05, 3.226400000000407e-05, 3.2250000000011436e-05, 3.223599999999105e-05, 3.2250000000011436e-05, 3.226400000000407e-05, 3.226400000000407e-05, 3.22779999999967e-05, 3.2250000000011436e-05, 3.2180999999992244e-05, 3.223599999999105e-05, 3.226400000000407e-05, 3.2306000000009716e-05]</msg>
<status status="PASS" starttime="20201110 08:37:19.841" endtime="20201110 08:37:19.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.836" endtime="20201110 08:37:19.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.846" endtime="20201110 08:37:19.847"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.849" endtime="20201110 08:37:19.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.848" endtime="20201110 08:37:19.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.844" endtime="20201110 08:37:19.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.260" endtime="20201110 08:37:19.870"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:19.191" endtime="20201110 08:37:19.870" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:58.099" endtime="20201110 08:37:19.877"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.948" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:19.957" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:21.187" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:19.946" endtime="20201110 08:37:21.188"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.195" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:21.191" endtime="20201110 08:37:21.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.944" endtime="20201110 08:37:21.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.208" endtime="20201110 08:37:21.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.204" endtime="20201110 08:37:21.397"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.411" endtime="20201110 08:37:21.427"></status>
</kw>
<msg timestamp="20201110 08:37:21.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.409" endtime="20201110 08:37:21.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.429" endtime="20201110 08:37:21.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.437" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:21.433" endtime="20201110 08:37:21.438"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.406" endtime="20201110 08:37:21.439"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.404" endtime="20201110 08:37:21.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.402" endtime="20201110 08:37:21.441"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:21.449" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:21.446" endtime="20201110 08:37:21.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.442" endtime="20201110 08:37:21.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.401" endtime="20201110 08:37:21.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.401" endtime="20201110 08:37:21.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.450" endtime="20201110 08:37:21.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.400" endtime="20201110 08:37:21.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.453" endtime="20201110 08:37:21.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.398" endtime="20201110 08:37:21.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.942" endtime="20201110 08:37:21.456"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.461" endtime="20201110 08:37:21.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.460" endtime="20201110 08:37:21.481"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.494" endtime="20201110 08:37:21.507"></status>
</kw>
<msg timestamp="20201110 08:37:21.508" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.492" endtime="20201110 08:37:21.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.509" endtime="20201110 08:37:21.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.513" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:21.511" endtime="20201110 08:37:21.514"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.490" endtime="20201110 08:37:21.514"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.488" endtime="20201110 08:37:21.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.486" endtime="20201110 08:37:21.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:21.519" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:21.519" endtime="20201110 08:37:21.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.516" endtime="20201110 08:37:21.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.486" endtime="20201110 08:37:21.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.485" endtime="20201110 08:37:21.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.521" endtime="20201110 08:37:21.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.484" endtime="20201110 08:37:21.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.482" endtime="20201110 08:37:21.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.459" endtime="20201110 08:37:21.524"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.534" endtime="20201110 08:37:21.550"></status>
</kw>
<msg timestamp="20201110 08:37:21.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.533" endtime="20201110 08:37:21.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.552" endtime="20201110 08:37:21.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.555" endtime="20201110 08:37:21.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.529" endtime="20201110 08:37:21.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.527" endtime="20201110 08:37:21.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.564" endtime="20201110 08:37:21.853"></status>
</kw>
<msg timestamp="20201110 08:37:21.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065600528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.563" endtime="20201110 08:37:21.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065577375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065600528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.858" endtime="20201110 08:37:21.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.866" endtime="20201110 08:37:21.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.560" endtime="20201110 08:37:21.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.558" endtime="20201110 08:37:21.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.873" level="INFO">${RESULT} = [{'time': 0.065600528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.315300000001186e-05, 'source_diff': 2.315300000001186e-05}, {'time': 0.065645542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:21.869" endtime="20201110 08:37:21.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:21.886" level="INFO">${ACCURACY} = {'diff': [2.315300000001186e-05, 2.313900000000535e-05, 2.3027999999994386e-05, 2.2806000000000215e-05, 2.312499999999884e-05, 2.320899999999626e-05, 2.269500000000313e-05, 2.268099999999662e-05, 2.32...</msg>
<status status="PASS" starttime="20201110 08:37:21.874" endtime="20201110 08:37:21.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.891" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:21.890" endtime="20201110 08:37:21.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.893" level="INFO">VALUE: [2.315300000001186e-05, 2.313900000000535e-05, 2.3027999999994386e-05, 2.2806000000000215e-05, 2.312499999999884e-05, 2.320899999999626e-05, 2.269500000000313e-05, 2.268099999999662e-05, 2.3207999999996787e-05, 2.2986000000002615e-05, 2.2958000000003476e-05, 2.3222000000003296e-05, 2.284700000000639e-05, 2.3194000000004156e-05, 2.334700000000689e-05, 2.254100000000092e-05, 2.3430000000004836e-05, 2.2722000000002796e-05, 2.281900000000725e-05, 2.2736000000009304e-05, 2.2542000000000395e-05, 2.2791999999993706e-05, 2.312499999999884e-05, 2.3222000000003296e-05, 2.3042000000000895e-05, 2.315299999999798e-05, 2.330500000000124e-05, 2.284700000000639e-05, 2.337500000000603e-05, 2.287500000000553e-05, 2.270899999999576e-05, 2.3056000000007404e-05, 2.295899999998907e-05, 2.305500000000793e-05, 2.295899999998907e-05, 2.336099999999952e-05, 2.255500000000743e-05, 2.312499999999884e-05, 2.3278000000001575e-05, 2.2554999999993552e-05, 2.330500000000124e-05, 2.312499999999884e-05, 2.336099999999952e-05, 2.2597999999998675e-05, 2.3333999999999855e-05, 2.3292000000008084e-05, 2.2958000000003476e-05, 2.340300000000517e-05, 2.287500000000553e-05, 2.3207999999996787e-05]</msg>
<status status="PASS" starttime="20201110 08:37:21.892" endtime="20201110 08:37:21.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.887" endtime="20201110 08:37:21.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.897" endtime="20201110 08:37:21.898"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.900" endtime="20201110 08:37:21.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.899" endtime="20201110 08:37:21.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.895" endtime="20201110 08:37:21.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.525" endtime="20201110 08:37:21.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.525" endtime="20201110 08:37:21.921"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.929" endtime="20201110 08:37:21.945"></status>
</kw>
<msg timestamp="20201110 08:37:21.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.928" endtime="20201110 08:37:21.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.947" endtime="20201110 08:37:21.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.949" endtime="20201110 08:37:21.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.925" endtime="20201110 08:37:21.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.923" endtime="20201110 08:37:21.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.958" endtime="20201110 08:37:22.244"></status>
</kw>
<msg timestamp="20201110 08:37:22.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.957" endtime="20201110 08:37:22.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022702792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022726194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.248" endtime="20201110 08:37:22.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.256" endtime="20201110 08:37:22.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.954" endtime="20201110 08:37:22.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.952" endtime="20201110 08:37:22.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.263" level="INFO">${RESULT} = [{'time': 0.022726194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3402000000002227e-05, 'source_diff': 2.3402000000002227e-05}, {'time': 0.022770194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.260" endtime="20201110 08:37:22.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.282" level="INFO">${ACCURACY} = {'diff': [2.3402000000002227e-05, 2.262500000000181e-05, 2.3208000000000256e-05, 2.30969999999997e-05, 2.2944000000000436e-05, 2.3263999999998536e-05, 2.3208000000000256e-05, 2.288900000000163e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:22.264" endtime="20201110 08:37:22.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.288" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.287" endtime="20201110 08:37:22.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.292" level="INFO">VALUE: [2.3402000000002227e-05, 2.262500000000181e-05, 2.3208000000000256e-05, 2.30969999999997e-05, 2.2944000000000436e-05, 2.3263999999998536e-05, 2.3208000000000256e-05, 2.288900000000163e-05, 2.255500000000049e-05, 2.2791999999997176e-05, 2.311099999999927e-05, 2.2542000000000395e-05, 2.3320000000000285e-05, 2.3485999999999646e-05, 2.3041999999997426e-05, 2.2958000000000006e-05, 2.3319999999996815e-05, 2.2707999999999756e-05, 2.270899999999923e-05, 2.3042000000000895e-05, 2.3292000000001145e-05, 2.312500000000231e-05, 2.261100000000224e-05, 2.3292000000001145e-05, 2.2971999999999576e-05, 2.287500000000206e-05, 2.2542000000000395e-05, 2.2958000000000006e-05, 2.337499999999909e-05, 2.2985999999999146e-05, 2.262499999999834e-05, 2.3221999999999826e-05, 2.256900000000006e-05, 2.3444000000000936e-05, 2.336099999999952e-05, 2.2971999999999576e-05, 2.3028000000001325e-05, 2.2944000000000436e-05, 2.3056000000000465e-05, 2.3472000000000076e-05, 2.2555999999999965e-05, 2.313899999999841e-05, 2.2583999999999105e-05, 2.3193999999997217e-05, 2.27229999999988e-05, 2.2542000000000395e-05, 2.3292000000001145e-05, 2.345899999999998e-05, 2.320899999999973e-05, 2.263900000000138e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.290" endtime="20201110 08:37:22.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.283" endtime="20201110 08:37:22.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.297" endtime="20201110 08:37:22.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.300" endtime="20201110 08:37:22.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.299" endtime="20201110 08:37:22.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.295" endtime="20201110 08:37:22.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.922" endtime="20201110 08:37:22.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.921" endtime="20201110 08:37:22.321"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.330" endtime="20201110 08:37:22.345"></status>
</kw>
<msg timestamp="20201110 08:37:22.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.328" endtime="20201110 08:37:22.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.347" endtime="20201110 08:37:22.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.350" endtime="20201110 08:37:22.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.326" endtime="20201110 08:37:22.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.324" endtime="20201110 08:37:22.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.360" endtime="20201110 08:37:22.647"></status>
</kw>
<msg timestamp="20201110 08:37:22.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.358" endtime="20201110 08:37:22.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.651" endtime="20201110 08:37:22.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.659" endtime="20201110 08:37:22.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.355" endtime="20201110 08:37:22.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.354" endtime="20201110 08:37:22.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.666" level="INFO">${RESULT} = [{'time': 0.021754361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3013999999998286e-05, 'source_diff': 2.3013999999998286e-05}, {'time': 0.021798347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:22.662" endtime="20201110 08:37:22.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:22.679" level="INFO">${ACCURACY} = {'diff': [2.3013999999998286e-05, 2.3194000000000686e-05, 2.29030000000012e-05, 2.312499999999884e-05, 2.3042000000000895e-05, 2.2971999999999576e-05, 2.34169999999978e-05, 2.3208000000000256e-05, 2.3...</msg>
<status status="PASS" starttime="20201110 08:37:22.667" endtime="20201110 08:37:22.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.684" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:22.683" endtime="20201110 08:37:22.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.686" level="INFO">VALUE: [2.3013999999998286e-05, 2.3194000000000686e-05, 2.29030000000012e-05, 2.312499999999884e-05, 2.3042000000000895e-05, 2.2971999999999576e-05, 2.34169999999978e-05, 2.3208000000000256e-05, 2.340299999999823e-05, 2.2971999999999576e-05, 2.336099999999952e-05, 2.286100000000249e-05, 2.319500000000016e-05, 2.2555999999999965e-05, 2.297300000000252e-05, 2.322300000000277e-05, 2.320899999999973e-05, 2.3236000000002865e-05, 2.319500000000016e-05, 2.308300000000013e-05, 2.2680000000000616e-05, 2.252700000000135e-05, 2.2944000000000436e-05, 2.2707999999999756e-05, 2.2526999999997882e-05, 2.3499999999999216e-05, 2.2707999999999756e-05, 2.2722000000002796e-05, 2.254100000000092e-05, 2.2985999999999146e-05, 2.2721999999999326e-05, 2.288899999999816e-05, 2.337500000000256e-05, 2.286099999999902e-05, 2.3193999999997217e-05, 2.337499999999909e-05, 2.3235999999999396e-05, 2.3070000000000035e-05, 2.3263999999998536e-05, 2.261099999999877e-05, 2.32229999999993e-05, 2.2902000000001727e-05, 2.2542000000000395e-05, 2.2958000000000006e-05, 2.319500000000016e-05, 2.3165999999998077e-05, 2.337499999999909e-05, 2.255500000000049e-05, 2.313900000000188e-05, 2.288900000000163e-05]</msg>
<status status="PASS" starttime="20201110 08:37:22.685" endtime="20201110 08:37:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.680" endtime="20201110 08:37:22.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.690" endtime="20201110 08:37:22.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.693" endtime="20201110 08:37:22.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.692" endtime="20201110 08:37:22.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.688" endtime="20201110 08:37:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.322" endtime="20201110 08:37:22.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.322" endtime="20201110 08:37:22.714"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.722" endtime="20201110 08:37:22.738"></status>
</kw>
<msg timestamp="20201110 08:37:22.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.721" endtime="20201110 08:37:22.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.739" endtime="20201110 08:37:22.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.742" endtime="20201110 08:37:22.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.718" endtime="20201110 08:37:22.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.716" endtime="20201110 08:37:22.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.752" endtime="20201110 08:37:23.037"></status>
</kw>
<msg timestamp="20201110 08:37:23.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.750" endtime="20201110 08:37:23.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.041" endtime="20201110 08:37:23.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.049" endtime="20201110 08:37:23.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.748" endtime="20201110 08:37:23.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.746" endtime="20201110 08:37:23.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.056" level="INFO">${RESULT} = [{'time': 0.021908375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.318100000000059e-05, 'source_diff': 2.318100000000059e-05}, {'time': 0.021950347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:23.053" endtime="20201110 08:37:23.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.071" level="INFO">${ACCURACY} = {'diff': [2.318100000000059e-05, 2.2971999999999576e-05, 2.3026999999998382e-05, 2.312500000000231e-05, 2.338899999999866e-05, 2.290299999999773e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:23.057" endtime="20201110 08:37:23.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.075" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.074" endtime="20201110 08:37:23.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.078" level="INFO">VALUE: [2.318100000000059e-05, 2.2971999999999576e-05, 2.3026999999998382e-05, 2.312500000000231e-05, 2.338899999999866e-05, 2.290299999999773e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.3041999999997426e-05, 2.2971999999999576e-05, 2.284699999999945e-05, 2.3250000000002435e-05, 2.287500000000206e-05, 2.3027999999997856e-05, 2.297300000000252e-05, 2.320899999999973e-05, 2.287500000000206e-05, 2.338899999999866e-05, 2.2999999999998716e-05, 2.2597999999998675e-05, 2.2499999999998216e-05, 2.2637999999998437e-05, 2.3387999999999187e-05, 2.287499999999859e-05, 2.343100000000084e-05, 2.2526999999997882e-05, 2.3290999999998202e-05, 2.2971999999999576e-05, 2.2999999999998716e-05, 2.2778000000001075e-05, 2.315299999999798e-05, 2.338900000000213e-05, 2.2555999999999965e-05, 2.30969999999997e-05, 2.2542000000000395e-05, 2.3221999999999826e-05, 2.3458000000000506e-05, 2.286099999999902e-05, 2.3221999999999826e-05, 2.3028000000001325e-05, 2.295900000000295e-05, 2.32229999999993e-05, 2.288899999999816e-05, 2.270899999999923e-05, 2.266699999999705e-05, 2.2750000000001935e-05, 2.287500000000206e-05, 2.306900000000056e-05, 2.3304999999997772e-05, 2.276300000000203e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.076" endtime="20201110 08:37:23.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.072" endtime="20201110 08:37:23.079"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.081" endtime="20201110 08:37:23.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.085" endtime="20201110 08:37:23.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.083" endtime="20201110 08:37:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.080" endtime="20201110 08:37:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.715" endtime="20201110 08:37:23.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.714" endtime="20201110 08:37:23.105"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.114" endtime="20201110 08:37:23.130"></status>
</kw>
<msg timestamp="20201110 08:37:23.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.112" endtime="20201110 08:37:23.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.132" endtime="20201110 08:37:23.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.134" endtime="20201110 08:37:23.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.110" endtime="20201110 08:37:23.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.108" endtime="20201110 08:37:23.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.144" endtime="20201110 08:37:23.429"></status>
</kw>
<msg timestamp="20201110 08:37:23.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.143" endtime="20201110 08:37:23.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.434" endtime="20201110 08:37:23.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.442" endtime="20201110 08:37:23.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.140" endtime="20201110 08:37:23.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.138" endtime="20201110 08:37:23.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.449" level="INFO">${RESULT} = [{'time': 0.021769972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2958000000000006e-05, 'source_diff': 2.2958000000000006e-05}, {'time': 0.021808986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:23.445" endtime="20201110 08:37:23.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.464" level="INFO">${ACCURACY} = {'diff': [2.2958000000000006e-05, 2.2707999999999756e-05, 2.287499999999859e-05, 2.336099999999952e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2528000000000825e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:23.450" endtime="20201110 08:37:23.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.469" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.468" endtime="20201110 08:37:23.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.474" level="INFO">VALUE: [2.2958000000000006e-05, 2.2707999999999756e-05, 2.287499999999859e-05, 2.336099999999952e-05, 2.2694000000000186e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.2528000000000825e-05, 2.311099999999927e-05, 2.3028000000001325e-05, 2.3292000000001145e-05, 2.312499999999884e-05, 2.320899999999973e-05, 2.337499999999909e-05, 2.258299999999963e-05, 2.2638000000001907e-05, 2.320899999999973e-05, 2.306900000000056e-05, 2.2638000000001907e-05, 2.252700000000135e-05, 2.3458000000000506e-05, 2.30969999999997e-05, 2.2958000000000006e-05, 2.2694000000000186e-05, 2.261099999999877e-05, 2.3458000000000506e-05, 2.305500000000099e-05, 2.313899999999841e-05, 2.2570000000003004e-05, 2.2958000000000006e-05, 2.3070000000000035e-05, 2.3292000000001145e-05, 2.2792000000000645e-05, 2.261100000000224e-05, 2.287499999999859e-05, 2.337499999999909e-05, 2.3042000000000895e-05, 2.313899999999841e-05, 2.287500000000206e-05, 2.2555999999999965e-05, 2.261099999999877e-05, 2.337499999999909e-05, 2.287499999999859e-05, 2.337499999999909e-05, 2.286099999999902e-05, 2.3221999999999826e-05, 2.256900000000006e-05, 2.3444000000000936e-05, 2.29030000000012e-05, 2.3208000000000256e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.472" endtime="20201110 08:37:23.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.465" endtime="20201110 08:37:23.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.478" endtime="20201110 08:37:23.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.484" endtime="20201110 08:37:23.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.481" endtime="20201110 08:37:23.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.477" endtime="20201110 08:37:23.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.106" endtime="20201110 08:37:23.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.106" endtime="20201110 08:37:23.505"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.514" endtime="20201110 08:37:23.530"></status>
</kw>
<msg timestamp="20201110 08:37:23.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.512" endtime="20201110 08:37:23.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.532" endtime="20201110 08:37:23.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.534" endtime="20201110 08:37:23.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.510" endtime="20201110 08:37:23.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.508" endtime="20201110 08:37:23.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.544" endtime="20201110 08:37:23.829"></status>
</kw>
<msg timestamp="20201110 08:37:23.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.543" endtime="20201110 08:37:23.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021954264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:23.834" endtime="20201110 08:37:23.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.842" endtime="20201110 08:37:23.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.540" endtime="20201110 08:37:23.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.538" endtime="20201110 08:37:23.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.849" level="INFO">${RESULT} = [{'time': 0.021954264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3292000000001145e-05, 'source_diff': 2.3292000000001145e-05}, {'time': 0.021992278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:23.845" endtime="20201110 08:37:23.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:23.862" level="INFO">${ACCURACY} = {'diff': [2.3292000000001145e-05, 2.3056000000000465e-05, 2.3277999999998106e-05, 2.315300000000145e-05, 2.3221999999999826e-05, 2.287500000000206e-05, 2.2736000000002365e-05, 2.288899999999816e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:23.850" endtime="20201110 08:37:23.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.866" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:23.865" endtime="20201110 08:37:23.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.869" level="INFO">VALUE: [2.3292000000001145e-05, 2.3056000000000465e-05, 2.3277999999998106e-05, 2.315300000000145e-05, 2.3221999999999826e-05, 2.287500000000206e-05, 2.2736000000002365e-05, 2.288899999999816e-05, 2.287499999999859e-05, 2.32229999999993e-05, 2.2542000000000395e-05, 2.261099999999877e-05, 2.256900000000006e-05, 2.2958000000000006e-05, 2.3028000000001325e-05, 2.312500000000231e-05, 2.304100000000142e-05, 2.312500000000231e-05, 2.304100000000142e-05, 2.3276999999998632e-05, 2.3290999999998202e-05, 2.3290999999998202e-05, 2.263899999999791e-05, 2.2735999999998896e-05, 2.3041999999997426e-05, 2.2778000000001075e-05, 2.2971999999999576e-05, 2.337500000000256e-05, 2.334699999999995e-05, 2.3098000000002644e-05, 2.3458000000000506e-05, 2.2721999999999326e-05, 2.2555999999999965e-05, 2.3277999999998106e-05, 2.262499999999834e-05, 2.3056000000000465e-05, 2.313899999999841e-05, 2.27229999999988e-05, 2.261099999999877e-05, 2.3290999999998202e-05, 2.295899999999948e-05, 2.3040999999997952e-05, 2.2971999999999576e-05, 2.3194000000000686e-05, 2.287499999999859e-05, 2.3278000000001575e-05, 2.2707999999999756e-05, 2.304100000000142e-05, 2.3235999999999396e-05, 2.280500000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.868" endtime="20201110 08:37:23.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.863" endtime="20201110 08:37:23.870"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.872" endtime="20201110 08:37:23.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.876" endtime="20201110 08:37:23.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.874" endtime="20201110 08:37:23.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.871" endtime="20201110 08:37:23.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.506" endtime="20201110 08:37:23.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.506" endtime="20201110 08:37:23.897"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.905" endtime="20201110 08:37:23.921"></status>
</kw>
<msg timestamp="20201110 08:37:23.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.904" endtime="20201110 08:37:23.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.922" endtime="20201110 08:37:23.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.925" endtime="20201110 08:37:23.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.901" endtime="20201110 08:37:23.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.899" endtime="20201110 08:37:23.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.935" endtime="20201110 08:37:24.221"></status>
</kw>
<msg timestamp="20201110 08:37:24.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:23.933" endtime="20201110 08:37:24.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.226" endtime="20201110 08:37:24.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.234" endtime="20201110 08:37:24.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.930" endtime="20201110 08:37:24.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.929" endtime="20201110 08:37:24.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.241" level="INFO">${RESULT} = [{'time': 0.021790389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.313900000000188e-05, 'source_diff': 2.313900000000188e-05}, {'time': 0.021837403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.237" endtime="20201110 08:37:24.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.254" level="INFO">${ACCURACY} = {'diff': [2.313900000000188e-05, 2.2777999999997606e-05, 2.2778000000001075e-05, 2.3070000000000035e-05, 2.288900000000163e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.254100000000092e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:24.242" endtime="20201110 08:37:24.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.259" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.258" endtime="20201110 08:37:24.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.261" level="INFO">VALUE: [2.313900000000188e-05, 2.2777999999997606e-05, 2.2778000000001075e-05, 2.3070000000000035e-05, 2.288900000000163e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.254100000000092e-05, 2.295900000000295e-05, 2.337499999999909e-05, 2.3166000000001546e-05, 2.304100000000142e-05, 2.311099999999927e-05, 2.258299999999963e-05, 2.312499999999884e-05, 2.338899999999866e-05, 2.336099999999952e-05, 2.2540999999997452e-05, 2.3290999999998202e-05, 2.2792000000000645e-05, 2.2958000000000006e-05, 2.288900000000163e-05, 2.3042000000000895e-05, 2.34030000000017e-05, 2.337500000000256e-05, 2.259700000000267e-05, 2.261099999999877e-05, 2.337499999999909e-05, 2.2555999999999965e-05, 2.2792000000000645e-05, 2.3292000000001145e-05, 2.2778000000001075e-05, 2.3306000000000715e-05, 2.2971999999999576e-05, 2.34030000000017e-05, 2.345899999999998e-05, 2.254100000000092e-05, 2.313899999999841e-05, 2.304100000000142e-05, 2.2776999999998132e-05, 2.312499999999884e-05, 2.305500000000099e-05, 2.311099999999927e-05, 2.3014000000001755e-05, 2.3291999999997676e-05, 2.2944000000000436e-05, 2.3042000000000895e-05, 2.3249999999998966e-05, 2.2583999999999105e-05, 2.3208000000000256e-05]</msg>
<status status="PASS" starttime="20201110 08:37:24.260" endtime="20201110 08:37:24.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.255" endtime="20201110 08:37:24.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.265" endtime="20201110 08:37:24.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.268" endtime="20201110 08:37:24.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.267" endtime="20201110 08:37:24.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.263" endtime="20201110 08:37:24.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.898" endtime="20201110 08:37:24.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.897" endtime="20201110 08:37:24.289"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.298" endtime="20201110 08:37:24.313"></status>
</kw>
<msg timestamp="20201110 08:37:24.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.297" endtime="20201110 08:37:24.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.315" endtime="20201110 08:37:24.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.317" endtime="20201110 08:37:24.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.294" endtime="20201110 08:37:24.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.292" endtime="20201110 08:37:24.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.328" endtime="20201110 08:37:24.614"></status>
</kw>
<msg timestamp="20201110 08:37:24.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.326" endtime="20201110 08:37:24.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022122819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022145931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.619" endtime="20201110 08:37:24.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.627" endtime="20201110 08:37:24.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.323" endtime="20201110 08:37:24.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.322" endtime="20201110 08:37:24.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.634" level="INFO">${RESULT} = [{'time': 0.022145931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3112000000002214e-05, 'source_diff': 2.3112000000002214e-05}, {'time': 0.022186944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:24.631" endtime="20201110 08:37:24.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:24.649" level="INFO">${ACCURACY} = {'diff': [2.3112000000002214e-05, 2.3276999999998632e-05, 2.3249999999998966e-05, 2.2790999999997702e-05, 2.3458000000000506e-05, 2.337499999999909e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2...</msg>
<status status="PASS" starttime="20201110 08:37:24.635" endtime="20201110 08:37:24.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.655" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:24.653" endtime="20201110 08:37:24.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.658" level="INFO">VALUE: [2.3112000000002214e-05, 2.3276999999998632e-05, 2.3249999999998966e-05, 2.2790999999997702e-05, 2.3458000000000506e-05, 2.337499999999909e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.3208000000000256e-05, 2.3042000000000895e-05, 2.3333999999999855e-05, 2.262500000000181e-05, 2.3042000000000895e-05, 2.2958000000000006e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.3042000000000895e-05, 2.3472000000000076e-05, 2.2958000000000006e-05, 2.3235999999999396e-05, 2.2930000000000866e-05, 2.262499999999834e-05, 2.2930000000000866e-05, 2.3042000000000895e-05, 2.295900000000295e-05, 2.305500000000099e-05, 2.330500000000124e-05, 2.2958000000000006e-05, 2.287500000000206e-05, 2.338899999999866e-05, 2.2721999999999326e-05, 2.3221999999999826e-05, 2.256900000000006e-05, 2.261099999999877e-05, 2.286100000000249e-05, 2.3165999999998077e-05, 2.3083999999999605e-05, 2.2958000000000006e-05, 2.3208000000000256e-05, 2.2707999999999756e-05, 2.2707999999999756e-05, 2.3208000000000256e-05, 2.29169999999973e-05, 2.3042000000000895e-05, 2.295899999999948e-05, 2.338899999999866e-05, 2.3250000000002435e-05, 2.2542000000000395e-05, 2.263900000000138e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201110 08:37:24.656" endtime="20201110 08:37:24.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.650" endtime="20201110 08:37:24.659"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.661" endtime="20201110 08:37:24.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.665" endtime="20201110 08:37:24.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.663" endtime="20201110 08:37:24.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.660" endtime="20201110 08:37:24.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.290" endtime="20201110 08:37:24.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.290" endtime="20201110 08:37:24.688"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.702" endtime="20201110 08:37:24.722"></status>
</kw>
<msg timestamp="20201110 08:37:24.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.701" endtime="20201110 08:37:24.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.724" endtime="20201110 08:37:24.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.726" endtime="20201110 08:37:24.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.697" endtime="20201110 08:37:24.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.694" endtime="20201110 08:37:24.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.737" endtime="20201110 08:37:25.050"></status>
</kw>
<msg timestamp="20201110 08:37:25.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033199528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033222681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:24.735" endtime="20201110 08:37:25.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033199528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033222681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.055" endtime="20201110 08:37:25.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.064" endtime="20201110 08:37:25.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.732" endtime="20201110 08:37:25.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.731" endtime="20201110 08:37:25.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.071" level="INFO">${RESULT} = [{'time': 0.033222681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.315299999999798e-05, 'source_diff': 2.315299999999798e-05}, {'time': 0.033259708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.067" endtime="20201110 08:37:25.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.084" level="INFO">${ACCURACY} = {'diff': [2.315299999999798e-05, 2.331900000000081e-05, 2.286099999999902e-05, 2.2694000000003656e-05, 2.2707999999996287e-05, 2.2527999999993886e-05, 2.2790999999994233e-05, 2.331900000000081e-05, 2....</msg>
<status status="PASS" starttime="20201110 08:37:25.072" endtime="20201110 08:37:25.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.089" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.088" endtime="20201110 08:37:25.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.092" level="INFO">VALUE: [2.315299999999798e-05, 2.331900000000081e-05, 2.286099999999902e-05, 2.2694000000003656e-05, 2.2707999999996287e-05, 2.2527999999993886e-05, 2.2790999999994233e-05, 2.331900000000081e-05, 2.3457999999997037e-05, 2.336099999999952e-05, 2.3042000000000895e-05, 2.3361999999998995e-05, 2.290299999999773e-05, 2.272300000000227e-05, 2.2472000000002545e-05, 2.311099999999927e-05, 2.33890000000056e-05, 2.338899999999866e-05, 2.319500000000363e-05, 2.258299999999963e-05, 2.3027999999994386e-05, 2.287500000000553e-05, 2.3042000000000895e-05, 2.2750000000001935e-05, 2.3514000000002255e-05, 2.3222000000003296e-05, 2.270899999999576e-05, 2.337499999999909e-05, 2.276300000000203e-05, 2.329100000000167e-05, 2.265300000000442e-05, 2.2693999999996717e-05, 2.294500000000338e-05, 2.258299999999963e-05, 2.3277999999994636e-05, 2.2972000000003046e-05, 2.344499999999694e-05, 2.3193999999997217e-05, 2.33890000000056e-05, 2.2542000000000395e-05, 2.313900000000535e-05, 2.3208000000003726e-05, 2.3222000000003296e-05, 2.334699999999995e-05, 2.3056000000000465e-05, 2.334699999999995e-05, 2.312499999999884e-05, 2.2542000000000395e-05, 2.2806000000000215e-05, 2.311099999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.090" endtime="20201110 08:37:25.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.085" endtime="20201110 08:37:25.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.096" endtime="20201110 08:37:25.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.100" endtime="20201110 08:37:25.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.098" endtime="20201110 08:37:25.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.094" endtime="20201110 08:37:25.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.689" endtime="20201110 08:37:25.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.689" endtime="20201110 08:37:25.120"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.129" endtime="20201110 08:37:25.146"></status>
</kw>
<msg timestamp="20201110 08:37:25.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.128" endtime="20201110 08:37:25.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.148" endtime="20201110 08:37:25.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.150" endtime="20201110 08:37:25.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.125" endtime="20201110 08:37:25.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.123" endtime="20201110 08:37:25.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.161" endtime="20201110 08:37:25.447"></status>
</kw>
<msg timestamp="20201110 08:37:25.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.159" endtime="20201110 08:37:25.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022370236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.451" endtime="20201110 08:37:25.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.459" endtime="20201110 08:37:25.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.156" endtime="20201110 08:37:25.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.155" endtime="20201110 08:37:25.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.468" level="INFO">${RESULT} = [{'time': 0.022393681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.344499999999694e-05, 'source_diff': 2.344499999999694e-05}, {'time': 0.022431681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.463" endtime="20201110 08:37:25.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.484" level="INFO">${ACCURACY} = {'diff': [2.344499999999694e-05, 2.288899999999816e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.2721999999999326e-05, 2.312499999999884e-05, 2.302700000000185e-05, 2.313899999999841e-05, 2.28...</msg>
<status status="PASS" starttime="20201110 08:37:25.469" endtime="20201110 08:37:25.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.491" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.489" endtime="20201110 08:37:25.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.494" level="INFO">VALUE: [2.344499999999694e-05, 2.288899999999816e-05, 2.3042000000000895e-05, 2.262499999999834e-05, 2.2721999999999326e-05, 2.312499999999884e-05, 2.302700000000185e-05, 2.313899999999841e-05, 2.286099999999902e-05, 2.252700000000135e-05, 2.2778000000001075e-05, 2.3278000000001575e-05, 2.3291999999997676e-05, 2.313900000000188e-05, 2.287499999999859e-05, 2.338900000000213e-05, 2.313899999999841e-05, 2.2985999999999146e-05, 2.313899999999841e-05, 2.3221999999999826e-05, 2.261099999999877e-05, 2.2958000000000006e-05, 2.269499999999966e-05, 2.27090000000027e-05, 2.2930000000000866e-05, 2.3041999999997426e-05, 2.2806000000000215e-05, 2.2806000000000215e-05, 2.3292000000001145e-05, 2.2777999999997606e-05, 2.293100000000034e-05, 2.255500000000049e-05, 2.3416000000001796e-05, 2.3221999999999826e-05, 2.305500000000099e-05, 2.306900000000056e-05, 2.338900000000213e-05, 2.2666000000001046e-05, 2.3221999999999826e-05, 2.3221999999999826e-05, 2.2721999999999326e-05, 2.337500000000256e-05, 2.338899999999866e-05, 2.3318999999997342e-05, 2.3208000000000256e-05, 2.3221999999999826e-05, 2.2555999999999965e-05, 2.262499999999834e-05, 2.319500000000016e-05, 2.2542000000000395e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.492" endtime="20201110 08:37:25.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.485" endtime="20201110 08:37:25.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.500" endtime="20201110 08:37:25.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.504" endtime="20201110 08:37:25.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.502" endtime="20201110 08:37:25.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.498" endtime="20201110 08:37:25.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.121" endtime="20201110 08:37:25.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.121" endtime="20201110 08:37:25.525"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.534" endtime="20201110 08:37:25.550"></status>
</kw>
<msg timestamp="20201110 08:37:25.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.532" endtime="20201110 08:37:25.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.554" endtime="20201110 08:37:25.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.559" endtime="20201110 08:37:25.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.530" endtime="20201110 08:37:25.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.528" endtime="20201110 08:37:25.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.580" endtime="20201110 08:37:25.875"></status>
</kw>
<msg timestamp="20201110 08:37:25.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.577" endtime="20201110 08:37:25.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022387847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.879" endtime="20201110 08:37:25.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.888" endtime="20201110 08:37:25.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.571" endtime="20201110 08:37:25.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.568" endtime="20201110 08:37:25.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.895" level="INFO">${RESULT} = [{'time': 0.022387847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.361099999999977e-05, 'source_diff': 2.361099999999977e-05}, {'time': 0.022434847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.891" endtime="20201110 08:37:25.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:25.908" level="INFO">${ACCURACY} = {'diff': [2.361099999999977e-05, 2.436100000000052e-05, 2.356900000000106e-05, 2.4306000000001715e-05, 2.3749999999999466e-05, 2.3597999999999675e-05, 2.387499999999959e-05, 2.413899999999941e-05, 2.3...</msg>
<status status="PASS" starttime="20201110 08:37:25.896" endtime="20201110 08:37:25.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.913" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:25.912" endtime="20201110 08:37:25.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.915" level="INFO">VALUE: [2.361099999999977e-05, 2.436100000000052e-05, 2.356900000000106e-05, 2.4306000000001715e-05, 2.3749999999999466e-05, 2.3597999999999675e-05, 2.387499999999959e-05, 2.413899999999941e-05, 2.3972000000000576e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.3541999999997926e-05, 2.37229999999998e-05, 2.4042000000001895e-05, 2.387499999999959e-05, 2.395900000000048e-05, 2.420900000000073e-05, 2.3556000000000965e-05, 2.387499999999959e-05, 2.3791999999998176e-05, 2.4388000000000187e-05, 2.412499999999984e-05, 2.4472000000001076e-05, 2.406900000000156e-05, 2.391700000000177e-05, 2.4276999999999632e-05, 2.4208000000001256e-05, 2.4207999999997787e-05, 2.388900000000263e-05, 2.412499999999984e-05, 2.4514000000003255e-05, 2.437500000000009e-05, 2.3972000000000576e-05, 2.4194000000001686e-05, 2.4041999999998426e-05, 2.438899999999966e-05, 2.4263999999999536e-05, 2.4070000000001035e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.437500000000009e-05, 2.362499999999934e-05, 2.3652000000002477e-05, 2.3792000000001645e-05, 2.369500000000066e-05, 2.4348000000000425e-05, 2.4304999999998772e-05, 2.3722000000000326e-05, 2.356900000000106e-05, 2.3540999999998452e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.914" endtime="20201110 08:37:25.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.909" endtime="20201110 08:37:25.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.919" endtime="20201110 08:37:25.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.922" endtime="20201110 08:37:25.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.921" endtime="20201110 08:37:25.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.917" endtime="20201110 08:37:25.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.526" endtime="20201110 08:37:25.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.526" endtime="20201110 08:37:25.943"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.952" endtime="20201110 08:37:25.969"></status>
</kw>
<msg timestamp="20201110 08:37:25.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.950" endtime="20201110 08:37:25.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.970" endtime="20201110 08:37:25.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.972" endtime="20201110 08:37:25.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.948" endtime="20201110 08:37:25.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.946" endtime="20201110 08:37:25.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.983" endtime="20201110 08:37:26.270"></status>
</kw>
<msg timestamp="20201110 08:37:26.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.981" endtime="20201110 08:37:26.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022296236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022320847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.274" endtime="20201110 08:37:26.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.283" endtime="20201110 08:37:26.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.979" endtime="20201110 08:37:26.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.977" endtime="20201110 08:37:26.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.289" level="INFO">${RESULT} = [{'time': 0.022320847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.461100000000077e-05, 'source_diff': 2.461100000000077e-05}, {'time': 0.022366833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:26.286" endtime="20201110 08:37:26.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.304" level="INFO">${ACCURACY} = {'diff': [2.461100000000077e-05, 2.537499999999762e-05, 2.512500000000084e-05, 2.5486000000001646e-05, 2.49169999999993e-05, 2.512499999999737e-05, 2.4791999999999176e-05, 2.536100000000152e-05, 2.527...</msg>
<status status="PASS" starttime="20201110 08:37:26.290" endtime="20201110 08:37:26.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.308" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.307" endtime="20201110 08:37:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.311" level="INFO">VALUE: [2.461100000000077e-05, 2.537499999999762e-05, 2.512500000000084e-05, 2.5486000000001646e-05, 2.49169999999993e-05, 2.512499999999737e-05, 2.4791999999999176e-05, 2.536100000000152e-05, 2.5278000000000106e-05, 2.537500000000109e-05, 2.5179999999999647e-05, 2.5472000000002076e-05, 2.4542000000002395e-05, 2.519500000000216e-05, 2.4556000000001965e-05, 2.4764000000000036e-05, 2.520899999999826e-05, 2.469500000000166e-05, 2.5361999999997525e-05, 2.512500000000084e-05, 2.5138000000000937e-05, 2.5443999999999467e-05, 2.4722000000001326e-05, 2.4540999999999452e-05, 2.5207999999998787e-05, 2.4568999999998592e-05, 2.5235999999997927e-05, 2.4540999999999452e-05, 2.5027999999999856e-05, 2.4541999999998926e-05, 2.537499999999762e-05, 2.5348000000001425e-05, 2.4556000000001965e-05, 2.5014000000000286e-05, 2.537500000000109e-05, 2.4958000000002006e-05, 2.5207999999998787e-05, 2.466700000000252e-05, 2.47230000000008e-05, 2.488900000000016e-05, 2.5319999999998816e-05, 2.5388000000001187e-05, 2.5166000000000077e-05, 2.5528000000000356e-05, 2.5054999999999522e-05, 2.512500000000084e-05, 2.490299999999973e-05, 2.520899999999826e-05, 2.513899999999694e-05, 2.4764000000000036e-05]</msg>
<status status="PASS" starttime="20201110 08:37:26.310" endtime="20201110 08:37:26.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.305" endtime="20201110 08:37:26.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.315" endtime="20201110 08:37:26.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.318" endtime="20201110 08:37:26.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.317" endtime="20201110 08:37:26.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.313" endtime="20201110 08:37:26.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.944" endtime="20201110 08:37:26.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.944" endtime="20201110 08:37:26.339"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.347" endtime="20201110 08:37:26.364"></status>
</kw>
<msg timestamp="20201110 08:37:26.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.346" endtime="20201110 08:37:26.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.365" endtime="20201110 08:37:26.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.368" endtime="20201110 08:37:26.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.343" endtime="20201110 08:37:26.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.341" endtime="20201110 08:37:26.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.378" endtime="20201110 08:37:26.664"></status>
</kw>
<msg timestamp="20201110 08:37:26.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.376" endtime="20201110 08:37:26.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022453736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.668" endtime="20201110 08:37:26.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.677" endtime="20201110 08:37:26.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.374" endtime="20201110 08:37:26.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.372" endtime="20201110 08:37:26.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.684" level="INFO">${RESULT} = [{'time': 0.022453736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6041999999996956e-05, 'source_diff': 2.6041999999996956e-05}, {'time': 0.022494736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:26.680" endtime="20201110 08:37:26.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:26.697" level="INFO">${ACCURACY} = {'diff': [2.6041999999996956e-05, 2.6207999999999787e-05, 2.5818999999999842e-05, 2.5792000000000176e-05, 2.590300000000073e-05, 2.6471999999999607e-05, 2.5707999999999287e-05, 2.6374999999998622e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:26.685" endtime="20201110 08:37:26.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.702" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:26.701" endtime="20201110 08:37:26.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.704" level="INFO">VALUE: [2.6041999999996956e-05, 2.6207999999999787e-05, 2.5818999999999842e-05, 2.5792000000000176e-05, 2.590300000000073e-05, 2.6471999999999607e-05, 2.5707999999999287e-05, 2.6374999999998622e-05, 2.5792000000000176e-05, 2.620899999999926e-05, 2.6333999999999386e-05, 2.595900000000248e-05, 2.570900000000223e-05, 2.636100000000252e-05, 2.6290999999997733e-05, 2.638900000000166e-05, 2.6319000000000342e-05, 2.5665999999997108e-05, 2.6041000000000952e-05, 2.6055999999999996e-05, 2.6374999999998622e-05, 2.6124999999998372e-05, 2.584700000000245e-05, 2.6374999999998622e-05, 2.6471999999999607e-05, 2.6041999999996956e-05, 2.6360999999999052e-05, 2.569499999999919e-05, 2.6443999999996998e-05, 2.5707999999999287e-05, 2.5541999999999926e-05, 2.5721999999998857e-05, 2.569499999999919e-05, 2.5735999999998427e-05, 2.5610999999998302e-05, 2.6069999999999566e-05, 2.5555999999999496e-05, 2.5874999999998122e-05, 2.6374999999998622e-05, 2.5541999999999926e-05, 2.5736000000001896e-05, 2.5499999999997747e-05, 2.5846999999998982e-05, 2.5860999999998552e-05, 2.6041000000000952e-05, 2.6194000000000217e-05, 2.5985999999998677e-05, 2.588900000000116e-05, 2.5805000000000272e-05, 2.6374999999998622e-05]</msg>
<status status="PASS" starttime="20201110 08:37:26.703" endtime="20201110 08:37:26.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.698" endtime="20201110 08:37:26.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.708" endtime="20201110 08:37:26.709"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.711" endtime="20201110 08:37:26.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.710" endtime="20201110 08:37:26.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.706" endtime="20201110 08:37:26.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.340" endtime="20201110 08:37:26.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.339" endtime="20201110 08:37:26.732"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.741" endtime="20201110 08:37:26.757"></status>
</kw>
<msg timestamp="20201110 08:37:26.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.739" endtime="20201110 08:37:26.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:26.759" endtime="20201110 08:37:26.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.761" endtime="20201110 08:37:26.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.737" endtime="20201110 08:37:26.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.735" endtime="20201110 08:37:26.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.771" endtime="20201110 08:37:27.057"></status>
</kw>
<msg timestamp="20201110 08:37:27.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:26.770" endtime="20201110 08:37:27.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022166486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022193972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.061" endtime="20201110 08:37:27.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.070" endtime="20201110 08:37:27.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.767" endtime="20201110 08:37:27.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.765" endtime="20201110 08:37:27.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.077" level="INFO">${RESULT} = [{'time': 0.022193972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.022242917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.073" endtime="20201110 08:37:27.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.090" level="INFO">${ACCURACY} = {'diff': [2.7486000000000177e-05, 2.738900000000266e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.6679999999997678e-05, 2.7124999999999372e-05, 2.7304999999998303e-05, 2.6721999999999857e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:27.078" endtime="20201110 08:37:27.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.095" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.094" endtime="20201110 08:37:27.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.097" level="INFO">VALUE: [2.7486000000000177e-05, 2.738900000000266e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.6679999999997678e-05, 2.7124999999999372e-05, 2.7304999999998303e-05, 2.6721999999999857e-05, 2.6721999999999857e-05, 2.6526999999998413e-05, 2.7194000000001217e-05, 2.6555000000001022e-05, 2.7054999999998053e-05, 2.6528000000001356e-05, 2.7041999999997957e-05, 2.686100000000302e-05, 2.6806000000000746e-05, 2.6985999999999677e-05, 2.6708000000000287e-05, 2.7056000000000996e-05, 2.7208000000000787e-05, 2.6556000000000496e-05, 2.670900000000323e-05, 2.6596999999999732e-05, 2.740299999999876e-05, 2.7306000000001246e-05, 2.7194000000001217e-05, 2.6735999999999427e-05, 2.7263999999999067e-05, 2.7387999999999718e-05, 2.6790999999998233e-05, 2.7040999999998483e-05, 2.7207999999997318e-05, 2.7040999999998483e-05, 2.7041000000001952e-05, 2.6778000000001606e-05, 2.6721999999999857e-05, 2.7041000000001952e-05, 2.7042000000001426e-05, 2.7028000000001856e-05, 2.6721999999999857e-05, 2.6694000000000717e-05, 2.7056000000000996e-05, 2.719500000000069e-05, 2.7388999999999192e-05, 2.695900000000001e-05, 2.6806000000000746e-05, 2.663900000000191e-05, 2.745900000000051e-05, 2.7249999999999497e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.096" endtime="20201110 08:37:27.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.091" endtime="20201110 08:37:27.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.101" endtime="20201110 08:37:27.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.105" endtime="20201110 08:37:27.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.103" endtime="20201110 08:37:27.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.099" endtime="20201110 08:37:27.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.733" endtime="20201110 08:37:27.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.732" endtime="20201110 08:37:27.125"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.134" endtime="20201110 08:37:27.151"></status>
</kw>
<msg timestamp="20201110 08:37:27.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.133" endtime="20201110 08:37:27.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.152" endtime="20201110 08:37:27.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.155" endtime="20201110 08:37:27.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.130" endtime="20201110 08:37:27.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.128" endtime="20201110 08:37:27.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.165" endtime="20201110 08:37:27.450"></status>
</kw>
<msg timestamp="20201110 08:37:27.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.163" endtime="20201110 08:37:27.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022724389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.454" endtime="20201110 08:37:27.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.463" endtime="20201110 08:37:27.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.161" endtime="20201110 08:37:27.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.159" endtime="20201110 08:37:27.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.470" level="INFO">${RESULT} = [{'time': 0.022752028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7638999999999442e-05, 'source_diff': 2.7638999999999442e-05}, {'time': 0.022796, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:27.466" endtime="20201110 08:37:27.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.483" level="INFO">${ACCURACY} = {'diff': [2.7638999999999442e-05, 2.7556000000001496e-05, 2.7875000000000122e-05, 2.8125000000000372e-05, 2.8193999999998748e-05, 2.7624999999999872e-05, 2.7584000000000636e-05, 2.7792000000002176e-05...</msg>
<status status="PASS" starttime="20201110 08:37:27.470" endtime="20201110 08:37:27.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.488" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.487" endtime="20201110 08:37:27.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.490" level="INFO">VALUE: [2.7638999999999442e-05, 2.7556000000001496e-05, 2.7875000000000122e-05, 2.8125000000000372e-05, 2.8193999999998748e-05, 2.7624999999999872e-05, 2.7584000000000636e-05, 2.7792000000002176e-05, 2.8027999999999387e-05, 2.8389000000000192e-05, 2.8138999999999942e-05, 2.8000000000000247e-05, 2.822300000000083e-05, 2.770900000000076e-05, 2.8027999999999387e-05, 2.7847000000000982e-05, 2.7790999999999233e-05, 2.8222000000001357e-05, 2.7875000000000122e-05, 2.7944000000001967e-05, 2.7735999999996958e-05, 2.8027999999999387e-05, 2.8375000000000622e-05, 2.7792000000002176e-05, 2.841699999999933e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8277999999999637e-05, 2.8222000000001357e-05, 2.7638999999999442e-05, 2.7875000000000122e-05, 2.8125000000000372e-05, 2.795900000000101e-05, 2.8334000000001386e-05, 2.795900000000101e-05, 2.8250000000000497e-05, 2.7846999999997513e-05, 2.7791999999998707e-05, 2.7568999999998123e-05, 2.8374999999997152e-05, 2.7776999999999663e-05, 2.7860999999997083e-05, 2.8290999999999733e-05, 2.7888999999999692e-05, 2.7971999999997638e-05, 2.7985999999997208e-05, 2.768100000000162e-05, 2.8027999999999387e-05, 2.8041999999998957e-05, 2.8375000000000622e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.489" endtime="20201110 08:37:27.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.484" endtime="20201110 08:37:27.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.494" endtime="20201110 08:37:27.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.497" endtime="20201110 08:37:27.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.496" endtime="20201110 08:37:27.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.492" endtime="20201110 08:37:27.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.126" endtime="20201110 08:37:27.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.126" endtime="20201110 08:37:27.519"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.532" endtime="20201110 08:37:27.548"></status>
</kw>
<msg timestamp="20201110 08:37:27.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.530" endtime="20201110 08:37:27.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.550" endtime="20201110 08:37:27.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.552" endtime="20201110 08:37:27.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.526" endtime="20201110 08:37:27.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.523" endtime="20201110 08:37:27.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.563" endtime="20201110 08:37:27.849"></status>
</kw>
<msg timestamp="20201110 08:37:27.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027072417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027101514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.561" endtime="20201110 08:37:27.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027072417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027101514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.853" endtime="20201110 08:37:27.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.862" endtime="20201110 08:37:27.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.559" endtime="20201110 08:37:27.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.557" endtime="20201110 08:37:27.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.868" level="INFO">${RESULT} = [{'time': 0.027101514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.027144528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:27.865" endtime="20201110 08:37:27.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:27.883" level="INFO">${ACCURACY} = {'diff': [2.9096999999998763e-05, 2.8722000000001857e-05, 2.8861000000001552e-05, 2.8583999999998166e-05, 2.9111000000001802e-05, 2.872300000000133e-05, 2.9389000000001192e-05, 2.8804999999999803e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:27.869" endtime="20201110 08:37:27.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.888" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:27.887" endtime="20201110 08:37:27.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.890" level="INFO">VALUE: [2.9096999999998763e-05, 2.8722000000001857e-05, 2.8861000000001552e-05, 2.8583999999998166e-05, 2.9111000000001802e-05, 2.872300000000133e-05, 2.9389000000001192e-05, 2.8804999999999803e-05, 2.8722000000001857e-05, 2.9332999999999443e-05, 2.8624999999997403e-05, 2.8611000000001302e-05, 2.8943999999999498e-05, 2.8707999999998818e-05, 2.9374999999998153e-05, 2.8791999999999707e-05, 2.9264000000001067e-05, 2.8707999999998818e-05, 2.9041999999999957e-05, 2.8707999999998818e-05, 2.9333000000002912e-05, 2.8639000000000442e-05, 2.9417000000000332e-05, 2.9110999999998333e-05, 2.9443999999999998e-05, 2.9499999999998278e-05, 2.872299999999786e-05, 2.8736000000001427e-05, 2.9236000000001927e-05, 2.8875000000001122e-05, 2.9112000000001276e-05, 2.9305000000000303e-05, 2.8707999999998818e-05, 2.9346999999999013e-05, 2.8611000000001302e-05, 2.9457999999999568e-05, 2.9207999999999318e-05, 2.9055000000000053e-05, 2.8889000000000692e-05, 2.9082999999999193e-05, 2.9457999999999568e-05, 2.8679999999999678e-05, 2.8903000000000262e-05, 2.9278000000000637e-05, 2.8542000000002926e-05, 2.9374999999998153e-05, 2.9110999999998333e-05, 2.8972000000002107e-05, 2.8820000000002316e-05, 2.8972000000002107e-05]</msg>
<status status="PASS" starttime="20201110 08:37:27.889" endtime="20201110 08:37:27.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.884" endtime="20201110 08:37:27.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.894" endtime="20201110 08:37:27.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.897" endtime="20201110 08:37:27.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.896" endtime="20201110 08:37:27.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.892" endtime="20201110 08:37:27.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.520" endtime="20201110 08:37:27.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.519" endtime="20201110 08:37:27.918"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.927" endtime="20201110 08:37:27.944"></status>
</kw>
<msg timestamp="20201110 08:37:27.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.925" endtime="20201110 08:37:27.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.945" endtime="20201110 08:37:27.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.948" endtime="20201110 08:37:27.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.923" endtime="20201110 08:37:27.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.921" endtime="20201110 08:37:27.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.958" endtime="20201110 08:37:28.244"></status>
</kw>
<msg timestamp="20201110 08:37:28.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.956" endtime="20201110 08:37:28.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.248" endtime="20201110 08:37:28.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.257" endtime="20201110 08:37:28.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.954" endtime="20201110 08:37:28.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.952" endtime="20201110 08:37:28.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.263" level="INFO">${RESULT} = [{'time': 0.022315361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9902999999997792e-05, 'source_diff': 2.9902999999997792e-05}, {'time': 0.022363361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:28.260" endtime="20201110 08:37:28.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.277" level="INFO">${ACCURACY} = {'diff': [2.9902999999997792e-05, 2.9707999999999818e-05, 3.0180000000001178e-05, 3.0208000000000318e-05, 2.9556000000000027e-05, 3.0320000000000347e-05, 3.0472000000000138e-05, 3.0221999999999888e-05...</msg>
<status status="PASS" starttime="20201110 08:37:28.264" endtime="20201110 08:37:28.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.282" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.281" endtime="20201110 08:37:28.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.284" level="INFO">VALUE: [2.9902999999997792e-05, 2.9707999999999818e-05, 3.0180000000001178e-05, 3.0208000000000318e-05, 2.9556000000000027e-05, 3.0320000000000347e-05, 3.0472000000000138e-05, 3.0221999999999888e-05, 2.973699999999843e-05, 3.0360999999999583e-05, 2.9999999999998778e-05, 2.9611000000002302e-05, 2.970899999999929e-05, 3.0055000000001053e-05, 3.038799999999925e-05, 3.0138999999998473e-05, 2.9582999999999693e-05, 2.972299999999886e-05, 3.0124999999998903e-05, 3.0458000000000568e-05, 3.0374999999999153e-05, 3.0181000000000652e-05, 2.9778000000001137e-05, 2.9944000000000498e-05, 2.9806000000000277e-05, 2.9556000000000027e-05, 3.0083999999999667e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 3.0208000000000318e-05, 3.0042000000000957e-05, 3.0041999999997487e-05, 2.972300000000233e-05, 3.020899999999979e-05, 2.9875000000002122e-05, 3.0278000000001637e-05, 2.9721999999999388e-05, 3.0402000000002288e-05, 3.0290999999998264e-05, 3.0221999999999888e-05, 2.9526999999997944e-05, 2.9917000000000832e-05, 3.0069000000000623e-05, 3.0153000000001512e-05, 2.9638999999997973e-05, 2.9958000000000068e-05, 2.9875000000002122e-05, 3.0277999999998167e-05, 2.9806000000000277e-05, 2.9625000000001872e-05]</msg>
<status status="PASS" starttime="20201110 08:37:28.283" endtime="20201110 08:37:28.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.278" endtime="20201110 08:37:28.286"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.288" endtime="20201110 08:37:28.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.291" endtime="20201110 08:37:28.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.290" endtime="20201110 08:37:28.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.286" endtime="20201110 08:37:28.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.919" endtime="20201110 08:37:28.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.918" endtime="20201110 08:37:28.312"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.321" endtime="20201110 08:37:28.337"></status>
</kw>
<msg timestamp="20201110 08:37:28.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.319" endtime="20201110 08:37:28.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.339" endtime="20201110 08:37:28.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.341" endtime="20201110 08:37:28.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.317" endtime="20201110 08:37:28.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.315" endtime="20201110 08:37:28.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.351" endtime="20201110 08:37:28.638"></status>
</kw>
<msg timestamp="20201110 08:37:28.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.350" endtime="20201110 08:37:28.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022110236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.642" endtime="20201110 08:37:28.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.651" endtime="20201110 08:37:28.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.347" endtime="20201110 08:37:28.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.346" endtime="20201110 08:37:28.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.658" level="INFO">${RESULT} = [{'time': 0.022141236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.100000000000325e-05, 'source_diff': 3.100000000000325e-05}, {'time': 0.022189167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:28.654" endtime="20201110 08:37:28.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:28.671" level="INFO">${ACCURACY} = {'diff': [3.100000000000325e-05, 3.054199999999799e-05, 3.070900000000029e-05, 3.055600000000103e-05, 3.070800000000082e-05, 3.074999999999953e-05, 3.12639999999996e-05, 3.1054999999998584e-05, 3.0540...</msg>
<status status="PASS" starttime="20201110 08:37:28.658" endtime="20201110 08:37:28.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.676" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:28.675" endtime="20201110 08:37:28.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.679" level="INFO">VALUE: [3.100000000000325e-05, 3.054199999999799e-05, 3.070900000000029e-05, 3.055600000000103e-05, 3.070800000000082e-05, 3.074999999999953e-05, 3.12639999999996e-05, 3.1054999999998584e-05, 3.0540999999998514e-05, 3.070800000000082e-05, 3.073599999999996e-05, 3.102800000000239e-05, 3.120799999999785e-05, 3.087499999999965e-05, 3.07639999999991e-05, 3.105600000000153e-05, 3.072299999999986e-05, 3.136100000000058e-05, 3.06249999999994e-05, 3.11249999999999e-05, 3.09449999999975e-05, 3.119500000000122e-05, 3.138899999999972e-05, 3.129199999999874e-05, 3.070900000000029e-05, 3.070900000000029e-05, 3.104199999999849e-05, 3.087499999999965e-05, 3.122200000000089e-05, 3.052700000000241e-05, 3.120800000000132e-05, 3.070800000000082e-05, 3.105500000000205e-05, 3.070799999999735e-05, 3.070799999999735e-05, 3.119399999999828e-05, 3.087499999999965e-05, 3.098600000000021e-05, 3.086100000000008e-05, 3.06249999999994e-05, 3.077800000000214e-05, 3.140299999999929e-05, 3.094500000000097e-05, 3.086100000000008e-05, 3.147300000000061e-05, 3.120899999999732e-05, 3.087499999999965e-05, 3.05700000000006e-05, 3.077799999999867e-05, 3.122200000000089e-05]</msg>
<status status="PASS" starttime="20201110 08:37:28.677" endtime="20201110 08:37:28.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.672" endtime="20201110 08:37:28.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.683" endtime="20201110 08:37:28.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.687" endtime="20201110 08:37:28.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.685" endtime="20201110 08:37:28.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.681" endtime="20201110 08:37:28.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.313" endtime="20201110 08:37:28.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.312" endtime="20201110 08:37:28.707"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.716" endtime="20201110 08:37:28.733"></status>
</kw>
<msg timestamp="20201110 08:37:28.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.715" endtime="20201110 08:37:28.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.735" endtime="20201110 08:37:28.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.737" endtime="20201110 08:37:28.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.712" endtime="20201110 08:37:28.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.710" endtime="20201110 08:37:28.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.747" endtime="20201110 08:37:29.034"></status>
</kw>
<msg timestamp="20201110 08:37:29.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.746" endtime="20201110 08:37:29.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022389694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.038" endtime="20201110 08:37:29.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.047" endtime="20201110 08:37:29.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.743" endtime="20201110 08:37:29.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.741" endtime="20201110 08:37:29.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.054" level="INFO">${RESULT} = [{'time': 0.022421542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.184799999999752e-05, 'source_diff': 3.184799999999752e-05}, {'time': 0.022477542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.050" endtime="20201110 08:37:29.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.075" level="INFO">${ACCURACY} = {'diff': [3.184799999999752e-05, 3.219499999999875e-05, 3.204199999999949e-05, 3.1862000000000557e-05, 3.16380000000005e-05, 3.231900000000287e-05, 3.2054999999999584e-05, 3.1540999999999514e-05, 3.18...</msg>
<status status="PASS" starttime="20201110 08:37:29.055" endtime="20201110 08:37:29.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.087" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.084" endtime="20201110 08:37:29.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.093" level="INFO">VALUE: [3.184799999999752e-05, 3.219499999999875e-05, 3.204199999999949e-05, 3.1862000000000557e-05, 3.16380000000005e-05, 3.231900000000287e-05, 3.2054999999999584e-05, 3.1540999999999514e-05, 3.187500000000065e-05, 3.19440000000025e-05, 3.236100000000158e-05, 3.19579999999986e-05, 3.1596999999997794e-05, 3.154199999999899e-05, 3.172199999999792e-05, 3.238900000000072e-05, 3.245800000000257e-05, 3.220799999999885e-05, 3.204200000000296e-05, 3.205600000000253e-05, 3.187500000000065e-05, 3.197299999999764e-05, 3.170900000000129e-05, 3.172299999999739e-05, 3.172200000000139e-05, 3.2362000000001057e-05, 3.216699999999961e-05, 3.19579999999986e-05, 3.237500000000115e-05, 3.1860999999997613e-05, 3.172200000000139e-05, 3.220799999999885e-05, 3.220799999999885e-05, 3.220799999999885e-05, 3.187500000000065e-05, 3.2318999999999404e-05, 3.205599999999906e-05, 3.169400000000225e-05, 3.155599999999856e-05, 3.169499999999825e-05, 3.173599999999749e-05, 3.220899999999832e-05, 3.237500000000115e-05, 3.229199999999974e-05, 3.219499999999875e-05, 3.240200000000082e-05, 3.179199999999924e-05, 3.1554999999999084e-05, 3.219399999999928e-05, 3.240300000000029e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.090" endtime="20201110 08:37:29.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.078" endtime="20201110 08:37:29.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.111" endtime="20201110 08:37:29.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.117" endtime="20201110 08:37:29.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.115" endtime="20201110 08:37:29.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.107" endtime="20201110 08:37:29.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.708" endtime="20201110 08:37:29.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.708" endtime="20201110 08:37:29.139"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.151" endtime="20201110 08:37:29.168"></status>
</kw>
<msg timestamp="20201110 08:37:29.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.149" endtime="20201110 08:37:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.169" endtime="20201110 08:37:29.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.172" endtime="20201110 08:37:29.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.146" endtime="20201110 08:37:29.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.143" endtime="20201110 08:37:29.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.184" endtime="20201110 08:37:29.470"></status>
</kw>
<msg timestamp="20201110 08:37:29.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025278083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025311181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.182" endtime="20201110 08:37:29.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025278083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025311181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.474" endtime="20201110 08:37:29.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.482" endtime="20201110 08:37:29.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.179" endtime="20201110 08:37:29.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.177" endtime="20201110 08:37:29.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.489" level="INFO">${RESULT} = [{'time': 0.025311181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.309799999999877e-05, 'source_diff': 3.309799999999877e-05}, {'time': 0.025364181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.486" endtime="20201110 08:37:29.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.504" level="INFO">${ACCURACY} = {'diff': [3.309799999999877e-05, 3.270899999999882e-05, 3.3055000000000584e-05, 3.3040999999997545e-05, 3.322200000000289e-05, 3.270800000000282e-05, 3.266600000000064e-05, 3.322199999999942e-05, 3.32...</msg>
<status status="PASS" starttime="20201110 08:37:29.490" endtime="20201110 08:37:29.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.508" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.507" endtime="20201110 08:37:29.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.511" level="INFO">VALUE: [3.309799999999877e-05, 3.270899999999882e-05, 3.3055000000000584e-05, 3.3040999999997545e-05, 3.322200000000289e-05, 3.270800000000282e-05, 3.266600000000064e-05, 3.322199999999942e-05, 3.324999999999856e-05, 3.304199999999702e-05, 3.255599999999956e-05, 3.270800000000282e-05, 3.337500000000215e-05, 3.280599999999981e-05, 3.290300000000079e-05, 3.275000000000153e-05, 3.254199999999999e-05, 3.319499999999975e-05, 3.316700000000061e-05, 3.334800000000249e-05, 3.29449999999995e-05, 3.304200000000049e-05, 3.34580000000001e-05, 3.2610999999998364e-05, 3.311100000000233e-05, 3.297200000000264e-05, 3.2541000000000514e-05, 3.270800000000282e-05, 3.3041000000001014e-05, 3.288900000000122e-05, 3.266700000000011e-05, 3.34580000000001e-05, 3.340299999999782e-05, 3.347199999999967e-05, 3.252800000000042e-05, 3.255599999999956e-05, 3.270899999999882e-05, 3.270799999999935e-05, 3.304200000000049e-05, 3.288799999999828e-05, 3.347300000000261e-05, 3.270900000000229e-05, 3.2555000000000084e-05, 3.287500000000165e-05, 3.263799999999803e-05, 3.350000000000228e-05, 3.337500000000215e-05, 3.313900000000147e-05, 3.3276999999998225e-05, 3.2568999999999654e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.509" endtime="20201110 08:37:29.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.505" endtime="20201110 08:37:29.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.514" endtime="20201110 08:37:29.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.518" endtime="20201110 08:37:29.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.516" endtime="20201110 08:37:29.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.513" endtime="20201110 08:37:29.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.141" endtime="20201110 08:37:29.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.140" endtime="20201110 08:37:29.539"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.547" endtime="20201110 08:37:29.564"></status>
</kw>
<msg timestamp="20201110 08:37:29.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.546" endtime="20201110 08:37:29.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.566" endtime="20201110 08:37:29.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.568" endtime="20201110 08:37:29.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.543" endtime="20201110 08:37:29.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.541" endtime="20201110 08:37:29.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.578" endtime="20201110 08:37:29.864"></status>
</kw>
<msg timestamp="20201110 08:37:29.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.577" endtime="20201110 08:37:29.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.868" endtime="20201110 08:37:29.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.876" endtime="20201110 08:37:29.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.574" endtime="20201110 08:37:29.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.572" endtime="20201110 08:37:29.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.883" level="INFO">${RESULT} = [{'time': 0.022138472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4361000000000114e-05, 'source_diff': 3.4361000000000114e-05}, {'time': 0.022186458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:29.880" endtime="20201110 08:37:29.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:29.897" level="INFO">${ACCURACY} = {'diff': [3.4361000000000114e-05, 3.369400000000078e-05, 3.3888999999998753e-05, 3.419500000000075e-05, 3.39580000000006e-05, 3.370800000000035e-05, 3.365299999999807e-05, 3.3874999999999184e-05, 3.39...</msg>
<status status="PASS" starttime="20201110 08:37:29.884" endtime="20201110 08:37:29.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.901" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:29.900" endtime="20201110 08:37:29.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.904" level="INFO">VALUE: [3.4361000000000114e-05, 3.369400000000078e-05, 3.3888999999998753e-05, 3.419500000000075e-05, 3.39580000000006e-05, 3.370800000000035e-05, 3.365299999999807e-05, 3.3874999999999184e-05, 3.394400000000103e-05, 3.4138999999999003e-05, 3.404200000000149e-05, 3.355600000000056e-05, 3.370899999999982e-05, 3.44580000000011e-05, 3.427800000000217e-05, 3.420900000000032e-05, 3.422299999999989e-05, 3.3568999999997184e-05, 3.422200000000042e-05, 3.3888999999998753e-05, 3.3805000000001334e-05, 3.369400000000078e-05, 3.420800000000085e-05, 3.3888999999998753e-05, 3.4110999999999864e-05, 3.3819000000000904e-05, 3.354200000000099e-05, 3.438900000000272e-05, 3.429199999999827e-05, 3.354200000000099e-05, 3.3874999999999184e-05, 3.383399999999995e-05, 3.354200000000099e-05, 3.352800000000142e-05, 3.398599999999974e-05, 3.420900000000032e-05, 3.369500000000025e-05, 3.422200000000042e-05, 3.438800000000325e-05, 3.365200000000207e-05, 3.3791000000001764e-05, 3.390299999999832e-05, 3.3776999999998725e-05, 3.369400000000078e-05, 3.416599999999867e-05, 3.3541000000001514e-05, 3.352799999999795e-05, 3.359799999999927e-05, 3.391700000000136e-05, 3.4110999999999864e-05]</msg>
<status status="PASS" starttime="20201110 08:37:29.902" endtime="20201110 08:37:29.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.898" endtime="20201110 08:37:29.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.908" endtime="20201110 08:37:29.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.911" endtime="20201110 08:37:29.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.909" endtime="20201110 08:37:29.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.906" endtime="20201110 08:37:29.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.540" endtime="20201110 08:37:29.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.539" endtime="20201110 08:37:29.932"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.941" endtime="20201110 08:37:29.958"></status>
</kw>
<msg timestamp="20201110 08:37:29.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.939" endtime="20201110 08:37:29.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.960" endtime="20201110 08:37:29.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.962" endtime="20201110 08:37:29.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.936" endtime="20201110 08:37:29.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.934" endtime="20201110 08:37:29.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.972" endtime="20201110 08:37:30.258"></status>
</kw>
<msg timestamp="20201110 08:37:30.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.971" endtime="20201110 08:37:30.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.262" endtime="20201110 08:37:30.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.271" endtime="20201110 08:37:30.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.968" endtime="20201110 08:37:30.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.966" endtime="20201110 08:37:30.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.278" level="INFO">${RESULT} = [{'time': 0.022235208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4597000000000794e-05, 'source_diff': 3.4597000000000794e-05}, {'time': 0.022292194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:30.274" endtime="20201110 08:37:30.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.291" level="INFO">${ACCURACY} = {'diff': [3.4597000000000794e-05, 3.5305000000002834e-05, 3.5304999999999365e-05, 3.520799999999838e-05, 3.4540999999999045e-05, 3.516599999999967e-05, 3.5389000000000254e-05, 3.4597000000000794e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:30.279" endtime="20201110 08:37:30.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.296" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.295" endtime="20201110 08:37:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.298" level="INFO">VALUE: [3.4597000000000794e-05, 3.5305000000002834e-05, 3.5304999999999365e-05, 3.520799999999838e-05, 3.4540999999999045e-05, 3.516599999999967e-05, 3.5389000000000254e-05, 3.4597000000000794e-05, 3.4888999999999754e-05, 3.520799999999838e-05, 3.504199999999902e-05, 3.470899999999735e-05, 3.4888999999999754e-05, 3.480600000000181e-05, 3.470900000000082e-05, 3.504200000000249e-05, 3.4875000000000184e-05, 3.4624999999999934e-05, 3.495799999999813e-05, 3.470899999999735e-05, 3.470800000000135e-05, 3.516599999999967e-05, 3.5096999999997824e-05, 3.4527000000002944e-05, 3.4875000000000184e-05, 3.547200000000167e-05, 3.5375000000000684e-05, 3.5125000000000434e-05, 3.5304999999999365e-05, 3.473600000000049e-05, 3.470800000000135e-05, 3.504200000000249e-05, 3.469500000000125e-05, 3.533400000000145e-05, 3.494499999999803e-05, 3.470900000000082e-05, 3.455599999999809e-05, 3.454199999999852e-05, 3.505600000000206e-05, 3.47779999999992e-05, 3.4875000000000184e-05, 3.5124999999996964e-05, 3.472199999999745e-05, 3.472200000000092e-05, 3.470800000000135e-05, 3.520799999999838e-05, 3.522199999999795e-05, 3.5389000000000254e-05, 3.52779999999997e-05, 3.456999999999766e-05]</msg>
<status status="PASS" starttime="20201110 08:37:30.297" endtime="20201110 08:37:30.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.292" endtime="20201110 08:37:30.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.302" endtime="20201110 08:37:30.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.305" endtime="20201110 08:37:30.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.304" endtime="20201110 08:37:30.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.300" endtime="20201110 08:37:30.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.933" endtime="20201110 08:37:30.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.932" endtime="20201110 08:37:30.326"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.335" endtime="20201110 08:37:30.351"></status>
</kw>
<msg timestamp="20201110 08:37:30.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.333" endtime="20201110 08:37:30.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.353" endtime="20201110 08:37:30.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.355" endtime="20201110 08:37:30.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.331" endtime="20201110 08:37:30.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.329" endtime="20201110 08:37:30.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.365" endtime="20201110 08:37:30.652"></status>
</kw>
<msg timestamp="20201110 08:37:30.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.364" endtime="20201110 08:37:30.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.656" endtime="20201110 08:37:30.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.664" endtime="20201110 08:37:30.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.361" endtime="20201110 08:37:30.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.359" endtime="20201110 08:37:30.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.671" level="INFO">${RESULT} = [{'time': 0.022537208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.591600000000042e-05, 'source_diff': 3.591600000000042e-05}, {'time': 0.022597236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.668" endtime="20201110 08:37:30.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:30.684" level="INFO">${ACCURACY} = {'diff': [3.591600000000042e-05, 3.622199999999895e-05, 3.6389000000001254e-05, 3.57780000000002e-05, 3.5610999999997894e-05, 3.570799999999888e-05, 3.569399999999931e-05, 3.6180999999999713e-05, 3.57...</msg>
<status status="PASS" starttime="20201110 08:37:30.672" endtime="20201110 08:37:30.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.689" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:30.688" endtime="20201110 08:37:30.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.691" level="INFO">VALUE: [3.591600000000042e-05, 3.622199999999895e-05, 3.6389000000001254e-05, 3.57780000000002e-05, 3.5610999999997894e-05, 3.570799999999888e-05, 3.569399999999931e-05, 3.6180999999999713e-05, 3.5763000000001155e-05, 3.5889000000000754e-05, 3.579199999999977e-05, 3.552799999999995e-05, 3.570899999999835e-05, 3.554199999999952e-05, 3.630599999999984e-05, 3.579199999999977e-05, 3.588799999999781e-05, 3.59719999999987e-05, 3.6332999999999505e-05, 3.5666999999999643e-05, 3.6305000000000365e-05, 3.572200000000192e-05, 3.600000000000131e-05, 3.5903000000000324e-05, 3.6096999999998824e-05, 3.626399999999766e-05, 3.5874999999997714e-05, 3.572199999999845e-05, 3.568099999999921e-05, 3.555600000000256e-05, 3.6389000000001254e-05, 3.566600000000017e-05, 3.650000000000181e-05, 3.568099999999921e-05, 3.5889000000000754e-05, 3.6124999999997964e-05, 3.594499999999903e-05, 3.622200000000242e-05, 3.569400000000278e-05, 3.5541000000000045e-05, 3.572199999999845e-05, 3.622199999999895e-05, 3.623599999999852e-05, 3.623599999999852e-05, 3.602800000000045e-05, 3.620799999999938e-05, 3.6374999999998214e-05, 3.6167000000000143e-05, 3.579199999999977e-05, 3.620799999999938e-05]</msg>
<status status="PASS" starttime="20201110 08:37:30.690" endtime="20201110 08:37:30.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.685" endtime="20201110 08:37:30.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.695" endtime="20201110 08:37:30.696"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.699" endtime="20201110 08:37:30.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.697" endtime="20201110 08:37:30.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.693" endtime="20201110 08:37:30.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.327" endtime="20201110 08:37:30.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.326" endtime="20201110 08:37:30.720"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.729" endtime="20201110 08:37:30.746"></status>
</kw>
<msg timestamp="20201110 08:37:30.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.727" endtime="20201110 08:37:30.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.748" endtime="20201110 08:37:30.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.750" endtime="20201110 08:37:30.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.724" endtime="20201110 08:37:30.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.722" endtime="20201110 08:37:30.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.760" endtime="20201110 08:37:31.047"></status>
</kw>
<msg timestamp="20201110 08:37:31.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.759" endtime="20201110 08:37:31.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022579667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.051" endtime="20201110 08:37:31.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.060" endtime="20201110 08:37:31.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.756" endtime="20201110 08:37:31.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.754" endtime="20201110 08:37:31.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.067" level="INFO">${RESULT} = [{'time': 0.022579667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.74590000000001e-05, 'source_diff': 3.74590000000001e-05}, {'time': 0.022630667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:31.063" endtime="20201110 08:37:31.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.081" level="INFO">${ACCURACY} = {'diff': [3.74590000000001e-05, 3.722299999999942e-05, 3.726400000000213e-05, 3.648600000000224e-05, 3.672199999999945e-05, 3.7374999999999214e-05, 3.692999999999752e-05, 3.6540999999997575e-05, 3.737...</msg>
<status status="PASS" starttime="20201110 08:37:31.068" endtime="20201110 08:37:31.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.086" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.085" endtime="20201110 08:37:31.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.088" level="INFO">VALUE: [3.74590000000001e-05, 3.722299999999942e-05, 3.726400000000213e-05, 3.648600000000224e-05, 3.672199999999945e-05, 3.7374999999999214e-05, 3.692999999999752e-05, 3.6540999999997575e-05, 3.7374999999999214e-05, 3.6638999999998034e-05, 3.7319000000000935e-05, 3.719399999999734e-05, 3.6888999999998284e-05, 3.729200000000127e-05, 3.7375000000002684e-05, 3.72919999999978e-05, 3.704200000000102e-05, 3.704200000000102e-05, 3.7402999999998354e-05, 3.680600000000034e-05, 3.7195000000000283e-05, 3.652799999999748e-05, 3.732000000000041e-05, 3.74720000000002e-05, 3.722199999999995e-05, 3.720800000000038e-05, 3.672199999999945e-05, 3.718000000000124e-05, 3.7040999999998075e-05, 3.697299999999917e-05, 3.745800000000063e-05, 3.719400000000081e-05, 3.670799999999988e-05, 3.6875000000002184e-05, 3.697200000000317e-05, 3.702800000000145e-05, 3.707000000000016e-05, 3.720800000000038e-05, 3.656999999999966e-05, 3.7375000000002684e-05, 3.698699999999874e-05, 3.7361000000003114e-05, 3.730599999999737e-05, 3.6875000000002184e-05, 3.74720000000002e-05, 3.720800000000038e-05, 3.670799999999988e-05, 3.716600000000167e-05, 3.7138999999998534e-05, 3.722199999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.087" endtime="20201110 08:37:31.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.082" endtime="20201110 08:37:31.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.092" endtime="20201110 08:37:31.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.095" endtime="20201110 08:37:31.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.094" endtime="20201110 08:37:31.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.090" endtime="20201110 08:37:31.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.721" endtime="20201110 08:37:31.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.720" endtime="20201110 08:37:31.116"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.125" endtime="20201110 08:37:31.142"></status>
</kw>
<msg timestamp="20201110 08:37:31.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.123" endtime="20201110 08:37:31.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.144" endtime="20201110 08:37:31.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.146" endtime="20201110 08:37:31.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.121" endtime="20201110 08:37:31.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.119" endtime="20201110 08:37:31.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.156" endtime="20201110 08:37:31.442"></status>
</kw>
<msg timestamp="20201110 08:37:31.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.155" endtime="20201110 08:37:31.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022171028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.446" endtime="20201110 08:37:31.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.454" endtime="20201110 08:37:31.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.152" endtime="20201110 08:37:31.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.150" endtime="20201110 08:37:31.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.461" level="INFO">${RESULT} = [{'time': 0.022171028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.804199999999855e-05, 'source_diff': 3.804199999999855e-05}, {'time': 0.022226014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.458" endtime="20201110 08:37:31.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.474" level="INFO">${ACCURACY} = {'diff': [3.804199999999855e-05, 3.770799999999741e-05, 3.8375000000000214e-05, 3.82919999999988e-05, 3.804200000000202e-05, 3.747299999999967e-05, 3.7888999999999284e-05, 3.813800000000006e-05, 3.847...</msg>
<status status="PASS" starttime="20201110 08:37:31.462" endtime="20201110 08:37:31.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.479" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.478" endtime="20201110 08:37:31.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.481" level="INFO">VALUE: [3.804199999999855e-05, 3.770799999999741e-05, 3.8375000000000214e-05, 3.82919999999988e-05, 3.804200000000202e-05, 3.747299999999967e-05, 3.7888999999999284e-05, 3.813800000000006e-05, 3.84720000000012e-05, 3.7554999999998145e-05, 3.8431000000001964e-05, 3.7777000000002725e-05, 3.8402999999999354e-05, 3.844399999999859e-05, 3.823600000000052e-05, 3.769399999999784e-05, 3.751399999999891e-05, 3.807000000000116e-05, 3.769399999999784e-05, 3.807000000000116e-05, 3.802799999999898e-05, 3.752799999999848e-05, 3.822300000000042e-05, 3.799999999999984e-05, 3.822199999999748e-05, 3.822300000000042e-05, 3.8208999999997384e-05, 3.8431000000001964e-05, 3.7624999999999464e-05, 3.79720000000007e-05, 3.7888999999999284e-05, 3.8304999999998895e-05, 3.802799999999898e-05, 3.8055000000002115e-05, 3.770800000000088e-05, 3.770800000000088e-05, 3.755600000000109e-05, 3.7847000000000575e-05, 3.7945000000001033e-05, 3.804200000000202e-05, 3.8209000000000853e-05, 3.7847000000000575e-05, 3.817999999999877e-05, 3.852799999999948e-05, 3.7875000000003184e-05, 3.8459000000001103e-05, 3.8375000000000214e-05, 3.84720000000012e-05, 3.773600000000002e-05, 3.772200000000045e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.480" endtime="20201110 08:37:31.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.475" endtime="20201110 08:37:31.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.485" endtime="20201110 08:37:31.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.489" endtime="20201110 08:37:31.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.487" endtime="20201110 08:37:31.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.483" endtime="20201110 08:37:31.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.117" endtime="20201110 08:37:31.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.116" endtime="20201110 08:37:31.509"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.518" endtime="20201110 08:37:31.535"></status>
</kw>
<msg timestamp="20201110 08:37:31.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.517" endtime="20201110 08:37:31.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.537" endtime="20201110 08:37:31.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.539" endtime="20201110 08:37:31.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.514" endtime="20201110 08:37:31.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.512" endtime="20201110 08:37:31.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.549" endtime="20201110 08:37:31.836"></status>
</kw>
<msg timestamp="20201110 08:37:31.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.548" endtime="20201110 08:37:31.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022438597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.840" endtime="20201110 08:37:31.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.849" endtime="20201110 08:37:31.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.545" endtime="20201110 08:37:31.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.543" endtime="20201110 08:37:31.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.856" level="INFO">${RESULT} = [{'time': 0.022438597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.901400000000041e-05, 'source_diff': 3.901400000000041e-05}, {'time': 0.022499569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.852" endtime="20201110 08:37:31.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.869" level="INFO">${ACCURACY} = {'diff': [3.901400000000041e-05, 3.891599999999995e-05, 3.9125000000000965e-05, 3.87919999999993e-05, 3.9403000000000354e-05, 3.8804999999999396e-05, 3.922199999999848e-05, 3.920799999999891e-05, 3.87...</msg>
<status status="PASS" starttime="20201110 08:37:31.856" endtime="20201110 08:37:31.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.874" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.873" endtime="20201110 08:37:31.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.876" level="INFO">VALUE: [3.901400000000041e-05, 3.891599999999995e-05, 3.9125000000000965e-05, 3.87919999999993e-05, 3.9403000000000354e-05, 3.8804999999999396e-05, 3.922199999999848e-05, 3.920799999999891e-05, 3.870800000000188e-05, 3.915200000000063e-05, 3.9374999999997745e-05, 3.89720000000017e-05, 3.920799999999891e-05, 3.8875000000000715e-05, 3.9139000000000534e-05, 3.894399999999909e-05, 3.8902999999999854e-05, 3.8959000000001603e-05, 3.8680999999998744e-05, 3.8875000000000715e-05, 3.9472999999998204e-05, 3.854199999999905e-05, 3.854199999999905e-05, 3.917999999999977e-05, 3.8875000000000715e-05, 3.945799999999916e-05, 3.9054999999999646e-05, 3.9389000000000784e-05, 3.8639000000000034e-05, 3.923599999999805e-05, 3.869399999999884e-05, 3.9166999999999674e-05, 3.9375000000001215e-05, 3.945800000000263e-05, 3.9374999999997745e-05, 3.947199999999873e-05, 3.872200000000145e-05, 3.855600000000209e-05, 3.8875000000000715e-05, 3.9473000000001673e-05, 3.8709000000001353e-05, 3.8875000000000715e-05, 3.9125000000000965e-05, 3.9125000000000965e-05, 3.9277000000000756e-05, 3.8555000000002615e-05, 3.8540999999999576e-05, 3.9375000000001215e-05, 3.8639000000000034e-05, 3.8666999999999174e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.875" endtime="20201110 08:37:31.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.870" endtime="20201110 08:37:31.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.880" endtime="20201110 08:37:31.881"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.883" endtime="20201110 08:37:31.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.882" endtime="20201110 08:37:31.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.878" endtime="20201110 08:37:31.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.510" endtime="20201110 08:37:31.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.510" endtime="20201110 08:37:31.904"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.913" endtime="20201110 08:37:31.930"></status>
</kw>
<msg timestamp="20201110 08:37:31.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.911" endtime="20201110 08:37:31.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.931" endtime="20201110 08:37:31.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.934" endtime="20201110 08:37:31.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.909" endtime="20201110 08:37:31.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.907" endtime="20201110 08:37:31.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.944" endtime="20201110 08:37:32.230"></status>
</kw>
<msg timestamp="20201110 08:37:32.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:31.942" endtime="20201110 08:37:32.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:32.235" endtime="20201110 08:37:32.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.243" endtime="20201110 08:37:32.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.940" endtime="20201110 08:37:32.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.938" endtime="20201110 08:37:32.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.250" level="INFO">${RESULT} = [{'time': 0.02223175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.976400000000116e-05, 'source_diff': 3.976400000000116e-05}, {'time': 0.022285764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:32.246" endtime="20201110 08:37:32.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.263" level="INFO">${ACCURACY} = {'diff': [3.976400000000116e-05, 3.997199999999923e-05, 4.004200000000055e-05, 3.9875000000001715e-05, 4.02920000000008e-05, 3.9874999999998245e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.019...</msg>
<status status="PASS" starttime="20201110 08:37:32.251" endtime="20201110 08:37:32.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.268" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.267" endtime="20201110 08:37:32.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.270" level="INFO">VALUE: [3.976400000000116e-05, 3.997199999999923e-05, 4.004200000000055e-05, 3.9875000000001715e-05, 4.02920000000008e-05, 3.9874999999998245e-05, 4.024999999999862e-05, 4.024999999999862e-05, 4.0194999999999814e-05, 3.9708999999998884e-05, 4.019400000000034e-05, 4.0360999999999175e-05, 4.026399999999819e-05, 3.970800000000288e-05, 4.019400000000034e-05, 4.020799999999991e-05, 4.001399999999794e-05, 3.955599999999962e-05, 4.0389000000001785e-05, 4.0111000000002395e-05, 4.030600000000037e-05, 3.973700000000149e-05, 3.955599999999962e-05, 3.9903000000000854e-05, 4.0458999999999634e-05, 4.0374999999998745e-05, 4.0139000000001535e-05, 4.0458999999999634e-05, 4.0055000000000646e-05, 4.0027000000001506e-05, 4.020799999999991e-05, 3.9902999999997385e-05, 4.049999999999887e-05, 4.0110999999998925e-05, 3.9889000000001285e-05, 4.030600000000037e-05, 4.0388999999998315e-05, 3.995799999999966e-05, 4.0374999999998745e-05, 4.02920000000008e-05, 4.022199999999948e-05, 3.954200000000005e-05, 4.005600000000012e-05, 4.030600000000037e-05, 3.975000000000159e-05, 3.9555000000000146e-05, 3.970799999999941e-05, 3.9916999999996955e-05, 3.976399999999769e-05, 4.0375000000002215e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.269" endtime="20201110 08:37:32.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.264" endtime="20201110 08:37:32.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.274" endtime="20201110 08:37:32.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.277" endtime="20201110 08:37:32.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.276" endtime="20201110 08:37:32.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.272" endtime="20201110 08:37:32.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.905" endtime="20201110 08:37:32.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.904" endtime="20201110 08:37:32.298"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.307" endtime="20201110 08:37:32.325"></status>
</kw>
<msg timestamp="20201110 08:37:32.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.305" endtime="20201110 08:37:32.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.327" endtime="20201110 08:37:32.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.331" endtime="20201110 08:37:32.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.303" endtime="20201110 08:37:32.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.301" endtime="20201110 08:37:32.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.346" endtime="20201110 08:37:32.633"></status>
</kw>
<msg timestamp="20201110 08:37:32.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.344" endtime="20201110 08:37:32.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022210639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.637" endtime="20201110 08:37:32.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.645" endtime="20201110 08:37:32.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.340" endtime="20201110 08:37:32.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.337" endtime="20201110 08:37:32.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.652" level="INFO">${RESULT} = [{'time': 0.022251417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.077799999999826e-05, 'source_diff': 4.077799999999826e-05}, {'time': 0.022307417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:32.649" endtime="20201110 08:37:32.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.667" level="INFO">${ACCURACY} = {'diff': [4.077799999999826e-05, 4.1445000000001064e-05, 4.090199999999891e-05, 4.0624999999998995e-05, 4.091599999999848e-05, 4.119400000000134e-05, 4.070800000000041e-05, 4.120800000000091e-05, 4.14...</msg>
<status status="PASS" starttime="20201110 08:37:32.653" endtime="20201110 08:37:32.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.671" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.670" endtime="20201110 08:37:32.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.674" level="INFO">VALUE: [4.077799999999826e-05, 4.1445000000001064e-05, 4.090199999999891e-05, 4.0624999999998995e-05, 4.091599999999848e-05, 4.119400000000134e-05, 4.070800000000041e-05, 4.120800000000091e-05, 4.1416999999998455e-05, 4.1305000000001896e-05, 4.051399999999844e-05, 4.1375000000003215e-05, 4.097199999999676e-05, 4.109799999999983e-05, 4.0889000000002285e-05, 4.0624999999998995e-05, 4.130600000000137e-05, 4.1209000000000384e-05, 4.147200000000073e-05, 4.0625000000002465e-05, 4.113800000000306e-05, 4.097200000000023e-05, 4.1069000000001216e-05, 4.120799999999744e-05, 4.0860999999999675e-05, 4.1097000000000355e-05, 4.1138999999999065e-05, 4.127800000000223e-05, 4.147200000000073e-05, 4.1110999999999925e-05, 4.081999999999697e-05, 4.123600000000005e-05, 4.105600000000112e-05, 4.070800000000041e-05, 4.0874999999999245e-05, 4.0959000000000134e-05, 4.1222999999999954e-05, 4.141599999999898e-05, 4.11119999999994e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.1026999999999036e-05, 4.072199999999998e-05, 4.0555000000001146e-05, 4.0555000000001146e-05, 4.070800000000041e-05, 4.0889000000002285e-05, 4.097199999999676e-05, 4.0833000000000536e-05, 4.07920000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.672" endtime="20201110 08:37:32.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.668" endtime="20201110 08:37:32.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.677" endtime="20201110 08:37:32.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.681" endtime="20201110 08:37:32.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.679" endtime="20201110 08:37:32.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.676" endtime="20201110 08:37:32.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.299" endtime="20201110 08:37:32.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.299" endtime="20201110 08:37:32.702"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.710" endtime="20201110 08:37:32.728"></status>
</kw>
<msg timestamp="20201110 08:37:32.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.709" endtime="20201110 08:37:32.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.729" endtime="20201110 08:37:32.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.732" endtime="20201110 08:37:32.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.706" endtime="20201110 08:37:32.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.704" endtime="20201110 08:37:32.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.743" endtime="20201110 08:37:33.028"></status>
</kw>
<msg timestamp="20201110 08:37:33.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.742" endtime="20201110 08:37:33.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.033" endtime="20201110 08:37:33.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.041" endtime="20201110 08:37:33.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.739" endtime="20201110 08:37:33.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.737" endtime="20201110 08:37:33.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.048" level="INFO">${RESULT} = [{'time': 0.022167833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.194400000000209e-05, 'source_diff': 4.194400000000209e-05}, {'time': 0.022226847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.044" endtime="20201110 08:37:33.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.061" level="INFO">${ACCURACY} = {'diff': [4.194400000000209e-05, 4.2375000000000745e-05, 4.227799999999976e-05, 4.2402999999999885e-05, 4.1611000000000425e-05, 4.182000000000144e-05, 4.1875000000000245e-05, 4.200000000000037e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:37:33.049" endtime="20201110 08:37:33.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.066" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.065" endtime="20201110 08:37:33.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.068" level="INFO">VALUE: [4.194400000000209e-05, 4.2375000000000745e-05, 4.227799999999976e-05, 4.2402999999999885e-05, 4.1611000000000425e-05, 4.182000000000144e-05, 4.1875000000000245e-05, 4.200000000000037e-05, 4.204199999999908e-05, 4.1723000000000454e-05, 4.1875000000000245e-05, 4.2346999999998136e-05, 4.202799999999951e-05, 4.1709000000000884e-05, 4.2430999999999025e-05, 4.215200000000016e-05, 4.204199999999908e-05, 4.1610999999996956e-05, 4.2040999999999606e-05, 4.1902999999999385e-05, 4.242999999999955e-05, 4.172199999999751e-05, 4.220800000000191e-05, 4.2431000000002494e-05, 4.1652999999999135e-05, 4.2139000000000065e-05, 4.2125000000000495e-05, 4.2139000000000065e-05, 4.18059999999984e-05, 4.2209000000001384e-05, 4.152799999999901e-05, 4.2209000000001384e-05, 4.2375000000000745e-05, 4.2445000000002064e-05, 4.2069000000002216e-05, 4.2054999999999176e-05, 4.169399999999837e-05, 4.2068999999998746e-05, 4.1540999999999106e-05, 4.2402999999999885e-05, 4.225000000000062e-05, 4.172200000000098e-05, 4.154199999999858e-05, 4.222199999999801e-05, 4.222200000000148e-05, 4.1902999999999385e-05, 4.231999999999847e-05, 4.152799999999901e-05, 4.2195000000001814e-05, 4.205599999999865e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.067" endtime="20201110 08:37:33.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.062" endtime="20201110 08:37:33.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.072" endtime="20201110 08:37:33.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.076" endtime="20201110 08:37:33.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.074" endtime="20201110 08:37:33.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.070" endtime="20201110 08:37:33.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.703" endtime="20201110 08:37:33.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.702" endtime="20201110 08:37:33.096"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.105" endtime="20201110 08:37:33.122"></status>
</kw>
<msg timestamp="20201110 08:37:33.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.103" endtime="20201110 08:37:33.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.123" endtime="20201110 08:37:33.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.126" endtime="20201110 08:37:33.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.101" endtime="20201110 08:37:33.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.099" endtime="20201110 08:37:33.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.136" endtime="20201110 08:37:33.421"></status>
</kw>
<msg timestamp="20201110 08:37:33.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.134" endtime="20201110 08:37:33.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022046681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022089944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.426" endtime="20201110 08:37:33.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.434" endtime="20201110 08:37:33.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.132" endtime="20201110 08:37:33.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.130" endtime="20201110 08:37:33.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.441" level="INFO">${RESULT} = [{'time': 0.022089944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.326300000000172e-05, 'source_diff': 4.326300000000172e-05}, {'time': 0.022147958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.437" endtime="20201110 08:37:33.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.454" level="INFO">${ACCURACY} = {'diff': [4.326300000000172e-05, 4.297199999999876e-05, 4.2874999999997776e-05, 4.3360999999998706e-05, 4.269399999999937e-05, 4.3361000000002176e-05, 4.327800000000076e-05, 4.323600000000205e-05, 4.3...</msg>
<status status="PASS" starttime="20201110 08:37:33.442" endtime="20201110 08:37:33.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.459" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.458" endtime="20201110 08:37:33.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.461" level="INFO">VALUE: [4.326300000000172e-05, 4.297199999999876e-05, 4.2874999999997776e-05, 4.3360999999998706e-05, 4.269399999999937e-05, 4.3361000000002176e-05, 4.327800000000076e-05, 4.323600000000205e-05, 4.332000000000294e-05, 4.3111000000001926e-05, 4.3110999999998456e-05, 4.2638999999997096e-05, 4.3459000000002634e-05, 4.2708999999998415e-05, 4.254199999999958e-05, 4.2874999999997776e-05, 4.265199999999719e-05, 4.274999999999765e-05, 4.26799999999998e-05, 4.2527000000000537e-05, 4.320799999999944e-05, 4.270800000000241e-05, 4.252800000000001e-05, 4.3444999999999595e-05, 4.280600000000287e-05, 4.2903000000000385e-05, 4.329199999999686e-05, 4.2875000000001245e-05, 4.302800000000051e-05, 4.3208999999998915e-05, 4.2737000000001024e-05, 4.305599999999965e-05, 4.305599999999965e-05, 4.2874999999997776e-05, 4.345799999999969e-05, 4.2847000000002106e-05, 4.297199999999876e-05, 4.320800000000291e-05, 4.26799999999998e-05, 4.304099999999714e-05, 4.3124999999998026e-05, 4.255599999999915e-05, 4.305599999999965e-05, 4.320799999999944e-05, 4.255599999999915e-05, 4.3374999999998276e-05, 4.281999999999897e-05, 4.2709000000001884e-05, 4.2889000000000815e-05, 4.3459000000002634e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.460" endtime="20201110 08:37:33.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.455" endtime="20201110 08:37:33.463"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.465" endtime="20201110 08:37:33.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.468" endtime="20201110 08:37:33.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.467" endtime="20201110 08:37:33.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.463" endtime="20201110 08:37:33.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.097" endtime="20201110 08:37:33.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.097" endtime="20201110 08:37:33.489"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.498" endtime="20201110 08:37:33.515"></status>
</kw>
<msg timestamp="20201110 08:37:33.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.497" endtime="20201110 08:37:33.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.517" endtime="20201110 08:37:33.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.519" endtime="20201110 08:37:33.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.494" endtime="20201110 08:37:33.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.492" endtime="20201110 08:37:33.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.530" endtime="20201110 08:37:33.817"></status>
</kw>
<msg timestamp="20201110 08:37:33.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.529" endtime="20201110 08:37:33.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022420792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.821" endtime="20201110 08:37:33.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.830" endtime="20201110 08:37:33.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.526" endtime="20201110 08:37:33.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.524" endtime="20201110 08:37:33.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.836" level="INFO">${RESULT} = [{'time': 0.022420792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4110999999999456e-05, 'source_diff': 4.4110999999999456e-05}, {'time': 0.022481792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:33.833" endtime="20201110 08:37:33.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.851" level="INFO">${ACCURACY} = {'diff': [4.4110999999999456e-05, 4.3667000000000705e-05, 4.391600000000148e-05, 4.429199999999786e-05, 4.3860999999999206e-05, 4.406899999999728e-05, 4.3639000000001565e-05, 4.430499999999796e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:37:33.837" endtime="20201110 08:37:33.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.857" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.856" endtime="20201110 08:37:33.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.859" level="INFO">VALUE: [4.4110999999999456e-05, 4.3667000000000705e-05, 4.391600000000148e-05, 4.429199999999786e-05, 4.3860999999999206e-05, 4.406899999999728e-05, 4.3639000000001565e-05, 4.430499999999796e-05, 4.405499999999771e-05, 4.3860999999999206e-05, 4.4139000000002065e-05, 4.444399999999765e-05, 4.372199999999951e-05, 4.4374999999999276e-05, 4.4124999999999026e-05, 4.3638999999998096e-05, 4.427800000000176e-05, 4.393000000000105e-05, 4.4110999999999456e-05, 4.420800000000044e-05, 4.415199999999869e-05, 4.415200000000216e-05, 4.3555000000000677e-05, 4.3638999999998096e-05, 4.4069000000000746e-05, 4.3819000000000496e-05, 4.4402999999998416e-05, 4.445800000000069e-05, 4.370799999999994e-05, 4.408399999999979e-05, 4.4360999999999706e-05, 4.43060000000009e-05, 4.404199999999761e-05, 4.381999999999997e-05, 4.3945000000000095e-05, 4.355600000000015e-05, 4.351400000000144e-05, 4.39999999999989e-05, 4.354199999999711e-05, 4.3945000000000095e-05, 4.3805000000000927e-05, 4.4360999999999706e-05, 4.3666999999997236e-05, 4.379199999999736e-05, 4.370799999999994e-05, 4.3874999999998776e-05, 4.397199999999976e-05, 4.370799999999994e-05, 4.354199999999711e-05, 4.4374999999999276e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.858" endtime="20201110 08:37:33.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.853" endtime="20201110 08:37:33.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.863" endtime="20201110 08:37:33.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.866" endtime="20201110 08:37:33.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.865" endtime="20201110 08:37:33.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.861" endtime="20201110 08:37:33.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.490" endtime="20201110 08:37:33.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.490" endtime="20201110 08:37:33.887"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.896" endtime="20201110 08:37:33.913"></status>
</kw>
<msg timestamp="20201110 08:37:33.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.894" endtime="20201110 08:37:33.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.914" endtime="20201110 08:37:33.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.917" endtime="20201110 08:37:33.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.892" endtime="20201110 08:37:33.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.890" endtime="20201110 08:37:33.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.927" endtime="20201110 08:37:34.213"></status>
</kw>
<msg timestamp="20201110 08:37:34.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.926" endtime="20201110 08:37:34.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022427333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.218" endtime="20201110 08:37:34.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.226" endtime="20201110 08:37:34.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.923" endtime="20201110 08:37:34.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.921" endtime="20201110 08:37:34.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.233" level="INFO">${RESULT} = [{'time': 0.022472444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5111000000000456e-05, 'source_diff': 4.5111000000000456e-05}, {'time': 0.022538444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.229" endtime="20201110 08:37:34.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.247" level="INFO">${ACCURACY} = {'diff': [4.5111000000000456e-05, 4.469400000000137e-05, 4.5402999999999416e-05, 4.4889000000002816e-05, 4.504099999999914e-05, 4.4874999999999776e-05, 4.5111000000000456e-05, 4.4639000000002566e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:34.234" endtime="20201110 08:37:34.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.252" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.251" endtime="20201110 08:37:34.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.255" level="INFO">VALUE: [4.5111000000000456e-05, 4.469400000000137e-05, 4.5402999999999416e-05, 4.4889000000002816e-05, 4.504099999999914e-05, 4.4874999999999776e-05, 4.5111000000000456e-05, 4.4639000000002566e-05, 4.5138999999999596e-05, 4.5138999999999596e-05, 4.5125000000000026e-05, 4.529199999999886e-05, 4.5223000000000485e-05, 4.455600000000115e-05, 4.4695000000000845e-05, 4.4986999999999805e-05, 4.472200000000051e-05, 4.505500000000218e-05, 4.502699999999957e-05, 4.5375000000000276e-05, 4.530499999999896e-05, 4.4874999999999776e-05, 4.5138999999999596e-05, 4.5097000000000886e-05, 4.534800000000061e-05, 4.447200000000026e-05, 4.495800000000119e-05, 4.473600000000008e-05, 4.4888999999999346e-05, 4.4610999999999956e-05, 4.5152999999999166e-05, 4.525000000000015e-05, 4.486199999999968e-05, 4.477799999999879e-05, 4.505499999999871e-05, 4.522199999999754e-05, 4.504100000000261e-05, 4.452699999999907e-05, 4.455499999999821e-05, 4.472200000000051e-05, 4.504200000000208e-05, 4.473600000000008e-05, 4.502799999999904e-05, 4.534699999999767e-05, 4.5125000000000026e-05, 4.5125000000000026e-05, 4.4624999999999526e-05, 4.4987000000003274e-05, 4.505599999999818e-05, 4.5209000000000915e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.253" endtime="20201110 08:37:34.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.248" endtime="20201110 08:37:34.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.258" endtime="20201110 08:37:34.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.262" endtime="20201110 08:37:34.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.261" endtime="20201110 08:37:34.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.257" endtime="20201110 08:37:34.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.888" endtime="20201110 08:37:34.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.887" endtime="20201110 08:37:34.283"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.292" endtime="20201110 08:37:34.308"></status>
</kw>
<msg timestamp="20201110 08:37:34.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.290" endtime="20201110 08:37:34.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.310" endtime="20201110 08:37:34.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.312" endtime="20201110 08:37:34.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.287" endtime="20201110 08:37:34.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.285" endtime="20201110 08:37:34.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.322" endtime="20201110 08:37:34.609"></status>
</kw>
<msg timestamp="20201110 08:37:34.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.321" endtime="20201110 08:37:34.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022260486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022306431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.614" endtime="20201110 08:37:34.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.622" endtime="20201110 08:37:34.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.318" endtime="20201110 08:37:34.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.316" endtime="20201110 08:37:34.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.629" level="INFO">${RESULT} = [{'time': 0.022306431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5945000000002095e-05, 'source_diff': 4.5945000000002095e-05}, {'time': 0.022367431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.625" endtime="20201110 08:37:34.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.642" level="INFO">${ACCURACY} = {'diff': [4.5945000000002095e-05, 4.5723000000000985e-05, 4.605499999999971e-05, 4.588800000000087e-05, 4.629100000000039e-05, 4.605499999999971e-05, 4.6430999999999556e-05, 4.647199999999879e-05, 4.5...</msg>
<status status="PASS" starttime="20201110 08:37:34.630" endtime="20201110 08:37:34.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.647" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.646" endtime="20201110 08:37:34.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.649" level="INFO">VALUE: [4.5945000000002095e-05, 4.5723000000000985e-05, 4.605499999999971e-05, 4.588800000000087e-05, 4.629100000000039e-05, 4.605499999999971e-05, 4.6430999999999556e-05, 4.647199999999879e-05, 4.566599999999976e-05, 4.604199999999961e-05, 4.5875000000000776e-05, 4.5569000000002247e-05, 4.6111000000001456e-05, 4.6013000000001e-05, 4.605599999999918e-05, 4.5861000000001206e-05, 4.609800000000136e-05, 4.629199999999986e-05, 4.572199999999804e-05, 4.6180999999999306e-05, 4.623600000000158e-05, 4.604100000000014e-05, 4.570800000000194e-05, 4.5875000000000776e-05, 4.5652999999999666e-05, 4.5597000000001386e-05, 4.5639000000000096e-05, 4.627800000000029e-05, 4.622199999999854e-05, 4.627700000000082e-05, 4.554199999999911e-05, 4.5680999999998806e-05, 4.6208999999998446e-05, 4.6194999999998876e-05, 4.5875000000000776e-05, 4.6139000000000596e-05, 4.623599999999811e-05, 4.567999999999933e-05, 4.638899999999738e-05, 4.597199999999829e-05, 4.6389000000000846e-05, 4.577799999999979e-05, 4.622200000000201e-05, 4.570800000000194e-05, 4.620799999999897e-05, 4.586099999999774e-05, 4.629199999999986e-05, 4.5861000000001206e-05, 4.580599999999893e-05, 4.561099999999749e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.648" endtime="20201110 08:37:34.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.643" endtime="20201110 08:37:34.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.653" endtime="20201110 08:37:34.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.656" endtime="20201110 08:37:34.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.655" endtime="20201110 08:37:34.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.651" endtime="20201110 08:37:34.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.284" endtime="20201110 08:37:34.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.283" endtime="20201110 08:37:34.677"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.686" endtime="20201110 08:37:34.703"></status>
</kw>
<msg timestamp="20201110 08:37:34.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.684" endtime="20201110 08:37:34.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.705" endtime="20201110 08:37:34.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.707" endtime="20201110 08:37:34.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.682" endtime="20201110 08:37:34.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.680" endtime="20201110 08:37:34.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.717" endtime="20201110 08:37:35.004"></status>
</kw>
<msg timestamp="20201110 08:37:35.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.716" endtime="20201110 08:37:35.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022167181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.008" endtime="20201110 08:37:35.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.017" endtime="20201110 08:37:35.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.713" endtime="20201110 08:37:35.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.711" endtime="20201110 08:37:35.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.023" level="INFO">${RESULT} = [{'time': 0.022213903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.672199999999904e-05, 'source_diff': 4.672199999999904e-05}, {'time': 0.022274917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:35.020" endtime="20201110 08:37:35.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.037" level="INFO">${ACCURACY} = {'diff': [4.672199999999904e-05, 4.7139000000001596e-05, 4.679099999999742e-05, 4.737499999999881e-05, 4.6958999999999196e-05, 4.73879999999989e-05, 4.749999999999893e-05, 4.6875000000001776e-05, 4.71...</msg>
<status status="PASS" starttime="20201110 08:37:35.025" endtime="20201110 08:37:35.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.042" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.041" endtime="20201110 08:37:35.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.044" level="INFO">VALUE: [4.672199999999904e-05, 4.7139000000001596e-05, 4.679099999999742e-05, 4.737499999999881e-05, 4.6958999999999196e-05, 4.73879999999989e-05, 4.749999999999893e-05, 4.6875000000001776e-05, 4.7125000000002026e-05, 4.745800000000022e-05, 4.673599999999861e-05, 4.720799999999997e-05, 4.698600000000233e-05, 4.704200000000061e-05, 4.6931000000000056e-05, 4.6625000000001526e-05, 4.687499999999831e-05, 4.66939999999999e-05, 4.744400000000065e-05, 4.6959000000002665e-05, 4.7403000000001416e-05, 4.7458999999999696e-05, 4.723599999999911e-05, 4.670799999999947e-05, 4.672200000000251e-05, 4.722199999999954e-05, 4.7375000000002276e-05, 4.7167000000000736e-05, 4.679200000000036e-05, 4.707000000000322e-05, 4.6611000000001956e-05, 4.6875000000001776e-05, 4.677799999999732e-05, 4.6875000000001776e-05, 4.751400000000197e-05, 4.704200000000061e-05, 4.6723000000001985e-05, 4.686199999999821e-05, 4.695799999999972e-05, 4.6875000000001776e-05, 4.6653000000000666e-05, 4.679100000000089e-05, 4.656899999999978e-05, 4.6875000000001776e-05, 4.661099999999849e-05, 4.680599999999993e-05, 4.654199999999664e-05, 4.736099999999924e-05, 4.6639000000001096e-05, 4.6973000000002235e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.043" endtime="20201110 08:37:35.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.038" endtime="20201110 08:37:35.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.048" endtime="20201110 08:37:35.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.051" endtime="20201110 08:37:35.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.050" endtime="20201110 08:37:35.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.046" endtime="20201110 08:37:35.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.678" endtime="20201110 08:37:35.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.678" endtime="20201110 08:37:35.072"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.081" endtime="20201110 08:37:35.098"></status>
</kw>
<msg timestamp="20201110 08:37:35.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.079" endtime="20201110 08:37:35.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.100" endtime="20201110 08:37:35.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.102" endtime="20201110 08:37:35.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.077" endtime="20201110 08:37:35.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.075" endtime="20201110 08:37:35.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.112" endtime="20201110 08:37:35.397"></status>
</kw>
<msg timestamp="20201110 08:37:35.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.111" endtime="20201110 08:37:35.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.402" endtime="20201110 08:37:35.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.410" endtime="20201110 08:37:35.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.108" endtime="20201110 08:37:35.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.106" endtime="20201110 08:37:35.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.417" level="INFO">${RESULT} = [{'time': 0.022470569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.816599999999879e-05, 'source_diff': 4.816599999999879e-05}, {'time': 0.022539514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:35.413" endtime="20201110 08:37:35.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.430" level="INFO">${ACCURACY} = {'diff': [4.816599999999879e-05, 4.749999999999893e-05, 4.780600000000093e-05, 4.781900000000103e-05, 4.749999999999893e-05, 4.8375000000003276e-05, 4.7639000000002096e-05, 4.780500000000146e-05, 4.82...</msg>
<status status="PASS" starttime="20201110 08:37:35.418" endtime="20201110 08:37:35.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.435" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.434" endtime="20201110 08:37:35.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.437" level="INFO">VALUE: [4.816599999999879e-05, 4.749999999999893e-05, 4.780600000000093e-05, 4.781900000000103e-05, 4.749999999999893e-05, 4.8375000000003276e-05, 4.7639000000002096e-05, 4.780500000000146e-05, 4.820800000000097e-05, 4.755500000000121e-05, 4.765199999999872e-05, 4.804100000000214e-05, 4.8375000000003276e-05, 4.8153000000002166e-05, 4.794399999999768e-05, 4.7875000000002776e-05, 4.849999999999993e-05, 4.8417000000001986e-05, 4.8153000000002166e-05, 4.829199999999839e-05, 4.8209000000000446e-05, 4.788899999999888e-05, 4.779199999999789e-05, 4.7708999999999946e-05, 4.788800000000287e-05, 4.847200000000079e-05, 4.837499999999981e-05, 4.843000000000208e-05, 4.840299999999895e-05, 4.762499999999906e-05, 4.762499999999906e-05, 4.798599999999986e-05, 4.787499999999931e-05, 4.813899999999913e-05, 4.813899999999913e-05, 4.7972999999999766e-05, 4.837499999999981e-05, 4.812499999999956e-05, 4.830600000000143e-05, 4.8375000000003276e-05, 4.779099999999842e-05, 4.81940000000014e-05, 4.805499999999824e-05, 4.838899999999938e-05, 4.762499999999906e-05, 4.829099999999892e-05, 4.840299999999895e-05, 4.845800000000122e-05, 4.772200000000004e-05, 4.837499999999981e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.436" endtime="20201110 08:37:35.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.431" endtime="20201110 08:37:35.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.442" endtime="20201110 08:37:35.444"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.447" endtime="20201110 08:37:35.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.445" endtime="20201110 08:37:35.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.439" endtime="20201110 08:37:35.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.073" endtime="20201110 08:37:35.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.072" endtime="20201110 08:37:35.470"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.479" endtime="20201110 08:37:35.496"></status>
</kw>
<msg timestamp="20201110 08:37:35.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.478" endtime="20201110 08:37:35.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.497" endtime="20201110 08:37:35.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.500" endtime="20201110 08:37:35.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.475" endtime="20201110 08:37:35.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.473" endtime="20201110 08:37:35.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.510" endtime="20201110 08:37:35.797"></status>
</kw>
<msg timestamp="20201110 08:37:35.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.509" endtime="20201110 08:37:35.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024093014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024141583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.801" endtime="20201110 08:37:35.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.810" endtime="20201110 08:37:35.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.506" endtime="20201110 08:37:35.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.504" endtime="20201110 08:37:35.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.816" level="INFO">${RESULT} = [{'time': 0.024141583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.856900000000178e-05, 'source_diff': 4.856900000000178e-05}, {'time': 0.024208583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:35.813" endtime="20201110 08:37:35.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.831" level="INFO">${ACCURACY} = {'diff': [4.856900000000178e-05, 4.904099999999967e-05, 4.880499999999899e-05, 4.936100000000124e-05, 4.904099999999967e-05, 4.854200000000211e-05, 4.888899999999988e-05, 4.945799999999875e-05, 4.8875...</msg>
<status status="PASS" starttime="20201110 08:37:35.817" endtime="20201110 08:37:35.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.835" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.834" endtime="20201110 08:37:35.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.838" level="INFO">VALUE: [4.856900000000178e-05, 4.904099999999967e-05, 4.880499999999899e-05, 4.936100000000124e-05, 4.904099999999967e-05, 4.854200000000211e-05, 4.888899999999988e-05, 4.945799999999875e-05, 4.887500000000031e-05, 4.897200000000129e-05, 4.890299999999945e-05, 4.898600000000086e-05, 4.937500000000081e-05, 4.8958999999997727e-05, 4.937500000000081e-05, 4.862500000000006e-05, 4.862500000000006e-05, 4.890199999999997e-05, 4.90270000000001e-05, 4.859700000000092e-05, 4.852800000000254e-05, 4.941699999999952e-05, 4.911099999999752e-05, 4.930599999999896e-05, 4.854199999999864e-05, 4.887500000000031e-05, 4.897200000000129e-05, 4.884700000000117e-05, 4.929200000000286e-05, 4.8709000000000946e-05, 4.852799999999907e-05, 4.8709000000000946e-05, 4.93330000000021e-05, 4.861100000000049e-05, 4.929099999999992e-05, 4.872200000000104e-05, 4.854099999999917e-05, 4.862500000000006e-05, 4.872200000000104e-05, 4.8889000000003346e-05, 4.898600000000086e-05, 4.854200000000211e-05, 4.91529999999997e-05, 4.854200000000211e-05, 4.945799999999875e-05, 4.8959000000001196e-05, 4.9014e-05, 4.886200000000021e-05, 4.912500000000056e-05, 4.862500000000006e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.836" endtime="20201110 08:37:35.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.832" endtime="20201110 08:37:35.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.841" endtime="20201110 08:37:35.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.845" endtime="20201110 08:37:35.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.843" endtime="20201110 08:37:35.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.840" endtime="20201110 08:37:35.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.471" endtime="20201110 08:37:35.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.470" endtime="20201110 08:37:35.866"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.875" endtime="20201110 08:37:35.891"></status>
</kw>
<msg timestamp="20201110 08:37:35.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.873" endtime="20201110 08:37:35.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.893" endtime="20201110 08:37:35.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.895" endtime="20201110 08:37:35.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.870" endtime="20201110 08:37:35.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.868" endtime="20201110 08:37:35.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.905" endtime="20201110 08:37:36.191"></status>
</kw>
<msg timestamp="20201110 08:37:36.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.904" endtime="20201110 08:37:36.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022046097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.196" endtime="20201110 08:37:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.204" endtime="20201110 08:37:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.901" endtime="20201110 08:37:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.900" endtime="20201110 08:37:36.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.211" level="INFO">${RESULT} = [{'time': 0.022046097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.994399999999968e-05, 'source_diff': 4.994399999999968e-05}, {'time': 0.022111097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.207" endtime="20201110 08:37:36.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.224" level="INFO">${ACCURACY} = {'diff': [4.994399999999968e-05, 4.969399999999943e-05, 5.038899999999791e-05, 5.029199999999692e-05, 5.040300000000095e-05, 4.997199999999882e-05, 4.9707999999999e-05, 4.955599999999921e-05, 4.983400...</msg>
<status status="PASS" starttime="20201110 08:37:36.212" endtime="20201110 08:37:36.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.229" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.228" endtime="20201110 08:37:36.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.231" level="INFO">VALUE: [4.994399999999968e-05, 4.969399999999943e-05, 5.038899999999791e-05, 5.029199999999692e-05, 5.040300000000095e-05, 4.997199999999882e-05, 4.9707999999999e-05, 4.955599999999921e-05, 4.983400000000207e-05, 5.0487000000001836e-05, 5.0209000000002446e-05, 5.020899999999898e-05, 4.955499999999974e-05, 5.002699999999763e-05, 4.986099999999827e-05, 4.997200000000229e-05, 5.02079999999995e-05, 4.986099999999827e-05, 5.01530000000007e-05, 5.036199999999824e-05, 4.952800000000007e-05, 5.018099999999984e-05, 5.018099999999984e-05, 4.988900000000088e-05, 5.007000000000275e-05, 4.9972999999998297e-05, 5.005599999999971e-05, 5.0209000000002446e-05, 5.022199999999907e-05, 4.9707999999999e-05, 4.988900000000088e-05, 5.013900000000113e-05, 4.956899999999931e-05, 5.024999999999821e-05, 5.004200000000014e-05, 4.973599999999814e-05, 4.954199999999964e-05, 4.9707999999999e-05, 5.02079999999995e-05, 4.990300000000045e-05, 5.012499999999809e-05, 5.00279999999971e-05, 5.038900000000138e-05, 4.997199999999882e-05, 5.006899999999981e-05, 5.037500000000181e-05, 4.998600000000186e-05, 5.037500000000181e-05, 4.962500000000106e-05, 4.981899999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.230" endtime="20201110 08:37:36.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.225" endtime="20201110 08:37:36.232"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.235" endtime="20201110 08:37:36.236"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.238" endtime="20201110 08:37:36.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.237" endtime="20201110 08:37:36.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.233" endtime="20201110 08:37:36.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.867" endtime="20201110 08:37:36.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.866" endtime="20201110 08:37:36.259"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.268" endtime="20201110 08:37:36.286"></status>
</kw>
<msg timestamp="20201110 08:37:36.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.266" endtime="20201110 08:37:36.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.287" endtime="20201110 08:37:36.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.290" endtime="20201110 08:37:36.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.264" endtime="20201110 08:37:36.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.261" endtime="20201110 08:37:36.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.300" endtime="20201110 08:37:36.585"></status>
</kw>
<msg timestamp="20201110 08:37:36.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02238875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:36.298" endtime="20201110 08:37:36.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022337306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02238875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:36.589" endtime="20201110 08:37:36.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.598" endtime="20201110 08:37:36.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.296" endtime="20201110 08:37:36.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.294" endtime="20201110 08:37:36.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.604" level="INFO">${RESULT} = [{'time': 0.02238875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1443999999997714e-05, 'source_diff': 5.1443999999997714e-05}, {'time': 0.02245775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.601" endtime="20201110 08:37:36.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.618" level="INFO">${ACCURACY} = {'diff': [5.1443999999997714e-05, 5.1207999999997034e-05, 5.087499999999884e-05, 5.129200000000139e-05, 5.119500000000041e-05, 5.055600000000021e-05, 5.0709000000002946e-05, 5.070899999999948e-05, 5.0...</msg>
<status status="PASS" starttime="20201110 08:37:36.605" endtime="20201110 08:37:36.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.622" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.621" endtime="20201110 08:37:36.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.625" level="INFO">VALUE: [5.1443999999997714e-05, 5.1207999999997034e-05, 5.087499999999884e-05, 5.129200000000139e-05, 5.119500000000041e-05, 5.055600000000021e-05, 5.0709000000002946e-05, 5.070899999999948e-05, 5.086200000000221e-05, 5.074999999999871e-05, 5.093099999999712e-05, 5.131899999999759e-05, 5.055500000000074e-05, 5.054199999999717e-05, 5.137499999999934e-05, 5.095800000000025e-05, 5.087500000000231e-05, 5.063899999999816e-05, 5.095800000000025e-05, 5.138900000000238e-05, 5.062499999999859e-05, 5.079199999999742e-05, 5.084800000000264e-05, 5.095899999999973e-05, 5.1401999999999004e-05, 5.1416000000002043e-05, 5.12080000000005e-05, 5.087499999999884e-05, 5.079099999999795e-05, 5.106899999999734e-05, 5.087499999999884e-05, 5.147200000000032e-05, 5.054200000000064e-05, 5.144400000000118e-05, 5.069400000000043e-05, 5.059699999999945e-05, 5.130599999999749e-05, 5.120899999999998e-05, 5.138899999999891e-05, 5.124999999999921e-05, 5.054100000000117e-05, 5.087499999999884e-05, 5.062500000000206e-05, 5.063900000000163e-05, 5.062500000000206e-05, 5.097199999999982e-05, 5.137499999999934e-05, 5.061099999999902e-05, 5.145800000000075e-05, 5.088899999999841e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.623" endtime="20201110 08:37:36.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.619" endtime="20201110 08:37:36.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.628" endtime="20201110 08:37:36.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.632" endtime="20201110 08:37:36.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.630" endtime="20201110 08:37:36.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.627" endtime="20201110 08:37:36.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.260" endtime="20201110 08:37:36.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.259" endtime="20201110 08:37:36.653"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.661" endtime="20201110 08:37:36.679"></status>
</kw>
<msg timestamp="20201110 08:37:36.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.660" endtime="20201110 08:37:36.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.681" endtime="20201110 08:37:36.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.683" endtime="20201110 08:37:36.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.657" endtime="20201110 08:37:36.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.655" endtime="20201110 08:37:36.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.693" endtime="20201110 08:37:36.979"></status>
</kw>
<msg timestamp="20201110 08:37:36.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.692" endtime="20201110 08:37:36.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.983" endtime="20201110 08:37:36.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.992" endtime="20201110 08:37:36.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.689" endtime="20201110 08:37:36.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.687" endtime="20201110 08:37:36.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.999" level="INFO">${RESULT} = [{'time': 0.022282583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.244400000000218e-05, 'source_diff': 5.244400000000218e-05}, {'time': 0.022352569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.995" endtime="20201110 08:37:36.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.012" level="INFO">${ACCURACY} = {'diff': [5.244400000000218e-05, 5.15409999999987e-05, 5.173600000000014e-05, 5.1665999999998824e-05, 5.151399999999903e-05, 5.237500000000034e-05, 5.182000000000103e-05, 5.1708000000001e-05, 5.220799...</msg>
<status status="PASS" starttime="20201110 08:37:37.000" endtime="20201110 08:37:37.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.017" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.016" endtime="20201110 08:37:37.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.019" level="INFO">VALUE: [5.244400000000218e-05, 5.15409999999987e-05, 5.173600000000014e-05, 5.1665999999998824e-05, 5.151399999999903e-05, 5.237500000000034e-05, 5.182000000000103e-05, 5.1708000000001e-05, 5.2207999999998034e-05, 5.188899999999941e-05, 5.163899999999916e-05, 5.162499999999959e-05, 5.227799999999935e-05, 5.220900000000098e-05, 5.218000000000236e-05, 5.223600000000064e-05, 5.1693999999997964e-05, 5.187499999999984e-05, 5.2443999999998714e-05, 5.222200000000107e-05, 5.222200000000107e-05, 5.173600000000014e-05, 5.154200000000164e-05, 5.179100000000242e-05, 5.2221999999997604e-05, 5.204199999999867e-05, 5.2429999999999144e-05, 5.180599999999799e-05, 5.20279999999991e-05, 5.23609999999973e-05, 5.230499999999902e-05, 5.15409999999987e-05, 5.238899999999991e-05, 5.211100000000052e-05, 5.184699999999723e-05, 5.186100000000027e-05, 5.245800000000175e-05, 5.237500000000034e-05, 5.231900000000206e-05, 5.172200000000057e-05, 5.188899999999941e-05, 5.227799999999935e-05, 5.15279999999986e-05, 5.236100000000077e-05, 5.212500000000009e-05, 5.245800000000175e-05, 5.2402000000000004e-05, 5.197200000000082e-05, 5.179099999999895e-05, 5.165299999999873e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.018" endtime="20201110 08:37:37.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.013" endtime="20201110 08:37:37.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.023" endtime="20201110 08:37:37.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.026" endtime="20201110 08:37:37.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.025" endtime="20201110 08:37:37.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.021" endtime="20201110 08:37:37.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.654" endtime="20201110 08:37:37.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.653" endtime="20201110 08:37:37.047"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.056" endtime="20201110 08:37:37.074"></status>
</kw>
<msg timestamp="20201110 08:37:37.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.054" endtime="20201110 08:37:37.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.075" endtime="20201110 08:37:37.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.078" endtime="20201110 08:37:37.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.052" endtime="20201110 08:37:37.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.049" endtime="20201110 08:37:37.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.088" endtime="20201110 08:37:37.374"></status>
</kw>
<msg timestamp="20201110 08:37:37.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.086" endtime="20201110 08:37:37.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022426875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.378" endtime="20201110 08:37:37.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.386" endtime="20201110 08:37:37.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.084" endtime="20201110 08:37:37.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.082" endtime="20201110 08:37:37.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.393" level="INFO">${RESULT} = [{'time': 0.022426875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.327800000000035e-05, 'source_diff': 5.327800000000035e-05}, {'time': 0.022499889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.390" endtime="20201110 08:37:37.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.408" level="INFO">${ACCURACY} = {'diff': [5.327800000000035e-05, 5.313899999999719e-05, 5.3457999999999284e-05, 5.288900000000041e-05, 5.311100000000152e-05, 5.312499999999762e-05, 5.280599999999899e-05, 5.272200000000157e-05, 5.272...</msg>
<status status="PASS" starttime="20201110 08:37:37.394" endtime="20201110 08:37:37.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.412" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.411" endtime="20201110 08:37:37.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.415" level="INFO">VALUE: [5.327800000000035e-05, 5.313899999999719e-05, 5.3457999999999284e-05, 5.288900000000041e-05, 5.311100000000152e-05, 5.312499999999762e-05, 5.280599999999899e-05, 5.272200000000157e-05, 5.2721999999998104e-05, 5.2679999999999394e-05, 5.255499999999927e-05, 5.333299999999916e-05, 5.294400000000268e-05, 5.3193999999999464e-05, 5.287500000000084e-05, 5.327800000000035e-05, 5.322200000000207e-05, 5.263900000000016e-05, 5.2721999999998104e-05, 5.287500000000084e-05, 5.343099999999962e-05, 5.320900000000198e-05, 5.2708000000002e-05, 5.2735999999997674e-05, 5.284699999999823e-05, 5.280499999999952e-05, 5.304199999999967e-05, 5.272200000000157e-05, 5.290299999999998e-05, 5.3443999999999714e-05, 5.3207999999999034e-05, 5.338899999999744e-05, 5.327800000000035e-05, 5.320900000000198e-05, 5.29730000000013e-05, 5.329200000000339e-05, 5.280599999999899e-05, 5.255499999999927e-05, 5.3402000000001004e-05, 5.313900000000066e-05, 5.330500000000002e-05, 5.306899999999934e-05, 5.254199999999917e-05, 5.256899999999884e-05, 5.290299999999998e-05, 5.301400000000053e-05, 5.255600000000221e-05, 5.287499999999737e-05, 5.312500000000109e-05, 5.258400000000135e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.414" endtime="20201110 08:37:37.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.409" endtime="20201110 08:37:37.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.418" endtime="20201110 08:37:37.420"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.422" endtime="20201110 08:37:37.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.420" endtime="20201110 08:37:37.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.417" endtime="20201110 08:37:37.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.048" endtime="20201110 08:37:37.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.047" endtime="20201110 08:37:37.443"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.451" endtime="20201110 08:37:37.469"></status>
</kw>
<msg timestamp="20201110 08:37:37.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.450" endtime="20201110 08:37:37.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.471" endtime="20201110 08:37:37.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.473" endtime="20201110 08:37:37.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.447" endtime="20201110 08:37:37.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.445" endtime="20201110 08:37:37.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.483" endtime="20201110 08:37:37.770"></status>
</kw>
<msg timestamp="20201110 08:37:37.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02227975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:37.482" endtime="20201110 08:37:37.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02227975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:37.774" endtime="20201110 08:37:37.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.783" endtime="20201110 08:37:37.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.479" endtime="20201110 08:37:37.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.477" endtime="20201110 08:37:37.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.789" level="INFO">${RESULT} = [{'time': 0.022334014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4263999999998314e-05, 'source_diff': 5.4263999999998314e-05}, {'time': 0.022411042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:37.786" endtime="20201110 08:37:37.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.803" level="INFO">${ACCURACY} = {'diff': [5.4263999999998314e-05, 5.432000000000006e-05, 5.43609999999993e-05, 5.445899999999976e-05, 5.362499999999812e-05, 5.369500000000291e-05, 5.437499999999887e-05, 5.415300000000123e-05, 5.4235...</msg>
<status status="PASS" starttime="20201110 08:37:37.790" endtime="20201110 08:37:37.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.808" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.807" endtime="20201110 08:37:37.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.811" level="INFO">VALUE: [5.4263999999998314e-05, 5.432000000000006e-05, 5.43609999999993e-05, 5.445899999999976e-05, 5.362499999999812e-05, 5.369500000000291e-05, 5.437499999999887e-05, 5.415300000000123e-05, 5.4235999999999174e-05, 5.405500000000077e-05, 5.431900000000059e-05, 5.4485999999999424e-05, 5.438899999999844e-05, 5.362499999999812e-05, 5.430600000000049e-05, 5.4208000000000034e-05, 5.355599999999974e-05, 5.369500000000291e-05, 5.3749999999998244e-05, 5.422299999999908e-05, 5.370900000000248e-05, 5.355500000000027e-05, 5.3693999999999964e-05, 5.412500000000209e-05, 5.390300000000098e-05, 5.3957999999999784e-05, 5.438899999999844e-05, 5.4444000000000714e-05, 5.423600000000264e-05, 5.355599999999974e-05, 5.3707999999999534e-05, 5.388900000000141e-05, 5.412499999999862e-05, 5.44869999999989e-05, 5.4401999999998535e-05, 5.438900000000191e-05, 5.4387999999998965e-05, 5.379100000000095e-05, 5.405500000000077e-05, 5.3693999999999964e-05, 5.4194000000000464e-05, 5.438899999999844e-05, 5.380599999999999e-05, 5.36670000000003e-05, 5.437499999999887e-05, 5.361099999999855e-05, 5.380599999999999e-05, 5.372299999999858e-05, 5.423699999999865e-05, 5.354200000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.809" endtime="20201110 08:37:37.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.804" endtime="20201110 08:37:37.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.815" endtime="20201110 08:37:37.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.818" endtime="20201110 08:37:37.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.817" endtime="20201110 08:37:37.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.813" endtime="20201110 08:37:37.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.444" endtime="20201110 08:37:37.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.443" endtime="20201110 08:37:37.839"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.848" endtime="20201110 08:37:37.866"></status>
</kw>
<msg timestamp="20201110 08:37:37.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.847" endtime="20201110 08:37:37.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.868" endtime="20201110 08:37:37.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.870" endtime="20201110 08:37:37.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.844" endtime="20201110 08:37:37.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.842" endtime="20201110 08:37:37.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.880" endtime="20201110 08:37:38.166"></status>
</kw>
<msg timestamp="20201110 08:37:38.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.879" endtime="20201110 08:37:38.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.170" endtime="20201110 08:37:38.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.178" endtime="20201110 08:37:38.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.876" endtime="20201110 08:37:38.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.874" endtime="20201110 08:37:38.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.185" level="INFO">${RESULT} = [{'time': 0.022379708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.526400000000278e-05, 'source_diff': 5.526400000000278e-05}, {'time': 0.022457708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:38.182" endtime="20201110 08:37:38.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.199" level="INFO">${ACCURACY} = {'diff': [5.526400000000278e-05, 5.5429999999998675e-05, 5.531899999999812e-05, 5.4958000000000784e-05, 5.5041999999998203e-05, 5.455600000000074e-05, 5.487499999999937e-05, 5.494500000000069e-05, 5.5...</msg>
<status status="PASS" starttime="20201110 08:37:38.186" endtime="20201110 08:37:38.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.203" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.202" endtime="20201110 08:37:38.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.206" level="INFO">VALUE: [5.526400000000278e-05, 5.5429999999998675e-05, 5.531899999999812e-05, 5.4958000000000784e-05, 5.5041999999998203e-05, 5.455600000000074e-05, 5.487499999999937e-05, 5.494500000000069e-05, 5.505599999999777e-05, 5.520900000000051e-05, 5.455600000000074e-05, 5.520899999999704e-05, 5.470900000000001e-05, 5.455500000000127e-05, 5.48609999999998e-05, 5.53610000000003e-05, 5.4485999999999424e-05, 5.488900000000241e-05, 5.4958000000000784e-05, 5.455600000000074e-05, 5.455600000000074e-05, 5.4541999999997703e-05, 5.50280000000021e-05, 5.4930000000001644e-05, 5.4791999999997953e-05, 5.470900000000001e-05, 5.537499999999987e-05, 5.511199999999952e-05, 5.513900000000266e-05, 5.529100000000245e-05, 5.509700000000048e-05, 5.538899999999944e-05, 5.479099999999848e-05, 5.490299999999851e-05, 5.479200000000142e-05, 5.4694000000000964e-05, 5.5236000000000174e-05, 5.537499999999987e-05, 5.5277999999998884e-05, 5.519500000000094e-05, 5.504200000000167e-05, 5.5401999999999535e-05, 5.512499999999962e-05, 5.5513999999999564e-05, 5.509700000000048e-05, 5.537500000000334e-05, 5.5458000000001284e-05, 5.5027999999998634e-05, 5.479200000000142e-05, 5.5208000000001034e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.204" endtime="20201110 08:37:38.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.200" endtime="20201110 08:37:38.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.209" endtime="20201110 08:37:38.211"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.213" endtime="20201110 08:37:38.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.211" endtime="20201110 08:37:38.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.208" endtime="20201110 08:37:38.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.840" endtime="20201110 08:37:38.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.840" endtime="20201110 08:37:38.234"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.243" endtime="20201110 08:37:38.259"></status>
</kw>
<msg timestamp="20201110 08:37:38.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.241" endtime="20201110 08:37:38.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.261" endtime="20201110 08:37:38.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.263" endtime="20201110 08:37:38.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.238" endtime="20201110 08:37:38.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.236" endtime="20201110 08:37:38.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.273" endtime="20201110 08:37:38.559"></status>
</kw>
<msg timestamp="20201110 08:37:38.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.272" endtime="20201110 08:37:38.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.564" endtime="20201110 08:37:38.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.572" endtime="20201110 08:37:38.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.269" endtime="20201110 08:37:38.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.268" endtime="20201110 08:37:38.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.579" level="INFO">${RESULT} = [{'time': 0.022245431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5777999999999384e-05, 'source_diff': 5.5777999999999384e-05}, {'time': 0.022316375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:38.576" endtime="20201110 08:37:38.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.592" level="INFO">${ACCURACY} = {'diff': [5.5777999999999384e-05, 5.6305999999999023e-05, 5.5722000000001104e-05, 5.607000000000181e-05, 5.6222000000001604e-05, 5.587500000000037e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5....</msg>
<status status="PASS" starttime="20201110 08:37:38.580" endtime="20201110 08:37:38.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.597" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.596" endtime="20201110 08:37:38.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.600" level="INFO">VALUE: [5.5777999999999384e-05, 5.6305999999999023e-05, 5.5722000000001104e-05, 5.607000000000181e-05, 5.6222000000001604e-05, 5.587500000000037e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.6137999999997246e-05, 5.629099999999998e-05, 5.6193999999998995e-05, 5.563899999999969e-05, 5.6263999999996844e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.63610000000013e-05, 5.5986000000000924e-05, 5.5541999999998704e-05, 5.5707999999998065e-05, 5.588899999999994e-05, 5.612499999999715e-05, 5.6291999999999454e-05, 5.606899999999887e-05, 5.60549999999993e-05, 5.6388000000000965e-05, 5.5957999999998315e-05, 5.60549999999993e-05, 5.6236000000001174e-05, 5.6027999999999634e-05, 5.6277999999999884e-05, 5.63610000000013e-05, 5.6236000000001174e-05, 5.587500000000037e-05, 5.6472000000001854e-05, 5.638899999999697e-05, 5.6277999999999884e-05, 5.5541999999998704e-05, 5.570900000000101e-05, 5.570900000000101e-05, 5.637500000000087e-05, 5.5957999999998315e-05, 5.587500000000037e-05, 5.561100000000055e-05, 5.6249999999997274e-05, 5.6235999999997704e-05, 5.637500000000087e-05, 5.579200000000242e-05, 5.641699999999958e-05, 5.606999999999834e-05, 5.615299999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.598" endtime="20201110 08:37:38.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.593" endtime="20201110 08:37:38.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.603" endtime="20201110 08:37:38.605"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.607" endtime="20201110 08:37:38.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.605" endtime="20201110 08:37:38.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.602" endtime="20201110 08:37:38.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.235" endtime="20201110 08:37:38.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.234" endtime="20201110 08:37:38.628"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.636" endtime="20201110 08:37:38.653"></status>
</kw>
<msg timestamp="20201110 08:37:38.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.635" endtime="20201110 08:37:38.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.655" endtime="20201110 08:37:38.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.657" endtime="20201110 08:37:38.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.632" endtime="20201110 08:37:38.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.630" endtime="20201110 08:37:38.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.667" endtime="20201110 08:37:38.954"></status>
</kw>
<msg timestamp="20201110 08:37:38.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.666" endtime="20201110 08:37:38.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022048347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.958" endtime="20201110 08:37:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.966" endtime="20201110 08:37:38.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.663" endtime="20201110 08:37:38.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.661" endtime="20201110 08:37:38.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.973" level="INFO">${RESULT} = [{'time': 0.022105625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7278000000000884e-05, 'source_diff': 5.7278000000000884e-05}, {'time': 0.022178653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:38.970" endtime="20201110 08:37:38.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.988" level="INFO">${ACCURACY} = {'diff': [5.7278000000000884e-05, 5.661099999999808e-05, 5.7292000000000454e-05, 5.7055999999999774e-05, 5.722300000000208e-05, 5.6528000000000134e-05, 5.7401999999998066e-05, 5.6957999999999315e-05, ...</msg>
<status status="PASS" starttime="20201110 08:37:38.974" endtime="20201110 08:37:38.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.992" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.991" endtime="20201110 08:37:38.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.995" level="INFO">VALUE: [5.7278000000000884e-05, 5.661099999999808e-05, 5.7292000000000454e-05, 5.7055999999999774e-05, 5.722300000000208e-05, 5.6528000000000134e-05, 5.7401999999998066e-05, 5.6957999999999315e-05, 5.7208000000003034e-05, 5.740299999999754e-05, 5.6971999999998885e-05, 5.6528000000000134e-05, 5.7221999999999135e-05, 5.680500000000005e-05, 5.713899999999772e-05, 5.716700000000033e-05, 5.6957999999999315e-05, 5.687500000000137e-05, 5.6764000000000814e-05, 5.68749999999979e-05, 5.743100000000015e-05, 5.736200000000177e-05, 5.662500000000112e-05, 5.677699999999744e-05, 5.6721999999998635e-05, 5.740300000000101e-05, 5.713900000000119e-05, 5.708299999999944e-05, 5.6957999999999315e-05, 5.7042000000000204e-05, 5.683399999999866e-05, 5.6805999999999524e-05, 5.7042000000000204e-05, 5.7042000000000204e-05, 5.670900000000201e-05, 5.720899999999904e-05, 5.6666000000000355e-05, 5.7236000000002174e-05, 5.7402000000001535e-05, 5.6971999999998885e-05, 5.743100000000015e-05, 5.6763999999997344e-05, 5.7207999999999565e-05, 5.7207999999999565e-05, 5.655600000000274e-05, 5.687500000000137e-05, 5.727699999999794e-05, 5.6528000000000134e-05, 5.720900000000251e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.993" endtime="20201110 08:37:38.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.989" endtime="20201110 08:37:38.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.998" endtime="20201110 08:37:39.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.002" endtime="20201110 08:37:39.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.000" endtime="20201110 08:37:39.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.997" endtime="20201110 08:37:39.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.628" endtime="20201110 08:37:39.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.628" endtime="20201110 08:37:39.023"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.031" endtime="20201110 08:37:39.049"></status>
</kw>
<msg timestamp="20201110 08:37:39.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.030" endtime="20201110 08:37:39.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.051" endtime="20201110 08:37:39.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.053" endtime="20201110 08:37:39.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.027" endtime="20201110 08:37:39.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.025" endtime="20201110 08:37:39.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.064" endtime="20201110 08:37:39.349"></status>
</kw>
<msg timestamp="20201110 08:37:39.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.062" endtime="20201110 08:37:39.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021939319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.354" endtime="20201110 08:37:39.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.362" endtime="20201110 08:37:39.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.059" endtime="20201110 08:37:39.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.058" endtime="20201110 08:37:39.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.369" level="INFO">${RESULT} = [{'time': 0.021997097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7778000000001384e-05, 'source_diff': 5.7778000000001384e-05}, {'time': 0.022070125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.365" endtime="20201110 08:37:39.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.382" level="INFO">${ACCURACY} = {'diff': [5.7778000000001384e-05, 5.765299999999779e-05, 5.7986000000002924e-05, 5.8207999999997095e-05, 5.8070000000000344e-05, 5.78610000000028e-05, 5.8320000000000594e-05, 5.78749999999989e-05, 5.8...</msg>
<status status="PASS" starttime="20201110 08:37:39.370" endtime="20201110 08:37:39.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.387" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.386" endtime="20201110 08:37:39.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.389" level="INFO">VALUE: [5.7778000000001384e-05, 5.765299999999779e-05, 5.7986000000002924e-05, 5.8207999999997095e-05, 5.8070000000000344e-05, 5.78610000000028e-05, 5.8320000000000594e-05, 5.78749999999989e-05, 5.8291999999997984e-05, 5.8028000000001634e-05, 5.7722000000003104e-05, 5.78749999999989e-05, 5.779099999999801e-05, 5.83749999999994e-05, 5.7764000000001814e-05, 5.790300000000151e-05, 5.8472000000000385e-05, 5.769499999999997e-05, 5.766700000000083e-05, 5.83749999999994e-05, 5.845900000000029e-05, 5.773700000000215e-05, 5.7542000000000704e-05, 5.83749999999994e-05, 5.7971999999999885e-05, 5.8222000000000135e-05, 5.8264000000002314e-05, 5.8222000000000135e-05, 5.7708000000000065e-05, 5.831899999999765e-05, 5.8458000000000815e-05, 5.7806000000000524e-05, 5.7971999999999885e-05, 5.815299999999829e-05, 5.787500000000237e-05, 5.812499999999915e-05, 5.8485999999999955e-05, 5.788900000000194e-05, 5.7791999999997484e-05, 5.8208000000000565e-05, 5.80550000000013e-05, 5.790300000000151e-05, 5.7958000000000315e-05, 5.793100000000065e-05, 5.813900000000219e-05, 5.8306000000001024e-05, 5.7708000000000065e-05, 5.7542000000000704e-05, 5.83749999999994e-05, 5.812500000000262e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.388" endtime="20201110 08:37:39.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.383" endtime="20201110 08:37:39.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.396" endtime="20201110 08:37:39.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.400" endtime="20201110 08:37:39.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.398" endtime="20201110 08:37:39.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.395" endtime="20201110 08:37:39.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.024" endtime="20201110 08:37:39.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.023" endtime="20201110 08:37:39.421"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.429" endtime="20201110 08:37:39.447"></status>
</kw>
<msg timestamp="20201110 08:37:39.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.428" endtime="20201110 08:37:39.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.448" endtime="20201110 08:37:39.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.451" endtime="20201110 08:37:39.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.425" endtime="20201110 08:37:39.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.423" endtime="20201110 08:37:39.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.461" endtime="20201110 08:37:39.747"></status>
</kw>
<msg timestamp="20201110 08:37:39.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.460" endtime="20201110 08:37:39.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.752" endtime="20201110 08:37:39.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.760" endtime="20201110 08:37:39.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.457" endtime="20201110 08:37:39.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.455" endtime="20201110 08:37:39.763"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.767" level="INFO">${RESULT} = [{'time': 0.022056389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861100000000008e-05, 'source_diff': 5.861100000000008e-05}, {'time': 0.022132375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:39.764" endtime="20201110 08:37:39.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.781" level="INFO">${ACCURACY} = {'diff': [5.861100000000008e-05, 5.9193999999998526e-05, 5.9222000000001135e-05, 5.8722000000000635e-05, 5.8542000000001704e-05, 5.9055999999998304e-05, 5.8555999999997804e-05, 5.9041999999998734e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:39.768" endtime="20201110 08:37:39.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.785" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.784" endtime="20201110 08:37:39.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.788" level="INFO">VALUE: [5.861100000000008e-05, 5.9193999999998526e-05, 5.9222000000001135e-05, 5.8722000000000635e-05, 5.8542000000001704e-05, 5.9055999999998304e-05, 5.8555999999997804e-05, 5.9041999999998734e-05, 5.8985999999996985e-05, 5.854100000000223e-05, 5.88749999999999e-05, 5.913899999999972e-05, 5.929099999999951e-05, 5.9208000000001565e-05, 5.938899999999997e-05, 5.895900000000079e-05, 5.9236000000000705e-05, 5.8722000000000635e-05, 5.9041999999998734e-05, 5.938899999999997e-05, 5.863899999999922e-05, 5.912500000000015e-05, 5.9138000000000246e-05, 5.862499999999965e-05, 5.911099999999711e-05, 5.931900000000212e-05, 5.93750000000004e-05, 5.9277999999999414e-05, 5.8499999999999525e-05, 5.9056000000001774e-05, 5.9221999999997665e-05, 5.866700000000183e-05, 5.936099999999736e-05, 5.8806000000001524e-05, 5.9027999999999164e-05, 5.9333999999997694e-05, 5.880499999999858e-05, 5.9000000000000025e-05, 5.904099999999926e-05, 5.938899999999997e-05, 5.912500000000015e-05, 5.85550000000018e-05, 5.9458000000001815e-05, 5.9027999999999164e-05, 5.890299999999904e-05, 5.913899999999972e-05, 5.8778000000002384e-05, 5.888899999999947e-05, 5.894500000000122e-05, 5.8542000000001704e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.786" endtime="20201110 08:37:39.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.782" endtime="20201110 08:37:39.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.791" endtime="20201110 08:37:39.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.795" endtime="20201110 08:37:39.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.793" endtime="20201110 08:37:39.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.790" endtime="20201110 08:37:39.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.422" endtime="20201110 08:37:39.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.421" endtime="20201110 08:37:39.816"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.825" endtime="20201110 08:37:39.842"></status>
</kw>
<msg timestamp="20201110 08:37:39.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.823" endtime="20201110 08:37:39.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.844" endtime="20201110 08:37:39.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.846" endtime="20201110 08:37:39.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.820" endtime="20201110 08:37:39.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.818" endtime="20201110 08:37:39.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.857" endtime="20201110 08:37:40.143"></status>
</kw>
<msg timestamp="20201110 08:37:40.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02218475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:39.855" endtime="20201110 08:37:40.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02218475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:40.148" endtime="20201110 08:37:40.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.156" endtime="20201110 08:37:40.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.852" endtime="20201110 08:37:40.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.851" endtime="20201110 08:37:40.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.163" level="INFO">${RESULT} = [{'time': 0.02218475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.988900000000047e-05, 'source_diff': 5.988900000000047e-05}, {'time': 0.022263764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:40.159" endtime="20201110 08:37:40.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.177" level="INFO">${ACCURACY} = {'diff': [5.988900000000047e-05, 6.0055999999999304e-05, 6.037499999999793e-05, 6.044499999999925e-05, 5.987499999999743e-05, 5.962500000000065e-05, 6.045899999999882e-05, 6.0207999999999096e-05, 5.96...</msg>
<status status="PASS" starttime="20201110 08:37:40.164" endtime="20201110 08:37:40.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.181" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.180" endtime="20201110 08:37:40.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.184" level="INFO">VALUE: [5.988900000000047e-05, 6.0055999999999304e-05, 6.037499999999793e-05, 6.044499999999925e-05, 5.987499999999743e-05, 5.962500000000065e-05, 6.045899999999882e-05, 6.0207999999999096e-05, 5.9693999999999026e-05, 5.9736000000001205e-05, 5.955499999999933e-05, 6.03750000000014e-05, 5.963900000000022e-05, 6.015300000000029e-05, 6.0457999999999346e-05, 5.9971999999998415e-05, 6.0042000000003204e-05, 5.9555999999998804e-05, 6.0236000000001705e-05, 6.019500000000247e-05, 6.040299999999707e-05, 6.0514000000001095e-05, 6.0207999999999096e-05, 5.98750000000009e-05, 6.015300000000029e-05, 6.0457999999999346e-05, 5.9486000000000955e-05, 6.0222000000002135e-05, 5.9569999999998374e-05, 5.9555999999998804e-05, 6.0042000000003204e-05, 6.0041999999999734e-05, 6.0402000000001066e-05, 5.9652000000000316e-05, 5.979100000000001e-05, 6.0401999999997597e-05, 5.965299999999979e-05, 6.030500000000008e-05, 6.041700000000011e-05, 5.9986000000001455e-05, 5.98750000000009e-05, 5.9986000000001455e-05, 6.0041999999999734e-05, 6.0221999999998665e-05, 6.0430000000000206e-05, 5.9735999999997735e-05, 6.008300000000244e-05, 6.0194999999999e-05, 5.9862000000000803e-05, 5.9750000000000775e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.182" endtime="20201110 08:37:40.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.177" endtime="20201110 08:37:40.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.187" endtime="20201110 08:37:40.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.191" endtime="20201110 08:37:40.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.189" endtime="20201110 08:37:40.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.186" endtime="20201110 08:37:40.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.817" endtime="20201110 08:37:40.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.816" endtime="20201110 08:37:40.211"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.220" endtime="20201110 08:37:40.238"></status>
</kw>
<msg timestamp="20201110 08:37:40.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.219" endtime="20201110 08:37:40.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.240" endtime="20201110 08:37:40.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.242" endtime="20201110 08:37:40.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.216" endtime="20201110 08:37:40.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.214" endtime="20201110 08:37:40.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.252" endtime="20201110 08:37:40.538"></status>
</kw>
<msg timestamp="20201110 08:37:40.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:40.251" endtime="20201110 08:37:40.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022284542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:40.542" endtime="20201110 08:37:40.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.551" endtime="20201110 08:37:40.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.248" endtime="20201110 08:37:40.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.246" endtime="20201110 08:37:40.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.558" level="INFO">${RESULT} = [{'time': 0.022346, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.145800000000035e-05, 'source_diff': 6.145800000000035e-05}, {'time': 0.022428986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:40.554" endtime="20201110 08:37:40.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.572" level="INFO">${ACCURACY} = {'diff': [6.145800000000035e-05, 6.08750000000019e-05, 6.0792000000000485e-05, 6.0930000000000706e-05, 6.129199999999752e-05, 6.084700000000276e-05, 6.0651999999997847e-05, 6.0792000000000485e-05, 6.0...</msg>
<status status="PASS" starttime="20201110 08:37:40.559" endtime="20201110 08:37:40.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.577" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.576" endtime="20201110 08:37:40.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.579" level="INFO">VALUE: [6.145800000000035e-05, 6.08750000000019e-05, 6.0792000000000485e-05, 6.0930000000000706e-05, 6.129199999999752e-05, 6.084700000000276e-05, 6.0651999999997847e-05, 6.0792000000000485e-05, 6.0707999999999596e-05, 6.0721999999999166e-05, 6.0694000000000026e-05, 6.0485999999998485e-05, 6.111100000000258e-05, 6.119400000000053e-05, 6.137499999999893e-05, 6.090300000000104e-05, 6.12080000000001e-05, 6.0707999999999596e-05, 6.10690000000004e-05, 6.072299999999864e-05, 6.068099999999993e-05, 6.070899999999907e-05, 6.104100000000126e-05, 6.138900000000197e-05, 6.142999999999774e-05, 6.0707999999999596e-05, 6.138900000000197e-05, 6.066700000000036e-05, 6.147199999999992e-05, 6.0721999999999166e-05, 6.087499999999843e-05, 6.063900000000122e-05, 6.063900000000122e-05, 6.113899999999825e-05, 6.113900000000172e-05, 6.097300000000236e-05, 6.0542000000000235e-05, 6.0680000000000456e-05, 6.105499999999736e-05, 6.0499999999998055e-05, 6.055500000000033e-05, 6.0985999999998985e-05, 6.140299999999807e-05, 6.130599999999709e-05, 6.122199999999967e-05, 6.1028000000001165e-05, 6.122199999999967e-05, 6.0555999999999804e-05, 6.0528000000000665e-05, 6.123599999999924e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.578" endtime="20201110 08:37:40.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.573" endtime="20201110 08:37:40.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.583" endtime="20201110 08:37:40.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.586" endtime="20201110 08:37:40.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.585" endtime="20201110 08:37:40.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.581" endtime="20201110 08:37:40.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.212" endtime="20201110 08:37:40.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.212" endtime="20201110 08:37:40.607"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.616" endtime="20201110 08:37:40.634"></status>
</kw>
<msg timestamp="20201110 08:37:40.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.614" endtime="20201110 08:37:40.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.635" endtime="20201110 08:37:40.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.638" endtime="20201110 08:37:40.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.612" endtime="20201110 08:37:40.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.609" endtime="20201110 08:37:40.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.648" endtime="20201110 08:37:40.933"></status>
</kw>
<msg timestamp="20201110 08:37:40.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.646" endtime="20201110 08:37:40.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.938" endtime="20201110 08:37:40.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.946" endtime="20201110 08:37:40.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.644" endtime="20201110 08:37:40.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.642" endtime="20201110 08:37:40.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.953" level="INFO">${RESULT} = [{'time': 0.022112236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.161099999999961e-05, 'source_diff': 6.161099999999961e-05}, {'time': 0.022194292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.949" endtime="20201110 08:37:40.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.966" level="INFO">${ACCURACY} = {'diff': [6.161099999999961e-05, 6.17499999999993e-05, 6.191700000000161e-05, 6.230599999999809e-05, 6.234699999999732e-05, 6.197299999999989e-05, 6.222300000000014e-05, 6.237499999999993e-05, 6.21249...</msg>
<status status="PASS" starttime="20201110 08:37:40.954" endtime="20201110 08:37:40.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.971" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.970" endtime="20201110 08:37:40.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.973" level="INFO">VALUE: [6.161099999999961e-05, 6.17499999999993e-05, 6.191700000000161e-05, 6.230599999999809e-05, 6.234699999999732e-05, 6.197299999999989e-05, 6.222300000000014e-05, 6.237499999999993e-05, 6.212499999999968e-05, 6.230499999999861e-05, 6.154099999999829e-05, 6.1888999999999e-05, 6.216700000000186e-05, 6.215299999999882e-05, 6.248600000000049e-05, 6.155599999999734e-05, 6.1888999999999e-05, 6.215299999999882e-05, 6.177800000000191e-05, 6.154199999999777e-05, 6.190200000000257e-05, 6.158399999999994e-05, 6.197200000000042e-05, 6.205500000000183e-05, 6.165199999999885e-05, 6.215299999999882e-05, 6.20690000000014e-05, 6.155599999999734e-05, 6.186099999999986e-05, 6.195800000000085e-05, 6.188900000000247e-05, 6.211100000000011e-05, 6.162499999999918e-05, 6.194500000000075e-05, 6.202800000000216e-05, 6.209700000000054e-05, 6.18750000000029e-05, 6.213899999999925e-05, 6.197200000000042e-05, 6.22219999999972e-05, 6.154199999999777e-05, 6.241700000000211e-05, 6.180599999999759e-05, 6.169499999999703e-05, 6.204200000000173e-05, 6.16950000000005e-05, 6.204200000000173e-05, 6.1888999999999e-05, 6.244400000000178e-05, 6.181900000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.972" endtime="20201110 08:37:40.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.967" endtime="20201110 08:37:40.975"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.977" endtime="20201110 08:37:40.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.980" endtime="20201110 08:37:41.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.979" endtime="20201110 08:37:41.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.975" endtime="20201110 08:37:41.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.608" endtime="20201110 08:37:41.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.607" endtime="20201110 08:37:41.001"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.010" endtime="20201110 08:37:41.028"></status>
</kw>
<msg timestamp="20201110 08:37:41.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.008" endtime="20201110 08:37:41.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.029" endtime="20201110 08:37:41.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.032" endtime="20201110 08:37:41.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.006" endtime="20201110 08:37:41.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.004" endtime="20201110 08:37:41.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.042" endtime="20201110 08:37:41.327"></status>
</kw>
<msg timestamp="20201110 08:37:41.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.040" endtime="20201110 08:37:41.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022287153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.331" endtime="20201110 08:37:41.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.339" endtime="20201110 08:37:41.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.038" endtime="20201110 08:37:41.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.036" endtime="20201110 08:37:41.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.346" level="INFO">${RESULT} = [{'time': 0.022287153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.261100000000061e-05, 'source_diff': 6.261100000000061e-05}, {'time': 0.022373153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.343" endtime="20201110 08:37:41.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.360" level="INFO">${ACCURACY} = {'diff': [6.261100000000061e-05, 6.287500000000043e-05, 6.343099999999921e-05, 6.304199999999927e-05, 6.254200000000223e-05, 6.29020000000001e-05, 6.266699999999889e-05, 6.283299999999825e-05, 6.33889...</msg>
<status status="PASS" starttime="20201110 08:37:41.347" endtime="20201110 08:37:41.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.364" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.363" endtime="20201110 08:37:41.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.367" level="INFO">VALUE: [6.261100000000061e-05, 6.287500000000043e-05, 6.343099999999921e-05, 6.304199999999927e-05, 6.254200000000223e-05, 6.29020000000001e-05, 6.266699999999889e-05, 6.283299999999825e-05, 6.338899999999703e-05, 6.330499999999961e-05, 6.326400000000038e-05, 6.25560000000018e-05, 6.340300000000007e-05, 6.326400000000038e-05, 6.287500000000043e-05, 6.345900000000182e-05, 6.25279999999992e-05, 6.32089999999981e-05, 6.27080000000016e-05, 6.255499999999886e-05, 6.254099999999929e-05, 6.25279999999992e-05, 6.287500000000043e-05, 6.30829999999985e-05, 6.347200000000192e-05, 6.319499999999853e-05, 6.254199999999877e-05, 6.272200000000117e-05, 6.320900000000157e-05, 6.30279999999997e-05, 6.34020000000006e-05, 6.262500000000018e-05, 6.312500000000068e-05, 6.347200000000192e-05, 6.337500000000093e-05, 6.295800000000185e-05, 6.270799999999813e-05, 6.334699999999832e-05, 6.27500000000003e-05, 6.265299999999932e-05, 6.336100000000136e-05, 6.297300000000089e-05, 6.337500000000093e-05, 6.294500000000175e-05, 6.288800000000053e-05, 6.263800000000028e-05, 6.348600000000149e-05, 6.304099999999979e-05, 6.255499999999886e-05, 6.305499999999936e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.365" endtime="20201110 08:37:41.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.361" endtime="20201110 08:37:41.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.370" endtime="20201110 08:37:41.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.374" endtime="20201110 08:37:41.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.372" endtime="20201110 08:37:41.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.369" endtime="20201110 08:37:41.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.002" endtime="20201110 08:37:41.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.002" endtime="20201110 08:37:41.395"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.403" endtime="20201110 08:37:41.422"></status>
</kw>
<msg timestamp="20201110 08:37:41.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.402" endtime="20201110 08:37:41.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.423" endtime="20201110 08:37:41.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.426" endtime="20201110 08:37:41.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.399" endtime="20201110 08:37:41.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.397" endtime="20201110 08:37:41.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.436" endtime="20201110 08:37:41.722"></status>
</kw>
<msg timestamp="20201110 08:37:41.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.435" endtime="20201110 08:37:41.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022354139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022417861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.726" endtime="20201110 08:37:41.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.734" endtime="20201110 08:37:41.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.432" endtime="20201110 08:37:41.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.430" endtime="20201110 08:37:41.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.741" level="INFO">${RESULT} = [{'time': 0.022417861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.372200000000217e-05, 'source_diff': 6.372200000000217e-05}, {'time': 0.022505903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.737" endtime="20201110 08:37:41.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.754" level="INFO">${ACCURACY} = {'diff': [6.372200000000217e-05, 6.447199999999945e-05, 6.415299999999735e-05, 6.37630000000014e-05, 6.436099999999889e-05, 6.362500000000118e-05, 6.363900000000075e-05, 6.412500000000168e-05, 6.38189...</msg>
<status status="PASS" starttime="20201110 08:37:41.742" endtime="20201110 08:37:41.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.759" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.758" endtime="20201110 08:37:41.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.761" level="INFO">VALUE: [6.372200000000217e-05, 6.447199999999945e-05, 6.415299999999735e-05, 6.37630000000014e-05, 6.436099999999889e-05, 6.362500000000118e-05, 6.363900000000075e-05, 6.412500000000168e-05, 6.381899999999968e-05, 6.373599999999827e-05, 6.369399999999956e-05, 6.40280000000007e-05, 6.355599999999934e-05, 6.386100000000186e-05, 6.429199999999705e-05, 6.37219999999987e-05, 6.372200000000217e-05, 6.42089999999991e-05, 6.445799999999988e-05, 6.361099999999814e-05, 6.444499999999978e-05, 6.351299999999768e-05, 6.437500000000193e-05, 6.393000000000024e-05, 6.355499999999986e-05, 6.388899999999753e-05, 6.398599999999852e-05, 6.42630000000019e-05, 6.404200000000027e-05, 6.42219999999992e-05, 6.420900000000257e-05, 6.372299999999817e-05, 6.443000000000074e-05, 6.379100000000054e-05, 6.388800000000153e-05, 6.384700000000229e-05, 6.405500000000036e-05, 6.37219999999987e-05, 6.387500000000143e-05, 6.416700000000039e-05, 6.397200000000242e-05, 6.42500000000018e-05, 6.420799999999963e-05, 6.3889000000001e-05, 6.412500000000168e-05, 6.394499999999928e-05, 6.42639999999979e-05, 6.405500000000036e-05, 6.437500000000193e-05, 6.443000000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.760" endtime="20201110 08:37:41.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.755" endtime="20201110 08:37:41.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.765" endtime="20201110 08:37:41.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.768" endtime="20201110 08:37:41.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.767" endtime="20201110 08:37:41.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.763" endtime="20201110 08:37:41.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.396" endtime="20201110 08:37:41.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.395" endtime="20201110 08:37:41.789"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.798" endtime="20201110 08:37:41.817"></status>
</kw>
<msg timestamp="20201110 08:37:41.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.796" endtime="20201110 08:37:41.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.818" endtime="20201110 08:37:41.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.821" endtime="20201110 08:37:41.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.794" endtime="20201110 08:37:41.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.792" endtime="20201110 08:37:41.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.831" endtime="20201110 08:37:42.117"></status>
</kw>
<msg timestamp="20201110 08:37:42.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.829" endtime="20201110 08:37:42.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022417444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.121" endtime="20201110 08:37:42.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.129" endtime="20201110 08:37:42.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.827" endtime="20201110 08:37:42.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.825" endtime="20201110 08:37:42.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.136" level="INFO">${RESULT} = [{'time': 0.022482708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52639999999989e-05, 'source_diff': 6.52639999999989e-05}, {'time': 0.022571722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:42.133" endtime="20201110 08:37:42.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.151" level="INFO">${ACCURACY} = {'diff': [6.52639999999989e-05, 6.513899999999878e-05, 6.547200000000045e-05, 6.486099999999939e-05, 6.529200000000152e-05, 6.488899999999853e-05, 6.477799999999798e-05, 6.536099999999989e-05, 6.51390...</msg>
<status status="PASS" starttime="20201110 08:37:42.137" endtime="20201110 08:37:42.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.155" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.154" endtime="20201110 08:37:42.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.158" level="INFO">VALUE: [6.52639999999989e-05, 6.513899999999878e-05, 6.547200000000045e-05, 6.486099999999939e-05, 6.529200000000152e-05, 6.488899999999853e-05, 6.477799999999798e-05, 6.536099999999989e-05, 6.513900000000225e-05, 6.480600000000059e-05, 6.504200000000127e-05, 6.538899999999903e-05, 6.495800000000038e-05, 6.49029999999981e-05, 6.483300000000025e-05, 6.504200000000127e-05, 6.454200000000077e-05, 6.520800000000063e-05, 6.52220000000002e-05, 6.484699999999982e-05, 6.498600000000299e-05, 6.455500000000086e-05, 6.455500000000086e-05, 6.47219999999997e-05, 6.52220000000002e-05, 6.4889000000002e-05, 6.513900000000225e-05, 6.463899999999828e-05, 6.515299999999835e-05, 6.487499999999896e-05, 6.509700000000007e-05, 6.47219999999997e-05, 6.501399999999866e-05, 6.52090000000001e-05, 6.4583e-05, 6.506900000000093e-05, 6.50280000000017e-05, 6.520800000000063e-05, 6.538899999999903e-05, 6.512500000000268e-05, 6.513900000000225e-05, 6.545799999999741e-05, 6.469400000000056e-05, 6.520800000000063e-05, 6.50700000000004e-05, 6.501399999999866e-05, 6.505600000000084e-05, 6.504200000000127e-05, 6.469500000000003e-05, 6.505499999999789e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.156" endtime="20201110 08:37:42.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.152" endtime="20201110 08:37:42.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.161" endtime="20201110 08:37:42.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.165" endtime="20201110 08:37:42.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.163" endtime="20201110 08:37:42.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.160" endtime="20201110 08:37:42.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.790" endtime="20201110 08:37:42.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.790" endtime="20201110 08:37:42.186"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.194" endtime="20201110 08:37:42.212"></status>
</kw>
<msg timestamp="20201110 08:37:42.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.193" endtime="20201110 08:37:42.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.214" endtime="20201110 08:37:42.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.216" endtime="20201110 08:37:42.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.190" endtime="20201110 08:37:42.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.188" endtime="20201110 08:37:42.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.226" endtime="20201110 08:37:42.512"></status>
</kw>
<msg timestamp="20201110 08:37:42.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.225" endtime="20201110 08:37:42.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022033347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.516" endtime="20201110 08:37:42.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.525" endtime="20201110 08:37:42.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.222" endtime="20201110 08:37:42.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.221" endtime="20201110 08:37:42.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.531" level="INFO">${RESULT} = [{'time': 0.022033347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.59029999999991e-05, 'source_diff': 6.59029999999991e-05}, {'time': 0.022114389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:42.528" endtime="20201110 08:37:42.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.545" level="INFO">${ACCURACY} = {'diff': [6.59029999999991e-05, 6.60700000000014e-05, 6.620799999999816e-05, 6.569400000000156e-05, 6.55419999999983e-05, 6.595800000000138e-05, 6.595899999999738e-05, 6.555499999999839e-05, 6.6415999...</msg>
<status status="PASS" starttime="20201110 08:37:42.532" endtime="20201110 08:37:42.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.549" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.548" endtime="20201110 08:37:42.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.552" level="INFO">VALUE: [6.59029999999991e-05, 6.60700000000014e-05, 6.620799999999816e-05, 6.569400000000156e-05, 6.55419999999983e-05, 6.595800000000138e-05, 6.595899999999738e-05, 6.555499999999839e-05, 6.64159999999997e-05, 6.612500000000021e-05, 6.579099999999907e-05, 6.57220000000007e-05, 6.569400000000156e-05, 6.634699999999785e-05, 6.597200000000095e-05, 6.64029999999996e-05, 6.629199999999905e-05, 6.555600000000134e-05, 6.613899999999978e-05, 6.60419999999988e-05, 6.62229999999972e-05, 6.554200000000177e-05, 6.62090000000011e-05, 6.573600000000027e-05, 6.605499999999889e-05, 6.555499999999839e-05, 6.637500000000046e-05, 6.580499999999864e-05, 6.55419999999983e-05, 6.620800000000163e-05, 6.588899999999953e-05, 6.630600000000209e-05, 6.570899999999713e-05, 6.64029999999996e-05, 6.595900000000085e-05, 6.569500000000103e-05, 6.57220000000007e-05, 6.634700000000132e-05, 6.612500000000021e-05, 6.647200000000145e-05, 6.606900000000193e-05, 6.595799999999791e-05, 6.582000000000116e-05, 6.605600000000184e-05, 6.62090000000011e-05, 6.555600000000134e-05, 6.55700000000009e-05, 6.555600000000134e-05, 6.602799999999923e-05, 6.604100000000279e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.550" endtime="20201110 08:37:42.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.546" endtime="20201110 08:37:42.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.555" endtime="20201110 08:37:42.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.559" endtime="20201110 08:37:42.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.558" endtime="20201110 08:37:42.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.554" endtime="20201110 08:37:42.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.187" endtime="20201110 08:37:42.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.186" endtime="20201110 08:37:42.580"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.589" endtime="20201110 08:37:42.607"></status>
</kw>
<msg timestamp="20201110 08:37:42.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.587" endtime="20201110 08:37:42.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.609" endtime="20201110 08:37:42.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.611" endtime="20201110 08:37:42.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.584" endtime="20201110 08:37:42.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.582" endtime="20201110 08:37:42.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.621" endtime="20201110 08:37:42.907"></status>
</kw>
<msg timestamp="20201110 08:37:42.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.620" endtime="20201110 08:37:42.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.911" endtime="20201110 08:37:42.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.920" endtime="20201110 08:37:42.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.617" endtime="20201110 08:37:42.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.615" endtime="20201110 08:37:42.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.927" level="INFO">${RESULT} = [{'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.745899999999888e-05, 'source_diff': 6.745899999999888e-05}, {'time': 0.022141847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.923" endtime="20201110 08:37:42.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.940" level="INFO">${ACCURACY} = {'diff': [6.745899999999888e-05, 6.67640000000004e-05, 6.70419999999998e-05, 6.690200000000063e-05, 6.686100000000139e-05, 6.688900000000053e-05, 6.748599999999855e-05, 6.705499999999989e-05, 6.670800...</msg>
<status status="PASS" starttime="20201110 08:37:42.928" endtime="20201110 08:37:42.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.945" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.944" endtime="20201110 08:37:42.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.947" level="INFO">VALUE: [6.745899999999888e-05, 6.67640000000004e-05, 6.70419999999998e-05, 6.690200000000063e-05, 6.686100000000139e-05, 6.688900000000053e-05, 6.748599999999855e-05, 6.705499999999989e-05, 6.670800000000213e-05, 6.656999999999844e-05, 6.738900000000103e-05, 6.727800000000048e-05, 6.669499999999856e-05, 6.672300000000117e-05, 6.688900000000053e-05, 6.729200000000005e-05, 6.738800000000156e-05, 6.679100000000007e-05, 6.704100000000032e-05, 6.74030000000006e-05, 6.745799999999941e-05, 6.736100000000189e-05, 6.713899999999731e-05, 6.713899999999731e-05, 6.712500000000121e-05, 6.745900000000235e-05, 6.672300000000117e-05, 6.67640000000004e-05, 6.737500000000146e-05, 6.731899999999971e-05, 6.695899999999838e-05, 6.662500000000071e-05, 6.665299999999985e-05, 6.747199999999898e-05, 6.683300000000225e-05, 6.697200000000195e-05, 6.72220000000022e-05, 6.72359999999983e-05, 6.655599999999887e-05, 6.70419999999998e-05, 6.70419999999998e-05, 6.702800000000023e-05, 6.702700000000075e-05, 6.654099999999982e-05, 6.655500000000286e-05, 6.738899999999756e-05, 6.713899999999731e-05, 6.730599999999962e-05, 6.70419999999998e-05, 6.659700000000157e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.946" endtime="20201110 08:37:42.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.941" endtime="20201110 08:37:42.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.951" endtime="20201110 08:37:42.952"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.954" endtime="20201110 08:37:42.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.953" endtime="20201110 08:37:42.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.949" endtime="20201110 08:37:42.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.581" endtime="20201110 08:37:42.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.580" endtime="20201110 08:37:42.975"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.984" endtime="20201110 08:37:43.003"></status>
</kw>
<msg timestamp="20201110 08:37:43.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.982" endtime="20201110 08:37:43.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.004" endtime="20201110 08:37:43.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.007" endtime="20201110 08:37:43.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.980" endtime="20201110 08:37:43.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.978" endtime="20201110 08:37:43.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.017" endtime="20201110 08:37:43.302"></status>
</kw>
<msg timestamp="20201110 08:37:43.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.015" endtime="20201110 08:37:43.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022665625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.307" endtime="20201110 08:37:43.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.315" endtime="20201110 08:37:43.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.013" endtime="20201110 08:37:43.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.011" endtime="20201110 08:37:43.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.322" level="INFO">${RESULT} = [{'time': 0.022665625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.851399999999869e-05, 'source_diff': 6.851399999999869e-05}, {'time': 0.022754583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.318" endtime="20201110 08:37:43.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.335" level="INFO">${ACCURACY} = {'diff': [6.851399999999869e-05, 6.790199999999816e-05, 6.829100000000157e-05, 6.786099999999892e-05, 6.783299999999978e-05, 6.838899999999856e-05, 6.845799999999694e-05, 6.768099999999999e-05, 6.7875...</msg>
<status status="PASS" starttime="20201110 08:37:43.323" endtime="20201110 08:37:43.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.340" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.339" endtime="20201110 08:37:43.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.342" level="INFO">VALUE: [6.851399999999869e-05, 6.790199999999816e-05, 6.829100000000157e-05, 6.786099999999892e-05, 6.783299999999978e-05, 6.838899999999856e-05, 6.845799999999694e-05, 6.768099999999999e-05, 6.787500000000196e-05, 6.795899999999938e-05, 6.752800000000073e-05, 6.805600000000037e-05, 6.77090000000026e-05, 6.84030000000016e-05, 6.774999999999837e-05, 6.751300000000168e-05, 6.769400000000009e-05, 6.822199999999973e-05, 6.79169999999972e-05, 6.847199999999998e-05, 6.837499999999899e-05, 6.797199999999948e-05, 6.77229999999987e-05, 6.837500000000246e-05, 6.795899999999938e-05, 6.758299999999953e-05, 6.802800000000123e-05, 6.82640000000019e-05, 6.770799999999966e-05, 6.804100000000132e-05, 6.837500000000246e-05, 6.841700000000117e-05, 6.75420000000003e-05, 6.820800000000016e-05, 6.772199999999923e-05, 6.843000000000127e-05, 6.795899999999938e-05, 6.787499999999849e-05, 6.763900000000128e-05, 6.830500000000114e-05, 6.804100000000132e-05, 6.775000000000184e-05, 6.787500000000196e-05, 6.795799999999991e-05, 6.769400000000009e-05, 6.755599999999987e-05, 6.82359999999993e-05, 6.837499999999899e-05, 6.812500000000221e-05, 6.780600000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.341" endtime="20201110 08:37:43.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.336" endtime="20201110 08:37:43.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.346" endtime="20201110 08:37:43.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.349" endtime="20201110 08:37:43.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.348" endtime="20201110 08:37:43.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.344" endtime="20201110 08:37:43.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.976" endtime="20201110 08:37:43.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.976" endtime="20201110 08:37:43.370"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.379" endtime="20201110 08:37:43.397"></status>
</kw>
<msg timestamp="20201110 08:37:43.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.377" endtime="20201110 08:37:43.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.398" endtime="20201110 08:37:43.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.401" endtime="20201110 08:37:43.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.375" endtime="20201110 08:37:43.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.373" endtime="20201110 08:37:43.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.411" endtime="20201110 08:37:43.698"></status>
</kw>
<msg timestamp="20201110 08:37:43.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.410" endtime="20201110 08:37:43.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.702" endtime="20201110 08:37:43.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.710" endtime="20201110 08:37:43.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.407" endtime="20201110 08:37:43.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.405" endtime="20201110 08:37:43.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.717" level="INFO">${RESULT} = [{'time': 0.022264556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.911199999999965e-05, 'source_diff': 6.911199999999965e-05}, {'time': 0.022353569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.714" endtime="20201110 08:37:43.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.732" level="INFO">${ACCURACY} = {'diff': [6.911199999999965e-05, 6.938800000000009e-05, 6.897200000000048e-05, 6.872200000000023e-05, 6.877800000000198e-05, 6.937499999999999e-05, 6.879200000000155e-05, 6.90420000000018e-05, 6.90559...</msg>
<status status="PASS" starttime="20201110 08:37:43.718" endtime="20201110 08:37:43.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.736" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.735" endtime="20201110 08:37:43.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.739" level="INFO">VALUE: [6.911199999999965e-05, 6.938800000000009e-05, 6.897200000000048e-05, 6.872200000000023e-05, 6.877800000000198e-05, 6.937499999999999e-05, 6.879200000000155e-05, 6.90420000000018e-05, 6.90559999999979e-05, 6.89169999999982e-05, 6.911100000000017e-05, 6.911100000000017e-05, 6.899999999999962e-05, 6.920900000000063e-05, 6.922200000000073e-05, 6.855500000000139e-05, 6.920800000000116e-05, 6.870800000000066e-05, 6.888900000000253e-05, 6.897200000000048e-05, 6.852799999999826e-05, 6.887499999999949e-05, 6.909800000000008e-05, 6.879199999999808e-05, 6.870900000000013e-05, 6.92230000000002e-05, 6.906899999999799e-05, 6.908300000000103e-05, 6.920800000000116e-05, 6.922200000000073e-05, 6.938899999999956e-05, 6.933400000000076e-05, 6.85420000000013e-05, 6.888899999999906e-05, 6.945799999999794e-05, 6.92230000000002e-05, 6.909699999999713e-05, 6.855500000000139e-05, 6.922200000000073e-05, 6.904099999999885e-05, 6.87359999999998e-05, 6.87359999999998e-05, 6.94169999999987e-05, 6.881899999999774e-05, 6.855600000000087e-05, 6.887499999999949e-05, 6.912499999999974e-05, 6.945900000000088e-05, 6.876399999999894e-05, 6.85420000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.737" endtime="20201110 08:37:43.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.733" endtime="20201110 08:37:43.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.742" endtime="20201110 08:37:43.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.746" endtime="20201110 08:37:43.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.744" endtime="20201110 08:37:43.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.741" endtime="20201110 08:37:43.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.371" endtime="20201110 08:37:43.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.370" endtime="20201110 08:37:43.767"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.775" endtime="20201110 08:37:43.794"></status>
</kw>
<msg timestamp="20201110 08:37:43.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.774" endtime="20201110 08:37:43.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.796" endtime="20201110 08:37:43.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.798" endtime="20201110 08:37:43.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.771" endtime="20201110 08:37:43.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.769" endtime="20201110 08:37:43.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.808" endtime="20201110 08:37:44.095"></status>
</kw>
<msg timestamp="20201110 08:37:44.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.807" endtime="20201110 08:37:44.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.099" endtime="20201110 08:37:44.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.107" endtime="20201110 08:37:44.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.804" endtime="20201110 08:37:44.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.802" endtime="20201110 08:37:44.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.114" level="INFO">${RESULT} = [{'time': 0.022469597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.02360000000013e-05, 'source_diff': 7.02360000000013e-05}, {'time': 0.022563611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:44.110" endtime="20201110 08:37:44.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.127" level="INFO">${ACCURACY} = {'diff': [7.02360000000013e-05, 6.995800000000191e-05, 7.038900000000056e-05, 6.981999999999822e-05, 7.005600000000237e-05, 6.991599999999973e-05, 7.000000000000062e-05, 6.987500000000049e-05, 6.99590...</msg>
<status status="PASS" starttime="20201110 08:37:44.115" endtime="20201110 08:37:44.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.132" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.131" endtime="20201110 08:37:44.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.135" level="INFO">VALUE: [7.02360000000013e-05, 6.995800000000191e-05, 7.038900000000056e-05, 6.981999999999822e-05, 7.005600000000237e-05, 6.991599999999973e-05, 7.000000000000062e-05, 6.987500000000049e-05, 6.995900000000138e-05, 6.961100000000067e-05, 7.004099999999985e-05, 6.988900000000006e-05, 7.047200000000198e-05, 6.959699999999763e-05, 7.022199999999826e-05, 7.004199999999933e-05, 7.020800000000216e-05, 6.988900000000006e-05, 7.007000000000194e-05, 7.050000000000112e-05, 6.998700000000052e-05, 6.972199999999776e-05, 7.005499999999942e-05, 7.020800000000216e-05, 7.004099999999985e-05, 7.00840000000015e-05, 6.955600000000187e-05, 7.019399999999912e-05, 6.955600000000187e-05, 7.025000000000087e-05, 7.00559999999989e-05, 7.03620000000009e-05, 6.963899999999981e-05, 7.049999999999765e-05, 7.005499999999942e-05, 7.020800000000216e-05, 7.038900000000056e-05, 7.031899999999924e-05, 7.022199999999826e-05, 6.957000000000144e-05, 6.957000000000144e-05, 7.036100000000142e-05, 6.965199999999991e-05, 7.029199999999958e-05, 7.005499999999942e-05, 7.022200000000173e-05, 6.984700000000135e-05, 7.00970000000016e-05, 7.030499999999967e-05, 6.969399999999862e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.133" endtime="20201110 08:37:44.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.128" endtime="20201110 08:37:44.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.138" endtime="20201110 08:37:44.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.141" endtime="20201110 08:37:44.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.140" endtime="20201110 08:37:44.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.136" endtime="20201110 08:37:44.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.767" endtime="20201110 08:37:44.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.767" endtime="20201110 08:37:44.162"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.171" endtime="20201110 08:37:44.190"></status>
</kw>
<msg timestamp="20201110 08:37:44.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.169" endtime="20201110 08:37:44.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.191" endtime="20201110 08:37:44.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.194" endtime="20201110 08:37:44.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.167" endtime="20201110 08:37:44.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.165" endtime="20201110 08:37:44.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.204" endtime="20201110 08:37:44.489"></status>
</kw>
<msg timestamp="20201110 08:37:44.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.202" endtime="20201110 08:37:44.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.493" endtime="20201110 08:37:44.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.502" endtime="20201110 08:37:44.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.200" endtime="20201110 08:37:44.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.198" endtime="20201110 08:37:44.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.508" level="INFO">${RESULT} = [{'time': 0.022251694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.09300000000003e-05, 'source_diff': 7.09300000000003e-05}, {'time': 0.022344694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:44.505" endtime="20201110 08:37:44.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.522" level="INFO">${ACCURACY} = {'diff': [7.09300000000003e-05, 7.136099999999895e-05, 7.144400000000037e-05, 7.138900000000156e-05, 7.145799999999994e-05, 7.112499999999827e-05, 7.120799999999969e-05, 7.12499999999984e-05, 7.138899...</msg>
<status status="PASS" starttime="20201110 08:37:44.509" endtime="20201110 08:37:44.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.527" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.526" endtime="20201110 08:37:44.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.529" level="INFO">VALUE: [7.09300000000003e-05, 7.136099999999895e-05, 7.144400000000037e-05, 7.138900000000156e-05, 7.145799999999994e-05, 7.112499999999827e-05, 7.120799999999969e-05, 7.12499999999984e-05, 7.138899999999809e-05, 7.077800000000051e-05, 7.138900000000156e-05, 7.065200000000091e-05, 7.131900000000024e-05, 7.088900000000106e-05, 7.07910000000006e-05, 7.072199999999876e-05, 7.120799999999969e-05, 7.122199999999926e-05, 7.072199999999876e-05, 7.138899999999809e-05, 7.097199999999901e-05, 7.104200000000033e-05, 7.104200000000033e-05, 7.10559999999999e-05, 7.069500000000256e-05, 7.134699999999938e-05, 7.066699999999995e-05, 7.131900000000024e-05, 7.140300000000113e-05, 7.112500000000174e-05, 7.147199999999951e-05, 7.062500000000124e-05, 7.086100000000192e-05, 7.076400000000094e-05, 7.10559999999999e-05, 7.113900000000131e-05, 7.120799999999969e-05, 7.088900000000106e-05, 7.131900000000024e-05, 7.104100000000085e-05, 7.069400000000309e-05, 7.122199999999926e-05, 7.05559999999994e-05, 7.102800000000076e-05, 7.104200000000033e-05, 7.122199999999926e-05, 7.10559999999999e-05, 7.120900000000263e-05, 7.111100000000217e-05, 7.095799999999944e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.528" endtime="20201110 08:37:44.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.523" endtime="20201110 08:37:44.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.533" endtime="20201110 08:37:44.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.536" endtime="20201110 08:37:44.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.535" endtime="20201110 08:37:44.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.531" endtime="20201110 08:37:44.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.163" endtime="20201110 08:37:44.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.163" endtime="20201110 08:37:44.557"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.566" endtime="20201110 08:37:44.584"></status>
</kw>
<msg timestamp="20201110 08:37:44.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.565" endtime="20201110 08:37:44.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.586" endtime="20201110 08:37:44.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.588" endtime="20201110 08:37:44.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.562" endtime="20201110 08:37:44.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.560" endtime="20201110 08:37:44.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.598" endtime="20201110 08:37:44.885"></status>
</kw>
<msg timestamp="20201110 08:37:44.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.597" endtime="20201110 08:37:44.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.889" endtime="20201110 08:37:44.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.898" endtime="20201110 08:37:44.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.594" endtime="20201110 08:37:44.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.592" endtime="20201110 08:37:44.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.905" level="INFO">${RESULT} = [{'time': 0.022819236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.213899999999884e-05, 'source_diff': 7.213899999999884e-05}, {'time': 0.022908236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:44.901" endtime="20201110 08:37:44.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.919" level="INFO">${ACCURACY} = {'diff': [7.213899999999884e-05, 7.199999999999915e-05, 7.195899999999991e-05, 7.163899999999834e-05, 7.234799999999986e-05, 7.188900000000206e-05, 7.234700000000038e-05, 7.172299999999923e-05, 7.2056...</msg>
<status status="PASS" starttime="20201110 08:37:44.906" endtime="20201110 08:37:44.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.923" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.922" endtime="20201110 08:37:44.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.926" level="INFO">VALUE: [7.213899999999884e-05, 7.199999999999915e-05, 7.195899999999991e-05, 7.163899999999834e-05, 7.234799999999986e-05, 7.188900000000206e-05, 7.234700000000038e-05, 7.172299999999923e-05, 7.20560000000009e-05, 7.237499999999952e-05, 7.180500000000117e-05, 7.2069000000001e-05, 7.188899999999859e-05, 7.195800000000044e-05, 7.237499999999952e-05, 7.209700000000013e-05, 7.180600000000065e-05, 7.172199999999976e-05, 7.222199999999679e-05, 7.198700000000252e-05, 7.220900000000016e-05, 7.240299999999866e-05, 7.215300000000188e-05, 7.247200000000051e-05, 7.204100000000185e-05, 7.237499999999952e-05, 7.248600000000008e-05, 7.15560000000004e-05, 7.169400000000062e-05, 7.219500000000059e-05, 7.187499999999902e-05, 7.234700000000038e-05, 7.216700000000145e-05, 7.173599999999933e-05, 7.220799999999722e-05, 7.212499999999927e-05, 7.220800000000069e-05, 7.170800000000019e-05, 7.184699999999988e-05, 7.180600000000065e-05, 7.169400000000062e-05, 7.188899999999859e-05, 7.229199999999811e-05, 7.218100000000102e-05, 7.204199999999786e-05, 7.172299999999923e-05, 7.240199999999919e-05, 7.158300000000006e-05, 7.201400000000219e-05, 7.172199999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.925" endtime="20201110 08:37:44.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.920" endtime="20201110 08:37:44.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.930" endtime="20201110 08:37:44.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.933" endtime="20201110 08:37:44.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.932" endtime="20201110 08:37:44.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.928" endtime="20201110 08:37:44.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.558" endtime="20201110 08:37:44.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.558" endtime="20201110 08:37:44.954"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.963" endtime="20201110 08:37:44.982"></status>
</kw>
<msg timestamp="20201110 08:37:44.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.961" endtime="20201110 08:37:44.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.983" endtime="20201110 08:37:44.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.986" endtime="20201110 08:37:44.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.959" endtime="20201110 08:37:44.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.957" endtime="20201110 08:37:44.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.996" endtime="20201110 08:37:45.282"></status>
</kw>
<msg timestamp="20201110 08:37:45.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.995" endtime="20201110 08:37:45.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022612528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.286" endtime="20201110 08:37:45.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.294" endtime="20201110 08:37:45.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.992" endtime="20201110 08:37:45.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.990" endtime="20201110 08:37:45.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.301" level="INFO">${RESULT} = [{'time': 0.022685597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.306899999999852e-05, 'source_diff': 7.306899999999852e-05}, {'time': 0.022774653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:45.298" endtime="20201110 08:37:45.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.316" level="INFO">${ACCURACY} = {'diff': [7.306899999999852e-05, 7.326399999999997e-05, 7.255599999999793e-05, 7.288899999999959e-05, 7.347199999999804e-05, 7.258400000000054e-05, 7.316699999999898e-05, 7.304199999999886e-05, 7.3415...</msg>
<status status="PASS" starttime="20201110 08:37:45.302" endtime="20201110 08:37:45.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.320" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.319" endtime="20201110 08:37:45.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.323" level="INFO">VALUE: [7.306899999999852e-05, 7.326399999999997e-05, 7.255599999999793e-05, 7.288899999999959e-05, 7.347199999999804e-05, 7.258400000000054e-05, 7.316699999999898e-05, 7.304199999999886e-05, 7.341599999999976e-05, 7.311200000000018e-05, 7.319500000000159e-05, 7.331899999999877e-05, 7.322200000000126e-05, 7.32500000000004e-05, 7.252799999999879e-05, 7.308400000000104e-05, 7.300000000000015e-05, 7.287500000000002e-05, 7.279199999999861e-05, 7.259699999999716e-05, 7.330600000000215e-05, 7.338800000000062e-05, 7.345800000000194e-05, 7.338900000000009e-05, 7.297200000000101e-05, 7.338900000000009e-05, 7.297199999999754e-05, 7.272200000000076e-05, 7.305599999999843e-05, 7.322199999999779e-05, 7.304199999999886e-05, 7.290299999999916e-05, 7.331900000000224e-05, 7.286199999999993e-05, 7.311099999999723e-05, 7.300000000000015e-05, 7.255500000000192e-05, 7.287500000000002e-05, 7.262499999999977e-05, 7.281999999999775e-05, 7.337500000000052e-05, 7.322199999999779e-05, 7.337499999999705e-05, 7.317999999999908e-05, 7.263899999999934e-05, 7.280500000000217e-05, 7.284700000000088e-05, 7.34439999999989e-05, 7.288900000000306e-05, 7.331899999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.321" endtime="20201110 08:37:45.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.317" endtime="20201110 08:37:45.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.326" endtime="20201110 08:37:45.328"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.330" endtime="20201110 08:37:45.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.328" endtime="20201110 08:37:45.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.325" endtime="20201110 08:37:45.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.955" endtime="20201110 08:37:45.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.955" endtime="20201110 08:37:45.351"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.359" endtime="20201110 08:37:45.378"></status>
</kw>
<msg timestamp="20201110 08:37:45.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.358" endtime="20201110 08:37:45.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.380" endtime="20201110 08:37:45.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.383" endtime="20201110 08:37:45.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.355" endtime="20201110 08:37:45.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.353" endtime="20201110 08:37:45.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.393" endtime="20201110 08:37:45.679"></status>
</kw>
<msg timestamp="20201110 08:37:45.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.391" endtime="20201110 08:37:45.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.683" endtime="20201110 08:37:45.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.691" endtime="20201110 08:37:45.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.389" endtime="20201110 08:37:45.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.387" endtime="20201110 08:37:45.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.698" level="INFO">${RESULT} = [{'time': 0.022020403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.408400000000204e-05, 'source_diff': 7.408400000000204e-05}, {'time': 0.022109431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:45.695" endtime="20201110 08:37:45.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.712" level="INFO">${ACCURACY} = {'diff': [7.408400000000204e-05, 7.423699999999783e-05, 7.388900000000059e-05, 7.395899999999844e-05, 7.372200000000176e-05, 7.355499999999945e-05, 7.388900000000059e-05, 7.412500000000127e-05, 7.3791...</msg>
<status status="PASS" starttime="20201110 08:37:45.699" endtime="20201110 08:37:45.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.716" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.715" endtime="20201110 08:37:45.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.719" level="INFO">VALUE: [7.408400000000204e-05, 7.423699999999783e-05, 7.388900000000059e-05, 7.395899999999844e-05, 7.372200000000176e-05, 7.355499999999945e-05, 7.388900000000059e-05, 7.412500000000127e-05, 7.379199999999961e-05, 7.405599999999943e-05, 7.405599999999943e-05, 7.354199999999936e-05, 7.369499999999862e-05, 7.420900000000216e-05, 7.390199999999722e-05, 7.384699999999841e-05, 7.352700000000031e-05, 7.402700000000081e-05, 7.440300000000066e-05, 7.397200000000201e-05, 7.420799999999922e-05, 7.388900000000059e-05, 7.379199999999961e-05, 7.388900000000059e-05, 7.401400000000072e-05, 7.370899999999819e-05, 7.440200000000119e-05, 7.429100000000063e-05, 7.400000000000115e-05, 7.354099999999988e-05, 7.422199999999879e-05, 7.372200000000176e-05, 7.354199999999936e-05, 7.4069999999999e-05, 7.37500000000009e-05, 7.424999999999793e-05, 7.35829999999986e-05, 7.387500000000102e-05, 7.412500000000127e-05, 7.38049999999997e-05, 7.405499999999995e-05, 7.413900000000084e-05, 7.373600000000133e-05, 7.372199999999829e-05, 7.40560000000029e-05, 7.351400000000022e-05, 7.404199999999986e-05, 7.437500000000152e-05, 7.448700000000155e-05, 7.437499999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.717" endtime="20201110 08:37:45.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.712" endtime="20201110 08:37:45.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.722" endtime="20201110 08:37:45.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.726" endtime="20201110 08:37:45.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.724" endtime="20201110 08:37:45.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.721" endtime="20201110 08:37:45.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.352" endtime="20201110 08:37:45.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.351" endtime="20201110 08:37:45.747"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.755" endtime="20201110 08:37:45.774"></status>
</kw>
<msg timestamp="20201110 08:37:45.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.754" endtime="20201110 08:37:45.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.775" endtime="20201110 08:37:45.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.778" endtime="20201110 08:37:45.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.751" endtime="20201110 08:37:45.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.749" endtime="20201110 08:37:45.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.788" endtime="20201110 08:37:46.075"></status>
</kw>
<msg timestamp="20201110 08:37:46.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.787" endtime="20201110 08:37:46.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.079" endtime="20201110 08:37:46.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.087" endtime="20201110 08:37:46.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.784" endtime="20201110 08:37:46.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.782" endtime="20201110 08:37:46.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.094" level="INFO">${RESULT} = [{'time': 0.022074875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.511099999999923e-05, 'source_diff': 7.511099999999923e-05}, {'time': 0.022164889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.091" endtime="20201110 08:37:46.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.108" level="INFO">${ACCURACY} = {'diff': [7.511099999999923e-05, 7.487499999999855e-05, 7.46249999999983e-05, 7.547200000000004e-05, 7.532000000000025e-05, 7.463900000000134e-05, 7.533300000000034e-05, 7.522199999999979e-05, 7.47219...</msg>
<status status="PASS" starttime="20201110 08:37:46.095" endtime="20201110 08:37:46.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.112" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.111" endtime="20201110 08:37:46.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.115" level="INFO">VALUE: [7.511099999999923e-05, 7.487499999999855e-05, 7.46249999999983e-05, 7.547200000000004e-05, 7.532000000000025e-05, 7.463900000000134e-05, 7.533300000000034e-05, 7.522199999999979e-05, 7.472199999999929e-05, 7.523599999999936e-05, 7.522199999999979e-05, 7.540300000000166e-05, 7.547200000000004e-05, 7.488900000000159e-05, 7.538899999999862e-05, 7.505599999999696e-05, 7.504200000000086e-05, 7.484700000000288e-05, 7.51379999999989e-05, 7.477700000000156e-05, 7.545899999999994e-05, 7.463899999999787e-05, 7.495799999999997e-05, 7.455599999999993e-05, 7.49310000000003e-05, 7.523599999999936e-05, 7.455599999999993e-05, 7.487500000000202e-05, 7.550000000000265e-05, 7.502800000000129e-05, 7.534699999999991e-05, 7.531900000000077e-05, 7.487500000000202e-05, 7.551400000000222e-05, 7.523600000000283e-05, 7.454200000000036e-05, 7.487500000000202e-05, 7.468000000000058e-05, 7.513899999999837e-05, 7.532000000000025e-05, 7.505599999999696e-05, 7.487500000000202e-05, 7.463899999999787e-05, 7.51249999999988e-05, 7.462500000000177e-05, 7.53890000000021e-05, 7.487500000000202e-05, 7.481999999999975e-05, 7.504200000000086e-05, 7.488900000000159e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.113" endtime="20201110 08:37:46.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.108" endtime="20201110 08:37:46.116"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.118" endtime="20201110 08:37:46.120"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.122" endtime="20201110 08:37:46.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.120" endtime="20201110 08:37:46.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.117" endtime="20201110 08:37:46.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.748" endtime="20201110 08:37:46.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.747" endtime="20201110 08:37:46.143"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.151" endtime="20201110 08:37:46.170"></status>
</kw>
<msg timestamp="20201110 08:37:46.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.150" endtime="20201110 08:37:46.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.172" endtime="20201110 08:37:46.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.174" endtime="20201110 08:37:46.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.147" endtime="20201110 08:37:46.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.145" endtime="20201110 08:37:46.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.184" endtime="20201110 08:37:46.471"></status>
</kw>
<msg timestamp="20201110 08:37:46.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.183" endtime="20201110 08:37:46.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022364917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.475" endtime="20201110 08:37:46.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.483" endtime="20201110 08:37:46.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.180" endtime="20201110 08:37:46.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.178" endtime="20201110 08:37:46.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.490" level="INFO">${RESULT} = [{'time': 0.022364917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.577800000000204e-05, 'source_diff': 7.577800000000204e-05}, {'time': 0.022455, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:46.487" endtime="20201110 08:37:46.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.504" level="INFO">${ACCURACY} = {'diff': [7.577800000000204e-05, 7.570800000000072e-05, 7.601400000000272e-05, 7.604099999999892e-05, 7.552700000000231e-05, 7.613899999999937e-05, 7.556900000000102e-05, 7.549999999999918e-05, 7.5542...</msg>
<status status="PASS" starttime="20201110 08:37:46.491" endtime="20201110 08:37:46.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.508" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.507" endtime="20201110 08:37:46.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.511" level="INFO">VALUE: [7.577800000000204e-05, 7.570800000000072e-05, 7.601400000000272e-05, 7.604099999999892e-05, 7.552700000000231e-05, 7.613899999999937e-05, 7.556900000000102e-05, 7.549999999999918e-05, 7.554200000000136e-05, 7.593000000000183e-05, 7.598600000000011e-05, 7.629199999999864e-05, 7.588899999999912e-05, 7.579199999999814e-05, 7.624999999999993e-05, 7.555499999999798e-05, 7.604100000000238e-05, 7.622200000000079e-05, 7.554200000000136e-05, 7.573599999999986e-05, 7.555600000000093e-05, 7.622300000000026e-05, 7.622300000000026e-05, 7.588899999999912e-05, 7.580600000000118e-05, 7.606900000000152e-05, 7.622200000000079e-05, 7.554099999999841e-05, 7.622200000000079e-05, 7.638899999999962e-05, 7.579199999999814e-05, 7.637500000000005e-05, 7.629199999999864e-05, 7.638899999999962e-05, 7.645900000000094e-05, 7.555500000000145e-05, 7.570900000000019e-05, 7.604099999999892e-05, 7.637500000000005e-05, 7.565300000000191e-05, 7.647200000000104e-05, 7.555599999999746e-05, 7.588899999999912e-05, 7.563900000000234e-05, 7.579200000000161e-05, 7.586099999999998e-05, 7.645900000000094e-05, 7.622300000000026e-05, 7.572200000000029e-05, 7.588899999999912e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.509" endtime="20201110 08:37:46.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.505" endtime="20201110 08:37:46.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.514" endtime="20201110 08:37:46.516"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.518" endtime="20201110 08:37:46.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.516" endtime="20201110 08:37:46.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.513" endtime="20201110 08:37:46.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.144" endtime="20201110 08:37:46.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.143" endtime="20201110 08:37:46.539"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.547" endtime="20201110 08:37:46.565"></status>
</kw>
<msg timestamp="20201110 08:37:46.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.546" endtime="20201110 08:37:46.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.567" endtime="20201110 08:37:46.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.569" endtime="20201110 08:37:46.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.543" endtime="20201110 08:37:46.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.541" endtime="20201110 08:37:46.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.579" endtime="20201110 08:37:46.865"></status>
</kw>
<msg timestamp="20201110 08:37:46.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.578" endtime="20201110 08:37:46.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.869" endtime="20201110 08:37:46.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.877" endtime="20201110 08:37:46.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.575" endtime="20201110 08:37:46.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.574" endtime="20201110 08:37:46.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.884" level="INFO">${RESULT} = [{'time': 0.022209764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.677799999999957e-05, 'source_diff': 7.677799999999957e-05}, {'time': 0.022302792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.881" endtime="20201110 08:37:46.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.899" level="INFO">${ACCURACY} = {'diff': [7.677799999999957e-05, 7.747299999999804e-05, 7.720899999999822e-05, 7.659700000000116e-05, 7.672199999999782e-05, 7.704099999999992e-05, 7.687499999999708e-05, 7.698600000000111e-05, 7.6708...</msg>
<status status="PASS" starttime="20201110 08:37:46.885" endtime="20201110 08:37:46.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.903" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.902" endtime="20201110 08:37:46.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.906" level="INFO">VALUE: [7.677799999999957e-05, 7.747299999999804e-05, 7.720899999999822e-05, 7.659700000000116e-05, 7.672199999999782e-05, 7.704099999999992e-05, 7.687499999999708e-05, 7.698600000000111e-05, 7.670800000000172e-05, 7.705599999999896e-05, 7.738900000000062e-05, 7.694500000000187e-05, 7.673600000000086e-05, 7.659700000000116e-05, 7.684800000000089e-05, 7.715200000000047e-05, 7.715200000000047e-05, 7.686100000000098e-05, 7.738900000000062e-05, 7.679099999999967e-05, 7.719399999999918e-05, 7.722199999999832e-05, 7.722199999999832e-05, 7.738900000000062e-05, 7.711100000000123e-05, 7.730600000000268e-05, 7.737500000000105e-05, 7.71250000000008e-05, 7.665299999999944e-05, 7.661100000000073e-05, 7.663899999999987e-05, 7.711100000000123e-05, 7.69310000000023e-05, 7.720799999999875e-05, 7.670800000000172e-05, 7.705600000000243e-05, 7.726399999999703e-05, 7.741600000000029e-05, 7.729199999999964e-05, 7.706899999999905e-05, 7.723599999999789e-05, 7.70830000000021e-05, 7.654199999999889e-05, 7.654199999999889e-05, 7.673600000000086e-05, 7.70830000000021e-05, 7.655599999999846e-05, 7.650000000000018e-05, 7.722300000000126e-05, 7.688900000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.904" endtime="20201110 08:37:46.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.900" endtime="20201110 08:37:46.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.909" endtime="20201110 08:37:46.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.913" endtime="20201110 08:37:46.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.911" endtime="20201110 08:37:46.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.908" endtime="20201110 08:37:46.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.540" endtime="20201110 08:37:46.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.539" endtime="20201110 08:37:46.934"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.943" endtime="20201110 08:37:46.963"></status>
</kw>
<msg timestamp="20201110 08:37:46.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.942" endtime="20201110 08:37:46.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.964" endtime="20201110 08:37:46.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.967" endtime="20201110 08:37:46.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.939" endtime="20201110 08:37:46.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.937" endtime="20201110 08:37:46.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.977" endtime="20201110 08:37:47.262"></status>
</kw>
<msg timestamp="20201110 08:37:47.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.975" endtime="20201110 08:37:47.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023575542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023653347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.267" endtime="20201110 08:37:47.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.275" endtime="20201110 08:37:47.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.973" endtime="20201110 08:37:47.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.971" endtime="20201110 08:37:47.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.282" level="INFO">${RESULT} = [{'time': 0.023653347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.780500000000024e-05, 'source_diff': 7.780500000000024e-05}, {'time': 0.023750375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.278" endtime="20201110 08:37:47.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.295" level="INFO">${ACCURACY} = {'diff': [7.780500000000024e-05, 7.768099999999958e-05, 7.830500000000074e-05, 7.819400000000018e-05, 7.770799999999925e-05, 7.798599999999864e-05, 7.825000000000193e-05, 7.772199999999882e-05, 7.8236...</msg>
<status status="PASS" starttime="20201110 08:37:47.283" endtime="20201110 08:37:47.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.300" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.299" endtime="20201110 08:37:47.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.302" level="INFO">VALUE: [7.780500000000024e-05, 7.768099999999958e-05, 7.830500000000074e-05, 7.819400000000018e-05, 7.770799999999925e-05, 7.798599999999864e-05, 7.825000000000193e-05, 7.772199999999882e-05, 7.823699999999836e-05, 7.818100000000008e-05, 7.788799999999818e-05, 7.763799999999793e-05, 7.797199999999907e-05, 7.836099999999901e-05, 7.815300000000094e-05, 7.844400000000043e-05, 7.788899999999765e-05, 7.781999999999928e-05, 7.770899999999872e-05, 7.770899999999872e-05, 7.772200000000229e-05, 7.768099999999958e-05, 7.805500000000049e-05, 7.802700000000135e-05, 7.787499999999808e-05, 7.763900000000087e-05, 7.78189999999998e-05, 7.772200000000229e-05, 7.773600000000186e-05, 7.772199999999882e-05, 7.805599999999996e-05, 7.787500000000155e-05, 7.80839999999991e-05, 7.795899999999897e-05, 7.788900000000112e-05, 7.798600000000211e-05, 7.787499999999808e-05, 7.813900000000137e-05, 7.779200000000014e-05, 7.804200000000039e-05, 7.84030000000012e-05, 7.798599999999864e-05, 7.804200000000039e-05, 7.754199999999989e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.811099999999876e-05, 7.762499999999783e-05, 7.76250000000013e-05, 7.830500000000074e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.301" endtime="20201110 08:37:47.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.296" endtime="20201110 08:37:47.304"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.306" endtime="20201110 08:37:47.307"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.310" endtime="20201110 08:37:47.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.308" endtime="20201110 08:37:47.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.305" endtime="20201110 08:37:47.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.935" endtime="20201110 08:37:47.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.934" endtime="20201110 08:37:47.330"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.339" endtime="20201110 08:37:47.358"></status>
</kw>
<msg timestamp="20201110 08:37:47.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.338" endtime="20201110 08:37:47.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.359" endtime="20201110 08:37:47.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.362" endtime="20201110 08:37:47.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.335" endtime="20201110 08:37:47.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.333" endtime="20201110 08:37:47.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.372" endtime="20201110 08:37:47.658"></status>
</kw>
<msg timestamp="20201110 08:37:47.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:47.371" endtime="20201110 08:37:47.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022302944, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:47.662" endtime="20201110 08:37:47.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.670" endtime="20201110 08:37:47.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.368" endtime="20201110 08:37:47.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.366" endtime="20201110 08:37:47.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.677" level="INFO">${RESULT} = [{'time': 0.022302944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.894400000000093e-05, 'source_diff': 7.894400000000093e-05}, {'time': 0.022397958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.674" endtime="20201110 08:37:47.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.691" level="INFO">${ACCURACY} = {'diff': [7.894400000000093e-05, 7.940199999999925e-05, 7.92770000000026e-05, 7.937500000000305e-05, 7.911099999999976e-05, 7.913900000000237e-05, 7.897200000000007e-05, 7.884699999999994e-05, 7.89580...</msg>
<status status="PASS" starttime="20201110 08:37:47.678" endtime="20201110 08:37:47.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.695" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.694" endtime="20201110 08:37:47.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.698" level="INFO">VALUE: [7.894400000000093e-05, 7.940199999999925e-05, 7.92770000000026e-05, 7.937500000000305e-05, 7.911099999999976e-05, 7.913900000000237e-05, 7.897200000000007e-05, 7.884699999999994e-05, 7.89580000000005e-05, 7.920900000000022e-05, 7.924999999999946e-05, 7.899999999999921e-05, 7.888799999999918e-05, 7.879100000000167e-05, 7.854100000000142e-05, 7.940299999999872e-05, 7.929200000000164e-05, 7.938899999999915e-05, 7.89580000000005e-05, 7.938899999999915e-05, 7.879200000000114e-05, 7.934799999999992e-05, 7.89580000000005e-05, 7.869500000000015e-05, 7.887499999999908e-05, 7.89719999999966e-05, 7.94030000000022e-05, 7.863900000000187e-05, 7.89580000000005e-05, 7.916700000000151e-05, 7.920800000000075e-05, 7.888899999999865e-05, 7.931999999999731e-05, 7.92229999999998e-05, 7.887499999999908e-05, 7.930500000000174e-05, 7.854100000000142e-05, 7.908300000000063e-05, 7.895900000000344e-05, 7.922199999999685e-05, 7.918100000000108e-05, 7.933400000000035e-05, 7.86389999999984e-05, 7.8764000000002e-05, 7.870899999999972e-05, 7.870899999999972e-05, 7.873599999999939e-05, 7.934700000000044e-05, 7.930500000000174e-05, 7.873599999999939e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.697" endtime="20201110 08:37:47.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.692" endtime="20201110 08:37:47.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.701" endtime="20201110 08:37:47.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.705" endtime="20201110 08:37:47.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.703" endtime="20201110 08:37:47.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.700" endtime="20201110 08:37:47.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.331" endtime="20201110 08:37:47.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.331" endtime="20201110 08:37:47.726"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.735" endtime="20201110 08:37:47.754"></status>
</kw>
<msg timestamp="20201110 08:37:47.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.733" endtime="20201110 08:37:47.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.756" endtime="20201110 08:37:47.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.758" endtime="20201110 08:37:47.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.730" endtime="20201110 08:37:47.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.728" endtime="20201110 08:37:47.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.768" endtime="20201110 08:37:48.054"></status>
</kw>
<msg timestamp="20201110 08:37:48.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.767" endtime="20201110 08:37:48.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022403153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022482792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.058" endtime="20201110 08:37:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.067" endtime="20201110 08:37:48.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.764" endtime="20201110 08:37:48.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.762" endtime="20201110 08:37:48.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.073" level="INFO">${RESULT} = [{'time': 0.022482792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.963900000000287e-05, 'source_diff': 7.963900000000287e-05}, {'time': 0.022585736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.070" endtime="20201110 08:37:48.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.087" level="INFO">${ACCURACY} = {'diff': [7.963900000000287e-05, 7.955499999999852e-05, 7.961199999999974e-05, 7.972200000000082e-05, 7.968100000000158e-05, 8.000000000000021e-05, 8.005500000000249e-05, 7.959699999999723e-05, 7.9901...</msg>
<status status="PASS" starttime="20201110 08:37:48.074" endtime="20201110 08:37:48.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.091" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.090" endtime="20201110 08:37:48.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.094" level="INFO">VALUE: [7.963900000000287e-05, 7.955499999999852e-05, 7.961199999999974e-05, 7.972200000000082e-05, 7.968100000000158e-05, 8.000000000000021e-05, 8.005500000000249e-05, 7.959699999999723e-05, 7.990199999999975e-05, 8.02909999999997e-05, 8.025000000000046e-05, 7.969399999999821e-05, 7.955500000000199e-05, 8.037500000000058e-05, 8.048600000000114e-05, 7.955499999999852e-05, 8.040299999999972e-05, 7.997300000000054e-05, 7.966700000000201e-05, 8.038800000000068e-05, 8.045799999999853e-05, 7.969399999999821e-05, 8.03329999999984e-05, 7.96389999999994e-05, 8.033400000000135e-05, 7.988899999999965e-05, 7.99580000000015e-05, 7.954199999999842e-05, 8.040299999999972e-05, 8.030599999999874e-05, 7.984700000000094e-05, 8.008299999999816e-05, 8.044400000000243e-05, 8.004099999999945e-05, 7.973600000000039e-05, 7.974999999999996e-05, 8.037499999999712e-05, 7.9764000000003e-05, 7.969499999999768e-05, 8.004200000000239e-05, 7.991599999999932e-05, 7.997200000000107e-05, 7.987500000000008e-05, 7.99580000000015e-05, 7.973600000000039e-05, 7.984699999999748e-05, 8.01389999999999e-05, 8.011100000000076e-05, 7.998599999999717e-05, 7.955599999999799e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.092" endtime="20201110 08:37:48.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.088" endtime="20201110 08:37:48.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.097" endtime="20201110 08:37:48.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.101" endtime="20201110 08:37:48.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.099" endtime="20201110 08:37:48.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.096" endtime="20201110 08:37:48.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.727" endtime="20201110 08:37:48.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.726" endtime="20201110 08:37:48.122"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.130" endtime="20201110 08:37:48.148"></status>
</kw>
<msg timestamp="20201110 08:37:48.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.129" endtime="20201110 08:37:48.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.150" endtime="20201110 08:37:48.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.152" endtime="20201110 08:37:48.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.126" endtime="20201110 08:37:48.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.124" endtime="20201110 08:37:48.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.162" endtime="20201110 08:37:48.448"></status>
</kw>
<msg timestamp="20201110 08:37:48.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:48.161" endtime="20201110 08:37:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107014, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:48.452" endtime="20201110 08:37:48.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.460" endtime="20201110 08:37:48.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.158" endtime="20201110 08:37:48.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.157" endtime="20201110 08:37:48.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.467" level="INFO">${RESULT} = [{'time': 0.022107014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151400000000128e-05, 'source_diff': 8.151400000000128e-05}, {'time': 0.022210958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.464" endtime="20201110 08:37:48.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.482" level="INFO">${ACCURACY} = {'diff': [8.151400000000128e-05, 8.119399999999971e-05, 8.070800000000225e-05, 8.105500000000002e-05, 8.072200000000182e-05, 8.055600000000246e-05, 8.073599999999792e-05, 8.137499999999812e-05, 8.1166...</msg>
<status status="PASS" starttime="20201110 08:37:48.468" endtime="20201110 08:37:48.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.487" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.485" endtime="20201110 08:37:48.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.489" level="INFO">VALUE: [8.151400000000128e-05, 8.119399999999971e-05, 8.070800000000225e-05, 8.105500000000002e-05, 8.072200000000182e-05, 8.055600000000246e-05, 8.073599999999792e-05, 8.137499999999812e-05, 8.116600000000057e-05, 8.101400000000078e-05, 8.119499999999918e-05, 8.074999999999749e-05, 8.106899999999959e-05, 8.120799999999928e-05, 8.073600000000139e-05, 8.122200000000232e-05, 8.088900000000065e-05, 8.131999999999931e-05, 8.072200000000182e-05, 8.091599999999685e-05, 8.11390000000009e-05, 8.117999999999667e-05, 8.069500000000215e-05, 8.09719999999986e-05, 8.13329999999994e-05, 8.07780000000001e-05, 8.105500000000002e-05, 8.098600000000164e-05, 8.072200000000182e-05, 8.12230000000018e-05, 8.137500000000158e-05, 8.080599999999924e-05, 8.07230000000013e-05, 8.100000000000121e-05, 8.119399999999971e-05, 8.136100000000202e-05, 8.12780000000006e-05, 8.105500000000002e-05, 8.087499999999762e-05, 8.06390000000004e-05, 8.148599999999867e-05, 8.12230000000018e-05, 8.119499999999918e-05, 8.12230000000018e-05, 8.055499999999952e-05, 8.088900000000065e-05, 8.080499999999977e-05, 8.070799999999878e-05, 8.087500000000108e-05, 8.09719999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.488" endtime="20201110 08:37:48.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.483" endtime="20201110 08:37:48.490"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.493" endtime="20201110 08:37:48.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.496" endtime="20201110 08:37:48.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.494" endtime="20201110 08:37:48.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.491" endtime="20201110 08:37:48.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.123" endtime="20201110 08:37:48.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.122" endtime="20201110 08:37:48.517"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.525" endtime="20201110 08:37:48.544"></status>
</kw>
<msg timestamp="20201110 08:37:48.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.524" endtime="20201110 08:37:48.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.546" endtime="20201110 08:37:48.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.548" endtime="20201110 08:37:48.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.521" endtime="20201110 08:37:48.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.519" endtime="20201110 08:37:48.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.559" endtime="20201110 08:37:48.846"></status>
</kw>
<msg timestamp="20201110 08:37:48.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.557" endtime="20201110 08:37:48.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.850" endtime="20201110 08:37:48.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.858" endtime="20201110 08:37:48.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.555" endtime="20201110 08:37:48.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.553" endtime="20201110 08:37:48.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.865" level="INFO">${RESULT} = [{'time': 0.022095875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.226400000000203e-05, 'source_diff': 8.226400000000203e-05}, {'time': 0.022198889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.862" endtime="20201110 08:37:48.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.880" level="INFO">${ACCURACY} = {'diff': [8.226400000000203e-05, 8.21109999999993e-05, 8.212499999999887e-05, 8.197300000000254e-05, 8.222299999999932e-05, 8.155500000000052e-05, 8.154100000000095e-05, 8.15269999999979e-05, 8.222199...</msg>
<status status="PASS" starttime="20201110 08:37:48.866" endtime="20201110 08:37:48.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.885" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.884" endtime="20201110 08:37:48.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.888" level="INFO">VALUE: [8.226400000000203e-05, 8.21109999999993e-05, 8.212499999999887e-05, 8.197300000000254e-05, 8.222299999999932e-05, 8.155500000000052e-05, 8.154100000000095e-05, 8.15269999999979e-05, 8.222199999999985e-05, 8.170799999999978e-05, 8.190300000000122e-05, 8.156999999999956e-05, 8.213899999999844e-05, 8.16109999999988e-05, 8.212500000000234e-05, 8.230599999999727e-05, 8.238799999999921e-05, 8.179099999999773e-05, 8.220800000000028e-05, 8.237500000000259e-05, 8.17919999999972e-05, 8.207000000000006e-05, 8.238899999999869e-05, 8.212499999999887e-05, 8.179200000000067e-05, 8.187499999999862e-05, 8.180600000000024e-05, 8.155500000000052e-05, 8.204200000000092e-05, 8.237499999999912e-05, 8.224999999999899e-05, 8.169400000000021e-05, 8.19719999999996e-05, 8.166699999999708e-05, 8.19589999999995e-05, 8.188900000000165e-05, 8.21390000000019e-05, 8.181900000000034e-05, 8.184699999999948e-05, 8.24720000000001e-05, 8.238899999999869e-05, 8.213899999999844e-05, 8.162499999999837e-05, 8.24720000000001e-05, 8.186100000000252e-05, 8.179200000000067e-05, 8.205600000000049e-05, 8.241600000000182e-05, 8.168000000000064e-05, 8.244399999999749e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.886" endtime="20201110 08:37:48.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.881" endtime="20201110 08:37:48.889"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.891" endtime="20201110 08:37:48.892"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.895" endtime="20201110 08:37:48.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.893" endtime="20201110 08:37:48.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.889" endtime="20201110 08:37:48.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.518" endtime="20201110 08:37:48.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.517" endtime="20201110 08:37:48.915"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.924" endtime="20201110 08:37:48.943"></status>
</kw>
<msg timestamp="20201110 08:37:48.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.922" endtime="20201110 08:37:48.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.945" endtime="20201110 08:37:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.947" endtime="20201110 08:37:48.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.920" endtime="20201110 08:37:48.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.918" endtime="20201110 08:37:48.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.957" endtime="20201110 08:37:49.243"></status>
</kw>
<msg timestamp="20201110 08:37:49.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.956" endtime="20201110 08:37:49.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022183514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.247" endtime="20201110 08:37:49.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.256" endtime="20201110 08:37:49.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.953" endtime="20201110 08:37:49.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.951" endtime="20201110 08:37:49.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.263" level="INFO">${RESULT} = [{'time': 0.022266653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.313899999999944e-05, 'source_diff': 8.313899999999944e-05}, {'time': 0.022368639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.259" endtime="20201110 08:37:49.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.276" level="INFO">${ACCURACY} = {'diff': [8.313899999999944e-05, 8.319499999999772e-05, 8.307000000000106e-05, 8.305600000000149e-05, 8.287500000000309e-05, 8.294400000000146e-05, 8.255499999999805e-05, 8.327799999999913e-05, 8.3221...</msg>
<status status="PASS" starttime="20201110 08:37:49.264" endtime="20201110 08:37:49.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.281" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.280" endtime="20201110 08:37:49.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.283" level="INFO">VALUE: [8.313899999999944e-05, 8.319499999999772e-05, 8.307000000000106e-05, 8.305600000000149e-05, 8.287500000000309e-05, 8.294400000000146e-05, 8.255499999999805e-05, 8.327799999999913e-05, 8.322199999999738e-05, 8.283299999999744e-05, 8.32919999999987e-05, 8.337500000000012e-05, 8.280600000000124e-05, 8.306999999999759e-05, 8.26109999999998e-05, 8.323600000000042e-05, 8.320900000000075e-05, 8.270800000000078e-05, 8.254099999999848e-05, 8.340299999999926e-05, 8.34720000000011e-05, 8.272200000000035e-05, 8.270800000000078e-05, 8.304200000000192e-05, 8.341599999999935e-05, 8.345899999999754e-05, 8.320900000000075e-05, 8.288799999999971e-05, 8.312499999999987e-05, 8.262499999999937e-05, 8.331900000000184e-05, 8.254200000000142e-05, 8.263899999999894e-05, 8.316699999999858e-05, 8.341599999999935e-05, 8.263899999999894e-05, 8.294500000000093e-05, 8.305600000000149e-05, 8.323600000000042e-05, 8.286100000000005e-05, 8.312499999999987e-05, 8.277799999999863e-05, 8.337500000000012e-05, 8.320799999999781e-05, 8.330600000000174e-05, 8.266700000000154e-05, 8.272299999999982e-05, 8.341599999999935e-05, 8.27780000000021e-05, 8.337500000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.282" endtime="20201110 08:37:49.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.277" endtime="20201110 08:37:49.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.287" endtime="20201110 08:37:49.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.290" endtime="20201110 08:37:49.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.289" endtime="20201110 08:37:49.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.285" endtime="20201110 08:37:49.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.916" endtime="20201110 08:37:49.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.916" endtime="20201110 08:37:49.311"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.320" endtime="20201110 08:37:49.339"></status>
</kw>
<msg timestamp="20201110 08:37:49.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.318" endtime="20201110 08:37:49.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.340" endtime="20201110 08:37:49.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.343" endtime="20201110 08:37:49.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.316" endtime="20201110 08:37:49.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.314" endtime="20201110 08:37:49.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.353" endtime="20201110 08:37:49.638"></status>
</kw>
<msg timestamp="20201110 08:37:49.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.351" endtime="20201110 08:37:49.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.643" endtime="20201110 08:37:49.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.651" endtime="20201110 08:37:49.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.349" endtime="20201110 08:37:49.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.347" endtime="20201110 08:37:49.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.658" level="INFO">${RESULT} = [{'time': 0.022215972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.377799999999963e-05, 'source_diff': 8.377799999999963e-05}, {'time': 0.022316986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.654" endtime="20201110 08:37:49.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.671" level="INFO">${ACCURACY} = {'diff': [8.377799999999963e-05, 8.38049999999993e-05, 8.433299999999894e-05, 8.42919999999997e-05, 8.354199999999895e-05, 8.404199999999945e-05, 8.402799999999988e-05, 8.409700000000173e-05, 8.422200...</msg>
<status status="PASS" starttime="20201110 08:37:49.659" endtime="20201110 08:37:49.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.676" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.675" endtime="20201110 08:37:49.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.678" level="INFO">VALUE: [8.377799999999963e-05, 8.38049999999993e-05, 8.433299999999894e-05, 8.42919999999997e-05, 8.354199999999895e-05, 8.404199999999945e-05, 8.402799999999988e-05, 8.409700000000173e-05, 8.422200000000185e-05, 8.422199999999838e-05, 8.434700000000198e-05, 8.37780000000031e-05, 8.387499999999715e-05, 8.448600000000167e-05, 8.376400000000006e-05, 8.388900000000019e-05, 8.397300000000107e-05, 8.437500000000112e-05, 8.42919999999997e-05, 8.436099999999808e-05, 8.38049999999993e-05, 8.438900000000069e-05, 8.44859999999982e-05, 8.357000000000156e-05, 8.372200000000135e-05, 8.419500000000218e-05, 8.402799999999988e-05, 8.355499999999905e-05, 8.394399999999899e-05, 8.377700000000016e-05, 8.438900000000069e-05, 8.379099999999973e-05, 8.419399999999924e-05, 8.351399999999981e-05, 8.416699999999958e-05, 8.373600000000092e-05, 8.355599999999852e-05, 8.355599999999852e-05, 8.434800000000145e-05, 8.445899999999854e-05, 8.39170000000028e-05, 8.450000000000124e-05, 8.437500000000112e-05, 8.43049999999998e-05, 8.416699999999958e-05, 8.404200000000292e-05, 8.423599999999795e-05, 8.370900000000125e-05, 8.388900000000019e-05, 8.4459000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.677" endtime="20201110 08:37:49.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.672" endtime="20201110 08:37:49.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.682" endtime="20201110 08:37:49.683"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.686" endtime="20201110 08:37:49.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.684" endtime="20201110 08:37:49.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.680" endtime="20201110 08:37:49.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.312" endtime="20201110 08:37:49.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.311" endtime="20201110 08:37:49.707"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.715" endtime="20201110 08:37:49.734"></status>
</kw>
<msg timestamp="20201110 08:37:49.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.714" endtime="20201110 08:37:49.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.736" endtime="20201110 08:37:49.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.738" endtime="20201110 08:37:49.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.711" endtime="20201110 08:37:49.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.709" endtime="20201110 08:37:49.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.748" endtime="20201110 08:37:50.035"></status>
</kw>
<msg timestamp="20201110 08:37:50.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.747" endtime="20201110 08:37:50.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022372958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.039" endtime="20201110 08:37:50.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.047" endtime="20201110 08:37:50.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.744" endtime="20201110 08:37:50.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.742" endtime="20201110 08:37:50.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.054" level="INFO">${RESULT} = [{'time': 0.022458056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.50980000000022e-05, 'source_diff': 8.50980000000022e-05}, {'time': 0.022565069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:50.051" endtime="20201110 08:37:50.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.069" level="INFO">${ACCURACY} = {'diff': [8.50980000000022e-05, 8.486099999999858e-05, 8.53469999999995e-05, 8.540299999999779e-05, 8.544400000000049e-05, 8.502800000000088e-05, 8.500000000000174e-05, 8.472199999999888e-05, 8.470899...</msg>
<status status="PASS" starttime="20201110 08:37:50.055" endtime="20201110 08:37:50.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.073" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.072" endtime="20201110 08:37:50.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.076" level="INFO">VALUE: [8.50980000000022e-05, 8.486099999999858e-05, 8.53469999999995e-05, 8.540299999999779e-05, 8.544400000000049e-05, 8.502800000000088e-05, 8.500000000000174e-05, 8.472199999999888e-05, 8.470899999999879e-05, 8.522299999999886e-05, 8.504200000000045e-05, 8.520899999999929e-05, 8.536100000000255e-05, 8.49859999999987e-05, 8.488899999999772e-05, 8.52920000000007e-05, 8.538899999999822e-05, 8.529199999999723e-05, 8.454199999999995e-05, 8.537500000000212e-05, 8.497300000000207e-05, 8.540200000000178e-05, 8.48050000000003e-05, 8.455500000000005e-05, 8.538900000000169e-05, 8.544400000000049e-05, 8.487500000000162e-05, 8.527800000000113e-05, 8.523599999999895e-05, 8.490300000000076e-05, 8.513900000000144e-05, 8.50980000000022e-05, 8.551400000000181e-05, 8.472200000000235e-05, 8.486099999999858e-05, 8.541700000000083e-05, 8.538899999999822e-05, 8.501399999999784e-05, 8.505600000000002e-05, 8.454199999999995e-05, 8.519499999999972e-05, 8.540199999999831e-05, 8.54859999999992e-05, 8.456899999999962e-05, 8.472199999999888e-05, 8.505499999999708e-05, 8.488899999999772e-05, 8.495799999999956e-05, 8.487499999999815e-05, 8.495799999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.074" endtime="20201110 08:37:50.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.070" endtime="20201110 08:37:50.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.079" endtime="20201110 08:37:50.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.083" endtime="20201110 08:37:50.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.081" endtime="20201110 08:37:50.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.078" endtime="20201110 08:37:50.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.708" endtime="20201110 08:37:50.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.707" endtime="20201110 08:37:50.104"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.112" endtime="20201110 08:37:50.132"></status>
</kw>
<msg timestamp="20201110 08:37:50.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.111" endtime="20201110 08:37:50.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.133" endtime="20201110 08:37:50.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.136" endtime="20201110 08:37:50.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.108" endtime="20201110 08:37:50.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.106" endtime="20201110 08:37:50.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.146" endtime="20201110 08:37:50.432"></status>
</kw>
<msg timestamp="20201110 08:37:50.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.144" endtime="20201110 08:37:50.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022173194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.436" endtime="20201110 08:37:50.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.445" endtime="20201110 08:37:50.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.142" endtime="20201110 08:37:50.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.140" endtime="20201110 08:37:50.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.451" level="INFO">${RESULT} = [{'time': 0.022173194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.595800000000056e-05, 'source_diff': 8.595800000000056e-05}, {'time': 0.022276194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:50.448" endtime="20201110 08:37:50.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.465" level="INFO">${ACCURACY} = {'diff': [8.595800000000056e-05, 8.604099999999851e-05, 8.623599999999995e-05, 8.638899999999922e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.594400000000099e-05, 8.582000000000034e-05, 8.61109...</msg>
<status status="PASS" starttime="20201110 08:37:50.452" endtime="20201110 08:37:50.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.469" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.468" endtime="20201110 08:37:50.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.472" level="INFO">VALUE: [8.595800000000056e-05, 8.604099999999851e-05, 8.623599999999995e-05, 8.638899999999922e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.594400000000099e-05, 8.582000000000034e-05, 8.611099999999983e-05, 8.630600000000127e-05, 8.644399999999802e-05, 8.595800000000056e-05, 8.638900000000269e-05, 8.63050000000018e-05, 8.583300000000044e-05, 8.595800000000056e-05, 8.555600000000052e-05, 8.573599999999945e-05, 8.604199999999798e-05, 8.605600000000102e-05, 8.638900000000269e-05, 8.644500000000097e-05, 8.623599999999995e-05, 8.640199999999931e-05, 8.593000000000142e-05, 8.588899999999872e-05, 8.563900000000194e-05, 8.619399999999777e-05, 8.61249999999994e-05, 8.64730000000001e-05, 8.587500000000262e-05, 8.597300000000307e-05, 8.620799999999734e-05, 8.587500000000262e-05, 8.611099999999983e-05, 8.56249999999989e-05, 8.595800000000056e-05, 8.570800000000031e-05, 8.609799999999973e-05, 8.558399999999966e-05, 8.590299999999829e-05, 8.602799999999841e-05, 8.570799999999684e-05, 8.640200000000278e-05, 8.627699999999919e-05, 8.620800000000081e-05, 8.640299999999879e-05, 8.59859999999997e-05, 8.607000000000059e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.471" endtime="20201110 08:37:50.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.466" endtime="20201110 08:37:50.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.476" endtime="20201110 08:37:50.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.479" endtime="20201110 08:37:50.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.477" endtime="20201110 08:37:50.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.474" endtime="20201110 08:37:50.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.105" endtime="20201110 08:37:50.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.104" endtime="20201110 08:37:50.500"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.509" endtime="20201110 08:37:50.528"></status>
</kw>
<msg timestamp="20201110 08:37:50.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.507" endtime="20201110 08:37:50.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.530" endtime="20201110 08:37:50.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.532" endtime="20201110 08:37:50.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.504" endtime="20201110 08:37:50.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.502" endtime="20201110 08:37:50.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.542" endtime="20201110 08:37:50.828"></status>
</kw>
<msg timestamp="20201110 08:37:50.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.541" endtime="20201110 08:37:50.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.832" endtime="20201110 08:37:50.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.840" endtime="20201110 08:37:50.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.538" endtime="20201110 08:37:50.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.536" endtime="20201110 08:37:50.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.847" level="INFO">${RESULT} = [{'time': 0.022615764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.74449999999985e-05, 'source_diff': 8.74449999999985e-05}, {'time': 0.022726778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:50.844" endtime="20201110 08:37:50.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.861" level="INFO">${ACCURACY} = {'diff': [8.74449999999985e-05, 8.704199999999898e-05, 8.670900000000079e-05, 8.670900000000079e-05, 8.704099999999951e-05, 8.704099999999951e-05, 8.720799999999834e-05, 8.705499999999908e-05, 8.70549...</msg>
<status status="PASS" starttime="20201110 08:37:50.848" endtime="20201110 08:37:50.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.865" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.864" endtime="20201110 08:37:50.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.868" level="INFO">VALUE: [8.74449999999985e-05, 8.704199999999898e-05, 8.670900000000079e-05, 8.670900000000079e-05, 8.704099999999951e-05, 8.704099999999951e-05, 8.720799999999834e-05, 8.705499999999908e-05, 8.705499999999908e-05, 8.737500000000065e-05, 8.71250000000004e-05, 8.659700000000076e-05, 8.68059999999983e-05, 8.720900000000129e-05, 8.654199999999848e-05, 8.744400000000249e-05, 8.68050000000023e-05, 8.706900000000212e-05, 8.656900000000162e-05, 8.740299999999979e-05, 8.677800000000263e-05, 8.687500000000015e-05, 8.73059999999988e-05, 8.738900000000022e-05, 8.745899999999807e-05, 8.655500000000205e-05, 8.704099999999951e-05, 8.740299999999979e-05, 8.745799999999859e-05, 8.670799999999784e-05, 8.737500000000065e-05, 8.68059999999983e-05, 8.690299999999929e-05, 8.663899999999947e-05, 8.715200000000006e-05, 8.745800000000206e-05, 8.670800000000131e-05, 8.652700000000291e-05, 8.737500000000065e-05, 8.747199999999816e-05, 8.654199999999848e-05, 8.655600000000152e-05, 8.654199999999848e-05, 8.652799999999891e-05, 8.687500000000015e-05, 8.713899999999997e-05, 8.680499999999883e-05, 8.688899999999972e-05, 8.697199999999766e-05, 8.654199999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.866" endtime="20201110 08:37:50.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.862" endtime="20201110 08:37:50.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.871" endtime="20201110 08:37:50.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.875" endtime="20201110 08:37:50.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.873" endtime="20201110 08:37:50.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.870" endtime="20201110 08:37:50.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.501" endtime="20201110 08:37:50.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.500" endtime="20201110 08:37:50.896"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.905" endtime="20201110 08:37:50.924"></status>
</kw>
<msg timestamp="20201110 08:37:50.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.903" endtime="20201110 08:37:50.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.926" endtime="20201110 08:37:50.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.928" endtime="20201110 08:37:50.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.900" endtime="20201110 08:37:50.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.898" endtime="20201110 08:37:50.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.938" endtime="20201110 08:37:51.225"></status>
</kw>
<msg timestamp="20201110 08:37:51.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.937" endtime="20201110 08:37:51.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.229" endtime="20201110 08:37:51.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.237" endtime="20201110 08:37:51.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.934" endtime="20201110 08:37:51.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.932" endtime="20201110 08:37:51.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.244" level="INFO">${RESULT} = [{'time': 0.022185431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.826399999999762e-05, 'source_diff': 8.826399999999762e-05}, {'time': 0.022290444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.241" endtime="20201110 08:37:51.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.258" level="INFO">${ACCURACY} = {'diff': [8.826399999999762e-05, 8.844400000000002e-05, 8.804099999999704e-05, 8.769400000000274e-05, 8.81250000000014e-05, 8.752799999999991e-05, 8.838900000000122e-05, 8.77920000000032e-05, 8.801400...</msg>
<status status="PASS" starttime="20201110 08:37:51.245" endtime="20201110 08:37:51.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.262" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.261" endtime="20201110 08:37:51.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.265" level="INFO">VALUE: [8.826399999999762e-05, 8.844400000000002e-05, 8.804099999999704e-05, 8.769400000000274e-05, 8.81250000000014e-05, 8.752799999999991e-05, 8.838900000000122e-05, 8.77920000000032e-05, 8.801400000000084e-05, 8.820899999999882e-05, 8.761100000000133e-05, 8.772200000000188e-05, 8.772200000000188e-05, 8.790300000000029e-05, 8.831900000000337e-05, 8.755599999999905e-05, 8.787500000000115e-05, 8.84449999999995e-05, 8.751400000000034e-05, 8.758299999999872e-05, 8.820899999999882e-05, 8.770800000000231e-05, 8.834699999999904e-05, 8.813900000000097e-05, 8.81250000000014e-05, 8.820799999999934e-05, 8.754199999999948e-05, 8.773600000000145e-05, 8.822300000000186e-05, 8.788900000000072e-05, 8.780499999999983e-05, 8.755499999999958e-05, 8.777800000000016e-05, 8.804099999999704e-05, 8.793099999999943e-05, 8.83189999999999e-05, 8.765300000000004e-05, 8.790299999999682e-05, 8.797199999999866e-05, 8.788900000000072e-05, 8.845899999999907e-05, 8.826400000000109e-05, 8.802699999999747e-05, 8.769399999999927e-05, 8.790300000000029e-05, 8.83189999999999e-05, 8.822199999999891e-05, 8.757000000000209e-05, 8.772200000000188e-05, 8.784699999999854e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.263" endtime="20201110 08:37:51.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.259" endtime="20201110 08:37:51.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.268" endtime="20201110 08:37:51.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.272" endtime="20201110 08:37:51.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.270" endtime="20201110 08:37:51.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.267" endtime="20201110 08:37:51.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.897" endtime="20201110 08:37:51.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.896" endtime="20201110 08:37:51.293"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.301" endtime="20201110 08:37:51.321"></status>
</kw>
<msg timestamp="20201110 08:37:51.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.300" endtime="20201110 08:37:51.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.323" endtime="20201110 08:37:51.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.325" endtime="20201110 08:37:51.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.297" endtime="20201110 08:37:51.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.295" endtime="20201110 08:37:51.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.335" endtime="20201110 08:37:51.620"></status>
</kw>
<msg timestamp="20201110 08:37:51.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.334" endtime="20201110 08:37:51.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022560236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.625" endtime="20201110 08:37:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.633" endtime="20201110 08:37:51.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.331" endtime="20201110 08:37:51.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.329" endtime="20201110 08:37:51.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.640" level="INFO">${RESULT} = [{'time': 0.022560236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.877800000000116e-05, 'source_diff': 8.877800000000116e-05}, {'time': 0.02266525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:51.636" endtime="20201110 08:37:51.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.654" level="INFO">${ACCURACY} = {'diff': [8.877800000000116e-05, 8.863900000000147e-05, 8.924999999999905e-05, 8.922199999999991e-05, 8.918100000000068e-05, 8.908300000000022e-05, 8.945800000000059e-05, 8.927699999999872e-05, 8.9194...</msg>
<status status="PASS" starttime="20201110 08:37:51.641" endtime="20201110 08:37:51.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.659" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.658" endtime="20201110 08:37:51.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.661" level="INFO">VALUE: [8.877800000000116e-05, 8.863900000000147e-05, 8.924999999999905e-05, 8.922199999999991e-05, 8.918100000000068e-05, 8.908300000000022e-05, 8.945800000000059e-05, 8.927699999999872e-05, 8.919400000000077e-05, 8.855500000000058e-05, 8.890300000000129e-05, 8.91670000000011e-05, 8.932000000000037e-05, 8.941700000000136e-05, 8.86250000000019e-05, 8.91389999999985e-05, 8.895899999999957e-05, 8.941599999999841e-05, 8.895800000000009e-05, 8.906900000000065e-05, 8.872199999999941e-05, 8.904200000000098e-05, 8.923600000000295e-05, 8.919500000000025e-05, 8.855600000000005e-05, 8.870900000000279e-05, 8.938799999999927e-05, 8.86250000000019e-05, 8.865300000000104e-05, 8.863900000000147e-05, 8.895800000000009e-05, 8.940299999999832e-05, 8.945800000000059e-05, 8.923599999999948e-05, 8.872299999999889e-05, 8.923599999999948e-05, 8.906900000000065e-05, 8.870799999999984e-05, 8.920800000000034e-05, 8.901400000000184e-05, 8.872199999999941e-05, 8.920800000000034e-05, 8.879099999999779e-05, 8.872199999999941e-05, 8.93060000000008e-05, 8.876399999999812e-05, 8.922200000000338e-05, 8.940299999999832e-05, 8.863900000000147e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.660" endtime="20201110 08:37:51.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.655" endtime="20201110 08:37:51.663"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.665" endtime="20201110 08:37:51.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.668" endtime="20201110 08:37:51.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.667" endtime="20201110 08:37:51.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.663" endtime="20201110 08:37:51.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.294" endtime="20201110 08:37:51.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.293" endtime="20201110 08:37:51.689"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.698" endtime="20201110 08:37:51.718"></status>
</kw>
<msg timestamp="20201110 08:37:51.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.696" endtime="20201110 08:37:51.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.719" endtime="20201110 08:37:51.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.722" endtime="20201110 08:37:51.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.694" endtime="20201110 08:37:51.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.692" endtime="20201110 08:37:51.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.732" endtime="20201110 08:37:52.018"></status>
</kw>
<msg timestamp="20201110 08:37:52.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.730" endtime="20201110 08:37:52.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022442611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.022" endtime="20201110 08:37:52.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.031" endtime="20201110 08:37:52.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.728" endtime="20201110 08:37:52.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.726" endtime="20201110 08:37:52.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.038" level="INFO">${RESULT} = [{'time': 0.022442611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027800000000266e-05, 'source_diff': 9.027800000000266e-05}, {'time': 0.022551639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.034" endtime="20201110 08:37:52.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.051" level="INFO">${ACCURACY} = {'diff': [9.027800000000266e-05, 9.030599999999833e-05, 8.973599999999998e-05, 8.970899999999685e-05, 9.004199999999851e-05, 9.005599999999808e-05, 9.008300000000122e-05, 9.005500000000208e-05, 8.9902...</msg>
<status status="PASS" starttime="20201110 08:37:52.039" endtime="20201110 08:37:52.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.056" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.055" endtime="20201110 08:37:52.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.058" level="INFO">VALUE: [9.027800000000266e-05, 9.030599999999833e-05, 8.973599999999998e-05, 8.970899999999685e-05, 9.004199999999851e-05, 9.005599999999808e-05, 9.008300000000122e-05, 9.005500000000208e-05, 8.990299999999882e-05, 9.045799999999812e-05, 8.988899999999925e-05, 8.997200000000066e-05, 9.037500000000018e-05, 9.04589999999976e-05, 9.022300000000039e-05, 8.96800000000017e-05, 9.005499999999861e-05, 9.020800000000134e-05, 8.972200000000041e-05, 9.038899999999975e-05, 9.01389999999995e-05, 8.979200000000173e-05, 9.020799999999787e-05, 9.040300000000279e-05, 8.997300000000014e-05, 9.020900000000082e-05, 8.972199999999694e-05, 9.005499999999861e-05, 8.986100000000011e-05, 8.995799999999762e-05, 9.002799999999894e-05, 9.03199999999979e-05, 9.029199999999876e-05, 9.03060000000018e-05, 8.979199999999826e-05, 8.970799999999737e-05, 8.988799999999977e-05, 9.047200000000116e-05, 8.955500000000158e-05, 8.988900000000272e-05, 9.040299999999932e-05, 8.986100000000011e-05, 9.045900000000107e-05, 8.990299999999882e-05, 8.982000000000087e-05, 9.012499999999993e-05, 9.005499999999861e-05, 9.038899999999975e-05, 8.995800000000109e-05, 8.972200000000041e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.057" endtime="20201110 08:37:52.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.052" endtime="20201110 08:37:52.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.062" endtime="20201110 08:37:52.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.065" endtime="20201110 08:37:52.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.064" endtime="20201110 08:37:52.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.060" endtime="20201110 08:37:52.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.690" endtime="20201110 08:37:52.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.689" endtime="20201110 08:37:52.086"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.095" endtime="20201110 08:37:52.115"></status>
</kw>
<msg timestamp="20201110 08:37:52.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.093" endtime="20201110 08:37:52.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.116" endtime="20201110 08:37:52.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.119" endtime="20201110 08:37:52.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.091" endtime="20201110 08:37:52.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.089" endtime="20201110 08:37:52.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.129" endtime="20201110 08:37:52.415"></status>
</kw>
<msg timestamp="20201110 08:37:52.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.128" endtime="20201110 08:37:52.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022501903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.419" endtime="20201110 08:37:52.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.428" endtime="20201110 08:37:52.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.125" endtime="20201110 08:37:52.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.123" endtime="20201110 08:37:52.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.434" level="INFO">${RESULT} = [{'time': 0.022592847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.094399999999905e-05, 'source_diff': 9.094399999999905e-05}, {'time': 0.022704861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.431" endtime="20201110 08:37:52.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.448" level="INFO">${ACCURACY} = {'diff': [9.094399999999905e-05, 9.134699999999857e-05, 9.130599999999933e-05, 9.073600000000098e-05, 9.072200000000141e-05, 9.138900000000075e-05, 9.131899999999943e-05, 9.088800000000077e-05, 9.1138...</msg>
<status status="PASS" starttime="20201110 08:37:52.435" endtime="20201110 08:37:52.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.453" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.452" endtime="20201110 08:37:52.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.455" level="INFO">VALUE: [9.094399999999905e-05, 9.134699999999857e-05, 9.130599999999933e-05, 9.073600000000098e-05, 9.072200000000141e-05, 9.138900000000075e-05, 9.131899999999943e-05, 9.088800000000077e-05, 9.113899999999703e-05, 9.126400000000062e-05, 9.138900000000075e-05, 9.095799999999862e-05, 9.054200000000248e-05, 9.070799999999837e-05, 9.120900000000182e-05, 9.138899999999728e-05, 9.080599999999883e-05, 9.142999999999998e-05, 9.145800000000259e-05, 9.055499999999911e-05, 9.106900000000265e-05, 9.087499999999721e-05, 9.080599999999883e-05, 9.069499999999828e-05, 9.048600000000073e-05, 9.137500000000118e-05, 9.080599999999883e-05, 9.055499999999911e-05, 9.138900000000075e-05, 9.116699999999964e-05, 9.080500000000283e-05, 9.054199999999901e-05, 9.144399999999955e-05, 9.0639e-05, 9.09870000000007e-05, 9.08199999999984e-05, 9.090299999999982e-05, 9.137500000000118e-05, 9.14719999999987e-05, 9.088900000000025e-05, 9.11390000000005e-05, 9.14719999999987e-05, 9.056999999999815e-05, 9.137499999999771e-05, 9.080599999999883e-05, 9.054199999999901e-05, 9.087499999999721e-05, 9.095800000000209e-05, 9.084700000000154e-05, 9.0639e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.454" endtime="20201110 08:37:52.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.449" endtime="20201110 08:37:52.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.459" endtime="20201110 08:37:52.460"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.462" endtime="20201110 08:37:52.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.461" endtime="20201110 08:37:52.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.457" endtime="20201110 08:37:52.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.087" endtime="20201110 08:37:52.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.086" endtime="20201110 08:37:52.483"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.492" endtime="20201110 08:37:52.512"></status>
</kw>
<msg timestamp="20201110 08:37:52.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.490" endtime="20201110 08:37:52.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.513" endtime="20201110 08:37:52.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.516" endtime="20201110 08:37:52.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.488" endtime="20201110 08:37:52.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.485" endtime="20201110 08:37:52.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.526" endtime="20201110 08:37:52.812"></status>
</kw>
<msg timestamp="20201110 08:37:52.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.524" endtime="20201110 08:37:52.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.817" endtime="20201110 08:37:52.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.825" endtime="20201110 08:37:52.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.522" endtime="20201110 08:37:52.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.520" endtime="20201110 08:37:52.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.832" level="INFO">${RESULT} = [{'time': 0.022622111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.201400000000137e-05, 'source_diff': 9.201400000000137e-05}, {'time': 0.022731069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.828" endtime="20201110 08:37:52.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.845" level="INFO">${ACCURACY} = {'diff': [9.201400000000137e-05, 9.240199999999837e-05, 9.179100000000079e-05, 9.237500000000218e-05, 9.166700000000014e-05, 9.212500000000193e-05, 9.177800000000069e-05, 9.190299999999735e-05, 9.2403...</msg>
<status status="PASS" starttime="20201110 08:37:52.833" endtime="20201110 08:37:52.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.850" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.849" endtime="20201110 08:37:52.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.852" level="INFO">VALUE: [9.201400000000137e-05, 9.240199999999837e-05, 9.179100000000079e-05, 9.237500000000218e-05, 9.166700000000014e-05, 9.212500000000193e-05, 9.177800000000069e-05, 9.190299999999735e-05, 9.240300000000132e-05, 9.238899999999828e-05, 9.213899999999803e-05, 9.175000000000155e-05, 9.240200000000184e-05, 9.198600000000223e-05, 9.205499999999714e-05, 9.237499999999871e-05, 9.154200000000001e-05, 9.244400000000055e-05, 9.238899999999828e-05, 9.165300000000057e-05, 9.21390000000015e-05, 9.231900000000043e-05, 9.223599999999901e-05, 9.1639000000001e-05, 9.238899999999828e-05, 9.199999999999833e-05, 9.236099999999914e-05, 9.243100000000046e-05, 9.204200000000051e-05, 9.18199999999994e-05, 9.162500000000143e-05, 9.1639000000001e-05, 9.166600000000066e-05, 9.248599999999926e-05, 9.236099999999914e-05, 9.1639000000001e-05, 9.161100000000186e-05, 9.19719999999992e-05, 9.202799999999747e-05, 9.209699999999932e-05, 9.173700000000146e-05, 9.226399999999815e-05, 9.159699999999882e-05, 9.154100000000054e-05, 9.206900000000018e-05, 9.24589999999996e-05, 9.19719999999992e-05, 9.186099999999864e-05, 9.212499999999846e-05, 9.180599999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.851" endtime="20201110 08:37:52.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.846" endtime="20201110 08:37:52.854"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.856" endtime="20201110 08:37:52.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.860" endtime="20201110 08:37:52.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.858" endtime="20201110 08:37:52.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.854" endtime="20201110 08:37:52.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.484" endtime="20201110 08:37:52.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.483" endtime="20201110 08:37:52.880"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.889" endtime="20201110 08:37:52.909"></status>
</kw>
<msg timestamp="20201110 08:37:52.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.887" endtime="20201110 08:37:52.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.910" endtime="20201110 08:37:52.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.913" endtime="20201110 08:37:52.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.885" endtime="20201110 08:37:52.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.883" endtime="20201110 08:37:52.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.923" endtime="20201110 08:37:53.208"></status>
</kw>
<msg timestamp="20201110 08:37:53.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.921" endtime="20201110 08:37:53.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.212" endtime="20201110 08:37:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.220" endtime="20201110 08:37:53.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.919" endtime="20201110 08:37:53.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.917" endtime="20201110 08:37:53.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.227" level="INFO">${RESULT} = [{'time': 0.022066375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.294399999999758e-05, 'source_diff': 9.294399999999758e-05}, {'time': 0.022180389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.223" endtime="20201110 08:37:53.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.241" level="INFO">${ACCURACY} = {'diff': [9.294399999999758e-05, 9.305599999999761e-05, 9.254199999999754e-05, 9.322299999999992e-05, 9.305600000000108e-05, 9.263899999999853e-05, 9.274999999999908e-05, 9.30139999999989e-05, 9.30409...</msg>
<status status="PASS" starttime="20201110 08:37:53.228" endtime="20201110 08:37:53.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.246" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.245" endtime="20201110 08:37:53.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.249" level="INFO">VALUE: [9.294399999999758e-05, 9.305599999999761e-05, 9.254199999999754e-05, 9.322299999999992e-05, 9.305600000000108e-05, 9.263899999999853e-05, 9.274999999999908e-05, 9.30139999999989e-05, 9.304099999999857e-05, 9.287499999999921e-05, 9.33200000000009e-05, 9.322200000000044e-05, 9.30139999999989e-05, 9.309700000000032e-05, 9.304199999999804e-05, 9.304100000000204e-05, 9.311099999999989e-05, 9.288899999999878e-05, 9.344400000000155e-05, 9.287499999999921e-05, 9.330600000000133e-05, 9.272199999999994e-05, 9.30139999999989e-05, 9.338899999999928e-05, 9.34590000000006e-05, 9.336100000000014e-05, 9.313899999999903e-05, 9.313899999999903e-05, 9.277799999999822e-05, 9.254199999999754e-05, 9.306999999999718e-05, 9.287499999999921e-05, 9.284700000000007e-05, 9.311099999999989e-05, 9.33879999999998e-05, 9.330500000000186e-05, 9.288900000000225e-05, 9.331900000000143e-05, 9.320800000000087e-05, 9.288899999999878e-05, 9.291700000000139e-05, 9.304199999999804e-05, 9.287499999999921e-05, 9.329200000000176e-05, 9.337499999999971e-05, 9.295800000000062e-05, 9.288899999999878e-05, 9.297199999999672e-05, 9.272199999999994e-05, 9.320800000000087e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.247" endtime="20201110 08:37:53.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.242" endtime="20201110 08:37:53.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.252" endtime="20201110 08:37:53.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.256" endtime="20201110 08:37:53.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.254" endtime="20201110 08:37:53.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.250" endtime="20201110 08:37:53.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.881" endtime="20201110 08:37:53.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.881" endtime="20201110 08:37:53.277"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.285" endtime="20201110 08:37:53.305"></status>
</kw>
<msg timestamp="20201110 08:37:53.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.284" endtime="20201110 08:37:53.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.306" endtime="20201110 08:37:53.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.309" endtime="20201110 08:37:53.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.281" endtime="20201110 08:37:53.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.279" endtime="20201110 08:37:53.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.319" endtime="20201110 08:37:53.605"></status>
</kw>
<msg timestamp="20201110 08:37:53.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.317" endtime="20201110 08:37:53.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022104181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.609" endtime="20201110 08:37:53.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.617" endtime="20201110 08:37:53.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.315" endtime="20201110 08:37:53.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.313" endtime="20201110 08:37:53.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.624" level="INFO">${RESULT} = [{'time': 0.022197958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.377699999999975e-05, 'source_diff': 9.377699999999975e-05}, {'time': 0.022310972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.621" endtime="20201110 08:37:53.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.638" level="INFO">${ACCURACY} = {'diff': [9.377699999999975e-05, 9.430499999999939e-05, 9.373600000000051e-05, 9.388899999999978e-05, 9.39720000000012e-05, 9.436100000000114e-05, 9.413900000000003e-05, 9.418000000000273e-05, 9.44719...</msg>
<status status="PASS" starttime="20201110 08:37:53.625" endtime="20201110 08:37:53.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.643" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.642" endtime="20201110 08:37:53.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.646" level="INFO">VALUE: [9.377699999999975e-05, 9.430499999999939e-05, 9.373600000000051e-05, 9.388899999999978e-05, 9.39720000000012e-05, 9.436100000000114e-05, 9.413900000000003e-05, 9.418000000000273e-05, 9.447199999999822e-05, 9.433299999999853e-05, 9.415300000000307e-05, 9.397199999999772e-05, 9.36940000000018e-05, 9.404200000000251e-05, 9.404199999999904e-05, 9.437499999999724e-05, 9.361100000000039e-05, 9.404200000000251e-05, 9.405499999999914e-05, 9.422200000000144e-05, 9.405499999999914e-05, 9.405499999999914e-05, 9.437500000000071e-05, 9.44720000000017e-05, 9.369500000000128e-05, 9.370900000000085e-05, 9.405600000000208e-05, 9.422200000000144e-05, 9.355500000000211e-05, 9.413900000000003e-05, 9.354099999999907e-05, 9.370800000000137e-05, 9.438900000000028e-05, 9.447199999999822e-05, 9.423600000000101e-05, 9.370900000000085e-05, 9.373600000000051e-05, 9.356899999999821e-05, 9.397199999999772e-05, 9.406900000000218e-05, 9.390299999999935e-05, 9.40139999999999e-05, 9.37079999999979e-05, 9.352799999999897e-05, 9.387500000000021e-05, 9.44590000000016e-05, 9.370900000000085e-05, 9.440200000000037e-05, 9.45140000000004e-05, 9.405499999999914e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.644" endtime="20201110 08:37:53.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.639" endtime="20201110 08:37:53.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.649" endtime="20201110 08:37:53.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.653" endtime="20201110 08:37:53.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.651" endtime="20201110 08:37:53.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.648" endtime="20201110 08:37:53.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.277" endtime="20201110 08:37:53.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.277" endtime="20201110 08:37:53.674"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.683" endtime="20201110 08:37:53.703"></status>
</kw>
<msg timestamp="20201110 08:37:53.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.681" endtime="20201110 08:37:53.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.704" endtime="20201110 08:37:53.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.707" endtime="20201110 08:37:53.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.679" endtime="20201110 08:37:53.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.676" endtime="20201110 08:37:53.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.718" endtime="20201110 08:37:54.025"></status>
</kw>
<msg timestamp="20201110 08:37:54.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.716" endtime="20201110 08:37:54.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.030" endtime="20201110 08:37:54.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.038" endtime="20201110 08:37:54.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.714" endtime="20201110 08:37:54.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.712" endtime="20201110 08:37:54.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.046" level="INFO">${RESULT} = [{'time': 0.022801833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.544400000000008e-05, 'source_diff': 9.544400000000008e-05}, {'time': 0.022918847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.042" endtime="20201110 08:37:54.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.060" level="INFO">${ACCURACY} = {'diff': [9.544400000000008e-05, 9.537499999999824e-05, 9.462500000000096e-05, 9.494400000000305e-05, 9.533299999999953e-05, 9.498700000000124e-05, 9.470899999999838e-05, 9.523599999999854e-05, 9.4736...</msg>
<status status="PASS" starttime="20201110 08:37:54.047" endtime="20201110 08:37:54.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.065" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.064" endtime="20201110 08:37:54.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.067" level="INFO">VALUE: [9.544400000000008e-05, 9.537499999999824e-05, 9.462500000000096e-05, 9.494400000000305e-05, 9.533299999999953e-05, 9.498700000000124e-05, 9.470899999999838e-05, 9.523599999999854e-05, 9.473600000000151e-05, 9.473599999999804e-05, 9.488899999999731e-05, 9.484700000000207e-05, 9.490300000000035e-05, 9.495799999999915e-05, 9.455599999999911e-05, 9.454199999999954e-05, 9.537500000000171e-05, 9.494499999999906e-05, 9.484700000000207e-05, 9.545799999999965e-05, 9.450000000000083e-05, 9.490300000000035e-05, 9.497199999999872e-05, 9.523599999999854e-05, 9.491699999999992e-05, 9.463900000000053e-05, 9.531899999999996e-05, 9.448600000000126e-05, 9.540299999999738e-05, 9.513899999999756e-05, 9.545799999999965e-05, 9.541700000000042e-05, 9.54720000000027e-05, 9.500000000000133e-05, 9.455599999999911e-05, 9.458300000000225e-05, 9.454199999999954e-05, 9.487500000000121e-05, 9.495800000000262e-05, 9.486099999999817e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.469399999999933e-05, 9.547199999999922e-05, 9.455599999999911e-05, 9.488900000000078e-05, 9.481899999999946e-05, 9.540300000000085e-05, 9.512500000000146e-05, 9.530500000000039e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.066" endtime="20201110 08:37:54.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.061" endtime="20201110 08:37:54.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.071" endtime="20201110 08:37:54.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.075" endtime="20201110 08:37:54.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.073" endtime="20201110 08:37:54.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.069" endtime="20201110 08:37:54.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.675" endtime="20201110 08:37:54.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.674" endtime="20201110 08:37:54.096"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.105" endtime="20201110 08:37:54.125"></status>
</kw>
<msg timestamp="20201110 08:37:54.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.103" endtime="20201110 08:37:54.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.127" endtime="20201110 08:37:54.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.129" endtime="20201110 08:37:54.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.100" endtime="20201110 08:37:54.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.098" endtime="20201110 08:37:54.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.140" endtime="20201110 08:37:54.425"></status>
</kw>
<msg timestamp="20201110 08:37:54.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.138" endtime="20201110 08:37:54.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022500819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.430" endtime="20201110 08:37:54.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.438" endtime="20201110 08:37:54.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.135" endtime="20201110 08:37:54.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.134" endtime="20201110 08:37:54.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.445" level="INFO">${RESULT} = [{'time': 0.022597264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.644500000000056e-05, 'source_diff': 9.644500000000056e-05}, {'time': 0.022712278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.442" endtime="20201110 08:37:54.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.459" level="INFO">${ACCURACY} = {'diff': [9.644500000000056e-05, 9.572199999999947e-05, 9.636099999999967e-05, 9.64729999999997e-05, 9.569400000000033e-05, 9.605500000000114e-05, 9.57079999999999e-05, 9.623599999999954e-05, 9.625000...</msg>
<status status="PASS" starttime="20201110 08:37:54.446" endtime="20201110 08:37:54.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.464" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.463" endtime="20201110 08:37:54.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.466" level="INFO">VALUE: [9.644500000000056e-05, 9.572199999999947e-05, 9.636099999999967e-05, 9.64729999999997e-05, 9.569400000000033e-05, 9.605500000000114e-05, 9.57079999999999e-05, 9.623599999999954e-05, 9.625000000000258e-05, 9.554200000000054e-05, 9.586099999999917e-05, 9.626399999999868e-05, 9.58059999999969e-05, 9.613800000000255e-05, 9.627699999999878e-05, 9.555500000000064e-05, 9.588899999999831e-05, 9.594399999999711e-05, 9.622199999999997e-05, 9.587499999999874e-05, 9.613899999999856e-05, 9.580600000000036e-05, 9.609699999999985e-05, 9.587499999999874e-05, 9.6027999999998e-05, 9.620799999999693e-05, 9.55409999999976e-05, 9.593100000000049e-05, 9.644400000000108e-05, 9.604200000000104e-05, 9.587499999999874e-05, 9.631900000000096e-05, 9.633299999999706e-05, 9.612499999999899e-05, 9.563899999999806e-05, 9.611099999999942e-05, 9.563899999999806e-05, 9.615299999999813e-05, 9.597199999999972e-05, 9.620899999999988e-05, 9.587500000000221e-05, 9.562499999999849e-05, 9.562500000000196e-05, 9.631900000000096e-05, 9.638899999999881e-05, 9.613899999999856e-05, 9.562500000000196e-05, 9.629199999999782e-05, 9.618100000000074e-05, 9.581999999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.465" endtime="20201110 08:37:54.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.460" endtime="20201110 08:37:54.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.470" endtime="20201110 08:37:54.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.474" endtime="20201110 08:37:54.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.472" endtime="20201110 08:37:54.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.468" endtime="20201110 08:37:54.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.097" endtime="20201110 08:37:54.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.096" endtime="20201110 08:37:54.495"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.504" endtime="20201110 08:37:54.524"></status>
</kw>
<msg timestamp="20201110 08:37:54.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.502" endtime="20201110 08:37:54.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.525" endtime="20201110 08:37:54.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.528" endtime="20201110 08:37:54.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.499" endtime="20201110 08:37:54.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.497" endtime="20201110 08:37:54.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.538" endtime="20201110 08:37:54.825"></status>
</kw>
<msg timestamp="20201110 08:37:54.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.537" endtime="20201110 08:37:54.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022544056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.829" endtime="20201110 08:37:54.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.838" endtime="20201110 08:37:54.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.534" endtime="20201110 08:37:54.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.532" endtime="20201110 08:37:54.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.844" level="INFO">${RESULT} = [{'time': 0.022640847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.679099999999885e-05, 'source_diff': 9.679099999999885e-05}, {'time': 0.022760847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.841" endtime="20201110 08:37:54.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.906" level="INFO">${ACCURACY} = {'diff': [9.679099999999885e-05, 9.679100000000232e-05, 9.719399999999837e-05, 9.719400000000183e-05, 9.651399999999893e-05, 9.669500000000081e-05, 9.732000000000143e-05, 9.729199999999882e-05, 9.7387...</msg>
<status status="PASS" starttime="20201110 08:37:54.845" endtime="20201110 08:37:54.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.911" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.910" endtime="20201110 08:37:54.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.913" level="INFO">VALUE: [9.679099999999885e-05, 9.679100000000232e-05, 9.719399999999837e-05, 9.719400000000183e-05, 9.651399999999893e-05, 9.669500000000081e-05, 9.732000000000143e-05, 9.729199999999882e-05, 9.738799999999687e-05, 9.712499999999999e-05, 9.681900000000146e-05, 9.720799999999793e-05, 9.712499999999999e-05, 9.655600000000111e-05, 9.690300000000235e-05, 9.74730000000007e-05, 9.654199999999807e-05, 9.72219999999975e-05, 9.706899999999824e-05, 9.705500000000214e-05, 9.690300000000235e-05, 9.732000000000143e-05, 9.738899999999981e-05, 9.68470000000006e-05, 9.738899999999981e-05, 9.67920000000018e-05, 9.655499999999817e-05, 9.65409999999986e-05, 9.701399999999943e-05, 9.705500000000214e-05, 9.722200000000097e-05, 9.688899999999931e-05, 9.722200000000097e-05, 9.663900000000253e-05, 9.677799999999875e-05, 9.743100000000199e-05, 9.699999999999986e-05, 9.740299999999938e-05, 9.681899999999799e-05, 9.738899999999981e-05, 9.662499999999949e-05, 9.747200000000122e-05, 9.654200000000154e-05, 9.705599999999814e-05, 9.705599999999814e-05, 9.719499999999784e-05, 9.737500000000024e-05, 9.712499999999999e-05, 9.680500000000189e-05, 9.687499999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.912" endtime="20201110 08:37:54.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.907" endtime="20201110 08:37:54.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.917" endtime="20201110 08:37:54.919"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.921" endtime="20201110 08:37:54.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.919" endtime="20201110 08:37:54.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.915" endtime="20201110 08:37:54.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.496" endtime="20201110 08:37:54.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.495" endtime="20201110 08:37:54.942"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.950" endtime="20201110 08:37:54.970"></status>
</kw>
<msg timestamp="20201110 08:37:54.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.949" endtime="20201110 08:37:54.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.971" endtime="20201110 08:37:54.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.974" endtime="20201110 08:37:54.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.946" endtime="20201110 08:37:54.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.944" endtime="20201110 08:37:54.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.983" endtime="20201110 08:37:55.269"></status>
</kw>
<msg timestamp="20201110 08:37:55.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022148569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.981" endtime="20201110 08:37:55.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022148569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.273" endtime="20201110 08:37:55.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.282" endtime="20201110 08:37:55.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.979" endtime="20201110 08:37:55.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.977" endtime="20201110 08:37:55.284"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.288" level="INFO">${RESULT} = [{'time': 0.022148569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.761100000000092e-05, 'source_diff': 9.761100000000092e-05}, {'time': 0.022269583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:55.285" endtime="20201110 08:37:55.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.302" level="INFO">${ACCURACY} = {'diff': [9.761100000000092e-05, 9.837499999999777e-05, 9.830499999999992e-05, 9.823599999999807e-05, 9.806999999999871e-05, 9.755599999999864e-05, 9.755600000000211e-05, 9.822300000000145e-05, 9.7875...</msg>
<status status="PASS" starttime="20201110 08:37:55.289" endtime="20201110 08:37:55.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.307" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.306" endtime="20201110 08:37:55.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.309" level="INFO">VALUE: [9.761100000000092e-05, 9.837499999999777e-05, 9.830499999999992e-05, 9.823599999999807e-05, 9.806999999999871e-05, 9.755599999999864e-05, 9.755600000000211e-05, 9.822300000000145e-05, 9.787500000000074e-05, 9.798599999999782e-05, 9.770799999999843e-05, 9.83609999999982e-05, 9.797200000000172e-05, 9.788900000000031e-05, 9.795899999999816e-05, 9.772299999999748e-05, 9.783399999999803e-05, 9.779199999999932e-05, 9.790199999999694e-05, 9.781900000000246e-05, 9.820799999999894e-05, 9.77080000000019e-05, 9.772200000000147e-05, 9.754199999999907e-05, 9.843000000000005e-05, 9.82920000000033e-05, 9.770900000000138e-05, 9.838900000000081e-05, 9.809699999999838e-05, 9.801400000000043e-05, 9.805499999999967e-05, 9.788900000000031e-05, 9.83059999999994e-05, 9.788900000000031e-05, 9.845900000000213e-05, 9.822300000000145e-05, 9.83059999999994e-05, 9.822200000000197e-05, 9.788900000000031e-05, 9.783299999999856e-05, 9.82219999999985e-05, 9.787499999999727e-05, 9.780600000000236e-05, 9.790299999999988e-05, 9.844499999999909e-05, 9.820899999999841e-05, 9.752800000000297e-05, 9.770799999999843e-05, 9.755500000000264e-05, 9.79999999999974e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.308" endtime="20201110 08:37:55.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.303" endtime="20201110 08:37:55.311"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.313" endtime="20201110 08:37:55.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.317" endtime="20201110 08:37:55.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.315" endtime="20201110 08:37:55.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.311" endtime="20201110 08:37:55.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.943" endtime="20201110 08:37:55.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.942" endtime="20201110 08:37:55.337"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.346" endtime="20201110 08:37:55.366"></status>
</kw>
<msg timestamp="20201110 08:37:55.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.345" endtime="20201110 08:37:55.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.367" endtime="20201110 08:37:55.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.370" endtime="20201110 08:37:55.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.342" endtime="20201110 08:37:55.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.340" endtime="20201110 08:37:55.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.379" endtime="20201110 08:37:55.664"></status>
</kw>
<msg timestamp="20201110 08:37:55.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.377" endtime="20201110 08:37:55.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022233694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.668" endtime="20201110 08:37:55.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.677" endtime="20201110 08:37:55.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.375" endtime="20201110 08:37:55.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.373" endtime="20201110 08:37:55.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.684" level="INFO">${RESULT} = [{'time': 0.022332306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.861200000000139e-05, 'source_diff': 9.861200000000139e-05}, {'time': 0.022451361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:55.681" endtime="20201110 08:37:55.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.698" level="INFO">${ACCURACY} = {'diff': [9.861200000000139e-05, 9.906900000000024e-05, 9.888899999999784e-05, 9.947199999999976e-05, 9.8721999999999e-05, 9.926400000000168e-05, 9.905600000000014e-05, 9.854200000000007e-05, 9.943000...</msg>
<status status="PASS" starttime="20201110 08:37:55.685" endtime="20201110 08:37:55.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.702" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.701" endtime="20201110 08:37:55.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.705" level="INFO">VALUE: [9.861200000000139e-05, 9.906900000000024e-05, 9.888899999999784e-05, 9.947199999999976e-05, 9.8721999999999e-05, 9.926400000000168e-05, 9.905600000000014e-05, 9.854200000000007e-05, 9.943000000000105e-05, 9.897299999999873e-05, 9.888799999999837e-05, 9.863899999999759e-05, 9.881899999999999e-05, 9.915300000000113e-05, 9.888900000000131e-05, 9.897200000000272e-05, 9.9028000000001e-05, 9.891600000000098e-05, 9.895899999999916e-05, 9.887499999999827e-05, 9.929099999999788e-05, 9.920799999999994e-05, 9.8721999999999e-05, 9.854200000000007e-05, 9.873599999999857e-05, 9.8721999999999e-05, 9.905600000000014e-05, 9.94020000000019e-05, 9.929200000000082e-05, 9.85410000000006e-05, 9.870799999999944e-05, 9.937499999999877e-05, 9.913899999999809e-05, 9.924999999999864e-05, 9.906999999999971e-05, 9.940299999999791e-05, 9.884699999999913e-05, 9.855500000000017e-05, 9.904099999999763e-05, 9.873599999999857e-05, 9.872200000000247e-05, 9.938900000000181e-05, 9.863900000000106e-05, 9.945800000000019e-05, 9.862499999999802e-05, 9.904200000000057e-05, 9.851399999999746e-05, 9.902700000000153e-05, 9.940300000000138e-05, 9.931900000000049e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.703" endtime="20201110 08:37:55.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.699" endtime="20201110 08:37:55.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.708" endtime="20201110 08:37:55.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.712" endtime="20201110 08:37:55.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.710" endtime="20201110 08:37:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.707" endtime="20201110 08:37:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.338" endtime="20201110 08:37:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.338" endtime="20201110 08:37:55.733"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.741" endtime="20201110 08:37:55.762"></status>
</kw>
<msg timestamp="20201110 08:37:55.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.740" endtime="20201110 08:37:55.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.763" endtime="20201110 08:37:55.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.766" endtime="20201110 08:37:55.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.737" endtime="20201110 08:37:55.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.735" endtime="20201110 08:37:55.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.775" endtime="20201110 08:37:56.062"></status>
</kw>
<msg timestamp="20201110 08:37:56.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.773" endtime="20201110 08:37:56.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.067" endtime="20201110 08:37:56.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.076" endtime="20201110 08:37:56.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.770" endtime="20201110 08:37:56.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.769" endtime="20201110 08:37:56.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.082" level="INFO">${RESULT} = [{'time': 0.022541958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010044400000000162, 'source_diff': 0.00010044400000000162}, {'time': 0.022657986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.079" endtime="20201110 08:37:56.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.096" level="INFO">${ACCURACY} = {'diff': [0.00010044400000000162, 0.00010005500000000167, 0.00010004200000000157, 9.955600000000064e-05, 9.955600000000064e-05, 9.988899999999884e-05, 9.962500000000249e-05, 9.998599999999983e-05, 9.9...</msg>
<status status="PASS" starttime="20201110 08:37:56.083" endtime="20201110 08:37:56.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.100" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.099" endtime="20201110 08:37:56.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.102" level="INFO">VALUE: [0.00010044400000000162, 0.00010005500000000167, 0.00010004200000000157, 9.955600000000064e-05, 9.955600000000064e-05, 9.988899999999884e-05, 9.962500000000249e-05, 9.998599999999983e-05, 9.951299999999899e-05, 0.00010005500000000167, 0.00010005500000000167, 9.954200000000107e-05, 9.988899999999884e-05, 0.00010044500000000109, 9.970899999999991e-05, 9.987499999999927e-05, 9.979200000000132e-05, 9.983300000000056e-05, 9.965299999999816e-05, 0.00010015299999999866, 0.00010045800000000119, 0.00010004200000000157, 9.976400000000218e-05, 0.00010037499999999977, 9.961099999999945e-05, 9.962500000000249e-05, 9.977800000000175e-05, 9.955500000000117e-05, 0.00010005500000000167, 9.962499999999902e-05, 9.9722e-05, 9.954200000000107e-05, 0.00010005599999999767, 0.00010023699999999955, 9.990299999999841e-05, 9.994500000000059e-05, 9.99159999999985e-05, 9.99159999999985e-05, 0.00010005500000000167, 0.0001002220000000005, 0.00010040299999999891, 9.957000000000021e-05, 9.963899999999859e-05, 9.957000000000021e-05, 9.981900000000099e-05, 9.956899999999727e-05, 0.00010009700000000038, 9.955500000000117e-05, 0.0001000419999999981, 0.00010022199999999704]</msg>
<status status="PASS" starttime="20201110 08:37:56.101" endtime="20201110 08:37:56.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.096" endtime="20201110 08:37:56.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.106" endtime="20201110 08:37:56.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.110" endtime="20201110 08:37:56.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.108" endtime="20201110 08:37:56.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.104" endtime="20201110 08:37:56.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.734" endtime="20201110 08:37:56.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.733" endtime="20201110 08:37:56.131"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.139" endtime="20201110 08:37:56.159"></status>
</kw>
<msg timestamp="20201110 08:37:56.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.138" endtime="20201110 08:37:56.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.161" endtime="20201110 08:37:56.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.164" endtime="20201110 08:37:56.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.135" endtime="20201110 08:37:56.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.133" endtime="20201110 08:37:56.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.173" endtime="20201110 08:37:56.460"></status>
</kw>
<msg timestamp="20201110 08:37:56.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.171" endtime="20201110 08:37:56.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022533583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.464" endtime="20201110 08:37:56.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.473" endtime="20201110 08:37:56.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.169" endtime="20201110 08:37:56.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.167" endtime="20201110 08:37:56.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.479" level="INFO">${RESULT} = [{'time': 0.022533583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010145799999999872, 'source_diff': 0.00010145799999999872}, {'time': 0.022648681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.476" endtime="20201110 08:37:56.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.493" level="INFO">${ACCURACY} = {'diff': [0.00010145799999999872, 0.00010063899999999959, 0.00010122199999999804, 0.00010107000000000171, 0.00010088899999999984, 0.00010076400000000318, 0.00010088899999999984, 0.00010131899999999902...</msg>
<status status="PASS" starttime="20201110 08:37:56.480" endtime="20201110 08:37:56.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.498" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.497" endtime="20201110 08:37:56.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.500" level="INFO">VALUE: [0.00010145799999999872, 0.00010063899999999959, 0.00010122199999999804, 0.00010107000000000171, 0.00010088899999999984, 0.00010076400000000318, 0.00010088899999999984, 0.00010131899999999902, 0.00010073600000000058, 0.00010054099999999913, 0.00010120800000000194, 0.00010087500000000027, 0.00010059700000000088, 0.00010062500000000002, 0.00010072199999999754, 0.00010070900000000091, 0.0001013749999999973, 0.00010145899999999819, 0.00010054099999999913, 0.00010127799999999978, 0.00010105500000000267, 0.00010055600000000164, 0.0001013610000000012, 0.00010095800000000169, 0.0001013610000000012, 0.00010129199999999935, 0.00010126400000000021, 0.00010067999999999883, 0.00010122199999999804, 0.00010087500000000027, 0.0001012220000000015, 0.00010140299999999991, 0.00010097300000000073, 0.00010070900000000091, 0.00010138900000000034, 0.0001011800000000028, 0.00010095800000000169, 0.0001011939999999989, 0.00010140299999999991, 0.00010112500000000052, 0.00010094400000000212, 0.00010055600000000164, 0.00010073600000000058, 0.00010048600000000033, 0.00010056900000000174, 0.0001010549999999992, 0.00010104099999999963, 0.000100722000000001, 0.0001012220000000015, 0.00010104200000000257]</msg>
<status status="PASS" starttime="20201110 08:37:56.499" endtime="20201110 08:37:56.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.494" endtime="20201110 08:37:56.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.504" endtime="20201110 08:37:56.505"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.507" endtime="20201110 08:37:56.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.506" endtime="20201110 08:37:56.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.502" endtime="20201110 08:37:56.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.131" endtime="20201110 08:37:56.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.131" endtime="20201110 08:37:56.528"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.537" endtime="20201110 08:37:56.557"></status>
</kw>
<msg timestamp="20201110 08:37:56.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.535" endtime="20201110 08:37:56.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.559" endtime="20201110 08:37:56.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.561" endtime="20201110 08:37:56.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.533" endtime="20201110 08:37:56.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.531" endtime="20201110 08:37:56.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.570" endtime="20201110 08:37:56.858"></status>
</kw>
<msg timestamp="20201110 08:37:56.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.569" endtime="20201110 08:37:56.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022040208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.862" endtime="20201110 08:37:56.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.870" endtime="20201110 08:37:56.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.566" endtime="20201110 08:37:56.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.565" endtime="20201110 08:37:56.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.877" level="INFO">${RESULT} = [{'time': 0.022142153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010194500000000259, 'source_diff': 0.00010194500000000259}, {'time': 0.022261153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.873" endtime="20201110 08:37:56.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.890" level="INFO">${ACCURACY} = {'diff': [0.00010194500000000259, 0.00010155599999999917, 0.00010188900000000084, 0.00010183299999999909, 0.00010170800000000244, 0.0001015549999999997, 0.00010201400000000097, 0.000101722000000002, 0...</msg>
<status status="PASS" starttime="20201110 08:37:56.878" endtime="20201110 08:37:56.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.894" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.893" endtime="20201110 08:37:56.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.897" level="INFO">VALUE: [0.00010194500000000259, 0.00010155599999999917, 0.00010188900000000084, 0.00010183299999999909, 0.00010170800000000244, 0.0001015549999999997, 0.00010201400000000097, 0.000101722000000002, 0.00010205599999999967, 0.0001016809999999993, 0.00010155599999999917, 0.00010157000000000221, 0.00010172199999999854, 0.0001020550000000002, 0.00010204100000000063, 0.0001022220000000025, 0.00010223600000000208, 0.00010183299999999909, 0.00010230599999999992, 0.00010244500000000309, 0.00010212500000000152, 0.00010213900000000109, 0.00010197199999999879, 0.000101722000000002, 0.00010237500000000177, 0.00010248599999999886, 0.0001017359999999981, 0.0001022220000000025, 0.0001023749999999983, 0.00010163899999999712, 0.00010231900000000002, 0.0001017359999999981, 0.00010177800000000028, 0.0001015419999999996, 0.00010206899999999977, 0.00010172199999999854, 0.00010205599999999967, 0.00010222199999999904, 0.00010205599999999967, 0.0001023879999999984, 0.00010213799999999815, 0.00010247199999999929, 0.0001017359999999981, 0.00010172199999999854, 0.00010155599999999917, 0.00010207000000000271, 0.00010154100000000013, 0.00010188900000000084, 0.00010248599999999886, 0.0001022220000000025]</msg>
<status status="PASS" starttime="20201110 08:37:56.895" endtime="20201110 08:37:56.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.891" endtime="20201110 08:37:56.898"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.900" endtime="20201110 08:37:56.902"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.904" endtime="20201110 08:37:56.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.902" endtime="20201110 08:37:56.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.899" endtime="20201110 08:37:56.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.529" endtime="20201110 08:37:56.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.529" endtime="20201110 08:37:56.925"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.933" endtime="20201110 08:37:56.953"></status>
</kw>
<msg timestamp="20201110 08:37:56.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.932" endtime="20201110 08:37:56.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.955" endtime="20201110 08:37:56.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.957" endtime="20201110 08:37:56.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.929" endtime="20201110 08:37:56.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.927" endtime="20201110 08:37:56.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.967" endtime="20201110 08:37:57.254"></status>
</kw>
<msg timestamp="20201110 08:37:57.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.965" endtime="20201110 08:37:57.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021950903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.258" endtime="20201110 08:37:57.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.266" endtime="20201110 08:37:57.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.962" endtime="20201110 08:37:57.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.960" endtime="20201110 08:37:57.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.273" level="INFO">${RESULT} = [{'time': 0.022053889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010298599999999936, 'source_diff': 0.00010298599999999936}, {'time': 0.022175875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:57.270" endtime="20201110 08:37:57.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.286" level="INFO">${ACCURACY} = {'diff': [0.00010298599999999936, 0.00010338900000000234, 0.00010297199999999979, 0.0001032359999999996, 0.00010255600000000017, 0.00010255600000000017, 0.00010259699999999941, 0.00010291699999999751,...</msg>
<status status="PASS" starttime="20201110 08:37:57.274" endtime="20201110 08:37:57.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.290" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.289" endtime="20201110 08:37:57.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.293" level="INFO">VALUE: [0.00010298599999999936, 0.00010338900000000234, 0.00010297199999999979, 0.0001032359999999996, 0.00010255600000000017, 0.00010255600000000017, 0.00010259699999999941, 0.00010291699999999751, 0.00010330500000000145, 0.0001026940000000004, 0.00010255600000000017, 0.00010305600000000067, 0.00010288900000000184, 0.00010279199999999739, 0.00010316699999999776, 0.00010288899999999837, 0.00010311099999999948, 0.00010297199999999979, 0.00010305499999999773, 0.00010256999999999974, 0.00010255600000000017, 0.0001027359999999991, 0.00010270900000000291, 0.00010306900000000077, 0.00010254100000000113, 0.0001032359999999996, 0.0001030000000000024, 0.00010341699999999801, 0.00010291699999999751, 0.00010320800000000047, 0.00010273600000000258, 0.00010340299999999844, 0.00010330600000000092, 0.00010338899999999887, 0.00010347200000000029, 0.00010270799999999997, 0.00010281900000000052, 0.00010293100000000055, 0.00010291700000000098, 0.00010263900000000159, 0.00010315300000000166, 0.00010262500000000202, 0.00010263800000000212, 0.00010299999999999893, 0.00010306900000000077, 0.00010272199999999954, 0.00010254199999999714, 0.00010288899999999837, 0.00010327800000000179, 0.00010272300000000248]</msg>
<status status="PASS" starttime="20201110 08:37:57.291" endtime="20201110 08:37:57.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.287" endtime="20201110 08:37:57.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.297" endtime="20201110 08:37:57.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.300" endtime="20201110 08:37:57.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.298" endtime="20201110 08:37:57.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.295" endtime="20201110 08:37:57.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.926" endtime="20201110 08:37:57.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.925" endtime="20201110 08:37:57.321"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.330" endtime="20201110 08:37:57.350"></status>
</kw>
<msg timestamp="20201110 08:37:57.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.328" endtime="20201110 08:37:57.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.353" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.351" endtime="20201110 08:37:57.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.354" endtime="20201110 08:37:57.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.325" endtime="20201110 08:37:57.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.323" endtime="20201110 08:37:57.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.363" endtime="20201110 08:37:57.649"></status>
</kw>
<msg timestamp="20201110 08:37:57.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02211875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:57.361" endtime="20201110 08:37:57.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02211875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022223042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:57.654" endtime="20201110 08:37:57.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.662" endtime="20201110 08:37:57.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.359" endtime="20201110 08:37:57.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.357" endtime="20201110 08:37:57.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.669" level="INFO">${RESULT} = [{'time': 0.022223042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010429199999999889, 'source_diff': 0.00010429199999999889}, {'time': 0.022345056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:57.665" endtime="20201110 08:37:57.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.682" level="INFO">${ACCURACY} = {'diff': [0.00010429199999999889, 0.00010397300000000026, 0.00010404099999999916, 0.0001038749999999998, 0.00010427699999999984, 0.00010388899999999937, 0.00010362499999999955, 0.00010394499999999765,...</msg>
<status status="PASS" starttime="20201110 08:37:57.670" endtime="20201110 08:37:57.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.686" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.685" endtime="20201110 08:37:57.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.689" level="INFO">VALUE: [0.00010429199999999889, 0.00010397300000000026, 0.00010404099999999916, 0.0001038749999999998, 0.00010427699999999984, 0.00010388899999999937, 0.00010362499999999955, 0.00010394499999999765, 0.00010408300000000134, 0.00010356900000000127, 0.0001038749999999998, 0.00010397200000000079, 0.00010412500000000005, 0.0001035689999999978, 0.0001042360000000006, 0.00010443099999999858, 0.00010363899999999912, 0.00010362499999999955, 0.00010383300000000109, 0.00010391599999999904, 0.00010380499999999848, 0.00010420800000000147, 0.00010388899999999937, 0.00010398600000000036, 0.00010388900000000284, 0.00010429200000000236, 0.00010440299999999944, 0.00010430599999999846, 0.00010372300000000001, 0.00010422200000000104, 0.00010354100000000213, 0.00010370800000000097, 0.00010402800000000254, 0.00010422199999999757, 0.00010363899999999912, 0.00010420900000000094, 0.00010405600000000167, 0.00010420900000000094, 0.00010372200000000054, 0.00010388899999999937, 0.00010448599999999739, 0.0001040420000000021, 0.0001042360000000006, 0.0001038749999999998, 0.00010429200000000236, 0.00010442999999999911, 0.00010413899999999962, 0.00010447199999999782, 0.00010356900000000127, 0.00010370800000000097]</msg>
<status status="PASS" starttime="20201110 08:37:57.687" endtime="20201110 08:37:57.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.683" endtime="20201110 08:37:57.690"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.692" endtime="20201110 08:37:57.693"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.696" endtime="20201110 08:37:57.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.694" endtime="20201110 08:37:57.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.690" endtime="20201110 08:37:57.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.322" endtime="20201110 08:37:57.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.321" endtime="20201110 08:37:57.717"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.725" endtime="20201110 08:37:57.746"></status>
</kw>
<msg timestamp="20201110 08:37:57.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.724" endtime="20201110 08:37:57.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.747" endtime="20201110 08:37:57.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.750" endtime="20201110 08:37:57.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.721" endtime="20201110 08:37:57.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.719" endtime="20201110 08:37:57.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.759" endtime="20201110 08:37:58.046"></status>
</kw>
<msg timestamp="20201110 08:37:58.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.757" endtime="20201110 08:37:58.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022386042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022491333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.051" endtime="20201110 08:37:58.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.059" endtime="20201110 08:37:58.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.755" endtime="20201110 08:37:58.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.753" endtime="20201110 08:37:58.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.065" level="INFO">${RESULT} = [{'time': 0.022491333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010529100000000041, 'source_diff': 0.00010529100000000041}, {'time': 0.022616333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.062" endtime="20201110 08:37:58.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.080" level="INFO">${ACCURACY} = {'diff': [0.00010529100000000041, 0.00010511099999999801, 0.00010547200000000229, 0.00010491699999999951, 0.00010530599999999946, 0.00010488900000000037, 0.00010529199999999989, 0.00010541700000000001...</msg>
<status status="PASS" starttime="20201110 08:37:58.066" endtime="20201110 08:37:58.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.084" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.083" endtime="20201110 08:37:58.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.087" level="INFO">VALUE: [0.00010529100000000041, 0.00010511099999999801, 0.00010547200000000229, 0.00010491699999999951, 0.00010530599999999946, 0.00010488900000000037, 0.00010529199999999989, 0.00010541700000000001, 0.00010480599999999896, 0.00010522199999999857, 0.00010488900000000037, 0.00010515300000000019, 0.000105514000000001, 0.00010504199999999964, 0.0001052629999999978, 0.0001050559999999992, 0.0001051949999999989, 0.00010469399999999893, 0.0001053750000000013, 0.00010480499999999948, 0.00010493099999999908, 0.00010547199999999882, 0.00010488900000000037, 0.00010462500000000055, 0.00010547299999999829, 0.0001050559999999992, 0.0001052360000000016, 0.00010538900000000087, 0.00010480500000000295, 0.00010540300000000044, 0.00010497200000000179, 0.00010472200000000154, 0.00010487499999999733, 0.00010463900000000012, 0.00010513799999999768, 0.00010480499999999948, 0.0001050550000000032, 0.00010488900000000037, 0.00010497200000000179, 0.00010522200000000204, 0.00010540300000000044, 0.00010513899999999715, 0.00010480599999999896, 0.0001053889999999974, 0.00010529100000000041, 0.00010456900000000227, 0.0001048750000000008, 0.00010479199999999939, 0.0001050559999999992, 0.00010534700000000216]</msg>
<status status="PASS" starttime="20201110 08:37:58.086" endtime="20201110 08:37:58.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.081" endtime="20201110 08:37:58.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.091" endtime="20201110 08:37:58.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.094" endtime="20201110 08:37:58.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.093" endtime="20201110 08:37:58.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.089" endtime="20201110 08:37:58.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.717" endtime="20201110 08:37:58.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.717" endtime="20201110 08:37:58.116"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.124" endtime="20201110 08:37:58.145"></status>
</kw>
<msg timestamp="20201110 08:37:58.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.123" endtime="20201110 08:37:58.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.146" endtime="20201110 08:37:58.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.149" endtime="20201110 08:37:58.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.120" endtime="20201110 08:37:58.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.118" endtime="20201110 08:37:58.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.158" endtime="20201110 08:37:58.443"></status>
</kw>
<msg timestamp="20201110 08:37:58.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.156" endtime="20201110 08:37:58.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.447" endtime="20201110 08:37:58.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.455" endtime="20201110 08:37:58.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.154" endtime="20201110 08:37:58.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.152" endtime="20201110 08:37:58.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.462" level="INFO">${RESULT} = [{'time': 0.022475833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010630500000000098, 'source_diff': 0.00010630500000000098}, {'time': 0.022604806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.459" endtime="20201110 08:37:58.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.475" level="INFO">${ACCURACY} = {'diff': [0.00010630500000000098, 0.00010629200000000089, 0.00010572199999999907, 0.00010569399999999993, 0.0001058750000000018, 0.00010612499999999858, 0.00010627799999999785, 0.0001061949999999999, ...</msg>
<status status="PASS" starttime="20201110 08:37:58.463" endtime="20201110 08:37:58.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.479" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.478" endtime="20201110 08:37:58.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.482" level="INFO">VALUE: [0.00010630500000000098, 0.00010629200000000089, 0.00010572199999999907, 0.00010569399999999993, 0.0001058750000000018, 0.00010612499999999858, 0.00010627799999999785, 0.0001061949999999999, 0.00010604200000000064, 0.0001061949999999999, 0.00010609700000000291, 0.0001057079999999995, 0.00010622199999999957, 0.00010622199999999957, 0.00010551399999999753, 0.0001060560000000002, 0.00010556999999999928, 0.00010555600000000318, 0.00010586199999999824, 0.00010613900000000162, 0.00010580500000000048, 0.00010583299999999962, 0.00010631900000000055, 0.00010633300000000012, 0.00010597199999999932, 0.0001063889999999984, 0.00010615300000000119, 0.00010630600000000046, 0.00010638799999999893, 0.00010591600000000104, 0.00010572200000000254, 0.00010622199999999957, 0.00010568099999999983, 0.0001063889999999984, 0.00010615300000000119, 0.00010579200000000039, 0.00010638900000000187, 0.00010645800000000025, 0.00010573599999999864, 0.0001063750000000023, 0.00010577800000000082, 0.000106208, 0.00010636100000000273, 0.00010563899999999765, 0.00010598599999999889, 0.00010568000000000036, 0.00010636100000000273, 0.00010618100000000033, 0.00010640300000000144, 0.00010576300000000177]</msg>
<status status="PASS" starttime="20201110 08:37:58.481" endtime="20201110 08:37:58.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.476" endtime="20201110 08:37:58.483"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.486" endtime="20201110 08:37:58.487"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.489" endtime="20201110 08:37:58.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.487" endtime="20201110 08:37:58.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.484" endtime="20201110 08:37:58.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.116" endtime="20201110 08:37:58.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.116" endtime="20201110 08:37:58.510"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.519" endtime="20201110 08:37:58.539"></status>
</kw>
<msg timestamp="20201110 08:37:58.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.517" endtime="20201110 08:37:58.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.540" endtime="20201110 08:37:58.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.543" endtime="20201110 08:37:58.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.514" endtime="20201110 08:37:58.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.512" endtime="20201110 08:37:58.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.552" endtime="20201110 08:37:58.839"></status>
</kw>
<msg timestamp="20201110 08:37:58.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.550" endtime="20201110 08:37:58.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022242625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022349889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.843" endtime="20201110 08:37:58.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.852" endtime="20201110 08:37:58.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.548" endtime="20201110 08:37:58.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.546" endtime="20201110 08:37:58.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.858" level="INFO">${RESULT} = [{'time': 0.022349889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010726400000000275, 'source_diff': 0.00010726400000000275}, {'time': 0.022474917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.855" endtime="20201110 08:37:58.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.871" level="INFO">${ACCURACY} = {'diff': [0.00010726400000000275, 0.00010712499999999958, 0.00010697299999999979, 0.00010654199999999767, 0.00010669400000000093, 0.00010656899999999733, 0.00010723600000000014, 0.0001073889999999994,...</msg>
<status status="PASS" starttime="20201110 08:37:58.859" endtime="20201110 08:37:58.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.876" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.875" endtime="20201110 08:37:58.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.878" level="INFO">VALUE: [0.00010726400000000275, 0.00010712499999999958, 0.00010697299999999979, 0.00010654199999999767, 0.00010669400000000093, 0.00010656899999999733, 0.00010723600000000014, 0.0001073889999999994, 0.00010668100000000083, 0.00010695800000000075, 0.00010720900000000047, 0.0001073889999999994, 0.00010727800000000232, 0.00010722200000000057, 0.00010736100000000026, 0.00010729199999999842, 0.00010722200000000057, 0.00010718100000000133, 0.00010673599999999964, 0.00010730599999999799, 0.00010686199999999924, 0.00010711100000000001, 0.00010697200000000032, 0.00010654100000000166, 0.00010736100000000026, 0.00010681999999999706, 0.00010654200000000114, 0.00010666699999999779, 0.0001065560000000007, 0.00010723600000000014, 0.00010688799999999943, 0.000106901999999999, 0.0001065690000000008, 0.00010705599999999774, 0.00010709799999999992, 0.00010687499999999933, 0.00010663899999999865, 0.00010715299999999872, 0.00010681900000000105, 0.00010704100000000216, 0.00010672200000000007, 0.0001067080000000005, 0.00010704199999999817, 0.0001070279999999986, 0.0001065560000000007, 0.00010687499999999933, 0.00010658399999999985, 0.00010747200000000082, 0.00010688900000000237, 0.00010730499999999851]</msg>
<status status="PASS" starttime="20201110 08:37:58.877" endtime="20201110 08:37:58.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.872" endtime="20201110 08:37:58.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.882" endtime="20201110 08:37:58.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.886" endtime="20201110 08:37:58.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.884" endtime="20201110 08:37:58.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.880" endtime="20201110 08:37:58.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.511" endtime="20201110 08:37:58.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.510" endtime="20201110 08:37:58.906"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.915" endtime="20201110 08:37:58.936"></status>
</kw>
<msg timestamp="20201110 08:37:58.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.914" endtime="20201110 08:37:58.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.937" endtime="20201110 08:37:58.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.940" endtime="20201110 08:37:58.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.911" endtime="20201110 08:37:58.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.909" endtime="20201110 08:37:58.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.949" endtime="20201110 08:37:59.237"></status>
</kw>
<msg timestamp="20201110 08:37:59.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.947" endtime="20201110 08:37:59.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022570264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.242" endtime="20201110 08:37:59.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.250" endtime="20201110 08:37:59.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.945" endtime="20201110 08:37:59.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.943" endtime="20201110 08:37:59.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.256" level="INFO">${RESULT} = [{'time': 0.022678056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010779199999999892, 'source_diff': 0.00010779199999999892}, {'time': 0.022807069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:59.253" endtime="20201110 08:37:59.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.269" level="INFO">${ACCURACY} = {'diff': [0.00010779199999999892, 0.00010781899999999858, 0.00010756899999999833, 0.0001084020000000005, 0.00010829099999999994, 0.0001078889999999999, 0.00010830599999999899, 0.00010773600000000064, ...</msg>
<status status="PASS" starttime="20201110 08:37:59.257" endtime="20201110 08:37:59.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.274" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.273" endtime="20201110 08:37:59.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.276" level="INFO">VALUE: [0.00010779199999999892, 0.00010781899999999858, 0.00010756899999999833, 0.0001084020000000005, 0.00010829099999999994, 0.0001078889999999999, 0.00010830599999999899, 0.00010773600000000064, 0.0001078889999999999, 0.00010797300000000079, 0.00010822300000000104, 0.00010841699999999954, 0.00010808300000000187, 0.00010797200000000132, 0.00010819399999999896, 0.00010804199999999917, 0.0001083890000000004, 0.00010847299999999782, 0.0001078889999999999, 0.00010812500000000058, 0.00010847200000000182, 0.00010823599999999767, 0.00010754199999999867, 0.00010755599999999824, 0.00010786100000000076, 0.00010845899999999825, 0.00010757000000000128, 0.00010805599999999874, 0.00010837500000000083, 0.00010762500000000008, 0.00010756899999999833, 0.00010765299999999922, 0.00010797199999999785, 0.0001078889999999999, 0.00010777799999999935, 0.00010804199999999917, 0.00010787500000000033, 0.00010781900000000205, 0.00010777799999999935, 0.00010805599999999874, 0.0001080829999999984, 0.0001083890000000004, 0.00010830599999999899, 0.00010822300000000104, 0.0001078889999999999, 0.00010813800000000068, 0.00010811099999999754, 0.00010781899999999858, 0.00010801400000000003, 0.00010820799999999853]</msg>
<status status="PASS" starttime="20201110 08:37:59.275" endtime="20201110 08:37:59.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.270" endtime="20201110 08:37:59.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.280" endtime="20201110 08:37:59.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.284" endtime="20201110 08:37:59.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.282" endtime="20201110 08:37:59.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.278" endtime="20201110 08:37:59.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.907" endtime="20201110 08:37:59.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.907" endtime="20201110 08:37:59.304"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.313" endtime="20201110 08:37:59.333"></status>
</kw>
<msg timestamp="20201110 08:37:59.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.311" endtime="20201110 08:37:59.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.334" endtime="20201110 08:37:59.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.337" endtime="20201110 08:37:59.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.309" endtime="20201110 08:37:59.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.307" endtime="20201110 08:37:59.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.346" endtime="20201110 08:37:59.633"></status>
</kw>
<msg timestamp="20201110 08:37:59.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:59.344" endtime="20201110 08:37:59.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022058, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022167444, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:59.637" endtime="20201110 08:37:59.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.645" endtime="20201110 08:37:59.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.342" endtime="20201110 08:37:59.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.340" endtime="20201110 08:37:59.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.652" level="INFO">${RESULT} = [{'time': 0.022167444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010944400000000021, 'source_diff': 0.00010944400000000021}, {'time': 0.022290458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:59.649" endtime="20201110 08:37:59.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.666" level="INFO">${ACCURACY} = {'diff': [0.00010944400000000021, 0.00010938899999999793, 0.00010945799999999978, 0.00010887500000000133, 0.00010862500000000108, 0.00010895799999999928, 0.00010854199999999967, 0.00010923599999999867...</msg>
<status status="PASS" starttime="20201110 08:37:59.653" endtime="20201110 08:37:59.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.671" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.670" endtime="20201110 08:37:59.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.674" level="INFO">VALUE: [0.00010944400000000021, 0.00010938899999999793, 0.00010945799999999978, 0.00010887500000000133, 0.00010862500000000108, 0.00010895799999999928, 0.00010854199999999967, 0.00010923599999999867, 0.00010934699999999922, 0.00010865300000000022, 0.00010912500000000158, 0.00010913900000000115, 0.00010929199999999695, 0.00010905599999999974, 0.00010872200000000207, 0.00010855599999999924, 0.00010855599999999924, 0.00010854100000000019, 0.00010855499999999976, 0.0001085829999999989, 0.00010904200000000017, 0.0001085280000000001, 0.00010859700000000194, 0.00010905599999999974, 0.00010905599999999974, 0.00010855499999999976, 0.00010909699999999897, 0.00010872200000000207, 0.00010852799999999663, 0.00010890300000000047, 0.00010915300000000072, 0.00010900000000000146, 0.0001093890000000014, 0.00010937499999999836, 0.00010894399999999971, 0.00010930500000000051, 0.00010937500000000183, 0.00010930599999999999, 0.0001092219999999991, 0.00010854199999999967, 0.00010854199999999967, 0.00010937499999999836, 0.00010947199999999935, 0.00010854100000000019, 0.00010923599999999867, 0.00010938899999999793, 0.00010880599999999949, 0.00010905599999999974, 0.00010854199999999967, 0.00010883399999999863]</msg>
<status status="PASS" starttime="20201110 08:37:59.672" endtime="20201110 08:37:59.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.667" endtime="20201110 08:37:59.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.677" endtime="20201110 08:37:59.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.680" endtime="20201110 08:37:59.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.679" endtime="20201110 08:37:59.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.675" endtime="20201110 08:37:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.305" endtime="20201110 08:37:59.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.305" endtime="20201110 08:37:59.701"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.710" endtime="20201110 08:37:59.731"></status>
</kw>
<msg timestamp="20201110 08:37:59.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.708" endtime="20201110 08:37:59.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.732" endtime="20201110 08:37:59.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.735" endtime="20201110 08:37:59.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.706" endtime="20201110 08:37:59.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.704" endtime="20201110 08:37:59.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.744" endtime="20201110 08:38:00.032"></status>
</kw>
<msg timestamp="20201110 08:38:00.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.742" endtime="20201110 08:38:00.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022356083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.036" endtime="20201110 08:38:00.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.044" endtime="20201110 08:38:00.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.740" endtime="20201110 08:38:00.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.738" endtime="20201110 08:38:00.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.051" level="INFO">${RESULT} = [{'time': 0.022356083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011051399999999906, 'source_diff': 0.00011051399999999906}, {'time': 0.022488042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.047" endtime="20201110 08:38:00.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.064" level="INFO">${ACCURACY} = {'diff': [0.00011051399999999906, 0.00011037499999999936, 0.00010980600000000049, 0.00011005500000000126, 0.00010959699999999947, 0.00011005500000000126, 0.00011038899999999893, 0.00011045800000000078...</msg>
<status status="PASS" starttime="20201110 08:38:00.052" endtime="20201110 08:38:00.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.068" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.067" endtime="20201110 08:38:00.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.071" level="INFO">VALUE: [0.00011051399999999906, 0.00011037499999999936, 0.00010980600000000049, 0.00011005500000000126, 0.00010959699999999947, 0.00011005500000000126, 0.00011038899999999893, 0.00011045800000000078, 0.0001097219999999996, 0.0001102220000000001, 0.00010972299999999907, 0.00011026400000000228, 0.00011037499999999936, 0.00011048599999999992, 0.00010956900000000033, 0.0001102220000000001, 0.00011038899999999893, 0.00011043099999999764, 0.00011027799999999838, 0.00010987499999999886, 0.00011047200000000035, 0.00010990300000000147, 0.00011001399999999856, 0.00011038899999999893, 0.00011013899999999868, 0.00010963900000000165, 0.00011047200000000035, 0.0001098890000000019, 0.00011013800000000268, 0.00010999999999999899, 0.0001095549999999973, 0.00011040300000000197, 0.00011045800000000078, 0.00010970800000000003, 0.00010968100000000036, 0.00010988899999999843, 0.00010963900000000165, 0.00010997199999999985, 0.00011041700000000154, 0.00010995800000000028, 0.0001102220000000001, 0.00011029100000000194, 0.00010988899999999843, 0.0001102220000000001, 0.00011015300000000172, 0.00010994400000000071, 0.00010979200000000092, 0.00010997199999999985, 0.0001100280000000016, 0.0001095699999999998]</msg>
<status status="PASS" starttime="20201110 08:38:00.069" endtime="20201110 08:38:00.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.065" endtime="20201110 08:38:00.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.079" endtime="20201110 08:38:00.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.082" endtime="20201110 08:38:00.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.081" endtime="20201110 08:38:00.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.077" endtime="20201110 08:38:00.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.702" endtime="20201110 08:38:00.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.702" endtime="20201110 08:38:00.103"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.112" endtime="20201110 08:38:00.131"></status>
</kw>
<msg timestamp="20201110 08:38:00.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.110" endtime="20201110 08:38:00.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.133" endtime="20201110 08:38:00.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.136" endtime="20201110 08:38:00.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.108" endtime="20201110 08:38:00.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.106" endtime="20201110 08:38:00.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.145" endtime="20201110 08:38:00.431"></status>
</kw>
<msg timestamp="20201110 08:38:00.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.143" endtime="20201110 08:38:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.435" endtime="20201110 08:38:00.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.443" endtime="20201110 08:38:00.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.141" endtime="20201110 08:38:00.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.139" endtime="20201110 08:38:00.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.450" level="INFO">${RESULT} = [{'time': 0.022091847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011111100000000054, 'source_diff': 0.00011111100000000054}, {'time': 0.022225861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.447" endtime="20201110 08:38:00.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.463" level="INFO">${ACCURACY} = {'diff': [0.00011111100000000054, 0.00011117999999999892, 0.00011136100000000079, 0.00011154099999999972, 0.0001109159999999991, 0.00011136099999999732, 0.00011138800000000046, 0.00011095799999999781,...</msg>
<status status="PASS" starttime="20201110 08:38:00.451" endtime="20201110 08:38:00.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.467" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.466" endtime="20201110 08:38:00.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.470" level="INFO">VALUE: [0.00011111100000000054, 0.00011117999999999892, 0.00011136100000000079, 0.00011154099999999972, 0.0001109159999999991, 0.00011136099999999732, 0.00011138800000000046, 0.00011095799999999781, 0.00011088899999999943, 0.00011129199999999895, 0.00011055600000000124, 0.00011105599999999827, 0.00011055599999999777, 0.00011073700000000311, 0.00011104100000000269, 0.00011088899999999943, 0.00011129099999999947, 0.00011095900000000075, 0.00011113899999999968, 0.00011112500000000011, 0.00011148599999999745, 0.00011137500000000036, 0.00011113899999999968, 0.00011131900000000208, 0.00011138899999999993, 0.00011147200000000135, 0.00011106899999999836, 0.00011120800000000153, 0.0001107220000000006, 0.00011088899999999943, 0.00011081899999999811, 0.00011142999999999917, 0.00011145800000000178, 0.00011073600000000017, 0.00011056900000000133, 0.00011120799999999806, 0.00011105599999999827, 0.00011105600000000174, 0.00011138899999999993, 0.00011095800000000128, 0.00011055500000000176, 0.00011056899999999786, 0.00011066599999999885, 0.0001105549999999983, 0.00011069400000000146, 0.00011138899999999993, 0.00011095899999999728, 0.000111209000000001, 0.0001112220000000011, 0.0001112220000000011]</msg>
<status status="PASS" starttime="20201110 08:38:00.468" endtime="20201110 08:38:00.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.464" endtime="20201110 08:38:00.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.474" endtime="20201110 08:38:00.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.477" endtime="20201110 08:38:00.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.476" endtime="20201110 08:38:00.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.472" endtime="20201110 08:38:00.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.104" endtime="20201110 08:38:00.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.104" endtime="20201110 08:38:00.498"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.507" endtime="20201110 08:38:00.527"></status>
</kw>
<msg timestamp="20201110 08:38:00.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.505" endtime="20201110 08:38:00.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.528" endtime="20201110 08:38:00.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.531" endtime="20201110 08:38:00.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.502" endtime="20201110 08:38:00.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.500" endtime="20201110 08:38:00.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.540" endtime="20201110 08:38:00.826"></status>
</kw>
<msg timestamp="20201110 08:38:00.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.538" endtime="20201110 08:38:00.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022230819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.830" endtime="20201110 08:38:00.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.838" endtime="20201110 08:38:00.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.536" endtime="20201110 08:38:00.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.534" endtime="20201110 08:38:00.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.845" level="INFO">${RESULT} = [{'time': 0.022342597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011177799999999988, 'source_diff': 0.00011177799999999988}, {'time': 0.022476611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.842" endtime="20201110 08:38:00.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.858" level="INFO">${ACCURACY} = {'diff': [0.00011177799999999988, 0.00011212500000000111, 0.00011162499999999714, 0.00011198600000000142, 0.00011237500000000136, 0.00011197300000000132, 0.0001120549999999998, 0.0001124030000000005, ...</msg>
<status status="PASS" starttime="20201110 08:38:00.846" endtime="20201110 08:38:00.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.863" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.862" endtime="20201110 08:38:00.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.865" level="INFO">VALUE: [0.00011177799999999988, 0.00011212500000000111, 0.00011162499999999714, 0.00011198600000000142, 0.00011237500000000136, 0.00011197300000000132, 0.0001120549999999998, 0.0001124030000000005, 0.00011245799999999931, 0.0001123749999999979, 0.00011179199999999945, 0.00011219499999999896, 0.00011237500000000136, 0.00011247300000000182, 0.0001120549999999998, 0.00011204100000000022, 0.00011225000000000124, 0.00011222199999999863, 0.00011205599999999927, 0.0001122220000000021, 0.0001115280000000031, 0.0001120419999999997, 0.000111596999999998, 0.00011238800000000146, 0.00011162500000000061, 0.00011213900000000068, 0.00011229199999999995, 0.000111903, 0.00011180599999999902, 0.00011206999999999884, 0.00011188900000000043, 0.00011248599999999845, 0.00011238899999999746, 0.00011197200000000185, 0.0001115419999999992, 0.00011205599999999927, 0.00011188900000000043, 0.00011211099999999807, 0.00011197300000000132, 0.0001123749999999979, 0.00011211100000000154, 0.00011163900000000018, 0.00011247199999999888, 0.00011155599999999877, 0.00011222199999999863, 0.00011188900000000043, 0.00011231999999999909, 0.00011238799999999799, 0.00011180499999999954, 0.00011206899999999936]</msg>
<status status="PASS" starttime="20201110 08:38:00.864" endtime="20201110 08:38:00.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.859" endtime="20201110 08:38:00.866"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.869" endtime="20201110 08:38:00.870"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.872" endtime="20201110 08:38:00.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.871" endtime="20201110 08:38:00.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.867" endtime="20201110 08:38:00.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.499" endtime="20201110 08:38:00.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.498" endtime="20201110 08:38:00.893"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.905" endtime="20201110 08:38:00.927"></status>
</kw>
<msg timestamp="20201110 08:38:00.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.903" endtime="20201110 08:38:00.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.928" endtime="20201110 08:38:00.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.931" endtime="20201110 08:38:00.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.900" endtime="20201110 08:38:00.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.897" endtime="20201110 08:38:00.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.940" endtime="20201110 08:38:01.227"></status>
</kw>
<msg timestamp="20201110 08:38:01.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.939" endtime="20201110 08:38:01.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025440958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.231" endtime="20201110 08:38:01.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.239" endtime="20201110 08:38:01.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.936" endtime="20201110 08:38:01.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.934" endtime="20201110 08:38:01.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.246" level="INFO">${RESULT} = [{'time': 0.025440958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001132359999999992, 'source_diff': 0.0001132359999999992}, {'time': 0.025578028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:01.243" endtime="20201110 08:38:01.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.260" level="INFO">${ACCURACY} = {'diff': [0.0001132359999999992, 0.0001130969999999995, 0.00011297200000000285, 0.00011284799999999873, 0.00011252800000000063, 0.00011340299999999803, 0.00011344400000000074, 0.0001130550000000008, 0...</msg>
<status status="PASS" starttime="20201110 08:38:01.247" endtime="20201110 08:38:01.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.265" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.264" endtime="20201110 08:38:01.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.267" level="INFO">VALUE: [0.0001132359999999992, 0.0001130969999999995, 0.00011297200000000285, 0.00011284799999999873, 0.00011252800000000063, 0.00011340299999999803, 0.00011344400000000074, 0.0001130550000000008, 0.00011306900000000036, 0.00011290299999999753, 0.00011297199999999938, 0.00011341700000000107, 0.00011347199999999988, 0.00011252800000000063, 0.00011319499999999996, 0.00011299999999999852, 0.00011322199999999963, 0.0001130550000000008, 0.00011326400000000181, 0.000112903000000001, 0.00011332000000000009, 0.0001132359999999992, 0.0001130559999999968, 0.00011305499999999732, 0.00011277799999999741, 0.00011320800000000006, 0.00011270799999999956, 0.00011255599999999977, 0.00011283299999999968, 0.00011347299999999935, 0.00011338899999999846, 0.00011281900000000011, 0.00011288799999999849, 0.00011298599999999895, 0.00011252800000000063, 0.0001134030000000015, 0.00011280600000000002, 0.00011269499999999946, 0.000113209000000003, 0.00011338900000000193, 0.00011330500000000104, 0.00011336099999999932, 0.00011265300000000075, 0.0001130969999999995, 0.00011266700000000032, 0.00011332000000000009, 0.000113209000000003, 0.00011305600000000027, 0.00011340199999999856, 0.00011348599999999598]</msg>
<status status="PASS" starttime="20201110 08:38:01.266" endtime="20201110 08:38:01.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.261" endtime="20201110 08:38:01.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.271" endtime="20201110 08:38:01.272"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.275" endtime="20201110 08:38:01.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.273" endtime="20201110 08:38:01.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.269" endtime="20201110 08:38:01.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.894" endtime="20201110 08:38:01.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.894" endtime="20201110 08:38:01.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.524" endtime="20201110 08:38:01.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.299" endtime="20201110 08:38:01.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.298" endtime="20201110 08:38:01.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.297" endtime="20201110 08:38:01.319"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:21.456" endtime="20201110 08:38:01.320" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.327" endtime="20201110 08:38:01.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.325" endtime="20201110 08:38:01.347"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.360" endtime="20201110 08:38:01.374"></status>
</kw>
<msg timestamp="20201110 08:38:01.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.358" endtime="20201110 08:38:01.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.375" endtime="20201110 08:38:01.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.380" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:01.378" endtime="20201110 08:38:01.380"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:01.355" endtime="20201110 08:38:01.381"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:01.353" endtime="20201110 08:38:01.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.352" endtime="20201110 08:38:01.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:01.385" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:01.385" endtime="20201110 08:38:01.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.383" endtime="20201110 08:38:01.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.351" endtime="20201110 08:38:01.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.350" endtime="20201110 08:38:01.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.387" endtime="20201110 08:38:01.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.349" endtime="20201110 08:38:01.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.347" endtime="20201110 08:38:01.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.324" endtime="20201110 08:38:01.390"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.400" endtime="20201110 08:38:01.417"></status>
</kw>
<msg timestamp="20201110 08:38:01.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.398" endtime="20201110 08:38:01.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.418" endtime="20201110 08:38:01.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.421" endtime="20201110 08:38:01.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.395" endtime="20201110 08:38:01.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.393" endtime="20201110 08:38:01.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.430" endtime="20201110 08:38:01.716"></status>
</kw>
<msg timestamp="20201110 08:38:01.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065881319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065922958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.428" endtime="20201110 08:38:01.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065881319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065922958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.720" endtime="20201110 08:38:01.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.729" endtime="20201110 08:38:01.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.426" endtime="20201110 08:38:01.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.424" endtime="20201110 08:38:01.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.736" level="INFO">${RESULT} = [{'time': 0.065922958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1639000000009974e-05, 'source_diff': 4.1639000000009974e-05}, {'time': 0.065974972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.732" endtime="20201110 08:38:01.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.750" level="INFO">${ACCURACY} = {'diff': [4.1639000000009974e-05, 4.152800000001289e-05, 4.1875000000010654e-05, 4.1389000000002785e-05, 4.169400000000878e-05, 4.205599999999865e-05, 4.222199999999454e-05, 4.1374999999996276e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:38:01.737" endtime="20201110 08:38:01.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.755" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.754" endtime="20201110 08:38:01.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.758" level="INFO">VALUE: [4.1639000000009974e-05, 4.152800000001289e-05, 4.1875000000010654e-05, 4.1389000000002785e-05, 4.169400000000878e-05, 4.205599999999865e-05, 4.222199999999454e-05, 4.1374999999996276e-05, 4.154200000000552e-05, 4.1709000000000884e-05, 4.1777000000006725e-05, 4.145900000000757e-05, 4.205599999999865e-05, 4.186099999999027e-05, 4.202799999999951e-05, 4.1374999999996276e-05, 4.2209000000001384e-05, 4.1709000000000884e-05, 4.1374999999996276e-05, 4.16939999999949e-05, 4.1874999999996776e-05, 4.1374999999996276e-05, 4.154200000000552e-05, 4.1874999999996776e-05, 4.1541000000006045e-05, 4.219400000000928e-05, 4.188899999998941e-05, 4.223600000000105e-05, 4.204200000000602e-05, 4.200000000000037e-05, 4.169500000000825e-05, 4.1861000000004145e-05, 4.2222999999994015e-05, 4.1374999999996276e-05, 4.2237000000000524e-05, 4.1361000000003645e-05, 4.2181000000002244e-05, 4.1555000000012554e-05, 4.138800000000331e-05, 4.172200000000792e-05, 4.173600000000055e-05, 4.2069000000005685e-05, 4.183299999999113e-05, 4.2041000000006545e-05, 4.1361000000003645e-05, 4.136099999998977e-05, 4.1375000000010154e-05, 4.136099999998977e-05, 4.154199999999164e-05, 4.1374999999996276e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.756" endtime="20201110 08:38:01.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.751" endtime="20201110 08:38:01.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.761" endtime="20201110 08:38:01.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.765" endtime="20201110 08:38:01.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.763" endtime="20201110 08:38:01.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.759" endtime="20201110 08:38:01.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.391" endtime="20201110 08:38:01.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.391" endtime="20201110 08:38:01.790"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.810" endtime="20201110 08:38:01.830"></status>
</kw>
<msg timestamp="20201110 08:38:01.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.806" endtime="20201110 08:38:01.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.833" endtime="20201110 08:38:01.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.839" endtime="20201110 08:38:01.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.800" endtime="20201110 08:38:01.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.796" endtime="20201110 08:38:01.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.859" endtime="20201110 08:38:02.148"></status>
</kw>
<msg timestamp="20201110 08:38:02.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039117194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039158681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.856" endtime="20201110 08:38:02.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039117194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039158681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.152" endtime="20201110 08:38:02.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.161" endtime="20201110 08:38:02.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.850" endtime="20201110 08:38:02.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.846" endtime="20201110 08:38:02.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.168" level="INFO">${RESULT} = [{'time': 0.039158681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1486999999999774e-05, 'source_diff': 4.1486999999999774e-05}, {'time': 0.039209694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:02.165" endtime="20201110 08:38:02.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.182" level="INFO">${ACCURACY} = {'diff': [4.1486999999999774e-05, 4.138800000000331e-05, 4.170800000000141e-05, 4.220800000000191e-05, 4.222200000000148e-05, 4.1388999999995846e-05, 4.220800000000191e-05, 4.1403000000002355e-05, 4.1...</msg>
<status status="PASS" starttime="20201110 08:38:02.169" endtime="20201110 08:38:02.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.187" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.186" endtime="20201110 08:38:02.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.189" level="INFO">VALUE: [4.1486999999999774e-05, 4.138800000000331e-05, 4.170800000000141e-05, 4.220800000000191e-05, 4.222200000000148e-05, 4.1388999999995846e-05, 4.220800000000191e-05, 4.1403000000002355e-05, 4.1445000000001064e-05, 4.222200000000148e-05, 4.1360999999996706e-05, 4.1375000000003215e-05, 4.204199999999908e-05, 4.219400000000234e-05, 4.175000000000012e-05, 4.170800000000141e-05, 4.222200000000148e-05, 4.1709000000000884e-05, 4.1375000000003215e-05, 4.1375000000003215e-05, 4.205599999999865e-05, 4.1526999999999537e-05, 4.1874999999996776e-05, 4.1375000000003215e-05, 4.1403000000002355e-05, 4.172200000000098e-05, 4.1582999999997816e-05, 4.1526999999999537e-05, 4.1388999999995846e-05, 4.152799999999901e-05, 4.1445000000001064e-05, 4.222200000000148e-05, 4.220800000000191e-05, 4.1360999999996706e-05, 4.219400000000234e-05, 4.195800000000166e-05, 4.157000000000466e-05, 4.204199999999908e-05, 4.172200000000098e-05, 4.1874999999996776e-05, 4.1375000000003215e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.173600000000055e-05, 4.1861000000004145e-05, 4.1375000000003215e-05, 4.172200000000098e-05, 4.2054999999999176e-05, 4.19860000000008e-05, 4.169400000000184e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.188" endtime="20201110 08:38:02.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.183" endtime="20201110 08:38:02.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.193" endtime="20201110 08:38:02.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.197" endtime="20201110 08:38:02.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.195" endtime="20201110 08:38:02.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.191" endtime="20201110 08:38:02.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.792" endtime="20201110 08:38:02.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.791" endtime="20201110 08:38:02.217"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.226" endtime="20201110 08:38:02.243"></status>
</kw>
<msg timestamp="20201110 08:38:02.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.225" endtime="20201110 08:38:02.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.245" endtime="20201110 08:38:02.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.247" endtime="20201110 08:38:02.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.222" endtime="20201110 08:38:02.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.220" endtime="20201110 08:38:02.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.256" endtime="20201110 08:38:02.542"></status>
</kw>
<msg timestamp="20201110 08:38:02.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:02.255" endtime="20201110 08:38:02.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0223735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:02.547" endtime="20201110 08:38:02.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.555" endtime="20201110 08:38:02.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.252" endtime="20201110 08:38:02.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.250" endtime="20201110 08:38:02.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.562" level="INFO">${RESULT} = [{'time': 0.022414986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.14860000000003e-05, 'source_diff': 4.14860000000003e-05}, {'time': 0.022465014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:02.559" endtime="20201110 08:38:02.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.575" level="INFO">${ACCURACY} = {'diff': [4.14860000000003e-05, 4.223599999999758e-05, 4.222200000000148e-05, 4.1680999999998275e-05, 4.1388999999999315e-05, 4.1361000000000175e-05, 4.155600000000162e-05, 4.205599999999865e-05, 4.22...</msg>
<status status="PASS" starttime="20201110 08:38:02.563" endtime="20201110 08:38:02.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.580" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.579" endtime="20201110 08:38:02.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.582" level="INFO">VALUE: [4.14860000000003e-05, 4.223599999999758e-05, 4.222200000000148e-05, 4.1680999999998275e-05, 4.1388999999999315e-05, 4.1361000000000175e-05, 4.155600000000162e-05, 4.205599999999865e-05, 4.2223000000000954e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1861000000000675e-05, 4.1374999999999745e-05, 4.186200000000015e-05, 4.138799999999984e-05, 4.226400000000019e-05, 4.1568999999998246e-05, 4.1804999999998926e-05, 4.1402999999998885e-05, 4.170800000000141e-05, 4.1388999999999315e-05, 4.152800000000248e-05, 4.1568999999998246e-05, 4.155599999999815e-05, 4.157000000000119e-05, 4.1861000000000675e-05, 4.148599999999683e-05, 4.170799999999794e-05, 4.154199999999858e-05, 4.157000000000119e-05, 4.1389000000002785e-05, 4.222200000000148e-05, 4.141599999999898e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.2040999999999606e-05, 4.220799999999844e-05, 4.1875000000000245e-05, 4.1389000000002785e-05, 4.2082999999998316e-05, 4.1875000000000245e-05, 4.222199999999801e-05, 4.175000000000012e-05, 4.222200000000148e-05, 4.1431000000001494e-05, 4.204199999999908e-05, 4.155599999999815e-05, 4.157000000000119e-05, 4.147200000000073e-05, 4.204199999999908e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.581" endtime="20201110 08:38:02.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.576" endtime="20201110 08:38:02.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.586" endtime="20201110 08:38:02.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.590" endtime="20201110 08:38:02.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.588" endtime="20201110 08:38:02.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.585" endtime="20201110 08:38:02.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.218" endtime="20201110 08:38:02.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.218" endtime="20201110 08:38:02.610"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.619" endtime="20201110 08:38:02.636"></status>
</kw>
<msg timestamp="20201110 08:38:02.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.618" endtime="20201110 08:38:02.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.637" endtime="20201110 08:38:02.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.640" endtime="20201110 08:38:02.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.615" endtime="20201110 08:38:02.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.613" endtime="20201110 08:38:02.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.649" endtime="20201110 08:38:02.938"></status>
</kw>
<msg timestamp="20201110 08:38:02.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.647" endtime="20201110 08:38:02.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.942" endtime="20201110 08:38:02.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.951" endtime="20201110 08:38:02.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.645" endtime="20201110 08:38:02.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.643" endtime="20201110 08:38:02.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.957" level="INFO">${RESULT} = [{'time': 0.022253597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.195800000000166e-05, 'source_diff': 4.195800000000166e-05}, {'time': 0.022301611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.954" endtime="20201110 08:38:02.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.971" level="INFO">${ACCURACY} = {'diff': [4.195800000000166e-05, 4.1861000000000675e-05, 4.157000000000119e-05, 4.177799999999926e-05, 4.154199999999858e-05, 4.209799999999736e-05, 4.2125000000000495e-05, 4.220799999999844e-05, 4.13...</msg>
<status status="PASS" starttime="20201110 08:38:02.958" endtime="20201110 08:38:02.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.975" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.974" endtime="20201110 08:38:02.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.978" level="INFO">VALUE: [4.195800000000166e-05, 4.1861000000000675e-05, 4.157000000000119e-05, 4.177799999999926e-05, 4.154199999999858e-05, 4.209799999999736e-05, 4.2125000000000495e-05, 4.220799999999844e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1902999999999385e-05, 4.2139000000000065e-05, 4.186200000000015e-05, 4.2054999999999176e-05, 4.1708999999997415e-05, 4.172200000000098e-05, 4.220799999999844e-05, 4.173600000000055e-05, 4.151400000000291e-05, 4.2041000000003076e-05, 4.198599999999733e-05, 4.1374999999999745e-05, 4.173600000000055e-05, 4.154199999999858e-05, 4.222199999999801e-05, 4.1888999999999815e-05, 4.170800000000141e-05, 4.1888999999999815e-05, 4.132000000000094e-05, 4.220800000000191e-05, 4.156999999999772e-05, 4.1875000000000245e-05, 4.1389000000002785e-05, 4.1695000000001314e-05, 4.1888999999999815e-05, 4.201399999999994e-05, 4.152800000000248e-05, 4.1832999999998066e-05, 4.1555000000002146e-05, 4.1847000000001106e-05, 4.1611000000000425e-05, 4.1888999999999815e-05, 4.202799999999951e-05, 4.2040999999999606e-05, 4.2068999999998746e-05, 4.1874999999996776e-05, 4.154199999999858e-05, 4.155600000000162e-05, 4.172200000000098e-05, 4.2209000000001384e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.976" endtime="20201110 08:38:02.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.971" endtime="20201110 08:38:02.979"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.981" endtime="20201110 08:38:02.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.985" endtime="20201110 08:38:03.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.983" endtime="20201110 08:38:03.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.980" endtime="20201110 08:38:03.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.611" endtime="20201110 08:38:03.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.611" endtime="20201110 08:38:03.006"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.014" endtime="20201110 08:38:03.030"></status>
</kw>
<msg timestamp="20201110 08:38:03.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.013" endtime="20201110 08:38:03.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.032" endtime="20201110 08:38:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.034" endtime="20201110 08:38:03.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.010" endtime="20201110 08:38:03.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.008" endtime="20201110 08:38:03.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.043" endtime="20201110 08:38:03.331"></status>
</kw>
<msg timestamp="20201110 08:38:03.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.042" endtime="20201110 08:38:03.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022232639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.335" endtime="20201110 08:38:03.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.343" endtime="20201110 08:38:03.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.039" endtime="20201110 08:38:03.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.037" endtime="20201110 08:38:03.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.350" level="INFO">${RESULT} = [{'time': 0.022273986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1347000000000605e-05, 'source_diff': 4.1347000000000605e-05}, {'time': 0.022321958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:03.347" endtime="20201110 08:38:03.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.363" level="INFO">${ACCURACY} = {'diff': [4.1347000000000605e-05, 4.170799999999794e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.169399999999837e-05, 4.1666999999998705e-05, 4.1875000000000245e-05, 4.16119999999999e-05, 4.18...</msg>
<status status="PASS" starttime="20201110 08:38:03.351" endtime="20201110 08:38:03.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.368" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.367" endtime="20201110 08:38:03.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.370" level="INFO">VALUE: [4.1347000000000605e-05, 4.170799999999794e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.169399999999837e-05, 4.1666999999998705e-05, 4.1875000000000245e-05, 4.16119999999999e-05, 4.180600000000187e-05, 4.1875000000000245e-05, 4.1875000000000245e-05, 4.155600000000162e-05, 4.1723000000000454e-05, 4.152799999999901e-05, 4.202799999999951e-05, 4.151399999999944e-05, 4.205599999999865e-05, 4.155600000000162e-05, 4.1540999999999106e-05, 4.222200000000148e-05, 4.1875000000000245e-05, 4.220799999999844e-05, 4.219399999999887e-05, 4.1374999999999745e-05, 4.1902999999999385e-05, 4.170799999999794e-05, 4.1389000000002785e-05, 4.172200000000098e-05, 4.201399999999994e-05, 4.205599999999865e-05, 4.1874999999996776e-05, 4.1888999999999815e-05, 4.1875000000000245e-05, 4.172199999999751e-05, 4.1667000000002175e-05, 4.1374999999999745e-05, 4.2208999999997915e-05, 4.1723000000000454e-05, 4.136200000000312e-05, 4.1875000000000245e-05, 4.222200000000148e-05, 4.1540999999999106e-05, 4.220800000000191e-05, 4.225000000000062e-05, 4.1888999999999815e-05, 4.1902999999999385e-05, 4.1555000000002146e-05, 4.222199999999801e-05, 4.220800000000191e-05, 4.222199999999801e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.369" endtime="20201110 08:38:03.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.364" endtime="20201110 08:38:03.372"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.374" endtime="20201110 08:38:03.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.378" endtime="20201110 08:38:03.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.376" endtime="20201110 08:38:03.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.372" endtime="20201110 08:38:03.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.007" endtime="20201110 08:38:03.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.006" endtime="20201110 08:38:03.399"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.407" endtime="20201110 08:38:03.424"></status>
</kw>
<msg timestamp="20201110 08:38:03.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.406" endtime="20201110 08:38:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.425" endtime="20201110 08:38:03.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.428" endtime="20201110 08:38:03.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.403" endtime="20201110 08:38:03.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.401" endtime="20201110 08:38:03.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.437" endtime="20201110 08:38:03.724"></status>
</kw>
<msg timestamp="20201110 08:38:03.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.435" endtime="20201110 08:38:03.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022127583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.728" endtime="20201110 08:38:03.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.736" endtime="20201110 08:38:03.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.433" endtime="20201110 08:38:03.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.431" endtime="20201110 08:38:03.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.743" level="INFO">${RESULT} = [{'time': 0.022169722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2139000000000065e-05, 'source_diff': 4.2139000000000065e-05}, {'time': 0.022218722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:03.740" endtime="20201110 08:38:03.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.756" level="INFO">${ACCURACY} = {'diff': [4.2139000000000065e-05, 4.170800000000141e-05, 4.172199999999751e-05, 4.1374999999999745e-05, 4.154199999999858e-05, 4.1902999999999385e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.1...</msg>
<status status="PASS" starttime="20201110 08:38:03.744" endtime="20201110 08:38:03.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.761" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.760" endtime="20201110 08:38:03.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.764" level="INFO">VALUE: [4.2139000000000065e-05, 4.170800000000141e-05, 4.172199999999751e-05, 4.1374999999999745e-05, 4.154199999999858e-05, 4.1902999999999385e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.1388999999999315e-05, 4.1861000000000675e-05, 4.154199999999858e-05, 4.207000000000169e-05, 4.2208999999997915e-05, 4.1723000000000454e-05, 4.1638999999999565e-05, 4.1888999999999815e-05, 4.1568999999998246e-05, 4.222200000000148e-05, 4.220800000000191e-05, 4.227799999999976e-05, 4.1638999999999565e-05, 4.222200000000148e-05, 4.1861000000000675e-05, 4.2125000000000495e-05, 4.222200000000148e-05, 4.204199999999908e-05, 4.1875000000000245e-05, 4.144399999999812e-05, 4.19999999999969e-05, 4.1875000000000245e-05, 4.222200000000148e-05, 4.1875000000000245e-05, 4.1708999999997415e-05, 4.1737000000000024e-05, 4.2097000000001356e-05, 4.1888999999999815e-05, 4.195800000000166e-05, 4.129199999999833e-05, 4.2040999999999606e-05, 4.1431000000001494e-05, 4.151399999999944e-05, 4.1388999999999315e-05, 4.2139000000000065e-05, 4.1888999999999815e-05, 4.1375000000003215e-05, 4.1888999999999815e-05, 4.1361000000000175e-05, 4.1875000000000245e-05, 4.1374999999999745e-05, 4.170799999999794e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.762" endtime="20201110 08:38:03.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.757" endtime="20201110 08:38:03.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.767" endtime="20201110 08:38:03.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.771" endtime="20201110 08:38:03.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.769" endtime="20201110 08:38:03.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.765" endtime="20201110 08:38:03.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.400" endtime="20201110 08:38:03.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.399" endtime="20201110 08:38:03.791"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.800" endtime="20201110 08:38:03.817"></status>
</kw>
<msg timestamp="20201110 08:38:03.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.799" endtime="20201110 08:38:03.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.818" endtime="20201110 08:38:03.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.821" endtime="20201110 08:38:03.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.796" endtime="20201110 08:38:03.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.794" endtime="20201110 08:38:03.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.830" endtime="20201110 08:38:04.117"></status>
</kw>
<msg timestamp="20201110 08:38:04.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.829" endtime="20201110 08:38:04.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022300236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.121" endtime="20201110 08:38:04.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.130" endtime="20201110 08:38:04.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.826" endtime="20201110 08:38:04.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.824" endtime="20201110 08:38:04.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.136" level="INFO">${RESULT} = [{'time': 0.022342069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1832999999998066e-05, 'source_diff': 4.1832999999998066e-05}, {'time': 0.022395056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:04.133" endtime="20201110 08:38:04.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.150" level="INFO">${ACCURACY} = {'diff': [4.1832999999998066e-05, 4.2209000000001384e-05, 4.170799999999794e-05, 4.220799999999844e-05, 4.172200000000098e-05, 4.169400000000184e-05, 4.1389000000002785e-05, 4.220800000000191e-05, 4.1...</msg>
<status status="PASS" starttime="20201110 08:38:04.137" endtime="20201110 08:38:04.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.154" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.153" endtime="20201110 08:38:04.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.157" level="INFO">VALUE: [4.1832999999998066e-05, 4.2209000000001384e-05, 4.170799999999794e-05, 4.220799999999844e-05, 4.172200000000098e-05, 4.169400000000184e-05, 4.1389000000002785e-05, 4.220800000000191e-05, 4.1638999999999565e-05, 4.1402999999998885e-05, 4.220800000000191e-05, 4.152799999999901e-05, 4.173599999999708e-05, 4.157000000000119e-05, 4.204200000000255e-05, 4.172200000000098e-05, 4.204199999999908e-05, 4.157000000000119e-05, 4.152799999999901e-05, 4.132000000000094e-05, 4.204199999999908e-05, 4.172200000000098e-05, 4.1667000000002175e-05, 4.1374999999999745e-05, 4.172200000000098e-05, 4.2041000000003076e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.170800000000141e-05, 4.202800000000298e-05, 4.204199999999908e-05, 4.222200000000148e-05, 4.1681000000001744e-05, 4.155599999999815e-05, 4.204199999999908e-05, 4.1861000000000675e-05, 4.205599999999865e-05, 4.2208999999997915e-05, 4.140199999999941e-05, 4.1723000000000454e-05, 4.1709000000000884e-05, 4.2208999999997915e-05, 4.1597000000000856e-05, 4.138799999999984e-05, 4.1861000000000675e-05, 4.220800000000191e-05, 4.1874999999996776e-05, 4.170800000000141e-05, 4.172200000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.155" endtime="20201110 08:38:04.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.151" endtime="20201110 08:38:04.158"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.160" endtime="20201110 08:38:04.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.164" endtime="20201110 08:38:04.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.162" endtime="20201110 08:38:04.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.159" endtime="20201110 08:38:04.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.792" endtime="20201110 08:38:04.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.792" endtime="20201110 08:38:04.185"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.194" endtime="20201110 08:38:04.210"></status>
</kw>
<msg timestamp="20201110 08:38:04.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.193" endtime="20201110 08:38:04.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.212" endtime="20201110 08:38:04.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.214" endtime="20201110 08:38:04.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.190" endtime="20201110 08:38:04.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.188" endtime="20201110 08:38:04.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.223" endtime="20201110 08:38:04.511"></status>
</kw>
<msg timestamp="20201110 08:38:04.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023239944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.222" endtime="20201110 08:38:04.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023239944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023282111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.515" endtime="20201110 08:38:04.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.523" endtime="20201110 08:38:04.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.219" endtime="20201110 08:38:04.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.217" endtime="20201110 08:38:04.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.531" level="INFO">${RESULT} = [{'time': 0.023282111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2167000000002675e-05, 'source_diff': 4.2167000000002675e-05}, {'time': 0.023336111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:04.527" endtime="20201110 08:38:04.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.545" level="INFO">${ACCURACY} = {'diff': [4.2167000000002675e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.204199999999908e-05, 4.1416999999998455e-05, 4.1388999999999315e-05, 4.1375000000003215e-05, 4.172200000000098e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:38:04.532" endtime="20201110 08:38:04.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.550" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.549" endtime="20201110 08:38:04.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.553" level="INFO">VALUE: [4.2167000000002675e-05, 4.222199999999801e-05, 4.172200000000098e-05, 4.204199999999908e-05, 4.1416999999998455e-05, 4.1388999999999315e-05, 4.1375000000003215e-05, 4.172200000000098e-05, 4.204199999999908e-05, 4.155600000000162e-05, 4.1569000000001716e-05, 4.2209000000001384e-05, 4.205599999999865e-05, 4.202799999999951e-05, 4.1569000000001716e-05, 4.173600000000055e-05, 4.138799999999984e-05, 4.1374999999999745e-05, 4.1860999999997206e-05, 4.2054999999999176e-05, 4.1860999999997206e-05, 4.220799999999844e-05, 4.1374999999999745e-05, 4.2054999999999176e-05, 4.172200000000098e-05, 4.204199999999908e-05, 4.1888999999999815e-05, 4.152799999999901e-05, 4.207000000000169e-05, 4.181999999999797e-05, 4.156999999999772e-05, 4.1875000000000245e-05, 4.223600000000105e-05, 4.1737000000000024e-05, 4.205600000000212e-05, 4.138799999999984e-05, 4.154199999999858e-05, 4.2209000000001384e-05, 4.222199999999801e-05, 4.215200000000016e-05, 4.222200000000148e-05, 4.2027000000000037e-05, 4.219400000000234e-05, 4.2139000000000065e-05, 4.2040999999999606e-05, 4.1888999999999815e-05, 4.205599999999865e-05, 4.205599999999865e-05, 4.1389000000002785e-05, 4.222199999999801e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.551" endtime="20201110 08:38:04.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.546" endtime="20201110 08:38:04.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.556" endtime="20201110 08:38:04.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.560" endtime="20201110 08:38:04.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.558" endtime="20201110 08:38:04.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.555" endtime="20201110 08:38:04.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.186" endtime="20201110 08:38:04.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.185" endtime="20201110 08:38:04.581"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.589" endtime="20201110 08:38:04.606"></status>
</kw>
<msg timestamp="20201110 08:38:04.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.588" endtime="20201110 08:38:04.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.607" endtime="20201110 08:38:04.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.610" endtime="20201110 08:38:04.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.585" endtime="20201110 08:38:04.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.583" endtime="20201110 08:38:04.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.619" endtime="20201110 08:38:04.906"></status>
</kw>
<msg timestamp="20201110 08:38:04.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.617" endtime="20201110 08:38:04.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.910" endtime="20201110 08:38:04.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.918" endtime="20201110 08:38:04.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.615" endtime="20201110 08:38:04.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.613" endtime="20201110 08:38:04.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.925" level="INFO">${RESULT} = [{'time': 0.022405542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.14860000000003e-05, 'source_diff': 4.14860000000003e-05}, {'time': 0.022452542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:04.922" endtime="20201110 08:38:04.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.939" level="INFO">${ACCURACY} = {'diff': [4.14860000000003e-05, 4.183399999999754e-05, 4.1568999999998246e-05, 4.176399999999969e-05, 4.172200000000098e-05, 4.1917000000002425e-05, 4.1569000000001716e-05, 4.2040999999999606e-05, 4.2...</msg>
<status status="PASS" starttime="20201110 08:38:04.926" endtime="20201110 08:38:04.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.944" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.943" endtime="20201110 08:38:04.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.946" level="INFO">VALUE: [4.14860000000003e-05, 4.183399999999754e-05, 4.1568999999998246e-05, 4.176399999999969e-05, 4.172200000000098e-05, 4.1917000000002425e-05, 4.1569000000001716e-05, 4.2040999999999606e-05, 4.2054999999999176e-05, 4.1473000000000204e-05, 4.2068999999998746e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.206999999999822e-05, 4.205600000000212e-05, 4.169400000000184e-05, 4.170800000000141e-05, 4.1374999999999745e-05, 4.155599999999815e-05, 4.2222999999997485e-05, 4.1875000000000245e-05, 4.2236999999997055e-05, 4.204199999999908e-05, 4.1374999999999745e-05, 4.188800000000034e-05, 4.1540999999999106e-05, 4.140199999999941e-05, 4.220799999999844e-05, 4.220800000000191e-05, 4.1526999999999537e-05, 4.218000000000277e-05, 4.220799999999844e-05, 4.1541000000002576e-05, 4.1374999999999745e-05, 4.172200000000098e-05, 4.152799999999901e-05, 4.175000000000012e-05, 4.205599999999865e-05, 4.1681000000001744e-05, 4.1638999999999565e-05, 4.1361000000000175e-05, 4.225000000000062e-05, 4.225000000000062e-05, 4.205599999999865e-05, 4.2209000000001384e-05, 4.140199999999941e-05, 4.2054999999999176e-05, 4.1695000000001314e-05, 4.1374999999999745e-05, 4.1874999999996776e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.945" endtime="20201110 08:38:04.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.940" endtime="20201110 08:38:04.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.950" endtime="20201110 08:38:04.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.953" endtime="20201110 08:38:04.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.952" endtime="20201110 08:38:04.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.948" endtime="20201110 08:38:04.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.582" endtime="20201110 08:38:04.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.581" endtime="20201110 08:38:04.974"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.983" endtime="20201110 08:38:05.001"></status>
</kw>
<msg timestamp="20201110 08:38:05.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.981" endtime="20201110 08:38:05.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.002" endtime="20201110 08:38:05.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.005" endtime="20201110 08:38:05.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.979" endtime="20201110 08:38:05.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.977" endtime="20201110 08:38:05.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.014" endtime="20201110 08:38:05.301"></status>
</kw>
<msg timestamp="20201110 08:38:05.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.012" endtime="20201110 08:38:05.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022461556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.305" endtime="20201110 08:38:05.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.314" endtime="20201110 08:38:05.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.010" endtime="20201110 08:38:05.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.008" endtime="20201110 08:38:05.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.321" level="INFO">${RESULT} = [{'time': 0.022461556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.151399999999944e-05, 'source_diff': 4.151399999999944e-05}, {'time': 0.022513569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:05.317" endtime="20201110 08:38:05.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.334" level="INFO">${ACCURACY} = {'diff': [4.151399999999944e-05, 4.2040999999999606e-05, 4.2068999999998746e-05, 4.1333000000001036e-05, 4.1318999999997996e-05, 4.170800000000141e-05, 4.1554999999998676e-05, 4.2054999999999176e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:05.322" endtime="20201110 08:38:05.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.339" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.338" endtime="20201110 08:38:05.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.341" level="INFO">VALUE: [4.151399999999944e-05, 4.2040999999999606e-05, 4.2068999999998746e-05, 4.1333000000001036e-05, 4.1318999999997996e-05, 4.170800000000141e-05, 4.1554999999998676e-05, 4.2054999999999176e-05, 4.1888999999999815e-05, 4.172200000000098e-05, 4.1374999999999745e-05, 4.204199999999908e-05, 4.1888999999999815e-05, 4.1361000000000175e-05, 4.1402999999998885e-05, 4.1902999999999385e-05, 4.145800000000116e-05, 4.1388999999999315e-05, 4.1695000000001314e-05, 4.2237000000000524e-05, 4.1388999999999315e-05, 4.191599999999948e-05, 4.2209000000001384e-05, 4.2125000000000495e-05, 4.1541000000002576e-05, 4.2041000000003076e-05, 4.2040999999999606e-05, 4.1540999999999106e-05, 4.170800000000141e-05, 4.170799999999794e-05, 4.1902999999999385e-05, 4.204199999999908e-05, 4.200000000000037e-05, 4.1333000000001036e-05, 4.1875000000000245e-05, 4.170800000000141e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1861000000000675e-05, 4.154199999999858e-05, 4.205599999999865e-05, 4.2208999999997915e-05, 4.145800000000116e-05, 4.1875000000000245e-05, 4.188800000000034e-05, 4.220800000000191e-05, 4.170799999999794e-05, 4.1554999999998676e-05, 4.1582999999997816e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.340" endtime="20201110 08:38:05.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.335" endtime="20201110 08:38:05.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.352" endtime="20201110 08:38:05.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.356" endtime="20201110 08:38:05.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.354" endtime="20201110 08:38:05.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.350" endtime="20201110 08:38:05.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.975" endtime="20201110 08:38:05.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.974" endtime="20201110 08:38:05.376"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.385" endtime="20201110 08:38:05.402"></status>
</kw>
<msg timestamp="20201110 08:38:05.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.384" endtime="20201110 08:38:05.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.403" endtime="20201110 08:38:05.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.406" endtime="20201110 08:38:05.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.381" endtime="20201110 08:38:05.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.379" endtime="20201110 08:38:05.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.415" endtime="20201110 08:38:05.703"></status>
</kw>
<msg timestamp="20201110 08:38:05.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.413" endtime="20201110 08:38:05.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.707" endtime="20201110 08:38:05.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.718" endtime="20201110 08:38:05.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.411" endtime="20201110 08:38:05.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.409" endtime="20201110 08:38:05.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.729" level="INFO">${RESULT} = [{'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2360999999997706e-05, 'source_diff': 4.2360999999997706e-05}, {'time': 0.022470569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.725" endtime="20201110 08:38:05.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.745" level="INFO">${ACCURACY} = {'diff': [4.2360999999997706e-05, 4.248599999999783e-05, 4.2888999999997346e-05, 4.2874999999997776e-05, 4.272199999999851e-05, 4.2889000000000815e-05, 4.272200000000198e-05, 4.269400000000284e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:38:05.730" endtime="20201110 08:38:05.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.750" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.749" endtime="20201110 08:38:05.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.752" level="INFO">VALUE: [4.2360999999997706e-05, 4.248599999999783e-05, 4.2888999999997346e-05, 4.2874999999997776e-05, 4.272199999999851e-05, 4.2889000000000815e-05, 4.272200000000198e-05, 4.269400000000284e-05, 4.270800000000241e-05, 4.2874999999997776e-05, 4.320799999999944e-05, 4.252800000000001e-05, 4.255599999999915e-05, 4.304200000000008e-05, 4.257000000000219e-05, 4.3181000000003245e-05, 4.2736999999997555e-05, 4.3194999999999345e-05, 4.269399999999937e-05, 4.305599999999965e-05, 4.2541000000000107e-05, 4.240200000000041e-05, 4.270799999999894e-05, 4.2527000000000537e-05, 4.2889000000000815e-05, 4.322199999999901e-05, 4.2569000000002716e-05, 4.2389000000000315e-05, 4.2610999999997956e-05, 4.269399999999937e-05, 4.258400000000176e-05, 4.2389000000000315e-05, 4.327700000000129e-05, 4.320799999999944e-05, 4.270799999999894e-05, 4.3209000000002384e-05, 4.2875000000001245e-05, 4.291600000000048e-05, 4.3082999999999316e-05, 4.2889000000000815e-05, 4.3208999999998915e-05, 4.2889000000000815e-05, 4.29999999999979e-05, 4.320799999999944e-05, 4.3055000000000176e-05, 4.2361000000001175e-05, 4.2402999999999885e-05, 4.320799999999944e-05, 4.252800000000001e-05, 4.256999999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.751" endtime="20201110 08:38:05.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.746" endtime="20201110 08:38:05.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.756" endtime="20201110 08:38:05.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.759" endtime="20201110 08:38:05.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.758" endtime="20201110 08:38:05.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.754" endtime="20201110 08:38:05.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.377" endtime="20201110 08:38:05.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.377" endtime="20201110 08:38:05.780"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.789" endtime="20201110 08:38:05.806"></status>
</kw>
<msg timestamp="20201110 08:38:05.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.787" endtime="20201110 08:38:05.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.807" endtime="20201110 08:38:05.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.810" endtime="20201110 08:38:05.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.785" endtime="20201110 08:38:05.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.783" endtime="20201110 08:38:05.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.819" endtime="20201110 08:38:06.107"></status>
</kw>
<msg timestamp="20201110 08:38:06.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.817" endtime="20201110 08:38:06.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022733764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.111" endtime="20201110 08:38:06.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.119" endtime="20201110 08:38:06.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.815" endtime="20201110 08:38:06.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.813" endtime="20201110 08:38:06.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.126" level="INFO">${RESULT} = [{'time': 0.022733764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3681000000000275e-05, 'source_diff': 4.3681000000000275e-05}, {'time': 0.022787764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:06.123" endtime="20201110 08:38:06.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.139" level="INFO">${ACCURACY} = {'diff': [4.3681000000000275e-05, 4.3874999999998776e-05, 4.4125000000002496e-05, 4.354200000000058e-05, 4.3722999999998985e-05, 4.3888999999998346e-05, 4.354200000000058e-05, 4.4222999999999485e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:06.127" endtime="20201110 08:38:06.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.144" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.143" endtime="20201110 08:38:06.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.146" level="INFO">VALUE: [4.3681000000000275e-05, 4.3874999999998776e-05, 4.4125000000002496e-05, 4.354200000000058e-05, 4.3722999999998985e-05, 4.3888999999998346e-05, 4.354200000000058e-05, 4.4222999999999485e-05, 4.354199999999711e-05, 4.3708999999999415e-05, 4.3888999999998346e-05, 4.3888999999998346e-05, 4.427800000000176e-05, 4.420800000000044e-05, 4.3555000000000677e-05, 4.3541000000001107e-05, 4.3374999999998276e-05, 4.404200000000108e-05, 4.422200000000001e-05, 4.3888999999998346e-05, 4.420800000000044e-05, 4.355600000000015e-05, 4.4096999999999886e-05, 4.404200000000108e-05, 4.352799999999754e-05, 4.4208999999999915e-05, 4.3723000000002454e-05, 4.3375000000001745e-05, 4.3708999999999415e-05, 4.338799999999837e-05, 4.3569000000000246e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.3555000000000677e-05, 4.3875000000002246e-05, 4.4124999999999026e-05, 4.419400000000087e-05, 4.4055000000001177e-05, 4.354200000000058e-05, 4.354200000000058e-05, 4.38060000000004e-05, 4.372199999999951e-05, 4.355600000000015e-05, 4.3833000000000066e-05, 4.405600000000065e-05, 4.3708999999999415e-05, 4.354199999999711e-05, 4.402799999999804e-05, 4.3555000000000677e-05, 4.4055000000001177e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.145" endtime="20201110 08:38:06.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.140" endtime="20201110 08:38:06.148"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.150" endtime="20201110 08:38:06.151"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.154" endtime="20201110 08:38:06.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.152" endtime="20201110 08:38:06.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.148" endtime="20201110 08:38:06.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.781" endtime="20201110 08:38:06.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.781" endtime="20201110 08:38:06.175"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.183" endtime="20201110 08:38:06.200"></status>
</kw>
<msg timestamp="20201110 08:38:06.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.182" endtime="20201110 08:38:06.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.202" endtime="20201110 08:38:06.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.205" endtime="20201110 08:38:06.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.179" endtime="20201110 08:38:06.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.177" endtime="20201110 08:38:06.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.214" endtime="20201110 08:38:06.503"></status>
</kw>
<msg timestamp="20201110 08:38:06.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.213" endtime="20201110 08:38:06.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022496458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.508" endtime="20201110 08:38:06.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.516" endtime="20201110 08:38:06.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.210" endtime="20201110 08:38:06.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.208" endtime="20201110 08:38:06.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.523" level="INFO">${RESULT} = [{'time': 0.022541625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5166999999998736e-05, 'source_diff': 4.5166999999998736e-05}, {'time': 0.022600653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:06.519" endtime="20201110 08:38:06.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.536" level="INFO">${ACCURACY} = {'diff': [4.5166999999998736e-05, 4.4402999999998416e-05, 4.4374999999999276e-05, 4.454199999999811e-05, 4.4888999999999346e-05, 4.504200000000208e-05, 4.5237000000000055e-05, 4.454199999999811e-05, 4...</msg>
<status status="PASS" starttime="20201110 08:38:06.524" endtime="20201110 08:38:06.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.541" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.540" endtime="20201110 08:38:06.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.543" level="INFO">VALUE: [4.5166999999998736e-05, 4.4402999999998416e-05, 4.4374999999999276e-05, 4.454199999999811e-05, 4.4888999999999346e-05, 4.504200000000208e-05, 4.5237000000000055e-05, 4.454199999999811e-05, 4.522199999999754e-05, 4.505500000000218e-05, 4.4569000000001247e-05, 4.469400000000137e-05, 4.4388999999998846e-05, 4.470800000000094e-05, 4.467999999999833e-05, 4.4874999999999776e-05, 4.522199999999754e-05, 4.4388999999998846e-05, 4.502799999999904e-05, 4.522200000000101e-05, 4.4389000000002315e-05, 4.455600000000115e-05, 4.505600000000165e-05, 4.508399999999732e-05, 4.5208999999997446e-05, 4.452800000000201e-05, 4.5209000000000915e-05, 4.4374999999999276e-05, 4.440199999999894e-05, 4.4486999999999305e-05, 4.525000000000015e-05, 4.473600000000008e-05, 4.473600000000008e-05, 4.4445000000000595e-05, 4.454099999999864e-05, 4.4874999999999776e-05, 4.4388999999998846e-05, 4.522200000000101e-05, 4.46939999999979e-05, 4.507000000000122e-05, 4.520799999999797e-05, 4.455599999999768e-05, 4.520799999999797e-05, 4.452799999999854e-05, 4.4709000000000415e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.498600000000033e-05, 4.508299999999785e-05, 4.454200000000158e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.542" endtime="20201110 08:38:06.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.537" endtime="20201110 08:38:06.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.547" endtime="20201110 08:38:06.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.550" endtime="20201110 08:38:06.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.549" endtime="20201110 08:38:06.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.545" endtime="20201110 08:38:06.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.175" endtime="20201110 08:38:06.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.175" endtime="20201110 08:38:06.571"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.580" endtime="20201110 08:38:06.597"></status>
</kw>
<msg timestamp="20201110 08:38:06.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.578" endtime="20201110 08:38:06.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.599" endtime="20201110 08:38:06.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.601" endtime="20201110 08:38:06.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.576" endtime="20201110 08:38:06.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.574" endtime="20201110 08:38:06.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.610" endtime="20201110 08:38:06.915"></status>
</kw>
<msg timestamp="20201110 08:38:06.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.609" endtime="20201110 08:38:06.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.929" endtime="20201110 08:38:06.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.948" endtime="20201110 08:38:06.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.606" endtime="20201110 08:38:06.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.605" endtime="20201110 08:38:06.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.964" level="INFO">${RESULT} = [{'time': 0.022840222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.617999999999983e-05, 'source_diff': 4.617999999999983e-05}, {'time': 0.022896264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.957" endtime="20201110 08:38:06.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.989" level="INFO">${ACCURACY} = {'diff': [4.617999999999983e-05, 4.626400000000072e-05, 4.572199999999804e-05, 4.604199999999961e-05, 4.5902999999999916e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5875000000000776e-05, 4....</msg>
<status status="PASS" starttime="20201110 08:38:06.966" endtime="20201110 08:38:06.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.995" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.993" endtime="20201110 08:38:06.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.997" level="INFO">VALUE: [4.617999999999983e-05, 4.626400000000072e-05, 4.572199999999804e-05, 4.604199999999961e-05, 4.5902999999999916e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.5875000000000776e-05, 4.548599999999736e-05, 4.552799999999954e-05, 4.594399999999915e-05, 4.5388999999999846e-05, 4.5902999999999916e-05, 4.5708999999997946e-05, 4.5375000000000276e-05, 4.556899999999878e-05, 4.5875000000000776e-05, 4.602800000000004e-05, 4.620800000000244e-05, 4.613799999999765e-05, 4.622199999999854e-05, 4.5875000000000776e-05, 4.604100000000014e-05, 4.552799999999954e-05, 4.605499999999971e-05, 4.5875000000000776e-05, 4.5681000000002275e-05, 4.554199999999911e-05, 4.572199999999804e-05, 4.620799999999897e-05, 4.5889000000000346e-05, 4.5375000000000276e-05, 4.5375000000000276e-05, 4.552799999999954e-05, 4.605599999999918e-05, 4.6223000000001485e-05, 4.5709000000001415e-05, 4.605499999999971e-05, 4.570799999999847e-05, 4.5889000000000346e-05, 4.5388999999999846e-05, 4.572199999999804e-05, 4.604100000000014e-05, 4.554100000000311e-05, 4.5333000000001566e-05, 4.5889000000000346e-05, 4.573599999999761e-05, 4.5861000000001206e-05, 4.5375000000000276e-05, 4.604199999999961e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.996" endtime="20201110 08:38:06.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.990" endtime="20201110 08:38:06.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.001" endtime="20201110 08:38:07.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.006" endtime="20201110 08:38:07.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.004" endtime="20201110 08:38:07.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.000" endtime="20201110 08:38:07.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.572" endtime="20201110 08:38:07.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.571" endtime="20201110 08:38:07.027"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.035" endtime="20201110 08:38:07.052"></status>
</kw>
<msg timestamp="20201110 08:38:07.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.034" endtime="20201110 08:38:07.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.054" endtime="20201110 08:38:07.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.056" endtime="20201110 08:38:07.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.031" endtime="20201110 08:38:07.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.029" endtime="20201110 08:38:07.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.066" endtime="20201110 08:38:07.353"></status>
</kw>
<msg timestamp="20201110 08:38:07.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.064" endtime="20201110 08:38:07.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022471111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.357" endtime="20201110 08:38:07.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.365" endtime="20201110 08:38:07.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.061" endtime="20201110 08:38:07.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.060" endtime="20201110 08:38:07.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.372" level="INFO">${RESULT} = [{'time': 0.022517792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6680999999999806e-05, 'source_diff': 4.6680999999999806e-05}, {'time': 0.022569792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:07.369" endtime="20201110 08:38:07.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.386" level="INFO">${ACCURACY} = {'diff': [4.6680999999999806e-05, 4.6875000000001776e-05, 4.687499999999831e-05, 4.63879999999979e-05, 4.6708999999998946e-05, 4.702700000000157e-05, 4.65269999999976e-05, 4.6861000000002206e-05, 4.67...</msg>
<status status="PASS" starttime="20201110 08:38:07.373" endtime="20201110 08:38:07.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.390" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.389" endtime="20201110 08:38:07.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.393" level="INFO">VALUE: [4.6680999999999806e-05, 4.6875000000001776e-05, 4.687499999999831e-05, 4.63879999999979e-05, 4.6708999999998946e-05, 4.702700000000157e-05, 4.65269999999976e-05, 4.6861000000002206e-05, 4.670799999999947e-05, 4.6889000000001346e-05, 4.704100000000114e-05, 4.722200000000301e-05, 4.6875000000001776e-05, 4.672200000000251e-05, 4.66939999999999e-05, 4.71940000000004e-05, 4.720799999999997e-05, 4.654200000000011e-05, 4.702799999999757e-05, 4.7208999999999446e-05, 4.704200000000061e-05, 4.654200000000011e-05, 4.7208999999999446e-05, 4.7181000000000306e-05, 4.706900000000028e-05, 4.698599999999886e-05, 4.706900000000028e-05, 4.686099999999874e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.704100000000114e-05, 4.670799999999947e-05, 4.6361000000001706e-05, 4.670799999999947e-05, 4.704199999999714e-05, 4.6389000000000846e-05, 4.720799999999997e-05, 4.706999999999975e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.686199999999821e-05, 4.655599999999968e-05, 4.705499999999724e-05, 4.672199999999904e-05, 4.65269999999976e-05, 4.6889000000001346e-05, 4.672199999999904e-05, 4.65269999999976e-05, 4.670799999999947e-05, 4.722199999999954e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.391" endtime="20201110 08:38:07.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.387" endtime="20201110 08:38:07.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.396" endtime="20201110 08:38:07.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.400" endtime="20201110 08:38:07.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.398" endtime="20201110 08:38:07.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.395" endtime="20201110 08:38:07.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.027" endtime="20201110 08:38:07.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.027" endtime="20201110 08:38:07.421"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.429" endtime="20201110 08:38:07.446"></status>
</kw>
<msg timestamp="20201110 08:38:07.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.428" endtime="20201110 08:38:07.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.448" endtime="20201110 08:38:07.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.450" endtime="20201110 08:38:07.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.425" endtime="20201110 08:38:07.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.423" endtime="20201110 08:38:07.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.459" endtime="20201110 08:38:07.747"></status>
</kw>
<msg timestamp="20201110 08:38:07.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.458" endtime="20201110 08:38:07.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022181875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022229208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.751" endtime="20201110 08:38:07.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.760" endtime="20201110 08:38:07.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.455" endtime="20201110 08:38:07.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.454" endtime="20201110 08:38:07.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.767" level="INFO">${RESULT} = [{'time': 0.022229208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.73330000000001e-05, 'source_diff': 4.73330000000001e-05}, {'time': 0.022289208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:07.763" endtime="20201110 08:38:07.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.780" level="INFO">${ACCURACY} = {'diff': [4.73330000000001e-05, 4.7375000000002276e-05, 4.820800000000097e-05, 4.755600000000068e-05, 4.7959000000000196e-05, 4.820800000000097e-05, 4.736099999999924e-05, 4.772200000000004e-05, 4.740...</msg>
<status status="PASS" starttime="20201110 08:38:07.768" endtime="20201110 08:38:07.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.785" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.784" endtime="20201110 08:38:07.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.787" level="INFO">VALUE: [4.73330000000001e-05, 4.7375000000002276e-05, 4.820800000000097e-05, 4.755600000000068e-05, 4.7959000000000196e-05, 4.820800000000097e-05, 4.736099999999924e-05, 4.772200000000004e-05, 4.7403000000001416e-05, 4.788899999999888e-05, 4.772200000000004e-05, 4.7403000000001416e-05, 4.737499999999881e-05, 4.7722999999999516e-05, 4.754200000000111e-05, 4.8223000000000016e-05, 4.737499999999881e-05, 4.790200000000244e-05, 4.7375000000002276e-05, 4.758300000000035e-05, 4.770800000000047e-05, 4.7931000000001056e-05, 4.7889000000002346e-05, 4.805600000000118e-05, 4.820800000000097e-05, 4.8125000000003026e-05, 4.775000000000265e-05, 4.798599999999986e-05, 4.759699999999992e-05, 4.754200000000111e-05, 4.772200000000004e-05, 4.787499999999931e-05, 4.788899999999888e-05, 4.740200000000194e-05, 4.75000000000024e-05, 4.737499999999881e-05, 4.806900000000128e-05, 4.82079999999975e-05, 4.755500000000121e-05, 4.76940000000009e-05, 4.754099999999817e-05, 4.804099999999867e-05, 4.809700000000042e-05, 4.752800000000154e-05, 4.734699999999967e-05, 4.805599999999771e-05, 4.754200000000111e-05, 4.790299999999845e-05, 4.804199999999814e-05, 4.755599999999721e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.786" endtime="20201110 08:38:07.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.781" endtime="20201110 08:38:07.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.791" endtime="20201110 08:38:07.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.794" endtime="20201110 08:38:07.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.793" endtime="20201110 08:38:07.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.789" endtime="20201110 08:38:07.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.422" endtime="20201110 08:38:07.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.421" endtime="20201110 08:38:07.818"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.834" endtime="20201110 08:38:07.852"></status>
</kw>
<msg timestamp="20201110 08:38:07.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.829" endtime="20201110 08:38:07.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.853" endtime="20201110 08:38:07.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.856" endtime="20201110 08:38:07.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.826" endtime="20201110 08:38:07.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.822" endtime="20201110 08:38:07.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.865" endtime="20201110 08:38:08.150"></status>
</kw>
<msg timestamp="20201110 08:38:08.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032870167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.863" endtime="20201110 08:38:08.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032821833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032870167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.154" endtime="20201110 08:38:08.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.163" endtime="20201110 08:38:08.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.861" endtime="20201110 08:38:08.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.859" endtime="20201110 08:38:08.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.170" level="INFO">${RESULT} = [{'time': 0.032870167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83339999999971e-05, 'source_diff': 4.83339999999971e-05}, {'time': 0.032928194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:08.166" endtime="20201110 08:38:08.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.183" level="INFO">${ACCURACY} = {'diff': [4.83339999999971e-05, 4.906899999999881e-05, 4.923600000000111e-05, 4.91940000000024e-05, 4.905499999999924e-05, 4.870800000000147e-05, 4.905499999999924e-05, 4.922200000000154e-05, 4.905499...</msg>
<status status="PASS" starttime="20201110 08:38:08.170" endtime="20201110 08:38:08.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.188" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.187" endtime="20201110 08:38:08.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.190" level="INFO">VALUE: [4.83339999999971e-05, 4.906899999999881e-05, 4.923600000000111e-05, 4.91940000000024e-05, 4.905499999999924e-05, 4.870800000000147e-05, 4.905499999999924e-05, 4.922200000000154e-05, 4.905499999999924e-05, 4.856900000000525e-05, 4.905599999999871e-05, 4.8403000000002416e-05, 4.8875000000003777e-05, 4.907000000000522e-05, 4.905599999999871e-05, 4.887499999999684e-05, 4.8709000000000946e-05, 4.904199999999914e-05, 4.922299999999408e-05, 4.884799999999717e-05, 4.87219999999941e-05, 4.920899999999451e-05, 4.893000000000258e-05, 4.870800000000147e-05, 4.905499999999924e-05, 4.8361000000003707e-05, 4.838899999999591e-05, 4.838899999999591e-05, 4.870800000000147e-05, 4.854199999999864e-05, 4.920800000000197e-05, 4.8375000000003276e-05, 4.8389000000002846e-05, 4.9139000000003596e-05, 4.919499999999494e-05, 4.8875000000003777e-05, 4.8709000000000946e-05, 4.8389000000002846e-05, 4.904200000000608e-05, 4.858300000000482e-05, 4.9195000000001876e-05, 4.91940000000024e-05, 4.920800000000197e-05, 4.870800000000147e-05, 4.854099999999917e-05, 4.8375000000003276e-05, 4.902799999999957e-05, 4.872200000000104e-05, 4.9207999999995033e-05, 4.908399999999785e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.189" endtime="20201110 08:38:08.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.184" endtime="20201110 08:38:08.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.194" endtime="20201110 08:38:08.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.197" endtime="20201110 08:38:08.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.196" endtime="20201110 08:38:08.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.192" endtime="20201110 08:38:08.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.820" endtime="20201110 08:38:08.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.819" endtime="20201110 08:38:08.218"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.227" endtime="20201110 08:38:08.243"></status>
</kw>
<msg timestamp="20201110 08:38:08.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.225" endtime="20201110 08:38:08.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.245" endtime="20201110 08:38:08.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.247" endtime="20201110 08:38:08.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.222" endtime="20201110 08:38:08.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.220" endtime="20201110 08:38:08.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.257" endtime="20201110 08:38:08.546"></status>
</kw>
<msg timestamp="20201110 08:38:08.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:08.255" endtime="20201110 08:38:08.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:08.550" endtime="20201110 08:38:08.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.558" endtime="20201110 08:38:08.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.253" endtime="20201110 08:38:08.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.251" endtime="20201110 08:38:08.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.565" level="INFO">${RESULT} = [{'time': 0.022237236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.023600000000211e-05, 'source_diff': 5.023600000000211e-05}, {'time': 0.022296181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.562" endtime="20201110 08:38:08.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.578" level="INFO">${ACCURACY} = {'diff': [5.023600000000211e-05, 5.0223000000002016e-05, 4.955499999999974e-05, 4.969499999999891e-05, 5.023599999999864e-05, 4.969399999999943e-05, 4.973599999999814e-05, 4.988899999999741e-05, 4.956...</msg>
<status status="PASS" starttime="20201110 08:38:08.566" endtime="20201110 08:38:08.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.583" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.582" endtime="20201110 08:38:08.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.586" level="INFO">VALUE: [5.023600000000211e-05, 5.0223000000002016e-05, 4.955499999999974e-05, 4.969499999999891e-05, 5.023599999999864e-05, 4.969399999999943e-05, 4.973599999999814e-05, 4.988899999999741e-05, 4.956899999999931e-05, 4.9707999999999e-05, 5.005500000000024e-05, 4.9707999999999e-05, 4.988899999999741e-05, 4.970800000000247e-05, 4.988899999999741e-05, 5.004200000000014e-05, 5.022200000000254e-05, 4.987500000000131e-05, 4.938900000000038e-05, 4.955599999999921e-05, 4.952800000000007e-05, 4.987499999999784e-05, 4.954199999999964e-05, 5.022200000000254e-05, 4.936099999999777e-05, 4.990300000000045e-05, 4.954100000000017e-05, 4.940299999999995e-05, 5.005500000000024e-05, 5.016700000000027e-05, 4.955599999999921e-05, 5.004200000000014e-05, 5.02079999999995e-05, 4.955600000000268e-05, 4.956999999999878e-05, 5.020899999999898e-05, 4.970899999999848e-05, 4.955599999999921e-05, 4.963900000000063e-05, 4.986099999999827e-05, 4.9709000000001946e-05, 5.022199999999907e-05, 4.937500000000081e-05, 4.93469999999982e-05, 4.972199999999857e-05, 4.958300000000235e-05, 4.967999999999986e-05, 4.956900000000278e-05, 5.004200000000014e-05, 4.988899999999741e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.584" endtime="20201110 08:38:08.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.579" endtime="20201110 08:38:08.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.589" endtime="20201110 08:38:08.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.593" endtime="20201110 08:38:08.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.591" endtime="20201110 08:38:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.588" endtime="20201110 08:38:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.219" endtime="20201110 08:38:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.218" endtime="20201110 08:38:08.614"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.622" endtime="20201110 08:38:08.640"></status>
</kw>
<msg timestamp="20201110 08:38:08.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.621" endtime="20201110 08:38:08.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.641" endtime="20201110 08:38:08.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.644" endtime="20201110 08:38:08.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.618" endtime="20201110 08:38:08.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.616" endtime="20201110 08:38:08.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.653" endtime="20201110 08:38:08.940"></status>
</kw>
<msg timestamp="20201110 08:38:08.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.651" endtime="20201110 08:38:08.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.944" endtime="20201110 08:38:08.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.952" endtime="20201110 08:38:08.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.649" endtime="20201110 08:38:08.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.647" endtime="20201110 08:38:08.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.959" level="INFO">${RESULT} = [{'time': 0.022741875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.095800000000025e-05, 'source_diff': 5.095800000000025e-05}, {'time': 0.022806875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.956" endtime="20201110 08:38:08.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.972" level="INFO">${ACCURACY} = {'diff': [5.095800000000025e-05, 5.122200000000007e-05, 5.119500000000041e-05, 5.070899999999948e-05, 5.082000000000003e-05, 5.105600000000071e-05, 5.104200000000114e-05, 5.0736999999998617e-05, 5.036...</msg>
<status status="PASS" starttime="20201110 08:38:08.960" endtime="20201110 08:38:08.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.977" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.976" endtime="20201110 08:38:08.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.979" level="INFO">VALUE: [5.095800000000025e-05, 5.122200000000007e-05, 5.119500000000041e-05, 5.070899999999948e-05, 5.082000000000003e-05, 5.105600000000071e-05, 5.104200000000114e-05, 5.0736999999998617e-05, 5.036099999999877e-05, 5.0723000000002516e-05, 5.034799999999867e-05, 5.105500000000124e-05, 5.088899999999841e-05, 5.122200000000007e-05, 5.088899999999841e-05, 5.123599999999964e-05, 5.12080000000005e-05, 5.088899999999841e-05, 5.052800000000107e-05, 5.088899999999841e-05, 5.038899999999791e-05, 5.050000000000193e-05, 5.087500000000231e-05, 5.088900000000188e-05, 5.0723000000002516e-05, 5.043000000000061e-05, 5.072200000000304e-05, 5.105600000000071e-05, 5.037500000000181e-05, 5.08469999999997e-05, 5.037499999999834e-05, 5.122200000000007e-05, 5.0708e-05, 5.122200000000007e-05, 5.106900000000081e-05, 5.074999999999871e-05, 5.088900000000188e-05, 5.090300000000145e-05, 5.036100000000224e-05, 5.122200000000007e-05, 5.037500000000181e-05, 5.072199999999957e-05, 5.122299999999955e-05, 5.059699999999945e-05, 5.036099999999877e-05, 5.056900000000031e-05, 5.06530000000012e-05, 5.052699999999813e-05, 5.072199999999957e-05, 5.056900000000031e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.978" endtime="20201110 08:38:08.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.973" endtime="20201110 08:38:08.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.983" endtime="20201110 08:38:08.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.987" endtime="20201110 08:38:09.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.985" endtime="20201110 08:38:09.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.981" endtime="20201110 08:38:09.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.614" endtime="20201110 08:38:09.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.614" endtime="20201110 08:38:09.008"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.016" endtime="20201110 08:38:09.033"></status>
</kw>
<msg timestamp="20201110 08:38:09.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.015" endtime="20201110 08:38:09.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.035" endtime="20201110 08:38:09.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.038" endtime="20201110 08:38:09.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.012" endtime="20201110 08:38:09.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.010" endtime="20201110 08:38:09.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.047" endtime="20201110 08:38:09.339"></status>
</kw>
<msg timestamp="20201110 08:38:09.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.045" endtime="20201110 08:38:09.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022412819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.343" endtime="20201110 08:38:09.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.351" endtime="20201110 08:38:09.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.042" endtime="20201110 08:38:09.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.041" endtime="20201110 08:38:09.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.358" level="INFO">${RESULT} = [{'time': 0.022412819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2165999999999324e-05, 'source_diff': 5.2165999999999324e-05}, {'time': 0.022468833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:09.355" endtime="20201110 08:38:09.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.371" level="INFO">${ACCURACY} = {'diff': [5.2165999999999324e-05, 5.137499999999934e-05, 5.2179999999998894e-05, 5.137499999999934e-05, 5.155599999999774e-05, 5.2221999999997604e-05, 5.219400000000193e-05, 5.176399999999928e-05, 5.1...</msg>
<status status="PASS" starttime="20201110 08:38:09.359" endtime="20201110 08:38:09.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.376" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.375" endtime="20201110 08:38:09.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.379" level="INFO">VALUE: [5.2165999999999324e-05, 5.137499999999934e-05, 5.2179999999998894e-05, 5.137499999999934e-05, 5.155599999999774e-05, 5.2221999999997604e-05, 5.219400000000193e-05, 5.176399999999928e-05, 5.187499999999984e-05, 5.155600000000121e-05, 5.159699999999698e-05, 5.138900000000238e-05, 5.170900000000048e-05, 5.155600000000121e-05, 5.138900000000238e-05, 5.187499999999984e-05, 5.156899999999784e-05, 5.1707999999997534e-05, 5.2014000000003e-05, 5.206999999999781e-05, 5.22080000000015e-05, 5.173600000000014e-05, 5.155599999999774e-05, 5.138899999999891e-05, 5.205599999999824e-05, 5.195800000000125e-05, 5.172200000000057e-05, 5.155600000000121e-05, 5.155600000000121e-05, 5.207000000000128e-05, 5.205599999999824e-05, 5.187499999999984e-05, 5.155599999999774e-05, 5.172300000000005e-05, 5.143000000000161e-05, 5.205499999999877e-05, 5.2221999999997604e-05, 5.173600000000014e-05, 5.202699999999963e-05, 5.205499999999877e-05, 5.194500000000116e-05, 5.1708000000001e-05, 5.20279999999991e-05, 5.138900000000238e-05, 5.154200000000164e-05, 5.205599999999824e-05, 5.187499999999984e-05, 5.170900000000048e-05, 5.188899999999941e-05, 5.220900000000098e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.377" endtime="20201110 08:38:09.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.372" endtime="20201110 08:38:09.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.382" endtime="20201110 08:38:09.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.386" endtime="20201110 08:38:09.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.384" endtime="20201110 08:38:09.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.380" endtime="20201110 08:38:09.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.008" endtime="20201110 08:38:09.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.008" endtime="20201110 08:38:09.406"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.415" endtime="20201110 08:38:09.433"></status>
</kw>
<msg timestamp="20201110 08:38:09.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.414" endtime="20201110 08:38:09.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.435" endtime="20201110 08:38:09.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.437" endtime="20201110 08:38:09.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.411" endtime="20201110 08:38:09.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.409" endtime="20201110 08:38:09.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.446" endtime="20201110 08:38:09.734"></status>
</kw>
<msg timestamp="20201110 08:38:09.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.445" endtime="20201110 08:38:09.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.738" endtime="20201110 08:38:09.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.746" endtime="20201110 08:38:09.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.442" endtime="20201110 08:38:09.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.441" endtime="20201110 08:38:09.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.753" level="INFO">${RESULT} = [{'time': 0.022522236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000000046e-05, 'source_diff': 5.250000000000046e-05}, {'time': 0.022587222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:09.750" endtime="20201110 08:38:09.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.767" level="INFO">${ACCURACY} = {'diff': [5.250000000000046e-05, 5.3179999999999894e-05, 5.3207999999999034e-05, 5.240299999999948e-05, 5.287500000000084e-05, 5.243099999999862e-05, 5.304199999999967e-05, 5.3221999999998604e-05, 5.2...</msg>
<status status="PASS" starttime="20201110 08:38:09.754" endtime="20201110 08:38:09.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.771" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.770" endtime="20201110 08:38:09.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.774" level="INFO">VALUE: [5.250000000000046e-05, 5.3179999999999894e-05, 5.3207999999999034e-05, 5.240299999999948e-05, 5.287500000000084e-05, 5.243099999999862e-05, 5.304199999999967e-05, 5.3221999999998604e-05, 5.254199999999917e-05, 5.288900000000041e-05, 5.318099999999937e-05, 5.322299999999808e-05, 5.236200000000024e-05, 5.273600000000114e-05, 5.237500000000034e-05, 5.268100000000234e-05, 5.293099999999912e-05, 5.2708000000002e-05, 5.3193999999999464e-05, 5.256899999999884e-05, 5.305599999999924e-05, 5.311200000000099e-05, 5.233299999999816e-05, 5.237500000000034e-05, 5.237500000000034e-05, 5.254199999999917e-05, 5.304199999999967e-05, 5.306999999999881e-05, 5.272299999999758e-05, 5.327800000000035e-05, 5.320899999999851e-05, 5.28609999999978e-05, 5.287500000000084e-05, 5.25409999999997e-05, 5.304099999999673e-05, 5.305499999999977e-05, 5.269400000000243e-05, 5.3221999999998604e-05, 5.237500000000034e-05, 5.2707999999998534e-05, 5.254200000000264e-05, 5.2721999999998104e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.320899999999851e-05, 5.273700000000062e-05, 5.304199999999967e-05, 5.3207999999999034e-05, 5.254199999999917e-05, 5.252700000000013e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.772" endtime="20201110 08:38:09.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.767" endtime="20201110 08:38:09.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.778" endtime="20201110 08:38:09.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.782" endtime="20201110 08:38:09.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.780" endtime="20201110 08:38:09.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.776" endtime="20201110 08:38:09.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.407" endtime="20201110 08:38:09.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.407" endtime="20201110 08:38:09.802"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.811" endtime="20201110 08:38:09.829"></status>
</kw>
<msg timestamp="20201110 08:38:09.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.810" endtime="20201110 08:38:09.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.830" endtime="20201110 08:38:09.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.833" endtime="20201110 08:38:09.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.807" endtime="20201110 08:38:09.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.805" endtime="20201110 08:38:09.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.842" endtime="20201110 08:38:10.129"></status>
</kw>
<msg timestamp="20201110 08:38:10.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.841" endtime="20201110 08:38:10.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022244403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.133" endtime="20201110 08:38:10.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.142" endtime="20201110 08:38:10.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.838" endtime="20201110 08:38:10.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.836" endtime="20201110 08:38:10.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.148" level="INFO">${RESULT} = [{'time': 0.022298069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3666000000000824e-05, 'source_diff': 5.3666000000000824e-05}, {'time': 0.022359069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:10.145" endtime="20201110 08:38:10.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.162" level="INFO">${ACCURACY} = {'diff': [5.3666000000000824e-05, 5.3707999999999534e-05, 5.404099999999773e-05, 5.354099999999723e-05, 5.390300000000098e-05, 5.4027999999997633e-05, 5.4221999999999604e-05, 5.3527999999997133e-05, 5...</msg>
<status status="PASS" starttime="20201110 08:38:10.149" endtime="20201110 08:38:10.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.166" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.165" endtime="20201110 08:38:10.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.168" level="INFO">VALUE: [5.3666000000000824e-05, 5.3707999999999534e-05, 5.404099999999773e-05, 5.354099999999723e-05, 5.390300000000098e-05, 5.4027999999997633e-05, 5.4221999999999604e-05, 5.3527999999997133e-05, 5.425000000000221e-05, 5.404200000000067e-05, 5.411100000000252e-05, 5.3707999999999534e-05, 5.338900000000091e-05, 5.35280000000006e-05, 5.337499999999787e-05, 5.372300000000205e-05, 5.422299999999908e-05, 5.365299999999726e-05, 5.3707999999999534e-05, 5.3499999999997994e-05, 5.35410000000007e-05, 5.338899999999744e-05, 5.35410000000007e-05, 5.4027999999997633e-05, 5.390300000000098e-05, 5.4263999999998314e-05, 5.40419999999972e-05, 5.388900000000141e-05, 5.388900000000141e-05, 5.406999999999981e-05, 5.337499999999787e-05, 5.338900000000091e-05, 5.388899999999794e-05, 5.3388000000001434e-05, 5.404200000000067e-05, 5.390299999999751e-05, 5.4180000000000894e-05, 5.338899999999744e-05, 5.35410000000007e-05, 5.4221999999999604e-05, 5.4027999999997633e-05, 5.3721999999999104e-05, 5.4208000000000034e-05, 5.355599999999974e-05, 5.388900000000141e-05, 5.404200000000067e-05, 5.354200000000017e-05, 5.420899999999951e-05, 5.35280000000006e-05, 5.338900000000091e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.167" endtime="20201110 08:38:10.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.162" endtime="20201110 08:38:10.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.172" endtime="20201110 08:38:10.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.175" endtime="20201110 08:38:10.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.174" endtime="20201110 08:38:10.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.170" endtime="20201110 08:38:10.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.803" endtime="20201110 08:38:10.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.803" endtime="20201110 08:38:10.200"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.216" endtime="20201110 08:38:10.233"></status>
</kw>
<msg timestamp="20201110 08:38:10.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.214" endtime="20201110 08:38:10.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.234" endtime="20201110 08:38:10.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.237" endtime="20201110 08:38:10.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.209" endtime="20201110 08:38:10.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.206" endtime="20201110 08:38:10.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.246" endtime="20201110 08:38:10.548"></status>
</kw>
<msg timestamp="20201110 08:38:10.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033598458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.245" endtime="20201110 08:38:10.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033598458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.558" endtime="20201110 08:38:10.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.576" endtime="20201110 08:38:10.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.242" endtime="20201110 08:38:10.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.240" endtime="20201110 08:38:10.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.582" level="INFO">${RESULT} = [{'time': 0.033598458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4513999999998564e-05, 'source_diff': 5.4513999999998564e-05}, {'time': 0.033658458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:10.579" endtime="20201110 08:38:10.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.596" level="INFO">${ACCURACY} = {'diff': [5.4513999999998564e-05, 5.454100000000517e-05, 5.506899999999787e-05, 5.487500000000284e-05, 5.4527999999998134e-05, 5.454200000000464e-05, 5.488900000000241e-05, 5.5041999999998203e-05, 5.5...</msg>
<status status="PASS" starttime="20201110 08:38:10.583" endtime="20201110 08:38:10.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.600" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.599" endtime="20201110 08:38:10.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.603" level="INFO">VALUE: [5.4513999999998564e-05, 5.454100000000517e-05, 5.506899999999787e-05, 5.487500000000284e-05, 5.4527999999998134e-05, 5.454200000000464e-05, 5.488900000000241e-05, 5.5041999999998203e-05, 5.505600000000471e-05, 5.4722000000000104e-05, 5.48749999999959e-05, 5.504200000000514e-05, 5.488900000000241e-05, 5.4722000000000104e-05, 5.48619999999958e-05, 5.5222000000000604e-05, 5.512500000000309e-05, 5.4722000000000104e-05, 5.437500000000234e-05, 5.488899999999547e-05, 5.4527999999998134e-05, 5.5193999999994525e-05, 5.5208000000001034e-05, 5.437500000000234e-05, 5.456999999999684e-05, 5.470900000000001e-05, 5.504200000000514e-05, 5.519500000000094e-05, 5.522300000000008e-05, 5.519500000000094e-05, 5.522300000000008e-05, 5.470900000000001e-05, 5.5221999999993665e-05, 5.5208000000001034e-05, 5.4722000000000104e-05, 5.5208000000001034e-05, 5.455500000000474e-05, 5.4722000000000104e-05, 5.515300000000223e-05, 5.454200000000464e-05, 5.4527999999998134e-05, 5.437500000000234e-05, 5.48749999999959e-05, 5.5236000000000174e-05, 5.436100000000277e-05, 5.45140000000055e-05, 5.470900000000001e-05, 5.4722000000000104e-05, 5.504099999999873e-05, 5.4708000000000534e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.601" endtime="20201110 08:38:10.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.597" endtime="20201110 08:38:10.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.613" endtime="20201110 08:38:10.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.616" endtime="20201110 08:38:10.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.615" endtime="20201110 08:38:10.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.611" endtime="20201110 08:38:10.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.204" endtime="20201110 08:38:10.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.202" endtime="20201110 08:38:10.637"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.646" endtime="20201110 08:38:10.663"></status>
</kw>
<msg timestamp="20201110 08:38:10.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.644" endtime="20201110 08:38:10.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.665" endtime="20201110 08:38:10.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.667" endtime="20201110 08:38:10.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.642" endtime="20201110 08:38:10.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.640" endtime="20201110 08:38:10.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.676" endtime="20201110 08:38:10.964"></status>
</kw>
<msg timestamp="20201110 08:38:10.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.675" endtime="20201110 08:38:10.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022662222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.969" endtime="20201110 08:38:10.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.977" endtime="20201110 08:38:10.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.672" endtime="20201110 08:38:10.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.670" endtime="20201110 08:38:10.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.984" level="INFO">${RESULT} = [{'time': 0.022718389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.616699999999933e-05, 'source_diff': 5.616699999999933e-05}, {'time': 0.022779417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:10.980" endtime="20201110 08:38:10.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.997" level="INFO">${ACCURACY} = {'diff': [5.616699999999933e-05, 5.557000000000131e-05, 5.622299999999761e-05, 5.588899999999994e-05, 5.537499999999987e-05, 5.561100000000055e-05, 5.6041999999999204e-05, 5.5401999999999535e-05, 5.55...</msg>
<status status="PASS" starttime="20201110 08:38:10.985" endtime="20201110 08:38:10.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.002" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.001" endtime="20201110 08:38:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.004" level="INFO">VALUE: [5.616699999999933e-05, 5.557000000000131e-05, 5.622299999999761e-05, 5.588899999999994e-05, 5.537499999999987e-05, 5.561100000000055e-05, 5.6041999999999204e-05, 5.5401999999999535e-05, 5.55549999999988e-05, 5.606899999999887e-05, 5.558299999999794e-05, 5.537499999999987e-05, 5.5721999999997635e-05, 5.537499999999987e-05, 5.587500000000037e-05, 5.588899999999994e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.604200000000267e-05, 5.5527999999999134e-05, 5.58610000000008e-05, 5.570900000000101e-05, 5.5888000000000465e-05, 5.620900000000151e-05, 5.5888000000000465e-05, 5.537499999999987e-05, 5.6221999999998135e-05, 5.5680000000002394e-05, 5.5721999999997635e-05, 5.53610000000003e-05, 5.534700000000073e-05, 5.583300000000166e-05, 5.53610000000003e-05, 5.588899999999994e-05, 5.555600000000174e-05, 5.588899999999994e-05, 5.6041999999999204e-05, 5.588899999999994e-05, 5.537499999999987e-05, 5.556899999999837e-05, 5.551300000000009e-05, 5.6207999999998565e-05, 5.6222000000001604e-05, 5.58610000000008e-05, 5.605500000000277e-05, 5.5721999999997635e-05, 5.5958000000001784e-05, 5.5472000000000854e-05, 5.540299999999901e-05, 5.5986000000000924e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.003" endtime="20201110 08:38:11.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.998" endtime="20201110 08:38:11.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.008" endtime="20201110 08:38:11.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.011" endtime="20201110 08:38:11.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.010" endtime="20201110 08:38:11.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.006" endtime="20201110 08:38:11.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.638" endtime="20201110 08:38:11.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.637" endtime="20201110 08:38:11.032"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.041" endtime="20201110 08:38:11.058"></status>
</kw>
<msg timestamp="20201110 08:38:11.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.039" endtime="20201110 08:38:11.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.060" endtime="20201110 08:38:11.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.062" endtime="20201110 08:38:11.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.037" endtime="20201110 08:38:11.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.035" endtime="20201110 08:38:11.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.071" endtime="20201110 08:38:11.360"></status>
</kw>
<msg timestamp="20201110 08:38:11.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.070" endtime="20201110 08:38:11.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.364" endtime="20201110 08:38:11.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.373" endtime="20201110 08:38:11.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.067" endtime="20201110 08:38:11.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.066" endtime="20201110 08:38:11.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.380" level="INFO">${RESULT} = [{'time': 0.022478611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7013999999997594e-05, 'source_diff': 5.7013999999997594e-05}, {'time': 0.022549611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:11.376" endtime="20201110 08:38:11.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.393" level="INFO">${ACCURACY} = {'diff': [5.7013999999997594e-05, 5.637500000000087e-05, 5.633299999999869e-05, 5.6693999999999495e-05, 5.662499999999765e-05, 5.690300000000051e-05, 5.688899999999747e-05, 5.68749999999979e-05, 5.688...</msg>
<status status="PASS" starttime="20201110 08:38:11.381" endtime="20201110 08:38:11.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.398" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.397" endtime="20201110 08:38:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.400" level="INFO">VALUE: [5.7013999999997594e-05, 5.637500000000087e-05, 5.633299999999869e-05, 5.6693999999999495e-05, 5.662499999999765e-05, 5.690300000000051e-05, 5.688899999999747e-05, 5.68749999999979e-05, 5.688900000000094e-05, 5.655600000000274e-05, 5.6916000000000605e-05, 5.7221999999999135e-05, 5.654100000000023e-05, 5.7221999999999135e-05, 5.6721999999998635e-05, 5.7207999999999565e-05, 5.690300000000051e-05, 5.7277999999997414e-05, 5.6707999999999065e-05, 5.637500000000087e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.687500000000137e-05, 5.657000000000231e-05, 5.687500000000137e-05, 5.6541999999999704e-05, 5.638900000000044e-05, 5.686099999999833e-05, 5.654100000000023e-05, 5.7222000000002604e-05, 5.65549999999998e-05, 5.654100000000023e-05, 5.70550000000003e-05, 5.6679999999999925e-05, 5.709699999999901e-05, 5.691700000000008e-05, 5.7055999999999774e-05, 5.6707999999999065e-05, 5.7236000000002174e-05, 5.688900000000094e-05, 5.687500000000137e-05, 5.670899999999854e-05, 5.68749999999979e-05, 5.6902000000001035e-05, 5.6901999999997566e-05, 5.6402000000000535e-05, 5.704100000000073e-05, 5.65549999999998e-05, 5.7193999999999995e-05, 5.65549999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.399" endtime="20201110 08:38:11.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.394" endtime="20201110 08:38:11.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.404" endtime="20201110 08:38:11.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.407" endtime="20201110 08:38:11.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.406" endtime="20201110 08:38:11.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.402" endtime="20201110 08:38:11.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.033" endtime="20201110 08:38:11.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.033" endtime="20201110 08:38:11.428"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.437" endtime="20201110 08:38:11.455"></status>
</kw>
<msg timestamp="20201110 08:38:11.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.435" endtime="20201110 08:38:11.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.456" endtime="20201110 08:38:11.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.459" endtime="20201110 08:38:11.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.433" endtime="20201110 08:38:11.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.430" endtime="20201110 08:38:11.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.468" endtime="20201110 08:38:11.755"></status>
</kw>
<msg timestamp="20201110 08:38:11.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.466" endtime="20201110 08:38:11.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.760" endtime="20201110 08:38:11.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.768" endtime="20201110 08:38:11.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.464" endtime="20201110 08:38:11.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.462" endtime="20201110 08:38:11.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.775" level="INFO">${RESULT} = [{'time': 0.022257653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.811099999999958e-05, 'source_diff': 5.811099999999958e-05}, {'time': 0.022329681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.771" endtime="20201110 08:38:11.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.788" level="INFO">${ACCURACY} = {'diff': [5.811099999999958e-05, 5.8056000000000774e-05, 5.8056000000000774e-05, 5.820900000000004e-05, 5.75550000000008e-05, 5.7694000000000495e-05, 5.755499999999733e-05, 5.73749999999984e-05, 5.738...</msg>
<status status="PASS" starttime="20201110 08:38:11.776" endtime="20201110 08:38:11.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.793" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.792" endtime="20201110 08:38:11.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.796" level="INFO">VALUE: [5.811099999999958e-05, 5.8056000000000774e-05, 5.8056000000000774e-05, 5.820900000000004e-05, 5.75550000000008e-05, 5.7694000000000495e-05, 5.755499999999733e-05, 5.73749999999984e-05, 5.738900000000144e-05, 5.790300000000151e-05, 5.788900000000194e-05, 5.787500000000237e-05, 5.8235999999999705e-05, 5.7306000000000024e-05, 5.790300000000151e-05, 5.815299999999829e-05, 5.786099999999933e-05, 5.788899999999847e-05, 5.7319999999999593e-05, 5.80550000000013e-05, 5.8042000000001204e-05, 5.7388000000001965e-05, 5.738900000000144e-05, 5.7735999999999205e-05, 5.73749999999984e-05, 5.805499999999783e-05, 5.75550000000008e-05, 5.8208000000000565e-05, 5.7721999999999635e-05, 5.7527999999997664e-05, 5.815300000000176e-05, 5.7721999999999635e-05, 5.8070000000000344e-05, 5.7930000000001175e-05, 5.7542000000000704e-05, 5.770899999999954e-05, 5.73619999999983e-05, 5.7388000000001965e-05, 5.804100000000173e-05, 5.756900000000037e-05, 5.78749999999989e-05, 5.8222000000000135e-05, 5.736099999999883e-05, 5.731900000000012e-05, 5.8222000000000135e-05, 5.7500000000001994e-05, 5.7556000000000274e-05, 5.786099999999933e-05, 5.737500000000187e-05, 5.820900000000004e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.794" endtime="20201110 08:38:11.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.789" endtime="20201110 08:38:11.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.799" endtime="20201110 08:38:11.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.803" endtime="20201110 08:38:11.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.801" endtime="20201110 08:38:11.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.798" endtime="20201110 08:38:11.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.429" endtime="20201110 08:38:11.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.428" endtime="20201110 08:38:11.824"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.832" endtime="20201110 08:38:11.849"></status>
</kw>
<msg timestamp="20201110 08:38:11.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.831" endtime="20201110 08:38:11.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.850" endtime="20201110 08:38:11.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.853" endtime="20201110 08:38:11.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.828" endtime="20201110 08:38:11.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.826" endtime="20201110 08:38:11.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.862" endtime="20201110 08:38:12.149"></status>
</kw>
<msg timestamp="20201110 08:38:12.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.860" endtime="20201110 08:38:12.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022214653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.153" endtime="20201110 08:38:12.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.161" endtime="20201110 08:38:12.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.858" endtime="20201110 08:38:12.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.856" endtime="20201110 08:38:12.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.168" level="INFO">${RESULT} = [{'time': 0.022273861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9207999999998095e-05, 'source_diff': 5.9207999999998095e-05}, {'time': 0.022343833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:12.165" endtime="20201110 08:38:12.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.182" level="INFO">${ACCURACY} = {'diff': [5.9207999999998095e-05, 5.8722000000000635e-05, 5.888899999999947e-05, 5.8693999999998026e-05, 5.9193999999998526e-05, 5.8680000000001925e-05, 5.877699999999944e-05, 5.9236000000000705e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:12.169" endtime="20201110 08:38:12.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.186" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.185" endtime="20201110 08:38:12.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.189" level="INFO">VALUE: [5.9207999999998095e-05, 5.8722000000000635e-05, 5.888899999999947e-05, 5.8693999999998026e-05, 5.9193999999998526e-05, 5.8680000000001925e-05, 5.877699999999944e-05, 5.9236000000000705e-05, 5.9207999999998095e-05, 5.866699999999836e-05, 5.888899999999947e-05, 5.9194999999998e-05, 5.838900000000244e-05, 5.920900000000104e-05, 5.9056000000001774e-05, 5.833299999999722e-05, 5.861100000000008e-05, 5.8722000000000635e-05, 5.85550000000018e-05, 5.9208000000001565e-05, 5.9208000000001565e-05, 5.9041999999998734e-05, 5.8736000000000205e-05, 5.9041999999998734e-05, 5.868099999999793e-05, 5.9027999999999164e-05, 5.8541999999998234e-05, 5.920899999999757e-05, 5.920899999999757e-05, 5.872300000000011e-05, 5.920900000000104e-05, 5.855499999999833e-05, 5.85550000000018e-05, 5.906900000000187e-05, 5.888899999999947e-05, 5.8485999999999955e-05, 5.90689999999984e-05, 5.890299999999904e-05, 5.890299999999904e-05, 5.8528000000002134e-05, 5.9236000000000705e-05, 5.8542000000001704e-05, 5.83749999999994e-05, 5.845900000000029e-05, 5.83749999999994e-05, 5.872300000000011e-05, 5.8542000000001704e-05, 5.905499999999883e-05, 5.854100000000223e-05, 5.9000000000000025e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.187" endtime="20201110 08:38:12.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.182" endtime="20201110 08:38:12.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.192" endtime="20201110 08:38:12.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.196" endtime="20201110 08:38:12.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.194" endtime="20201110 08:38:12.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.191" endtime="20201110 08:38:12.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.824" endtime="20201110 08:38:12.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.824" endtime="20201110 08:38:12.217"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.225" endtime="20201110 08:38:12.242"></status>
</kw>
<msg timestamp="20201110 08:38:12.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.224" endtime="20201110 08:38:12.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.244" endtime="20201110 08:38:12.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.246" endtime="20201110 08:38:12.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.221" endtime="20201110 08:38:12.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.219" endtime="20201110 08:38:12.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.255" endtime="20201110 08:38:12.543"></status>
</kw>
<msg timestamp="20201110 08:38:12.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.254" endtime="20201110 08:38:12.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022282528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.547" endtime="20201110 08:38:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.556" endtime="20201110 08:38:12.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.251" endtime="20201110 08:38:12.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.250" endtime="20201110 08:38:12.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.562" level="INFO">${RESULT} = [{'time': 0.022342694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0166000000000386e-05, 'source_diff': 6.0166000000000386e-05}, {'time': 0.022412708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:12.559" endtime="20201110 08:38:12.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.576" level="INFO">${ACCURACY} = {'diff': [6.0166000000000386e-05, 5.988900000000047e-05, 5.9708000000002065e-05, 5.988900000000047e-05, 5.93750000000004e-05, 5.9541999999999234e-05, 5.988900000000047e-05, 5.938899999999997e-05, 5.97...</msg>
<status status="PASS" starttime="20201110 08:38:12.563" endtime="20201110 08:38:12.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.580" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.579" endtime="20201110 08:38:12.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.583" level="INFO">VALUE: [6.0166000000000386e-05, 5.988900000000047e-05, 5.9708000000002065e-05, 5.988900000000047e-05, 5.93750000000004e-05, 5.9541999999999234e-05, 5.988900000000047e-05, 5.938899999999997e-05, 5.9750000000000775e-05, 5.9707999999998596e-05, 5.938899999999997e-05, 6.0056000000002774e-05, 5.970900000000154e-05, 6.00689999999994e-05, 6.0028000000000165e-05, 6.00689999999994e-05, 5.93750000000004e-05, 6.0236000000001705e-05, 5.95689999999989e-05, 5.93750000000004e-05, 6.012500000000115e-05, 6.0207999999999096e-05, 6.0207999999999096e-05, 6.0041999999999734e-05, 6.016700000000333e-05, 5.98750000000009e-05, 5.9541999999999234e-05, 5.9541999999999234e-05, 5.9527999999999665e-05, 6.022300000000161e-05, 5.93750000000004e-05, 5.9721999999998165e-05, 5.955499999999933e-05, 5.930499999999908e-05, 5.98750000000009e-05, 5.93750000000004e-05, 6.0221999999998665e-05, 6.0207999999999096e-05, 5.936100000000083e-05, 6.015299999999682e-05, 5.98750000000009e-05, 5.9555999999998804e-05, 5.9542000000002704e-05, 5.9820000000002094e-05, 6.0028000000000165e-05, 5.9665999999999886e-05, 6.0221999999998665e-05, 6.002700000000069e-05, 5.938899999999997e-05, 5.983299999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.581" endtime="20201110 08:38:12.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.577" endtime="20201110 08:38:12.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.586" endtime="20201110 08:38:12.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.590" endtime="20201110 08:38:12.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.588" endtime="20201110 08:38:12.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.585" endtime="20201110 08:38:12.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.218" endtime="20201110 08:38:12.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.217" endtime="20201110 08:38:12.611"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.623" endtime="20201110 08:38:12.642"></status>
</kw>
<msg timestamp="20201110 08:38:12.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.621" endtime="20201110 08:38:12.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.644" endtime="20201110 08:38:12.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.650" endtime="20201110 08:38:12.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.616" endtime="20201110 08:38:12.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.613" endtime="20201110 08:38:12.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.659" endtime="20201110 08:38:12.945"></status>
</kw>
<msg timestamp="20201110 08:38:12.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026542069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026602736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.658" endtime="20201110 08:38:12.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026542069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026602736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.950" endtime="20201110 08:38:12.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.958" endtime="20201110 08:38:12.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.655" endtime="20201110 08:38:12.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.653" endtime="20201110 08:38:12.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.965" level="INFO">${RESULT} = [{'time': 0.026602736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.066699999999689e-05, 'source_diff': 6.066699999999689e-05}, {'time': 0.02666975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:12.961" endtime="20201110 08:38:12.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.978" level="INFO">${ACCURACY} = {'diff': [6.066699999999689e-05, 6.10560000000003e-05, 6.0707999999999596e-05, 6.0457999999999346e-05, 6.0555999999999804e-05, 6.038900000000097e-05, 6.059699999999904e-05, 6.10560000000003e-05, 6.122...</msg>
<status status="PASS" starttime="20201110 08:38:12.966" endtime="20201110 08:38:12.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.983" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.982" endtime="20201110 08:38:12.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.985" level="INFO">VALUE: [6.066699999999689e-05, 6.10560000000003e-05, 6.0707999999999596e-05, 6.0457999999999346e-05, 6.0555999999999804e-05, 6.038900000000097e-05, 6.059699999999904e-05, 6.10560000000003e-05, 6.122299999999914e-05, 6.105499999999736e-05, 6.119400000000053e-05, 6.08750000000019e-05, 6.03750000000014e-05, 6.088900000000147e-05, 6.055500000000033e-05, 6.0555999999999804e-05, 6.0750000000001775e-05, 6.1014000000001595e-05, 6.038900000000097e-05, 6.0542000000000235e-05, 6.091700000000061e-05, 6.0542000000000235e-05, 6.1027999999997695e-05, 6.104100000000126e-05, 6.086099999999886e-05, 6.122199999999967e-05, 6.03750000000014e-05, 6.104100000000126e-05, 6.038900000000097e-05, 6.1028000000001165e-05, 6.091700000000061e-05, 6.038900000000097e-05, 6.122199999999967e-05, 6.086099999999886e-05, 6.122199999999967e-05, 6.0555999999999804e-05, 6.070900000000254e-05, 6.106999999999987e-05, 6.0888999999998e-05, 6.038900000000097e-05, 6.088900000000147e-05, 6.041700000000011e-05, 6.055500000000033e-05, 6.03750000000014e-05, 6.038900000000097e-05, 6.083300000000319e-05, 6.0569999999999374e-05, 6.087499999999843e-05, 6.0528000000000665e-05, 6.091700000000061e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.984" endtime="20201110 08:38:12.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.979" endtime="20201110 08:38:12.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.989" endtime="20201110 08:38:12.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.992" endtime="20201110 08:38:13.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.991" endtime="20201110 08:38:13.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.987" endtime="20201110 08:38:13.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.611" endtime="20201110 08:38:13.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.611" endtime="20201110 08:38:13.013"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.022" endtime="20201110 08:38:13.039"></status>
</kw>
<msg timestamp="20201110 08:38:13.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.020" endtime="20201110 08:38:13.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.040" endtime="20201110 08:38:13.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.043" endtime="20201110 08:38:13.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.018" endtime="20201110 08:38:13.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.016" endtime="20201110 08:38:13.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.052" endtime="20201110 08:38:13.339"></status>
</kw>
<msg timestamp="20201110 08:38:13.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.051" endtime="20201110 08:38:13.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.344" endtime="20201110 08:38:13.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.352" endtime="20201110 08:38:13.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.048" endtime="20201110 08:38:13.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.046" endtime="20201110 08:38:13.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.359" level="INFO">${RESULT} = [{'time': 0.022353486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167999999999799e-05, 'source_diff': 6.167999999999799e-05}, {'time': 0.022426486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.356" endtime="20201110 08:38:13.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.372" level="INFO">${ACCURACY} = {'diff': [6.167999999999799e-05, 6.136099999999936e-05, 6.140299999999807e-05, 6.219400000000153e-05, 6.154199999999777e-05, 6.155599999999734e-05, 6.170900000000007e-05, 6.17499999999993e-05, 6.15139...</msg>
<status status="PASS" starttime="20201110 08:38:13.360" endtime="20201110 08:38:13.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.377" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.376" endtime="20201110 08:38:13.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.379" level="INFO">VALUE: [6.167999999999799e-05, 6.136099999999936e-05, 6.140299999999807e-05, 6.219400000000153e-05, 6.154199999999777e-05, 6.155599999999734e-05, 6.170900000000007e-05, 6.17499999999993e-05, 6.151399999999863e-05, 6.170900000000007e-05, 6.188900000000247e-05, 6.13750000000024e-05, 6.13750000000024e-05, 6.204100000000226e-05, 6.22219999999972e-05, 6.202800000000216e-05, 6.219400000000153e-05, 6.13750000000024e-05, 6.2195000000001e-05, 6.20560000000013e-05, 6.154200000000123e-05, 6.170900000000007e-05, 6.147199999999992e-05, 6.218099999999796e-05, 6.141599999999817e-05, 6.19300000000017e-05, 6.205499999999836e-05, 6.187499999999943e-05, 6.204100000000226e-05, 6.190300000000204e-05, 6.202800000000216e-05, 6.15560000000008e-05, 6.140300000000154e-05, 6.188900000000247e-05, 6.222200000000067e-05, 6.207000000000087e-05, 6.13889999999985e-05, 6.2195000000001e-05, 6.222300000000014e-05, 6.13750000000024e-05, 6.137499999999893e-05, 6.155500000000133e-05, 6.226399999999938e-05, 6.187499999999943e-05, 6.152800000000166e-05, 6.206899999999793e-05, 6.186099999999986e-05, 6.173599999999974e-05, 6.188900000000247e-05, 6.154200000000123e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.378" endtime="20201110 08:38:13.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.373" endtime="20201110 08:38:13.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.383" endtime="20201110 08:38:13.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.387" endtime="20201110 08:38:13.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.385" endtime="20201110 08:38:13.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.381" endtime="20201110 08:38:13.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.014" endtime="20201110 08:38:13.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.014" endtime="20201110 08:38:13.408"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.416" endtime="20201110 08:38:13.433"></status>
</kw>
<msg timestamp="20201110 08:38:13.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.415" endtime="20201110 08:38:13.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.435" endtime="20201110 08:38:13.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.437" endtime="20201110 08:38:13.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.412" endtime="20201110 08:38:13.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.410" endtime="20201110 08:38:13.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.446" endtime="20201110 08:38:13.733"></status>
</kw>
<msg timestamp="20201110 08:38:13.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:13.445" endtime="20201110 08:38:13.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022287278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:13.737" endtime="20201110 08:38:13.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.745" endtime="20201110 08:38:13.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.442" endtime="20201110 08:38:13.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.440" endtime="20201110 08:38:13.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.752" level="INFO">${RESULT} = [{'time': 0.0223505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.32219999999982e-05, 'source_diff': 6.32219999999982e-05}, {'time': 0.022424472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201110 08:38:13.749" endtime="20201110 08:38:13.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.765" level="INFO">${ACCURACY} = {'diff': [6.32219999999982e-05, 6.2889e-05, 6.2889e-05, 6.304199999999927e-05, 6.255499999999886e-05, 6.267999999999899e-05, 6.254199999999877e-05, 6.251399999999963e-05, 6.323600000000124e-05, 6.3069...</msg>
<status status="PASS" starttime="20201110 08:38:13.753" endtime="20201110 08:38:13.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.770" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.769" endtime="20201110 08:38:13.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.772" level="INFO">VALUE: [6.32219999999982e-05, 6.2889e-05, 6.2889e-05, 6.304199999999927e-05, 6.255499999999886e-05, 6.267999999999899e-05, 6.254199999999877e-05, 6.251399999999963e-05, 6.323600000000124e-05, 6.30699999999984e-05, 6.32089999999981e-05, 6.304199999999927e-05, 6.255599999999834e-05, 6.304200000000273e-05, 6.255500000000233e-05, 6.269399999999856e-05, 6.262500000000018e-05, 6.254099999999929e-05, 6.237499999999993e-05, 6.291699999999914e-05, 6.320799999999863e-05, 6.27219999999977e-05, 6.32219999999982e-05, 6.237499999999993e-05, 6.29300000000027e-05, 6.26950000000015e-05, 6.270900000000107e-05, 6.320900000000157e-05, 6.287500000000043e-05, 6.23889999999995e-05, 6.284700000000129e-05, 6.30690000000024e-05, 6.284700000000129e-05, 6.270799999999813e-05, 6.287500000000043e-05, 6.23889999999995e-05, 6.291699999999914e-05, 6.304199999999927e-05, 6.232000000000112e-05, 6.240299999999907e-05, 6.30560000000023e-05, 6.273700000000021e-05, 6.32089999999981e-05, 6.295800000000185e-05, 6.265300000000279e-05, 6.252699999999972e-05, 6.27219999999977e-05, 6.295800000000185e-05, 6.32219999999982e-05, 6.320799999999863e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.771" endtime="20201110 08:38:13.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.766" endtime="20201110 08:38:13.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.776" endtime="20201110 08:38:13.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.780" endtime="20201110 08:38:13.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.778" endtime="20201110 08:38:13.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.774" endtime="20201110 08:38:13.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.408" endtime="20201110 08:38:13.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.408" endtime="20201110 08:38:13.800"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.809" endtime="20201110 08:38:13.828"></status>
</kw>
<msg timestamp="20201110 08:38:13.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.808" endtime="20201110 08:38:13.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.829" endtime="20201110 08:38:13.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.832" endtime="20201110 08:38:13.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.805" endtime="20201110 08:38:13.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.803" endtime="20201110 08:38:13.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.841" endtime="20201110 08:38:14.128"></status>
</kw>
<msg timestamp="20201110 08:38:14.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.839" endtime="20201110 08:38:14.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022653097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022716597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.133" endtime="20201110 08:38:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.141" endtime="20201110 08:38:14.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.837" endtime="20201110 08:38:14.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.835" endtime="20201110 08:38:14.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.148" level="INFO">${RESULT} = [{'time': 0.022716597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.350000000000106e-05, 'source_diff': 6.350000000000106e-05}, {'time': 0.022787625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.144" endtime="20201110 08:38:14.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.161" level="INFO">${ACCURACY} = {'diff': [6.350000000000106e-05, 6.340300000000007e-05, 6.370799999999913e-05, 6.35280000000002e-05, 6.337500000000093e-05, 6.35699999999989e-05, 6.340300000000007e-05, 6.4195000000003e-05, 6.42090000...</msg>
<status status="PASS" starttime="20201110 08:38:14.149" endtime="20201110 08:38:14.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.166" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.165" endtime="20201110 08:38:14.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.168" level="INFO">VALUE: [6.350000000000106e-05, 6.340300000000007e-05, 6.370799999999913e-05, 6.35280000000002e-05, 6.337500000000093e-05, 6.35699999999989e-05, 6.340300000000007e-05, 6.4195000000003e-05, 6.420900000000257e-05, 6.33890000000005e-05, 6.42089999999991e-05, 6.42089999999991e-05, 6.406899999999993e-05, 6.370799999999913e-05, 6.412499999999821e-05, 6.420799999999963e-05, 6.420799999999963e-05, 6.372200000000217e-05, 6.354199999999977e-05, 6.418099999999996e-05, 6.40699999999994e-05, 6.404200000000027e-05, 6.404200000000027e-05, 6.42089999999991e-05, 6.387500000000143e-05, 6.356899999999943e-05, 6.418099999999996e-05, 6.388799999999806e-05, 6.372200000000217e-05, 6.386100000000186e-05, 6.418000000000049e-05, 6.35280000000002e-05, 6.33890000000005e-05, 6.37219999999987e-05, 6.423600000000224e-05, 6.386099999999839e-05, 6.356899999999943e-05, 6.34439999999993e-05, 6.390300000000057e-05, 6.420900000000257e-05, 6.391600000000067e-05, 6.424999999999834e-05, 6.39020000000011e-05, 6.37080000000026e-05, 6.373599999999827e-05, 6.337500000000093e-05, 6.355499999999986e-05, 6.406899999999993e-05, 6.336099999999789e-05, 6.37219999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.167" endtime="20201110 08:38:14.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.162" endtime="20201110 08:38:14.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.172" endtime="20201110 08:38:14.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.175" endtime="20201110 08:38:14.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.174" endtime="20201110 08:38:14.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.170" endtime="20201110 08:38:14.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.801" endtime="20201110 08:38:14.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.801" endtime="20201110 08:38:14.197"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.212" endtime="20201110 08:38:14.230"></status>
</kw>
<msg timestamp="20201110 08:38:14.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.208" endtime="20201110 08:38:14.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.231" endtime="20201110 08:38:14.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.234" endtime="20201110 08:38:14.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.204" endtime="20201110 08:38:14.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.202" endtime="20201110 08:38:14.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.243" endtime="20201110 08:38:14.530"></status>
</kw>
<msg timestamp="20201110 08:38:14.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029727458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029791847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.241" endtime="20201110 08:38:14.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029727458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029791847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.534" endtime="20201110 08:38:14.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.542" endtime="20201110 08:38:14.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.239" endtime="20201110 08:38:14.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.237" endtime="20201110 08:38:14.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.549" level="INFO">${RESULT} = [{'time': 0.029791847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.43890000000015e-05, 'source_diff': 6.43890000000015e-05}, {'time': 0.029860819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.546" endtime="20201110 08:38:14.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.562" level="INFO">${ACCURACY} = {'diff': [6.43890000000015e-05, 6.470800000000013e-05, 6.488799999999906e-05, 6.520800000000063e-05, 6.473599999999927e-05, 6.498599999999952e-05, 6.487499999999896e-05, 6.520800000000063e-05, 6.43749...</msg>
<status status="PASS" starttime="20201110 08:38:14.550" endtime="20201110 08:38:14.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.567" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.566" endtime="20201110 08:38:14.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.569" level="INFO">VALUE: [6.43890000000015e-05, 6.470800000000013e-05, 6.488799999999906e-05, 6.520800000000063e-05, 6.473599999999927e-05, 6.498599999999952e-05, 6.487499999999896e-05, 6.520800000000063e-05, 6.437499999999846e-05, 6.47219999999997e-05, 6.468100000000046e-05, 6.509700000000007e-05, 6.455600000000034e-05, 6.47089999999996e-05, 6.451400000000163e-05, 6.4889000000002e-05, 6.459699999999957e-05, 6.477799999999798e-05, 6.451299999999868e-05, 6.505500000000136e-05, 6.52359999999963e-05, 6.436099999999889e-05, 6.52080000000041e-05, 6.470799999999666e-05, 6.488900000000547e-05, 6.52359999999963e-05, 6.520799999999716e-05, 6.472200000000317e-05, 6.437499999999846e-05, 6.487499999999896e-05, 6.473600000000274e-05, 6.50280000000017e-05, 6.437499999999846e-05, 6.455500000000086e-05, 6.520799999999716e-05, 6.520799999999716e-05, 6.487499999999896e-05, 6.487499999999896e-05, 6.511099999999964e-05, 6.433299999999975e-05, 6.479100000000154e-05, 6.438899999999803e-05, 6.437499999999846e-05, 6.491700000000461e-05, 6.520899999999663e-05, 6.4583e-05, 6.466599999999795e-05, 6.504100000000179e-05, 6.455500000000086e-05, 6.47080000000036e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.568" endtime="20201110 08:38:14.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.563" endtime="20201110 08:38:14.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.573" endtime="20201110 08:38:14.574"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.577" endtime="20201110 08:38:14.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.575" endtime="20201110 08:38:14.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.571" endtime="20201110 08:38:14.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.198" endtime="20201110 08:38:14.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.197" endtime="20201110 08:38:14.597"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.606" endtime="20201110 08:38:14.625"></status>
</kw>
<msg timestamp="20201110 08:38:14.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.605" endtime="20201110 08:38:14.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.626" endtime="20201110 08:38:14.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.629" endtime="20201110 08:38:14.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.602" endtime="20201110 08:38:14.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.600" endtime="20201110 08:38:14.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.638" endtime="20201110 08:38:14.924"></status>
</kw>
<msg timestamp="20201110 08:38:14.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.636" endtime="20201110 08:38:14.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.928" endtime="20201110 08:38:14.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.936" endtime="20201110 08:38:14.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.634" endtime="20201110 08:38:14.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.632" endtime="20201110 08:38:14.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.943" level="INFO">${RESULT} = [{'time': 0.022781514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.55700000000009e-05, 'source_diff': 6.55700000000009e-05}, {'time': 0.022853458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.940" endtime="20201110 08:38:14.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.957" level="INFO">${ACCURACY} = {'diff': [6.55700000000009e-05, 6.534700000000032e-05, 6.59029999999991e-05, 6.620799999999816e-05, 6.587499999999996e-05, 6.537499999999946e-05, 6.536099999999989e-05, 6.555600000000134e-05, 6.555600...</msg>
<status status="PASS" starttime="20201110 08:38:14.944" endtime="20201110 08:38:14.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.961" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.960" endtime="20201110 08:38:14.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.964" level="INFO">VALUE: [6.55700000000009e-05, 6.534700000000032e-05, 6.59029999999991e-05, 6.620799999999816e-05, 6.587499999999996e-05, 6.537499999999946e-05, 6.536099999999989e-05, 6.555600000000134e-05, 6.555600000000134e-05, 6.605599999999837e-05, 6.606900000000193e-05, 6.555500000000186e-05, 6.555499999999839e-05, 6.59159999999992e-05, 6.587499999999996e-05, 6.593100000000171e-05, 6.592999999999877e-05, 6.587499999999996e-05, 6.581900000000168e-05, 6.555600000000134e-05, 6.588899999999953e-05, 6.591699999999867e-05, 6.623600000000077e-05, 6.59029999999991e-05, 6.605599999999837e-05, 6.572300000000017e-05, 6.554200000000177e-05, 6.537499999999946e-05, 6.588800000000006e-05, 6.54029999999986e-05, 6.554099999999882e-05, 6.565299999999885e-05, 6.538899999999903e-05, 6.62220000000012e-05, 6.55700000000009e-05, 6.554200000000177e-05, 6.605599999999837e-05, 6.619500000000153e-05, 6.604200000000227e-05, 6.586100000000039e-05, 6.62090000000011e-05, 6.538899999999903e-05, 6.605499999999889e-05, 6.537499999999946e-05, 6.588899999999953e-05, 6.586100000000039e-05, 6.606899999999846e-05, 6.623600000000077e-05, 6.605499999999889e-05, 6.555600000000134e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.962" endtime="20201110 08:38:14.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.958" endtime="20201110 08:38:14.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.967" endtime="20201110 08:38:14.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.971" endtime="20201110 08:38:14.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.969" endtime="20201110 08:38:14.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.966" endtime="20201110 08:38:14.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.598" endtime="20201110 08:38:14.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.598" endtime="20201110 08:38:14.992"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.001" endtime="20201110 08:38:15.019"></status>
</kw>
<msg timestamp="20201110 08:38:15.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.999" endtime="20201110 08:38:15.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.020" endtime="20201110 08:38:15.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.023" endtime="20201110 08:38:15.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.996" endtime="20201110 08:38:15.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.994" endtime="20201110 08:38:15.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.032" endtime="20201110 08:38:15.319"></status>
</kw>
<msg timestamp="20201110 08:38:15.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.030" endtime="20201110 08:38:15.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022579361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022646194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.323" endtime="20201110 08:38:15.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.331" endtime="20201110 08:38:15.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.028" endtime="20201110 08:38:15.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.026" endtime="20201110 08:38:15.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.338" level="INFO">${RESULT} = [{'time': 0.022646194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.683300000000225e-05, 'source_diff': 6.683300000000225e-05}, {'time': 0.022719194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.335" endtime="20201110 08:38:15.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.352" level="INFO">${ACCURACY} = {'diff': [6.683300000000225e-05, 6.719400000000306e-05, 6.654099999999982e-05, 6.72220000000022e-05, 6.670800000000213e-05, 6.634700000000132e-05, 6.722199999999873e-05, 6.720800000000263e-05, 6.70699...</msg>
<status status="PASS" starttime="20201110 08:38:15.339" endtime="20201110 08:38:15.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.357" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.356" endtime="20201110 08:38:15.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.359" level="INFO">VALUE: [6.683300000000225e-05, 6.719400000000306e-05, 6.654099999999982e-05, 6.72220000000022e-05, 6.670800000000213e-05, 6.634700000000132e-05, 6.722199999999873e-05, 6.720800000000263e-05, 6.706999999999894e-05, 6.708299999999903e-05, 6.633399999999776e-05, 6.672300000000117e-05, 6.670899999999813e-05, 6.681999999999869e-05, 6.637500000000046e-05, 6.683300000000225e-05, 6.705499999999989e-05, 6.638900000000003e-05, 6.69030000000001e-05, 6.634699999999785e-05, 6.719399999999959e-05, 6.656999999999844e-05, 6.722199999999873e-05, 6.702800000000023e-05, 6.656999999999844e-05, 6.683400000000173e-05, 6.67359999999978e-05, 6.690199999999716e-05, 6.705500000000336e-05, 6.655499999999939e-05, 6.638900000000003e-05, 6.718000000000002e-05, 6.705499999999989e-05, 6.691699999999967e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.688900000000053e-05, 6.668099999999899e-05, 6.670899999999813e-05, 6.719499999999906e-05, 6.69030000000001e-05, 6.636099999999742e-05, 6.636200000000037e-05, 6.690200000000063e-05, 6.638900000000003e-05, 6.638900000000003e-05, 6.674999999999737e-05, 6.688900000000053e-05, 6.722199999999873e-05, 6.698599999999805e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.358" endtime="20201110 08:38:15.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.353" endtime="20201110 08:38:15.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.363" endtime="20201110 08:38:15.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.366" endtime="20201110 08:38:15.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.365" endtime="20201110 08:38:15.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.361" endtime="20201110 08:38:15.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.993" endtime="20201110 08:38:15.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.992" endtime="20201110 08:38:15.387"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.396" endtime="20201110 08:38:15.413"></status>
</kw>
<msg timestamp="20201110 08:38:15.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.395" endtime="20201110 08:38:15.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.415" endtime="20201110 08:38:15.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.417" endtime="20201110 08:38:15.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.392" endtime="20201110 08:38:15.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.390" endtime="20201110 08:38:15.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.426" endtime="20201110 08:38:15.715"></status>
</kw>
<msg timestamp="20201110 08:38:15.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.425" endtime="20201110 08:38:15.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.719" endtime="20201110 08:38:15.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.727" endtime="20201110 08:38:15.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.422" endtime="20201110 08:38:15.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.420" endtime="20201110 08:38:15.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.734" level="INFO">${RESULT} = [{'time': 0.022430389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.783299999999978e-05, 'source_diff': 6.783299999999978e-05}, {'time': 0.022511403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.731" endtime="20201110 08:38:15.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.747" level="INFO">${ACCURACY} = {'diff': [6.783299999999978e-05, 6.737499999999799e-05, 6.80420000000008e-05, 6.769499999999956e-05, 6.82229999999992e-05, 6.737500000000146e-05, 6.754100000000082e-05, 6.79169999999972e-05, 6.7417000...</msg>
<status status="PASS" starttime="20201110 08:38:15.735" endtime="20201110 08:38:15.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.752" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.751" endtime="20201110 08:38:15.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.755" level="INFO">VALUE: [6.783299999999978e-05, 6.737499999999799e-05, 6.80420000000008e-05, 6.769499999999956e-05, 6.82229999999992e-05, 6.737500000000146e-05, 6.754100000000082e-05, 6.79169999999972e-05, 6.741700000000017e-05, 6.820800000000016e-05, 6.770799999999966e-05, 6.787500000000196e-05, 6.822199999999973e-05, 6.743099999999974e-05, 6.736099999999842e-05, 6.755599999999987e-05, 6.787499999999849e-05, 6.75420000000003e-05, 6.77229999999987e-05, 6.75420000000003e-05, 6.806900000000046e-05, 6.737499999999799e-05, 6.820800000000016e-05, 6.788900000000153e-05, 6.787499999999849e-05, 6.738899999999756e-05, 6.752800000000073e-05, 6.802799999999776e-05, 6.805600000000037e-05, 6.777699999999803e-05, 6.768099999999999e-05, 6.755599999999987e-05, 6.806900000000046e-05, 6.80420000000008e-05, 6.790200000000163e-05, 6.820800000000016e-05, 6.772199999999923e-05, 6.79030000000011e-05, 6.772199999999923e-05, 6.768000000000052e-05, 6.744399999999984e-05, 6.802800000000123e-05, 6.804199999999733e-05, 6.738899999999756e-05, 6.755599999999987e-05, 6.74030000000006e-05, 6.82229999999992e-05, 6.755500000000039e-05, 6.802699999999828e-05, 6.798599999999905e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.753" endtime="20201110 08:38:15.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.748" endtime="20201110 08:38:15.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.765" endtime="20201110 08:38:15.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.768" endtime="20201110 08:38:15.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.766" endtime="20201110 08:38:15.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.763" endtime="20201110 08:38:15.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.388" endtime="20201110 08:38:15.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.388" endtime="20201110 08:38:15.789"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.798" endtime="20201110 08:38:15.815"></status>
</kw>
<msg timestamp="20201110 08:38:15.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.796" endtime="20201110 08:38:15.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.816" endtime="20201110 08:38:15.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.819" endtime="20201110 08:38:15.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.793" endtime="20201110 08:38:15.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.791" endtime="20201110 08:38:15.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.828" endtime="20201110 08:38:16.117"></status>
</kw>
<msg timestamp="20201110 08:38:16.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.826" endtime="20201110 08:38:16.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022503611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.122" endtime="20201110 08:38:16.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.130" endtime="20201110 08:38:16.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.824" endtime="20201110 08:38:16.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.822" endtime="20201110 08:38:16.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.137" level="INFO">${RESULT} = [{'time': 0.022503611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.880499999999817e-05, 'source_diff': 6.880499999999817e-05}, {'time': 0.022579625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.133" endtime="20201110 08:38:16.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.150" level="INFO">${ACCURACY} = {'diff': [6.880499999999817e-05, 6.904199999999833e-05, 6.922200000000073e-05, 6.855600000000087e-05, 6.830599999999715e-05, 6.890299999999863e-05, 6.838899999999856e-05, 6.906899999999799e-05, 6.9209...</msg>
<status status="PASS" starttime="20201110 08:38:16.138" endtime="20201110 08:38:16.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.155" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.154" endtime="20201110 08:38:16.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.157" level="INFO">VALUE: [6.880499999999817e-05, 6.904199999999833e-05, 6.922200000000073e-05, 6.855600000000087e-05, 6.830599999999715e-05, 6.890299999999863e-05, 6.838899999999856e-05, 6.906899999999799e-05, 6.920900000000063e-05, 6.862499999999924e-05, 6.904100000000232e-05, 6.920800000000116e-05, 6.854099999999835e-05, 6.888900000000253e-05, 6.888899999999906e-05, 6.87229999999997e-05, 6.852799999999826e-05, 6.920799999999769e-05, 6.888899999999906e-05, 6.890299999999863e-05, 6.919500000000106e-05, 6.92360000000003e-05, 6.888799999999959e-05, 6.834699999999985e-05, 6.92360000000003e-05, 6.855500000000139e-05, 6.837499999999899e-05, 6.92360000000003e-05, 6.920800000000116e-05, 6.922199999999726e-05, 6.90559999999979e-05, 6.90420000000018e-05, 6.870900000000013e-05, 6.862499999999924e-05, 6.83619999999989e-05, 6.85970000000001e-05, 6.888799999999959e-05, 6.904099999999885e-05, 6.92360000000003e-05, 6.872200000000023e-05, 6.854099999999835e-05, 6.922200000000073e-05, 6.854199999999783e-05, 6.870800000000066e-05, 6.872200000000023e-05, 6.851399999999869e-05, 6.838900000000203e-05, 6.85970000000001e-05, 6.87640000000024e-05, 6.890200000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.156" endtime="20201110 08:38:16.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.151" endtime="20201110 08:38:16.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.161" endtime="20201110 08:38:16.162"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.165" endtime="20201110 08:38:16.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.163" endtime="20201110 08:38:16.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.159" endtime="20201110 08:38:16.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.790" endtime="20201110 08:38:16.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.789" endtime="20201110 08:38:16.185"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.194" endtime="20201110 08:38:16.211"></status>
</kw>
<msg timestamp="20201110 08:38:16.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.192" endtime="20201110 08:38:16.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.213" endtime="20201110 08:38:16.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.215" endtime="20201110 08:38:16.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.190" endtime="20201110 08:38:16.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.188" endtime="20201110 08:38:16.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.224" endtime="20201110 08:38:16.512"></status>
</kw>
<msg timestamp="20201110 08:38:16.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.223" endtime="20201110 08:38:16.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.516" endtime="20201110 08:38:16.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.524" endtime="20201110 08:38:16.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.220" endtime="20201110 08:38:16.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.218" endtime="20201110 08:38:16.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.531" level="INFO">${RESULT} = [{'time': 0.022298125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.001400000000019e-05, 'source_diff': 7.001400000000019e-05}, {'time': 0.022372125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.528" endtime="20201110 08:38:16.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.545" level="INFO">${ACCURACY} = {'diff': [7.001400000000019e-05, 6.969399999999862e-05, 7.020799999999869e-05, 6.987500000000049e-05, 6.97230000000007e-05, 6.97230000000007e-05, 7.019500000000206e-05, 6.97230000000007e-05, 6.9971999...</msg>
<status status="PASS" starttime="20201110 08:38:16.532" endtime="20201110 08:38:16.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.549" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.548" endtime="20201110 08:38:16.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.552" level="INFO">VALUE: [7.001400000000019e-05, 6.969399999999862e-05, 7.020799999999869e-05, 6.987500000000049e-05, 6.97230000000007e-05, 6.97230000000007e-05, 7.019500000000206e-05, 6.97230000000007e-05, 6.997199999999801e-05, 7.020799999999869e-05, 6.998599999999758e-05, 6.947200000000098e-05, 6.970800000000166e-05, 6.958299999999806e-05, 6.952799999999926e-05, 6.955600000000187e-05, 6.94030000000026e-05, 6.987500000000049e-05, 6.963899999999981e-05, 7.027800000000001e-05, 6.987500000000049e-05, 6.988900000000006e-05, 7.004099999999985e-05, 6.969399999999862e-05, 6.941700000000217e-05, 6.950000000000012e-05, 7.022200000000173e-05, 6.980499999999917e-05, 6.970799999999819e-05, 6.936100000000042e-05, 6.940299999999913e-05, 6.988900000000006e-05, 6.970900000000113e-05, 6.970900000000113e-05, 7.019499999999859e-05, 6.938800000000009e-05, 7.006900000000246e-05, 7.004099999999985e-05, 7.022200000000173e-05, 6.940299999999913e-05, 6.970800000000166e-05, 6.936100000000042e-05, 6.988900000000006e-05, 7.002799999999976e-05, 6.988899999999659e-05, 7.005600000000237e-05, 6.936100000000042e-05, 6.97230000000007e-05, 6.988900000000006e-05, 7.027800000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.550" endtime="20201110 08:38:16.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.546" endtime="20201110 08:38:16.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.555" endtime="20201110 08:38:16.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.559" endtime="20201110 08:38:16.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.557" endtime="20201110 08:38:16.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.554" endtime="20201110 08:38:16.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.186" endtime="20201110 08:38:16.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.186" endtime="20201110 08:38:16.580"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.588" endtime="20201110 08:38:16.607"></status>
</kw>
<msg timestamp="20201110 08:38:16.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.587" endtime="20201110 08:38:16.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.608" endtime="20201110 08:38:16.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.611" endtime="20201110 08:38:16.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.584" endtime="20201110 08:38:16.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.582" endtime="20201110 08:38:16.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.620" endtime="20201110 08:38:16.907"></status>
</kw>
<msg timestamp="20201110 08:38:16.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.618" endtime="20201110 08:38:16.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022478875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.911" endtime="20201110 08:38:16.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.919" endtime="20201110 08:38:16.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.616" endtime="20201110 08:38:16.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.614" endtime="20201110 08:38:16.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.926" level="INFO">${RESULT} = [{'time': 0.022478875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.118100000000002e-05, 'source_diff': 7.118100000000002e-05}, {'time': 0.022562917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.922" endtime="20201110 08:38:16.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.939" level="INFO">${ACCURACY} = {'diff': [7.118100000000002e-05, 7.072299999999823e-05, 7.10559999999999e-05, 7.087500000000149e-05, 7.122299999999873e-05, 7.05420000000033e-05, 7.055499999999992e-05, 7.072199999999876e-05, 7.069400...</msg>
<status status="PASS" starttime="20201110 08:38:16.927" endtime="20201110 08:38:16.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.944" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.943" endtime="20201110 08:38:16.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.946" level="INFO">VALUE: [7.118100000000002e-05, 7.072299999999823e-05, 7.10559999999999e-05, 7.087500000000149e-05, 7.122299999999873e-05, 7.05420000000033e-05, 7.055499999999992e-05, 7.072199999999876e-05, 7.069400000000309e-05, 7.105500000000042e-05, 7.120799999999969e-05, 7.069399999999962e-05, 7.120800000000316e-05, 7.104200000000033e-05, 7.113899999999784e-05, 7.083299999999931e-05, 7.056999999999897e-05, 7.119499999999959e-05, 7.106999999999947e-05, 7.088800000000159e-05, 7.123599999999883e-05, 7.088899999999759e-05, 7.120799999999969e-05, 7.070799999999919e-05, 7.072199999999876e-05, 7.037500000000099e-05, 7.038900000000056e-05, 7.123599999999883e-05, 7.069399999999962e-05, 7.12360000000023e-05, 7.090300000000063e-05, 7.088900000000106e-05, 7.118100000000002e-05, 7.090199999999769e-05, 7.038799999999762e-05, 7.070799999999919e-05, 7.055499999999992e-05, 7.087499999999802e-05, 7.038900000000056e-05, 7.120799999999969e-05, 7.066699999999995e-05, 7.122199999999926e-05, 7.040300000000013e-05, 7.122199999999926e-05, 7.037500000000099e-05, 7.070899999999866e-05, 7.037499999999752e-05, 7.095799999999944e-05, 7.122200000000273e-05, 7.087500000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.945" endtime="20201110 08:38:16.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.940" endtime="20201110 08:38:16.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.950" endtime="20201110 08:38:16.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.954" endtime="20201110 08:38:16.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.952" endtime="20201110 08:38:16.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.948" endtime="20201110 08:38:16.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.580" endtime="20201110 08:38:16.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.580" endtime="20201110 08:38:16.974"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.983" endtime="20201110 08:38:17.002"></status>
</kw>
<msg timestamp="20201110 08:38:17.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.981" endtime="20201110 08:38:17.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.004" endtime="20201110 08:38:17.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.006" endtime="20201110 08:38:17.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.979" endtime="20201110 08:38:17.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.977" endtime="20201110 08:38:17.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.015" endtime="20201110 08:38:17.304"></status>
</kw>
<msg timestamp="20201110 08:38:17.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.014" endtime="20201110 08:38:17.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.308" endtime="20201110 08:38:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.316" endtime="20201110 08:38:17.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.011" endtime="20201110 08:38:17.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.009" endtime="20201110 08:38:17.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.323" level="INFO">${RESULT} = [{'time': 0.022421486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.127800000000101e-05, 'source_diff': 7.127800000000101e-05}, {'time': 0.022507486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.320" endtime="20201110 08:38:17.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.337" level="INFO">${ACCURACY} = {'diff': [7.127800000000101e-05, 7.220800000000069e-05, 7.136099999999895e-05, 7.15560000000004e-05, 7.154200000000083e-05, 7.138900000000156e-05, 7.22369999999993e-05, 7.219499999999712e-05, 7.173599...</msg>
<status status="PASS" starttime="20201110 08:38:17.324" endtime="20201110 08:38:17.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.342" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.341" endtime="20201110 08:38:17.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.344" level="INFO">VALUE: [7.127800000000101e-05, 7.220800000000069e-05, 7.136099999999895e-05, 7.15560000000004e-05, 7.154200000000083e-05, 7.138900000000156e-05, 7.22369999999993e-05, 7.219499999999712e-05, 7.173599999999933e-05, 7.16109999999992e-05, 7.187500000000249e-05, 7.222200000000026e-05, 7.204100000000185e-05, 7.184699999999988e-05, 7.172199999999976e-05, 7.143100000000027e-05, 7.187500000000249e-05, 7.156999999999997e-05, 7.186099999999945e-05, 7.138900000000156e-05, 7.184799999999936e-05, 7.137500000000199e-05, 7.202799999999829e-05, 7.140200000000166e-05, 7.136100000000242e-05, 7.172199999999976e-05, 7.222200000000026e-05, 7.220800000000069e-05, 7.137499999999852e-05, 7.223599999999983e-05, 7.170800000000019e-05, 7.14300000000008e-05, 7.205599999999743e-05, 7.220900000000016e-05, 7.220900000000016e-05, 7.205499999999795e-05, 7.18620000000024e-05, 7.187500000000249e-05, 7.187499999999902e-05, 7.136100000000242e-05, 7.14170000000007e-05, 7.172199999999976e-05, 7.220800000000069e-05, 7.223599999999983e-05, 7.138900000000156e-05, 7.220800000000069e-05, 7.14300000000008e-05, 7.190299999999816e-05, 7.170899999999966e-05, 7.205500000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.343" endtime="20201110 08:38:17.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.338" endtime="20201110 08:38:17.346"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.348" endtime="20201110 08:38:17.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.352" endtime="20201110 08:38:17.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.350" endtime="20201110 08:38:17.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.346" endtime="20201110 08:38:17.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.975" endtime="20201110 08:38:17.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.975" endtime="20201110 08:38:17.377"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.387" endtime="20201110 08:38:17.406"></status>
</kw>
<msg timestamp="20201110 08:38:17.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.385" endtime="20201110 08:38:17.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.407" endtime="20201110 08:38:17.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.410" endtime="20201110 08:38:17.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.382" endtime="20201110 08:38:17.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.380" endtime="20201110 08:38:17.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.419" endtime="20201110 08:38:17.725"></status>
</kw>
<msg timestamp="20201110 08:38:17.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028597444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.418" endtime="20201110 08:38:17.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028524778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028597444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.735" endtime="20201110 08:38:17.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.749" endtime="20201110 08:38:17.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.415" endtime="20201110 08:38:17.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.413" endtime="20201110 08:38:17.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.756" level="INFO">${RESULT} = [{'time': 0.028597444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.266599999999901e-05, 'source_diff': 7.266599999999901e-05}, {'time': 0.028683486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.753" endtime="20201110 08:38:17.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.770" level="INFO">${ACCURACY} = {'diff': [7.266599999999901e-05, 7.240300000000213e-05, 7.322199999999779e-05, 7.287500000000002e-05, 7.305499999999895e-05, 7.322200000000126e-05, 7.247200000000051e-05, 7.288900000000306e-05, 7.2723...</msg>
<status status="PASS" starttime="20201110 08:38:17.757" endtime="20201110 08:38:17.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.775" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.774" endtime="20201110 08:38:17.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.777" level="INFO">VALUE: [7.266599999999901e-05, 7.240300000000213e-05, 7.322199999999779e-05, 7.287500000000002e-05, 7.305499999999895e-05, 7.322200000000126e-05, 7.247200000000051e-05, 7.288900000000306e-05, 7.272300000000023e-05, 7.287500000000002e-05, 7.272299999999676e-05, 7.237499999999952e-05, 7.255499999999845e-05, 7.272200000000076e-05, 7.309700000000113e-05, 7.286100000000045e-05, 7.326399999999997e-05, 7.256899999999802e-05, 7.238899999999909e-05, 7.305599999999843e-05, 7.311099999999723e-05, 7.272200000000076e-05, 7.273600000000033e-05, 7.286100000000045e-05, 7.29300000000023e-05, 7.323600000000083e-05, 7.329200000000258e-05, 7.320799999999822e-05, 7.290299999999916e-05, 7.305500000000242e-05, 7.298600000000058e-05, 7.237499999999952e-05, 7.272200000000076e-05, 7.293100000000177e-05, 7.270799999999772e-05, 7.272200000000423e-05, 7.279199999999514e-05, 7.300000000000362e-05, 7.270899999999719e-05, 7.275000000000337e-05, 7.304100000000285e-05, 7.238899999999909e-05, 7.272199999999729e-05, 7.255500000000192e-05, 7.286100000000045e-05, 7.237499999999952e-05, 7.290299999999916e-05, 7.237499999999952e-05, 7.275000000000337e-05, 7.254200000000183e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.776" endtime="20201110 08:38:17.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.771" endtime="20201110 08:38:17.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.781" endtime="20201110 08:38:17.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.785" endtime="20201110 08:38:17.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.783" endtime="20201110 08:38:17.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.779" endtime="20201110 08:38:17.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.378" endtime="20201110 08:38:17.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.377" endtime="20201110 08:38:17.806"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.815" endtime="20201110 08:38:17.833"></status>
</kw>
<msg timestamp="20201110 08:38:17.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.813" endtime="20201110 08:38:17.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.835" endtime="20201110 08:38:17.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.838" endtime="20201110 08:38:17.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.810" endtime="20201110 08:38:17.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.808" endtime="20201110 08:38:17.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.847" endtime="20201110 08:38:18.134"></status>
</kw>
<msg timestamp="20201110 08:38:18.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.845" endtime="20201110 08:38:18.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022944611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023018097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.138" endtime="20201110 08:38:18.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.147" endtime="20201110 08:38:18.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.843" endtime="20201110 08:38:18.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.841" endtime="20201110 08:38:18.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.154" level="INFO">${RESULT} = [{'time': 0.023018097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.348600000000108e-05, 'source_diff': 7.348600000000108e-05}, {'time': 0.023099167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.150" endtime="20201110 08:38:18.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.167" level="INFO">${ACCURACY} = {'diff': [7.348600000000108e-05, 7.408400000000204e-05, 7.357000000000197e-05, 7.338900000000009e-05, 7.361099999999773e-05, 7.420899999999869e-05, 7.404199999999986e-05, 7.370899999999819e-05, 7.4055...</msg>
<status status="PASS" starttime="20201110 08:38:18.155" endtime="20201110 08:38:18.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.172" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.171" endtime="20201110 08:38:18.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.175" level="INFO">VALUE: [7.348600000000108e-05, 7.408400000000204e-05, 7.357000000000197e-05, 7.338900000000009e-05, 7.361099999999773e-05, 7.420899999999869e-05, 7.404199999999986e-05, 7.370899999999819e-05, 7.405599999999943e-05, 7.388800000000112e-05, 7.422200000000226e-05, 7.390300000000016e-05, 7.374999999999743e-05, 7.402800000000029e-05, 7.355500000000292e-05, 7.35699999999985e-05, 7.366699999999948e-05, 7.350000000000065e-05, 7.35699999999985e-05, 7.355599999999893e-05, 7.41110000000017e-05, 7.355599999999893e-05, 7.405499999999995e-05, 7.340200000000019e-05, 7.372200000000176e-05, 7.419399999999965e-05, 7.336099999999748e-05, 7.355499999999945e-05, 7.370799999999872e-05, 7.422199999999879e-05, 7.404199999999986e-05, 7.404199999999986e-05, 7.420899999999869e-05, 7.340299999999966e-05, 7.338900000000009e-05, 7.404199999999986e-05, 7.388800000000112e-05, 7.388899999999712e-05, 7.336099999999748e-05, 7.354099999999988e-05, 7.354199999999936e-05, 7.370800000000219e-05, 7.338900000000009e-05, 7.372199999999829e-05, 7.370799999999872e-05, 7.402800000000029e-05, 7.358300000000206e-05, 7.420900000000216e-05, 7.338900000000009e-05, 7.388800000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.173" endtime="20201110 08:38:18.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.168" endtime="20201110 08:38:18.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.178" endtime="20201110 08:38:18.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.182" endtime="20201110 08:38:18.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.180" endtime="20201110 08:38:18.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.177" endtime="20201110 08:38:18.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.807" endtime="20201110 08:38:18.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.806" endtime="20201110 08:38:18.203"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.212" endtime="20201110 08:38:18.231"></status>
</kw>
<msg timestamp="20201110 08:38:18.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.210" endtime="20201110 08:38:18.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.232" endtime="20201110 08:38:18.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.235" endtime="20201110 08:38:18.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.207" endtime="20201110 08:38:18.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.205" endtime="20201110 08:38:18.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.244" endtime="20201110 08:38:18.530"></status>
</kw>
<msg timestamp="20201110 08:38:18.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.242" endtime="20201110 08:38:18.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023132097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023206931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.535" endtime="20201110 08:38:18.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.543" endtime="20201110 08:38:18.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.240" endtime="20201110 08:38:18.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.238" endtime="20201110 08:38:18.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.550" level="INFO">${RESULT} = [{'time': 0.023206931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.483399999999932e-05, 'source_diff': 7.483399999999932e-05}, {'time': 0.023285944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.547" endtime="20201110 08:38:18.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.564" level="INFO">${ACCURACY} = {'diff': [7.483399999999932e-05, 7.473599999999886e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.487500000000202e-05, 7.473600000000233e-05, 7.522199999999979e-05, 7.472199999999929e-05, 7.5042...</msg>
<status status="PASS" starttime="20201110 08:38:18.551" endtime="20201110 08:38:18.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.568" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.567" endtime="20201110 08:38:18.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.571" level="INFO">VALUE: [7.483399999999932e-05, 7.473599999999886e-05, 7.436100000000195e-05, 7.437500000000152e-05, 7.487500000000202e-05, 7.473600000000233e-05, 7.522199999999979e-05, 7.472199999999929e-05, 7.504200000000086e-05, 7.454200000000036e-05, 7.519399999999718e-05, 7.455599999999993e-05, 7.522199999999979e-05, 7.455599999999993e-05, 7.472300000000223e-05, 7.463899999999787e-05, 7.488800000000212e-05, 7.504100000000138e-05, 7.472199999999929e-05, 7.505500000000095e-05, 7.438900000000109e-05, 7.487499999999855e-05, 7.44309999999998e-05, 7.488899999999812e-05, 7.469500000000309e-05, 7.448599999999861e-05, 7.466700000000048e-05, 7.487499999999855e-05, 7.465200000000144e-05, 7.505499999999748e-05, 7.437500000000152e-05, 7.454100000000088e-05, 7.452799999999732e-05, 7.456900000000002e-05, 7.437499999999805e-05, 7.455599999999993e-05, 7.438899999999762e-05, 7.434699999999891e-05, 7.504200000000086e-05, 7.447199999999904e-05, 7.470899999999919e-05, 7.519500000000012e-05, 7.463800000000187e-05, 7.452699999999784e-05, 7.455499999999698e-05, 7.438900000000109e-05, 7.44309999999998e-05, 7.487499999999855e-05, 7.488899999999812e-05, 7.472199999999929e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.570" endtime="20201110 08:38:18.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.565" endtime="20201110 08:38:18.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.575" endtime="20201110 08:38:18.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.578" endtime="20201110 08:38:18.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.577" endtime="20201110 08:38:18.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.573" endtime="20201110 08:38:18.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.204" endtime="20201110 08:38:18.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.203" endtime="20201110 08:38:18.599"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.608" endtime="20201110 08:38:18.627"></status>
</kw>
<msg timestamp="20201110 08:38:18.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.607" endtime="20201110 08:38:18.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.628" endtime="20201110 08:38:18.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.631" endtime="20201110 08:38:18.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.604" endtime="20201110 08:38:18.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.602" endtime="20201110 08:38:18.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.640" endtime="20201110 08:38:18.928"></status>
</kw>
<msg timestamp="20201110 08:38:18.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.639" endtime="20201110 08:38:18.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023024347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023100361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.933" endtime="20201110 08:38:18.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.943" endtime="20201110 08:38:18.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.636" endtime="20201110 08:38:18.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.634" endtime="20201110 08:38:18.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.950" level="INFO">${RESULT} = [{'time': 0.023100361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.601399999999925e-05, 'source_diff': 7.601399999999925e-05}, {'time': 0.023183375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.946" endtime="20201110 08:38:18.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.963" level="INFO">${ACCURACY} = {'diff': [7.601399999999925e-05, 7.555599999999746e-05, 7.573599999999986e-05, 7.605600000000143e-05, 7.554199999999789e-05, 7.627799999999907e-05, 7.55830000000006e-05, 7.584799999999989e-05, 7.55420...</msg>
<status status="PASS" starttime="20201110 08:38:18.951" endtime="20201110 08:38:18.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.969" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.967" endtime="20201110 08:38:18.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.971" level="INFO">VALUE: [7.601399999999925e-05, 7.555599999999746e-05, 7.573599999999986e-05, 7.605600000000143e-05, 7.554199999999789e-05, 7.627799999999907e-05, 7.55830000000006e-05, 7.584799999999989e-05, 7.554200000000136e-05, 7.604099999999892e-05, 7.623600000000036e-05, 7.587499999999955e-05, 7.537499999999905e-05, 7.583300000000084e-05, 7.619400000000165e-05, 7.554199999999789e-05, 7.572199999999682e-05, 7.53890000000021e-05, 7.551399999999875e-05, 7.555600000000093e-05, 7.605599999999796e-05, 7.620900000000069e-05, 7.623600000000036e-05, 7.570800000000072e-05, 7.570800000000072e-05, 7.611100000000023e-05, 7.544500000000037e-05, 7.537500000000252e-05, 7.537499999999905e-05, 7.587499999999955e-05, 7.536099999999948e-05, 7.623699999999983e-05, 7.582000000000075e-05, 7.590199999999922e-05, 7.605499999999848e-05, 7.604100000000238e-05, 7.605499999999848e-05, 7.555500000000145e-05, 7.622200000000079e-05, 7.619399999999818e-05, 7.538899999999862e-05, 7.55700000000005e-05, 7.554199999999789e-05, 7.59029999999987e-05, 7.555600000000093e-05, 7.570900000000019e-05, 7.554200000000136e-05, 7.540199999999872e-05, 7.555500000000145e-05, 7.604099999999892e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.970" endtime="20201110 08:38:18.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.965" endtime="20201110 08:38:18.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.975" endtime="20201110 08:38:18.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.979" endtime="20201110 08:38:18.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.977" endtime="20201110 08:38:18.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.973" endtime="20201110 08:38:18.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.600" endtime="20201110 08:38:19.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.600" endtime="20201110 08:38:19.000"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.009" endtime="20201110 08:38:19.028"></status>
</kw>
<msg timestamp="20201110 08:38:19.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.007" endtime="20201110 08:38:19.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.029" endtime="20201110 08:38:19.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.032" endtime="20201110 08:38:19.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.005" endtime="20201110 08:38:19.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.002" endtime="20201110 08:38:19.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.041" endtime="20201110 08:38:19.328"></status>
</kw>
<msg timestamp="20201110 08:38:19.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:19.040" endtime="20201110 08:38:19.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023135264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0232125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:19.333" endtime="20201110 08:38:19.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.341" endtime="20201110 08:38:19.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.037" endtime="20201110 08:38:19.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.035" endtime="20201110 08:38:19.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.348" level="INFO">${RESULT} = [{'time': 0.0232125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.723600000000136e-05, 'source_diff': 7.723600000000136e-05}, {'time': 0.023301458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:19.345" endtime="20201110 08:38:19.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.362" level="INFO">${ACCURACY} = {'diff': [7.723600000000136e-05, 7.638899999999962e-05, 7.637500000000005e-05, 7.637500000000005e-05, 7.688900000000012e-05, 7.65700000000015e-05, 7.650000000000018e-05, 7.65700000000015e-05, 7.690299...</msg>
<status status="PASS" starttime="20201110 08:38:19.349" endtime="20201110 08:38:19.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.367" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.365" endtime="20201110 08:38:19.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.369" level="INFO">VALUE: [7.723600000000136e-05, 7.638899999999962e-05, 7.637500000000005e-05, 7.637500000000005e-05, 7.688900000000012e-05, 7.65700000000015e-05, 7.650000000000018e-05, 7.65700000000015e-05, 7.69029999999997e-05, 7.720900000000169e-05, 7.643000000000233e-05, 7.666700000000248e-05, 7.686099999999751e-05, 7.636100000000048e-05, 7.688900000000012e-05, 7.654099999999942e-05, 7.655600000000193e-05, 7.709800000000114e-05, 7.722200000000179e-05, 7.687500000000055e-05, 7.637500000000005e-05, 7.687500000000055e-05, 7.670899999999772e-05, 7.652800000000279e-05, 7.672200000000129e-05, 7.655500000000245e-05, 7.701400000000025e-05, 7.654099999999942e-05, 7.704099999999992e-05, 7.658299999999812e-05, 7.669399999999868e-05, 7.643099999999833e-05, 7.656999999999803e-05, 7.70839999999981e-05, 7.670900000000119e-05, 7.638899999999962e-05, 7.688900000000012e-05, 7.637500000000005e-05, 7.670800000000172e-05, 7.688900000000012e-05, 7.700000000000068e-05, 7.654099999999942e-05, 7.705499999999949e-05, 7.658400000000107e-05, 7.669400000000215e-05, 7.672199999999782e-05, 7.688900000000012e-05, 7.670799999999825e-05, 7.670899999999772e-05, 7.655600000000193e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.368" endtime="20201110 08:38:19.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.363" endtime="20201110 08:38:19.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.373" endtime="20201110 08:38:19.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.376" endtime="20201110 08:38:19.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.375" endtime="20201110 08:38:19.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.371" endtime="20201110 08:38:19.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.001" endtime="20201110 08:38:19.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.000" endtime="20201110 08:38:19.397"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.407" endtime="20201110 08:38:19.426"></status>
</kw>
<msg timestamp="20201110 08:38:19.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.406" endtime="20201110 08:38:19.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.428" endtime="20201110 08:38:19.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.431" endtime="20201110 08:38:19.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.403" endtime="20201110 08:38:19.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.400" endtime="20201110 08:38:19.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.440" endtime="20201110 08:38:19.727"></status>
</kw>
<msg timestamp="20201110 08:38:19.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.438" endtime="20201110 08:38:19.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024021139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024099056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.732" endtime="20201110 08:38:19.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.740" endtime="20201110 08:38:19.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.436" endtime="20201110 08:38:19.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.434" endtime="20201110 08:38:19.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.747" level="INFO">${RESULT} = [{'time': 0.024099056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791700000000026e-05, 'source_diff': 7.791700000000026e-05}, {'time': 0.024188056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:19.744" endtime="20201110 08:38:19.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.761" level="INFO">${ACCURACY} = {'diff': [7.791700000000026e-05, 7.787499999999808e-05, 7.740200000000072e-05, 7.738800000000115e-05, 7.769399999999968e-05, 7.74449999999989e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.81940...</msg>
<status status="PASS" starttime="20201110 08:38:19.748" endtime="20201110 08:38:19.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.766" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.765" endtime="20201110 08:38:19.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.768" level="INFO">VALUE: [7.791700000000026e-05, 7.787499999999808e-05, 7.740200000000072e-05, 7.738800000000115e-05, 7.769399999999968e-05, 7.74449999999989e-05, 7.772199999999882e-05, 7.777800000000057e-05, 7.819400000000018e-05, 7.784699999999894e-05, 7.804200000000039e-05, 7.787499999999808e-05, 7.736100000000148e-05, 7.829200000000064e-05, 7.736100000000148e-05, 7.804200000000039e-05, 7.770799999999925e-05, 7.738899999999715e-05, 7.743099999999933e-05, 7.755499999999999e-05, 7.770800000000272e-05, 7.818100000000008e-05, 7.754199999999989e-05, 7.791700000000026e-05, 7.77770000000011e-05, 7.820900000000269e-05, 7.804200000000039e-05, 7.805599999999996e-05, 7.756899999999955e-05, 7.804100000000092e-05, 7.754199999999989e-05, 7.738899999999715e-05, 7.755499999999999e-05, 7.788900000000112e-05, 7.755599999999946e-05, 7.772199999999882e-05, 7.772199999999882e-05, 7.787500000000155e-05, 7.805599999999996e-05, 7.738800000000115e-05, 7.819499999999965e-05, 7.786100000000198e-05, 7.78189999999998e-05, 7.79030000000007e-05, 7.755499999999999e-05, 7.805499999999702e-05, 7.768099999999958e-05, 7.777699999999763e-05, 7.772199999999882e-05, 7.799999999999821e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.767" endtime="20201110 08:38:19.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.762" endtime="20201110 08:38:19.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.772" endtime="20201110 08:38:19.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.776" endtime="20201110 08:38:19.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.774" endtime="20201110 08:38:19.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.770" endtime="20201110 08:38:19.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.398" endtime="20201110 08:38:19.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.398" endtime="20201110 08:38:19.797"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.806" endtime="20201110 08:38:19.825"></status>
</kw>
<msg timestamp="20201110 08:38:19.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.804" endtime="20201110 08:38:19.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.826" endtime="20201110 08:38:19.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.829" endtime="20201110 08:38:19.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.801" endtime="20201110 08:38:19.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.799" endtime="20201110 08:38:19.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.838" endtime="20201110 08:38:20.126"></status>
</kw>
<msg timestamp="20201110 08:38:20.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.836" endtime="20201110 08:38:20.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022918431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022997667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.130" endtime="20201110 08:38:20.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.139" endtime="20201110 08:38:20.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.834" endtime="20201110 08:38:20.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.832" endtime="20201110 08:38:20.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.146" level="INFO">${RESULT} = [{'time': 0.022997667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.923599999999989e-05, 'source_diff': 7.923599999999989e-05}, {'time': 0.023090667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.142" endtime="20201110 08:38:20.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.159" level="INFO">${ACCURACY} = {'diff': [7.923599999999989e-05, 7.848599999999914e-05, 7.888799999999918e-05, 7.905499999999802e-05, 7.922200000000032e-05, 7.887500000000255e-05, 7.902800000000182e-05, 7.922200000000032e-05, 7.8721...</msg>
<status status="PASS" starttime="20201110 08:38:20.147" endtime="20201110 08:38:20.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.164" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.163" endtime="20201110 08:38:20.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.167" level="INFO">VALUE: [7.923599999999989e-05, 7.848599999999914e-05, 7.888799999999918e-05, 7.905499999999802e-05, 7.922200000000032e-05, 7.887500000000255e-05, 7.902800000000182e-05, 7.922200000000032e-05, 7.872199999999982e-05, 7.854200000000089e-05, 7.887499999999908e-05, 7.844400000000043e-05, 7.855600000000046e-05, 7.918100000000108e-05, 7.890199999999875e-05, 7.872199999999982e-05, 7.837499999999858e-05, 7.840299999999772e-05, 7.855499999999752e-05, 7.900000000000268e-05, 7.838900000000162e-05, 7.922199999999685e-05, 7.89030000000017e-05, 7.836099999999901e-05, 7.870899999999972e-05, 7.837499999999858e-05, 7.873599999999939e-05, 7.923599999999989e-05, 7.890199999999875e-05, 7.923599999999989e-05, 7.836100000000248e-05, 7.837500000000205e-05, 7.888899999999865e-05, 7.840299999999772e-05, 7.869400000000068e-05, 7.888899999999865e-05, 7.904199999999792e-05, 7.87229999999993e-05, 7.837500000000205e-05, 7.886200000000246e-05, 7.890200000000222e-05, 7.887499999999908e-05, 7.920800000000075e-05, 7.890299999999822e-05, 7.856899999999709e-05, 7.869400000000068e-05, 7.886100000000298e-05, 7.857000000000003e-05, 7.888900000000212e-05, 7.927800000000207e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.165" endtime="20201110 08:38:20.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.160" endtime="20201110 08:38:20.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.170" endtime="20201110 08:38:20.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.174" endtime="20201110 08:38:20.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.172" endtime="20201110 08:38:20.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.169" endtime="20201110 08:38:20.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.798" endtime="20201110 08:38:20.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.797" endtime="20201110 08:38:20.195"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.204" endtime="20201110 08:38:20.223"></status>
</kw>
<msg timestamp="20201110 08:38:20.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.202" endtime="20201110 08:38:20.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.224" endtime="20201110 08:38:20.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.227" endtime="20201110 08:38:20.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.200" endtime="20201110 08:38:20.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.198" endtime="20201110 08:38:20.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.236" endtime="20201110 08:38:20.524"></status>
</kw>
<msg timestamp="20201110 08:38:20.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.235" endtime="20201110 08:38:20.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022755903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.529" endtime="20201110 08:38:20.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.537" endtime="20201110 08:38:20.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.232" endtime="20201110 08:38:20.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.230" endtime="20201110 08:38:20.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.544" level="INFO">${RESULT} = [{'time': 0.022835667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.976399999999953e-05, 'source_diff': 7.976399999999953e-05}, {'time': 0.022929708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.541" endtime="20201110 08:38:20.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.558" level="INFO">${ACCURACY} = {'diff': [7.976399999999953e-05, 7.973600000000039e-05, 7.973600000000039e-05, 7.958300000000113e-05, 7.955499999999852e-05, 8.004099999999945e-05, 7.938899999999915e-05, 7.938899999999915e-05, 8.0069...</msg>
<status status="PASS" starttime="20201110 08:38:20.545" endtime="20201110 08:38:20.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.563" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.561" endtime="20201110 08:38:20.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.565" level="INFO">VALUE: [7.976399999999953e-05, 7.973600000000039e-05, 7.973600000000039e-05, 7.958300000000113e-05, 7.955499999999852e-05, 8.004099999999945e-05, 7.938899999999915e-05, 7.938899999999915e-05, 8.006999999999806e-05, 7.969500000000115e-05, 7.972200000000082e-05, 7.952800000000232e-05, 8.004199999999892e-05, 7.937499999999958e-05, 8.004099999999945e-05, 8.002699999999988e-05, 7.949999999999971e-05, 7.936100000000001e-05, 8.005499999999902e-05, 7.970800000000125e-05, 8.020799999999828e-05, 7.984699999999748e-05, 7.988899999999965e-05, 7.95970000000007e-05, 8.022299999999732e-05, 7.974999999999996e-05, 8.005500000000249e-05, 7.970799999999778e-05, 8.004099999999945e-05, 7.956899999999809e-05, 7.990299999999922e-05, 7.99169999999988e-05, 7.937499999999958e-05, 7.955600000000146e-05, 7.94030000000022e-05, 7.993100000000183e-05, 8.004199999999892e-05, 8.000000000000021e-05, 7.986100000000051e-05, 8.004099999999945e-05, 8.0152e-05, 8.020799999999828e-05, 7.955499999999852e-05, 8.002799999999935e-05, 8.022199999999785e-05, 7.938900000000262e-05, 8.022200000000132e-05, 8.020900000000122e-05, 8.020899999999775e-05, 7.97230000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.564" endtime="20201110 08:38:20.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.559" endtime="20201110 08:38:20.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.569" endtime="20201110 08:38:20.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.572" endtime="20201110 08:38:20.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.571" endtime="20201110 08:38:20.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.567" endtime="20201110 08:38:20.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.196" endtime="20201110 08:38:20.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.195" endtime="20201110 08:38:20.594"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.602" endtime="20201110 08:38:20.621"></status>
</kw>
<msg timestamp="20201110 08:38:20.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.601" endtime="20201110 08:38:20.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.623" endtime="20201110 08:38:20.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.626" endtime="20201110 08:38:20.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.598" endtime="20201110 08:38:20.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.596" endtime="20201110 08:38:20.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.635" endtime="20201110 08:38:20.922"></status>
</kw>
<msg timestamp="20201110 08:38:20.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.633" endtime="20201110 08:38:20.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022802375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.927" endtime="20201110 08:38:20.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.935" endtime="20201110 08:38:20.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.631" endtime="20201110 08:38:20.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.629" endtime="20201110 08:38:20.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.942" level="INFO">${RESULT} = [{'time': 0.022802375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.056899999999909e-05, 'source_diff': 8.056899999999909e-05}, {'time': 0.022894389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.939" endtime="20201110 08:38:20.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.956" level="INFO">${ACCURACY} = {'diff': [8.056899999999909e-05, 8.072200000000182e-05, 8.106999999999906e-05, 8.105599999999949e-05, 8.038900000000015e-05, 8.105599999999949e-05, 8.087500000000108e-05, 8.059699999999823e-05, 8.0721...</msg>
<status status="PASS" starttime="20201110 08:38:20.943" endtime="20201110 08:38:20.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.960" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.959" endtime="20201110 08:38:20.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.963" level="INFO">VALUE: [8.056899999999909e-05, 8.072200000000182e-05, 8.106999999999906e-05, 8.105599999999949e-05, 8.038900000000015e-05, 8.105599999999949e-05, 8.087500000000108e-05, 8.059699999999823e-05, 8.072199999999835e-05, 8.102700000000088e-05, 8.070800000000225e-05, 8.038900000000015e-05, 8.090300000000022e-05, 8.11109999999983e-05, 8.09169999999998e-05, 8.084699999999848e-05, 8.086200000000099e-05, 8.038900000000015e-05, 8.040200000000025e-05, 8.037499999999712e-05, 8.038900000000015e-05, 8.125000000000146e-05, 8.056900000000256e-05, 8.105500000000002e-05, 8.072199999999835e-05, 8.070799999999878e-05, 8.036100000000101e-05, 8.123599999999842e-05, 8.070900000000172e-05, 8.037499999999712e-05, 8.088799999999771e-05, 8.086100000000151e-05, 8.123599999999842e-05, 8.070800000000225e-05, 8.088900000000065e-05, 8.070799999999878e-05, 8.105599999999949e-05, 8.122200000000232e-05, 8.072199999999835e-05, 8.055599999999899e-05, 8.070900000000172e-05, 8.069500000000215e-05, 8.120900000000222e-05, 8.072199999999835e-05, 8.120799999999928e-05, 8.123599999999842e-05, 8.055499999999952e-05, 8.073600000000139e-05, 8.054199999999942e-05, 8.105599999999949e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.962" endtime="20201110 08:38:20.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.957" endtime="20201110 08:38:20.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.973" endtime="20201110 08:38:20.975"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.977" endtime="20201110 08:38:20.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.975" endtime="20201110 08:38:20.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.971" endtime="20201110 08:38:20.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.594" endtime="20201110 08:38:20.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.594" endtime="20201110 08:38:20.998"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.007" endtime="20201110 08:38:21.025"></status>
</kw>
<msg timestamp="20201110 08:38:21.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.005" endtime="20201110 08:38:21.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.027" endtime="20201110 08:38:21.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.029" endtime="20201110 08:38:21.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.003" endtime="20201110 08:38:21.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.000" endtime="20201110 08:38:21.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.039" endtime="20201110 08:38:21.326"></status>
</kw>
<msg timestamp="20201110 08:38:21.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.037" endtime="20201110 08:38:21.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022832042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.330" endtime="20201110 08:38:21.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.339" endtime="20201110 08:38:21.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.034" endtime="20201110 08:38:21.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.032" endtime="20201110 08:38:21.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.346" level="INFO">${RESULT} = [{'time': 0.022913903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.186099999999905e-05, 'source_diff': 8.186099999999905e-05}, {'time': 0.023007903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.342" endtime="20201110 08:38:21.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.360" level="INFO">${ACCURACY} = {'diff': [8.186099999999905e-05, 8.172199999999935e-05, 8.170899999999925e-05, 8.208300000000016e-05, 8.204199999999745e-05, 8.138800000000168e-05, 8.188899999999819e-05, 8.186099999999905e-05, 8.1555...</msg>
<status status="PASS" starttime="20201110 08:38:21.347" endtime="20201110 08:38:21.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.365" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.363" endtime="20201110 08:38:21.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.367" level="INFO">VALUE: [8.186099999999905e-05, 8.172199999999935e-05, 8.170899999999925e-05, 8.208300000000016e-05, 8.204199999999745e-05, 8.138800000000168e-05, 8.188899999999819e-05, 8.186099999999905e-05, 8.155500000000052e-05, 8.216600000000157e-05, 8.152800000000085e-05, 8.156999999999956e-05, 8.205600000000049e-05, 8.205600000000049e-05, 8.138900000000115e-05, 8.155599999999999e-05, 8.137499999999812e-05, 8.204099999999798e-05, 8.222199999999985e-05, 8.21109999999993e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.151399999999781e-05, 8.172199999999935e-05, 8.222199999999985e-05, 8.187499999999862e-05, 8.204200000000092e-05, 8.152800000000085e-05, 8.191600000000132e-05, 8.190200000000175e-05, 8.220799999999681e-05, 8.186099999999905e-05, 8.172199999999935e-05, 8.188899999999819e-05, 8.187500000000208e-05, 8.136100000000202e-05, 8.194499999999993e-05, 8.173599999999892e-05, 8.138900000000115e-05, 8.220899999999975e-05, 8.187500000000208e-05, 8.176400000000153e-05, 8.220800000000028e-05, 8.204099999999798e-05, 8.220800000000028e-05, 8.205499999999755e-05, 8.188900000000165e-05, 8.188900000000165e-05, 8.173600000000239e-05, 8.138900000000115e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.366" endtime="20201110 08:38:21.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.361" endtime="20201110 08:38:21.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.371" endtime="20201110 08:38:21.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.375" endtime="20201110 08:38:21.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.373" endtime="20201110 08:38:21.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.369" endtime="20201110 08:38:21.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.999" endtime="20201110 08:38:21.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.998" endtime="20201110 08:38:21.395"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.404" endtime="20201110 08:38:21.423"></status>
</kw>
<msg timestamp="20201110 08:38:21.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.403" endtime="20201110 08:38:21.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.425" endtime="20201110 08:38:21.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.428" endtime="20201110 08:38:21.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.400" endtime="20201110 08:38:21.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.398" endtime="20201110 08:38:21.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.438" endtime="20201110 08:38:21.725"></status>
</kw>
<msg timestamp="20201110 08:38:21.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.436" endtime="20201110 08:38:21.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.730" endtime="20201110 08:38:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.738" endtime="20201110 08:38:21.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.433" endtime="20201110 08:38:21.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.431" endtime="20201110 08:38:21.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.745" level="INFO">${RESULT} = [{'time': 0.022729319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.24720000000001e-05, 'source_diff': 8.24720000000001e-05}, {'time': 0.022821306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:21.742" endtime="20201110 08:38:21.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.759" level="INFO">${ACCURACY} = {'diff': [8.24720000000001e-05, 8.322300000000032e-05, 8.306900000000159e-05, 8.270800000000078e-05, 8.319400000000171e-05, 8.322200000000085e-05, 8.308400000000063e-05, 8.308400000000063e-05, 8.27359...</msg>
<status status="PASS" starttime="20201110 08:38:21.746" endtime="20201110 08:38:21.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.764" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.762" endtime="20201110 08:38:21.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.766" level="INFO">VALUE: [8.24720000000001e-05, 8.322300000000032e-05, 8.306900000000159e-05, 8.270800000000078e-05, 8.319400000000171e-05, 8.322200000000085e-05, 8.308400000000063e-05, 8.308400000000063e-05, 8.273599999999992e-05, 8.295800000000103e-05, 8.255599999999752e-05, 8.290299999999876e-05, 8.240200000000225e-05, 8.270900000000025e-05, 8.290199999999928e-05, 8.270800000000078e-05, 8.270800000000078e-05, 8.273599999999992e-05, 8.255500000000152e-05, 8.327699999999966e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.255600000000099e-05, 8.288899999999919e-05, 8.304199999999845e-05, 8.273599999999992e-05, 8.319399999999824e-05, 8.256900000000109e-05, 8.254100000000195e-05, 8.298600000000017e-05, 8.238899999999869e-05, 8.238900000000215e-05, 8.240300000000172e-05, 8.298600000000017e-05, 8.31110000000003e-05, 8.272299999999982e-05, 8.241599999999835e-05, 8.283400000000038e-05, 8.309700000000073e-05, 8.255499999999805e-05, 8.238900000000215e-05, 8.241699999999783e-05, 8.252800000000185e-05, 8.30980000000002e-05, 8.320800000000128e-05, 8.254200000000142e-05, 8.322300000000032e-05, 8.254199999999795e-05, 8.255499999999805e-05, 8.238899999999869e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.765" endtime="20201110 08:38:21.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.760" endtime="20201110 08:38:21.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.770" endtime="20201110 08:38:21.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.774" endtime="20201110 08:38:21.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.772" endtime="20201110 08:38:21.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.768" endtime="20201110 08:38:21.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.396" endtime="20201110 08:38:21.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.396" endtime="20201110 08:38:21.795"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.804" endtime="20201110 08:38:21.823"></status>
</kw>
<msg timestamp="20201110 08:38:21.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.802" endtime="20201110 08:38:21.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.824" endtime="20201110 08:38:21.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.827" endtime="20201110 08:38:21.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.799" endtime="20201110 08:38:21.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.797" endtime="20201110 08:38:21.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.836" endtime="20201110 08:38:22.125"></status>
</kw>
<msg timestamp="20201110 08:38:22.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.835" endtime="20201110 08:38:22.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022771611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022855806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.129" endtime="20201110 08:38:22.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.138" endtime="20201110 08:38:22.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.832" endtime="20201110 08:38:22.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.830" endtime="20201110 08:38:22.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.145" level="INFO">${RESULT} = [{'time': 0.022855806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.419499999999872e-05, 'source_diff': 8.419499999999872e-05}, {'time': 0.022949806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.141" endtime="20201110 08:38:22.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.158" level="INFO">${ACCURACY} = {'diff': [8.419499999999872e-05, 8.340299999999926e-05, 8.420899999999829e-05, 8.415200000000053e-05, 8.359700000000123e-05, 8.333299999999794e-05, 8.377799999999963e-05, 8.372199999999788e-05, 8.3721...</msg>
<status status="PASS" starttime="20201110 08:38:22.146" endtime="20201110 08:38:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.163" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.162" endtime="20201110 08:38:22.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.165" level="INFO">VALUE: [8.419499999999872e-05, 8.340299999999926e-05, 8.420899999999829e-05, 8.415200000000053e-05, 8.359700000000123e-05, 8.333299999999794e-05, 8.377799999999963e-05, 8.372199999999788e-05, 8.372199999999788e-05, 8.355599999999852e-05, 8.338899999999969e-05, 8.354199999999895e-05, 8.370900000000125e-05, 8.355600000000199e-05, 8.426400000000056e-05, 8.404199999999945e-05, 8.336100000000055e-05, 8.354099999999948e-05, 8.390299999999976e-05, 8.338900000000316e-05, 8.387499999999715e-05, 8.362500000000037e-05, 8.422300000000132e-05, 8.409700000000173e-05, 8.352799999999938e-05, 8.404199999999945e-05, 8.388900000000019e-05, 8.388800000000071e-05, 8.336100000000055e-05, 8.354099999999948e-05, 8.338900000000316e-05, 8.422200000000185e-05, 8.390299999999976e-05, 8.355599999999852e-05, 8.338899999999969e-05, 8.423600000000142e-05, 8.381999999999834e-05, 8.387500000000062e-05, 8.351399999999981e-05, 8.373599999999745e-05, 8.355499999999905e-05, 8.381899999999887e-05, 8.422200000000185e-05, 8.338899999999969e-05, 8.423600000000142e-05, 8.354199999999895e-05, 8.354199999999895e-05, 8.413900000000044e-05, 8.388900000000019e-05, 8.356900000000209e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.164" endtime="20201110 08:38:22.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.159" endtime="20201110 08:38:22.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.169" endtime="20201110 08:38:22.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.173" endtime="20201110 08:38:22.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.171" endtime="20201110 08:38:22.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.168" endtime="20201110 08:38:22.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.796" endtime="20201110 08:38:22.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.795" endtime="20201110 08:38:22.194"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.203" endtime="20201110 08:38:22.222"></status>
</kw>
<msg timestamp="20201110 08:38:22.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.201" endtime="20201110 08:38:22.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.223" endtime="20201110 08:38:22.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.226" endtime="20201110 08:38:22.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.198" endtime="20201110 08:38:22.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.196" endtime="20201110 08:38:22.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.235" endtime="20201110 08:38:22.522"></status>
</kw>
<msg timestamp="20201110 08:38:22.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.234" endtime="20201110 08:38:22.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022769236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.526" endtime="20201110 08:38:22.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.535" endtime="20201110 08:38:22.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.231" endtime="20201110 08:38:22.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.229" endtime="20201110 08:38:22.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.541" level="INFO">${RESULT} = [{'time': 0.022769236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.501400000000131e-05, 'source_diff': 8.501400000000131e-05}, {'time': 0.022861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.538" endtime="20201110 08:38:22.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.555" level="INFO">${ACCURACY} = {'diff': [8.501400000000131e-05, 8.452800000000038e-05, 8.468099999999965e-05, 8.438900000000069e-05, 8.470900000000225e-05, 8.472299999999836e-05, 8.505600000000002e-05, 8.522299999999886e-05, 8.4693...</msg>
<status status="PASS" starttime="20201110 08:38:22.542" endtime="20201110 08:38:22.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.560" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.559" endtime="20201110 08:38:22.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.562" level="INFO">VALUE: [8.501400000000131e-05, 8.452800000000038e-05, 8.468099999999965e-05, 8.438900000000069e-05, 8.470900000000225e-05, 8.472299999999836e-05, 8.505600000000002e-05, 8.522299999999886e-05, 8.469399999999974e-05, 8.440300000000026e-05, 8.487500000000162e-05, 8.472199999999888e-05, 8.523599999999895e-05, 8.472200000000235e-05, 8.437500000000112e-05, 8.487500000000162e-05, 8.438900000000069e-05, 8.455599999999952e-05, 8.487500000000162e-05, 8.508299999999969e-05, 8.487499999999815e-05, 8.472199999999888e-05, 8.438900000000069e-05, 8.474999999999802e-05, 8.470799999999931e-05, 8.49309999999999e-05, 8.488900000000119e-05, 8.455599999999952e-05, 8.437500000000112e-05, 8.459699999999876e-05, 8.506900000000012e-05, 8.520799999999981e-05, 8.472199999999888e-05, 8.452699999999744e-05, 8.437500000000112e-05, 8.470800000000278e-05, 8.49859999999987e-05, 8.434700000000198e-05, 8.472199999999888e-05, 8.505600000000002e-05, 8.520899999999929e-05, 8.437500000000112e-05, 8.455500000000005e-05, 8.509699999999926e-05, 8.433299999999894e-05, 8.438900000000069e-05, 8.454199999999995e-05, 8.456899999999962e-05, 8.504200000000045e-05, 8.438899999999722e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.561" endtime="20201110 08:38:22.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.556" endtime="20201110 08:38:22.564"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.566" endtime="20201110 08:38:22.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.570" endtime="20201110 08:38:22.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.568" endtime="20201110 08:38:22.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.565" endtime="20201110 08:38:22.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.195" endtime="20201110 08:38:22.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.194" endtime="20201110 08:38:22.591"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.600" endtime="20201110 08:38:22.619"></status>
</kw>
<msg timestamp="20201110 08:38:22.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.598" endtime="20201110 08:38:22.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.620" endtime="20201110 08:38:22.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.623" endtime="20201110 08:38:22.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.596" endtime="20201110 08:38:22.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.593" endtime="20201110 08:38:22.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.632" endtime="20201110 08:38:22.919"></status>
</kw>
<msg timestamp="20201110 08:38:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.630" endtime="20201110 08:38:22.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022832889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.923" endtime="20201110 08:38:22.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.932" endtime="20201110 08:38:22.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.628" endtime="20201110 08:38:22.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.626" endtime="20201110 08:38:22.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.939" level="INFO">${RESULT} = [{'time': 0.022832889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.5847e-05, 'source_diff': 8.5847e-05}, {'time': 0.022929903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.536100000000255e-...</msg>
<status status="PASS" starttime="20201110 08:38:22.935" endtime="20201110 08:38:22.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.952" level="INFO">${ACCURACY} = {'diff': [8.5847e-05, 8.536100000000255e-05, 8.551399999999834e-05, 8.583399999999991e-05, 8.556899999999715e-05, 8.623599999999995e-05, 8.61799999999982e-05, 8.572199999999988e-05, 8.620800000000081e...</msg>
<status status="PASS" starttime="20201110 08:38:22.940" endtime="20201110 08:38:22.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.957" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.956" endtime="20201110 08:38:22.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.960" level="INFO">VALUE: [8.5847e-05, 8.536100000000255e-05, 8.551399999999834e-05, 8.583399999999991e-05, 8.556899999999715e-05, 8.623599999999995e-05, 8.61799999999982e-05, 8.572199999999988e-05, 8.620800000000081e-05, 8.623599999999995e-05, 8.55980000000027e-05, 8.537500000000212e-05, 8.538900000000169e-05, 8.555600000000052e-05, 8.605600000000102e-05, 8.590199999999881e-05, 8.620900000000029e-05, 8.540300000000126e-05, 8.572199999999988e-05, 8.572199999999988e-05, 8.538899999999822e-05, 8.540300000000126e-05, 8.583399999999991e-05, 8.607000000000059e-05, 8.607000000000059e-05, 8.573699999999893e-05, 8.605499999999808e-05, 8.620900000000029e-05, 8.555500000000105e-05, 8.590299999999829e-05, 8.592999999999795e-05, 8.590300000000176e-05, 8.538900000000169e-05, 8.590299999999829e-05, 8.537499999999865e-05, 8.572199999999988e-05, 8.587499999999915e-05, 8.622299999999986e-05, 8.556900000000062e-05, 8.622200000000038e-05, 8.586099999999958e-05, 8.540299999999779e-05, 8.622200000000038e-05, 8.573599999999945e-05, 8.558400000000313e-05, 8.587500000000262e-05, 8.557000000000009e-05, 8.555600000000052e-05, 8.538900000000169e-05, 8.537499999999865e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.958" endtime="20201110 08:38:22.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.953" endtime="20201110 08:38:22.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.963" endtime="20201110 08:38:22.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.967" endtime="20201110 08:38:22.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.965" endtime="20201110 08:38:22.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.962" endtime="20201110 08:38:22.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.592" endtime="20201110 08:38:22.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.591" endtime="20201110 08:38:22.988"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.997" endtime="20201110 08:38:23.016"></status>
</kw>
<msg timestamp="20201110 08:38:23.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.995" endtime="20201110 08:38:23.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.018" endtime="20201110 08:38:23.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.020" endtime="20201110 08:38:23.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.993" endtime="20201110 08:38:23.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.990" endtime="20201110 08:38:23.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.030" endtime="20201110 08:38:23.317"></status>
</kw>
<msg timestamp="20201110 08:38:23.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.028" endtime="20201110 08:38:23.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022746944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.321" endtime="20201110 08:38:23.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.329" endtime="20201110 08:38:23.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.025" endtime="20201110 08:38:23.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.024" endtime="20201110 08:38:23.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.336" level="INFO">${RESULT} = [{'time': 0.022833278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.633399999999694e-05, 'source_diff': 8.633399999999694e-05}, {'time': 0.022934292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.333" endtime="20201110 08:38:23.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.350" level="INFO">${ACCURACY} = {'diff': [8.633399999999694e-05, 8.705599999999855e-05, 8.642999999999845e-05, 8.687500000000015e-05, 8.722200000000138e-05, 8.691599999999938e-05, 8.706900000000212e-05, 8.686100000000058e-05, 8.6527...</msg>
<status status="PASS" starttime="20201110 08:38:23.337" endtime="20201110 08:38:23.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.355" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.354" endtime="20201110 08:38:23.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.357" level="INFO">VALUE: [8.633399999999694e-05, 8.705599999999855e-05, 8.642999999999845e-05, 8.687500000000015e-05, 8.722200000000138e-05, 8.691599999999938e-05, 8.706900000000212e-05, 8.686100000000058e-05, 8.652799999999891e-05, 8.638899999999922e-05, 8.637499999999965e-05, 8.677699999999969e-05, 8.672300000000036e-05, 8.656900000000162e-05, 8.672300000000036e-05, 8.688800000000024e-05, 8.654099999999901e-05, 8.669400000000174e-05, 8.722199999999791e-05, 8.723600000000095e-05, 8.654199999999848e-05, 8.672200000000088e-05, 8.720800000000181e-05, 8.686100000000058e-05, 8.655600000000152e-05, 8.652699999999944e-05, 8.726400000000009e-05, 8.670800000000131e-05, 8.672200000000088e-05, 8.688899999999972e-05, 8.638900000000269e-05, 8.704199999999898e-05, 8.670800000000131e-05, 8.651399999999934e-05, 8.637499999999965e-05, 8.637500000000312e-05, 8.720899999999782e-05, 8.655499999999858e-05, 8.704099999999951e-05, 8.637499999999965e-05, 8.637499999999965e-05, 8.647200000000063e-05, 8.670800000000131e-05, 8.655599999999805e-05, 8.655600000000152e-05, 8.654200000000195e-05, 8.655600000000152e-05, 8.672299999999689e-05, 8.638899999999922e-05, 8.654199999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.356" endtime="20201110 08:38:23.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.351" endtime="20201110 08:38:23.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.361" endtime="20201110 08:38:23.362"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.365" endtime="20201110 08:38:23.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.363" endtime="20201110 08:38:23.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.359" endtime="20201110 08:38:23.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.989" endtime="20201110 08:38:23.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.988" endtime="20201110 08:38:23.386"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.395" endtime="20201110 08:38:23.413"></status>
</kw>
<msg timestamp="20201110 08:38:23.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.393" endtime="20201110 08:38:23.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.415" endtime="20201110 08:38:23.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.418" endtime="20201110 08:38:23.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.390" endtime="20201110 08:38:23.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.388" endtime="20201110 08:38:23.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.427" endtime="20201110 08:38:23.716"></status>
</kw>
<msg timestamp="20201110 08:38:23.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.425" endtime="20201110 08:38:23.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022659139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022747139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.720" endtime="20201110 08:38:23.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.729" endtime="20201110 08:38:23.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.423" endtime="20201110 08:38:23.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.421" endtime="20201110 08:38:23.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.736" level="INFO">${RESULT} = [{'time': 0.022747139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.800000000000127e-05, 'source_diff': 8.800000000000127e-05}, {'time': 0.022849167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.732" endtime="20201110 08:38:23.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.749" level="INFO">${ACCURACY} = {'diff': [8.800000000000127e-05, 8.737500000000065e-05, 8.786199999999758e-05, 8.804199999999998e-05, 8.738900000000022e-05, 8.78189999999994e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.78890...</msg>
<status status="PASS" starttime="20201110 08:38:23.737" endtime="20201110 08:38:23.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.754" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.753" endtime="20201110 08:38:23.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.757" level="INFO">VALUE: [8.800000000000127e-05, 8.737500000000065e-05, 8.786199999999758e-05, 8.804199999999998e-05, 8.738900000000022e-05, 8.78189999999994e-05, 8.736100000000108e-05, 8.770800000000231e-05, 8.788900000000072e-05, 8.822200000000238e-05, 8.772199999999841e-05, 8.788900000000072e-05, 8.754199999999948e-05, 8.737500000000065e-05, 8.788900000000072e-05, 8.738800000000074e-05, 8.754100000000001e-05, 8.805500000000008e-05, 8.811100000000183e-05, 8.788900000000072e-05, 8.755599999999905e-05, 8.804199999999998e-05, 8.772200000000188e-05, 8.740299999999979e-05, 8.770899999999832e-05, 8.804199999999998e-05, 8.772199999999841e-05, 8.805500000000008e-05, 8.756900000000262e-05, 8.761100000000133e-05, 8.787500000000115e-05, 8.772200000000188e-05, 8.81250000000014e-05, 8.773600000000145e-05, 8.823599999999848e-05, 8.800000000000127e-05, 8.769500000000222e-05, 8.754199999999948e-05, 8.779199999999973e-05, 8.787500000000115e-05, 8.820799999999934e-05, 8.738900000000022e-05, 8.738900000000022e-05, 8.805599999999955e-05, 8.772199999999841e-05, 8.768099999999918e-05, 8.808399999999869e-05, 8.754199999999948e-05, 8.788900000000072e-05, 8.822199999999891e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.755" endtime="20201110 08:38:23.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.750" endtime="20201110 08:38:23.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.760" endtime="20201110 08:38:23.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.764" endtime="20201110 08:38:23.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.762" endtime="20201110 08:38:23.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.759" endtime="20201110 08:38:23.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.387" endtime="20201110 08:38:23.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.386" endtime="20201110 08:38:23.785"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.794" endtime="20201110 08:38:23.813"></status>
</kw>
<msg timestamp="20201110 08:38:23.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.792" endtime="20201110 08:38:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.815" endtime="20201110 08:38:23.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.818" endtime="20201110 08:38:23.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.790" endtime="20201110 08:38:23.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.788" endtime="20201110 08:38:23.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.827" endtime="20201110 08:38:24.114"></status>
</kw>
<msg timestamp="20201110 08:38:24.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.825" endtime="20201110 08:38:24.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022837806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.118" endtime="20201110 08:38:24.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.127" endtime="20201110 08:38:24.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.823" endtime="20201110 08:38:24.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.821" endtime="20201110 08:38:24.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.134" level="INFO">${RESULT} = [{'time': 0.022926417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861100000000233e-05, 'source_diff': 8.861100000000233e-05}, {'time': 0.023026431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:24.130" endtime="20201110 08:38:24.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.147" level="INFO">${ACCURACY} = {'diff': [8.861100000000233e-05, 8.838900000000122e-05, 8.856900000000015e-05, 8.852699999999797e-05, 8.854100000000101e-05, 8.902799999999794e-05, 8.920800000000034e-05, 8.888900000000172e-05, 8.9235...</msg>
<status status="PASS" starttime="20201110 08:38:24.135" endtime="20201110 08:38:24.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.152" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.151" endtime="20201110 08:38:24.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.155" level="INFO">VALUE: [8.861100000000233e-05, 8.838900000000122e-05, 8.856900000000015e-05, 8.852699999999797e-05, 8.854100000000101e-05, 8.902799999999794e-05, 8.920800000000034e-05, 8.888900000000172e-05, 8.923599999999948e-05, 8.920899999999982e-05, 8.872199999999941e-05, 8.905600000000055e-05, 8.838899999999775e-05, 8.850000000000177e-05, 8.927799999999819e-05, 8.911099999999936e-05, 8.904100000000151e-05, 8.918100000000068e-05, 8.854200000000048e-05, 8.869400000000027e-05, 8.873599999999898e-05, 8.872200000000288e-05, 8.887500000000215e-05, 8.86800000000007e-05, 8.84869999999982e-05, 8.922199999999991e-05, 8.855500000000058e-05, 8.867999999999723e-05, 8.890300000000129e-05, 8.838900000000122e-05, 8.870800000000331e-05, 8.922199999999991e-05, 8.873599999999898e-05, 8.920900000000329e-05, 8.870899999999932e-05, 8.919500000000025e-05, 8.886100000000258e-05, 8.838900000000122e-05, 8.922199999999991e-05, 8.922199999999991e-05, 8.891700000000086e-05, 8.905600000000055e-05, 8.872199999999941e-05, 8.837500000000165e-05, 8.891699999999739e-05, 8.837500000000165e-05, 8.891599999999791e-05, 8.843099999999993e-05, 8.920800000000034e-05, 8.920800000000034e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.153" endtime="20201110 08:38:24.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.148" endtime="20201110 08:38:24.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.158" endtime="20201110 08:38:24.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.162" endtime="20201110 08:38:24.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.160" endtime="20201110 08:38:24.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.157" endtime="20201110 08:38:24.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.786" endtime="20201110 08:38:24.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.785" endtime="20201110 08:38:24.183"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.192" endtime="20201110 08:38:24.211"></status>
</kw>
<msg timestamp="20201110 08:38:24.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.190" endtime="20201110 08:38:24.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.213" endtime="20201110 08:38:24.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.215" endtime="20201110 08:38:24.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.188" endtime="20201110 08:38:24.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.185" endtime="20201110 08:38:24.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.225" endtime="20201110 08:38:24.511"></status>
</kw>
<msg timestamp="20201110 08:38:24.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023002625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.223" endtime="20201110 08:38:24.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022912944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023002625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.516" endtime="20201110 08:38:24.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.524" endtime="20201110 08:38:24.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.220" endtime="20201110 08:38:24.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.218" endtime="20201110 08:38:24.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.531" level="INFO">${RESULT} = [{'time': 0.023002625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.968099999999771e-05, 'source_diff': 8.968099999999771e-05}, {'time': 0.023097653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:24.528" endtime="20201110 08:38:24.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.545" level="INFO">${ACCURACY} = {'diff': [8.968099999999771e-05, 9.023600000000048e-05, 9.004199999999851e-05, 8.986100000000011e-05, 8.990299999999882e-05, 8.944400000000102e-05, 8.988799999999977e-05, 9.005499999999861e-05, 9.0194...</msg>
<status status="PASS" starttime="20201110 08:38:24.532" endtime="20201110 08:38:24.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.550" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.549" endtime="20201110 08:38:24.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.552" level="INFO">VALUE: [8.968099999999771e-05, 9.023600000000048e-05, 9.004199999999851e-05, 8.986100000000011e-05, 8.990299999999882e-05, 8.944400000000102e-05, 8.988799999999977e-05, 9.005499999999861e-05, 9.019400000000177e-05, 8.972200000000041e-05, 8.94450000000005e-05, 8.955600000000105e-05, 8.955599999999758e-05, 9.005600000000155e-05, 8.938899999999875e-05, 8.990299999999882e-05, 8.940199999999884e-05, 9.022200000000091e-05, 8.990199999999934e-05, 8.987499999999968e-05, 8.938899999999875e-05, 8.987499999999968e-05, 8.991699999999839e-05, 8.94999999999993e-05, 9.023599999999701e-05, 8.970900000000032e-05, 8.954200000000148e-05, 8.972299999999989e-05, 8.959700000000029e-05, 8.991699999999839e-05, 8.972200000000041e-05, 8.938899999999875e-05, 9.022200000000091e-05, 8.988899999999925e-05, 8.969400000000127e-05, 8.941600000000188e-05, 8.937499999999918e-05, 8.955600000000105e-05, 8.955600000000105e-05, 8.938799999999927e-05, 9.004099999999904e-05, 8.955500000000158e-05, 8.956899999999768e-05, 8.990299999999882e-05, 9.022200000000091e-05, 8.937499999999918e-05, 9.026399999999962e-05, 9.009699999999732e-05, 9.022300000000039e-05, 8.955599999999758e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.551" endtime="20201110 08:38:24.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.546" endtime="20201110 08:38:24.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.556" endtime="20201110 08:38:24.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.559" endtime="20201110 08:38:24.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.558" endtime="20201110 08:38:24.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.554" endtime="20201110 08:38:24.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.184" endtime="20201110 08:38:24.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.183" endtime="20201110 08:38:24.580"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.589" endtime="20201110 08:38:24.609"></status>
</kw>
<msg timestamp="20201110 08:38:24.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.588" endtime="20201110 08:38:24.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.610" endtime="20201110 08:38:24.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.613" endtime="20201110 08:38:24.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.585" endtime="20201110 08:38:24.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.583" endtime="20201110 08:38:24.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.624" endtime="20201110 08:38:24.928"></status>
</kw>
<msg timestamp="20201110 08:38:24.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023236819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.622" endtime="20201110 08:38:24.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023236819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023327986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.932" endtime="20201110 08:38:24.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.940" endtime="20201110 08:38:24.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.619" endtime="20201110 08:38:24.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.617" endtime="20201110 08:38:24.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.949" level="INFO">${RESULT} = [{'time': 0.023327986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.116699999999964e-05, 'source_diff': 9.116699999999964e-05}, {'time': 0.023426, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:38:24.944" endtime="20201110 08:38:24.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.962" level="INFO">${ACCURACY} = {'diff': [9.116699999999964e-05, 9.087499999999721e-05, 9.038899999999975e-05, 9.038900000000322e-05, 9.088900000000025e-05, 9.106999999999865e-05, 9.055599999999858e-05, 9.084800000000101e-05, 9.0707...</msg>
<status status="PASS" starttime="20201110 08:38:24.950" endtime="20201110 08:38:24.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.967" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.966" endtime="20201110 08:38:24.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.969" level="INFO">VALUE: [9.116699999999964e-05, 9.087499999999721e-05, 9.038899999999975e-05, 9.038900000000322e-05, 9.088900000000025e-05, 9.106999999999865e-05, 9.055599999999858e-05, 9.084800000000101e-05, 9.070799999999837e-05, 9.058299999999825e-05, 9.054099999999954e-05, 9.122199999999844e-05, 9.087500000000068e-05, 9.120799999999887e-05, 9.119499999999878e-05, 9.038899999999975e-05, 9.038899999999975e-05, 9.055599999999858e-05, 9.122199999999844e-05, 9.06939999999988e-05, 9.104100000000004e-05, 9.123600000000148e-05, 9.073599999999751e-05, 9.072200000000141e-05, 9.070800000000184e-05, 9.087500000000068e-05, 9.120899999999835e-05, 9.120900000000182e-05, 9.075000000000055e-05, 9.105499999999961e-05, 9.120799999999887e-05, 9.120800000000234e-05, 9.038899999999975e-05, 9.122199999999844e-05, 9.088900000000025e-05, 9.088900000000025e-05, 9.070799999999837e-05, 9.070899999999785e-05, 9.055600000000205e-05, 9.073600000000098e-05, 9.120799999999887e-05, 9.106899999999918e-05, 9.054099999999954e-05, 9.125000000000105e-05, 9.051399999999987e-05, 9.090299999999982e-05, 9.038899999999975e-05, 9.077699999999675e-05, 9.054199999999901e-05, 9.104199999999951e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.968" endtime="20201110 08:38:24.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.963" endtime="20201110 08:38:24.971"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.973" endtime="20201110 08:38:24.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.976" endtime="20201110 08:38:24.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.975" endtime="20201110 08:38:24.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.971" endtime="20201110 08:38:24.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.581" endtime="20201110 08:38:24.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.581" endtime="20201110 08:38:24.997"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.006" endtime="20201110 08:38:25.026"></status>
</kw>
<msg timestamp="20201110 08:38:25.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.005" endtime="20201110 08:38:25.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.027" endtime="20201110 08:38:25.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.030" endtime="20201110 08:38:25.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.002" endtime="20201110 08:38:25.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.000" endtime="20201110 08:38:25.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.039" endtime="20201110 08:38:25.326"></status>
</kw>
<msg timestamp="20201110 08:38:25.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.037" endtime="20201110 08:38:25.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023367014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023459028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.330" endtime="20201110 08:38:25.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.338" endtime="20201110 08:38:25.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.035" endtime="20201110 08:38:25.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.033" endtime="20201110 08:38:25.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.345" level="INFO">${RESULT} = [{'time': 0.023459028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.201400000000137e-05, 'source_diff': 9.201400000000137e-05}, {'time': 0.023562042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:25.342" endtime="20201110 08:38:25.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.358" level="INFO">${ACCURACY} = {'diff': [9.201400000000137e-05, 9.137499999999771e-05, 9.147300000000164e-05, 9.169499999999928e-05, 9.155500000000011e-05, 9.138900000000075e-05, 9.154100000000054e-05, 9.173599999999851e-05, 9.1875...</msg>
<status status="PASS" starttime="20201110 08:38:25.346" endtime="20201110 08:38:25.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.362" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.361" endtime="20201110 08:38:25.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.365" level="INFO">VALUE: [9.201400000000137e-05, 9.137499999999771e-05, 9.147300000000164e-05, 9.169499999999928e-05, 9.155500000000011e-05, 9.138900000000075e-05, 9.154100000000054e-05, 9.173599999999851e-05, 9.187500000000168e-05, 9.21940000000003e-05, 9.205600000000008e-05, 9.187499999999821e-05, 9.222300000000239e-05, 9.205600000000008e-05, 9.169499999999928e-05, 9.220799999999987e-05, 9.172200000000241e-05, 9.138900000000075e-05, 9.140300000000032e-05, 9.188899999999778e-05, 9.170799999999937e-05, 9.170799999999937e-05, 9.155599999999958e-05, 9.142999999999998e-05, 9.154200000000001e-05, 9.211100000000236e-05, 9.137500000000118e-05, 9.199999999999833e-05, 9.172200000000241e-05, 9.141699999999989e-05, 9.137500000000118e-05, 9.204200000000051e-05, 9.169499999999928e-05, 9.220899999999935e-05, 9.133399999999847e-05, 9.156899999999968e-05, 9.206900000000018e-05, 9.170799999999937e-05, 9.204100000000104e-05, 9.184699999999907e-05, 9.186100000000211e-05, 9.222200000000291e-05, 9.155599999999958e-05, 9.222199999999944e-05, 9.187499999999821e-05, 9.172300000000189e-05, 9.188900000000125e-05, 9.13879999999978e-05, 9.172199999999894e-05, 9.205499999999714e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.364" endtime="20201110 08:38:25.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.359" endtime="20201110 08:38:25.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.368" endtime="20201110 08:38:25.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.372" endtime="20201110 08:38:25.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.370" endtime="20201110 08:38:25.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.367" endtime="20201110 08:38:25.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.998" endtime="20201110 08:38:25.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.997" endtime="20201110 08:38:25.393"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.401" endtime="20201110 08:38:25.421"></status>
</kw>
<msg timestamp="20201110 08:38:25.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.400" endtime="20201110 08:38:25.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.422" endtime="20201110 08:38:25.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.425" endtime="20201110 08:38:25.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.397" endtime="20201110 08:38:25.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.395" endtime="20201110 08:38:25.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.434" endtime="20201110 08:38:25.721"></status>
</kw>
<msg timestamp="20201110 08:38:25.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.432" endtime="20201110 08:38:25.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022328917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022421403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.726" endtime="20201110 08:38:25.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.734" endtime="20201110 08:38:25.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.430" endtime="20201110 08:38:25.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.428" endtime="20201110 08:38:25.736"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.740" level="INFO">${RESULT} = [{'time': 0.022421403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.248599999999926e-05, 'source_diff': 9.248599999999926e-05}, {'time': 0.022520417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:25.737" endtime="20201110 08:38:25.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.754" level="INFO">${ACCURACY} = {'diff': [9.248599999999926e-05, 9.255600000000058e-05, 9.326399999999915e-05, 9.305599999999761e-05, 9.26940000000008e-05, 9.238899999999828e-05, 9.270800000000037e-05, 9.320800000000087e-05, 9.23890...</msg>
<status status="PASS" starttime="20201110 08:38:25.741" endtime="20201110 08:38:25.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.758" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.757" endtime="20201110 08:38:25.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.760" level="INFO">VALUE: [9.248599999999926e-05, 9.255600000000058e-05, 9.326399999999915e-05, 9.305599999999761e-05, 9.26940000000008e-05, 9.238899999999828e-05, 9.270800000000037e-05, 9.320800000000087e-05, 9.238900000000175e-05, 9.237500000000218e-05, 9.273600000000298e-05, 9.287500000000268e-05, 9.238900000000175e-05, 9.320900000000035e-05, 9.270899999999985e-05, 9.322200000000044e-05, 9.317999999999826e-05, 9.322200000000044e-05, 9.255500000000111e-05, 9.302799999999847e-05, 9.237499999999871e-05, 9.238899999999828e-05, 9.302799999999847e-05, 9.276400000000212e-05, 9.237499999999871e-05, 9.269500000000028e-05, 9.287500000000268e-05, 9.309700000000032e-05, 9.240300000000132e-05, 9.256900000000068e-05, 9.322200000000044e-05, 9.320800000000087e-05, 9.276299999999918e-05, 9.308400000000022e-05, 9.307000000000065e-05, 9.322299999999992e-05, 9.255499999999764e-05, 9.270800000000037e-05, 9.327799999999872e-05, 9.272199999999994e-05, 9.31940000000013e-05, 9.240300000000132e-05, 9.322200000000044e-05, 9.290300000000182e-05, 9.270899999999985e-05, 9.288899999999878e-05, 9.255600000000058e-05, 9.272199999999994e-05, 9.29590000000001e-05, 9.249999999999883e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.759" endtime="20201110 08:38:25.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.754" endtime="20201110 08:38:25.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.764" endtime="20201110 08:38:25.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.767" endtime="20201110 08:38:25.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.766" endtime="20201110 08:38:25.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.762" endtime="20201110 08:38:25.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.394" endtime="20201110 08:38:25.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.393" endtime="20201110 08:38:25.788"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.797" endtime="20201110 08:38:25.815"></status>
</kw>
<msg timestamp="20201110 08:38:25.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.795" endtime="20201110 08:38:25.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.817" endtime="20201110 08:38:25.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.819" endtime="20201110 08:38:25.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.793" endtime="20201110 08:38:25.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.791" endtime="20201110 08:38:25.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.828" endtime="20201110 08:38:26.114"></status>
</kw>
<msg timestamp="20201110 08:38:26.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.827" endtime="20201110 08:38:26.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022219833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.118" endtime="20201110 08:38:26.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.126" endtime="20201110 08:38:26.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.824" endtime="20201110 08:38:26.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.822" endtime="20201110 08:38:26.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.133" level="INFO">${RESULT} = [{'time': 0.022313667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.38339999999975e-05, 'source_diff': 9.38339999999975e-05}, {'time': 0.022411694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:26.130" endtime="20201110 08:38:26.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.146" level="INFO">${ACCURACY} = {'diff': [9.38339999999975e-05, 9.340199999999937e-05, 9.390199999999987e-05, 9.354099999999907e-05, 9.388899999999978e-05, 9.370800000000137e-05, 9.423599999999754e-05, 9.365300000000257e-05, 9.42079...</msg>
<status status="PASS" starttime="20201110 08:38:26.134" endtime="20201110 08:38:26.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.151" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.150" endtime="20201110 08:38:26.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.153" level="INFO">VALUE: [9.38339999999975e-05, 9.340199999999937e-05, 9.390199999999987e-05, 9.354099999999907e-05, 9.388899999999978e-05, 9.370800000000137e-05, 9.423599999999754e-05, 9.365300000000257e-05, 9.42079999999984e-05, 9.388899999999978e-05, 9.388899999999978e-05, 9.387500000000021e-05, 9.336199999999961e-05, 9.405499999999914e-05, 9.369399999999833e-05, 9.422200000000144e-05, 9.423600000000101e-05, 9.372199999999747e-05, 9.404199999999904e-05, 9.370800000000137e-05, 9.373600000000051e-05, 9.355599999999811e-05, 9.372300000000042e-05, 9.354199999999854e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.422200000000144e-05, 9.41529999999996e-05, 9.349999999999983e-05, 9.387500000000021e-05, 9.405599999999861e-05, 9.422300000000092e-05, 9.411100000000089e-05, 9.373600000000051e-05, 9.372199999999747e-05, 9.355499999999864e-05, 9.336100000000014e-05, 9.3333000000001e-05, 9.338899999999928e-05, 9.405600000000208e-05, 9.402800000000294e-05, 9.404199999999904e-05, 9.372300000000042e-05, 9.337499999999971e-05, 9.38339999999975e-05, 9.394500000000153e-05, 9.409700000000132e-05, 9.388899999999978e-05, 9.408299999999828e-05, 9.368000000000223e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.152" endtime="20201110 08:38:26.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.147" endtime="20201110 08:38:26.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.162" endtime="20201110 08:38:26.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.165" endtime="20201110 08:38:26.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.164" endtime="20201110 08:38:26.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.160" endtime="20201110 08:38:26.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.789" endtime="20201110 08:38:26.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.789" endtime="20201110 08:38:26.186"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.194" endtime="20201110 08:38:26.214"></status>
</kw>
<msg timestamp="20201110 08:38:26.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.193" endtime="20201110 08:38:26.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.216" endtime="20201110 08:38:26.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.218" endtime="20201110 08:38:26.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.190" endtime="20201110 08:38:26.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.188" endtime="20201110 08:38:26.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.227" endtime="20201110 08:38:26.514"></status>
</kw>
<msg timestamp="20201110 08:38:26.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.226" endtime="20201110 08:38:26.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022177792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022272819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.518" endtime="20201110 08:38:26.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.526" endtime="20201110 08:38:26.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.223" endtime="20201110 08:38:26.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.221" endtime="20201110 08:38:26.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.533" level="INFO">${RESULT} = [{'time': 0.022272819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.502699999999753e-05, 'source_diff': 9.502699999999753e-05}, {'time': 0.022373819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:26.529" endtime="20201110 08:38:26.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.546" level="INFO">${ACCURACY} = {'diff': [9.502699999999753e-05, 9.51660000000007e-05, 9.522199999999897e-05, 9.523599999999854e-05, 9.519399999999983e-05, 9.484700000000207e-05, 9.494500000000253e-05, 9.522199999999897e-05, 9.43749...</msg>
<status status="PASS" starttime="20201110 08:38:26.534" endtime="20201110 08:38:26.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.550" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.549" endtime="20201110 08:38:26.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.553" level="INFO">VALUE: [9.502699999999753e-05, 9.51660000000007e-05, 9.522199999999897e-05, 9.523599999999854e-05, 9.519399999999983e-05, 9.484700000000207e-05, 9.494500000000253e-05, 9.522199999999897e-05, 9.437499999999724e-05, 9.455599999999911e-05, 9.520899999999888e-05, 9.477800000000022e-05, 9.505500000000014e-05, 9.52079999999994e-05, 9.480599999999936e-05, 9.455499999999964e-05, 9.527800000000072e-05, 9.522200000000244e-05, 9.47079999999989e-05, 9.505599999999961e-05, 9.491600000000044e-05, 9.490200000000087e-05, 9.505500000000014e-05, 9.470800000000237e-05, 9.454100000000007e-05, 9.502800000000047e-05, 9.431899999999896e-05, 9.522199999999897e-05, 9.437499999999724e-05, 9.472300000000142e-05, 9.507000000000265e-05, 9.438900000000028e-05, 9.48880000000013e-05, 9.48469999999986e-05, 9.440299999999985e-05, 9.509700000000232e-05, 9.466699999999967e-05, 9.522200000000244e-05, 9.437499999999724e-05, 9.486100000000164e-05, 9.488900000000078e-05, 9.472299999999795e-05, 9.455499999999964e-05, 9.522200000000244e-05, 9.526399999999768e-05, 9.45270000000005e-05, 9.519399999999983e-05, 9.505599999999961e-05, 9.437500000000071e-05, 9.438900000000028e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.552" endtime="20201110 08:38:26.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.547" endtime="20201110 08:38:26.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.556" endtime="20201110 08:38:26.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.560" endtime="20201110 08:38:26.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.558" endtime="20201110 08:38:26.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.555" endtime="20201110 08:38:26.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.187" endtime="20201110 08:38:26.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.186" endtime="20201110 08:38:26.581"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.589" endtime="20201110 08:38:26.609"></status>
</kw>
<msg timestamp="20201110 08:38:26.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.588" endtime="20201110 08:38:26.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.610" endtime="20201110 08:38:26.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.612" endtime="20201110 08:38:26.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.585" endtime="20201110 08:38:26.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.583" endtime="20201110 08:38:26.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.621" endtime="20201110 08:38:26.909"></status>
</kw>
<msg timestamp="20201110 08:38:26.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.620" endtime="20201110 08:38:26.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022205819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.913" endtime="20201110 08:38:26.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.921" endtime="20201110 08:38:26.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.617" endtime="20201110 08:38:26.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.616" endtime="20201110 08:38:26.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.928" level="INFO">${RESULT} = [{'time': 0.022301194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.537499999999824e-05, 'source_diff': 9.537499999999824e-05}, {'time': 0.022405153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:26.925" endtime="20201110 08:38:26.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.941" level="INFO">${ACCURACY} = {'diff': [9.537499999999824e-05, 9.588900000000178e-05, 9.555600000000011e-05, 9.555600000000011e-05, 9.537499999999824e-05, 9.605499999999767e-05, 9.57079999999999e-05, 9.555500000000064e-05, 9.55280...</msg>
<status status="PASS" starttime="20201110 08:38:26.929" endtime="20201110 08:38:26.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.946" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.945" endtime="20201110 08:38:26.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.948" level="INFO">VALUE: [9.537499999999824e-05, 9.588900000000178e-05, 9.555600000000011e-05, 9.555600000000011e-05, 9.537499999999824e-05, 9.605499999999767e-05, 9.57079999999999e-05, 9.555500000000064e-05, 9.552800000000097e-05, 9.588899999999831e-05, 9.558399999999925e-05, 9.537500000000171e-05, 9.536100000000214e-05, 9.584799999999907e-05, 9.534800000000204e-05, 9.591600000000144e-05, 9.588899999999831e-05, 9.572199999999947e-05, 9.622199999999997e-05, 9.626399999999868e-05, 9.607000000000018e-05, 9.62080000000004e-05, 9.555600000000011e-05, 9.587499999999874e-05, 9.555600000000011e-05, 9.58880000000023e-05, 9.58059999999969e-05, 9.609699999999985e-05, 9.559699999999935e-05, 9.537499999999824e-05, 9.625000000000258e-05, 9.555600000000011e-05, 9.572199999999947e-05, 9.605599999999714e-05, 9.537499999999824e-05, 9.549999999999836e-05, 9.554100000000107e-05, 9.55270000000015e-05, 9.573599999999904e-05, 9.626399999999868e-05, 9.630499999999792e-05, 9.605600000000061e-05, 9.623599999999954e-05, 9.536099999999867e-05, 9.588900000000178e-05, 9.536200000000161e-05, 9.538799999999834e-05, 9.62080000000004e-05, 9.538899999999781e-05, 9.605499999999767e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.947" endtime="20201110 08:38:26.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.942" endtime="20201110 08:38:26.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.952" endtime="20201110 08:38:26.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.955" endtime="20201110 08:38:26.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.954" endtime="20201110 08:38:26.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.950" endtime="20201110 08:38:26.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.582" endtime="20201110 08:38:26.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.581" endtime="20201110 08:38:26.976"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.984" endtime="20201110 08:38:27.004"></status>
</kw>
<msg timestamp="20201110 08:38:27.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.983" endtime="20201110 08:38:27.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.005" endtime="20201110 08:38:27.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.008" endtime="20201110 08:38:27.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.980" endtime="20201110 08:38:27.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.978" endtime="20201110 08:38:27.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.017" endtime="20201110 08:38:27.303"></status>
</kw>
<msg timestamp="20201110 08:38:27.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.015" endtime="20201110 08:38:27.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.307" endtime="20201110 08:38:27.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.316" endtime="20201110 08:38:27.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.013" endtime="20201110 08:38:27.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.011" endtime="20201110 08:38:27.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.322" level="INFO">${RESULT} = [{'time': 0.022258806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.668099999999777e-05, 'source_diff': 9.668099999999777e-05}, {'time': 0.022364833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.319" endtime="20201110 08:38:27.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.335" level="INFO">${ACCURACY} = {'diff': [9.668099999999777e-05, 9.723600000000054e-05, 9.672200000000047e-05, 9.705499999999867e-05, 9.637499999999924e-05, 9.67080000000009e-05, 9.722200000000097e-05, 9.673600000000004e-05, 9.65559...</msg>
<status status="PASS" starttime="20201110 08:38:27.323" endtime="20201110 08:38:27.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.340" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.339" endtime="20201110 08:38:27.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.342" level="INFO">VALUE: [9.668099999999777e-05, 9.723600000000054e-05, 9.672200000000047e-05, 9.705499999999867e-05, 9.637499999999924e-05, 9.67080000000009e-05, 9.722200000000097e-05, 9.673600000000004e-05, 9.655599999999764e-05, 9.638899999999881e-05, 9.656900000000121e-05, 9.722200000000097e-05, 9.637499999999924e-05, 9.688899999999931e-05, 9.719400000000183e-05, 9.640299999999838e-05, 9.640300000000185e-05, 9.672200000000047e-05, 9.674999999999961e-05, 9.688900000000278e-05, 9.673600000000004e-05, 9.630600000000086e-05, 9.702699999999953e-05, 9.705499999999867e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.637500000000271e-05, 9.719500000000131e-05, 9.688899999999931e-05, 9.637499999999924e-05, 9.636099999999967e-05, 9.673600000000004e-05, 9.67080000000009e-05, 9.655499999999817e-05, 9.72219999999975e-05, 9.655600000000111e-05, 9.638899999999881e-05, 9.705599999999814e-05, 9.701399999999943e-05, 9.655600000000111e-05, 9.722300000000045e-05, 9.722300000000045e-05, 9.720799999999793e-05, 9.722200000000097e-05, 9.66530000000021e-05, 9.722200000000097e-05, 9.636099999999967e-05, 9.672200000000047e-05, 9.719500000000131e-05, 9.651399999999893e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.341" endtime="20201110 08:38:27.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.336" endtime="20201110 08:38:27.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.346" endtime="20201110 08:38:27.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.349" endtime="20201110 08:38:27.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.348" endtime="20201110 08:38:27.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.344" endtime="20201110 08:38:27.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.977" endtime="20201110 08:38:27.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.976" endtime="20201110 08:38:27.370"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.378" endtime="20201110 08:38:27.398"></status>
</kw>
<msg timestamp="20201110 08:38:27.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.377" endtime="20201110 08:38:27.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.399" endtime="20201110 08:38:27.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.402" endtime="20201110 08:38:27.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.374" endtime="20201110 08:38:27.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.372" endtime="20201110 08:38:27.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.410" endtime="20201110 08:38:27.698"></status>
</kw>
<msg timestamp="20201110 08:38:27.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:27.409" endtime="20201110 08:38:27.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246028, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:27.704" endtime="20201110 08:38:27.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.714" endtime="20201110 08:38:27.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.406" endtime="20201110 08:38:27.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.405" endtime="20201110 08:38:27.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.720" level="INFO">${RESULT} = [{'time': 0.022246028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.8028e-05, 'source_diff': 9.8028e-05}, {'time': 0.022358, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.788900000000031e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:27.717" endtime="20201110 08:38:27.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.734" level="INFO">${ACCURACY} = {'diff': [9.8028e-05, 9.788900000000031e-05, 9.818099999999927e-05, 9.806999999999871e-05, 9.738899999999981e-05, 9.738899999999981e-05, 9.768099999999877e-05, 9.752700000000003e-05, 9.755499999999917...</msg>
<status status="PASS" starttime="20201110 08:38:27.721" endtime="20201110 08:38:27.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.743" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.741" endtime="20201110 08:38:27.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.748" level="INFO">VALUE: [9.8028e-05, 9.788900000000031e-05, 9.818099999999927e-05, 9.806999999999871e-05, 9.738899999999981e-05, 9.738899999999981e-05, 9.768099999999877e-05, 9.752700000000003e-05, 9.755499999999917e-05, 9.75279999999995e-05, 9.737499999999677e-05, 9.826400000000068e-05, 9.74860000000008e-05, 9.740299999999938e-05, 9.808399999999828e-05, 9.755600000000211e-05, 9.805599999999914e-05, 9.82219999999985e-05, 9.77080000000019e-05, 9.772200000000147e-05, 9.822200000000197e-05, 9.731899999999849e-05, 9.787500000000074e-05, 9.744400000000208e-05, 9.7721999999998e-05, 9.772200000000147e-05, 9.756900000000221e-05, 9.734800000000057e-05, 9.775000000000061e-05, 9.822200000000197e-05, 9.756899999999874e-05, 9.76799999999993e-05, 9.7721999999998e-05, 9.788900000000031e-05, 9.783399999999803e-05, 9.787499999999727e-05, 9.794399999999912e-05, 9.763900000000006e-05, 9.738899999999981e-05, 9.788900000000031e-05, 9.773599999999757e-05, 9.755499999999917e-05, 9.788900000000031e-05, 9.741700000000242e-05, 9.787500000000074e-05, 9.788900000000031e-05, 9.806999999999871e-05, 9.786200000000064e-05, 9.770799999999843e-05, 9.770799999999843e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.745" endtime="20201110 08:38:27.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.735" endtime="20201110 08:38:27.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.755" endtime="20201110 08:38:27.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.762" endtime="20201110 08:38:27.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.759" endtime="20201110 08:38:27.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.752" endtime="20201110 08:38:27.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.371" endtime="20201110 08:38:27.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.370" endtime="20201110 08:38:27.791"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.830" endtime="20201110 08:38:27.854"></status>
</kw>
<msg timestamp="20201110 08:38:27.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.823" endtime="20201110 08:38:27.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.857" endtime="20201110 08:38:27.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.862" endtime="20201110 08:38:27.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.812" endtime="20201110 08:38:27.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.804" endtime="20201110 08:38:27.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.879" endtime="20201110 08:38:28.166"></status>
</kw>
<msg timestamp="20201110 08:38:28.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063720083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.877" endtime="20201110 08:38:28.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063720083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063819264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.170" endtime="20201110 08:38:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.178" endtime="20201110 08:38:28.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.872" endtime="20201110 08:38:28.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.869" endtime="20201110 08:38:28.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.185" level="INFO">${RESULT} = [{'time': 0.063819264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.918100000000374e-05, 'source_diff': 9.918100000000374e-05}, {'time': 0.063929292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.182" endtime="20201110 08:38:28.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.198" level="INFO">${ACCURACY} = {'diff': [9.918100000000374e-05, 9.890299999999741e-05, 9.854200000000701e-05, 9.890300000001129e-05, 9.83880000000048e-05, 9.868000000000376e-05, 9.905500000000067e-05, 9.854200000000701e-05, 9.90550...</msg>
<status status="PASS" starttime="20201110 08:38:28.186" endtime="20201110 08:38:28.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.203" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.202" endtime="20201110 08:38:28.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.205" level="INFO">VALUE: [9.918100000000374e-05, 9.890299999999741e-05, 9.854200000000701e-05, 9.890300000001129e-05, 9.83880000000048e-05, 9.868000000000376e-05, 9.905500000000067e-05, 9.854200000000701e-05, 9.905500000000067e-05, 9.838900000000428e-05, 9.837499999999777e-05, 9.922199999999604e-05, 9.856999999999227e-05, 9.891600000000444e-05, 9.920900000000288e-05, 9.838799999999093e-05, 9.927799999999432e-05, 9.866700000001061e-05, 9.905500000000067e-05, 9.840299999999691e-05, 9.837499999999777e-05, 9.850000000000136e-05, 9.845799999999572e-05, 9.854199999999314e-05, 9.872299999999501e-05, 9.905500000000067e-05, 9.893099999999655e-05, 9.870799999998903e-05, 9.891699999999004e-05, 9.905600000000014e-05, 9.922199999999604e-05, 9.887499999999827e-05, 9.905600000000014e-05, 9.855599999999964e-05, 9.855500000000017e-05, 9.855500000000017e-05, 9.855500000000017e-05, 9.874999999999468e-05, 9.855500000000017e-05, 9.837499999999777e-05, 9.857000000000615e-05, 9.920900000000288e-05, 9.922300000000939e-05, 9.844399999998921e-05, 9.83880000000048e-05, 9.923600000000254e-05, 9.872200000000941e-05, 9.9028000000001e-05, 9.922199999999604e-05, 9.872199999999554e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.204" endtime="20201110 08:38:28.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.199" endtime="20201110 08:38:28.207"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.209" endtime="20201110 08:38:28.210"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.213" endtime="20201110 08:38:28.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.211" endtime="20201110 08:38:28.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.207" endtime="20201110 08:38:28.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.797" endtime="20201110 08:38:28.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.794" endtime="20201110 08:38:28.233"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.242" endtime="20201110 08:38:28.262"></status>
</kw>
<msg timestamp="20201110 08:38:28.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.241" endtime="20201110 08:38:28.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.263" endtime="20201110 08:38:28.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.266" endtime="20201110 08:38:28.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.238" endtime="20201110 08:38:28.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.236" endtime="20201110 08:38:28.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.275" endtime="20201110 08:38:28.562"></status>
</kw>
<msg timestamp="20201110 08:38:28.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.273" endtime="20201110 08:38:28.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.566" endtime="20201110 08:38:28.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.574" endtime="20201110 08:38:28.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.270" endtime="20201110 08:38:28.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.269" endtime="20201110 08:38:28.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.581" level="INFO">${RESULT} = [{'time': 0.022435014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.998599999999983e-05, 'source_diff': 9.998599999999983e-05}, {'time': 0.022547028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.577" endtime="20201110 08:38:28.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.594" level="INFO">${ACCURACY} = {'diff': [9.998599999999983e-05, 0.00010002799999999853, 0.00010020899999999694, 9.951399999999846e-05, 0.00010023600000000008, 9.938899999999834e-05, 0.00010005500000000167, 9.95549999999977e-05, 0.0...</msg>
<status status="PASS" starttime="20201110 08:38:28.581" endtime="20201110 08:38:28.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.598" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.597" endtime="20201110 08:38:28.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.601" level="INFO">VALUE: [9.998599999999983e-05, 0.00010002799999999853, 0.00010020899999999694, 9.951399999999846e-05, 0.00010023600000000008, 9.938899999999834e-05, 0.00010005500000000167, 9.95549999999977e-05, 0.0001002220000000005, 9.940300000000138e-05, 0.00010020899999999694, 0.00010020900000000041, 9.954200000000107e-05, 9.972299999999948e-05, 0.00010030599999999792, 9.956899999999727e-05, 9.955500000000117e-05, 9.988899999999884e-05, 0.0001002220000000005, 0.00010024999999999964, 9.987499999999927e-05, 9.937499999999877e-05, 0.00010005600000000114, 9.987499999999927e-05, 9.9722e-05, 9.9722e-05, 9.973599999999957e-05, 9.940300000000138e-05, 9.997200000000026e-05, 0.00010008300000000081, 0.00010004200000000157, 9.955600000000064e-05, 0.00010005600000000114, 9.938899999999834e-05, 0.00010020799999999747, 9.937499999999877e-05, 9.955500000000117e-05, 9.9722e-05, 0.00010005599999999767, 9.9722e-05, 0.0001002220000000005, 0.00010020900000000041, 9.984800000000307e-05, 0.00010023600000000008, 9.991700000000145e-05, 9.940300000000138e-05, 9.9722e-05, 0.00010020799999999747, 9.9722e-05, 9.955600000000064e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.599" endtime="20201110 08:38:28.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.595" endtime="20201110 08:38:28.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.604" endtime="20201110 08:38:28.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.608" endtime="20201110 08:38:28.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.606" endtime="20201110 08:38:28.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.603" endtime="20201110 08:38:28.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.234" endtime="20201110 08:38:28.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.234" endtime="20201110 08:38:28.629"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.637" endtime="20201110 08:38:28.657"></status>
</kw>
<msg timestamp="20201110 08:38:28.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.636" endtime="20201110 08:38:28.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.659" endtime="20201110 08:38:28.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.661" endtime="20201110 08:38:28.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.633" endtime="20201110 08:38:28.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.631" endtime="20201110 08:38:28.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.670" endtime="20201110 08:38:28.958"></status>
</kw>
<msg timestamp="20201110 08:38:28.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.669" endtime="20201110 08:38:28.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022606875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022707667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.962" endtime="20201110 08:38:28.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.970" endtime="20201110 08:38:28.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.666" endtime="20201110 08:38:28.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.665" endtime="20201110 08:38:28.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.977" level="INFO">${RESULT} = [{'time': 0.022707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010079200000000232, 'source_diff': 0.00010079200000000232}, {'time': 0.022821667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:28.973" endtime="20201110 08:38:28.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.990" level="INFO">${ACCURACY} = {'diff': [0.00010079200000000232, 0.00010038899999999934, 0.00010086200000000017, 0.00010101399999999996, 0.00010090199999999994, 0.0001012220000000015, 0.00010123600000000108, 0.0001005419999999986, ...</msg>
<status status="PASS" starttime="20201110 08:38:28.978" endtime="20201110 08:38:28.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.994" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.993" endtime="20201110 08:38:28.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.997" level="INFO">VALUE: [0.00010079200000000232, 0.00010038899999999934, 0.00010086200000000017, 0.00010101399999999996, 0.00010090199999999994, 0.0001012220000000015, 0.00010123600000000108, 0.0001005419999999986, 0.00010054200000000207, 0.00010122199999999804, 0.00010120899999999794, 0.00010122300000000098, 0.00010127799999999978, 0.00010090199999999994, 0.00010106899999999877, 0.00010072199999999754, 0.00010093100000000202, 0.00010123600000000108, 0.00010111100000000095, 0.0001004999999999999, 0.00010055599999999817, 0.0001003610000000002, 0.00010072300000000048, 0.00010054099999999913, 0.00010072199999999754, 0.00010106900000000224, 0.00010112500000000052, 0.00010122199999999804, 0.00010072199999999754, 0.00010107000000000171, 0.00010122300000000098, 0.00010122300000000098, 0.00010087500000000027, 0.00010054099999999913, 0.000100722000000001, 0.00010043099999999805, 0.00010040299999999891, 0.00010120799999999847, 0.00010105599999999867, 0.00010106999999999824, 0.00010055600000000164, 0.00010069499999999787, 0.0001005419999999986, 0.00010069400000000187, 0.00010067999999999883, 0.00010038899999999934, 0.00010105500000000267, 0.00010066699999999873, 0.0001008749999999968, 0.00010055600000000164]</msg>
<status status="PASS" starttime="20201110 08:38:28.995" endtime="20201110 08:38:28.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.991" endtime="20201110 08:38:28.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.000" endtime="20201110 08:38:29.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.004" endtime="20201110 08:38:29.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.002" endtime="20201110 08:38:29.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.999" endtime="20201110 08:38:29.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.629" endtime="20201110 08:38:29.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.629" endtime="20201110 08:38:29.025"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.034" endtime="20201110 08:38:29.054"></status>
</kw>
<msg timestamp="20201110 08:38:29.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.032" endtime="20201110 08:38:29.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.055" endtime="20201110 08:38:29.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.058" endtime="20201110 08:38:29.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.029" endtime="20201110 08:38:29.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.027" endtime="20201110 08:38:29.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.067" endtime="20201110 08:38:29.354"></status>
</kw>
<msg timestamp="20201110 08:38:29.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.065" endtime="20201110 08:38:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022693778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.358" endtime="20201110 08:38:29.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.366" endtime="20201110 08:38:29.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.063" endtime="20201110 08:38:29.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.061" endtime="20201110 08:38:29.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.373" level="INFO">${RESULT} = [{'time': 0.022795625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010184699999999866, 'source_diff': 0.00010184699999999866}, {'time': 0.022911611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:29.370" endtime="20201110 08:38:29.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.386" level="INFO">${ACCURACY} = {'diff': [0.00010184699999999866, 0.0001013749999999973, 0.00010137500000000077, 0.00010219499999999937, 0.00010137500000000077, 0.00010138900000000034, 0.00010194399999999965, 0.00010137500000000077,...</msg>
<status status="PASS" starttime="20201110 08:38:29.374" endtime="20201110 08:38:29.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.391" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.390" endtime="20201110 08:38:29.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.393" level="INFO">VALUE: [0.00010184699999999866, 0.0001013749999999973, 0.00010137500000000077, 0.00010219499999999937, 0.00010137500000000077, 0.00010138900000000034, 0.00010194399999999965, 0.00010137500000000077, 0.000101722000000002, 0.00010206899999999977, 0.0001018749999999978, 0.00010205599999999967, 0.00010156999999999874, 0.00010190300000000041, 0.00010222300000000198, 0.0001015419999999996, 0.00010193099999999955, 0.00010154100000000013, 0.00010220799999999947, 0.00010138900000000034, 0.0001022220000000025, 0.00010206999999999924, 0.0001017359999999981, 0.00010138900000000034, 0.00010222299999999851, 0.000101819999999999, 0.0001020420000000001, 0.00010152700000000056, 0.00010174999999999768, 0.00010140299999999991, 0.00010155599999999917, 0.00010222199999999904, 0.0001022220000000025, 0.00010222300000000198, 0.00010170900000000191, 0.00010219499999999937, 0.00010138800000000087, 0.0001013749999999973, 0.00010138900000000034, 0.0001020550000000002, 0.00010173600000000158, 0.0001020420000000001, 0.0001015419999999996, 0.0001015419999999996, 0.00010193000000000008, 0.0001015419999999996, 0.00010172199999999854, 0.00010223600000000208, 0.00010155500000000317, 0.0001020550000000002]</msg>
<status status="PASS" starttime="20201110 08:38:29.392" endtime="20201110 08:38:29.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.387" endtime="20201110 08:38:29.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.397" endtime="20201110 08:38:29.398"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.400" endtime="20201110 08:38:29.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.399" endtime="20201110 08:38:29.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.395" endtime="20201110 08:38:29.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.026" endtime="20201110 08:38:29.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.025" endtime="20201110 08:38:29.421"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.430" endtime="20201110 08:38:29.450"></status>
</kw>
<msg timestamp="20201110 08:38:29.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.428" endtime="20201110 08:38:29.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.451" endtime="20201110 08:38:29.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.454" endtime="20201110 08:38:29.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.426" endtime="20201110 08:38:29.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.423" endtime="20201110 08:38:29.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.463" endtime="20201110 08:38:29.751"></status>
</kw>
<msg timestamp="20201110 08:38:29.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:29.461" endtime="20201110 08:38:29.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022461, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:29.755" endtime="20201110 08:38:29.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.763" endtime="20201110 08:38:29.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.459" endtime="20201110 08:38:29.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.457" endtime="20201110 08:38:29.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.770" level="INFO">${RESULT} = [{'time': 0.022564014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010301400000000197, 'source_diff': 0.00010301400000000197}, {'time': 0.022675014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:29.767" endtime="20201110 08:38:29.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.783" level="INFO">${ACCURACY} = {'diff': [0.00010301400000000197, 0.0001028749999999988, 0.00010272199999999954, 0.00010309699999999991, 0.00010256900000000027, 0.00010240299999999744, 0.00010270799999999997, 0.00010305499999999773,...</msg>
<status status="PASS" starttime="20201110 08:38:29.771" endtime="20201110 08:38:29.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.788" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.787" endtime="20201110 08:38:29.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.790" level="INFO">VALUE: [0.00010301400000000197, 0.0001028749999999988, 0.00010272199999999954, 0.00010309699999999991, 0.00010256900000000027, 0.00010240299999999744, 0.00010270799999999997, 0.00010305499999999773, 0.00010287500000000227, 0.00010237500000000177, 0.00010288899999999837, 0.00010238900000000134, 0.00010288900000000184, 0.00010255600000000017, 0.00010322200000000004, 0.00010270799999999997, 0.00010237500000000177, 0.00010322200000000004, 0.00010305499999999773, 0.00010256999999999974, 0.00010305600000000067, 0.00010272199999999954, 0.00010323699999999908, 0.00010329199999999789, 0.0001025550000000007, 0.00010288899999999837, 0.00010322200000000004, 0.0001030550000000012, 0.00010320800000000047, 0.00010322200000000004, 0.0001030420000000011, 0.00010255600000000017, 0.00010256999999999974, 0.00010240199999999797, 0.00010272199999999954, 0.000102722000000003, 0.00010302799999999807, 0.00010252800000000103, 0.00010255600000000017, 0.00010274999999999868, 0.00010287500000000227, 0.00010304199999999764, 0.00010272299999999901, 0.0001025550000000007, 0.00010258299999999984, 0.00010241700000000048, 0.00010238899999999787, 0.0001025420000000006, 0.00010272199999999954, 0.00010254199999999714]</msg>
<status status="PASS" starttime="20201110 08:38:29.789" endtime="20201110 08:38:29.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.784" endtime="20201110 08:38:29.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.794" endtime="20201110 08:38:29.795"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.797" endtime="20201110 08:38:29.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.796" endtime="20201110 08:38:29.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.792" endtime="20201110 08:38:29.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.422" endtime="20201110 08:38:29.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.421" endtime="20201110 08:38:29.818"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.827" endtime="20201110 08:38:29.847"></status>
</kw>
<msg timestamp="20201110 08:38:29.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.825" endtime="20201110 08:38:29.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.848" endtime="20201110 08:38:29.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.851" endtime="20201110 08:38:29.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.823" endtime="20201110 08:38:29.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.820" endtime="20201110 08:38:29.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.860" endtime="20201110 08:38:30.148"></status>
</kw>
<msg timestamp="20201110 08:38:30.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.858" endtime="20201110 08:38:30.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022491847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022596028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.152" endtime="20201110 08:38:30.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.160" endtime="20201110 08:38:30.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.856" endtime="20201110 08:38:30.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.854" endtime="20201110 08:38:30.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.167" level="INFO">${RESULT} = [{'time': 0.022596028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001041810000000018, 'source_diff': 0.0001041810000000018}, {'time': 0.022714056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.164" endtime="20201110 08:38:30.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.180" level="INFO">${ACCURACY} = {'diff': [0.0001041810000000018, 0.00010338899999999887, 0.0001038879999999999, 0.0001038879999999999, 0.00010355499999999823, 0.00010338900000000234, 0.00010344500000000062, 0.0001040139999999995, 0....</msg>
<status status="PASS" starttime="20201110 08:38:30.168" endtime="20201110 08:38:30.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.185" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.184" endtime="20201110 08:38:30.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.187" level="INFO">VALUE: [0.0001041810000000018, 0.00010338899999999887, 0.0001038879999999999, 0.0001038879999999999, 0.00010355499999999823, 0.00010338900000000234, 0.00010344500000000062, 0.0001040139999999995, 0.00010422300000000051, 0.00010338899999999887, 0.0001038749999999998, 0.00010391599999999904, 0.00010386100000000023, 0.00010340299999999844, 0.00010390299999999894, 0.00010356900000000127, 0.00010372200000000054, 0.00010370800000000097, 0.00010343100000000105, 0.00010355600000000117, 0.00010409700000000091, 0.00010338899999999887, 0.00010348599999999986, 0.00010348599999999986, 0.00010354100000000213, 0.00010422200000000104, 0.00010372200000000054, 0.000103513999999999, 0.0001033749999999993, 0.00010404199999999864, 0.00010358300000000084, 0.00010372300000000001, 0.0001033879999999994, 0.00010338899999999887, 0.00010367999999999836, 0.0001037079999999975, 0.00010388899999999937, 0.00010337500000000277, 0.00010405600000000167, 0.00010372300000000001, 0.00010420900000000094, 0.00010376399999999925, 0.0001038749999999998, 0.00010397199999999732, 0.00010404099999999916, 0.00010390300000000241, 0.00010408400000000081, 0.0001042360000000006, 0.00010422300000000051, 0.00010342999999999811]</msg>
<status status="PASS" starttime="20201110 08:38:30.186" endtime="20201110 08:38:30.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.181" endtime="20201110 08:38:30.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.191" endtime="20201110 08:38:30.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.195" endtime="20201110 08:38:30.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.193" endtime="20201110 08:38:30.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.189" endtime="20201110 08:38:30.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.819" endtime="20201110 08:38:30.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.818" endtime="20201110 08:38:30.215"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.224" endtime="20201110 08:38:30.244"></status>
</kw>
<msg timestamp="20201110 08:38:30.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.222" endtime="20201110 08:38:30.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.245" endtime="20201110 08:38:30.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.248" endtime="20201110 08:38:30.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.220" endtime="20201110 08:38:30.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.218" endtime="20201110 08:38:30.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.257" endtime="20201110 08:38:30.544"></status>
</kw>
<msg timestamp="20201110 08:38:30.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.255" endtime="20201110 08:38:30.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.548" endtime="20201110 08:38:30.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.557" endtime="20201110 08:38:30.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.253" endtime="20201110 08:38:30.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.251" endtime="20201110 08:38:30.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.564" level="INFO">${RESULT} = [{'time': 0.022344486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010500000000000093, 'source_diff': 0.00010500000000000093}, {'time': 0.0224585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.560" endtime="20201110 08:38:30.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.577" level="INFO">${ACCURACY} = {'diff': [0.00010500000000000093, 0.0001043750000000003, 0.00010520800000000247, 0.0001045559999999987, 0.00010472299999999754, 0.00010505600000000268, 0.0001050689999999993, 0.00010504199999999964, 0...</msg>
<status status="PASS" starttime="20201110 08:38:30.565" endtime="20201110 08:38:30.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.582" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.581" endtime="20201110 08:38:30.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.584" level="INFO">VALUE: [0.00010500000000000093, 0.0001043750000000003, 0.00010520800000000247, 0.0001045559999999987, 0.00010472299999999754, 0.00010505600000000268, 0.0001050689999999993, 0.00010504199999999964, 0.00010449999999999696, 0.00010472200000000154, 0.00010438899999999987, 0.00010488900000000037, 0.00010440299999999944, 0.00010455600000000217, 0.00010506900000000277, 0.00010517999999999986, 0.00010490299999999994, 0.00010488900000000037, 0.00010438899999999987, 0.00010490299999999994, 0.0001050559999999992, 0.0001050559999999992, 0.00010454199999999914, 0.00010469500000000187, 0.00010454199999999914, 0.00010504100000000016, 0.00010522200000000204, 0.00010488900000000037, 0.0001043750000000003, 0.0001050420000000031, 0.00010472200000000154, 0.00010455600000000217, 0.00010462500000000055, 0.00010472300000000101, 0.0001048750000000008, 0.000104514, 0.00010452799999999957, 0.0001043750000000003, 0.00010475000000000068, 0.0001047360000000011, 0.00010454199999999914, 0.00010452799999999957, 0.00010522299999999804, 0.0001045420000000026, 0.00010440199999999997, 0.00010467999999999936, 0.00010490299999999994, 0.00010433299999999812, 0.00010472199999999807, 0.000104820000000002]</msg>
<status status="PASS" starttime="20201110 08:38:30.583" endtime="20201110 08:38:30.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.578" endtime="20201110 08:38:30.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.588" endtime="20201110 08:38:30.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.592" endtime="20201110 08:38:30.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.590" endtime="20201110 08:38:30.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.586" endtime="20201110 08:38:30.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.216" endtime="20201110 08:38:30.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.216" endtime="20201110 08:38:30.612"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.621" endtime="20201110 08:38:30.641"></status>
</kw>
<msg timestamp="20201110 08:38:30.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.620" endtime="20201110 08:38:30.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.643" endtime="20201110 08:38:30.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.646" endtime="20201110 08:38:30.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.617" endtime="20201110 08:38:30.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.615" endtime="20201110 08:38:30.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.655" endtime="20201110 08:38:30.941"></status>
</kw>
<msg timestamp="20201110 08:38:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:30.653" endtime="20201110 08:38:30.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227435, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:30.945" endtime="20201110 08:38:30.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.953" endtime="20201110 08:38:30.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.650" endtime="20201110 08:38:30.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.649" endtime="20201110 08:38:30.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.962" level="INFO">${RESULT} = [{'time': 0.0227435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001055559999999997, 'source_diff': 0.0001055559999999997}, {'time': 0.022858458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:30.959" endtime="20201110 08:38:30.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.975" level="INFO">${ACCURACY} = {'diff': [0.0001055559999999997, 0.00010554100000000066, 0.00010572199999999907, 0.00010573599999999864, 0.00010590299999999747, 0.00010573599999999864, 0.00010588900000000137, 0.00010623599999999914,...</msg>
<status status="PASS" starttime="20201110 08:38:30.963" endtime="20201110 08:38:30.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.980" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.979" endtime="20201110 08:38:30.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.982" level="INFO">VALUE: [0.0001055559999999997, 0.00010554100000000066, 0.00010572199999999907, 0.00010573599999999864, 0.00010590299999999747, 0.00010573599999999864, 0.00010588900000000137, 0.00010623599999999914, 0.00010580599999999996, 0.00010537499999999783, 0.00010555500000000023, 0.00010622200000000304, 0.0001055689999999998, 0.0001053750000000013, 0.000106208, 0.00010604200000000064, 0.00010587499999999833, 0.00010572300000000201, 0.0001055689999999998, 0.0001062360000000026, 0.00010540300000000044, 0.00010605500000000073, 0.00010554200000000014, 0.0001060140000000015, 0.0001057499999999982, 0.00010591700000000051, 0.0001053750000000013, 0.00010623599999999914, 0.00010537499999999783, 0.00010609699999999944, 0.00010588900000000137, 0.00010569399999999993, 0.00010604199999999717, 0.00010604200000000064, 0.0001058750000000018, 0.00010552800000000057, 0.00010537499999999783, 0.00010572299999999854, 0.00010554100000000066, 0.0001058750000000018, 0.00010538900000000087, 0.00010588900000000137, 0.00010622199999999957, 0.00010559799999999842, 0.00010622199999999957, 0.00010622300000000251, 0.00010566700000000026, 0.00010538799999999793, 0.00010555500000000023, 0.00010622199999999957]</msg>
<status status="PASS" starttime="20201110 08:38:30.981" endtime="20201110 08:38:30.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.976" endtime="20201110 08:38:30.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.986" endtime="20201110 08:38:30.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.990" endtime="20201110 08:38:31.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.988" endtime="20201110 08:38:31.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.985" endtime="20201110 08:38:31.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.613" endtime="20201110 08:38:31.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.613" endtime="20201110 08:38:31.010"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.019" endtime="20201110 08:38:31.040"></status>
</kw>
<msg timestamp="20201110 08:38:31.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.018" endtime="20201110 08:38:31.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.041" endtime="20201110 08:38:31.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.044" endtime="20201110 08:38:31.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.015" endtime="20201110 08:38:31.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.013" endtime="20201110 08:38:31.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.053" endtime="20201110 08:38:31.340"></status>
</kw>
<msg timestamp="20201110 08:38:31.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.051" endtime="20201110 08:38:31.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022704375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.344" endtime="20201110 08:38:31.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.352" endtime="20201110 08:38:31.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.049" endtime="20201110 08:38:31.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.047" endtime="20201110 08:38:31.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.359" level="INFO">${RESULT} = [{'time': 0.022704375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010683299999999715, 'source_diff': 0.00010683299999999715}, {'time': 0.022816375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:31.355" endtime="20201110 08:38:31.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.372" level="INFO">${ACCURACY} = {'diff': [0.00010683299999999715, 0.00010636099999999926, 0.00010640299999999797, 0.00010677699999999887, 0.00010679200000000139, 0.0001063889999999984, 0.00010705500000000173, 0.0001067080000000005, ...</msg>
<status status="PASS" starttime="20201110 08:38:31.360" endtime="20201110 08:38:31.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.376" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.375" endtime="20201110 08:38:31.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.379" level="INFO">VALUE: [0.00010683299999999715, 0.00010636099999999926, 0.00010640299999999797, 0.00010677699999999887, 0.00010679200000000139, 0.0001063889999999984, 0.00010705500000000173, 0.0001067080000000005, 0.00010652800000000157, 0.00010686099999999976, 0.00010693100000000108, 0.00010691700000000151, 0.0001068750000000028, 0.0001070699999999973, 0.00010690300000000194, 0.00010690200000000247, 0.00010690299999999847, 0.00010631900000000055, 0.00010640300000000144, 0.00010672200000000007, 0.00010712499999999958, 0.00010712499999999958, 0.00010666700000000126, 0.00010654200000000114, 0.00010697300000000326, 0.00010705499999999826, 0.00010723600000000014, 0.0001063889999999984, 0.00010684700000000019, 0.00010654200000000114, 0.00010640300000000144, 0.00010716700000000176, 0.0001065560000000007, 0.00010673599999999964, 0.00010704099999999869, 0.00010655500000000123, 0.00010688900000000237, 0.0001070279999999986, 0.0001063750000000023, 0.0001067080000000005, 0.00010720799999999753, 0.00010630600000000046, 0.0001070690000000013, 0.00010690299999999847, 0.00010688799999999943, 0.00010655500000000123, 0.00010705499999999826, 0.00010655499999999776, 0.00010640300000000144, 0.00010637499999999883]</msg>
<status status="PASS" starttime="20201110 08:38:31.378" endtime="20201110 08:38:31.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.373" endtime="20201110 08:38:31.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.387" endtime="20201110 08:38:31.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.390" endtime="20201110 08:38:31.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.389" endtime="20201110 08:38:31.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.385" endtime="20201110 08:38:31.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.011" endtime="20201110 08:38:31.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.011" endtime="20201110 08:38:31.411"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.420" endtime="20201110 08:38:31.440"></status>
</kw>
<msg timestamp="20201110 08:38:31.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.418" endtime="20201110 08:38:31.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.441" endtime="20201110 08:38:31.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.444" endtime="20201110 08:38:31.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.416" endtime="20201110 08:38:31.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.414" endtime="20201110 08:38:31.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.453" endtime="20201110 08:38:31.745"></status>
</kw>
<msg timestamp="20201110 08:38:31.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.451" endtime="20201110 08:38:31.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022376361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022483708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.749" endtime="20201110 08:38:31.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.757" endtime="20201110 08:38:31.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.449" endtime="20201110 08:38:31.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.447" endtime="20201110 08:38:31.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.764" level="INFO">${RESULT} = [{'time': 0.022483708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010734700000000069, 'source_diff': 0.00010734700000000069}, {'time': 0.022598722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:31.760" endtime="20201110 08:38:31.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.777" level="INFO">${ACCURACY} = {'diff': [0.00010734700000000069, 0.000108208000000002, 0.00010804099999999969, 0.00010819399999999896, 0.00010740299999999897, 0.00010754199999999867, 0.0001080560000000022, 0.0001075699999999978, 0....</msg>
<status status="PASS" starttime="20201110 08:38:31.765" endtime="20201110 08:38:31.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.782" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.780" endtime="20201110 08:38:31.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.784" level="INFO">VALUE: [0.00010734700000000069, 0.000108208000000002, 0.00010804099999999969, 0.00010819399999999896, 0.00010740299999999897, 0.00010754199999999867, 0.0001080560000000022, 0.0001075699999999978, 0.00010822300000000104, 0.00010755499999999876, 0.00010823599999999767, 0.0001073889999999994, 0.00010736099999999679, 0.0001073889999999994, 0.00010822200000000157, 0.00010757000000000128, 0.00010770900000000097, 0.0001077089999999975, 0.0001082219999999981, 0.00010805499999999926, 0.00010787500000000033, 0.00010773600000000064, 0.0001082219999999981, 0.00010809699999999797, 0.00010812500000000058, 0.0001078889999999999, 0.00010805499999999926, 0.00010738799999999993, 0.00010800000000000046, 0.0001073889999999994, 0.00010772200000000107, 0.0001077219999999976, 0.0001077219999999976, 0.0001078889999999999, 0.0001082500000000007, 0.0001077089999999975, 0.00010770900000000097, 0.00010759699999999747, 0.0001077080000000015, 0.00010738900000000287, 0.0001075690000000018, 0.0001073889999999994, 0.00010755599999999824, 0.0001078889999999999, 0.0001073889999999994, 0.00010820900000000147, 0.00010754099999999919, 0.00010806899999999883, 0.0001073889999999994, 0.00010773600000000064]</msg>
<status status="PASS" starttime="20201110 08:38:31.783" endtime="20201110 08:38:31.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.778" endtime="20201110 08:38:31.785"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.788" endtime="20201110 08:38:31.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.791" endtime="20201110 08:38:31.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.790" endtime="20201110 08:38:31.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.786" endtime="20201110 08:38:31.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.412" endtime="20201110 08:38:31.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.412" endtime="20201110 08:38:31.812"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.820" endtime="20201110 08:38:31.840"></status>
</kw>
<msg timestamp="20201110 08:38:31.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.819" endtime="20201110 08:38:31.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.842" endtime="20201110 08:38:31.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.844" endtime="20201110 08:38:31.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.816" endtime="20201110 08:38:31.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.814" endtime="20201110 08:38:31.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.854" endtime="20201110 08:38:32.140"></status>
</kw>
<msg timestamp="20201110 08:38:32.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.852" endtime="20201110 08:38:32.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022175222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.144" endtime="20201110 08:38:32.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.152" endtime="20201110 08:38:32.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.849" endtime="20201110 08:38:32.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.848" endtime="20201110 08:38:32.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.159" level="INFO">${RESULT} = [{'time': 0.022283736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010851399999999706, 'source_diff': 0.00010851399999999706}, {'time': 0.02240275, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:32.156" endtime="20201110 08:38:32.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.172" level="INFO">${ACCURACY} = {'diff': [0.00010851399999999706, 0.0001092219999999991, 0.00010923599999999867, 0.0001085280000000001, 0.00010905599999999974, 0.00010905599999999974, 0.00010838800000000093, 0.0001087219999999986, 0...</msg>
<status status="PASS" starttime="20201110 08:38:32.160" endtime="20201110 08:38:32.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.177" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.176" endtime="20201110 08:38:32.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.179" level="INFO">VALUE: [0.00010851399999999706, 0.0001092219999999991, 0.00010923599999999867, 0.0001085280000000001, 0.00010905599999999974, 0.00010905599999999974, 0.00010838800000000093, 0.0001087219999999986, 0.00010854100000000019, 0.00010904100000000069, 0.00010920799999999953, 0.00010854199999999967, 0.00010854200000000314, 0.0001090419999999967, 0.00010854199999999967, 0.000109208999999999, 0.00010887500000000133, 0.00010870799999999903, 0.00010856899999999933, 0.00010837500000000083, 0.00010854199999999967, 0.00010905599999999974, 0.00010855599999999924, 0.0001085829999999989, 0.00010854199999999967, 0.00010897199999999885, 0.0001083890000000004, 0.0001083890000000004, 0.00010855499999999976, 0.00010890300000000047, 0.0001092219999999991, 0.00010857000000000228, 0.00010923699999999814, 0.00010875000000000121, 0.00010838800000000093, 0.00010888899999999743, 0.00010905500000000026, 0.00010922200000000257, 0.00010904200000000017, 0.0001090699999999993, 0.00010855599999999924, 0.00010873699999999764, 0.00010905599999999974, 0.00010855499999999976, 0.00010873600000000164, 0.00010905500000000026, 0.00010904200000000017, 0.00010854199999999967, 0.00010872200000000207, 0.00010915299999999725]</msg>
<status status="PASS" starttime="20201110 08:38:32.178" endtime="20201110 08:38:32.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.173" endtime="20201110 08:38:32.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.183" endtime="20201110 08:38:32.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.186" endtime="20201110 08:38:32.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.185" endtime="20201110 08:38:32.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.181" endtime="20201110 08:38:32.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.813" endtime="20201110 08:38:32.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.812" endtime="20201110 08:38:32.207"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.216" endtime="20201110 08:38:32.237"></status>
</kw>
<msg timestamp="20201110 08:38:32.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.214" endtime="20201110 08:38:32.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.239" endtime="20201110 08:38:32.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.241" endtime="20201110 08:38:32.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.212" endtime="20201110 08:38:32.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.210" endtime="20201110 08:38:32.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.250" endtime="20201110 08:38:32.537"></status>
</kw>
<msg timestamp="20201110 08:38:32.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.249" endtime="20201110 08:38:32.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022809222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.541" endtime="20201110 08:38:32.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.549" endtime="20201110 08:38:32.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.246" endtime="20201110 08:38:32.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.244" endtime="20201110 08:38:32.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.556" level="INFO">${RESULT} = [{'time': 0.022809222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011018000000000139, 'source_diff': 0.00011018000000000139}, {'time': 0.022925264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:32.553" endtime="20201110 08:38:32.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.569" level="INFO">${ACCURACY} = {'diff': [0.00011018000000000139, 0.0001097219999999996, 0.0001093890000000014, 0.00011005600000000074, 0.00011023599999999967, 0.0001100830000000004, 0.0001097219999999996, 0.00011023599999999967, 0....</msg>
<status status="PASS" starttime="20201110 08:38:32.557" endtime="20201110 08:38:32.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.573" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.572" endtime="20201110 08:38:32.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.576" level="INFO">VALUE: [0.00011018000000000139, 0.0001097219999999996, 0.0001093890000000014, 0.00011005600000000074, 0.00011023599999999967, 0.0001100830000000004, 0.0001097219999999996, 0.00011023599999999967, 0.00011023599999999967, 0.0001100549999999978, 0.00010956900000000033, 0.0001102220000000001, 0.0001102220000000001, 0.00010988899999999843, 0.000109902999999998, 0.0001094020000000015, 0.00011005500000000126, 0.00010973599999999917, 0.00010973599999999917, 0.00010955500000000076, 0.00010955600000000024, 0.00010997199999999985, 0.0001102220000000001, 0.0001095280000000011, 0.00011022299999999957, 0.00010940199999999803, 0.00011006900000000083, 0.00010950000000000196, 0.00010956900000000033, 0.000110209, 0.00010954200000000067, 0.00010980600000000049, 0.00011004200000000117, 0.00010937499999999836, 0.00010962499999999861, 0.00010954100000000119, 0.0001102220000000001, 0.0001102220000000001, 0.00011004200000000117, 0.0001095699999999998, 0.00011023599999999967, 0.00010955600000000024, 0.00010988899999999843, 0.0001095829999999999, 0.00010954100000000119, 0.00010961099999999904, 0.0001102220000000001, 0.00011023600000000314, 0.0001093890000000014, 0.00011015299999999825]</msg>
<status status="PASS" starttime="20201110 08:38:32.575" endtime="20201110 08:38:32.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.570" endtime="20201110 08:38:32.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.579" endtime="20201110 08:38:32.581"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.583" endtime="20201110 08:38:32.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.581" endtime="20201110 08:38:32.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.578" endtime="20201110 08:38:32.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.208" endtime="20201110 08:38:32.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.208" endtime="20201110 08:38:32.604"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.613" endtime="20201110 08:38:32.633"></status>
</kw>
<msg timestamp="20201110 08:38:32.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.611" endtime="20201110 08:38:32.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.634" endtime="20201110 08:38:32.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.637" endtime="20201110 08:38:32.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.609" endtime="20201110 08:38:32.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.606" endtime="20201110 08:38:32.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.646" endtime="20201110 08:38:32.932"></status>
</kw>
<msg timestamp="20201110 08:38:32.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.644" endtime="20201110 08:38:32.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022649069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022759417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.936" endtime="20201110 08:38:32.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.944" endtime="20201110 08:38:32.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.642" endtime="20201110 08:38:32.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.640" endtime="20201110 08:38:32.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.951" level="INFO">${RESULT} = [{'time': 0.022759417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001103479999999997, 'source_diff': 0.0001103479999999997}, {'time': 0.022884431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.948" endtime="20201110 08:38:32.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.964" level="INFO">${ACCURACY} = {'diff': [0.0001103479999999997, 0.00011072300000000007, 0.00011088799999999996, 0.00011122199999999763, 0.0001110549999999988, 0.00011088899999999943, 0.00011084700000000072, 0.00011087499999999986, ...</msg>
<status status="PASS" starttime="20201110 08:38:32.952" endtime="20201110 08:38:32.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.968" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.967" endtime="20201110 08:38:32.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.971" level="INFO">VALUE: [0.0001103479999999997, 0.00011072300000000007, 0.00011088799999999996, 0.00011122199999999763, 0.0001110549999999988, 0.00011088899999999943, 0.00011084700000000072, 0.00011087499999999986, 0.00011104200000000217, 0.00011116699999999882, 0.00011083299999999768, 0.0001112220000000011, 0.0001108890000000029, 0.00011088899999999943, 0.0001105549999999983, 0.0001112220000000011, 0.00011105599999999827, 0.0001110700000000013, 0.00011099999999999999, 0.00011122199999999763, 0.00011111100000000054, 0.0001107220000000006, 0.00011069399999999799, 0.0001107220000000006, 0.00011038899999999893, 0.00011087499999999986, 0.00011040300000000197, 0.00011055600000000124, 0.0001110419999999987, 0.00011120800000000153, 0.0001105549999999983, 0.0001110549999999988, 0.0001110830000000014, 0.00011070799999999756, 0.00011111100000000054, 0.00011088899999999943, 0.00011038899999999893, 0.00011088899999999943, 0.00011088799999999996, 0.00011056900000000133, 0.00011044500000000068, 0.0001107220000000006, 0.000110902999999999, 0.00011038899999999893, 0.00011036099999999979, 0.00011088899999999943, 0.00011040199999999903, 0.0001103890000000024, 0.00011091700000000204, 0.00011056900000000133]</msg>
<status status="PASS" starttime="20201110 08:38:32.970" endtime="20201110 08:38:32.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.965" endtime="20201110 08:38:32.972"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.975" endtime="20201110 08:38:32.976"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.978" endtime="20201110 08:38:32.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.976" endtime="20201110 08:38:32.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.973" endtime="20201110 08:38:32.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.605" endtime="20201110 08:38:32.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.604" endtime="20201110 08:38:32.999"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.007" endtime="20201110 08:38:33.028"></status>
</kw>
<msg timestamp="20201110 08:38:33.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.006" endtime="20201110 08:38:33.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.029" endtime="20201110 08:38:33.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.032" endtime="20201110 08:38:33.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.003" endtime="20201110 08:38:33.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.001" endtime="20201110 08:38:33.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.041" endtime="20201110 08:38:33.328"></status>
</kw>
<msg timestamp="20201110 08:38:33.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:33.039" endtime="20201110 08:38:33.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022339847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:33.332" endtime="20201110 08:38:33.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.341" endtime="20201110 08:38:33.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.037" endtime="20201110 08:38:33.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.035" endtime="20201110 08:38:33.344"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.347" level="INFO">${RESULT} = [{'time': 0.022452, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011215300000000025, 'source_diff': 0.00011215300000000025}, {'time': 0.022578014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:33.344" endtime="20201110 08:38:33.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.360" level="INFO">${ACCURACY} = {'diff': [0.00011215300000000025, 0.00011155599999999877, 0.00011211100000000154, 0.00011138899999999993, 0.00011187499999999739, 0.00011187500000000086, 0.00011137500000000036, 0.00011206900000000283...</msg>
<status status="PASS" starttime="20201110 08:38:33.348" endtime="20201110 08:38:33.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.365" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.364" endtime="20201110 08:38:33.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.368" level="INFO">VALUE: [0.00011215300000000025, 0.00011155599999999877, 0.00011211100000000154, 0.00011138899999999993, 0.00011187499999999739, 0.00011187500000000086, 0.00011137500000000036, 0.00011206900000000283, 0.00011169399999999899, 0.00011187500000000086, 0.00011137500000000036, 0.00011151400000000006, 0.00011187500000000086, 0.00011188900000000043, 0.0001120419999999997, 0.00011181899999999911, 0.0001117220000000016, 0.00011156900000000233, 0.00011170800000000203, 0.00011156999999999834, 0.00011199999999999752, 0.00011220899999999853, 0.00011205600000000274, 0.0001120419999999997, 0.00011140200000000003, 0.0001115549999999993, 0.00011158399999999791, 0.00011193100000000261, 0.00011169399999999899, 0.00011188900000000043, 0.00011172199999999813, 0.0001115830000000019, 0.00011206899999999936, 0.00011220800000000253, 0.00011186100000000129, 0.00011152799999999963, 0.00011215300000000025, 0.00011220799999999906, 0.00011222199999999863, 0.00011168099999999889, 0.00011173600000000117, 0.00011179199999999945, 0.0001115549999999993, 0.00011188900000000043, 0.00011152799999999963, 0.0001115549999999993, 0.000111903, 0.00011138899999999993, 0.0001117220000000016, 0.00011137500000000036]</msg>
<status status="PASS" starttime="20201110 08:38:33.366" endtime="20201110 08:38:33.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.361" endtime="20201110 08:38:33.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.371" endtime="20201110 08:38:33.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.375" endtime="20201110 08:38:33.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.373" endtime="20201110 08:38:33.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.369" endtime="20201110 08:38:33.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.000" endtime="20201110 08:38:33.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.999" endtime="20201110 08:38:33.395"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.404" endtime="20201110 08:38:33.424"></status>
</kw>
<msg timestamp="20201110 08:38:33.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.402" endtime="20201110 08:38:33.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.426" endtime="20201110 08:38:33.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.428" endtime="20201110 08:38:33.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.400" endtime="20201110 08:38:33.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.398" endtime="20201110 08:38:33.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.438" endtime="20201110 08:38:33.725"></status>
</kw>
<msg timestamp="20201110 08:38:33.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.436" endtime="20201110 08:38:33.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022179125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.729" endtime="20201110 08:38:33.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.737" endtime="20201110 08:38:33.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.433" endtime="20201110 08:38:33.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.432" endtime="20201110 08:38:33.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.744" level="INFO">${RESULT} = [{'time': 0.022292153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011302799999999766, 'source_diff': 0.00011302799999999766}, {'time': 0.022413153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:33.741" endtime="20201110 08:38:33.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.757" level="INFO">${ACCURACY} = {'diff': [0.00011302799999999766, 0.0001125420000000002, 0.0001128480000000022, 0.00011322300000000257, 0.00011237500000000136, 0.00011269399999999999, 0.0001123749999999979, 0.00011270799999999956, 0...</msg>
<status status="PASS" starttime="20201110 08:38:33.745" endtime="20201110 08:38:33.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.761" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.760" endtime="20201110 08:38:33.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.764" level="INFO">VALUE: [0.00011302799999999766, 0.0001125420000000002, 0.0001128480000000022, 0.00011322300000000257, 0.00011237500000000136, 0.00011269399999999999, 0.0001123749999999979, 0.00011270799999999956, 0.00011319399999999702, 0.00011273600000000217, 0.00011286100000000229, 0.00011287500000000186, 0.0001123749999999979, 0.00011320800000000006, 0.00011263900000000118, 0.00011308299999999993, 0.00011286099999999882, 0.00011272199999999913, 0.00011287500000000186, 0.00011308299999999993, 0.00011300000000000199, 0.0001123619999999978, 0.00011254100000000072, 0.00011286100000000229, 0.00011254100000000072, 0.00011288900000000143, 0.00011287500000000186, 0.00011322199999999963, 0.00011238900000000093, 0.00011250000000000149, 0.00011290299999999753, 0.00011270799999999956, 0.0001132359999999992, 0.00011269399999999999, 0.00011320800000000006, 0.00011241700000000007, 0.00011252799999999716, 0.00011306999999999984, 0.00011305600000000027, 0.00011286200000000177, 0.0001128749999999984, 0.00011304099999999775, 0.00011300000000000199, 0.00011238900000000093, 0.00011320800000000006, 0.0001127220000000026, 0.000112596999999999, 0.00011308299999999993, 0.00011237500000000136, 0.00011269399999999999]</msg>
<status status="PASS" starttime="20201110 08:38:33.763" endtime="20201110 08:38:33.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.758" endtime="20201110 08:38:33.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.768" endtime="20201110 08:38:33.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.771" endtime="20201110 08:38:33.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.770" endtime="20201110 08:38:33.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.766" endtime="20201110 08:38:33.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.396" endtime="20201110 08:38:33.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.396" endtime="20201110 08:38:33.792"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.801" endtime="20201110 08:38:33.821"></status>
</kw>
<msg timestamp="20201110 08:38:33.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.799" endtime="20201110 08:38:33.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.822" endtime="20201110 08:38:33.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.825" endtime="20201110 08:38:33.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.796" endtime="20201110 08:38:33.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.794" endtime="20201110 08:38:33.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.834" endtime="20201110 08:38:34.121"></status>
</kw>
<msg timestamp="20201110 08:38:34.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.832" endtime="20201110 08:38:34.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022346097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022459986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.125" endtime="20201110 08:38:34.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.134" endtime="20201110 08:38:34.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.830" endtime="20201110 08:38:34.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.828" endtime="20201110 08:38:34.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.140" level="INFO">${RESULT} = [{'time': 0.022459986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011388900000000243, 'source_diff': 0.00011388900000000243}, {'time': 0.022583972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.137" endtime="20201110 08:38:34.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.153" level="INFO">${ACCURACY} = {'diff': [0.00011388900000000243, 0.00011338900000000193, 0.00011423599999999673, 0.00011388899999999896, 0.00011357000000000034, 0.00011405600000000127, 0.00011357000000000034, 0.00011370900000000003...</msg>
<status status="PASS" starttime="20201110 08:38:34.141" endtime="20201110 08:38:34.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.158" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.157" endtime="20201110 08:38:34.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.160" level="INFO">VALUE: [0.00011388900000000243, 0.00011338900000000193, 0.00011423599999999673, 0.00011388899999999896, 0.00011357000000000034, 0.00011405600000000127, 0.00011357000000000034, 0.00011370900000000003, 0.0001138749999999994, 0.0001133749999999989, 0.00011370800000000056, 0.00011406900000000136, 0.0001135420000000012, 0.00011422200000000063, 0.00011420900000000053, 0.0001142230000000001, 0.0001142230000000001, 0.00011341599999999813, 0.00011404099999999875, 0.00011354100000000172, 0.0001135550000000013, 0.00011388900000000243, 0.00011338899999999846, 0.00011423699999999967, 0.00011401399999999909, 0.00011390199999999906, 0.00011351400000000206, 0.00011355499999999782, 0.00011388899999999896, 0.00011404199999999823, 0.0001140559999999978, 0.00011429100000000247, 0.0001135420000000012, 0.0001142230000000001, 0.0001142230000000001, 0.00011372200000000013, 0.0001140689999999979, 0.00011390299999999853, 0.00011372200000000013, 0.0001142360000000002, 0.00011407000000000084, 0.00011388899999999896, 0.00011352799999999816, 0.0001140689999999979, 0.00011391700000000157, 0.00011390299999999853, 0.00011354100000000172, 0.00011388900000000243, 0.00011422200000000063, 0.00011369499999999699]</msg>
<status status="PASS" starttime="20201110 08:38:34.159" endtime="20201110 08:38:34.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.154" endtime="20201110 08:38:34.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.164" endtime="20201110 08:38:34.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.168" endtime="20201110 08:38:34.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.166" endtime="20201110 08:38:34.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.162" endtime="20201110 08:38:34.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.793" endtime="20201110 08:38:34.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.792" endtime="20201110 08:38:34.189"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.197" endtime="20201110 08:38:34.218"></status>
</kw>
<msg timestamp="20201110 08:38:34.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.196" endtime="20201110 08:38:34.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.219" endtime="20201110 08:38:34.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.222" endtime="20201110 08:38:34.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.193" endtime="20201110 08:38:34.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.191" endtime="20201110 08:38:34.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.231" endtime="20201110 08:38:34.518"></status>
</kw>
<msg timestamp="20201110 08:38:34.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.229" endtime="20201110 08:38:34.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.522" endtime="20201110 08:38:34.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.530" endtime="20201110 08:38:34.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.227" endtime="20201110 08:38:34.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.225" endtime="20201110 08:38:34.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.536" level="INFO">${RESULT} = [{'time': 0.022750778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011468099999999842, 'source_diff': 0.00011468099999999842}, {'time': 0.022871819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.533" endtime="20201110 08:38:34.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.550" level="INFO">${ACCURACY} = {'diff': [0.00011468099999999842, 0.00011440200000000303, 0.0001150970000000015, 0.00011455499999999882, 0.00011472199999999766, 0.0001147360000000007, 0.00011522199999999816, 0.0001150559999999988, 0...</msg>
<status status="PASS" starttime="20201110 08:38:34.537" endtime="20201110 08:38:34.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.554" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.553" endtime="20201110 08:38:34.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.557" level="INFO">VALUE: [0.00011468099999999842, 0.00011440200000000303, 0.0001150970000000015, 0.00011455499999999882, 0.00011472199999999766, 0.0001147360000000007, 0.00011522199999999816, 0.0001150559999999988, 0.00011483299999999821, 0.00011486100000000082, 0.00011469500000000146, 0.00011522299999999763, 0.0001145550000000023, 0.00011516699999999935, 0.00011488899999999996, 0.00011455600000000177, 0.00011461100000000057, 0.00011441700000000207, 0.0001148750000000004, 0.00011505600000000227, 0.00011516599999999988, 0.00011525000000000077, 0.00011523599999999773, 0.0001147360000000007, 0.00011500000000000052, 0.00011472199999999766, 0.00011488899999999996, 0.00011488899999999996, 0.000114597000000001, 0.00011470800000000156, 0.0001147360000000007, 0.00011500000000000052, 0.00011488899999999996, 0.00011438899999999946, 0.00011511100000000107, 0.0001148750000000004, 0.0001150559999999988, 0.0001152230000000011, 0.0001145550000000023, 0.00011455499999999882, 0.00011472200000000113, 0.00011488899999999996, 0.00011520799999999859, 0.0001147360000000007, 0.00011516699999999935, 0.0001150559999999988, 0.00011494400000000224, 0.00011490200000000006, 0.00011488899999999996, 0.0001143749999999999]</msg>
<status status="PASS" starttime="20201110 08:38:34.555" endtime="20201110 08:38:34.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.550" endtime="20201110 08:38:34.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.560" endtime="20201110 08:38:34.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.564" endtime="20201110 08:38:34.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.562" endtime="20201110 08:38:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.558" endtime="20201110 08:38:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.189" endtime="20201110 08:38:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.189" endtime="20201110 08:38:34.584"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.593" endtime="20201110 08:38:34.614"></status>
</kw>
<msg timestamp="20201110 08:38:34.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.592" endtime="20201110 08:38:34.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.615" endtime="20201110 08:38:34.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.618" endtime="20201110 08:38:34.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.589" endtime="20201110 08:38:34.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.587" endtime="20201110 08:38:34.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.628" endtime="20201110 08:38:34.915"></status>
</kw>
<msg timestamp="20201110 08:38:34.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.626" endtime="20201110 08:38:34.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022610264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022725778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.919" endtime="20201110 08:38:34.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.927" endtime="20201110 08:38:34.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.623" endtime="20201110 08:38:34.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.621" endtime="20201110 08:38:34.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.934" level="INFO">${RESULT} = [{'time': 0.022725778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011551399999999712, 'source_diff': 0.00011551399999999712}, {'time': 0.022850792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.930" endtime="20201110 08:38:34.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.947" level="INFO">${ACCURACY} = {'diff': [0.00011551399999999712, 0.00011586100000000182, 0.0001153750000000009, 0.00011554100000000025, 0.00011552700000000068, 0.00011572200000000213, 0.00011538900000000046, 0.00011554199999999973,...</msg>
<status status="PASS" starttime="20201110 08:38:34.935" endtime="20201110 08:38:34.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.951" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.950" endtime="20201110 08:38:34.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.954" level="INFO">VALUE: [0.00011551399999999712, 0.00011586100000000182, 0.0001153750000000009, 0.00011554100000000025, 0.00011552700000000068, 0.00011572200000000213, 0.00011538900000000046, 0.00011554199999999973, 0.00011536099999999785, 0.00011622299999999863, 0.00011555499999999982, 0.00011622200000000263, 0.00011587499999999792, 0.00011550000000000102, 0.000115388999999997, 0.00011570800000000256, 0.00011572199999999866, 0.00011606999999999937, 0.00011602800000000066, 0.00011572299999999813, 0.0001155689999999994, 0.00011623599999999873, 0.00011554199999999973, 0.00011540300000000003, 0.00011570799999999909, 0.00011572200000000213, 0.00011590300000000053, 0.00011588900000000096, 0.00011591600000000063, 0.00011604100000000075, 0.00011604100000000075, 0.00011554100000000025, 0.0001154169999999996, 0.00011572200000000213, 0.00011586100000000182, 0.00011536100000000132, 0.00011572299999999813, 0.00011590300000000053, 0.00011605499999999686, 0.0001155550000000033, 0.00011538900000000046, 0.00011604199999999676, 0.00011604200000000023, 0.0001155559999999993, 0.00011588900000000096, 0.0001154299999999997, 0.00011555499999999982, 0.00011622199999999916, 0.0001155689999999994, 0.00011590300000000053]</msg>
<status status="PASS" starttime="20201110 08:38:34.952" endtime="20201110 08:38:34.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.948" endtime="20201110 08:38:34.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.957" endtime="20201110 08:38:34.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.961" endtime="20201110 08:38:34.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.959" endtime="20201110 08:38:34.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.956" endtime="20201110 08:38:34.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.585" endtime="20201110 08:38:34.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.585" endtime="20201110 08:38:34.982"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.990" endtime="20201110 08:38:35.011"></status>
</kw>
<msg timestamp="20201110 08:38:35.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.989" endtime="20201110 08:38:35.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.013" endtime="20201110 08:38:35.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.015" endtime="20201110 08:38:35.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.986" endtime="20201110 08:38:35.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.984" endtime="20201110 08:38:35.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.024" endtime="20201110 08:38:35.311"></status>
</kw>
<msg timestamp="20201110 08:38:35.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.023" endtime="20201110 08:38:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022540153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.316" endtime="20201110 08:38:35.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.324" endtime="20201110 08:38:35.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.020" endtime="20201110 08:38:35.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.018" endtime="20201110 08:38:35.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.330" level="INFO">${RESULT} = [{'time': 0.022540153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011651400000000159, 'source_diff': 0.00011651400000000159}, {'time': 0.022665194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:35.327" endtime="20201110 08:38:35.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.343" level="INFO">${ACCURACY} = {'diff': [0.00011651400000000159, 0.0001167499999999988, 0.0001168620000000023, 0.0001170690000000009, 0.00011688900000000196, 0.00011662500000000214, 0.00011691699999999763, 0.00011640300000000103, 0...</msg>
<status status="PASS" starttime="20201110 08:38:35.331" endtime="20201110 08:38:35.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.348" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.347" endtime="20201110 08:38:35.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.350" level="INFO">VALUE: [0.00011651400000000159, 0.0001167499999999988, 0.0001168620000000023, 0.0001170690000000009, 0.00011688900000000196, 0.00011662500000000214, 0.00011691699999999763, 0.00011640300000000103, 0.00011723599999999973, 0.00011722299999999963, 0.00011722299999999963, 0.00011640200000000156, 0.0001170690000000009, 0.00011687499999999892, 0.00011704099999999829, 0.00011673599999999923, 0.00011652800000000116, 0.00011670800000000009, 0.00011654200000000073, 0.00011666700000000085, 0.00011633400000000266, 0.00011637499999999842, 0.00011670800000000009, 0.00011636099999999885, 0.00011687499999999892, 0.00011702799999999819, 0.00011722200000000016, 0.0001165560000000003, 0.00011720900000000006, 0.0001169439999999973, 0.00011673599999999923, 0.00011690299999999806, 0.00011663799999999877, 0.00011673599999999923, 0.00011654199999999726, 0.00011656999999999987, 0.00011645799999999984, 0.00011688900000000196, 0.00011655500000000082, 0.00011706899999999743, 0.00011723599999999973, 0.0001163750000000019, 0.00011704200000000123, 0.0001165560000000003, 0.00011723599999999973, 0.00011722299999999963, 0.00011686199999999883, 0.00011675000000000227, 0.00011704100000000175, 0.00011698599999999948]</msg>
<status status="PASS" starttime="20201110 08:38:35.349" endtime="20201110 08:38:35.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.344" endtime="20201110 08:38:35.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.354" endtime="20201110 08:38:35.355"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.358" endtime="20201110 08:38:35.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.356" endtime="20201110 08:38:35.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.352" endtime="20201110 08:38:35.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.982" endtime="20201110 08:38:35.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.982" endtime="20201110 08:38:35.378"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.387" endtime="20201110 08:38:35.407"></status>
</kw>
<msg timestamp="20201110 08:38:35.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.386" endtime="20201110 08:38:35.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.409" endtime="20201110 08:38:35.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.411" endtime="20201110 08:38:35.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.383" endtime="20201110 08:38:35.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.381" endtime="20201110 08:38:35.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.420" endtime="20201110 08:38:35.708"></status>
</kw>
<msg timestamp="20201110 08:38:35.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.419" endtime="20201110 08:38:35.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.712" endtime="20201110 08:38:35.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.720" endtime="20201110 08:38:35.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.416" endtime="20201110 08:38:35.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.414" endtime="20201110 08:38:35.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.727" level="INFO">${RESULT} = [{'time': 0.022315167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011801399999999962, 'source_diff': 0.00011801399999999962}, {'time': 0.022445181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:35.724" endtime="20201110 08:38:35.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.740" level="INFO">${ACCURACY} = {'diff': [0.00011801399999999962, 0.0001173750000000029, 0.00011773600000000023, 0.00011755499999999836, 0.00011772200000000066, 0.0001178889999999995, 0.00011797199999999744, 0.00011787499999999992, ...</msg>
<status status="PASS" starttime="20201110 08:38:35.728" endtime="20201110 08:38:35.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.745" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.744" endtime="20201110 08:38:35.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.747" level="INFO">VALUE: [0.00011801399999999962, 0.0001173750000000029, 0.00011773600000000023, 0.00011755499999999836, 0.00011772200000000066, 0.0001178889999999995, 0.00011797199999999744, 0.00011787499999999992, 0.00011804200000000223, 0.00011804200000000223, 0.00011801399999999962, 0.00011804200000000223, 0.00011790299999999906, 0.00011805499999999886, 0.0001178889999999995, 0.00011737499999999942, 0.00011757000000000087, 0.00011805599999999833, 0.00011770800000000109, 0.00011788800000000002, 0.00011805500000000232, 0.00011740300000000203, 0.00011822200000000116, 0.0001175560000000013, 0.00011770799999999762, 0.00011772200000000066, 0.00011811099999999713, 0.00011752800000000216, 0.00011783300000000121, 0.0001173750000000029, 0.0001181110000000006, 0.00011769399999999805, 0.00011757000000000087, 0.00011740299999999856, 0.000117388999999999, 0.00011756899999999793, 0.00011801300000000015, 0.0001178889999999995, 0.00011804099999999929, 0.00011754199999999826, 0.00011822200000000116, 0.0001175560000000013, 0.00011822200000000116, 0.0001178889999999995, 0.00011804099999999929, 0.00011737499999999942, 0.0001173049999999981, 0.0001178889999999995, 0.00011755499999999836, 0.00011736099999999985]</msg>
<status status="PASS" starttime="20201110 08:38:35.746" endtime="20201110 08:38:35.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.741" endtime="20201110 08:38:35.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.751" endtime="20201110 08:38:35.752"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.754" endtime="20201110 08:38:35.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.753" endtime="20201110 08:38:35.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.749" endtime="20201110 08:38:35.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.379" endtime="20201110 08:38:35.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.379" endtime="20201110 08:38:35.775"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.784" endtime="20201110 08:38:35.805"></status>
</kw>
<msg timestamp="20201110 08:38:35.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.782" endtime="20201110 08:38:35.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.806" endtime="20201110 08:38:35.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.809" endtime="20201110 08:38:35.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.780" endtime="20201110 08:38:35.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.778" endtime="20201110 08:38:35.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.818" endtime="20201110 08:38:36.104"></status>
</kw>
<msg timestamp="20201110 08:38:36.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.816" endtime="20201110 08:38:36.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022837264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.108" endtime="20201110 08:38:36.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.116" endtime="20201110 08:38:36.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.814" endtime="20201110 08:38:36.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.812" endtime="20201110 08:38:36.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.123" level="INFO">${RESULT} = [{'time': 0.022837264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011833299999999825, 'source_diff': 0.00011833299999999825}, {'time': 0.022965278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:36.119" endtime="20201110 08:38:36.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.136" level="INFO">${ACCURACY} = {'diff': [0.00011833299999999825, 0.0001192089999999986, 0.00011876400000000037, 0.00011872200000000166, 0.00011841699999999913, 0.00011922199999999869, 0.00011929200000000001, 0.00011905599999999933,...</msg>
<status status="PASS" starttime="20201110 08:38:36.124" endtime="20201110 08:38:36.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.140" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.139" endtime="20201110 08:38:36.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.143" level="INFO">VALUE: [0.00011833299999999825, 0.0001192089999999986, 0.00011876400000000037, 0.00011872200000000166, 0.00011841699999999913, 0.00011922199999999869, 0.00011929200000000001, 0.00011905599999999933, 0.0001190560000000028, 0.00011886099999999789, 0.00011879200000000298, 0.00011872300000000113, 0.00011905499999999986, 0.0001187500000000008, 0.00011923599999999826, 0.00011856899999999893, 0.00011854199999999926, 0.00011855599999999883, 0.0001192089999999986, 0.000118389, 0.00011872300000000113, 0.00011837500000000042, 0.00011890300000000006, 0.00011837499999999695, 0.00011876400000000037, 0.00011868100000000242, 0.000118389, 0.00011904199999999976, 0.00011905499999999986, 0.00011905499999999986, 0.00011837500000000042, 0.00011837500000000042, 0.0001188890000000005, 0.000118389, 0.00011840299999999956, 0.0001184300000000027, 0.00011836100000000085, 0.00011923599999999826, 0.00011890200000000059, 0.00011922199999999869, 0.00011854099999999979, 0.00011891699999999963, 0.00011870799999999862, 0.0001192089999999986, 0.0001186110000000011, 0.000118389, 0.00011922199999999869, 0.00011904100000000029, 0.00011873600000000123, 0.00011922200000000216]</msg>
<status status="PASS" starttime="20201110 08:38:36.141" endtime="20201110 08:38:36.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.137" endtime="20201110 08:38:36.144"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.147" endtime="20201110 08:38:36.148"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.150" endtime="20201110 08:38:36.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.148" endtime="20201110 08:38:36.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.145" endtime="20201110 08:38:36.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.776" endtime="20201110 08:38:36.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.776" endtime="20201110 08:38:36.171"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.179" endtime="20201110 08:38:36.201"></status>
</kw>
<msg timestamp="20201110 08:38:36.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.178" endtime="20201110 08:38:36.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.202" endtime="20201110 08:38:36.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.205" endtime="20201110 08:38:36.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.175" endtime="20201110 08:38:36.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.173" endtime="20201110 08:38:36.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.214" endtime="20201110 08:38:36.501"></status>
</kw>
<msg timestamp="20201110 08:38:36.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.212" endtime="20201110 08:38:36.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022425736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022545417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.505" endtime="20201110 08:38:36.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.513" endtime="20201110 08:38:36.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.210" endtime="20201110 08:38:36.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.208" endtime="20201110 08:38:36.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.520" level="INFO">${RESULT} = [{'time': 0.022545417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011968099999999995, 'source_diff': 0.00011968099999999995}, {'time': 0.0226705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.517" endtime="20201110 08:38:36.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.533" level="INFO">${ACCURACY} = {'diff': [0.00011968099999999995, 0.00011979200000000051, 0.0001199029999999976, 0.00011987500000000192, 0.0001194029999999971, 0.00011933299999999925, 0.00011986099999999889, 0.00011955599999999983, ...</msg>
<status status="PASS" starttime="20201110 08:38:36.521" endtime="20201110 08:38:36.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.537" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.536" endtime="20201110 08:38:36.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.540" level="INFO">VALUE: [0.00011968099999999995, 0.00011979200000000051, 0.0001199029999999976, 0.00011987500000000192, 0.0001194029999999971, 0.00011933299999999925, 0.00011986099999999889, 0.00011955599999999983, 0.0001195829999999995, 0.00011972300000000213, 0.00011955500000000036, 0.00012000000000000205, 0.00011972199999999919, 0.00011940300000000056, 0.0001198890000000015, 0.00012005600000000033, 0.00011955599999999983, 0.00012004200000000076, 0.00011955599999999983, 0.00011940199999999762, 0.00011987499999999846, 0.00011970799999999962, 0.0001198890000000015, 0.00011972199999999919, 0.00011955599999999983, 0.000119389000000001, 0.00012004200000000076, 0.00011972199999999919, 0.00011954099999999732, 0.00012022199999999969, 0.00012005600000000033, 0.00012023600000000273, 0.00012001399999999815, 0.00011972199999999919, 0.00011937500000000142, 0.0001197089999999991, 0.00011973599999999876, 0.00011970799999999962, 0.00012004200000000076, 0.00011947199999999894, 0.00011990300000000106, 0.00012026400000000187, 0.00012022299999999916, 0.00011954200000000026, 0.00011973599999999876, 0.00012017999999999751, 0.0001195690000000034, 0.00012005500000000086, 0.00012019500000000002, 0.00012004200000000076]</msg>
<status status="PASS" starttime="20201110 08:38:36.538" endtime="20201110 08:38:36.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.534" endtime="20201110 08:38:36.547"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.550" endtime="20201110 08:38:36.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.553" endtime="20201110 08:38:36.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.552" endtime="20201110 08:38:36.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.548" endtime="20201110 08:38:36.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.172" endtime="20201110 08:38:36.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.171" endtime="20201110 08:38:36.574"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.583" endtime="20201110 08:38:36.604"></status>
</kw>
<msg timestamp="20201110 08:38:36.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.581" endtime="20201110 08:38:36.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.606" endtime="20201110 08:38:36.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.608" endtime="20201110 08:38:36.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.578" endtime="20201110 08:38:36.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.576" endtime="20201110 08:38:36.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.617" endtime="20201110 08:38:36.904"></status>
</kw>
<msg timestamp="20201110 08:38:36.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.616" endtime="20201110 08:38:36.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022692361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.908" endtime="20201110 08:38:36.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.916" endtime="20201110 08:38:36.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.613" endtime="20201110 08:38:36.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.611" endtime="20201110 08:38:36.919"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.923" level="INFO">${RESULT} = [{'time': 0.022692361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012084700000000032, 'source_diff': 0.00012084700000000032}, {'time': 0.022823375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:36.919" endtime="20201110 08:38:36.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.936" level="INFO">${ACCURACY} = {'diff': [0.00012084700000000032, 0.00012102799999999872, 0.00012105600000000133, 0.00012122300000000016, 0.000121083000000001, 0.00012104099999999882, 0.00012055500000000136, 0.00012122200000000069, ...</msg>
<status status="PASS" starttime="20201110 08:38:36.924" endtime="20201110 08:38:36.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.940" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.939" endtime="20201110 08:38:36.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.943" level="INFO">VALUE: [0.00012084700000000032, 0.00012102799999999872, 0.00012105600000000133, 0.00012122300000000016, 0.000121083000000001, 0.00012104099999999882, 0.00012055500000000136, 0.00012122200000000069, 0.00012104200000000176, 0.00012055600000000083, 0.00012120800000000112, 0.00012055600000000083, 0.00012055599999999736, 0.00012090199999999912, 0.00012122200000000069, 0.00012104100000000229, 0.00012038899999999852, 0.0001209029999999986, 0.00012072200000000019, 0.00012072200000000019, 0.000120389000000002, 0.00012072300000000313, 0.00012120799999999765, 0.00012055500000000136, 0.00012072200000000019, 0.00012054199999999779, 0.0001204029999999981, 0.00012088899999999903, 0.00012088899999999903, 0.00012069500000000052, 0.00012105599999999786, 0.00012066599999999844, 0.00012072200000000019, 0.00012088899999999903, 0.00012115300000000231, 0.00012032000000000015, 0.00012083400000000022, 0.0001212229999999967, 0.00012049999999999908, 0.00012122200000000069, 0.00012072200000000019, 0.0001204310000000007, 0.00012037499999999896, 0.00012095900000000034, 0.00012072200000000019, 0.00012113899999999928, 0.00012122300000000016, 0.00012088799999999955, 0.00012122200000000069, 0.00012073599999999976]</msg>
<status status="PASS" starttime="20201110 08:38:36.941" endtime="20201110 08:38:36.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.937" endtime="20201110 08:38:36.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.947" endtime="20201110 08:38:36.948"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.950" endtime="20201110 08:38:36.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.949" endtime="20201110 08:38:36.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.945" endtime="20201110 08:38:36.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.575" endtime="20201110 08:38:36.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.574" endtime="20201110 08:38:36.971"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.980" endtime="20201110 08:38:37.000"></status>
</kw>
<msg timestamp="20201110 08:38:37.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.978" endtime="20201110 08:38:37.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.002" endtime="20201110 08:38:37.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.005" endtime="20201110 08:38:37.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.976" endtime="20201110 08:38:37.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.974" endtime="20201110 08:38:37.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.014" endtime="20201110 08:38:37.300"></status>
</kw>
<msg timestamp="20201110 08:38:37.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.012" endtime="20201110 08:38:37.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022691736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022813764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.304" endtime="20201110 08:38:37.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.312" endtime="20201110 08:38:37.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.009" endtime="20201110 08:38:37.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.008" endtime="20201110 08:38:37.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.319" level="INFO">${RESULT} = [{'time': 0.022813764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012202799999999972, 'source_diff': 0.00012202799999999972}, {'time': 0.022943778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:37.316" endtime="20201110 08:38:37.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.332" level="INFO">${ACCURACY} = {'diff': [0.00012202799999999972, 0.0001222090000000016, 0.00012155600000000183, 0.00012173600000000076, 0.00012205499999999939, 0.00012150000000000008, 0.0001222220000000017, 0.00012172199999999772, ...</msg>
<status status="PASS" starttime="20201110 08:38:37.320" endtime="20201110 08:38:37.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.337" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.336" endtime="20201110 08:38:37.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.339" level="INFO">VALUE: [0.00012202799999999972, 0.0001222090000000016, 0.00012155600000000183, 0.00012173600000000076, 0.00012205499999999939, 0.00012150000000000008, 0.0001222220000000017, 0.00012172199999999772, 0.00012208400000000147, 0.00012191699999999916, 0.00012138899999999953, 0.0001222090000000016, 0.00012188900000000003, 0.00012138800000000005, 0.00012138899999999953, 0.00012155600000000183, 0.00012204200000000276, 0.00012188900000000003, 0.00012223600000000126, 0.00012138899999999953, 0.00012155600000000183, 0.00012156899999999846, 0.00012156900000000193, 0.00012223600000000126, 0.00012172199999999772, 0.0001218189999999987, 0.0001219440000000023, 0.00012137499999999996, 0.00012137499999999996, 0.00012137499999999996, 0.00012152799999999922, 0.00012197299999999744, 0.0001221250000000007, 0.00012173600000000076, 0.0001215700000000014, 0.00012165299999999934, 0.0001222229999999977, 0.00012138899999999953, 0.00012188800000000055, 0.00012187500000000046, 0.00012187500000000046, 0.00012141699999999866, 0.000121389000000003, 0.00012172300000000066, 0.00012170899999999762, 0.00012155600000000183, 0.00012205499999999939, 0.0001222640000000004, 0.00012154099999999932, 0.00012159700000000107]</msg>
<status status="PASS" starttime="20201110 08:38:37.338" endtime="20201110 08:38:37.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.333" endtime="20201110 08:38:37.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.343" endtime="20201110 08:38:37.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.346" endtime="20201110 08:38:37.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.345" endtime="20201110 08:38:37.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.341" endtime="20201110 08:38:37.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.972" endtime="20201110 08:38:37.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.971" endtime="20201110 08:38:37.367"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.376" endtime="20201110 08:38:37.396"></status>
</kw>
<msg timestamp="20201110 08:38:37.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.374" endtime="20201110 08:38:37.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.398" endtime="20201110 08:38:37.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.400" endtime="20201110 08:38:37.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.372" endtime="20201110 08:38:37.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.370" endtime="20201110 08:38:37.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.409" endtime="20201110 08:38:37.696"></status>
</kw>
<msg timestamp="20201110 08:38:37.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.408" endtime="20201110 08:38:37.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022421167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022543458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.700" endtime="20201110 08:38:37.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.708" endtime="20201110 08:38:37.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.405" endtime="20201110 08:38:37.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.403" endtime="20201110 08:38:37.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.715" level="INFO">${RESULT} = [{'time': 0.022543458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012229100000000007, 'source_diff': 0.00012229100000000007}, {'time': 0.022671458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:37.712" endtime="20201110 08:38:37.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.728" level="INFO">${ACCURACY} = {'diff': [0.00012229100000000007, 0.00012268, 0.00012322199999999922, 0.0001232220000000027, 0.00012274999999999786, 0.0001224030000000001, 0.0001230420000000003, 0.00012236100000000139, 0.00012238799...</msg>
<status status="PASS" starttime="20201110 08:38:37.716" endtime="20201110 08:38:37.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.733" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.732" endtime="20201110 08:38:37.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.737" level="INFO">VALUE: [0.00012229100000000007, 0.00012268, 0.00012322199999999922, 0.0001232220000000027, 0.00012274999999999786, 0.0001224030000000001, 0.0001230420000000003, 0.00012236100000000139, 0.00012238799999999758, 0.0001229030000000006, 0.00012306899999999996, 0.0001232220000000027, 0.00012305599999999986, 0.00012272300000000166, 0.00012305599999999986, 0.00012255599999999936, 0.00012305500000000039, 0.00012270799999999915, 0.00012306899999999996, 0.00012305499999999692, 0.00012300000000000158, 0.00012270899999999862, 0.00012272199999999872, 0.00012306999999999943, 0.00012305599999999986, 0.00012255499999999989, 0.00012304100000000082, 0.00012254100000000032, 0.00012277800000000047, 0.00012237499999999749, 0.00012287499999999799, 0.00012288900000000103, 0.0001232229999999987, 0.00012290199999999765, 0.00012306899999999996, 0.00012238900000000053, 0.00012255599999999936, 0.00012272199999999872, 0.00012272199999999872, 0.00012237500000000096, 0.00012255600000000283, 0.00012290200000000112, 0.0001230969999999991, 0.00012305499999999692, 0.00012288900000000103, 0.0001229030000000006, 0.00012255599999999936, 0.00012238900000000053, 0.00012323700000000173, 0.0001224160000000002]</msg>
<status status="PASS" starttime="20201110 08:38:37.735" endtime="20201110 08:38:37.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.729" endtime="20201110 08:38:37.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.741" endtime="20201110 08:38:37.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.746" endtime="20201110 08:38:37.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.743" endtime="20201110 08:38:37.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.739" endtime="20201110 08:38:37.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.368" endtime="20201110 08:38:37.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.368" endtime="20201110 08:38:37.768"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.777" endtime="20201110 08:38:37.797"></status>
</kw>
<msg timestamp="20201110 08:38:37.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.775" endtime="20201110 08:38:37.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.798" endtime="20201110 08:38:37.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.801" endtime="20201110 08:38:37.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.773" endtime="20201110 08:38:37.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.771" endtime="20201110 08:38:37.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.810" endtime="20201110 08:38:38.098"></status>
</kw>
<msg timestamp="20201110 08:38:38.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023787319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.808" endtime="20201110 08:38:38.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023787319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023910667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.102" endtime="20201110 08:38:38.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.110" endtime="20201110 08:38:38.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.806" endtime="20201110 08:38:38.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.804" endtime="20201110 08:38:38.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.116" level="INFO">${RESULT} = [{'time': 0.023910667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012334799999999882, 'source_diff': 0.00012334799999999882}, {'time': 0.024041764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:38.113" endtime="20201110 08:38:38.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.129" level="INFO">${ACCURACY} = {'diff': [0.00012334799999999882, 0.0001238060000000006, 0.00012405499999999792, 0.00012405499999999792, 0.0001239169999999977, 0.00012338900000000153, 0.0001237359999999993, 0.00012338900000000153, 0...</msg>
<status status="PASS" starttime="20201110 08:38:38.117" endtime="20201110 08:38:38.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.134" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.133" endtime="20201110 08:38:38.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.136" level="INFO">VALUE: [0.00012334799999999882, 0.0001238060000000006, 0.00012405499999999792, 0.00012405499999999792, 0.0001239169999999977, 0.00012338900000000153, 0.0001237359999999993, 0.00012338900000000153, 0.00012337499999999849, 0.00012404199999999782, 0.00012370899999999962, 0.00012338899999999806, 0.00012355500000000089, 0.00012406900000000096, 0.00012356999999999993, 0.0001240420000000013, 0.0001235559999999969, 0.0001237229999999992, 0.00012377800000000147, 0.00012372199999999972, 0.00012341700000000067, 0.0001237359999999993, 0.00012356999999999993, 0.00012338900000000153, 0.0001237220000000032, 0.00012344400000000033, 0.00012422200000000022, 0.00012373600000000276, 0.00012388899999999856, 0.0001241389999999988, 0.00012338899999999806, 0.0001240420000000013, 0.00012407000000000043, 0.00012354199999999732, 0.00012355500000000089, 0.00012388799999999908, 0.00012354100000000132, 0.00012372199999999972, 0.00012405500000000139, 0.00012352799999999775, 0.0001235969999999996, 0.00012355600000000036, 0.0001240970000000001, 0.00012372199999999972, 0.00012388800000000255, 0.00012338899999999806, 0.00012405500000000139, 0.00012334699999999935, 0.0001234030000000011, 0.00012388899999999856]</msg>
<status status="PASS" starttime="20201110 08:38:38.135" endtime="20201110 08:38:38.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.130" endtime="20201110 08:38:38.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.140" endtime="20201110 08:38:38.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.144" endtime="20201110 08:38:38.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.142" endtime="20201110 08:38:38.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.138" endtime="20201110 08:38:38.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.769" endtime="20201110 08:38:38.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.768" endtime="20201110 08:38:38.164"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.173" endtime="20201110 08:38:38.193"></status>
</kw>
<msg timestamp="20201110 08:38:38.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.171" endtime="20201110 08:38:38.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.195" endtime="20201110 08:38:38.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.198" endtime="20201110 08:38:38.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.169" endtime="20201110 08:38:38.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.167" endtime="20201110 08:38:38.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.207" endtime="20201110 08:38:38.494"></status>
</kw>
<msg timestamp="20201110 08:38:38.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:38.205" endtime="20201110 08:38:38.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02229775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:38.498" endtime="20201110 08:38:38.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.506" endtime="20201110 08:38:38.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.203" endtime="20201110 08:38:38.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.201" endtime="20201110 08:38:38.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.513" level="INFO">${RESULT} = [{'time': 0.022422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012484699999999738, 'source_diff': 0.00012484699999999738}, {'time': 0.022556597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:38.509" endtime="20201110 08:38:38.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.526" level="INFO">${ACCURACY} = {'diff': [0.00012484699999999738, 0.00012493000000000226, 0.00012520800000000165, 0.0001250689999999985, 0.00012438899999999906, 0.00012522200000000122, 0.00012457000000000093, 0.00012455600000000136,...</msg>
<status status="PASS" starttime="20201110 08:38:38.514" endtime="20201110 08:38:38.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.530" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.529" endtime="20201110 08:38:38.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.533" level="INFO">VALUE: [0.00012484699999999738, 0.00012493000000000226, 0.00012520800000000165, 0.0001250689999999985, 0.00012438899999999906, 0.00012522200000000122, 0.00012457000000000093, 0.00012455600000000136, 0.0001247230000000002, 0.00012488899999999956, 0.00012455499999999842, 0.00012438900000000253, 0.0001252360000000008, 0.00012522199999999775, 0.00012522199999999775, 0.00012530499999999917, 0.00012458300000000103, 0.00012470899999999716, 0.00012490199999999965, 0.00012472200000000072, 0.00012522199999999775, 0.00012470800000000115, 0.00012463900000000278, 0.00012472200000000072, 0.0001245840000000005, 0.00012520899999999766, 0.00012490199999999965, 0.00012440299999999863, 0.00012520799999999818, 0.00012472200000000072, 0.00012472200000000072, 0.00012487499999999999, 0.0001252360000000008, 0.00012505499999999892, 0.00012490199999999965, 0.00012454099999999885, 0.00012504099999999935, 0.00012504199999999882, 0.00012507000000000143, 0.00012455600000000136, 0.00012483400000000075, 0.0001252360000000008, 0.00012454199999999832, 0.00012520799999999818, 0.0001247360000000003, 0.00012522199999999775, 0.00012455600000000136, 0.0001247360000000003, 0.0001247360000000003, 0.0001245970000000006]</msg>
<status status="PASS" starttime="20201110 08:38:38.531" endtime="20201110 08:38:38.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.527" endtime="20201110 08:38:38.534"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.536" endtime="20201110 08:38:38.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.540" endtime="20201110 08:38:38.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.538" endtime="20201110 08:38:38.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.535" endtime="20201110 08:38:38.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.165" endtime="20201110 08:38:38.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.165" endtime="20201110 08:38:38.561"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.569" endtime="20201110 08:38:38.591"></status>
</kw>
<msg timestamp="20201110 08:38:38.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.568" endtime="20201110 08:38:38.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.592" endtime="20201110 08:38:38.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.595" endtime="20201110 08:38:38.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.565" endtime="20201110 08:38:38.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.563" endtime="20201110 08:38:38.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.604" endtime="20201110 08:38:38.891"></status>
</kw>
<msg timestamp="20201110 08:38:38.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.602" endtime="20201110 08:38:38.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.895" endtime="20201110 08:38:38.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.904" endtime="20201110 08:38:38.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.600" endtime="20201110 08:38:38.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.598" endtime="20201110 08:38:38.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.910" level="INFO">${RESULT} = [{'time': 0.022455431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012555600000000236, 'source_diff': 0.00012555600000000236}, {'time': 0.022591403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:38.907" endtime="20201110 08:38:38.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.923" level="INFO">${ACCURACY} = {'diff': [0.00012555600000000236, 0.00012620899999999866, 0.00012576400000000043, 0.00012538900000000006, 0.00012587500000000099, 0.00012587500000000099, 0.00012554199999999932, 0.00012626399999999746...</msg>
<status status="PASS" starttime="20201110 08:38:38.911" endtime="20201110 08:38:38.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.928" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.927" endtime="20201110 08:38:38.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.930" level="INFO">VALUE: [0.00012555600000000236, 0.00012620899999999866, 0.00012576400000000043, 0.00012538900000000006, 0.00012587500000000099, 0.00012587500000000099, 0.00012554199999999932, 0.00012626399999999746, 0.00012554199999999932, 0.00012587500000000099, 0.0001262230000000017, 0.00012538900000000006, 0.00012606900000000296, 0.00012538900000000006, 0.00012605600000000286, 0.00012590300000000013, 0.00012604199999999982, 0.0001254169999999992, 0.0001254169999999992, 0.00012541599999999972, 0.00012588800000000108, 0.00012552700000000028, 0.00012538900000000006, 0.00012543099999999877, 0.0001260559999999994, 0.00012626300000000146, 0.00012612499999999777, 0.00012551400000000018, 0.00012590200000000065, 0.00012558300000000203, 0.00012570799999999868, 0.00012590300000000013, 0.00012588900000000056, 0.0001257360000000013, 0.00012591600000000022, 0.00012572299999999773, 0.00012601299999999774, 0.00012605499999999992, 0.00012572199999999825, 0.00012620799999999918, 0.0001262499999999979, 0.00012588900000000056, 0.00012551400000000018, 0.00012604199999999982, 0.00012616600000000047, 0.0001262360000000018, 0.00012547300000000094, 0.00012537500000000049, 0.0001257360000000013, 0.00012588900000000056]</msg>
<status status="PASS" starttime="20201110 08:38:38.929" endtime="20201110 08:38:38.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.924" endtime="20201110 08:38:38.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.934" endtime="20201110 08:38:38.935"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.937" endtime="20201110 08:38:38.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.936" endtime="20201110 08:38:38.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.932" endtime="20201110 08:38:38.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.562" endtime="20201110 08:38:38.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.561" endtime="20201110 08:38:38.958"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.967" endtime="20201110 08:38:38.988"></status>
</kw>
<msg timestamp="20201110 08:38:38.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.966" endtime="20201110 08:38:38.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.989" endtime="20201110 08:38:38.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.992" endtime="20201110 08:38:38.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.963" endtime="20201110 08:38:38.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.961" endtime="20201110 08:38:38.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.001" endtime="20201110 08:38:39.288"></status>
</kw>
<msg timestamp="20201110 08:38:39.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.999" endtime="20201110 08:38:39.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022380056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022506792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.292" endtime="20201110 08:38:39.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.300" endtime="20201110 08:38:39.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.997" endtime="20201110 08:38:39.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.995" endtime="20201110 08:38:39.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.307" level="INFO">${RESULT} = [{'time': 0.022506792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001267360000000023, 'source_diff': 0.0001267360000000023}, {'time': 0.02263975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:39.303" endtime="20201110 08:38:39.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.320" level="INFO">${ACCURACY} = {'diff': [0.0001267360000000023, 0.0001265559999999999, 0.0001265000000000016, 0.00012672299999999873, 0.00012722299999999923, 0.00012687499999999852, 0.00012672199999999925, 0.00012676400000000143, 0...</msg>
<status status="PASS" starttime="20201110 08:38:39.308" endtime="20201110 08:38:39.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.324" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.323" endtime="20201110 08:38:39.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.327" level="INFO">VALUE: [0.0001267360000000023, 0.0001265559999999999, 0.0001265000000000016, 0.00012672299999999873, 0.00012722299999999923, 0.00012687499999999852, 0.00012672199999999925, 0.00012676400000000143, 0.00012672200000000272, 0.00012676399999999796, 0.00012672199999999925, 0.00012705599999999692, 0.00012634799999999835, 0.00012673599999999882, 0.0001271390000000018, 0.0001268889999999981, 0.00012694499999999984, 0.00012722199999999975, 0.00012672200000000272, 0.00012687499999999852, 0.00012655500000000042, 0.00012722199999999975, 0.00012638900000000106, 0.00012638900000000106, 0.00012687500000000199, 0.00012694400000000036, 0.00012638900000000106, 0.0001272369999999988, 0.0001265559999999999, 0.00012655500000000042, 0.00012705500000000092, 0.00012705500000000092, 0.00012637499999999802, 0.00012656999999999946, 0.00012672200000000272, 0.00012634799999999835, 0.0001269719999999995, 0.00012654100000000085, 0.00012705500000000092, 0.00012654100000000085, 0.00012704200000000082, 0.00012656999999999946, 0.00012673599999999882, 0.00012690300000000113, 0.00012672299999999873, 0.00012691600000000122, 0.0001266940000000001, 0.00012722199999999975, 0.00012672199999999925, 0.0001270560000000004]</msg>
<status status="PASS" starttime="20201110 08:38:39.325" endtime="20201110 08:38:39.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.321" endtime="20201110 08:38:39.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.330" endtime="20201110 08:38:39.332"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.334" endtime="20201110 08:38:39.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.332" endtime="20201110 08:38:39.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.329" endtime="20201110 08:38:39.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.959" endtime="20201110 08:38:39.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.959" endtime="20201110 08:38:39.355"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.363" endtime="20201110 08:38:39.384"></status>
</kw>
<msg timestamp="20201110 08:38:39.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.362" endtime="20201110 08:38:39.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.385" endtime="20201110 08:38:39.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.388" endtime="20201110 08:38:39.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.359" endtime="20201110 08:38:39.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.357" endtime="20201110 08:38:39.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.397" endtime="20201110 08:38:39.685"></status>
</kw>
<msg timestamp="20201110 08:38:39.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.396" endtime="20201110 08:38:39.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022418556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022546569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.689" endtime="20201110 08:38:39.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.698" endtime="20201110 08:38:39.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.393" endtime="20201110 08:38:39.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.391" endtime="20201110 08:38:39.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.705" level="INFO">${RESULT} = [{'time': 0.022546569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012801299999999974, 'source_diff': 0.00012801299999999974}, {'time': 0.022679611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:39.702" endtime="20201110 08:38:39.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.764" level="INFO">${ACCURACY} = {'diff': [0.00012801299999999974, 0.00012823600000000032, 0.0001275560000000009, 0.00012805499999999845, 0.00012802799999999878, 0.00012822200000000075, 0.0001273889999999986, 0.00012769500000000059, ...</msg>
<status status="PASS" starttime="20201110 08:38:39.706" endtime="20201110 08:38:39.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.768" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.767" endtime="20201110 08:38:39.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.771" level="INFO">VALUE: [0.00012801299999999974, 0.00012823600000000032, 0.0001275560000000009, 0.00012805499999999845, 0.00012802799999999878, 0.00012822200000000075, 0.0001273889999999986, 0.00012769500000000059, 0.00012752700000000228, 0.00012804099999999888, 0.00012772200000000025, 0.00012755500000000142, 0.00012805599999999792, 0.0001273889999999986, 0.00012822200000000075, 0.0001277369999999993, 0.00012773599999999982, 0.00012740300000000163, 0.00012823600000000032, 0.00012772200000000025, 0.00012772200000000025, 0.00012822200000000075, 0.0001275560000000009, 0.00012738900000000206, 0.0001278879999999996, 0.00012805500000000192, 0.00012805500000000192, 0.00012770800000000068, 0.00012787499999999952, 0.0001273200000000002, 0.00012822300000000023, 0.0001278889999999991, 0.0001278879999999996, 0.0001280690000000015, 0.0001279170000000017, 0.0001278889999999991, 0.00012772200000000025, 0.0001278889999999991, 0.00012737499999999902, 0.0001276109999999997, 0.0001273879999999991, 0.000127778000000002, 0.00012773599999999982, 0.0001273889999999986, 0.00012772200000000025, 0.00012770800000000068, 0.00012802800000000225, 0.00012822300000000023, 0.00012790199999999918, 0.00012790299999999866]</msg>
<status status="PASS" starttime="20201110 08:38:39.769" endtime="20201110 08:38:39.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.765" endtime="20201110 08:38:39.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.774" endtime="20201110 08:38:39.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.778" endtime="20201110 08:38:39.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.776" endtime="20201110 08:38:39.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.773" endtime="20201110 08:38:39.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.356" endtime="20201110 08:38:39.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.355" endtime="20201110 08:38:39.799"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.808" endtime="20201110 08:38:39.829"></status>
</kw>
<msg timestamp="20201110 08:38:39.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.807" endtime="20201110 08:38:39.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.831" endtime="20201110 08:38:39.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.833" endtime="20201110 08:38:39.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.803" endtime="20201110 08:38:39.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.801" endtime="20201110 08:38:39.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.842" endtime="20201110 08:38:40.129"></status>
</kw>
<msg timestamp="20201110 08:38:40.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.841" endtime="20201110 08:38:40.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023359542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.133" endtime="20201110 08:38:40.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.141" endtime="20201110 08:38:40.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.838" endtime="20201110 08:38:40.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.837" endtime="20201110 08:38:40.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.148" level="INFO">${RESULT} = [{'time': 0.023487889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012834700000000088, 'source_diff': 0.00012834700000000088}, {'time': 0.023622917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:40.145" endtime="20201110 08:38:40.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.161" level="INFO">${ACCURACY} = {'diff': [0.00012834700000000088, 0.00012870900000000116, 0.00012916699999999948, 0.00012870800000000168, 0.0001285269999999998, 0.00012873600000000082, 0.00012872200000000125, 0.00012890299999999966,...</msg>
<status status="PASS" starttime="20201110 08:38:40.149" endtime="20201110 08:38:40.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.166" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.165" endtime="20201110 08:38:40.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.169" level="INFO">VALUE: [0.00012834700000000088, 0.00012870900000000116, 0.00012916699999999948, 0.00012870800000000168, 0.0001285269999999998, 0.00012873600000000082, 0.00012872200000000125, 0.00012890299999999966, 0.00012840199999999968, 0.00012904199999999935, 0.00012887500000000052, 0.0001288890000000001, 0.00012923600000000132, 0.0001283889999999996, 0.00012905499999999945, 0.00012887499999999705, 0.00012926400000000046, 0.00012857000000000146, 0.0001290560000000024, 0.0001288890000000001, 0.00012855499999999895, 0.00012855500000000242, 0.0001287500000000004, 0.00012918099999999905, 0.00012922199999999828, 0.00012902799999999978, 0.0001286940000000021, 0.0001290690000000025, 0.00012855500000000242, 0.0001288330000000018, 0.00012873600000000082, 0.00012852799999999928, 0.00012872200000000125, 0.00012920900000000166, 0.00012872299999999726, 0.00012837500000000002, 0.0001288890000000001, 0.00012906899999999902, 0.00012844500000000134, 0.0001287079999999982, 0.00012873600000000082, 0.00012922300000000123, 0.00012854200000000232, 0.00012854100000000285, 0.00012887500000000052, 0.00012837500000000002, 0.00012922199999999828, 0.00012891699999999923, 0.00012855599999999842, 0.0001287370000000003]</msg>
<status status="PASS" starttime="20201110 08:38:40.167" endtime="20201110 08:38:40.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.162" endtime="20201110 08:38:40.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.172" endtime="20201110 08:38:40.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.176" endtime="20201110 08:38:40.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.174" endtime="20201110 08:38:40.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.170" endtime="20201110 08:38:40.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.800" endtime="20201110 08:38:40.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.799" endtime="20201110 08:38:40.196"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.206" endtime="20201110 08:38:40.227"></status>
</kw>
<msg timestamp="20201110 08:38:40.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.204" endtime="20201110 08:38:40.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.229" endtime="20201110 08:38:40.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.231" endtime="20201110 08:38:40.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.201" endtime="20201110 08:38:40.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.199" endtime="20201110 08:38:40.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.240" endtime="20201110 08:38:40.526"></status>
</kw>
<msg timestamp="20201110 08:38:40.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023784528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.239" endtime="20201110 08:38:40.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023655181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023784528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.530" endtime="20201110 08:38:40.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.539" endtime="20201110 08:38:40.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.236" endtime="20201110 08:38:40.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.235" endtime="20201110 08:38:40.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.545" level="INFO">${RESULT} = [{'time': 0.023784528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001293469999999984, 'source_diff': 0.0001293469999999984}, {'time': 0.023921542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:40.542" endtime="20201110 08:38:40.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.559" level="INFO">${ACCURACY} = {'diff': [0.0001293469999999984, 0.0001298890000000011, 0.00012937500000000102, 0.00012956899999999952, 0.00013005499999999698, 0.00012954100000000038, 0.00012955499999999995, 0.0001300699999999995, 0...</msg>
<status status="PASS" starttime="20201110 08:38:40.546" endtime="20201110 08:38:40.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.563" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.562" endtime="20201110 08:38:40.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.566" level="INFO">VALUE: [0.0001293469999999984, 0.0001298890000000011, 0.00012937500000000102, 0.00012956899999999952, 0.00013005499999999698, 0.00012954100000000038, 0.00012955499999999995, 0.0001300699999999995, 0.0001298890000000011, 0.00013022199999999928, 0.0001298890000000011, 0.00013004200000000035, 0.0001298890000000011, 0.00012937499999999755, 0.00012969399999999964, 0.00012954199999999985, 0.0001302079999999997, 0.00012937499999999755, 0.00013005599999999992, 0.00013004200000000035, 0.00013015200000000143, 0.00013023599999999885, 0.00012988899999999762, 0.0001302500000000019, 0.00013005599999999992, 0.00012955599999999942, 0.00012940200000000068, 0.00012973599999999835, 0.00012972200000000225, 0.00013004100000000088, 0.00012940300000000016, 0.00013022199999999928, 0.00012991699999999676, 0.00013023699999999833, 0.0001295560000000029, 0.00013005500000000045, 0.00013022199999999928, 0.00013023600000000232, 0.00012954199999999985, 0.00012972200000000225, 0.00013008399999999906, 0.0001293890000000006, 0.00013022299999999876, 0.00012993000000000032, 0.00012937500000000102, 0.00012954100000000038, 0.00012972199999999878, 0.00012972199999999878, 0.00012973599999999835, 0.00012940300000000016]</msg>
<status status="PASS" starttime="20201110 08:38:40.564" endtime="20201110 08:38:40.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.560" endtime="20201110 08:38:40.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.569" endtime="20201110 08:38:40.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.573" endtime="20201110 08:38:40.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.571" endtime="20201110 08:38:40.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.568" endtime="20201110 08:38:40.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.197" endtime="20201110 08:38:40.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.197" endtime="20201110 08:38:40.594"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.602" endtime="20201110 08:38:40.625"></status>
</kw>
<msg timestamp="20201110 08:38:40.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.601" endtime="20201110 08:38:40.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.626" endtime="20201110 08:38:40.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.629" endtime="20201110 08:38:40.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.598" endtime="20201110 08:38:40.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.596" endtime="20201110 08:38:40.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.638" endtime="20201110 08:38:40.924"></status>
</kw>
<msg timestamp="20201110 08:38:40.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.636" endtime="20201110 08:38:40.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023115472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023246097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.928" endtime="20201110 08:38:40.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.936" endtime="20201110 08:38:40.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.634" endtime="20201110 08:38:40.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.632" endtime="20201110 08:38:40.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.943" level="INFO">${RESULT} = [{'time': 0.023246097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001306249999999988, 'source_diff': 0.0001306249999999988}, {'time': 0.023391097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:40.940" endtime="20201110 08:38:40.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.956" level="INFO">${ACCURACY} = {'diff': [0.0001306249999999988, 0.00013037499999999855, 0.0001304029999999977, 0.00013105599999999745, 0.0001309029999999982, 0.00013054200000000085, 0.00013104200000000135, 0.00013116599999999853, 0...</msg>
<status status="PASS" starttime="20201110 08:38:40.944" endtime="20201110 08:38:40.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.961" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.960" endtime="20201110 08:38:40.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.963" level="INFO">VALUE: [0.0001306249999999988, 0.00013037499999999855, 0.0001304029999999977, 0.00013105599999999745, 0.0001309029999999982, 0.00013054200000000085, 0.00013104200000000135, 0.00013116599999999853, 0.0001307080000000002, 0.0001307080000000002, 0.00013124999999999942, 0.00013122200000000028, 0.00013068100000000055, 0.00013076400000000196, 0.00013122299999999976, 0.0001304029999999977, 0.00013072199999999978, 0.00013041700000000073, 0.00013055600000000042, 0.00013072199999999978, 0.00013123599999999985, 0.00013054199999999738, 0.00013038799999999864, 0.00013122200000000028, 0.00013105499999999798, 0.00013088899999999862, 0.00013090300000000166, 0.00013041700000000073, 0.00013088899999999862, 0.00013122200000000028, 0.00013054100000000138, 0.00013038899999999812, 0.00013054100000000138, 0.00013104200000000135, 0.00013072199999999978, 0.00013105599999999745, 0.00013105600000000092, 0.00013087499999999905, 0.00013124999999999942, 0.0001305830000000001, 0.00013105500000000145, 0.00013090300000000166, 0.00013122200000000028, 0.00013123599999999985, 0.0001312090000000002, 0.00013087499999999905, 0.000131166000000002, 0.00013123599999999985, 0.0001308890000000021, 0.00013057]</msg>
<status status="PASS" starttime="20201110 08:38:40.962" endtime="20201110 08:38:40.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.957" endtime="20201110 08:38:40.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.967" endtime="20201110 08:38:40.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.971" endtime="20201110 08:38:40.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.969" endtime="20201110 08:38:40.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.965" endtime="20201110 08:38:40.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.595" endtime="20201110 08:38:40.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.594" endtime="20201110 08:38:40.991"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.000" endtime="20201110 08:38:41.021"></status>
</kw>
<msg timestamp="20201110 08:38:41.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.999" endtime="20201110 08:38:41.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.023" endtime="20201110 08:38:41.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.026" endtime="20201110 08:38:41.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.996" endtime="20201110 08:38:41.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.994" endtime="20201110 08:38:41.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.035" endtime="20201110 08:38:41.320"></status>
</kw>
<msg timestamp="20201110 08:38:41.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:41.033" endtime="20201110 08:38:41.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02250125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:41.324" endtime="20201110 08:38:41.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.332" endtime="20201110 08:38:41.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.030" endtime="20201110 08:38:41.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.029" endtime="20201110 08:38:41.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.339" level="INFO">${RESULT} = [{'time': 0.022632889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013163899999999937, 'source_diff': 0.00013163899999999937}, {'time': 0.022774903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:41.336" endtime="20201110 08:38:41.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.353" level="INFO">${ACCURACY} = {'diff': [0.00013163899999999937, 0.00013137499999999955, 0.00013227799999999956, 0.00013136099999999998, 0.00013205499999999898, 0.00013205499999999898, 0.00013209800000000063, 0.00013172200000000078...</msg>
<status status="PASS" starttime="20201110 08:38:41.340" endtime="20201110 08:38:41.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.358" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.357" endtime="20201110 08:38:41.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.360" level="INFO">VALUE: [0.00013163899999999937, 0.00013137499999999955, 0.00013227799999999956, 0.00013136099999999998, 0.00013205499999999898, 0.00013205499999999898, 0.00013209800000000063, 0.00013172200000000078, 0.0001322219999999978, 0.00013155599999999795, 0.00013155599999999795, 0.0001315830000000011, 0.0001317639999999995, 0.00013138899999999912, 0.00013205499999999898, 0.0001322080000000017, 0.0001322770000000001, 0.00013152699999999934, 0.00013191600000000275, 0.0001318470000000009, 0.00013174999999999992, 0.00013155499999999848, 0.00013170799999999774, 0.00013138899999999912, 0.0001318890000000031, 0.00013204199999999888, 0.0001313890000000026, 0.00013145800000000096, 0.0001317080000000012, 0.0001322219999999978, 0.00013190300000000266, 0.00013169500000000112, 0.00013205599999999845, 0.000132264, 0.00013191599999999928, 0.00013188899999999962, 0.0001317080000000012, 0.00013138899999999912, 0.00013208400000000106, 0.00013191699999999876, 0.00013225000000000042, 0.00013179199999999863, 0.00013141600000000225, 0.0001313890000000026, 0.00013155500000000195, 0.00013206899999999855, 0.00013187500000000005, 0.00013204200000000235, 0.00013138899999999912, 0.00013220899999999772]</msg>
<status status="PASS" starttime="20201110 08:38:41.359" endtime="20201110 08:38:41.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.354" endtime="20201110 08:38:41.361"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.364" endtime="20201110 08:38:41.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.367" endtime="20201110 08:38:41.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.366" endtime="20201110 08:38:41.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.362" endtime="20201110 08:38:41.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.992" endtime="20201110 08:38:41.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.992" endtime="20201110 08:38:41.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.390" endtime="20201110 08:38:41.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.392" endtime="20201110 08:38:41.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.390" endtime="20201110 08:38:41.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.389" endtime="20201110 08:38:41.412"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:01.321" endtime="20201110 08:38:41.412" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:19.895" endtime="20201110 08:38:41.416"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.470" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:38:41.479" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:38:42.658" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:38:41.469" endtime="20201110 08:38:42.659"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.661" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:38:42.660" endtime="20201110 08:38:42.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.468" endtime="20201110 08:38:42.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.664" endtime="20201110 08:38:42.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.663" endtime="20201110 08:38:42.907"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.919" endtime="20201110 08:38:42.934"></status>
</kw>
<msg timestamp="20201110 08:38:42.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:38:42.918" endtime="20201110 08:38:42.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201110 08:38:42.935" endtime="20201110 08:38:42.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.940" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:42.938" endtime="20201110 08:38:42.940"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:42.915" endtime="20201110 08:38:42.941"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:42.913" endtime="20201110 08:38:42.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.912" endtime="20201110 08:38:42.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:42.946" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:42.946" endtime="20201110 08:38:42.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.942" endtime="20201110 08:38:42.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.911" endtime="20201110 08:38:42.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.910" endtime="20201110 08:38:42.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.949" endtime="20201110 08:38:42.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.909" endtime="20201110 08:38:42.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.952" endtime="20201110 08:38:42.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.908" endtime="20201110 08:38:42.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.467" endtime="20201110 08:38:42.954"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.960" endtime="20201110 08:38:42.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.959" endtime="20201110 08:38:42.980"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.994" endtime="20201110 08:38:43.007"></status>
</kw>
<msg timestamp="20201110 08:38:43.008" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.992" endtime="20201110 08:38:43.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.010" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.009" endtime="20201110 08:38:43.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.013" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:43.011" endtime="20201110 08:38:43.013"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:42.989" endtime="20201110 08:38:43.014"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:42.987" endtime="20201110 08:38:43.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.986" endtime="20201110 08:38:43.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:43.019" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:43.018" endtime="20201110 08:38:43.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.016" endtime="20201110 08:38:43.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.985" endtime="20201110 08:38:43.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.984" endtime="20201110 08:38:43.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.020" endtime="20201110 08:38:43.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.983" endtime="20201110 08:38:43.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.981" endtime="20201110 08:38:43.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.957" endtime="20201110 08:38:43.023"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:43.027" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.036" endtime="20201110 08:38:45.127"></status>
</kw>
<msg timestamp="20201110 08:38:45.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 424883, 'start-iter': 1, 'wakeups': [434900, 444901, 454901, 464901, 4...</msg>
<status status="PASS" starttime="20201110 08:38:43.034" endtime="20201110 08:38:45.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.130" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 424883, 'start-iter': 1, 'wakeups': [434900, 444901, 454901, 464901, 4...</msg>
<status status="PASS" starttime="20201110 08:38:45.129" endtime="20201110 08:38:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.132" endtime="20201110 08:38:45.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.032" endtime="20201110 08:38:45.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.029" endtime="20201110 08:38:45.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.138" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 424883, 'start-iter': 1, 'timer-count': 1, 'wakeups': [434900, 444901, 454901, 464901, 474901, 484901, 494901, 504901, 514901, 524901, 534901, 544901, 554901, 5...</msg>
<status status="PASS" starttime="20201110 08:38:45.136" endtime="20201110 08:38:45.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.142" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:45.141" endtime="20201110 08:38:45.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.144" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:45.143" endtime="20201110 08:38:45.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.138" endtime="20201110 08:38:45.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.149" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:45.148" endtime="20201110 08:38:45.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.151" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:45.150" endtime="20201110 08:38:45.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.145" endtime="20201110 08:38:45.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.156" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:45.155" endtime="20201110 08:38:45.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.158" level="INFO">VALUE: 424883</msg>
<status status="PASS" starttime="20201110 08:38:45.157" endtime="20201110 08:38:45.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.152" endtime="20201110 08:38:45.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.163" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:45.162" endtime="20201110 08:38:45.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.165" level="INFO">VALUE: [434900, 444901, 454901, 464901, 474901, 484901, 494901, 504901, 514901, 524901, 534901, 544901, 554901, 564901, 574901, 584901, 594901, 604901, 614901, 624901, 634901, 644901, 654901, 664901, 674901, 684901, 694901, 704901, 714901, 724901, 734901, 744901, 754901, 764901, 774901, 784901, 794901, 804901, 814901, 824901, 834901, 844901, 854901, 864901, 874901, 884901, 894901, 904901, 914901, 924901, 934901, 944901, 954901, 964901, 974901, 984901, 994901, 1004901, 1014901, 1024901, 1034901, 1044901, 1054901, 1064901, 1074901, 1084901, 1094901, 1104901, 1114901, 1124901, 1134901, 1144901, 1154901, 1164901, 1174901, 1184901, 1194901, 1204901, 1214901, 1224901, 1234901, 1244901, 1254901, 1264901, 1274901, 1284901, 1294901, 1304901, 1314901, 1324901, 1334901, 1344901, 1354901, 1364901, 1374901, 1384901, 1394901, 1404901, 1414901, 1424901]</msg>
<status status="PASS" starttime="20201110 08:38:45.164" endtime="20201110 08:38:45.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.159" endtime="20201110 08:38:45.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.173" endtime="20201110 08:38:45.472"></status>
</kw>
<msg timestamp="20201110 08:38:45.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066225556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076244639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.171" endtime="20201110 08:38:45.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066225556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076244639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.476" endtime="20201110 08:38:45.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.483" endtime="20201110 08:38:45.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.168" endtime="20201110 08:38:45.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.167" endtime="20201110 08:38:45.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.510" level="INFO">${RESULT} = {'diff': [0, 0.010019082999999998, 0.010002193999999992, 0.010001098, 0.010001194000000005, 0.010001082999999994, 0.010001195000000018, 0.010001082999999994, 0.010001207999999984, 0.010001112000000006...</msg>
<status status="PASS" starttime="20201110 08:38:45.487" endtime="20201110 08:38:45.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.515" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:45.514" endtime="20201110 08:38:45.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.517" level="INFO">VALUE: 0.066225556</msg>
<status status="PASS" starttime="20201110 08:38:45.516" endtime="20201110 08:38:45.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.511" endtime="20201110 08:38:45.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.522" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:45.521" endtime="20201110 08:38:45.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.524" level="INFO">VALUE: [0.076244639, 0.086246833, 0.096247931, 0.106249125, 0.116250208, 0.126251403, 0.136252486, 0.146253694, 0.156254806, 0.166255958, 0.176257042, 0.18625825, 0.196259389, 0.206260528, 0.216261597, 0.226262806, 0.236263889, 0.246265083, 0.256266153, 0.266267361, 0.276268458, 0.286269639, 0.29627075, 0.306271958, 0.316273, 0.326274208, 0.336275306, 0.346276486, 0.356277569, 0.366278792, 0.376279861, 0.386281056, 0.396282139, 0.406283333, 0.416284417, 0.426285625, 0.436286736, 0.446287917, 0.456288972, 0.466290194, 0.476291292, 0.486292472, 0.496293569, 0.506294764, 0.516295819, 0.526297042, 0.536298139, 0.546299319, 0.556300389, 0.566301597, 0.576302667, 0.586303903, 0.596304958, 0.606306167, 0.61630725, 0.626308458, 0.636309514, 0.646310722, 0.656311792, 0.666313042, 0.676314083, 0.686315278, 0.696316375, 0.706317569, 0.716318639, 0.726319875, 0.736320931, 0.746322125, 0.756323222, 0.766324431, 0.7763255, 0.786326694, 0.796327819, 0.806329, 0.816330056, 0.826331264, 0.836332333, 0.846333542, 0.856334625, 0.866335875, 0.876336903, 0.886338111, 0.896339264, 0.906340403, 0.916341472, 0.926342681, 0.93634375, 0.946344958, 0.956346042, 0.966347264, 0.976348306, 0.986349528, 0.996350597, 1.006351792, 1.016352875, 1.026354083, 1.036355167, 1.046356375, 1.056357444, 1.066358653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:45.523" endtime="20201110 08:38:45.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.518" endtime="20201110 08:38:45.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.528" endtime="20201110 08:38:45.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.531" endtime="20201110 08:38:45.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.530" endtime="20201110 08:38:45.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.526" endtime="20201110 08:38:45.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.027" endtime="20201110 08:38:45.552"></status>
</kw>
<msg timestamp="20201110 08:38:45.552" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.560" endtime="20201110 08:38:47.672"></status>
</kw>
<msg timestamp="20201110 08:38:47.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2949813, 'start-iter': 1, 'wakeups': [2959829, 2969831, 2979831, 29898...</msg>
<status status="PASS" starttime="20201110 08:38:45.558" endtime="20201110 08:38:47.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.675" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2949813, 'start-iter': 1, 'wakeups': [2959829, 2969831, 2979831, 29898...</msg>
<status status="PASS" starttime="20201110 08:38:47.674" endtime="20201110 08:38:47.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.676" endtime="20201110 08:38:47.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.556" endtime="20201110 08:38:47.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.554" endtime="20201110 08:38:47.679"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.682" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 2949813, 'start-iter': 1, 'timer-count': 1, 'wakeups': [2959829, 2969831, 2979831, 2989831, 2999831, 3009831, 3019831, 3029831, 3039831, 3049831, 3059831, 30698...</msg>
<status status="PASS" starttime="20201110 08:38:47.680" endtime="20201110 08:38:47.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:47.685" endtime="20201110 08:38:47.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.689" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:47.688" endtime="20201110 08:38:47.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.683" endtime="20201110 08:38:47.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.694" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:47.693" endtime="20201110 08:38:47.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.696" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:47.695" endtime="20201110 08:38:47.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.690" endtime="20201110 08:38:47.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.701" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:47.700" endtime="20201110 08:38:47.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.703" level="INFO">VALUE: 2949813</msg>
<status status="PASS" starttime="20201110 08:38:47.702" endtime="20201110 08:38:47.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.697" endtime="20201110 08:38:47.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.708" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:47.707" endtime="20201110 08:38:47.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.710" level="INFO">VALUE: [2959829, 2969831, 2979831, 2989831, 2999831, 3009831, 3019831, 3029831, 3039831, 3049831, 3059831, 3069831, 3079831, 3089831, 3099831, 3109831, 3119831, 3129831, 3139831, 3149831, 3159831, 3169831, 3179831, 3189831, 3199831, 3209831, 3219831, 3229831, 3239831, 3249831, 3259831, 3269831, 3279831, 3289831, 3299831, 3309831, 3319831, 3329831, 3339831, 3349831, 3359831, 3369831, 3379831, 3389831, 3399831, 3409831, 3419831, 3429831, 3439831, 3449831, 3459831, 3469831, 3479831, 3489831, 3499831, 3509831, 3519831, 3529831, 3539831, 3549831, 3559831, 3569831, 3579831, 3589831, 3599831, 3609831, 3619831, 3629831, 3639831, 3649831, 3659831, 3669831, 3679831, 3689831, 3699831, 3709831, 3719831, 3729831, 3739831, 3749831, 3759831, 3769831, 3779831, 3789831, 3799831, 3809831, 3819831, 3829831, 3839831, 3849831, 3859831, 3869831, 3879831, 3889831, 3899831, 3909831, 3919831, 3929831, 3939831, 3949831]</msg>
<status status="PASS" starttime="20201110 08:38:47.709" endtime="20201110 08:38:47.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.704" endtime="20201110 08:38:47.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.717" endtime="20201110 08:38:48.008"></status>
</kw>
<msg timestamp="20201110 08:38:48.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030330986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.716" endtime="20201110 08:38:48.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020312236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030330986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.012" endtime="20201110 08:38:48.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.020" endtime="20201110 08:38:48.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.713" endtime="20201110 08:38:48.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.711" endtime="20201110 08:38:48.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.048" level="INFO">${RESULT} = {'diff': [0, 0.01001875, 0.010003194999999996, 0.010001097, 0.010001180000000005, 0.010001111, 0.010001180999999998, 0.010001110999999993, 0.010001153000000013, 0.010001068999999987, 0.010001223000000...</msg>
<status status="PASS" starttime="20201110 08:38:48.023" endtime="20201110 08:38:48.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.052" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:48.051" endtime="20201110 08:38:48.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.054" level="INFO">VALUE: 0.020312236</msg>
<status status="PASS" starttime="20201110 08:38:48.053" endtime="20201110 08:38:48.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.049" endtime="20201110 08:38:48.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.060" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:48.059" endtime="20201110 08:38:48.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.062" level="INFO">VALUE: [0.030330986, 0.040334181, 0.050335278, 0.060336458, 0.070337569, 0.08033875, 0.090339861, 0.100341014, 0.110342083, 0.120343306, 0.130344361, 0.140345583, 0.150346639, 0.160347847, 0.170348986, 0.180350139, 0.190351236, 0.200352403, 0.210353486, 0.220354681, 0.230355778, 0.240356958, 0.250358042, 0.260359264, 0.270360319, 0.280361528, 0.290362639, 0.300363847, 0.310364931, 0.320366097, 0.330367194, 0.340368361, 0.350369444, 0.360370653, 0.370371778, 0.380372931, 0.390374, 0.400375208, 0.410376278, 0.420377514, 0.430378569, 0.440379764, 0.450380847, 0.460382042, 0.470383125, 0.480384319, 0.490385431, 0.500386611, 0.510387694, 0.520388944, 0.530389958, 0.540391222, 0.550392236, 0.560393444, 0.570394528, 0.580395736, 0.590396806, 0.600398014, 0.610399083, 0.620400292, 0.630401361, 0.640402569, 0.650403653, 0.660404847, 0.670405917, 0.680407153, 0.690408208, 0.700409444, 0.710410514, 0.720411694, 0.730412764, 0.740413972, 0.750415056, 0.760416278, 0.770417319, 0.780418611, 0.790419611, 0.800420819, 0.810421903, 0.820423083, 0.830424167, 0.840425389, 0.850426444, 0.860427653, 0.870428722, 0.880429917, 0.890430986, 0.900432181, 0.91043325, 0.920434444, 0.930435514, 0.940436792, 0.950437806, 0.960439042, 0.970440056, 0.98044125, 0.990442319, 1.000443514, 1.010444583, 1.020445778] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:48.061" endtime="20201110 08:38:48.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.056" endtime="20201110 08:38:48.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.065" endtime="20201110 08:38:48.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.069" endtime="20201110 08:38:48.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.067" endtime="20201110 08:38:48.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.064" endtime="20201110 08:38:48.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.553" endtime="20201110 08:38:48.090"></status>
</kw>
<msg timestamp="20201110 08:38:48.090" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.098" endtime="20201110 08:38:50.216"></status>
</kw>
<msg timestamp="20201110 08:38:50.218" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5486754, 'start-iter': 1, 'wakeups': [5496771, 5506772, 5516772, 55267...</msg>
<status status="PASS" starttime="20201110 08:38:48.096" endtime="20201110 08:38:50.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.223" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5486754, 'start-iter': 1, 'wakeups': [5496771, 5506772, 5516772, 55267...</msg>
<status status="PASS" starttime="20201110 08:38:50.220" endtime="20201110 08:38:50.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.225" endtime="20201110 08:38:50.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.094" endtime="20201110 08:38:50.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.092" endtime="20201110 08:38:50.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.230" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 5486754, 'start-iter': 1, 'timer-count': 1, 'wakeups': [5496771, 5506772, 5516772, 5526772, 5536772, 5546772, 5556772, 5566772, 5576772, 5586772, 5596772, 56067...</msg>
<status status="PASS" starttime="20201110 08:38:50.228" endtime="20201110 08:38:50.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.234" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:50.233" endtime="20201110 08:38:50.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.237" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:50.236" endtime="20201110 08:38:50.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.231" endtime="20201110 08:38:50.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.242" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:50.241" endtime="20201110 08:38:50.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.244" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:50.243" endtime="20201110 08:38:50.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.239" endtime="20201110 08:38:50.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.250" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:50.249" endtime="20201110 08:38:50.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.252" level="INFO">VALUE: 5486754</msg>
<status status="PASS" starttime="20201110 08:38:50.251" endtime="20201110 08:38:50.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.246" endtime="20201110 08:38:50.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.257" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:50.256" endtime="20201110 08:38:50.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.259" level="INFO">VALUE: [5496771, 5506772, 5516772, 5526772, 5536772, 5546772, 5556772, 5566772, 5576772, 5586772, 5596772, 5606772, 5616772, 5626772, 5636772, 5646772, 5656772, 5666772, 5676772, 5686772, 5696772, 5706772, 5716772, 5726772, 5736772, 5746772, 5756772, 5766772, 5776772, 5786772, 5796772, 5806772, 5816772, 5826772, 5836772, 5846772, 5856772, 5866772, 5876772, 5886772, 5896772, 5906772, 5916772, 5926772, 5936772, 5946772, 5956772, 5966772, 5976772, 5986772, 5996772, 6006772, 6016772, 6026772, 6036772, 6046772, 6056772, 6066772, 6076772, 6086772, 6096772, 6106772, 6116772, 6126772, 6136772, 6146772, 6156772, 6166772, 6176772, 6186772, 6196772, 6206772, 6216772, 6226772, 6236772, 6246772, 6256772, 6266772, 6276772, 6286772, 6296772, 6306772, 6316772, 6326772, 6336772, 6346772, 6356772, 6366772, 6376772, 6386772, 6396772, 6406772, 6416772, 6426772, 6436772, 6446772, 6456772, 6466772, 6476772, 6486772]</msg>
<status status="PASS" starttime="20201110 08:38:50.258" endtime="20201110 08:38:50.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.253" endtime="20201110 08:38:50.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.266" endtime="20201110 08:38:50.556"></status>
</kw>
<msg timestamp="20201110 08:38:50.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029425292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.265" endtime="20201110 08:38:50.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019405847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029425292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.565" endtime="20201110 08:38:50.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.576" endtime="20201110 08:38:50.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.262" endtime="20201110 08:38:50.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.260" endtime="20201110 08:38:50.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.608" level="INFO">${RESULT} = {'diff': [0, 0.010019444999999998, 0.010002193999999999, 0.010001083000000001, 0.010001209000000004, 0.010001082999999994, 0.010001207999999998, 0.010001153000000013, 0.010001152999999999, 0.010001082...</msg>
<status status="PASS" starttime="20201110 08:38:50.581" endtime="20201110 08:38:50.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.612" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:38:50.611" endtime="20201110 08:38:50.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.614" level="INFO">VALUE: 0.019405847</msg>
<status status="PASS" starttime="20201110 08:38:50.613" endtime="20201110 08:38:50.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.609" endtime="20201110 08:38:50.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.620" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:50.619" endtime="20201110 08:38:50.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.622" level="INFO">VALUE: [0.029425292, 0.039427486, 0.049428569, 0.059429778, 0.069430861, 0.079432069, 0.089433222, 0.099434375, 0.109435458, 0.119436681, 0.12943775, 0.139438972, 0.149440056, 0.159441292, 0.169442347, 0.179443556, 0.189444653, 0.199445875, 0.209446958, 0.219448153, 0.22944925, 0.239450458, 0.249451556, 0.25945275, 0.269453847, 0.279455069, 0.289456139, 0.299457347, 0.309458444, 0.319459653, 0.32946075, 0.339461972, 0.349463042, 0.359464264, 0.369465333, 0.379466569, 0.389467653, 0.399468847, 0.409469958, 0.419471153, 0.429472236, 0.439473458, 0.449474542, 0.45947575, 0.469476889, 0.479478056, 0.489479139, 0.499480389, 0.509481444, 0.519482653, 0.529483736, 0.539484986, 0.549486042, 0.559487264, 0.569488333, 0.579489542, 0.589490639, 0.599491861, 0.609492944, 0.619494153, 0.62949525, 0.639496458, 0.649497528, 0.659498764, 0.669499861, 0.679501056, 0.689502139, 0.699503347, 0.709504431, 0.719505653, 0.729506736, 0.739507944, 0.749509028, 0.75951025, 0.769511361, 0.779512542, 0.789513639, 0.799514847, 0.809515931, 0.819517208, 0.829518236, 0.839519458, 0.849520542, 0.859521806, 0.869522847, 0.879524069, 0.889525139, 0.899526361, 0.909527431, 0.919528639, 0.929529736, 0.939530958, 0.949532042, 0.95953325, 0.969534333, 0.979535542, 0.989536625, 0.999537889, 1.009538931, 1.019540139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:50.621" endtime="20201110 08:38:50.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.616" endtime="20201110 08:38:50.623"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.626" endtime="20201110 08:38:50.627"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.629" endtime="20201110 08:38:50.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.628" endtime="20201110 08:38:50.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.624" endtime="20201110 08:38:50.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.090" endtime="20201110 08:38:50.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.025" endtime="20201110 08:38:50.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.024" endtime="20201110 08:38:50.650"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:50.653" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.661" endtime="20201110 08:38:52.779"></status>
</kw>
<msg timestamp="20201110 08:38:52.780" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8049557, 'start-iter': 1, 'wakeups': [8059585, 8069584, 8079584, 80895...</msg>
<status status="PASS" starttime="20201110 08:38:50.659" endtime="20201110 08:38:52.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.786" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8049557, 'start-iter': 1, 'wakeups': [8059585, 8069584, 8079584, 80895...</msg>
<status status="PASS" starttime="20201110 08:38:52.782" endtime="20201110 08:38:52.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.788" endtime="20201110 08:38:52.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.657" endtime="20201110 08:38:52.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.655" endtime="20201110 08:38:52.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.799" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 8049557, 'start-iter': 1, 'timer-count': 2, 'wakeups': [8059585, 8069584, 8079584, 8089584, 8099584, 8109584, 8119584, 8129584, 8139584, 8149584, 8159584, 81695...</msg>
<status status="PASS" starttime="20201110 08:38:52.795" endtime="20201110 08:38:52.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.807" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:52.806" endtime="20201110 08:38:52.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.809" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:52.808" endtime="20201110 08:38:52.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.801" endtime="20201110 08:38:52.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.814" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:52.813" endtime="20201110 08:38:52.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.816" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:52.815" endtime="20201110 08:38:52.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.810" endtime="20201110 08:38:52.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.822" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:52.821" endtime="20201110 08:38:52.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.824" level="INFO">VALUE: 8049557</msg>
<status status="PASS" starttime="20201110 08:38:52.823" endtime="20201110 08:38:52.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.817" endtime="20201110 08:38:52.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.829" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:52.828" endtime="20201110 08:38:52.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.832" level="INFO">VALUE: [8059585, 8069584, 8079584, 8089584, 8099584, 8109584, 8119584, 8129584, 8139584, 8149584, 8159584, 8169584, 8179584, 8189584, 8199584, 8209584, 8219584, 8229584, 8239584, 8249584, 8259584, 8269584, 8279584, 8289584, 8299584, 8309584, 8319584, 8329584, 8339584, 8349584, 8359584, 8369584, 8379584, 8389584, 8399584, 8409584, 8419584, 8429584, 8439584, 8449584, 8459584, 8469584, 8479584, 8489584, 8499584, 8509584, 8519584, 8529584, 8539584, 8549584, 8559584, 8569584, 8579584, 8589584, 8599584, 8609584, 8619584, 8629584, 8639584, 8649584, 8659584, 8669584, 8679584, 8689584, 8699584, 8709584, 8719584, 8729584, 8739584, 8749584, 8759584, 8769584, 8779584, 8789584, 8799584, 8809584, 8819584, 8829584, 8839584, 8849584, 8859584, 8869584, 8879584, 8889584, 8899584, 8909584, 8919584, 8929584, 8939584, 8949584, 8959584, 8969584, 8979584, 8989584, 8999584, 9009584, 9019584, 9029584, 9039584, 9049584]</msg>
<status status="PASS" starttime="20201110 08:38:52.830" endtime="20201110 08:38:52.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.826" endtime="20201110 08:38:52.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.840" endtime="20201110 08:38:53.130"></status>
</kw>
<msg timestamp="20201110 08:38:53.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0321765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:52.838" endtime="20201110 08:38:53.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022146069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0321765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:53.134" endtime="20201110 08:38:53.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.142" endtime="20201110 08:38:53.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.836" endtime="20201110 08:38:53.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.834" endtime="20201110 08:38:53.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.169" level="INFO">${RESULT} = {'diff': [0, 0.010030430999999996, 0.010000208000000003, 0.010001084, 0.010001193999999998, 0.010001111, 0.010001195000000004, 0.010001082999999994, 0.010001207999999998, 0.010001084000000007, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:38:53.145" endtime="20201110 08:38:53.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.173" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:53.172" endtime="20201110 08:38:53.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.176" level="INFO">VALUE: 0.022146069</msg>
<status status="PASS" starttime="20201110 08:38:53.175" endtime="20201110 08:38:53.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.170" endtime="20201110 08:38:53.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.182" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:53.181" endtime="20201110 08:38:53.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.184" level="INFO">VALUE: [0.0321765, 0.042176708, 0.052177792, 0.062178986, 0.072180097, 0.082181292, 0.092182375, 0.102183583, 0.112184667, 0.122185875, 0.132186958, 0.142188167, 0.152189264, 0.162190472, 0.172191556, 0.182192764, 0.192193861, 0.202195069, 0.212196153, 0.222197361, 0.232198458, 0.242199653, 0.25220075, 0.262201958, 0.272203056, 0.28220425, 0.292205333, 0.302206542, 0.312207639, 0.322208917, 0.332209944, 0.342211153, 0.352212222, 0.362213444, 0.372214542, 0.382215736, 0.392216861, 0.402218111, 0.412219139, 0.422220347, 0.432221486, 0.442222625, 0.452223722, 0.462224944, 0.472226014, 0.482227222, 0.492228319, 0.502229542, 0.512230639, 0.522231819, 0.532232903, 0.542234125, 0.552235222, 0.562236417, 0.572237583, 0.582238722, 0.592239875, 0.602241014, 0.612242097, 0.622243319, 0.632244403, 0.642245611, 0.652246694, 0.662247931, 0.672249, 0.682250208, 0.692251306, 0.702252514, 0.712253597, 0.722254819, 0.732255903, 0.742257097, 0.752258194, 0.762259444, 0.772260486, 0.782261708, 0.792262806, 0.802264014, 0.812265167, 0.822266292, 0.832267375, 0.842268611, 0.852269694, 0.862270889, 0.872271972, 0.882273194, 0.892274292, 0.902275486, 0.912276583, 0.922277819, 0.932278875, 0.942280097, 0.952281167, 0.962282403, 0.972283472, 0.982284681, 0.992285764, 1.002286986, 1.012288069, 1.022289278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:53.183" endtime="20201110 08:38:53.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.177" endtime="20201110 08:38:53.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.187" endtime="20201110 08:38:53.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.190" endtime="20201110 08:38:53.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.189" endtime="20201110 08:38:53.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.185" endtime="20201110 08:38:53.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.653" endtime="20201110 08:38:53.211"></status>
</kw>
<msg timestamp="20201110 08:38:53.212" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.220" endtime="20201110 08:38:55.326"></status>
</kw>
<msg timestamp="20201110 08:38:55.328" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10608615, 'start-iter': 1, 'wakeups': [10618644, 10628642, 10638642, 1...</msg>
<status status="PASS" starttime="20201110 08:38:53.218" endtime="20201110 08:38:55.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10608615, 'start-iter': 1, 'wakeups': [10618644, 10628642, 10638642, 1...</msg>
<status status="PASS" starttime="20201110 08:38:55.330" endtime="20201110 08:38:55.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.336" endtime="20201110 08:38:55.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.216" endtime="20201110 08:38:55.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.214" endtime="20201110 08:38:55.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.347" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 10608615, 'start-iter': 1, 'timer-count': 2, 'wakeups': [10618644, 10628642, 10638642, 10648642, 10658642, 10668642, 10678642, 10688642, 10698642, 10708642, 107...</msg>
<status status="PASS" starttime="20201110 08:38:55.343" endtime="20201110 08:38:55.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.356" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:55.354" endtime="20201110 08:38:55.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.360" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:55.358" endtime="20201110 08:38:55.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.349" endtime="20201110 08:38:55.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.370" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:55.368" endtime="20201110 08:38:55.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.375" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:55.373" endtime="20201110 08:38:55.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.363" endtime="20201110 08:38:55.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.385" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:55.383" endtime="20201110 08:38:55.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.389" level="INFO">VALUE: 10608615</msg>
<status status="PASS" starttime="20201110 08:38:55.388" endtime="20201110 08:38:55.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.378" endtime="20201110 08:38:55.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.402" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:55.398" endtime="20201110 08:38:55.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.407" level="INFO">VALUE: [10618644, 10628642, 10638642, 10648642, 10658642, 10668642, 10678642, 10688642, 10698642, 10708642, 10718642, 10728642, 10738642, 10748642, 10758642, 10768642, 10778642, 10788642, 10798642, 10808642, 10818642, 10828642, 10838642, 10848642, 10858642, 10868642, 10878642, 10888642, 10898642, 10908642, 10918642, 10928642, 10938642, 10948642, 10958642, 10968642, 10978642, 10988642, 10998642, 11008642, 11018642, 11028642, 11038642, 11048642, 11058642, 11068642, 11078642, 11088642, 11098642, 11108642, 11118642, 11128642, 11138642, 11148642, 11158642, 11168642, 11178642, 11188642, 11198642, 11208642, 11218642, 11228642, 11238642, 11248642, 11258642, 11268642, 11278642, 11288642, 11298642, 11308642, 11318642, 11328642, 11338642, 11348642, 11358642, 11368642, 11378642, 11388642, 11398642, 11408642, 11418642, 11428642, 11438642, 11448642, 11458642, 11468642, 11478642, 11488642, 11498642, 11508642, 11518642, 11528642, 11538642, 11548642, 11558642, 11568642, 11578642, 11588642, 11598642, 11608642]</msg>
<status status="PASS" starttime="20201110 08:38:55.404" endtime="20201110 08:38:55.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.392" endtime="20201110 08:38:55.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.423" endtime="20201110 08:38:55.719"></status>
</kw>
<msg timestamp="20201110 08:38:55.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030073667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.420" endtime="20201110 08:38:55.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020042931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030073667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.723" endtime="20201110 08:38:55.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.730" endtime="20201110 08:38:55.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.414" endtime="20201110 08:38:55.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.410" endtime="20201110 08:38:55.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.757" level="INFO">${RESULT} = {'diff': [0, 0.010030735999999998, 0.009999222000000002, 0.010001069000000001, 0.010001208999999997, 0.010001083000000008, 0.01000122199999999, 0.01000107, 0.010001222000000004, 0.010001097, 0.0100011...</msg>
<status status="PASS" starttime="20201110 08:38:55.734" endtime="20201110 08:38:55.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.761" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:55.760" endtime="20201110 08:38:55.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.763" level="INFO">VALUE: 0.020042931</msg>
<status status="PASS" starttime="20201110 08:38:55.762" endtime="20201110 08:38:55.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.758" endtime="20201110 08:38:55.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.769" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:55.768" endtime="20201110 08:38:55.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.771" level="INFO">VALUE: [0.030073667, 0.040072889, 0.050073958, 0.060075167, 0.07007625, 0.080077472, 0.090078542, 0.100079764, 0.110080861, 0.120082056, 0.130083153, 0.140084375, 0.150085444, 0.160086639, 0.170087722, 0.180088931, 0.190090014, 0.200091236, 0.210092347, 0.220093528, 0.230094611, 0.240095819, 0.250096903, 0.260098111, 0.270099236, 0.280100431, 0.2901015, 0.300102708, 0.310103792, 0.320105, 0.330106097, 0.340107306, 0.350108389, 0.360109597, 0.370110681, 0.380111889, 0.390112986, 0.400114181, 0.410115292, 0.420116486, 0.430117569, 0.440118792, 0.450119875, 0.460121069, 0.470122153, 0.480123375, 0.490124458, 0.500125667, 0.510126764, 0.520127958, 0.530129042, 0.54013025, 0.550131375, 0.560132556, 0.570133653, 0.580134847, 0.590135931, 0.600137139, 0.610138236, 0.620139444, 0.630140528, 0.640141736, 0.650142819, 0.660144069, 0.670145111, 0.680146319, 0.690147417, 0.700148625, 0.710149736, 0.720150917, 0.730152, 0.740153208, 0.750154306, 0.760155514, 0.770156597, 0.780157806, 0.790158889, 0.800160111, 0.810161181, 0.820162458, 0.830163486, 0.840164694, 0.850165819, 0.860167028, 0.870168069, 0.880169292, 0.890170375, 0.900171597, 0.910172667, 0.920173875, 0.930174972, 0.940176194, 0.950177264, 0.960178472, 0.970179569, 0.980180764, 0.990181847, 1.000183069, 1.010184167, 1.020185375] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:55.770" endtime="20201110 08:38:55.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.765" endtime="20201110 08:38:55.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.774" endtime="20201110 08:38:55.775"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.778" endtime="20201110 08:38:55.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.776" endtime="20201110 08:38:55.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.772" endtime="20201110 08:38:55.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.212" endtime="20201110 08:38:55.799"></status>
</kw>
<msg timestamp="20201110 08:38:55.799" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.807" endtime="20201110 08:38:57.914"></status>
</kw>
<msg timestamp="20201110 08:38:57.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13196066, 'start-iter': 1, 'wakeups': [13206095, 13216093, 13226093, 1...</msg>
<status status="PASS" starttime="20201110 08:38:55.806" endtime="20201110 08:38:57.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.929" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13196066, 'start-iter': 1, 'wakeups': [13206095, 13216093, 13226093, 1...</msg>
<status status="PASS" starttime="20201110 08:38:57.925" endtime="20201110 08:38:57.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.931" endtime="20201110 08:38:57.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.803" endtime="20201110 08:38:57.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.801" endtime="20201110 08:38:57.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.943" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 13196066, 'start-iter': 1, 'timer-count': 2, 'wakeups': [13206095, 13216093, 13226093, 13236093, 13246093, 13256093, 13266093, 13276093, 13286093, 13296093, 133...</msg>
<status status="PASS" starttime="20201110 08:38:57.938" endtime="20201110 08:38:57.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.951" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:38:57.949" endtime="20201110 08:38:57.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.956" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:38:57.954" endtime="20201110 08:38:57.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.944" endtime="20201110 08:38:57.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.966" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:38:57.964" endtime="20201110 08:38:57.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.970" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:38:57.968" endtime="20201110 08:38:57.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.959" endtime="20201110 08:38:57.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.981" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:57.978" endtime="20201110 08:38:57.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.985" level="INFO">VALUE: 13196066</msg>
<status status="PASS" starttime="20201110 08:38:57.983" endtime="20201110 08:38:57.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.973" endtime="20201110 08:38:57.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.995" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:57.993" endtime="20201110 08:38:57.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.000" level="INFO">VALUE: [13206095, 13216093, 13226093, 13236093, 13246093, 13256093, 13266093, 13276093, 13286093, 13296093, 13306093, 13316093, 13326093, 13336093, 13346093, 13356093, 13366093, 13376093, 13386093, 13396093, 13406093, 13416093, 13426093, 13436093, 13446093, 13456093, 13466093, 13476093, 13486093, 13496093, 13506093, 13516093, 13526093, 13536093, 13546093, 13556093, 13566093, 13576093, 13586093, 13596093, 13606093, 13616093, 13626093, 13636093, 13646093, 13656093, 13666093, 13676093, 13686093, 13696093, 13706093, 13716093, 13726093, 13736093, 13746093, 13756093, 13766093, 13776093, 13786093, 13796093, 13806093, 13816093, 13826093, 13836093, 13846093, 13856093, 13866093, 13876093, 13886093, 13896093, 13906093, 13916093, 13926093, 13936093, 13946093, 13956093, 13966093, 13976093, 13986093, 13996093, 14006093, 14016093, 14026093, 14036093, 14046093, 14056093, 14066093, 14076093, 14086093, 14096093, 14106093, 14116093, 14126093, 14136093, 14146093, 14156093, 14166093, 14176093, 14186093, 14196093]</msg>
<status status="PASS" starttime="20201110 08:38:57.998" endtime="20201110 08:38:58.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.988" endtime="20201110 08:38:58.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.019" endtime="20201110 08:38:58.314"></status>
</kw>
<msg timestamp="20201110 08:38:58.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029568958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.013" endtime="20201110 08:38:58.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019538167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029568958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.318" endtime="20201110 08:38:58.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.326" endtime="20201110 08:38:58.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.007" endtime="20201110 08:38:58.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.004" endtime="20201110 08:38:58.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.353" level="INFO">${RESULT} = {'diff': [0, 0.010030791, 0.009999181000000003, 0.010001139, 0.010001152999999999, 0.010001068999999994, 0.010001208000000011, 0.010001083999999993, 0.010001263999999996, 0.01000102700000001, 0.010001...</msg>
<status status="PASS" starttime="20201110 08:38:58.329" endtime="20201110 08:38:58.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.357" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:38:58.356" endtime="20201110 08:38:58.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.359" level="INFO">VALUE: 0.019538167</msg>
<status status="PASS" starttime="20201110 08:38:58.358" endtime="20201110 08:38:58.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.354" endtime="20201110 08:38:58.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.365" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:38:58.364" endtime="20201110 08:38:58.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.367" level="INFO">VALUE: [0.029568958, 0.039568139, 0.049569278, 0.059570431, 0.0695715, 0.079572708, 0.089573792, 0.099575056, 0.109576083, 0.119577292, 0.129578389, 0.139579597, 0.149580667, 0.159581889, 0.169582958, 0.179584167, 0.189585264, 0.199586458, 0.209587542, 0.219588764, 0.229589847, 0.239591042, 0.249592125, 0.259593333, 0.269594417, 0.279595625, 0.289596722, 0.299597917, 0.309599014, 0.319600292, 0.329601319, 0.339602528, 0.349603597, 0.359604806, 0.369605889, 0.379607097, 0.389608194, 0.399609389, 0.409610486, 0.419611681, 0.429612778, 0.439614014, 0.449615069, 0.459616306, 0.469617361, 0.479618583, 0.489619653, 0.499620931, 0.509621944, 0.519623181, 0.52962425, 0.539625458, 0.549626542, 0.559627736, 0.569628833, 0.579630042, 0.589631125, 0.599632333, 0.609633431, 0.619634625, 0.629635736, 0.639636917, 0.649638, 0.659639208, 0.669640292, 0.679641514, 0.689642597, 0.699643806, 0.709644889, 0.719646097, 0.729647181, 0.739648389, 0.749649472, 0.759650694, 0.769651764, 0.779652986, 0.789654097, 0.799655278, 0.809656361, 0.819657569, 0.829658653, 0.839659875, 0.849660958, 0.859662153, 0.869663236, 0.879664458, 0.889665583, 0.89966675, 0.909667861, 0.919669042, 0.929670153, 0.939671333, 0.949672431, 0.959673639, 0.969674722, 0.979675931, 0.989677042, 0.999678208, 1.009679292, 1.019680528] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:38:58.366" endtime="20201110 08:38:58.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.361" endtime="20201110 08:38:58.368"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.370" endtime="20201110 08:38:58.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.374" endtime="20201110 08:38:58.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.372" endtime="20201110 08:38:58.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.368" endtime="20201110 08:38:58.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.800" endtime="20201110 08:38:58.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.651" endtime="20201110 08:38:58.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.650" endtime="20201110 08:38:58.395"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:38:58.397" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.406" endtime="20201110 08:39:00.514"></status>
</kw>
<msg timestamp="20201110 08:39:00.515" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15794983, 'start-iter': 1, 'wakeups': [15805025, 15815024, 15825024, 1...</msg>
<status status="PASS" starttime="20201110 08:38:58.404" endtime="20201110 08:39:00.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.521" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15794983, 'start-iter': 1, 'wakeups': [15805025, 15815024, 15825024, 1...</msg>
<status status="PASS" starttime="20201110 08:39:00.517" endtime="20201110 08:39:00.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.524" endtime="20201110 08:39:00.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.401" endtime="20201110 08:39:00.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.399" endtime="20201110 08:39:00.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.536" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 15794983, 'start-iter': 1, 'timer-count': 3, 'wakeups': [15805025, 15815024, 15825024, 15835024, 15845024, 15855024, 15865024, 15875024, 15885024, 15895024, 159...</msg>
<status status="PASS" starttime="20201110 08:39:00.531" endtime="20201110 08:39:00.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.544" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:00.542" endtime="20201110 08:39:00.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.549" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:00.547" endtime="20201110 08:39:00.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.537" endtime="20201110 08:39:00.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.559" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:00.557" endtime="20201110 08:39:00.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.563" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:00.561" endtime="20201110 08:39:00.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.552" endtime="20201110 08:39:00.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.574" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:00.572" endtime="20201110 08:39:00.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.578" level="INFO">VALUE: 15794983</msg>
<status status="PASS" starttime="20201110 08:39:00.576" endtime="20201110 08:39:00.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.566" endtime="20201110 08:39:00.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.588" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:00.586" endtime="20201110 08:39:00.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.593" level="INFO">VALUE: [15805025, 15815024, 15825024, 15835024, 15845024, 15855024, 15865024, 15875024, 15885024, 15895024, 15905024, 15915024, 15925024, 15935024, 15945024, 15955024, 15965024, 15975024, 15985024, 15995024, 16005024, 16015024, 16025024, 16035024, 16045024, 16055024, 16065024, 16075024, 16085024, 16095024, 16105024, 16115024, 16125024, 16135024, 16145024, 16155024, 16165024, 16175024, 16185024, 16195024, 16205024, 16215024, 16225024, 16235024, 16245024, 16255024, 16265024, 16275024, 16285024, 16295024, 16305024, 16315024, 16325024, 16335024, 16345024, 16355024, 16365024, 16375024, 16385024, 16395024, 16405024, 16415024, 16425024, 16435024, 16445024, 16455024, 16465024, 16475024, 16485024, 16495024, 16505024, 16515024, 16525024, 16535024, 16545024, 16555024, 16565024, 16575024, 16585024, 16595024, 16605024, 16615024, 16625024, 16635024, 16645024, 16655024, 16665024, 16675024, 16685024, 16695024, 16705024, 16715024, 16725024, 16735024, 16745024, 16755024, 16765024, 16775024, 16785024, 16795024]</msg>
<status status="PASS" starttime="20201110 08:39:00.591" endtime="20201110 08:39:00.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.581" endtime="20201110 08:39:00.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.602" endtime="20201110 08:39:00.893"></status>
</kw>
<msg timestamp="20201110 08:39:00.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033249278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.600" endtime="20201110 08:39:00.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023205431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033249278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.897" endtime="20201110 08:39:00.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.905" endtime="20201110 08:39:00.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.597" endtime="20201110 08:39:00.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.596" endtime="20201110 08:39:00.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.932" level="INFO">${RESULT} = {'diff': [0, 0.010043847000000002, 0.010000402999999998, 0.010001083000000001, 0.010001221999999997, 0.01000107, 0.010001207999999998, 0.010001125, 0.010001167000000005, 0.010001082999999994, 0.010001...</msg>
<status status="PASS" starttime="20201110 08:39:00.908" endtime="20201110 08:39:00.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.937" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:00.936" endtime="20201110 08:39:00.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.939" level="INFO">VALUE: 0.023205431</msg>
<status status="PASS" starttime="20201110 08:39:00.938" endtime="20201110 08:39:00.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.933" endtime="20201110 08:39:00.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.944" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:00.943" endtime="20201110 08:39:00.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.946" level="INFO">VALUE: [0.033249278, 0.043249681, 0.053250764, 0.063251986, 0.073253056, 0.083254264, 0.093255389, 0.103256556, 0.113257639, 0.123258847, 0.133259917, 0.143261125, 0.153262208, 0.163263431, 0.1732645, 0.183265708, 0.193266792, 0.203268014, 0.213269097, 0.223270292, 0.233271375, 0.243272597, 0.253273681, 0.263274875, 0.273275972, 0.283277167, 0.293278292, 0.303279458, 0.313280542, 0.323281764, 0.333282833, 0.343284056, 0.353285125, 0.363286333, 0.373287417, 0.383288667, 0.393289708, 0.403290917, 0.413292014, 0.423293208, 0.433294292, 0.443295556, 0.453296583, 0.463297792, 0.473298875, 0.483300139, 0.493301208, 0.503302375, 0.513303472, 0.523304667, 0.53330575, 0.543306958, 0.553308042, 0.56330925, 0.573310333, 0.583311542, 0.593312625, 0.603313847, 0.613314917, 0.623316153, 0.633317222, 0.643318444, 0.653319514, 0.663320736, 0.673321806, 0.683323014, 0.693324125, 0.703325319, 0.713326389, 0.723327611, 0.733328694, 0.743329889, 0.753331014, 0.763332194, 0.773333264, 0.783334472, 0.793335556, 0.803336778, 0.813337861, 0.823339069, 0.833340139, 0.843341347, 0.8533425, 0.863343639, 0.873344722, 0.883345944, 0.893347014, 0.903348236, 0.913349306, 0.923350556, 0.933351611, 0.943352806, 0.953353903, 0.963355097, 0.973356208, 0.983357403, 0.993358472, 1.003359694, 1.013360764, 1.023361986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:00.945" endtime="20201110 08:39:00.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.940" endtime="20201110 08:39:00.947"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.949" endtime="20201110 08:39:00.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.953" endtime="20201110 08:39:00.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.951" endtime="20201110 08:39:00.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.948" endtime="20201110 08:39:00.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.398" endtime="20201110 08:39:00.974"></status>
</kw>
<msg timestamp="20201110 08:39:00.974" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.982" endtime="20201110 08:39:03.090"></status>
</kw>
<msg timestamp="20201110 08:39:03.091" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18370794, 'start-iter': 1, 'wakeups': [18380836, 18390835, 18400835, 1...</msg>
<status status="PASS" starttime="20201110 08:39:00.981" endtime="20201110 08:39:03.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.097" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18370794, 'start-iter': 1, 'wakeups': [18380836, 18390835, 18400835, 1...</msg>
<status status="PASS" starttime="20201110 08:39:03.093" endtime="20201110 08:39:03.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.099" endtime="20201110 08:39:03.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.978" endtime="20201110 08:39:03.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.976" endtime="20201110 08:39:03.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.110" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 18370794, 'start-iter': 1, 'timer-count': 3, 'wakeups': [18380836, 18390835, 18400835, 18410835, 18420835, 18430835, 18440835, 18450835, 18460835, 18470835, 184...</msg>
<status status="PASS" starttime="20201110 08:39:03.106" endtime="20201110 08:39:03.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.121" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:03.116" endtime="20201110 08:39:03.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.126" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:03.124" endtime="20201110 08:39:03.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.112" endtime="20201110 08:39:03.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.143" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:03.141" endtime="20201110 08:39:03.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.148" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:03.146" endtime="20201110 08:39:03.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.136" endtime="20201110 08:39:03.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.158" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:03.156" endtime="20201110 08:39:03.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.162" level="INFO">VALUE: 18370794</msg>
<status status="PASS" starttime="20201110 08:39:03.160" endtime="20201110 08:39:03.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.151" endtime="20201110 08:39:03.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.172" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:03.170" endtime="20201110 08:39:03.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.177" level="INFO">VALUE: [18380836, 18390835, 18400835, 18410835, 18420835, 18430835, 18440835, 18450835, 18460835, 18470835, 18480835, 18490835, 18500835, 18510835, 18520835, 18530835, 18540835, 18550835, 18560835, 18570835, 18580835, 18590835, 18600835, 18610835, 18620835, 18630835, 18640835, 18650835, 18660835, 18670835, 18680835, 18690835, 18700835, 18710835, 18720835, 18730835, 18740835, 18750835, 18760835, 18770835, 18780835, 18790835, 18800835, 18810835, 18820835, 18830835, 18840835, 18850835, 18860835, 18870835, 18880835, 18890835, 18900835, 18910835, 18920835, 18930835, 18940835, 18950835, 18960835, 18970835, 18980835, 18990835, 19000835, 19010835, 19020835, 19030835, 19040835, 19050835, 19060835, 19070835, 19080835, 19090835, 19100835, 19110835, 19120835, 19130835, 19140835, 19150835, 19160835, 19170835, 19180835, 19190835, 19200835, 19210835, 19220835, 19230835, 19240835, 19250835, 19260835, 19270835, 19280835, 19290835, 19300835, 19310835, 19320835, 19330835, 19340835, 19350835, 19360835, 19370835]</msg>
<status status="PASS" starttime="20201110 08:39:03.174" endtime="20201110 08:39:03.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.165" endtime="20201110 08:39:03.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.192" endtime="20201110 08:39:03.490"></status>
</kw>
<msg timestamp="20201110 08:39:03.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029556958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.189" endtime="20201110 08:39:03.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029556958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.494" endtime="20201110 08:39:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.502" endtime="20201110 08:39:03.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.183" endtime="20201110 08:39:03.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.180" endtime="20201110 08:39:03.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.530" level="INFO">${RESULT} = {'diff': [0, 0.0100435, 0.010000472999999996, 0.010001027000000003, 0.010001223000000004, 0.010001054999999995, 0.010001207999999998, 0.010001084000000007, 0.010001207999999998, 0.010001082999999994, ...</msg>
<status status="PASS" starttime="20201110 08:39:03.506" endtime="20201110 08:39:03.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.535" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:03.534" endtime="20201110 08:39:03.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.537" level="INFO">VALUE: 0.019513458</msg>
<status status="PASS" starttime="20201110 08:39:03.536" endtime="20201110 08:39:03.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.531" endtime="20201110 08:39:03.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.543" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:03.541" endtime="20201110 08:39:03.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.545" level="INFO">VALUE: [0.029556958, 0.039557431, 0.049558458, 0.059559681, 0.069560736, 0.079561944, 0.089563028, 0.099564236, 0.109565319, 0.119566528, 0.129567597, 0.139568819, 0.149569903, 0.159571097, 0.169572181, 0.179573389, 0.189574486, 0.199575708, 0.209576764, 0.219577972, 0.229579042, 0.239580264, 0.249581347, 0.259582542, 0.269583625, 0.279584847, 0.289585917, 0.299587139, 0.309588208, 0.319589431, 0.3295905, 0.339591736, 0.349592806, 0.359594, 0.369595111, 0.379596292, 0.389597361, 0.399598597, 0.409599653, 0.419600875, 0.429601944, 0.439603153, 0.449604236, 0.459605458, 0.469606528, 0.479607806, 0.489608819, 0.499610028, 0.509611111, 0.519612389, 0.529613403, 0.539614611, 0.549615681, 0.559616931, 0.569617972, 0.579619181, 0.589620264, 0.599621486, 0.609622569, 0.619623764, 0.629624847, 0.639626056, 0.649627139, 0.659628361, 0.669629431, 0.679630639, 0.689631722, 0.699632972, 0.709634028, 0.71963525, 0.729636306, 0.7396375, 0.749638583, 0.759639792, 0.769640875, 0.779642083, 0.789643167, 0.799644375, 0.809645472, 0.819646667, 0.82964775, 0.839648958, 0.849650069, 0.85965125, 0.869652347, 0.879653556, 0.889654681, 0.899655847, 0.909656931, 0.919658125, 0.929659194, 0.939660417, 0.949661514, 0.959662694, 0.969663778, 0.979664986, 0.989666083, 0.999667292, 1.009668389, 1.019669583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:03.544" endtime="20201110 08:39:03.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.538" endtime="20201110 08:39:03.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.548" endtime="20201110 08:39:03.550"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.552" endtime="20201110 08:39:03.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.550" endtime="20201110 08:39:03.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.547" endtime="20201110 08:39:03.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.975" endtime="20201110 08:39:03.573"></status>
</kw>
<msg timestamp="20201110 08:39:03.573" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.581" endtime="20201110 08:39:05.689"></status>
</kw>
<msg timestamp="20201110 08:39:05.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20969979, 'start-iter': 1, 'wakeups': [20980022, 20990020, 21000020, 2...</msg>
<status status="PASS" starttime="20201110 08:39:03.580" endtime="20201110 08:39:05.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.696" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20969979, 'start-iter': 1, 'wakeups': [20980022, 20990020, 21000020, 2...</msg>
<status status="PASS" starttime="20201110 08:39:05.693" endtime="20201110 08:39:05.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.699" endtime="20201110 08:39:05.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.577" endtime="20201110 08:39:05.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.575" endtime="20201110 08:39:05.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.710" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 20969979, 'start-iter': 1, 'timer-count': 3, 'wakeups': [20980022, 20990020, 21000020, 21010020, 21020020, 21030020, 21040020, 21050020, 21060020, 21070020, 210...</msg>
<status status="PASS" starttime="20201110 08:39:05.706" endtime="20201110 08:39:05.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.719" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:05.717" endtime="20201110 08:39:05.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.723" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:05.721" endtime="20201110 08:39:05.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.712" endtime="20201110 08:39:05.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.734" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:05.731" endtime="20201110 08:39:05.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.738" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:05.736" endtime="20201110 08:39:05.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.726" endtime="20201110 08:39:05.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.751" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:05.748" endtime="20201110 08:39:05.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.756" level="INFO">VALUE: 20969979</msg>
<status status="PASS" starttime="20201110 08:39:05.754" endtime="20201110 08:39:05.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.741" endtime="20201110 08:39:05.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.766" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:05.764" endtime="20201110 08:39:05.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.771" level="INFO">VALUE: [20980022, 20990020, 21000020, 21010020, 21020020, 21030020, 21040020, 21050020, 21060020, 21070020, 21080020, 21090020, 21100020, 21110020, 21120020, 21130020, 21140020, 21150020, 21160020, 21170020, 21180020, 21190020, 21200020, 21210020, 21220020, 21230020, 21240020, 21250020, 21260020, 21270020, 21280020, 21290020, 21300020, 21310020, 21320020, 21330020, 21340020, 21350020, 21360020, 21370020, 21380020, 21390020, 21400020, 21410020, 21420020, 21430020, 21440020, 21450020, 21460020, 21470020, 21480020, 21490020, 21500020, 21510020, 21520020, 21530020, 21540020, 21550020, 21560020, 21570020, 21580020, 21590020, 21600020, 21610020, 21620020, 21630020, 21640020, 21650020, 21660020, 21670020, 21680020, 21690020, 21700020, 21710020, 21720020, 21730020, 21740020, 21750020, 21760020, 21770020, 21780020, 21790020, 21800020, 21810020, 21820020, 21830020, 21840020, 21850020, 21860020, 21870020, 21880020, 21890020, 21900020, 21910020, 21920020, 21930020, 21940020, 21950020, 21960020, 21970020]</msg>
<status status="PASS" starttime="20201110 08:39:05.768" endtime="20201110 08:39:05.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.759" endtime="20201110 08:39:05.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.787" endtime="20201110 08:39:06.084"></status>
</kw>
<msg timestamp="20201110 08:39:06.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.783" endtime="20201110 08:39:06.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019878472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029922639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.087" endtime="20201110 08:39:06.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.095" endtime="20201110 08:39:06.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.778" endtime="20201110 08:39:06.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.774" endtime="20201110 08:39:06.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.122" level="INFO">${RESULT} = {'diff': [0, 0.010044167, 0.009999457999999996, 0.010001056000000001, 0.010001180000000005, 0.010001152999999992, 0.010001152999999999, 0.010001069000000001, 0.010001223000000004, 0.010001054999999995...</msg>
<status status="PASS" starttime="20201110 08:39:06.098" endtime="20201110 08:39:06.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.126" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:06.125" endtime="20201110 08:39:06.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.128" level="INFO">VALUE: 0.019878472</msg>
<status status="PASS" starttime="20201110 08:39:06.127" endtime="20201110 08:39:06.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.122" endtime="20201110 08:39:06.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.134" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:06.133" endtime="20201110 08:39:06.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.137" level="INFO">VALUE: [0.029922639, 0.039922097, 0.049923153, 0.059924333, 0.069925486, 0.079926639, 0.089927708, 0.099928931, 0.109929986, 0.119931194, 0.129932278, 0.1399335, 0.149934569, 0.159935764, 0.169936861, 0.179938056, 0.189939167, 0.199940361, 0.209941472, 0.219942625, 0.229943708, 0.239944931, 0.249946, 0.259947222, 0.269948347, 0.279949514, 0.289950611, 0.299951819, 0.309952861, 0.319954069, 0.329955222, 0.339956361, 0.349957444, 0.359958653, 0.369959764, 0.379960944, 0.389962014, 0.399963222, 0.409964319, 0.419965569, 0.429966611, 0.439967806, 0.449968903, 0.459970139, 0.469971167, 0.479972375, 0.489973458, 0.499974667, 0.509975764, 0.519976958, 0.529978042, 0.539979264, 0.549980333, 0.559981528, 0.569982611, 0.579983833, 0.589984917, 0.599986111, 0.609987208, 0.619988431, 0.629989486, 0.639990694, 0.649991778, 0.659992972, 0.669994056, 0.679995264, 0.689996361, 0.699997569, 0.709998639, 0.719999861, 0.730000917, 0.740002139, 0.750003264, 0.760004417, 0.770005514, 0.780006708, 0.790007792, 0.800009014, 0.810010097, 0.820011292, 0.830012361, 0.840013569, 0.850014653, 0.860015861, 0.870016944, 0.880018153, 0.890019264, 0.900020444, 0.910021514, 0.920022792, 0.930023806, 0.940025028, 0.950026111, 0.960027375, 0.970028403, 0.980029611, 0.990030681, 1.000031889, 1.010032958, 1.020034181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:06.136" endtime="20201110 08:39:06.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.130" endtime="20201110 08:39:06.138"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.140" endtime="20201110 08:39:06.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.144" endtime="20201110 08:39:06.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.142" endtime="20201110 08:39:06.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.138" endtime="20201110 08:39:06.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.574" endtime="20201110 08:39:06.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.396" endtime="20201110 08:39:06.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.395" endtime="20201110 08:39:06.165"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:06.167" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.175" endtime="20201110 08:39:08.282"></status>
</kw>
<msg timestamp="20201110 08:39:08.284" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23563913, 'start-iter': 1, 'wakeups': [23573969, 23583969, 23593968, 2...</msg>
<status status="PASS" starttime="20201110 08:39:06.174" endtime="20201110 08:39:08.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.289" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23563913, 'start-iter': 1, 'wakeups': [23573969, 23583969, 23593968, 2...</msg>
<status status="PASS" starttime="20201110 08:39:08.286" endtime="20201110 08:39:08.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.292" endtime="20201110 08:39:08.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.171" endtime="20201110 08:39:08.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.169" endtime="20201110 08:39:08.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.303" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 23563913, 'start-iter': 1, 'timer-count': 4, 'wakeups': [23573969, 23583969, 23593968, 23603969, 23613968, 23623969, 23633968, 23643969, 23653968, 23663969, 236...</msg>
<status status="PASS" starttime="20201110 08:39:08.299" endtime="20201110 08:39:08.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.311" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:08.309" endtime="20201110 08:39:08.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.316" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:08.314" endtime="20201110 08:39:08.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.305" endtime="20201110 08:39:08.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.326" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:08.324" endtime="20201110 08:39:08.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.331" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:08.329" endtime="20201110 08:39:08.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.319" endtime="20201110 08:39:08.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.342" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:08.340" endtime="20201110 08:39:08.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.347" level="INFO">VALUE: 23563913</msg>
<status status="PASS" starttime="20201110 08:39:08.345" endtime="20201110 08:39:08.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.335" endtime="20201110 08:39:08.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.358" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:08.355" endtime="20201110 08:39:08.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.368" level="INFO">VALUE: [23573969, 23583969, 23593968, 23603969, 23613968, 23623969, 23633968, 23643969, 23653968, 23663969, 23673968, 23683969, 23693968, 23703969, 23713968, 23723969, 23733968, 23743969, 23753968, 23763969, 23773968, 23783969, 23793968, 23803969, 23813968, 23823969, 23833968, 23843969, 23853968, 23863969, 23873968, 23883969, 23893968, 23903969, 23913968, 23923969, 23933968, 23943969, 23953968, 23963969, 23973968, 23983969, 23993968, 24003969, 24013968, 24023969, 24033968, 24043969, 24053968, 24063969, 24073968, 24083969, 24093968, 24103969, 24113968, 24123969, 24133968, 24143969, 24153968, 24163969, 24173968, 24183969, 24193968, 24203969, 24213968, 24223969, 24233968, 24243969, 24253968, 24263969, 24273968, 24283969, 24293968, 24303969, 24313968, 24323969, 24333968, 24343969, 24353968, 24363969, 24373968, 24383969, 24393968, 24403969, 24413968, 24423969, 24433968, 24443969, 24453968, 24463969, 24473968, 24483969, 24493968, 24503969, 24513968, 24523969, 24533968, 24543969, 24553968, 24563969]</msg>
<status status="PASS" starttime="20201110 08:39:08.360" endtime="20201110 08:39:08.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.350" endtime="20201110 08:39:08.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.379" endtime="20201110 08:39:08.671"></status>
</kw>
<msg timestamp="20201110 08:39:08.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032373875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.378" endtime="20201110 08:39:08.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032373875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.675" endtime="20201110 08:39:08.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.682" endtime="20201110 08:39:08.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.375" endtime="20201110 08:39:08.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.372" endtime="20201110 08:39:08.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.709" level="INFO">${RESULT} = {'diff': [0, 0.010058542000000004, 0.010000624999999999, 0.010000652999999998, 0.010001625, 0.010000638999999999, 0.010001652, 0.010000652999999998, 0.010001639000000007, 0.010000652999999998, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:08.686" endtime="20201110 08:39:08.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.714" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:08.713" endtime="20201110 08:39:08.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.716" level="INFO">VALUE: 0.022315333</msg>
<status status="PASS" starttime="20201110 08:39:08.715" endtime="20201110 08:39:08.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.710" endtime="20201110 08:39:08.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.721" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:08.720" endtime="20201110 08:39:08.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.724" level="INFO">VALUE: [0.032373875, 0.0423745, 0.052375153, 0.062376778, 0.072377417, 0.082379069, 0.092379722, 0.102381361, 0.112382014, 0.122383639, 0.132384278, 0.142385931, 0.152386569, 0.162388208, 0.172388847, 0.182390514, 0.192391139, 0.202392778, 0.212393431, 0.222395056, 0.232395708, 0.242397347, 0.252397986, 0.262399639, 0.272400278, 0.282401917, 0.292402583, 0.302404208, 0.312404861, 0.322406528, 0.332407139, 0.342408792, 0.352409431, 0.362411069, 0.372411708, 0.382413417, 0.392414, 0.402415639, 0.412416292, 0.422417944, 0.432418569, 0.442420222, 0.452420861, 0.462422514, 0.472423153, 0.482424792, 0.492425444, 0.502427083, 0.512427722, 0.522429361, 0.53243, 0.542431653, 0.552432319, 0.562433958, 0.572434597, 0.582436222, 0.592436861, 0.602438514, 0.612439153, 0.622440806, 0.632441444, 0.642443083, 0.652443722, 0.662445389, 0.672446042, 0.682447681, 0.692448306, 0.702449944, 0.712450583, 0.722452236, 0.732452875, 0.742454542, 0.752455167, 0.762456806, 0.772457444, 0.782459111, 0.792459736, 0.802461431, 0.812462028, 0.822463667, 0.832464306, 0.842465972, 0.852466653, 0.862468264, 0.872468889, 0.882470528, 0.892471181, 0.902472833, 0.912473458, 0.922475111, 0.93247575, 0.942477389, 0.952478042, 0.962479681, 0.972480333, 0.982481972, 0.992482625, 1.002484264, 1.012484903, 1.022486542] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:08.723" endtime="20201110 08:39:08.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.717" endtime="20201110 08:39:08.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.727" endtime="20201110 08:39:08.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.730" endtime="20201110 08:39:08.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.729" endtime="20201110 08:39:08.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.725" endtime="20201110 08:39:08.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.168" endtime="20201110 08:39:08.751"></status>
</kw>
<msg timestamp="20201110 08:39:08.751" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.760" endtime="20201110 08:39:10.868"></status>
</kw>
<msg timestamp="20201110 08:39:10.869" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26148841, 'start-iter': 1, 'wakeups': [26158898, 26168897, 26178896, 2...</msg>
<status status="PASS" starttime="20201110 08:39:08.759" endtime="20201110 08:39:10.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.876" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26148841, 'start-iter': 1, 'wakeups': [26158898, 26168897, 26178896, 2...</msg>
<status status="PASS" starttime="20201110 08:39:10.872" endtime="20201110 08:39:10.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.878" endtime="20201110 08:39:10.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.756" endtime="20201110 08:39:10.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.753" endtime="20201110 08:39:10.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.889" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 26148841, 'start-iter': 1, 'timer-count': 4, 'wakeups': [26158898, 26168897, 26178896, 26188897, 26198896, 26208897, 26218896, 26228897, 26238896, 26248897, 262...</msg>
<status status="PASS" starttime="20201110 08:39:10.885" endtime="20201110 08:39:10.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.898" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:10.896" endtime="20201110 08:39:10.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.902" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:10.900" endtime="20201110 08:39:10.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.891" endtime="20201110 08:39:10.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.912" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:10.910" endtime="20201110 08:39:10.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.917" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:10.915" endtime="20201110 08:39:10.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.905" endtime="20201110 08:39:10.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.927" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:10.925" endtime="20201110 08:39:10.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.931" level="INFO">VALUE: 26148841</msg>
<status status="PASS" starttime="20201110 08:39:10.930" endtime="20201110 08:39:10.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.920" endtime="20201110 08:39:10.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.942" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:10.940" endtime="20201110 08:39:10.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.946" level="INFO">VALUE: [26158898, 26168897, 26178896, 26188897, 26198896, 26208897, 26218896, 26228897, 26238896, 26248897, 26258896, 26268897, 26278896, 26288897, 26298896, 26308897, 26318896, 26328897, 26338896, 26348897, 26358896, 26368897, 26378896, 26388897, 26398896, 26408897, 26418896, 26428897, 26438896, 26448897, 26458896, 26468897, 26478896, 26488897, 26498896, 26508897, 26518896, 26528897, 26538896, 26548897, 26558896, 26568897, 26578896, 26588897, 26598896, 26608897, 26618896, 26628897, 26638896, 26648897, 26658896, 26668897, 26678896, 26688897, 26698896, 26708897, 26718896, 26728897, 26738896, 26748897, 26758896, 26768897, 26778896, 26788897, 26798896, 26808897, 26818896, 26828897, 26838896, 26848897, 26858896, 26868897, 26878896, 26888897, 26898896, 26908897, 26918896, 26928897, 26938896, 26948897, 26958896, 26968897, 26978896, 26988897, 26998896, 27008897, 27018896, 27028897, 27038896, 27048897, 27058896, 27068897, 27078896, 27088897, 27098896, 27108897, 27118896, 27128897, 27138896, 27148897]</msg>
<status status="PASS" starttime="20201110 08:39:10.944" endtime="20201110 08:39:10.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.935" endtime="20201110 08:39:10.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.954" endtime="20201110 08:39:11.246"></status>
</kw>
<msg timestamp="20201110 08:39:11.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030780083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.952" endtime="20201110 08:39:11.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030780083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.250" endtime="20201110 08:39:11.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.258" endtime="20201110 08:39:11.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.950" endtime="20201110 08:39:11.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.947" endtime="20201110 08:39:11.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.285" level="INFO">${RESULT} = {'diff': [0, 0.010058860999999999, 0.009999624999999998, 0.010000639000000006, 0.010001653, 0.010000624999999999, 0.010001638999999993, 0.010000639000000006, 0.010001666000000006, 0.010000638999999992...</msg>
<status status="PASS" starttime="20201110 08:39:11.261" endtime="20201110 08:39:11.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.289" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:11.288" endtime="20201110 08:39:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.291" level="INFO">VALUE: 0.020721222</msg>
<status status="PASS" starttime="20201110 08:39:11.290" endtime="20201110 08:39:11.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.286" endtime="20201110 08:39:11.292"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.296" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:11.295" endtime="20201110 08:39:11.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.299" level="INFO">VALUE: [0.030780083, 0.040779708, 0.050780347, 0.060782, 0.070782625, 0.080784264, 0.090784903, 0.100786569, 0.110787208, 0.120788847, 0.130789472, 0.140791111, 0.15079175, 0.160793417, 0.170794056, 0.180795694, 0.190796333, 0.200797972, 0.210798611, 0.220800278, 0.230800903, 0.240802528, 0.250803181, 0.260804889, 0.270805472, 0.280807097, 0.29080775, 0.300809403, 0.310810028, 0.320811681, 0.330812306, 0.340813958, 0.350814597, 0.36081625, 0.370816889, 0.380818556, 0.390819181, 0.400820806, 0.410821444, 0.420823111, 0.430823736, 0.440825375, 0.450826028, 0.460827694, 0.470828306, 0.480829958, 0.490830583, 0.500832236, 0.510832917, 0.520834514, 0.530835153, 0.540836819, 0.550837444, 0.560839097, 0.570839778, 0.580841375, 0.590842028, 0.600843722, 0.610844306, 0.620845944, 0.630846583, 0.640848222, 0.650848861, 0.660850556, 0.670851167, 0.680852792, 0.690853431, 0.700855083, 0.710855722, 0.720857361, 0.730858014, 0.740859667, 0.750860375, 0.760861972, 0.770862583, 0.780864222, 0.790864875, 0.800866514, 0.810867139, 0.820868792, 0.830869431, 0.840871069, 0.850871708, 0.860873361, 0.870874, 0.880875639, 0.890876292, 0.900877944, 0.910878569, 0.920880208, 0.930880847, 0.9408825, 0.950883153, 0.960884778, 0.970885431, 0.980887069, 0.990887708, 1.000889361, 1.010889986, 1.020891639] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:11.298" endtime="20201110 08:39:11.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.292" endtime="20201110 08:39:11.299"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.302" endtime="20201110 08:39:11.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.305" endtime="20201110 08:39:11.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.304" endtime="20201110 08:39:11.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.300" endtime="20201110 08:39:11.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.752" endtime="20201110 08:39:11.326"></status>
</kw>
<msg timestamp="20201110 08:39:11.326" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.334" endtime="20201110 08:39:13.442"></status>
</kw>
<msg timestamp="20201110 08:39:13.443" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28722781, 'start-iter': 1, 'wakeups': [28732837, 28742837, 28752836, 2...</msg>
<status status="PASS" starttime="20201110 08:39:11.333" endtime="20201110 08:39:13.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28722781, 'start-iter': 1, 'wakeups': [28732837, 28742837, 28752836, 2...</msg>
<status status="PASS" starttime="20201110 08:39:13.450" endtime="20201110 08:39:13.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.456" endtime="20201110 08:39:13.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.330" endtime="20201110 08:39:13.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.328" endtime="20201110 08:39:13.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.468" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 28722781, 'start-iter': 1, 'timer-count': 4, 'wakeups': [28732837, 28742837, 28752836, 28762837, 28772836, 28782837, 28792836, 28802837, 28812836, 28822837, 288...</msg>
<status status="PASS" starttime="20201110 08:39:13.464" endtime="20201110 08:39:13.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.479" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:13.475" endtime="20201110 08:39:13.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.484" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:13.482" endtime="20201110 08:39:13.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.470" endtime="20201110 08:39:13.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.495" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:13.493" endtime="20201110 08:39:13.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.499" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:13.497" endtime="20201110 08:39:13.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.487" endtime="20201110 08:39:13.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.510" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:13.507" endtime="20201110 08:39:13.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.513" level="INFO">VALUE: 28722781</msg>
<status status="PASS" starttime="20201110 08:39:13.512" endtime="20201110 08:39:13.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.502" endtime="20201110 08:39:13.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.518" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:13.517" endtime="20201110 08:39:13.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.520" level="INFO">VALUE: [28732837, 28742837, 28752836, 28762837, 28772836, 28782837, 28792836, 28802837, 28812836, 28822837, 28832836, 28842837, 28852836, 28862837, 28872836, 28882837, 28892836, 28902837, 28912836, 28922837, 28932836, 28942837, 28952836, 28962837, 28972836, 28982837, 28992836, 29002837, 29012836, 29022837, 29032836, 29042837, 29052836, 29062837, 29072836, 29082837, 29092836, 29102837, 29112836, 29122837, 29132836, 29142837, 29152836, 29162837, 29172836, 29182837, 29192836, 29202837, 29212836, 29222837, 29232836, 29242837, 29252836, 29262837, 29272836, 29282837, 29292836, 29302837, 29312836, 29322837, 29332836, 29342837, 29352836, 29362837, 29372836, 29382837, 29392836, 29402837, 29412836, 29422837, 29432836, 29442837, 29452836, 29462837, 29472836, 29482837, 29492836, 29502837, 29512836, 29522837, 29532836, 29542837, 29552836, 29562837, 29572836, 29582837, 29592836, 29602837, 29612836, 29622837, 29632836, 29642837, 29652836, 29662837, 29672836, 29682837, 29692836, 29702837, 29712836, 29722837]</msg>
<status status="PASS" starttime="20201110 08:39:13.519" endtime="20201110 08:39:13.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.514" endtime="20201110 08:39:13.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.527" endtime="20201110 08:39:13.819"></status>
</kw>
<msg timestamp="20201110 08:39:13.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.526" endtime="20201110 08:39:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029639917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.823" endtime="20201110 08:39:13.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.831" endtime="20201110 08:39:13.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.523" endtime="20201110 08:39:13.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.521" endtime="20201110 08:39:13.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.859" level="INFO">${RESULT} = {'diff': [0, 0.010058542, 0.010000638999999999, 0.010000665999999998, 0.010001680999999998, 0.010000583000000007, 0.010001638999999993, 0.010000652999999998, 0.010001639000000007, 0.010000624999999999...</msg>
<status status="PASS" starttime="20201110 08:39:13.835" endtime="20201110 08:39:13.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.863" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:13.862" endtime="20201110 08:39:13.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.865" level="INFO">VALUE: 0.019581375</msg>
<status status="PASS" starttime="20201110 08:39:13.864" endtime="20201110 08:39:13.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.859" endtime="20201110 08:39:13.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.871" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:13.870" endtime="20201110 08:39:13.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.873" level="INFO">VALUE: [0.029639917, 0.039640556, 0.049641222, 0.059642903, 0.069643486, 0.079645125, 0.089645778, 0.099647417, 0.109648042, 0.119649681, 0.129650333, 0.139651958, 0.149652611, 0.159654236, 0.169654931, 0.179656542, 0.189657167, 0.199658806, 0.209659444, 0.219661083, 0.229661722, 0.239663361, 0.249664, 0.259665653, 0.269666292, 0.279667944, 0.289668583, 0.299670208, 0.309670847, 0.3196725, 0.329673139, 0.339674778, 0.349675417, 0.359677056, 0.369677708, 0.379679347, 0.38968, 0.399681625, 0.409682278, 0.419683917, 0.429684556, 0.43968625, 0.449686833, 0.459688472, 0.469689111, 0.479690764, 0.489691417, 0.499693056, 0.509693681, 0.519695319, 0.529696028, 0.539697611, 0.549698278, 0.559699889, 0.569700583, 0.579702167, 0.589702806, 0.599704458, 0.609705097, 0.619706736, 0.629707389, 0.639709028, 0.649709653, 0.659711319, 0.669711958, 0.679713597, 0.689714222, 0.699715889, 0.7097165, 0.719718208, 0.729718806, 0.739720444, 0.749721069, 0.759722722, 0.769723375, 0.779725, 0.789725639, 0.799727292, 0.809727958, 0.819729556, 0.829730222, 0.839731847, 0.849732486, 0.859734125, 0.869734764, 0.879736403, 0.889737056, 0.899738708, 0.909739333, 0.919741042, 0.929741611, 0.939743264, 0.949743903, 0.959745542, 0.969746181, 0.979747833, 0.989748472, 0.999750111, 1.00975075, 1.019752403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:13.872" endtime="20201110 08:39:13.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.867" endtime="20201110 08:39:13.874"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.876" endtime="20201110 08:39:13.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.879" endtime="20201110 08:39:13.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.878" endtime="20201110 08:39:13.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.874" endtime="20201110 08:39:13.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.327" endtime="20201110 08:39:13.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.166" endtime="20201110 08:39:13.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.165" endtime="20201110 08:39:13.900"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:13.903" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.911" endtime="20201110 08:39:16.019"></status>
</kw>
<msg timestamp="20201110 08:39:16.020" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31299337, 'start-iter': 1, 'wakeups': [31309410, 31319409, 31329408, 3...</msg>
<status status="PASS" starttime="20201110 08:39:13.910" endtime="20201110 08:39:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.026" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31299337, 'start-iter': 1, 'wakeups': [31309410, 31319409, 31329408, 3...</msg>
<status status="PASS" starttime="20201110 08:39:16.022" endtime="20201110 08:39:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.028" endtime="20201110 08:39:16.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.907" endtime="20201110 08:39:16.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.905" endtime="20201110 08:39:16.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.040" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 31299337, 'start-iter': 1, 'timer-count': 5, 'wakeups': [31309410, 31319409, 31329408, 31339409, 31349408, 31359409, 31369408, 31379409, 31389408, 31399409, 314...</msg>
<status status="PASS" starttime="20201110 08:39:16.036" endtime="20201110 08:39:16.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.049" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:16.047" endtime="20201110 08:39:16.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.053" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:16.051" endtime="20201110 08:39:16.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.042" endtime="20201110 08:39:16.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.065" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:16.062" endtime="20201110 08:39:16.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.072" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:16.069" endtime="20201110 08:39:16.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.056" endtime="20201110 08:39:16.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.084" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:16.082" endtime="20201110 08:39:16.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.089" level="INFO">VALUE: 31299337</msg>
<status status="PASS" starttime="20201110 08:39:16.087" endtime="20201110 08:39:16.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.075" endtime="20201110 08:39:16.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.099" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:16.097" endtime="20201110 08:39:16.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.104" level="INFO">VALUE: [31309410, 31319409, 31329408, 31339409, 31349408, 31359409, 31369408, 31379409, 31389408, 31399409, 31409408, 31419409, 31429408, 31439409, 31449408, 31459409, 31469408, 31479409, 31489408, 31499409, 31509408, 31519409, 31529408, 31539409, 31549408, 31559409, 31569408, 31579409, 31589408, 31599409, 31609408, 31619409, 31629408, 31639409, 31649408, 31659409, 31669408, 31679409, 31689408, 31699409, 31709408, 31719409, 31729408, 31739409, 31749408, 31759409, 31769408, 31779409, 31789408, 31799409, 31809408, 31819409, 31829408, 31839409, 31849408, 31859409, 31869408, 31879409, 31889408, 31899409, 31909408, 31919409, 31929408, 31939409, 31949408, 31959409, 31969408, 31979409, 31989408, 31999409, 32009408, 32019409, 32029408, 32039409, 32049408, 32059409, 32069408, 32079409, 32089408, 32099409, 32109408, 32119409, 32129408, 32139409, 32149408, 32159409, 32169408, 32179409, 32189408, 32199409, 32209408, 32219409, 32229408, 32239409, 32249408, 32259409, 32269408, 32279409, 32289408, 32299409]</msg>
<status status="PASS" starttime="20201110 08:39:16.102" endtime="20201110 08:39:16.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.092" endtime="20201110 08:39:16.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.120" endtime="20201110 08:39:16.417"></status>
</kw>
<msg timestamp="20201110 08:39:16.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032232042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:16.117" endtime="20201110 08:39:16.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02215775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032232042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:16.421" endtime="20201110 08:39:16.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.428" endtime="20201110 08:39:16.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.111" endtime="20201110 08:39:16.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.107" endtime="20201110 08:39:16.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.455" level="INFO">${RESULT} = {'diff': [0, 0.010074292000000002, 0.010000207999999997, 0.010000638999999999, 0.010001667000000006, 0.010000611, 0.010001638999999993, 0.010000638000000006, 0.010001638999999993, 0.010000639000000006...</msg>
<status status="PASS" starttime="20201110 08:39:16.431" endtime="20201110 08:39:16.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.459" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:16.458" endtime="20201110 08:39:16.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.462" level="INFO">VALUE: 0.02215775</msg>
<status status="PASS" starttime="20201110 08:39:16.461" endtime="20201110 08:39:16.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.456" endtime="20201110 08:39:16.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.468" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:16.467" endtime="20201110 08:39:16.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.470" level="INFO">VALUE: [0.032232042, 0.04223225, 0.052232889, 0.062234556, 0.072235167, 0.082236806, 0.092237444, 0.102239083, 0.112239722, 0.122241375, 0.132242, 0.142243639, 0.152244292, 0.162245958, 0.172246569, 0.182248208, 0.192248833, 0.202250514, 0.212251125, 0.222252778, 0.232253403, 0.242255042, 0.252255681, 0.262257333, 0.272257958, 0.282259597, 0.292260236, 0.302261875, 0.312262514, 0.322264167, 0.332264819, 0.342266444, 0.352267097, 0.362268722, 0.372269361, 0.382271, 0.392271639, 0.402273278, 0.412273931, 0.422275569, 0.432276208, 0.442277875, 0.452278486, 0.462280125, 0.472280764, 0.482282403, 0.492283042, 0.502284708, 0.512285333, 0.522286972, 0.532287625, 0.54228925, 0.552289889, 0.562291542, 0.572292167, 0.582293806, 0.592294444, 0.602296097, 0.612296736, 0.622298375, 0.632299014, 0.642300653, 0.652301292, 0.662302931, 0.672303569, 0.682305222, 0.692305861, 0.702307556, 0.712308139, 0.722309792, 0.732310417, 0.742312056, 0.752312722, 0.762314333, 0.772314972, 0.782316611, 0.79231725, 0.802318917, 0.812319542, 0.822321181, 0.832321875, 0.842323458, 0.852324125, 0.862325736, 0.872326375, 0.882328014, 0.892328667, 0.902330306, 0.912330944, 0.922332653, 0.932333222, 0.942334861, 0.952335569, 0.962337153, 0.972337778, 0.982339431, 0.992340083, 1.002341722, 1.012342361, 1.022343986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:16.469" endtime="20201110 08:39:16.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.464" endtime="20201110 08:39:16.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.473" endtime="20201110 08:39:16.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:16.476" endtime="20201110 08:39:16.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.475" endtime="20201110 08:39:16.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.471" endtime="20201110 08:39:16.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.904" endtime="20201110 08:39:16.497"></status>
</kw>
<msg timestamp="20201110 08:39:16.497" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.505" endtime="20201110 08:39:18.612"></status>
</kw>
<msg timestamp="20201110 08:39:18.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33893643, 'start-iter': 1, 'wakeups': [33903716, 33913715, 33923714, 3...</msg>
<status status="PASS" starttime="20201110 08:39:16.504" endtime="20201110 08:39:18.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.620" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33893643, 'start-iter': 1, 'wakeups': [33903716, 33913715, 33923714, 3...</msg>
<status status="PASS" starttime="20201110 08:39:18.616" endtime="20201110 08:39:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.623" endtime="20201110 08:39:18.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.501" endtime="20201110 08:39:18.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.499" endtime="20201110 08:39:18.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.634" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 33893643, 'start-iter': 1, 'timer-count': 5, 'wakeups': [33903716, 33913715, 33923714, 33933715, 33943714, 33953715, 33963714, 33973715, 33983714, 33993715, 340...</msg>
<status status="PASS" starttime="20201110 08:39:18.630" endtime="20201110 08:39:18.634"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.643" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:18.641" endtime="20201110 08:39:18.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.647" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:18.645" endtime="20201110 08:39:18.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.636" endtime="20201110 08:39:18.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.659" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:18.657" endtime="20201110 08:39:18.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.663" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:18.661" endtime="20201110 08:39:18.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.651" endtime="20201110 08:39:18.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.673" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:18.671" endtime="20201110 08:39:18.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.678" level="INFO">VALUE: 33893643</msg>
<status status="PASS" starttime="20201110 08:39:18.676" endtime="20201110 08:39:18.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.666" endtime="20201110 08:39:18.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.690" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:18.686" endtime="20201110 08:39:18.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.695" level="INFO">VALUE: [33903716, 33913715, 33923714, 33933715, 33943714, 33953715, 33963714, 33973715, 33983714, 33993715, 34003714, 34013715, 34023714, 34033715, 34043714, 34053715, 34063714, 34073715, 34083714, 34093715, 34103714, 34113715, 34123714, 34133715, 34143714, 34153715, 34163714, 34173715, 34183714, 34193715, 34203714, 34213715, 34223714, 34233715, 34243714, 34253715, 34263714, 34273715, 34283714, 34293715, 34303714, 34313715, 34323714, 34333715, 34343714, 34353715, 34363714, 34373715, 34383714, 34393715, 34403714, 34413715, 34423714, 34433715, 34443714, 34453715, 34463714, 34473715, 34483714, 34493715, 34503714, 34513715, 34523714, 34533715, 34543714, 34553715, 34563714, 34573715, 34583714, 34593715, 34603714, 34613715, 34623714, 34633715, 34643714, 34653715, 34663714, 34673715, 34683714, 34693715, 34703714, 34713715, 34723714, 34733715, 34743714, 34753715, 34763714, 34773715, 34783714, 34793715, 34803714, 34813715, 34823714, 34833715, 34843714, 34853715, 34863714, 34873715, 34883714, 34893715]</msg>
<status status="PASS" starttime="20201110 08:39:18.693" endtime="20201110 08:39:18.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.681" endtime="20201110 08:39:18.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.711" endtime="20201110 08:39:19.002"></status>
</kw>
<msg timestamp="20201110 08:39:19.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029457028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.708" endtime="20201110 08:39:19.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029457028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.006" endtime="20201110 08:39:19.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.014" endtime="20201110 08:39:19.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.702" endtime="20201110 08:39:19.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.698" endtime="20201110 08:39:19.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.041" level="INFO">${RESULT} = {'diff': [0, 0.010074305999999998, 0.010000263999999998, 0.010000624999999999, 0.010001652, 0.010000638999999999, 0.010001653, 0.010000639000000006, 0.010001638999999993, 0.010000653000000012, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:19.017" endtime="20201110 08:39:19.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.045" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:19.044" endtime="20201110 08:39:19.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.047" level="INFO">VALUE: 0.019382722</msg>
<status status="PASS" starttime="20201110 08:39:19.046" endtime="20201110 08:39:19.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.041" endtime="20201110 08:39:19.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.053" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:19.051" endtime="20201110 08:39:19.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.055" level="INFO">VALUE: [0.029457028, 0.039457292, 0.049457917, 0.059459569, 0.069460208, 0.079461861, 0.0894625, 0.099464139, 0.109464792, 0.119466444, 0.129467125, 0.139468736, 0.149469389, 0.159471042, 0.169471681, 0.179473333, 0.189474, 0.199475639, 0.209476278, 0.219477944, 0.229478583, 0.239480236, 0.249480889, 0.259482542, 0.269483181, 0.279484833, 0.289485486, 0.299487125, 0.309487792, 0.319489431, 0.329490069, 0.339491736, 0.349492375, 0.359494042, 0.369494667, 0.379496319, 0.389496972, 0.399498625, 0.409499278, 0.419500917, 0.429501583, 0.439503236, 0.449503931, 0.459505514, 0.469506181, 0.479507847, 0.489508472, 0.499510125, 0.509510778, 0.519512458, 0.529513069, 0.539514722, 0.549515361, 0.559517014, 0.569517681, 0.579519319, 0.589519958, 0.599521625, 0.609522264, 0.619523944, 0.629524556, 0.639526222, 0.649526861, 0.659528514, 0.669529181, 0.679530806, 0.689531472, 0.699533125, 0.709533764, 0.719535417, 0.729536125, 0.739537708, 0.749538375, 0.759540069, 0.769540653, 0.779542306, 0.789542958, 0.799544611, 0.809545278, 0.819546917, 0.829547625, 0.839549208, 0.849549875, 0.859551514, 0.869552153, 0.879553806, 0.889554542, 0.899556125, 0.909556764, 0.919558403, 0.929559056, 0.939560708, 0.949561347, 0.959563014, 0.969563667, 0.979565306, 0.989565958, 0.999567597, 1.009568264, 1.019569931] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:19.054" endtime="20201110 08:39:19.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.049" endtime="20201110 08:39:19.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.058" endtime="20201110 08:39:19.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:19.062" endtime="20201110 08:39:19.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.060" endtime="20201110 08:39:19.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.057" endtime="20201110 08:39:19.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.498" endtime="20201110 08:39:19.083"></status>
</kw>
<msg timestamp="20201110 08:39:19.084" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.092" endtime="20201110 08:39:21.199"></status>
</kw>
<msg timestamp="20201110 08:39:21.201" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36480201, 'start-iter': 1, 'wakeups': [36490274, 36500273, 36510272, 3...</msg>
<status status="PASS" starttime="20201110 08:39:19.090" endtime="20201110 08:39:21.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.207" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36480201, 'start-iter': 1, 'wakeups': [36490274, 36500273, 36510272, 3...</msg>
<status status="PASS" starttime="20201110 08:39:21.203" endtime="20201110 08:39:21.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.209" endtime="20201110 08:39:21.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.088" endtime="20201110 08:39:21.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.086" endtime="20201110 08:39:21.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.220" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 36480201, 'start-iter': 1, 'timer-count': 5, 'wakeups': [36490274, 36500273, 36510272, 36520273, 36530272, 36540273, 36550272, 36560273, 36570272, 36580273, 365...</msg>
<status status="PASS" starttime="20201110 08:39:21.216" endtime="20201110 08:39:21.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.229" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:21.227" endtime="20201110 08:39:21.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.233" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:21.231" endtime="20201110 08:39:21.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.222" endtime="20201110 08:39:21.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.243" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:21.241" endtime="20201110 08:39:21.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.248" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:21.246" endtime="20201110 08:39:21.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.236" endtime="20201110 08:39:21.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.259" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:21.256" endtime="20201110 08:39:21.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.263" level="INFO">VALUE: 36480201</msg>
<status status="PASS" starttime="20201110 08:39:21.261" endtime="20201110 08:39:21.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.251" endtime="20201110 08:39:21.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.274" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:21.271" endtime="20201110 08:39:21.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.277" level="INFO">VALUE: [36490274, 36500273, 36510272, 36520273, 36530272, 36540273, 36550272, 36560273, 36570272, 36580273, 36590272, 36600273, 36610272, 36620273, 36630272, 36640273, 36650272, 36660273, 36670272, 36680273, 36690272, 36700273, 36710272, 36720273, 36730272, 36740273, 36750272, 36760273, 36770272, 36780273, 36790272, 36800273, 36810272, 36820273, 36830272, 36840273, 36850272, 36860273, 36870272, 36880273, 36890272, 36900273, 36910272, 36920273, 36930272, 36940273, 36950272, 36960273, 36970272, 36980273, 36990272, 37000273, 37010272, 37020273, 37030272, 37040273, 37050272, 37060273, 37070272, 37080273, 37090272, 37100273, 37110272, 37120273, 37130272, 37140273, 37150272, 37160273, 37170272, 37180273, 37190272, 37200273, 37210272, 37220273, 37230272, 37240273, 37250272, 37260273, 37270272, 37280273, 37290272, 37300273, 37310272, 37320273, 37330272, 37340273, 37350272, 37360273, 37370272, 37380273, 37390272, 37400273, 37410272, 37420273, 37430272, 37440273, 37450272, 37460273, 37470272, 37480273]</msg>
<status status="PASS" starttime="20201110 08:39:21.276" endtime="20201110 08:39:21.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.266" endtime="20201110 08:39:21.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.284" endtime="20201110 08:39:21.577"></status>
</kw>
<msg timestamp="20201110 08:39:21.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029982222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.282" endtime="20201110 08:39:21.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029982222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.581" endtime="20201110 08:39:21.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.588" endtime="20201110 08:39:21.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.280" endtime="20201110 08:39:21.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.278" endtime="20201110 08:39:21.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.614" level="INFO">${RESULT} = {'diff': [0, 0.010074318999999998, 0.010000209, 0.010000679999999998, 0.010001625, 0.010000695000000004, 0.010001597000000001, 0.010000652999999998, 0.010001637999999993, 0.010000639000000006, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:21.592" endtime="20201110 08:39:21.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.619" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:39:21.618" endtime="20201110 08:39:21.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.621" level="INFO">VALUE: 0.019907903</msg>
<status status="PASS" starttime="20201110 08:39:21.620" endtime="20201110 08:39:21.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.615" endtime="20201110 08:39:21.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.626" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:21.625" endtime="20201110 08:39:21.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.628" level="INFO">VALUE: [0.029982222, 0.039982431, 0.049983111, 0.059984736, 0.069985431, 0.079987028, 0.089987681, 0.099989319, 0.109989958, 0.119991611, 0.129992264, 0.139993917, 0.149994556, 0.159996194, 0.169996847, 0.1799985, 0.189999139, 0.200000792, 0.210001431, 0.220003083, 0.23000375, 0.240005389, 0.250006028, 0.260007681, 0.270008347, 0.280009972, 0.290010625, 0.300012292, 0.310012917, 0.320014569, 0.330015222, 0.340016861, 0.350017514, 0.360019222, 0.370019806, 0.380021458, 0.390022111, 0.400023792, 0.410024403, 0.420026069, 0.430026694, 0.440028361, 0.450029056, 0.460030653, 0.470031306, 0.480032944, 0.490033583, 0.500035236, 0.510035889, 0.520037542, 0.530038181, 0.540039833, 0.550040542, 0.560042125, 0.570042778, 0.580044431, 0.590045069, 0.600046722, 0.610047444, 0.620049014, 0.630049667, 0.640051333, 0.650051972, 0.660053625, 0.670054264, 0.680055917, 0.690056556, 0.700058208, 0.710058861, 0.7200605, 0.730061153, 0.740062806, 0.750063444, 0.760065097, 0.770065764, 0.780067389, 0.790068042, 0.800069708, 0.810070333, 0.820072, 0.830072639, 0.840074292, 0.850074958, 0.860076583, 0.870077236, 0.880078889, 0.890079528, 0.900081181, 0.910081819, 0.920083472, 0.930084125, 0.940085806, 0.950086431, 0.960088069, 0.970088722, 0.980090361, 0.990091014, 1.000092667, 1.010093306, 1.020094958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:21.627" endtime="20201110 08:39:21.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.622" endtime="20201110 08:39:21.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.632" endtime="20201110 08:39:21.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:21.635" endtime="20201110 08:39:21.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.634" endtime="20201110 08:39:21.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.630" endtime="20201110 08:39:21.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.084" endtime="20201110 08:39:21.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.902" endtime="20201110 08:39:21.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.901" endtime="20201110 08:39:21.656"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:21.659" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.668" endtime="20201110 08:39:23.775"></status>
</kw>
<msg timestamp="20201110 08:39:23.777" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39056515, 'start-iter': 1, 'wakeups': [39066605, 39076604, 39086604, 3...</msg>
<status status="PASS" starttime="20201110 08:39:21.666" endtime="20201110 08:39:23.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 39056515, 'start-iter': 1, 'wakeups': [39066605, 39076604, 39086604, 3...</msg>
<status status="PASS" starttime="20201110 08:39:23.779" endtime="20201110 08:39:23.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.785" endtime="20201110 08:39:23.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.663" endtime="20201110 08:39:23.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.661" endtime="20201110 08:39:23.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.796" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 39056515, 'start-iter': 1, 'timer-count': 6, 'wakeups': [39066605, 39076604, 39086604, 39096604, 39106604, 39116604, 39126604, 39136604, 39146604, 39156604, 391...</msg>
<status status="PASS" starttime="20201110 08:39:23.792" endtime="20201110 08:39:23.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.805" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:23.803" endtime="20201110 08:39:23.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.809" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:23.807" endtime="20201110 08:39:23.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.798" endtime="20201110 08:39:23.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.820" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:23.818" endtime="20201110 08:39:23.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.824" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:23.822" endtime="20201110 08:39:23.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.812" endtime="20201110 08:39:23.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.834" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:23.832" endtime="20201110 08:39:23.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.837" level="INFO">VALUE: 39056515</msg>
<status status="PASS" starttime="20201110 08:39:23.836" endtime="20201110 08:39:23.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.827" endtime="20201110 08:39:23.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.842" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:23.841" endtime="20201110 08:39:23.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.848" level="INFO">VALUE: [39066605, 39076604, 39086604, 39096604, 39106604, 39116604, 39126604, 39136604, 39146604, 39156604, 39166604, 39176604, 39186604, 39196604, 39206604, 39216604, 39226604, 39236604, 39246604, 39256604, 39266604, 39276604, 39286604, 39296604, 39306604, 39316604, 39326604, 39336604, 39346604, 39356604, 39366604, 39376604, 39386604, 39396604, 39406604, 39416604, 39426604, 39436604, 39446604, 39456604, 39466604, 39476604, 39486604, 39496604, 39506604, 39516604, 39526604, 39536604, 39546604, 39556604, 39566604, 39576604, 39586604, 39596604, 39606604, 39616604, 39626604, 39636604, 39646604, 39656604, 39666604, 39676604, 39686604, 39696604, 39706604, 39716604, 39726604, 39736604, 39746604, 39756604, 39766604, 39776604, 39786604, 39796604, 39806604, 39816604, 39826604, 39836604, 39846604, 39856604, 39866604, 39876604, 39886604, 39896604, 39906604, 39916604, 39926604, 39936604, 39946604, 39956604, 39966604, 39976604, 39986604, 39996604, 40006604, 40016604, 40026604, 40036604, 40046604, 40056604]</msg>
<status status="PASS" starttime="20201110 08:39:23.843" endtime="20201110 08:39:23.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.838" endtime="20201110 08:39:23.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.856" endtime="20201110 08:39:24.147"></status>
</kw>
<msg timestamp="20201110 08:39:24.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033464278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.854" endtime="20201110 08:39:24.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023372486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033464278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:24.151" endtime="20201110 08:39:24.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.158" endtime="20201110 08:39:24.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.852" endtime="20201110 08:39:24.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.850" endtime="20201110 08:39:24.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:24.186" level="INFO">${RESULT} = {'diff': [0, 0.010091791999999999, 0.010000055, 0.010000638999999999, 0.010001667000000006, 0.010000638999999992, 0.010001639000000007, 0.010000638999999992, 0.010001652, 0.010000695000000004, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:24.163" endtime="20201110 08:39:24.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.191" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:24.190" endtime="20201110 08:39:24.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.193" level="INFO">VALUE: 0.023372486</msg>
<status status="PASS" starttime="20201110 08:39:24.192" endtime="20201110 08:39:24.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.187" endtime="20201110 08:39:24.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.198" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:24.197" endtime="20201110 08:39:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.201" level="INFO">VALUE: [0.033464278, 0.043464333, 0.053464972, 0.063466639, 0.073467278, 0.083468917, 0.093469556, 0.103471208, 0.113471903, 0.1234735, 0.133474139, 0.143475792, 0.153476458, 0.163478083, 0.17347875, 0.183480389, 0.193481028, 0.203482681, 0.213483319, 0.223484986, 0.233485611, 0.243487347, 0.253487917, 0.263489569, 0.27349025, 0.283491875, 0.2934925, 0.303494153, 0.313494792, 0.323496444, 0.333497097, 0.343498778, 0.353499389, 0.363501042, 0.373501681, 0.383503333, 0.393504, 0.403505667, 0.413506292, 0.423507931, 0.433508597, 0.443510222, 0.453510875, 0.463512528, 0.473513167, 0.483514806, 0.493515458, 0.503517111, 0.513517764, 0.523519403, 0.533520042, 0.543521722, 0.553522389, 0.563523986, 0.573524722, 0.583526292, 0.593526931, 0.603528583, 0.613529264, 0.623530889, 0.633531528, 0.643533194, 0.653533819, 0.663535472, 0.673536111, 0.683537778, 0.693538417, 0.703540056, 0.713540722, 0.723542361, 0.733543, 0.743544667, 0.753545319, 0.763546958, 0.773547597, 0.78354925, 0.793549903, 0.803551556, 0.813552194, 0.823553847, 0.833554486, 0.843556139, 0.853556792, 0.863558431, 0.873559069, 0.883560736, 0.893561375, 0.903563014, 0.913563681, 0.923565319, 0.933565972, 0.943567611, 0.95356825, 0.963569931, 0.973570583, 0.983572208, 0.993572847, 1.003574514, 1.013575139, 1.023576792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:24.200" endtime="20201110 08:39:24.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.195" endtime="20201110 08:39:24.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.204" endtime="20201110 08:39:24.205"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:24.207" endtime="20201110 08:39:24.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.206" endtime="20201110 08:39:24.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.202" endtime="20201110 08:39:24.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.660" endtime="20201110 08:39:24.228"></status>
</kw>
<msg timestamp="20201110 08:39:24.229" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.237" endtime="20201110 08:39:26.345"></status>
</kw>
<msg timestamp="20201110 08:39:26.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41624821, 'start-iter': 1, 'wakeups': [41634911, 41644910, 41654910, 4...</msg>
<status status="PASS" starttime="20201110 08:39:24.235" endtime="20201110 08:39:26.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41624821, 'start-iter': 1, 'wakeups': [41634911, 41644910, 41654910, 4...</msg>
<status status="PASS" starttime="20201110 08:39:26.348" endtime="20201110 08:39:26.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.354" endtime="20201110 08:39:26.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.232" endtime="20201110 08:39:26.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.231" endtime="20201110 08:39:26.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.372" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 41624821, 'start-iter': 1, 'timer-count': 6, 'wakeups': [41634911, 41644910, 41654910, 41664910, 41674910, 41684910, 41694910, 41704910, 41714910, 41724910, 417...</msg>
<status status="PASS" starttime="20201110 08:39:26.366" endtime="20201110 08:39:26.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.383" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:26.380" endtime="20201110 08:39:26.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.390" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:26.387" endtime="20201110 08:39:26.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.375" endtime="20201110 08:39:26.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.403" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:26.400" endtime="20201110 08:39:26.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.407" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:26.405" endtime="20201110 08:39:26.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.393" endtime="20201110 08:39:26.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.418" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:26.416" endtime="20201110 08:39:26.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.422" level="INFO">VALUE: 41624821</msg>
<status status="PASS" starttime="20201110 08:39:26.420" endtime="20201110 08:39:26.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.410" endtime="20201110 08:39:26.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.432" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:26.430" endtime="20201110 08:39:26.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.437" level="INFO">VALUE: [41634911, 41644910, 41654910, 41664910, 41674910, 41684910, 41694910, 41704910, 41714910, 41724910, 41734910, 41744910, 41754910, 41764910, 41774910, 41784910, 41794910, 41804910, 41814910, 41824910, 41834910, 41844910, 41854910, 41864910, 41874910, 41884910, 41894910, 41904910, 41914910, 41924910, 41934910, 41944910, 41954910, 41964910, 41974910, 41984910, 41994910, 42004910, 42014910, 42024910, 42034910, 42044910, 42054910, 42064910, 42074910, 42084910, 42094910, 42104910, 42114910, 42124910, 42134910, 42144910, 42154910, 42164910, 42174910, 42184910, 42194910, 42204910, 42214910, 42224910, 42234910, 42244910, 42254910, 42264910, 42274910, 42284910, 42294910, 42304910, 42314910, 42324910, 42334910, 42344910, 42354910, 42364910, 42374910, 42384910, 42394910, 42404910, 42414910, 42424910, 42434910, 42444910, 42454910, 42464910, 42474910, 42484910, 42494910, 42504910, 42514910, 42524910, 42534910, 42544910, 42554910, 42564910, 42574910, 42584910, 42594910, 42604910, 42614910, 42624910]</msg>
<status status="PASS" starttime="20201110 08:39:26.435" endtime="20201110 08:39:26.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.425" endtime="20201110 08:39:26.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.454" endtime="20201110 08:39:26.750"></status>
</kw>
<msg timestamp="20201110 08:39:26.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029988, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:26.451" endtime="20201110 08:39:26.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019896222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029988, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:26.754" endtime="20201110 08:39:26.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.762" endtime="20201110 08:39:26.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.445" endtime="20201110 08:39:26.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.440" endtime="20201110 08:39:26.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.789" level="INFO">${RESULT} = {'diff': [0, 0.010091778, 0.010000069, 0.010000624999999999, 0.010001653, 0.010000639000000006, 0.010001653, 0.010000638999999992, 0.010001653, 0.010000638000000006, 0.010001666999999992, 0.0100006390...</msg>
<status status="PASS" starttime="20201110 08:39:26.765" endtime="20201110 08:39:26.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.793" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:26.792" endtime="20201110 08:39:26.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.795" level="INFO">VALUE: 0.019896222</msg>
<status status="PASS" starttime="20201110 08:39:26.794" endtime="20201110 08:39:26.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.789" endtime="20201110 08:39:26.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.801" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:26.800" endtime="20201110 08:39:26.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.803" level="INFO">VALUE: [0.029988, 0.039988069, 0.049988694, 0.059990347, 0.069990986, 0.079992639, 0.089993278, 0.099994931, 0.109995569, 0.119997236, 0.129997875, 0.139999514, 0.150000153, 0.160001806, 0.170002444, 0.180004097, 0.190004736, 0.200006403, 0.210007042, 0.220008681, 0.230009333, 0.240010986, 0.250011611, 0.260013264, 0.270013903, 0.280015569, 0.290016208, 0.300017847, 0.3100185, 0.320020153, 0.330020792, 0.340022431, 0.350023083, 0.36002475, 0.370025375, 0.380027042, 0.390027667, 0.400029333, 0.410030014, 0.420031611, 0.43003225, 0.440033903, 0.450034556, 0.460036194, 0.470036847, 0.4800385, 0.490039153, 0.500040806, 0.510041431, 0.520043139, 0.530043736, 0.540045389, 0.550046014, 0.560047708, 0.570048319, 0.580050042, 0.590050611, 0.60005225, 0.610052903, 0.620054556, 0.630055194, 0.640056847, 0.650057556, 0.660059153, 0.670059833, 0.680061431, 0.690062083, 0.700063736, 0.710064375, 0.720066014, 0.730066736, 0.740068319, 0.750069014, 0.760070597, 0.77007125, 0.780072889, 0.790073542, 0.800075194, 0.810075833, 0.8200775, 0.830078125, 0.840079792, 0.850080417, 0.860082069, 0.870082736, 0.880084375, 0.890085014, 0.900086653, 0.910087319, 0.920088944, 0.930089625, 0.940091264, 0.950091889, 0.960093542, 0.970094208, 0.980095847, 0.990096472, 1.000098125, 1.010098778, 1.020100417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:26.802" endtime="20201110 08:39:26.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.796" endtime="20201110 08:39:26.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.807" endtime="20201110 08:39:26.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.811" endtime="20201110 08:39:26.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.809" endtime="20201110 08:39:26.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.805" endtime="20201110 08:39:26.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.229" endtime="20201110 08:39:26.832"></status>
</kw>
<msg timestamp="20201110 08:39:26.832" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.840" endtime="20201110 08:39:28.947"></status>
</kw>
<msg timestamp="20201110 08:39:28.948" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44227881, 'start-iter': 1, 'wakeups': [44237970, 44247970, 44257970, 4...</msg>
<status status="PASS" starttime="20201110 08:39:26.838" endtime="20201110 08:39:28.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.960" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44227881, 'start-iter': 1, 'wakeups': [44237970, 44247970, 44257970, 4...</msg>
<status status="PASS" starttime="20201110 08:39:28.956" endtime="20201110 08:39:28.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.962" endtime="20201110 08:39:28.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.836" endtime="20201110 08:39:28.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.834" endtime="20201110 08:39:28.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:28.973" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 44227881, 'start-iter': 1, 'timer-count': 6, 'wakeups': [44237970, 44247970, 44257970, 44267970, 44277970, 44287970, 44297970, 44307970, 44317970, 44327970, 443...</msg>
<status status="PASS" starttime="20201110 08:39:28.969" endtime="20201110 08:39:28.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.984" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:28.980" endtime="20201110 08:39:28.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.989" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:28.986" endtime="20201110 08:39:28.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.975" endtime="20201110 08:39:28.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.999" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:28.997" endtime="20201110 08:39:28.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.003" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:29.001" endtime="20201110 08:39:29.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.992" endtime="20201110 08:39:29.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.014" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:29.012" endtime="20201110 08:39:29.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.018" level="INFO">VALUE: 44227881</msg>
<status status="PASS" starttime="20201110 08:39:29.016" endtime="20201110 08:39:29.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.006" endtime="20201110 08:39:29.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.028" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:29.026" endtime="20201110 08:39:29.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.033" level="INFO">VALUE: [44237970, 44247970, 44257970, 44267970, 44277970, 44287970, 44297970, 44307970, 44317970, 44327970, 44337970, 44347970, 44357970, 44367970, 44377970, 44387970, 44397970, 44407970, 44417970, 44427970, 44437970, 44447970, 44457970, 44467970, 44477970, 44487970, 44497970, 44507970, 44517970, 44527970, 44537970, 44547970, 44557970, 44567970, 44577970, 44587970, 44597970, 44607970, 44617970, 44627970, 44637970, 44647970, 44657970, 44667970, 44677970, 44687970, 44697970, 44707970, 44717970, 44727970, 44737970, 44747970, 44757970, 44767970, 44777970, 44787970, 44797970, 44807970, 44817970, 44827970, 44837970, 44847970, 44857970, 44867970, 44877970, 44887970, 44897970, 44907970, 44917970, 44927970, 44937970, 44947970, 44957970, 44967970, 44977970, 44987970, 44997970, 45007970, 45017970, 45027970, 45037970, 45047970, 45057970, 45067970, 45077970, 45087970, 45097970, 45107970, 45117970, 45127970, 45137970, 45147970, 45157970, 45167970, 45177970, 45187970, 45197970, 45207970, 45217970, 45227970]</msg>
<status status="PASS" starttime="20201110 08:39:29.031" endtime="20201110 08:39:29.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.021" endtime="20201110 08:39:29.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.041" endtime="20201110 08:39:29.332"></status>
</kw>
<msg timestamp="20201110 08:39:29.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029557639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:29.040" endtime="20201110 08:39:29.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019466208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029557639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:29.336" endtime="20201110 08:39:29.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.344" endtime="20201110 08:39:29.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.037" endtime="20201110 08:39:29.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.036" endtime="20201110 08:39:29.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.371" level="INFO">${RESULT} = {'diff': [0, 0.010091431000000001, 0.010001068999999998, 0.010000638999999999, 0.010001639000000007, 0.010000638999999999, 0.010001653, 0.010000639000000006, 0.010001652, 0.010000638999999992, 0.01000...</msg>
<status status="PASS" starttime="20201110 08:39:29.347" endtime="20201110 08:39:29.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.376" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:39:29.375" endtime="20201110 08:39:29.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.378" level="INFO">VALUE: 0.019466208</msg>
<status status="PASS" starttime="20201110 08:39:29.377" endtime="20201110 08:39:29.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.372" endtime="20201110 08:39:29.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.383" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:29.382" endtime="20201110 08:39:29.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.385" level="INFO">VALUE: [0.029557639, 0.039558708, 0.049559347, 0.059560986, 0.069561625, 0.079563278, 0.089563917, 0.099565569, 0.109566208, 0.119567847, 0.1295685, 0.139570139, 0.149570792, 0.159572431, 0.169573069, 0.179574722, 0.189575361, 0.199577028, 0.209577653, 0.219579319, 0.229579944, 0.239581597, 0.249582236, 0.259583889, 0.269584528, 0.279586181, 0.289586833, 0.299588472, 0.309589125, 0.319590764, 0.329591417, 0.339593083, 0.349593708, 0.359595347, 0.369596, 0.379597639, 0.389598292, 0.399599931, 0.409600583, 0.419602236, 0.429602903, 0.439604528, 0.449605153, 0.459606806, 0.469607444, 0.479609097, 0.489609736, 0.499611389, 0.509612028, 0.519613694, 0.529614361, 0.539615972, 0.549616611, 0.559618278, 0.569618958, 0.579620569, 0.589621208, 0.599622847, 0.609623486, 0.619625139, 0.629625806, 0.639627472, 0.649628069, 0.659629722, 0.669630361, 0.679632014, 0.689632667, 0.699634306, 0.709634944, 0.719636611, 0.72963725, 0.739638889, 0.749639528, 0.759641181, 0.769641819, 0.779643472, 0.789644125, 0.799645778, 0.809646417, 0.819648069, 0.829648694, 0.839650347, 0.849651042, 0.859652653, 0.869653292, 0.879654931, 0.889655569, 0.899657222, 0.909657861, 0.919659514, 0.929660153, 0.939661861, 0.949662444, 0.959664097, 0.969664736, 0.979666389, 0.989667028, 0.999668681, 1.009669319, 1.019670972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:29.384" endtime="20201110 08:39:29.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.379" endtime="20201110 08:39:29.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.388" endtime="20201110 08:39:29.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:29.392" endtime="20201110 08:39:29.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.390" endtime="20201110 08:39:29.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.387" endtime="20201110 08:39:29.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.832" endtime="20201110 08:39:29.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.658" endtime="20201110 08:39:29.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.657" endtime="20201110 08:39:29.413"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:29.415" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.424" endtime="20201110 08:39:31.532"></status>
</kw>
<msg timestamp="20201110 08:39:31.534" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46811440, 'start-iter': 1, 'wakeups': [46821547, 46831548, 46841548, 4...</msg>
<status status="PASS" starttime="20201110 08:39:29.422" endtime="20201110 08:39:31.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.540" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46811440, 'start-iter': 1, 'wakeups': [46821547, 46831548, 46841548, 4...</msg>
<status status="PASS" starttime="20201110 08:39:31.536" endtime="20201110 08:39:31.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.542" endtime="20201110 08:39:31.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.419" endtime="20201110 08:39:31.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.417" endtime="20201110 08:39:31.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:31.554" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 46811440, 'start-iter': 1, 'timer-count': 7, 'wakeups': [46821547, 46831548, 46841548, 46851548, 46861548, 46871548, 46881548, 46891548, 46901548, 46911548, 469...</msg>
<status status="PASS" starttime="20201110 08:39:31.550" endtime="20201110 08:39:31.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.563" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:31.560" endtime="20201110 08:39:31.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.567" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:31.565" endtime="20201110 08:39:31.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.556" endtime="20201110 08:39:31.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.577" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:31.575" endtime="20201110 08:39:31.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.582" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:31.580" endtime="20201110 08:39:31.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.570" endtime="20201110 08:39:31.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.590" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:31.589" endtime="20201110 08:39:31.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.592" level="INFO">VALUE: 46811440</msg>
<status status="PASS" starttime="20201110 08:39:31.591" endtime="20201110 08:39:31.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.585" endtime="20201110 08:39:31.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.597" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:31.596" endtime="20201110 08:39:31.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.599" level="INFO">VALUE: [46821547, 46831548, 46841548, 46851548, 46861548, 46871548, 46881548, 46891548, 46901548, 46911548, 46921548, 46931548, 46941548, 46951548, 46961548, 46971548, 46981548, 46991548, 47001548, 47011548, 47021548, 47031548, 47041548, 47051548, 47061548, 47071548, 47081548, 47091548, 47101548, 47111548, 47121548, 47131548, 47141548, 47151548, 47161548, 47171548, 47181548, 47191548, 47201548, 47211548, 47221548, 47231548, 47241548, 47251548, 47261548, 47271548, 47281548, 47291548, 47301548, 47311548, 47321548, 47331548, 47341548, 47351548, 47361548, 47371548, 47381548, 47391548, 47401548, 47411548, 47421548, 47431548, 47441548, 47451548, 47461548, 47471548, 47481548, 47491548, 47501548, 47511548, 47521548, 47531548, 47541548, 47551548, 47561548, 47571548, 47581548, 47591548, 47601548, 47611548, 47621548, 47631548, 47641548, 47651548, 47661548, 47671548, 47681548, 47691548, 47701548, 47711548, 47721548, 47731548, 47741548, 47751548, 47761548, 47771548, 47781548, 47791548, 47801548, 47811548]</msg>
<status status="PASS" starttime="20201110 08:39:31.598" endtime="20201110 08:39:31.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.593" endtime="20201110 08:39:31.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.606" endtime="20201110 08:39:31.897"></status>
</kw>
<msg timestamp="20201110 08:39:31.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032257931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:31.605" endtime="20201110 08:39:31.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032257931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:31.901" endtime="20201110 08:39:31.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.908" endtime="20201110 08:39:31.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.602" endtime="20201110 08:39:31.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.600" endtime="20201110 08:39:31.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:31.935" level="INFO">${RESULT} = {'diff': [0, 0.010108611999999996, 0.010002180000000006, 0.010001069999999994, 0.010001208000000004, 0.010001082999999994, 0.010001209000000011, 0.010001068999999987, 0.010001208000000011, 0.010001125...</msg>
<status status="PASS" starttime="20201110 08:39:31.912" endtime="20201110 08:39:31.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.940" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:31.939" endtime="20201110 08:39:31.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.943" level="INFO">VALUE: 0.022149319</msg>
<status status="PASS" starttime="20201110 08:39:31.941" endtime="20201110 08:39:31.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.936" endtime="20201110 08:39:31.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.949" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:31.948" endtime="20201110 08:39:31.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.951" level="INFO">VALUE: [0.032257931, 0.042260111, 0.052261181, 0.062262389, 0.072263472, 0.082264681, 0.09226575, 0.102266958, 0.112268083, 0.122269236, 0.132270319, 0.142271528, 0.152272625, 0.162273833, 0.172274917, 0.182276153, 0.192277181, 0.202278389, 0.212279472, 0.222280681, 0.232281764, 0.242282972, 0.252284083, 0.262285264, 0.272286361, 0.282287583, 0.292288639, 0.302289861, 0.312290917, 0.322292153, 0.332293208, 0.342294431, 0.3522955, 0.362296708, 0.372297792, 0.382299028, 0.392300083, 0.402301292, 0.412302389, 0.422303583, 0.432304667, 0.442305889, 0.452307028, 0.462308167, 0.472309236, 0.482310472, 0.492311528, 0.502312736, 0.512313819, 0.522315028, 0.532316111, 0.542317319, 0.552318403, 0.562319611, 0.572320694, 0.582321917, 0.592322986, 0.602324194, 0.612325264, 0.622326472, 0.632327583, 0.642328764, 0.652329861, 0.662331083, 0.672332139, 0.682333347, 0.692334431, 0.702335639, 0.712336722, 0.722337931, 0.732339014, 0.74234025, 0.752341292, 0.762342556, 0.772343583, 0.782344792, 0.792345875, 0.802347139, 0.812348167, 0.822349375, 0.832350458, 0.842351667, 0.85235275, 0.862353958, 0.872355042, 0.882356264, 0.892357347, 0.902358528, 0.912359611, 0.922360819, 0.932361903, 0.942363111, 0.952364194, 0.962365403, 0.972366486, 0.982367694, 0.992368806, 1.002369986, 1.012371083, 1.022372278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:31.950" endtime="20201110 08:39:31.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.945" endtime="20201110 08:39:31.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.954" endtime="20201110 08:39:31.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:31.958" endtime="20201110 08:39:31.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.956" endtime="20201110 08:39:31.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.952" endtime="20201110 08:39:31.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.416" endtime="20201110 08:39:31.978"></status>
</kw>
<msg timestamp="20201110 08:39:31.978" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.987" endtime="20201110 08:39:34.094"></status>
</kw>
<msg timestamp="20201110 08:39:34.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49374494, 'start-iter': 1, 'wakeups': [49384601, 49394602, 49404602, 4...</msg>
<status status="PASS" starttime="20201110 08:39:31.985" endtime="20201110 08:39:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.101" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49374494, 'start-iter': 1, 'wakeups': [49384601, 49394602, 49404602, 4...</msg>
<status status="PASS" starttime="20201110 08:39:34.097" endtime="20201110 08:39:34.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.103" endtime="20201110 08:39:34.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.982" endtime="20201110 08:39:34.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.980" endtime="20201110 08:39:34.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.119" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 49374494, 'start-iter': 1, 'timer-count': 7, 'wakeups': [49384601, 49394602, 49404602, 49414602, 49424602, 49434602, 49444602, 49454602, 49464602, 49474602, 494...</msg>
<status status="PASS" starttime="20201110 08:39:34.113" endtime="20201110 08:39:34.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.128" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:34.126" endtime="20201110 08:39:34.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.132" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:34.130" endtime="20201110 08:39:34.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.121" endtime="20201110 08:39:34.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.143" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:34.141" endtime="20201110 08:39:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.146" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:34.145" endtime="20201110 08:39:34.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.136" endtime="20201110 08:39:34.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.151" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:34.150" endtime="20201110 08:39:34.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.153" level="INFO">VALUE: 49374494</msg>
<status status="PASS" starttime="20201110 08:39:34.152" endtime="20201110 08:39:34.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.148" endtime="20201110 08:39:34.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.159" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:34.157" endtime="20201110 08:39:34.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.161" level="INFO">VALUE: [49384601, 49394602, 49404602, 49414602, 49424602, 49434602, 49444602, 49454602, 49464602, 49474602, 49484602, 49494602, 49504602, 49514602, 49524602, 49534602, 49544602, 49554602, 49564602, 49574602, 49584602, 49594602, 49604602, 49614602, 49624602, 49634602, 49644602, 49654602, 49664602, 49674602, 49684602, 49694602, 49704602, 49714602, 49724602, 49734602, 49744602, 49754602, 49764602, 49774602, 49784602, 49794602, 49804602, 49814602, 49824602, 49834602, 49844602, 49854602, 49864602, 49874602, 49884602, 49894602, 49904602, 49914602, 49924602, 49934602, 49944602, 49954602, 49964602, 49974602, 49984602, 49994602, 50004602, 50014602, 50024602, 50034602, 50044602, 50054602, 50064602, 50074602, 50084602, 50094602, 50104602, 50114602, 50124602, 50134602, 50144602, 50154602, 50164602, 50174602, 50184602, 50194602, 50204602, 50214602, 50224602, 50234602, 50244602, 50254602, 50264602, 50274602, 50284602, 50294602, 50304602, 50314602, 50324602, 50334602, 50344602, 50354602, 50364602, 50374602]</msg>
<status status="PASS" starttime="20201110 08:39:34.160" endtime="20201110 08:39:34.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.155" endtime="20201110 08:39:34.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.169" endtime="20201110 08:39:34.460"></status>
</kw>
<msg timestamp="20201110 08:39:34.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029510347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.167" endtime="20201110 08:39:34.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019401736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029510347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.464" endtime="20201110 08:39:34.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.471" endtime="20201110 08:39:34.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.165" endtime="20201110 08:39:34.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.163" endtime="20201110 08:39:34.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.498" level="INFO">${RESULT} = {'diff': [0, 0.010108611, 0.010002167, 0.010001083000000001, 0.010001209000000004, 0.010001097, 0.010001193999999991, 0.01000107, 0.010001222000000004, 0.010001054999999995, 0.010001209000000011, 0.01...</msg>
<status status="PASS" starttime="20201110 08:39:34.475" endtime="20201110 08:39:34.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.503" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:34.502" endtime="20201110 08:39:34.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.505" level="INFO">VALUE: 0.019401736</msg>
<status status="PASS" starttime="20201110 08:39:34.504" endtime="20201110 08:39:34.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.499" endtime="20201110 08:39:34.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.511" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:34.509" endtime="20201110 08:39:34.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.513" level="INFO">VALUE: [0.029510347, 0.039512514, 0.049513597, 0.059514806, 0.069515903, 0.079517097, 0.089518167, 0.099519389, 0.109520444, 0.119521653, 0.129522736, 0.139523972, 0.149525069, 0.159526236, 0.169527306, 0.179528514, 0.189529597, 0.199530875, 0.209531889, 0.219533083, 0.229534194, 0.239535375, 0.249536458, 0.259537667, 0.269538778, 0.279539972, 0.289541056, 0.29954225, 0.309543333, 0.319544528, 0.329545625, 0.339546833, 0.349547931, 0.359549111, 0.369550181, 0.379551389, 0.389552472, 0.399553681, 0.409554764, 0.419555986, 0.429557056, 0.439558278, 0.449559347, 0.459560542, 0.469561625, 0.479562833, 0.489563917, 0.499565139, 0.509566208, 0.519567417, 0.529568486, 0.539569722, 0.549570778, 0.559572014, 0.569573069, 0.579574278, 0.589575347, 0.599576556, 0.609577639, 0.619578847, 0.629579931, 0.639581139, 0.649582222, 0.659583444, 0.6695845, 0.679585708, 0.689586792, 0.699588, 0.709589083, 0.719590306, 0.729591389, 0.739592597, 0.749593694, 0.759594861, 0.769595944, 0.779597153, 0.789598236, 0.799599458, 0.809600528, 0.81960175, 0.829602806, 0.839604028, 0.849605111, 0.859606306, 0.869607403, 0.879608611, 0.889609694, 0.899610889, 0.909611986, 0.919613167, 0.92961425, 0.939615458, 0.949616556, 0.95961775, 0.969618833, 0.979620056, 0.989621167, 0.999622319, 1.009623417, 1.019624611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:34.512" endtime="20201110 08:39:34.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.506" endtime="20201110 08:39:34.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.516" endtime="20201110 08:39:34.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:34.520" endtime="20201110 08:39:34.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.518" endtime="20201110 08:39:34.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.514" endtime="20201110 08:39:34.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.979" endtime="20201110 08:39:34.541"></status>
</kw>
<msg timestamp="20201110 08:39:34.541" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.549" endtime="20201110 08:39:36.657"></status>
</kw>
<msg timestamp="20201110 08:39:36.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51937427, 'start-iter': 1, 'wakeups': [51947534, 51957535, 51967535, 5...</msg>
<status status="PASS" starttime="20201110 08:39:34.548" endtime="20201110 08:39:36.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51937427, 'start-iter': 1, 'wakeups': [51947534, 51957535, 51967535, 5...</msg>
<status status="PASS" starttime="20201110 08:39:36.661" endtime="20201110 08:39:36.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.667" endtime="20201110 08:39:36.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.545" endtime="20201110 08:39:36.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.543" endtime="20201110 08:39:36.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:36.678" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 51937427, 'start-iter': 1, 'timer-count': 7, 'wakeups': [51947534, 51957535, 51967535, 51977535, 51987535, 51997535, 52007535, 52017535, 52027535, 52037535, 520...</msg>
<status status="PASS" starttime="20201110 08:39:36.674" endtime="20201110 08:39:36.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.687" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:36.685" endtime="20201110 08:39:36.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.691" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:36.689" endtime="20201110 08:39:36.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.680" endtime="20201110 08:39:36.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.702" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:36.699" endtime="20201110 08:39:36.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.706" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:36.704" endtime="20201110 08:39:36.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.694" endtime="20201110 08:39:36.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.717" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:36.714" endtime="20201110 08:39:36.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.721" level="INFO">VALUE: 51937427</msg>
<status status="PASS" starttime="20201110 08:39:36.719" endtime="20201110 08:39:36.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.709" endtime="20201110 08:39:36.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.732" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:36.730" endtime="20201110 08:39:36.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.737" level="INFO">VALUE: [51947534, 51957535, 51967535, 51977535, 51987535, 51997535, 52007535, 52017535, 52027535, 52037535, 52047535, 52057535, 52067535, 52077535, 52087535, 52097535, 52107535, 52117535, 52127535, 52137535, 52147535, 52157535, 52167535, 52177535, 52187535, 52197535, 52207535, 52217535, 52227535, 52237535, 52247535, 52257535, 52267535, 52277535, 52287535, 52297535, 52307535, 52317535, 52327535, 52337535, 52347535, 52357535, 52367535, 52377535, 52387535, 52397535, 52407535, 52417535, 52427535, 52437535, 52447535, 52457535, 52467535, 52477535, 52487535, 52497535, 52507535, 52517535, 52527535, 52537535, 52547535, 52557535, 52567535, 52577535, 52587535, 52597535, 52607535, 52617535, 52627535, 52637535, 52647535, 52657535, 52667535, 52677535, 52687535, 52697535, 52707535, 52717535, 52727535, 52737535, 52747535, 52757535, 52767535, 52777535, 52787535, 52797535, 52807535, 52817535, 52827535, 52837535, 52847535, 52857535, 52867535, 52877535, 52887535, 52897535, 52907535, 52917535, 52927535, 52937535]</msg>
<status status="PASS" starttime="20201110 08:39:36.734" endtime="20201110 08:39:36.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.725" endtime="20201110 08:39:36.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.752" endtime="20201110 08:39:37.052"></status>
</kw>
<msg timestamp="20201110 08:39:37.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029571292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:36.749" endtime="20201110 08:39:37.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019462361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029571292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.056" endtime="20201110 08:39:37.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.064" endtime="20201110 08:39:37.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.743" endtime="20201110 08:39:37.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.740" endtime="20201110 08:39:37.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:37.091" level="INFO">${RESULT} = {'diff': [0, 0.010108930999999998, 0.010002235999999998, 0.010001014000000003, 0.010001222000000004, 0.010001082999999994, 0.010001180999999998, 0.010001111000000007, 0.010001207999999998, 0.010001055...</msg>
<status status="PASS" starttime="20201110 08:39:37.068" endtime="20201110 08:39:37.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.096" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:39:37.095" endtime="20201110 08:39:37.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.098" level="INFO">VALUE: 0.019462361</msg>
<status status="PASS" starttime="20201110 08:39:37.097" endtime="20201110 08:39:37.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.092" endtime="20201110 08:39:37.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.103" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:37.102" endtime="20201110 08:39:37.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.105" level="INFO">VALUE: [0.029571292, 0.039573528, 0.049574542, 0.059575764, 0.069576847, 0.079578028, 0.089579139, 0.099580347, 0.109581403, 0.119582625, 0.129583681, 0.139584917, 0.149585972, 0.159587181, 0.16958825, 0.179589458, 0.189590542, 0.199591736, 0.209592889, 0.219594028, 0.229595111, 0.239596306, 0.249597403, 0.259598597, 0.269599708, 0.279600889, 0.289601958, 0.299603167, 0.30960425, 0.319605444, 0.329606528, 0.339607736, 0.349608833, 0.359610042, 0.369611097, 0.379612306, 0.389613389, 0.399614611, 0.409615694, 0.419616875, 0.429617958, 0.439619181, 0.44962025, 0.459621444, 0.469622528, 0.479623736, 0.489624819, 0.499626028, 0.509627125, 0.519628306, 0.529629444, 0.539630597, 0.549631722, 0.559632889, 0.569633972, 0.579635194, 0.589636306, 0.599637458, 0.609638542, 0.619639736, 0.629640833, 0.639642042, 0.649643111, 0.659644306, 0.669645403, 0.679646625, 0.689647681, 0.699648931, 0.709649958, 0.719651167, 0.72965225, 0.739653472, 0.749654528, 0.75965575, 0.769656819, 0.779658028, 0.789659125, 0.799660347, 0.809661389, 0.819662597, 0.829663681, 0.839664889, 0.849665986, 0.859667167, 0.86966825, 0.879669472, 0.889670542, 0.89967175, 0.909672861, 0.919674069, 0.929675125, 0.939676333, 0.949677403, 0.959678611, 0.96967975, 0.979680889, 0.989681972, 0.999683181, 1.00968425, 1.019685514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:37.104" endtime="20201110 08:39:37.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.099" endtime="20201110 08:39:37.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.109" endtime="20201110 08:39:37.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:37.112" endtime="20201110 08:39:37.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.111" endtime="20201110 08:39:37.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.107" endtime="20201110 08:39:37.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.542" endtime="20201110 08:39:37.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.414" endtime="20201110 08:39:37.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.413" endtime="20201110 08:39:37.134"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:37.136" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.145" endtime="20201110 08:39:39.253"></status>
</kw>
<msg timestamp="20201110 08:39:39.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54532859, 'start-iter': 1, 'wakeups': [54542987, 54552986, 54562986, 5...</msg>
<status status="PASS" starttime="20201110 08:39:37.143" endtime="20201110 08:39:39.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.260" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54532859, 'start-iter': 1, 'wakeups': [54542987, 54552986, 54562986, 5...</msg>
<status status="PASS" starttime="20201110 08:39:39.257" endtime="20201110 08:39:39.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.262" endtime="20201110 08:39:39.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.140" endtime="20201110 08:39:39.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.138" endtime="20201110 08:39:39.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:39.274" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 54532859, 'start-iter': 1, 'timer-count': 8, 'wakeups': [54542987, 54552986, 54562986, 54572986, 54582986, 54592986, 54602986, 54612986, 54622986, 54632986, 546...</msg>
<status status="PASS" starttime="20201110 08:39:39.270" endtime="20201110 08:39:39.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.283" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:39.281" endtime="20201110 08:39:39.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.287" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:39.285" endtime="20201110 08:39:39.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.276" endtime="20201110 08:39:39.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.297" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:39.295" endtime="20201110 08:39:39.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.302" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:39.300" endtime="20201110 08:39:39.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.290" endtime="20201110 08:39:39.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.312" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:39.310" endtime="20201110 08:39:39.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.316" level="INFO">VALUE: 54532859</msg>
<status status="PASS" starttime="20201110 08:39:39.314" endtime="20201110 08:39:39.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.305" endtime="20201110 08:39:39.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.327" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:39.324" endtime="20201110 08:39:39.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.337" level="INFO">VALUE: [54542987, 54552986, 54562986, 54572986, 54582986, 54592986, 54602986, 54612986, 54622986, 54632986, 54642986, 54652986, 54662986, 54672986, 54682986, 54692986, 54702986, 54712986, 54722986, 54732986, 54742986, 54752986, 54762986, 54772986, 54782986, 54792986, 54802986, 54812986, 54822986, 54832986, 54842986, 54852986, 54862986, 54872986, 54882986, 54892986, 54902986, 54912986, 54922986, 54932986, 54942986, 54952986, 54962986, 54972986, 54982986, 54992986, 55002986, 55012986, 55022986, 55032986, 55042986, 55052986, 55062986, 55072986, 55082986, 55092986, 55102986, 55112986, 55122986, 55132986, 55142986, 55152986, 55162986, 55172986, 55182986, 55192986, 55202986, 55212986, 55222986, 55232986, 55242986, 55252986, 55262986, 55272986, 55282986, 55292986, 55302986, 55312986, 55322986, 55332986, 55342986, 55352986, 55362986, 55372986, 55382986, 55392986, 55402986, 55412986, 55422986, 55432986, 55442986, 55452986, 55462986, 55472986, 55482986, 55492986, 55502986, 55512986, 55522986, 55532986]</msg>
<status status="PASS" starttime="20201110 08:39:39.329" endtime="20201110 08:39:39.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.319" endtime="20201110 08:39:39.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.353" endtime="20201110 08:39:39.646"></status>
</kw>
<msg timestamp="20201110 08:39:39.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023184806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.350" endtime="20201110 08:39:39.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023184806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033314111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.650" endtime="20201110 08:39:39.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.657" endtime="20201110 08:39:39.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.344" endtime="20201110 08:39:39.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.340" endtime="20201110 08:39:39.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:39.686" level="INFO">${RESULT} = {'diff': [0, 0.010129305000000002, 0.010000097, 0.01000107, 0.010001208000000004, 0.01000107, 0.010001235999999997, 0.010001041000000002, 0.01000122299999999, 0.010001083000000008, 0.01000117999999999...</msg>
<status status="PASS" starttime="20201110 08:39:39.662" endtime="20201110 08:39:39.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.690" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:39.689" endtime="20201110 08:39:39.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.692" level="INFO">VALUE: 0.023184806</msg>
<status status="PASS" starttime="20201110 08:39:39.691" endtime="20201110 08:39:39.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.687" endtime="20201110 08:39:39.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.698" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:39.697" endtime="20201110 08:39:39.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.700" level="INFO">VALUE: [0.033314111, 0.043314208, 0.053315278, 0.063316486, 0.073317556, 0.083318792, 0.093319833, 0.103321056, 0.113322139, 0.123323319, 0.133324458, 0.143325611, 0.153326681, 0.163327903, 0.173328972, 0.183330167, 0.193331264, 0.203332486, 0.213333528, 0.223334778, 0.233335833, 0.243337028, 0.253338153, 0.263339333, 0.273340403, 0.283341625, 0.293342681, 0.303343875, 0.313344958, 0.323346167, 0.33334725, 0.343348444, 0.353349528, 0.363350736, 0.373351806, 0.383353042, 0.393354097, 0.403355319, 0.413356375, 0.423357597, 0.433358681, 0.443359917, 0.453360944, 0.463362153, 0.473363278, 0.483364431, 0.493365514, 0.503366722, 0.513367806, 0.523369, 0.533370097, 0.543371292, 0.553372389, 0.563373569, 0.573374653, 0.583375861, 0.593376944, 0.603378139, 0.613379264, 0.623380444, 0.633381528, 0.643382722, 0.653383792, 0.663385, 0.673386111, 0.683387278, 0.693388375, 0.703389569, 0.713390653, 0.723391875, 0.733392931, 0.743394139, 0.753395222, 0.763396417, 0.7733975, 0.783398708, 0.793399792, 0.803400986, 0.813402069, 0.823403278, 0.833404417, 0.843405583, 0.853406653, 0.863407875, 0.873408931, 0.883410125, 0.893411222, 0.903412431, 0.9134135, 0.923414694, 0.933415792, 0.943416986, 0.953418069, 0.963419264, 0.973420347, 0.983421583, 0.993422639, 1.003423847, 1.013424931, 1.023426194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:39.699" endtime="20201110 08:39:39.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.694" endtime="20201110 08:39:39.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.703" endtime="20201110 08:39:39.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:39.706" endtime="20201110 08:39:39.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.705" endtime="20201110 08:39:39.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.701" endtime="20201110 08:39:39.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.137" endtime="20201110 08:39:39.727"></status>
</kw>
<msg timestamp="20201110 08:39:39.728" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.736" endtime="20201110 08:39:41.844"></status>
</kw>
<msg timestamp="20201110 08:39:41.845" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57123551, 'start-iter': 1, 'wakeups': [57133679, 57143678, 57153678, 5...</msg>
<status status="PASS" starttime="20201110 08:39:39.734" endtime="20201110 08:39:41.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.851" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 57123551, 'start-iter': 1, 'wakeups': [57133679, 57143678, 57153678, 5...</msg>
<status status="PASS" starttime="20201110 08:39:41.847" endtime="20201110 08:39:41.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.853" endtime="20201110 08:39:41.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.732" endtime="20201110 08:39:41.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.730" endtime="20201110 08:39:41.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.866" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 57123551, 'start-iter': 1, 'timer-count': 8, 'wakeups': [57133679, 57143678, 57153678, 57163678, 57173678, 57183678, 57193678, 57203678, 57213678, 57223678, 572...</msg>
<status status="PASS" starttime="20201110 08:39:41.862" endtime="20201110 08:39:41.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.875" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:41.873" endtime="20201110 08:39:41.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:41.877" endtime="20201110 08:39:41.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.868" endtime="20201110 08:39:41.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.890" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:41.888" endtime="20201110 08:39:41.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.894" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:41.892" endtime="20201110 08:39:41.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.882" endtime="20201110 08:39:41.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.904" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:41.902" endtime="20201110 08:39:41.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.907" level="INFO">VALUE: 57123551</msg>
<status status="PASS" starttime="20201110 08:39:41.906" endtime="20201110 08:39:41.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.897" endtime="20201110 08:39:41.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.912" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:41.911" endtime="20201110 08:39:41.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.914" level="INFO">VALUE: [57133679, 57143678, 57153678, 57163678, 57173678, 57183678, 57193678, 57203678, 57213678, 57223678, 57233678, 57243678, 57253678, 57263678, 57273678, 57283678, 57293678, 57303678, 57313678, 57323678, 57333678, 57343678, 57353678, 57363678, 57373678, 57383678, 57393678, 57403678, 57413678, 57423678, 57433678, 57443678, 57453678, 57463678, 57473678, 57483678, 57493678, 57503678, 57513678, 57523678, 57533678, 57543678, 57553678, 57563678, 57573678, 57583678, 57593678, 57603678, 57613678, 57623678, 57633678, 57643678, 57653678, 57663678, 57673678, 57683678, 57693678, 57703678, 57713678, 57723678, 57733678, 57743678, 57753678, 57763678, 57773678, 57783678, 57793678, 57803678, 57813678, 57823678, 57833678, 57843678, 57853678, 57863678, 57873678, 57883678, 57893678, 57903678, 57913678, 57923678, 57933678, 57943678, 57953678, 57963678, 57973678, 57983678, 57993678, 58003678, 58013678, 58023678, 58033678, 58043678, 58053678, 58063678, 58073678, 58083678, 58093678, 58103678, 58113678, 58123678]</msg>
<status status="PASS" starttime="20201110 08:39:41.913" endtime="20201110 08:39:41.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.908" endtime="20201110 08:39:41.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.922" endtime="20201110 08:39:42.214"></status>
</kw>
<msg timestamp="20201110 08:39:42.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030036347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.920" endtime="20201110 08:39:42.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019907069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030036347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.218" endtime="20201110 08:39:42.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.225" endtime="20201110 08:39:42.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.918" endtime="20201110 08:39:42.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.915" endtime="20201110 08:39:42.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:42.252" level="INFO">${RESULT} = {'diff': [0, 0.010129278000000002, 0.010000110999999996, 0.01000107, 0.010001236000000004, 0.010001041999999995, 0.010001222000000004, 0.010001069000000001, 0.010001208999999997, 0.010001069000000001,...</msg>
<status status="PASS" starttime="20201110 08:39:42.229" endtime="20201110 08:39:42.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.257" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:42.256" endtime="20201110 08:39:42.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.259" level="INFO">VALUE: 0.019907069</msg>
<status status="PASS" starttime="20201110 08:39:42.258" endtime="20201110 08:39:42.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.253" endtime="20201110 08:39:42.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.264" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:42.263" endtime="20201110 08:39:42.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.266" level="INFO">VALUE: [0.030036347, 0.040036458, 0.050037528, 0.060038764, 0.070039806, 0.080041028, 0.090042097, 0.100043306, 0.110044375, 0.120045569, 0.130046667, 0.140047875, 0.150048931, 0.160050139, 0.170051236, 0.180052417, 0.1900535, 0.200054694, 0.210055778, 0.220056986, 0.230058111, 0.240059319, 0.250060333, 0.260061542, 0.270062625, 0.280063833, 0.290064903, 0.300066194, 0.310067194, 0.320068417, 0.330069472, 0.340070694, 0.350071764, 0.360072958, 0.370074028, 0.380075236, 0.390076319, 0.400077528, 0.410078625, 0.420079806, 0.430080875, 0.440082097, 0.450083167, 0.460084444, 0.470085458, 0.480086681, 0.490087722, 0.500088931, 0.510090028, 0.520091208, 0.530092292, 0.5400935, 0.550094569, 0.560095778, 0.570096861, 0.580098069, 0.590099139, 0.600100403, 0.610101431, 0.620102653, 0.630103708, 0.640104931, 0.650106042, 0.660107194, 0.670108264, 0.680109542, 0.690110569, 0.700111778, 0.710112847, 0.720114042, 0.730115153, 0.740116319, 0.750117403, 0.760118667, 0.770119681, 0.780120903, 0.790122014, 0.800123181, 0.810124278, 0.820125472, 0.830126542, 0.840127736, 0.850128847, 0.860130014, 0.870131125, 0.880132319, 0.890133375, 0.900134597, 0.910135667, 0.920136861, 0.930137944, 0.940139208, 0.950140222, 0.960141444, 0.970142514, 0.980143708, 0.990144806, 1.000146, 1.010147125, 1.020148278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:42.265" endtime="20201110 08:39:42.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.260" endtime="20201110 08:39:42.267"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.269" endtime="20201110 08:39:42.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:42.273" endtime="20201110 08:39:42.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.271" endtime="20201110 08:39:42.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.268" endtime="20201110 08:39:42.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.728" endtime="20201110 08:39:42.293"></status>
</kw>
<msg timestamp="20201110 08:39:42.294" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.302" endtime="20201110 08:39:44.409"></status>
</kw>
<msg timestamp="20201110 08:39:44.410" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59689491, 'start-iter': 1, 'wakeups': [59699619, 59709618, 59719618, 5...</msg>
<status status="PASS" starttime="20201110 08:39:42.300" endtime="20201110 08:39:44.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.423" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59689491, 'start-iter': 1, 'wakeups': [59699619, 59709618, 59719618, 5...</msg>
<status status="PASS" starttime="20201110 08:39:44.419" endtime="20201110 08:39:44.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.425" endtime="20201110 08:39:44.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.298" endtime="20201110 08:39:44.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.296" endtime="20201110 08:39:44.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.437" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 59689491, 'start-iter': 1, 'timer-count': 8, 'wakeups': [59699619, 59709618, 59719618, 59729618, 59739618, 59749618, 59759618, 59769618, 59779618, 59789618, 597...</msg>
<status status="PASS" starttime="20201110 08:39:44.432" endtime="20201110 08:39:44.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.447" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:44.443" endtime="20201110 08:39:44.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.452" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:44.450" endtime="20201110 08:39:44.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.438" endtime="20201110 08:39:44.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.462" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:44.460" endtime="20201110 08:39:44.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.466" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:44.464" endtime="20201110 08:39:44.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.455" endtime="20201110 08:39:44.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.475" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:44.474" endtime="20201110 08:39:44.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.477" level="INFO">VALUE: 59689491</msg>
<status status="PASS" starttime="20201110 08:39:44.476" endtime="20201110 08:39:44.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.469" endtime="20201110 08:39:44.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.481" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:44.480" endtime="20201110 08:39:44.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.484" level="INFO">VALUE: [59699619, 59709618, 59719618, 59729618, 59739618, 59749618, 59759618, 59769618, 59779618, 59789618, 59799618, 59809618, 59819618, 59829618, 59839618, 59849618, 59859618, 59869618, 59879618, 59889618, 59899618, 59909618, 59919618, 59929618, 59939618, 59949618, 59959618, 59969618, 59979618, 59989618, 59999618, 60009618, 60019618, 60029618, 60039618, 60049618, 60059618, 60069618, 60079618, 60089618, 60099618, 60109618, 60119618, 60129618, 60139618, 60149618, 60159618, 60169618, 60179618, 60189618, 60199618, 60209618, 60219618, 60229618, 60239618, 60249618, 60259618, 60269618, 60279618, 60289618, 60299618, 60309618, 60319618, 60329618, 60339618, 60349618, 60359618, 60369618, 60379618, 60389618, 60399618, 60409618, 60419618, 60429618, 60439618, 60449618, 60459618, 60469618, 60479618, 60489618, 60499618, 60509618, 60519618, 60529618, 60539618, 60549618, 60559618, 60569618, 60579618, 60589618, 60599618, 60609618, 60619618, 60629618, 60639618, 60649618, 60659618, 60669618, 60679618, 60689618]</msg>
<status status="PASS" starttime="20201110 08:39:44.483" endtime="20201110 08:39:44.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.478" endtime="20201110 08:39:44.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.491" endtime="20201110 08:39:44.783"></status>
</kw>
<msg timestamp="20201110 08:39:44.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029685625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.490" endtime="20201110 08:39:44.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019556347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029685625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.786" endtime="20201110 08:39:44.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.795" endtime="20201110 08:39:44.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.487" endtime="20201110 08:39:44.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.485" endtime="20201110 08:39:44.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.822" level="INFO">${RESULT} = {'diff': [0, 0.010129277999999999, 0.010000124999999999, 0.010001069000000001, 0.010001194999999997, 0.010001097, 0.010001207999999998, 0.010001056000000008, 0.010001207999999998, 0.010001083999999993...</msg>
<status status="PASS" starttime="20201110 08:39:44.798" endtime="20201110 08:39:44.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.827" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:39:44.826" endtime="20201110 08:39:44.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.829" level="INFO">VALUE: 0.019556347</msg>
<status status="PASS" starttime="20201110 08:39:44.828" endtime="20201110 08:39:44.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.823" endtime="20201110 08:39:44.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.834" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:44.833" endtime="20201110 08:39:44.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.837" level="INFO">VALUE: [0.029685625, 0.03968575, 0.049686819, 0.059688014, 0.069689111, 0.079690319, 0.089691375, 0.099692583, 0.109693667, 0.119694917, 0.129695931, 0.139697139, 0.149698208, 0.159699417, 0.169700486, 0.179701708, 0.189702764, 0.199703972, 0.209705042, 0.21970625, 0.229707347, 0.239708542, 0.249709611, 0.259710806, 0.269711903, 0.279713139, 0.289714167, 0.299715375, 0.309716444, 0.319717653, 0.329718778, 0.339719931, 0.349721028, 0.359722222, 0.369723292, 0.3797245, 0.389725569, 0.399726792, 0.409727847, 0.419729125, 0.429730139, 0.439731333, 0.449732417, 0.459733625, 0.469734694, 0.479735958, 0.489736972, 0.499738208, 0.50973925, 0.519740458, 0.529741542, 0.539742736, 0.549743819, 0.559745028, 0.569746097, 0.579747306, 0.589748375, 0.599749597, 0.609750653, 0.619751875, 0.629752944, 0.639754153, 0.649755222, 0.659756417, 0.6697575, 0.679758708, 0.689759778, 0.699761014, 0.709762056, 0.719763278, 0.729764361, 0.739765542, 0.749766625, 0.759767819, 0.769768903, 0.779770111, 0.789771181, 0.799772403, 0.809773472, 0.819774681, 0.829775764, 0.839776944, 0.849778028, 0.85977925, 0.869780319, 0.879781514, 0.889782583, 0.899783792, 0.909784875, 0.919786083, 0.929787153, 0.939788375, 0.949789431, 0.959790653, 0.969791722, 0.979792931, 0.989793986, 0.999795194, 1.009796292, 1.019797472] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:44.836" endtime="20201110 08:39:44.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.830" endtime="20201110 08:39:44.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.840" endtime="20201110 08:39:44.841"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:44.843" endtime="20201110 08:39:44.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.842" endtime="20201110 08:39:44.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.838" endtime="20201110 08:39:44.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.294" endtime="20201110 08:39:44.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.135" endtime="20201110 08:39:44.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.134" endtime="20201110 08:39:44.864"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:44.867" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.875" endtime="20201110 08:39:46.982"></status>
</kw>
<msg timestamp="20201110 08:39:46.983" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62262668, 'start-iter': 1, 'wakeups': [62272815, 62282815, 62292816, 6...</msg>
<status status="PASS" starttime="20201110 08:39:44.873" endtime="20201110 08:39:46.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.989" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 62262668, 'start-iter': 1, 'wakeups': [62272815, 62282815, 62292816, 6...</msg>
<status status="PASS" starttime="20201110 08:39:46.985" endtime="20201110 08:39:46.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.991" endtime="20201110 08:39:46.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.871" endtime="20201110 08:39:46.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.869" endtime="20201110 08:39:46.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.004" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 62262668, 'start-iter': 1, 'timer-count': 9, 'wakeups': [62272815, 62282815, 62292816, 62302816, 62312816, 62322816, 62332816, 62342816, 62352816, 62362816, 623...</msg>
<status status="PASS" starttime="20201110 08:39:46.999" endtime="20201110 08:39:47.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.012" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:47.010" endtime="20201110 08:39:47.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.017" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:47.015" endtime="20201110 08:39:47.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.005" endtime="20201110 08:39:47.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.027" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:47.025" endtime="20201110 08:39:47.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.031" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:47.029" endtime="20201110 08:39:47.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.020" endtime="20201110 08:39:47.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.039" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:47.038" endtime="20201110 08:39:47.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.041" level="INFO">VALUE: 62262668</msg>
<status status="PASS" starttime="20201110 08:39:47.040" endtime="20201110 08:39:47.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.034" endtime="20201110 08:39:47.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.047" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:47.046" endtime="20201110 08:39:47.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.049" level="INFO">VALUE: [62272815, 62282815, 62292816, 62302816, 62312816, 62322816, 62332816, 62342816, 62352816, 62362816, 62372816, 62382816, 62392816, 62402816, 62412816, 62422816, 62432816, 62442816, 62452816, 62462816, 62472816, 62482816, 62492816, 62502816, 62512816, 62522816, 62532816, 62542816, 62552816, 62562816, 62572816, 62582816, 62592816, 62602816, 62612816, 62622816, 62632816, 62642816, 62652816, 62662816, 62672816, 62682816, 62692816, 62702816, 62712816, 62722816, 62732816, 62742816, 62752816, 62762816, 62772816, 62782816, 62792816, 62802816, 62812816, 62822816, 62832816, 62842816, 62852816, 62862816, 62872816, 62882816, 62892816, 62902816, 62912816, 62922816, 62932816, 62942816, 62952816, 62962816, 62972816, 62982816, 62992816, 63002816, 63012816, 63022816, 63032816, 63042816, 63052816, 63062816, 63072816, 63082816, 63092816, 63102816, 63112816, 63122816, 63132816, 63142816, 63152816, 63162816, 63172816, 63182816, 63192816, 63202816, 63212816, 63222816, 63232816, 63242816, 63252816, 63262816]</msg>
<status status="PASS" starttime="20201110 08:39:47.048" endtime="20201110 08:39:47.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.043" endtime="20201110 08:39:47.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.056" endtime="20201110 08:39:47.348"></status>
</kw>
<msg timestamp="20201110 08:39:47.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032350097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.055" endtime="20201110 08:39:47.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022200736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032350097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.351" endtime="20201110 08:39:47.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.359" endtime="20201110 08:39:47.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.052" endtime="20201110 08:39:47.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.050" endtime="20201110 08:39:47.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.385" level="INFO">${RESULT} = {'diff': [0, 0.010149361000000003, 0.010000347, 0.010002348000000001, 0.010001207999999998, 0.010001041999999995, 0.010001208000000011, 0.010001082999999994, 0.010001208999999997, 0.010001069000000001...</msg>
<status status="PASS" starttime="20201110 08:39:47.362" endtime="20201110 08:39:47.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.390" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:47.389" endtime="20201110 08:39:47.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.392" level="INFO">VALUE: 0.022200736</msg>
<status status="PASS" starttime="20201110 08:39:47.391" endtime="20201110 08:39:47.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.387" endtime="20201110 08:39:47.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.399" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:47.398" endtime="20201110 08:39:47.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.401" level="INFO">VALUE: [0.032350097, 0.042350444, 0.052352792, 0.062354, 0.072355042, 0.08235625, 0.092357333, 0.102358542, 0.112359611, 0.122360819, 0.132361917, 0.142363125, 0.152364208, 0.162365458, 0.172366514, 0.182367722, 0.192368819, 0.202370056, 0.212371125, 0.222372333, 0.232373431, 0.242374681, 0.252375722, 0.262376958, 0.272378028, 0.28237925, 0.292380333, 0.302381542, 0.312382639, 0.322383931, 0.332384931, 0.342386167, 0.35238725, 0.362388458, 0.372389542, 0.382390764, 0.392391847, 0.402393056, 0.412394139, 0.422395389, 0.432396444, 0.442397653, 0.452398778, 0.462399972, 0.472401042, 0.482402278, 0.492403347, 0.502404597, 0.512405653, 0.522406875, 0.532407944, 0.542409181, 0.552410292, 0.562411458, 0.572412556, 0.582413778, 0.592414847, 0.602416069, 0.612417153, 0.622418361, 0.632419472, 0.642420667, 0.65242175, 0.662422986, 0.672424083, 0.682425264, 0.692426347, 0.702427569, 0.712428653, 0.722429861, 0.732430972, 0.742432167, 0.752433264, 0.762434472, 0.772435597, 0.782436764, 0.792437861, 0.802439069, 0.812440153, 0.822441375, 0.832442458, 0.842443681, 0.85244475, 0.862445986, 0.872447069, 0.882448278, 0.892449361, 0.902450569, 0.912451667, 0.922452875, 0.932453958, 0.942455181, 0.952456264, 0.962457472, 0.972458569, 0.982459778, 0.992460861, 1.002462083, 1.012463181, 1.022464375] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:47.400" endtime="20201110 08:39:47.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.395" endtime="20201110 08:39:47.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.404" endtime="20201110 08:39:47.405"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:47.407" endtime="20201110 08:39:47.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.406" endtime="20201110 08:39:47.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.402" endtime="20201110 08:39:47.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.868" endtime="20201110 08:39:47.428"></status>
</kw>
<msg timestamp="20201110 08:39:47.428" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.436" endtime="20201110 08:39:49.544"></status>
</kw>
<msg timestamp="20201110 08:39:49.545" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64823720, 'start-iter': 1, 'wakeups': [64833867, 64843867, 64853868, 6...</msg>
<status status="PASS" starttime="20201110 08:39:47.435" endtime="20201110 08:39:49.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.551" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64823720, 'start-iter': 1, 'wakeups': [64833867, 64843867, 64853868, 6...</msg>
<status status="PASS" starttime="20201110 08:39:49.548" endtime="20201110 08:39:49.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.554" endtime="20201110 08:39:49.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.432" endtime="20201110 08:39:49.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.430" endtime="20201110 08:39:49.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.565" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 64823720, 'start-iter': 1, 'timer-count': 9, 'wakeups': [64833867, 64843867, 64853868, 64863868, 64873868, 64883868, 64893868, 64903868, 64913868, 64923868, 649...</msg>
<status status="PASS" starttime="20201110 08:39:49.561" endtime="20201110 08:39:49.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.573" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:49.571" endtime="20201110 08:39:49.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.578" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:49.576" endtime="20201110 08:39:49.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.567" endtime="20201110 08:39:49.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.593" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:49.591" endtime="20201110 08:39:49.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.598" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:49.596" endtime="20201110 08:39:49.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.586" endtime="20201110 08:39:49.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.608" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:49.606" endtime="20201110 08:39:49.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.613" level="INFO">VALUE: 64823720</msg>
<status status="PASS" starttime="20201110 08:39:49.611" endtime="20201110 08:39:49.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.601" endtime="20201110 08:39:49.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.625" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:49.621" endtime="20201110 08:39:49.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.630" level="INFO">VALUE: [64833867, 64843867, 64853868, 64863868, 64873868, 64883868, 64893868, 64903868, 64913868, 64923868, 64933868, 64943868, 64953868, 64963868, 64973868, 64983868, 64993868, 65003868, 65013868, 65023868, 65033868, 65043868, 65053868, 65063868, 65073868, 65083868, 65093868, 65103868, 65113868, 65123868, 65133868, 65143868, 65153868, 65163868, 65173868, 65183868, 65193868, 65203868, 65213868, 65223868, 65233868, 65243868, 65253868, 65263868, 65273868, 65283868, 65293868, 65303868, 65313868, 65323868, 65333868, 65343868, 65353868, 65363868, 65373868, 65383868, 65393868, 65403868, 65413868, 65423868, 65433868, 65443868, 65453868, 65463868, 65473868, 65483868, 65493868, 65503868, 65513868, 65523868, 65533868, 65543868, 65553868, 65563868, 65573868, 65583868, 65593868, 65603868, 65613868, 65623868, 65633868, 65643868, 65653868, 65663868, 65673868, 65683868, 65693868, 65703868, 65713868, 65723868, 65733868, 65743868, 65753868, 65763868, 65773868, 65783868, 65793868, 65803868, 65813868, 65823868]</msg>
<status status="PASS" starttime="20201110 08:39:49.627" endtime="20201110 08:39:49.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.616" endtime="20201110 08:39:49.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.645" endtime="20201110 08:39:49.940"></status>
</kw>
<msg timestamp="20201110 08:39:49.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029432583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.642" endtime="20201110 08:39:49.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019283194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029432583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.944" endtime="20201110 08:39:49.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.951" endtime="20201110 08:39:49.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.636" endtime="20201110 08:39:49.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.633" endtime="20201110 08:39:49.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.977" level="INFO">${RESULT} = {'diff': [0, 0.010149388999999998, 0.010000348, 0.010002333000000002, 0.010001207999999998, 0.010001084, 0.010001262999999996, 0.010001028000000009, 0.010001208999999997, 0.010001097, 0.01000122200000...</msg>
<status status="PASS" starttime="20201110 08:39:49.955" endtime="20201110 08:39:49.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.982" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:49.981" endtime="20201110 08:39:49.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.984" level="INFO">VALUE: 0.019283194</msg>
<status status="PASS" starttime="20201110 08:39:49.983" endtime="20201110 08:39:49.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.978" endtime="20201110 08:39:49.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.990" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:49.988" endtime="20201110 08:39:49.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.992" level="INFO">VALUE: [0.029432583, 0.039432931, 0.049435264, 0.059436472, 0.069437556, 0.079438819, 0.089439847, 0.099441056, 0.109442153, 0.119443375, 0.129444444, 0.139445667, 0.149446736, 0.159447958, 0.169449028, 0.179450264, 0.189451375, 0.199452569, 0.209453625, 0.219454847, 0.229455931, 0.239457153, 0.249458222, 0.259459444, 0.269460528, 0.279461736, 0.289462819, 0.299464028, 0.309465139, 0.319466347, 0.329467444, 0.339468625, 0.349469736, 0.359470931, 0.369472014, 0.379473222, 0.389474347, 0.399475528, 0.409476611, 0.419477833, 0.429478917, 0.439480125, 0.449481222, 0.459482444, 0.469483514, 0.479484722, 0.489485806, 0.499487028, 0.509488097, 0.519489319, 0.529490403, 0.539491625, 0.549492694, 0.559493931, 0.569495028, 0.57949625, 0.589497319, 0.599498514, 0.609499597, 0.619500819, 0.629501889, 0.639503125, 0.649504194, 0.659505403, 0.6695065, 0.679507708, 0.689508792, 0.699510014, 0.709511083, 0.719512306, 0.729513389, 0.739514611, 0.749515681, 0.759516903, 0.769518, 0.779519194, 0.789520292, 0.799521514, 0.809522583, 0.819523847, 0.829524875, 0.839526097, 0.849527181, 0.859528389, 0.869529472, 0.879530694, 0.889531778, 0.899532986, 0.909534083, 0.919535292, 0.929536389, 0.939537625, 0.949538694, 0.959539889, 0.969540986, 0.979542181, 0.989543264, 0.999544486, 1.009545569, 1.019546833] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:49.991" endtime="20201110 08:39:49.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.985" endtime="20201110 08:39:49.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.995" endtime="20201110 08:39:49.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:50.000" endtime="20201110 08:39:50.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.997" endtime="20201110 08:39:50.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.993" endtime="20201110 08:39:50.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.429" endtime="20201110 08:39:50.021"></status>
</kw>
<msg timestamp="20201110 08:39:50.021" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.029" endtime="20201110 08:39:52.137"></status>
</kw>
<msg timestamp="20201110 08:39:52.139" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67416778, 'start-iter': 1, 'wakeups': [67426925, 67436925, 67446926, 6...</msg>
<status status="PASS" starttime="20201110 08:39:50.028" endtime="20201110 08:39:52.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67416778, 'start-iter': 1, 'wakeups': [67426925, 67436925, 67446926, 6...</msg>
<status status="PASS" starttime="20201110 08:39:52.141" endtime="20201110 08:39:52.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.147" endtime="20201110 08:39:52.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.025" endtime="20201110 08:39:52.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.023" endtime="20201110 08:39:52.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.161" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 67416778, 'start-iter': 1, 'timer-count': 9, 'wakeups': [67426925, 67436925, 67446926, 67456926, 67466926, 67476926, 67486926, 67496926, 67506926, 67516926, 675...</msg>
<status status="PASS" starttime="20201110 08:39:52.155" endtime="20201110 08:39:52.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.171" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:52.169" endtime="20201110 08:39:52.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.175" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:52.173" endtime="20201110 08:39:52.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.164" endtime="20201110 08:39:52.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.185" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:52.183" endtime="20201110 08:39:52.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.190" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:52.188" endtime="20201110 08:39:52.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.178" endtime="20201110 08:39:52.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.201" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.198" endtime="20201110 08:39:52.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.205" level="INFO">VALUE: 67416778</msg>
<status status="PASS" starttime="20201110 08:39:52.203" endtime="20201110 08:39:52.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.193" endtime="20201110 08:39:52.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.216" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.214" endtime="20201110 08:39:52.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.220" level="INFO">VALUE: [67426925, 67436925, 67446926, 67456926, 67466926, 67476926, 67486926, 67496926, 67506926, 67516926, 67526926, 67536926, 67546926, 67556926, 67566926, 67576926, 67586926, 67596926, 67606926, 67616926, 67626926, 67636926, 67646926, 67656926, 67666926, 67676926, 67686926, 67696926, 67706926, 67716926, 67726926, 67736926, 67746926, 67756926, 67766926, 67776926, 67786926, 67796926, 67806926, 67816926, 67826926, 67836926, 67846926, 67856926, 67866926, 67876926, 67886926, 67896926, 67906926, 67916926, 67926926, 67936926, 67946926, 67956926, 67966926, 67976926, 67986926, 67996926, 68006926, 68016926, 68026926, 68036926, 68046926, 68056926, 68066926, 68076926, 68086926, 68096926, 68106926, 68116926, 68126926, 68136926, 68146926, 68156926, 68166926, 68176926, 68186926, 68196926, 68206926, 68216926, 68226926, 68236926, 68246926, 68256926, 68266926, 68276926, 68286926, 68296926, 68306926, 68316926, 68326926, 68336926, 68346926, 68356926, 68366926, 68376926, 68386926, 68396926, 68406926, 68416926]</msg>
<status status="PASS" starttime="20201110 08:39:52.218" endtime="20201110 08:39:52.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.208" endtime="20201110 08:39:52.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.236" endtime="20201110 08:39:52.527"></status>
</kw>
<msg timestamp="20201110 08:39:52.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019411514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029560944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:52.233" endtime="20201110 08:39:52.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019411514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029560944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:52.531" endtime="20201110 08:39:52.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.539" endtime="20201110 08:39:52.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.227" endtime="20201110 08:39:52.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.224" endtime="20201110 08:39:52.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.565" level="INFO">${RESULT} = {'diff': [0, 0.010149429999999997, 0.010000306, 0.010002319000000003, 0.010001236999999996, 0.010001083000000008, 0.010001193999999991, 0.010001152999999999, 0.010001139000000006, 0.010001082999999994...</msg>
<status status="PASS" starttime="20201110 08:39:52.542" endtime="20201110 08:39:52.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.570" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.569" endtime="20201110 08:39:52.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.572" level="INFO">VALUE: 0.019411514</msg>
<status status="PASS" starttime="20201110 08:39:52.571" endtime="20201110 08:39:52.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.566" endtime="20201110 08:39:52.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.577" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.576" endtime="20201110 08:39:52.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.579" level="INFO">VALUE: [0.029560944, 0.03956125, 0.049563569, 0.059564806, 0.069565889, 0.079567083, 0.089568236, 0.099569375, 0.109570458, 0.119571681, 0.12957275, 0.139573972, 0.149575042, 0.159576292, 0.169577347, 0.179578556, 0.189579639, 0.199580847, 0.209581931, 0.219583139, 0.229584292, 0.239585444, 0.249586556, 0.259587736, 0.269588833, 0.279590028, 0.289591111, 0.299592333, 0.309593417, 0.319594639, 0.329595708, 0.339596917, 0.349598056, 0.359599222, 0.369600306, 0.379601597, 0.389602597, 0.399603819, 0.409604903, 0.419606139, 0.429607208, 0.439608417, 0.449609486, 0.459610722, 0.469611792, 0.479613014, 0.489614097, 0.499615292, 0.509616389, 0.519617597, 0.529618681, 0.539619889, 0.549620972, 0.559622181, 0.569623278, 0.5796245, 0.589625569, 0.599626778, 0.609627861, 0.619629139, 0.629630181, 0.639631375, 0.649632458, 0.659633681, 0.66963475, 0.679636028, 0.689637056, 0.699638278, 0.709639431, 0.719640569, 0.729641694, 0.739642875, 0.749643944, 0.759645153, 0.769646236, 0.779647458, 0.789648556, 0.79964975, 0.809650847, 0.819652056, 0.829653125, 0.839654347, 0.849655431, 0.859656681, 0.869657722, 0.879658944, 0.889660028, 0.899661306, 0.909662319, 0.919663528, 0.929664625, 0.939665847, 0.949666931, 0.959668125, 0.969669208, 0.979670417, 0.989671514, 0.999672722, 1.009673806, 1.019675014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:52.578" endtime="20201110 08:39:52.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.573" endtime="20201110 08:39:52.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.583" endtime="20201110 08:39:52.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:52.586" endtime="20201110 08:39:52.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.585" endtime="20201110 08:39:52.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.581" endtime="20201110 08:39:52.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.022" endtime="20201110 08:39:52.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.866" endtime="20201110 08:39:52.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.865" endtime="20201110 08:39:52.607"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:52.610" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.619" endtime="20201110 08:39:54.727"></status>
</kw>
<msg timestamp="20201110 08:39:54.728" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70006451, 'start-iter': 1, 'wakeups': [70016620, 70026622, 70036622,...</msg>
<status status="PASS" starttime="20201110 08:39:52.617" endtime="20201110 08:39:54.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.734" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 70006451, 'start-iter': 1, 'wakeups': [70016620, 70026622, 70036622,...</msg>
<status status="PASS" starttime="20201110 08:39:54.730" endtime="20201110 08:39:54.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:54.736" endtime="20201110 08:39:54.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.614" endtime="20201110 08:39:54.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.612" endtime="20201110 08:39:54.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:54.747" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 70006451, 'start-iter': 1, 'timer-count': 10, 'wakeups': [70016620, 70026622, 70036622, 70046622, 70056622, 70066622, 70076622, 70086622, 70096622, 70106622, 70...</msg>
<status status="PASS" starttime="20201110 08:39:54.743" endtime="20201110 08:39:54.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.756" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:54.754" endtime="20201110 08:39:54.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.760" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:54.758" endtime="20201110 08:39:54.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.749" endtime="20201110 08:39:54.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.771" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:54.769" endtime="20201110 08:39:54.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.775" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:54.773" endtime="20201110 08:39:54.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.763" endtime="20201110 08:39:54.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.784" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:54.783" endtime="20201110 08:39:54.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.786" level="INFO">VALUE: 70006451</msg>
<status status="PASS" starttime="20201110 08:39:54.785" endtime="20201110 08:39:54.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.778" endtime="20201110 08:39:54.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.791" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:54.790" endtime="20201110 08:39:54.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.794" level="INFO">VALUE: [70016620, 70026622, 70036622, 70046622, 70056622, 70066622, 70076622, 70086622, 70096622, 70106622, 70116622, 70126622, 70136622, 70146622, 70156622, 70166622, 70176622, 70186622, 70196622, 70206622, 70216622, 70226622, 70236622, 70246622, 70256622, 70266622, 70276622, 70286622, 70296622, 70306622, 70316622, 70326622, 70336622, 70346622, 70356622, 70366622, 70376622, 70386622, 70396622, 70406622, 70416622, 70426622, 70436622, 70446622, 70456622, 70466622, 70476622, 70486622, 70496622, 70506622, 70516622, 70526622, 70536622, 70546622, 70556622, 70566622, 70576622, 70586622, 70596622, 70606622, 70616622, 70626622, 70636622, 70646622, 70656622, 70666622, 70676622, 70686622, 70696622, 70706622, 70716622, 70726622, 70736622, 70746622, 70756622, 70766622, 70776622, 70786622, 70796622, 70806622, 70816622, 70826622, 70836622, 70846622, 70856622, 70866622, 70876622, 70886622, 70896622, 70906622, 70916622, 70926622, 70936622, 70946622, 70956622, 70966622, 70976622, 70986622, 70996622, 71006622]</msg>
<status status="PASS" starttime="20201110 08:39:54.792" endtime="20201110 08:39:54.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.788" endtime="20201110 08:39:54.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:54.802" endtime="20201110 08:39:55.094"></status>
</kw>
<msg timestamp="20201110 08:39:55.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033375389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:54.800" endtime="20201110 08:39:55.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023204375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033375389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:55.098" endtime="20201110 08:39:55.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.105" endtime="20201110 08:39:55.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.798" endtime="20201110 08:39:55.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.796" endtime="20201110 08:39:55.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:55.132" level="INFO">${RESULT} = {'diff': [0, 0.010171013999999999, 0.010002583000000002, 0.010001084, 0.010001221999999997, 0.010001097, 0.010001194000000005, 0.01000107, 0.010001207999999998, 0.010001083999999993, 0.010001236000000...</msg>
<status status="PASS" starttime="20201110 08:39:55.110" endtime="20201110 08:39:55.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.137" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:55.136" endtime="20201110 08:39:55.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.139" level="INFO">VALUE: 0.023204375</msg>
<status status="PASS" starttime="20201110 08:39:55.138" endtime="20201110 08:39:55.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.133" endtime="20201110 08:39:55.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.144" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:55.143" endtime="20201110 08:39:55.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.146" level="INFO">VALUE: [0.033375389, 0.043377972, 0.053379056, 0.063380278, 0.073381375, 0.083382569, 0.093383639, 0.103384847, 0.113385931, 0.123387167, 0.133388236, 0.143389472, 0.153390514, 0.163391736, 0.173392806, 0.183394042, 0.193395111, 0.203396319, 0.213397403, 0.223398639, 0.233399694, 0.243400903, 0.253402, 0.263403222, 0.273404292, 0.2834055, 0.293406583, 0.303407833, 0.313408875, 0.323410097, 0.333411167, 0.343412375, 0.353413472, 0.363414667, 0.37341575, 0.383416958, 0.393418111, 0.403419292, 0.413420361, 0.423421569, 0.433422639, 0.443423861, 0.453424931, 0.463426139, 0.473427292, 0.483428458, 0.493429569, 0.503430736, 0.513431847, 0.523433028, 0.533434111, 0.543435319, 0.553436403, 0.563437611, 0.573438694, 0.583439917, 0.593441014, 0.603442208, 0.613443306, 0.6234445, 0.633445597, 0.643446819, 0.653447875, 0.663449097, 0.673450167, 0.683451389, 0.693452472, 0.703453694, 0.713454778, 0.723455986, 0.733457056, 0.743458264, 0.753459347, 0.763460556, 0.773461653, 0.783462875, 0.793463958, 0.803465181, 0.813466236, 0.823467444, 0.833468542, 0.843469736, 0.853470833, 0.863472042, 0.873473125, 0.883474347, 0.893475444, 0.903476625, 0.913477722, 0.923478917, 0.93348, 0.943481222, 0.953482306, 0.963483514, 0.973484597, 0.983485806, 0.993486903, 1.003488097, 1.013489181, 1.023490403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:55.145" endtime="20201110 08:39:55.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.140" endtime="20201110 08:39:55.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.149" endtime="20201110 08:39:55.150"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:55.153" endtime="20201110 08:39:55.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.151" endtime="20201110 08:39:55.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.148" endtime="20201110 08:39:55.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.611" endtime="20201110 08:39:55.174"></status>
</kw>
<msg timestamp="20201110 08:39:55.174" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.182" endtime="20201110 08:39:57.292"></status>
</kw>
<msg timestamp="20201110 08:39:57.293" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72571507, 'start-iter': 1, 'wakeups': [72581676, 72591678, 72601678,...</msg>
<status status="PASS" starttime="20201110 08:39:55.181" endtime="20201110 08:39:57.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72571507, 'start-iter': 1, 'wakeups': [72581676, 72591678, 72601678,...</msg>
<status status="PASS" starttime="20201110 08:39:57.295" endtime="20201110 08:39:57.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.301" endtime="20201110 08:39:57.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.178" endtime="20201110 08:39:57.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.176" endtime="20201110 08:39:57.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.313" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 72571507, 'start-iter': 1, 'timer-count': 10, 'wakeups': [72581676, 72591678, 72601678, 72611678, 72621678, 72631678, 72641678, 72651678, 72661678, 72671678, 72...</msg>
<status status="PASS" starttime="20201110 08:39:57.308" endtime="20201110 08:39:57.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.321" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:57.319" endtime="20201110 08:39:57.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.326" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:57.324" endtime="20201110 08:39:57.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.314" endtime="20201110 08:39:57.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.336" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:57.334" endtime="20201110 08:39:57.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.340" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:57.338" endtime="20201110 08:39:57.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.329" endtime="20201110 08:39:57.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.348" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.347" endtime="20201110 08:39:57.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.350" level="INFO">VALUE: 72571507</msg>
<status status="PASS" starttime="20201110 08:39:57.349" endtime="20201110 08:39:57.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.343" endtime="20201110 08:39:57.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.354" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.353" endtime="20201110 08:39:57.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.357" level="INFO">VALUE: [72581676, 72591678, 72601678, 72611678, 72621678, 72631678, 72641678, 72651678, 72661678, 72671678, 72681678, 72691678, 72701678, 72711678, 72721678, 72731678, 72741678, 72751678, 72761678, 72771678, 72781678, 72791678, 72801678, 72811678, 72821678, 72831678, 72841678, 72851678, 72861678, 72871678, 72881678, 72891678, 72901678, 72911678, 72921678, 72931678, 72941678, 72951678, 72961678, 72971678, 72981678, 72991678, 73001678, 73011678, 73021678, 73031678, 73041678, 73051678, 73061678, 73071678, 73081678, 73091678, 73101678, 73111678, 73121678, 73131678, 73141678, 73151678, 73161678, 73171678, 73181678, 73191678, 73201678, 73211678, 73221678, 73231678, 73241678, 73251678, 73261678, 73271678, 73281678, 73291678, 73301678, 73311678, 73321678, 73331678, 73341678, 73351678, 73361678, 73371678, 73381678, 73391678, 73401678, 73411678, 73421678, 73431678, 73441678, 73451678, 73461678, 73471678, 73481678, 73491678, 73501678, 73511678, 73521678, 73531678, 73541678, 73551678, 73561678, 73571678]</msg>
<status status="PASS" starttime="20201110 08:39:57.356" endtime="20201110 08:39:57.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.351" endtime="20201110 08:39:57.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.365" endtime="20201110 08:39:57.655"></status>
</kw>
<msg timestamp="20201110 08:39:57.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032111458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.363" endtime="20201110 08:39:57.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032111458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.659" endtime="20201110 08:39:57.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.667" endtime="20201110 08:39:57.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.360" endtime="20201110 08:39:57.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.358" endtime="20201110 08:39:57.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.693" level="INFO">${RESULT} = {'diff': [0, 0.010170805000000002, 0.010002791999999996, 0.010001083000000001, 0.010001223000000004, 0.010001069000000001, 0.010001207999999998, 0.010001083999999993, 0.010001207999999998, 0.010001083...</msg>
<status status="PASS" starttime="20201110 08:39:57.670" endtime="20201110 08:39:57.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.698" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.697" endtime="20201110 08:39:57.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.700" level="INFO">VALUE: 0.021940653</msg>
<status status="PASS" starttime="20201110 08:39:57.699" endtime="20201110 08:39:57.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.694" endtime="20201110 08:39:57.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.705" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.704" endtime="20201110 08:39:57.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.708" level="INFO">VALUE: [0.032111458, 0.04211425, 0.052115333, 0.062116556, 0.072117625, 0.082118833, 0.092119917, 0.102121125, 0.112122208, 0.122123472, 0.1321245, 0.142125722, 0.152126833, 0.162128, 0.172129083, 0.182130292, 0.192131389, 0.202132597, 0.212133667, 0.222134889, 0.232135972, 0.242137167, 0.252138333, 0.262139458, 0.272140556, 0.28214175, 0.292142847, 0.302144042, 0.312145125, 0.322146361, 0.332147417, 0.342148625, 0.352149708, 0.362150917, 0.372152028, 0.382153222, 0.392154292, 0.402155556, 0.412156597, 0.422157806, 0.432158875, 0.442160083, 0.452161167, 0.462162403, 0.472163472, 0.482164694, 0.492165778, 0.502167028, 0.512168056, 0.522169278, 0.532170361, 0.542171556, 0.552172639, 0.562173861, 0.572174986, 0.582176153, 0.592177222, 0.602178444, 0.612179514, 0.622180722, 0.632181806, 0.642183028, 0.652184125, 0.662185389, 0.672186403, 0.682187625, 0.692188681, 0.702189917, 0.712191042, 0.722192208, 0.732193278, 0.742194486, 0.752195639, 0.762196792, 0.772197861, 0.782199069, 0.792200153, 0.802201361, 0.812202444, 0.822203653, 0.832204736, 0.842205944, 0.852207042, 0.862208236, 0.872209319, 0.882210583, 0.892211611, 0.902212847, 0.912213903, 0.922215139, 0.932216236, 0.942217417, 0.9522185, 0.962219708, 0.972220792, 0.982222, 0.992223083, 1.002224292, 1.012225389, 1.022226583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:57.707" endtime="20201110 08:39:57.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.701" endtime="20201110 08:39:57.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.711" endtime="20201110 08:39:57.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:57.714" endtime="20201110 08:39:57.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.713" endtime="20201110 08:39:57.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.709" endtime="20201110 08:39:57.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.175" endtime="20201110 08:39:57.735"></status>
</kw>
<msg timestamp="20201110 08:39:57.735" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.743" endtime="20201110 08:39:59.850"></status>
</kw>
<msg timestamp="20201110 08:39:59.852" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75130566, 'start-iter': 1, 'wakeups': [75140734, 75150737, 75160737,...</msg>
<status status="PASS" starttime="20201110 08:39:57.742" endtime="20201110 08:39:59.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.862" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75130566, 'start-iter': 1, 'wakeups': [75140734, 75150737, 75160737,...</msg>
<status status="PASS" starttime="20201110 08:39:59.858" endtime="20201110 08:39:59.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:59.865" endtime="20201110 08:39:59.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.739" endtime="20201110 08:39:59.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.737" endtime="20201110 08:39:59.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:59.876" level="INFO">${RESULT} = {'timer-interval': 10000, 'start-time': 75130566, 'start-iter': 1, 'timer-count': 10, 'wakeups': [75140734, 75150737, 75160737, 75170737, 75180737, 75190737, 75200737, 75210737, 75220737, 75230737, 75...</msg>
<status status="PASS" starttime="20201110 08:39:59.872" endtime="20201110 08:39:59.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.887" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:59.883" endtime="20201110 08:39:59.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.891" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:59.889" endtime="20201110 08:39:59.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.878" endtime="20201110 08:39:59.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.901" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:59.899" endtime="20201110 08:39:59.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.905" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:59.904" endtime="20201110 08:39:59.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.894" endtime="20201110 08:39:59.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.910" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:39:59.909" endtime="20201110 08:39:59.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.912" level="INFO">VALUE: 75130566</msg>
<status status="PASS" starttime="20201110 08:39:59.911" endtime="20201110 08:39:59.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.907" endtime="20201110 08:39:59.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.918" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:59.916" endtime="20201110 08:39:59.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:59.920" level="INFO">VALUE: [75140734, 75150737, 75160737, 75170737, 75180737, 75190737, 75200737, 75210737, 75220737, 75230737, 75240737, 75250737, 75260737, 75270737, 75280737, 75290737, 75300737, 75310737, 75320737, 75330737, 75340737, 75350737, 75360737, 75370737, 75380737, 75390737, 75400737, 75410737, 75420737, 75430737, 75440737, 75450737, 75460737, 75470737, 75480737, 75490737, 75500737, 75510737, 75520737, 75530737, 75540737, 75550737, 75560737, 75570737, 75580737, 75590737, 75600737, 75610737, 75620737, 75630737, 75640737, 75650737, 75660737, 75670737, 75680737, 75690737, 75700737, 75710737, 75720737, 75730737, 75740737, 75750737, 75760737, 75770737, 75780737, 75790737, 75800737, 75810737, 75820737, 75830737, 75840737, 75850737, 75860737, 75870737, 75880737, 75890737, 75900737, 75910737, 75920737, 75930737, 75940737, 75950737, 75960737, 75970737, 75980737, 75990737, 76000737, 76010737, 76020737, 76030737, 76040737, 76050737, 76060737, 76070737, 76080737, 76090737, 76100737, 76110737, 76120737, 76130737]</msg>
<status status="PASS" starttime="20201110 08:39:59.919" endtime="20201110 08:39:59.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.914" endtime="20201110 08:39:59.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:59.927" endtime="20201110 08:40:00.217"></status>
</kw>
<msg timestamp="20201110 08:40:00.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029518208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:59.926" endtime="20201110 08:40:00.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019348278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029518208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.221" endtime="20201110 08:40:00.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.229" endtime="20201110 08:40:00.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.923" endtime="20201110 08:40:00.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:59.921" endtime="20201110 08:40:00.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.256" level="INFO">${RESULT} = {'diff': [0, 0.01016993, 0.010004000000000002, 0.010001069999999994, 0.010001222000000004, 0.010001056000000001, 0.010001207999999998, 0.010001082999999994, 0.010001222000000004, 0.01000107, 0.0100012...</msg>
<status status="PASS" starttime="20201110 08:40:00.233" endtime="20201110 08:40:00.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.261" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.260" endtime="20201110 08:40:00.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.263" level="INFO">VALUE: 0.019348278</msg>
<status status="PASS" starttime="20201110 08:40:00.262" endtime="20201110 08:40:00.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.257" endtime="20201110 08:40:00.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.268" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.267" endtime="20201110 08:40:00.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.270" level="INFO">VALUE: [0.029518208, 0.039522208, 0.049523278, 0.0595245, 0.069525556, 0.079526764, 0.089527847, 0.099529069, 0.109530139, 0.119531361, 0.129532417, 0.139533625, 0.149534708, 0.159535917, 0.169537014, 0.179538208, 0.189539306, 0.1995405, 0.209541583, 0.219542792, 0.229543875, 0.239545097, 0.249546181, 0.259547389, 0.2695485, 0.279549667, 0.289550736, 0.299551986, 0.309553028, 0.319554264, 0.329555333, 0.339556556, 0.349557625, 0.359558833, 0.369559903, 0.379561181, 0.389562208, 0.399563417, 0.4095645, 0.419565694, 0.429566778, 0.439568028, 0.449569069, 0.459570333, 0.469571375, 0.479572583, 0.489573653, 0.499574875, 0.509575944, 0.519577153, 0.529578264, 0.539579431, 0.549580514, 0.559581722, 0.569582819, 0.579584028, 0.589585111, 0.599586319, 0.609587389, 0.619588611, 0.629589694, 0.639590903, 0.649591986, 0.659593181, 0.669594264, 0.679595486, 0.689596611, 0.699597764, 0.709598861, 0.719600056, 0.729601167, 0.739602375, 0.749603431, 0.759604639, 0.769605736, 0.779606931, 0.789608056, 0.799609222, 0.809610292, 0.819611514, 0.829612597, 0.839613806, 0.849614889, 0.859616083, 0.869617181, 0.879618417, 0.889619472, 0.899620694, 0.909621764, 0.919622972, 0.929624056, 0.939625264, 0.949626333, 0.959627542, 0.969628625, 0.979629875, 0.989630917, 0.999632125, 1.009633208, 1.019634417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:00.269" endtime="20201110 08:40:00.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.264" endtime="20201110 08:40:00.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.274" endtime="20201110 08:40:00.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:00.277" endtime="20201110 08:40:00.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.275" endtime="20201110 08:40:00.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.272" endtime="20201110 08:40:00.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.736" endtime="20201110 08:40:00.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.608" endtime="20201110 08:40:00.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.608" endtime="20201110 08:40:00.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.024" endtime="20201110 08:40:00.298"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:42.954" endtime="20201110 08:40:00.299" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:38:41.424" endtime="20201110 08:40:00.302"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:36:55.907" endtime="20201110 08:40:00.317"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
